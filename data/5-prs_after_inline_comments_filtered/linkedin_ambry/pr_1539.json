{"pr_number": 1539, "pr_title": "Return failure reason in http header for undelete", "pr_createdAt": "2020-05-28T02:09:40Z", "pr_url": "https://github.com/linkedin/ambry/pull/1539", "timeline": [{"oid": "8781fb5388e29ad472cd8cb421f59d4404025104", "url": "https://github.com/linkedin/ambry/commit/8781fb5388e29ad472cd8cb421f59d4404025104", "message": "Return failure reason in http header for undelete", "committedDate": "2020-05-28T02:07:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTIyMg==", "url": "https://github.com/linkedin/ambry/pull/1539#discussion_r431599222", "bodyText": "sorry, I realize that setting this option whenever a failure reason needs to be sent creates a lot of duplicate code. Maybe a better solution would be to have a request-level internal key that can be set to true when that request should be allowed to receive error info (for any exception type).\nTHe approach in this PR should work, though!", "author": "cgtz", "createdAt": "2020-05-28T06:01:33Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/FrontendRestRequestService.java", "diffHunk": "@@ -257,6 +256,10 @@ public void handlePut(RestRequest restRequest, RestResponseChannel restResponseC\n       } else if (requestPath.matchesOperation(Operations.UNDELETE) && frontendConfig.enableUndelete) {\n         // If the undelete is not enabled, then treat it as unrecognized operation.\n         undeleteHandler.handle(restRequest, restResponseChannel, (r, e) -> {\n+          if (e instanceof RouterException) {\n+            e = new RestServiceException(e.getMessage(),\n+                RestServiceErrorCode.getRestServiceErrorCode(((RouterException) e).getErrorCode()), true);", "originalCommit": "8781fb5388e29ad472cd8cb421f59d4404025104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2MTQxNA==", "url": "https://github.com/linkedin/ambry/pull/1539#discussion_r432161414", "bodyText": "This is a good idea, updated the PR to use an internal key.", "author": "justinlin-linkedin", "createdAt": "2020-05-28T22:35:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTIyMg=="}], "type": "inlineReview"}, {"oid": "c5634689be8428674c5247880a53ea5324dfe533", "url": "https://github.com/linkedin/ambry/commit/c5634689be8428674c5247880a53ea5324dfe533", "message": "Address comments", "committedDate": "2020-05-28T22:29:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5NTQxNA==", "url": "https://github.com/linkedin/ambry/pull/1539#discussion_r432195414", "bodyText": "thanks for making this change! I can change some of the code inside of AmbryLI to use this instead of the old approach.", "author": "cgtz", "createdAt": "2020-05-29T00:31:23Z", "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -297,6 +296,11 @@\n      * The key for the {@link RequestPath} that represents the parsed path of an incoming request.\n      */\n     public static final String REQUEST_PATH = KEY_PREFIX + \"request-path\";\n+\n+    /**\n+     * To be set to {@code true} if failures reason should be attached to frontend responses.\n+     */\n+    public static final String SEND_FAILURE_REASON = KEY_PREFIX + \"send-failure-reason\";", "originalCommit": "c5634689be8428674c5247880a53ea5324dfe533", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNDk3NA==", "url": "https://github.com/linkedin/ambry/pull/1539#discussion_r432634974", "bodyText": "why is this changed to onBlobUndeleted ?", "author": "zzmao", "createdAt": "2020-05-29T17:31:55Z", "path": "ambry-test-utils/src/main/java/com/github/ambry/router/InMemoryRouter.java", "diffHunk": "@@ -335,15 +335,13 @@ public void setLifeVersion(short lifeVersion) {\n       checkBlobId(blobId);\n       if (!blobs.containsKey(blobId)) {\n         exception = new RouterException(\"Blob not found\", RouterErrorCode.BlobDoesNotExist);\n-      } else if (undeletedBlobs.contains(blobId)) {\n-        exception = new RouterException(\"Blob already undeleted\", RouterErrorCode.BlobUndeleted);\n       } else if (!deletedBlobs.contains(blobId)) {\n         exception = new RouterException(\"Blob not deleted\", RouterErrorCode.BlobNotDeleted);\n       }\n       undeletedBlobs.add(blobId);\n       deletedBlobs.remove(blobId);\n       if (notificationSystem != null) {\n-        notificationSystem.onBlobDeleted(blobId, serviceId, null, null);\n+        notificationSystem.onBlobUndeleted(blobId, serviceId, null, null);", "originalCommit": "c5634689be8428674c5247880a53ea5324dfe533", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNTgwMg==", "url": "https://github.com/linkedin/ambry/pull/1539#discussion_r432635802", "bodyText": "This was a mistake, this is actually undelete function, but I copied the function from delete and forgot to change onBlobDeleted to onBlobUndeleted. Now I am changing it.", "author": "justinlin-linkedin", "createdAt": "2020-05-29T17:33:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNDk3NA=="}], "type": "inlineReview"}]}