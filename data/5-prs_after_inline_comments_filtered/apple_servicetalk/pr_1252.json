{"pr_number": 1252, "pr_title": "ReactiveStreamsAdapters support for Single and Completable", "pr_createdAt": "2020-12-08T05:05:04Z", "pr_url": "https://github.com/apple/servicetalk/pull/1252", "timeline": [{"oid": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d", "url": "https://github.com/apple/servicetalk/commit/15464f82642a2b6bacd3e9eee8c0fda0fa3e154d", "message": "ReactiveStreamsAdapters support for Single and Completable\n\nMotivation:\nReactiveStreamsAdapters currently only supports Publisher type. Users\ncan manually convert from Single and Completable to Publisher, but this\nisn't a streamlined approach.\n\nModifications:\n- Add conversion methods for Single and Completable to RS Publisher in\nReactiveStreamsAdapters\n\nResult:\nDirect conversions from all concurrent-api types to RS Publisher.", "committedDate": "2020-12-08T05:03:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2NjkwNg==", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538066906", "bodyText": "Single -> SingleSource", "author": "idelpivnitskiy", "createdAt": "2020-12-08T06:25:41Z", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "originalCommit": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2Nzg5NQ==", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538067895", "bodyText": "Single -> Completable", "author": "idelpivnitskiy", "createdAt": "2020-12-08T06:28:00Z", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link SingleSource}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(SingleSource<T> source) {\n+        return toReactiveStreamsPublisher(fromSource(source).toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link Completable} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "originalCommit": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2ODUwNQ==", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538068505", "bodyText": "Single -> CompletableSource", "author": "idelpivnitskiy", "createdAt": "2020-12-08T06:29:36Z", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link SingleSource}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(SingleSource<T> source) {\n+        return toReactiveStreamsPublisher(fromSource(source).toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link Completable} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Completable}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Completable source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link CompletableSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "originalCommit": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "de715cf55ca1434ad70d05f141ae19561742a67e", "url": "https://github.com/apple/servicetalk/commit/de715cf55ca1434ad70d05f141ae19561742a67e", "message": "fix javadocs", "committedDate": "2020-12-08T18:29:05Z", "type": "commit"}]}