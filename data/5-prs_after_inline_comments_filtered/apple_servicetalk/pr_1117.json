{"pr_number": 1117, "pr_title": "Add missed overrides for the client builders", "pr_createdAt": "2020-08-05T23:45:15Z", "pr_url": "https://github.com/apple/servicetalk/pull/1117", "timeline": [{"oid": "8e91731f8555b9a9ff86b44051ecdb481deca5c7", "url": "https://github.com/apple/servicetalk/commit/8e91731f8555b9a9ff86b44051ecdb481deca5c7", "message": "Add missed overrides for the client builders\n\nMotivation:\n\nSome methods are not overridden in `BaseSingleAddressHttpClientBuilder`\nand `MultiAddressHttpClientBuilder`. Users have to cast if they use\nthose missed methods on this builders.\n\nModifications:\n\n- Add overrides for `BaseSingleAddressHttpClientBuilder`: `executionStrategy`\nand `appendClientFilter`;\n- Add overrides for `MultiAddressHttpClientBuilder.java`: `protocols`;\n\nResult:\n\nUsers can use fluent builder API without need to cast builder types.", "committedDate": "2020-08-05T23:44:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mjc5MQ==", "url": "https://github.com/apple/servicetalk/pull/1117#discussion_r466072791", "bodyText": "can you clarify why the cast approach is used here?", "author": "Scottmitch", "createdAt": "2020-08-06T00:15:06Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java", "diffHunk": "@@ -114,8 +117,7 @@\n     @Override\n     public MultiAddressHttpClientBuilder<U, R> appendClientFilter(final Predicate<StreamingHttpRequest> predicate,\n                                                                   final StreamingHttpClientFilterFactory factory) {\n-        super.appendClientFilter(predicate, factory);\n-        return this;", "originalCommit": "8e91731f8555b9a9ff86b44051ecdb481deca5c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3OTIyMA==", "url": "https://github.com/apple/servicetalk/pull/1117#discussion_r466079220", "bodyText": "Just wanted to make it consistent to the approach we use in other places:\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java\n    \n    \n         Line 84\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (MultiAddressHttpClientBuilder<U, R>) super.appendConnectionFilter(predicate, factory); \n        \n    \n  \n\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/BaseSingleAddressHttpClientBuilder.java\n    \n    \n         Line 57\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (BaseSingleAddressHttpClientBuilder<U, R, SDE>) super.appendConnectionFilter(predicate, factory); \n        \n    \n  \n\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/PartitionedHttpClientBuilder.java\n    \n    \n        Lines 74 to 75\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (PartitionedHttpClientBuilder<U, R>) \n        \n\n        \n          \n                   super.appendConnectionFilter(predicate, factory);", "author": "idelpivnitskiy", "createdAt": "2020-08-06T00:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mjc5MQ=="}], "type": "inlineReview"}]}