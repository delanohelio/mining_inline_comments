{"pr_number": 1051, "pr_title": "`RoundRobinLoadBalancer` should not sort the addresses", "pr_createdAt": "2020-05-13T19:32:24Z", "pr_url": "https://github.com/apple/servicetalk/pull/1051", "timeline": [{"oid": "bf028ad2ffdc65adb3e58355f2ac955a2bc68aef", "url": "https://github.com/apple/servicetalk/commit/bf028ad2ffdc65adb3e58355f2ac955a2bc68aef", "message": "`RoundRobinLoadBalancer` should not sort the addresses\n\n__Motivation__\n\nFor quicker lookups on receiving Service discovery events,  `RoundRobinLoadBalancer` keeps a sorted list of addresses. This results in the same order of hosts for all client instances hence potentially creating hot spots. As, the sorting is not required functionally, we should avoid doing that.\n\n__Modification__\n\nUse unsorted address list and let service discoverer maintain order of addresses.\n\n__Result__\n\n`RoundRobinLoadBalancer` does not store sorted addresses.", "committedDate": "2020-05-13T19:30:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMzc3OQ==", "url": "https://github.com/apple/servicetalk/pull/1051#discussion_r424733779", "bodyText": "Doesn't look like we started to use equals and hashCode. Can we defer adding them for now?", "author": "idelpivnitskiy", "createdAt": "2020-05-13T21:12:03Z", "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -440,6 +423,25 @@ public Completable closeAsyncGracefully() {\n                     .map(AsyncCloseable::closeAsyncGracefully)::iterator);\n         }\n \n+        @Override\n+        public boolean equals(final Object o) {", "originalCommit": "bf028ad2ffdc65adb3e58355f2ac955a2bc68aef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ff4d54b44b8f68d40bbfd35e98a133b9fc06e3d", "url": "https://github.com/apple/servicetalk/commit/3ff4d54b44b8f68d40bbfd35e98a133b9fc06e3d", "message": "Review comments", "committedDate": "2020-05-13T22:18:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3MjcyMg==", "url": "https://github.com/apple/servicetalk/pull/1051#discussion_r424772722", "bodyText": "It is expected that the ServiceDiscoverer will filter duplicate events, and there is no modification outside of Subscriber#onNext(other than emptying the list). I think we can assume we won't find any duplicates on addition:\nThis will also avoid ArrayList copy/move of array elements after it has already been copied in the constructor.\n                            final ResolvedAddress addr = requireNonNull(event.address());\n                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                            if (event.isAvailable()) {\n                                refreshedAddresses = new ArrayList<>(currentAddresses.size() + 1);\n                                refreshedAddresses.addAll(currentAddresses);\n                                refreshedAddresses.add(new Host<>(addr));\n                            } else if (currentAddresses.isEmpty()) {\n                                refreshedAddresses = currentAddresses;\n                            } else {\n                                refreshedAddresses = new ArrayList<>(currentAddresses.size() - 1);\n                                for (Host<ResolvedAddress, C> host : (List<Host<ResolvedAddress, C>>) currentAddresses) {\n                                    if (host.address.equals(addr)) {\n                                        host.markInactive();\n                                    } else {\n                                        refreshedAddresses.add(host);\n                                    }\n                                }\n                            }\n                            return refreshedAddresses;", "author": "Scottmitch", "createdAt": "2020-05-13T22:44:09Z", "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -161,26 +150,29 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses = new ArrayList<>(currentAddresses);\n-                            final MutableAddressHost<ResolvedAddress, C> searchHost = new MutableAddressHost<>();\n-\n-                            searchHost.mutableAddress = event.address();\n-                            // Binary search because any insertion is performed at the index returned by the search,\n-                            // which is consistent with the ordering defined by the comparator\n-                            final int i = binarySearch(refreshedAddresses, searchHost, activeAddressComparator);\n-\n-                            if (event.isAvailable()) {\n-                                if (i < 0) {\n-                                    refreshedAddresses.add(-i - 1, new Host<>(event.address()));\n-                                }\n-                            } else if (i >= 0) {\n-                                Host<ResolvedAddress, C> removed = refreshedAddresses.remove(i);\n-                                if (removed != null) {\n-                                    removed.markInactive();\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n+                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);", "originalCommit": "3ff4d54b44b8f68d40bbfd35e98a133b9fc06e3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4MDk2Nw==", "url": "https://github.com/apple/servicetalk/pull/1051#discussion_r424780967", "bodyText": "I was thinking about double copying when we add an element. Unfortunately, refreshedAddresses.addAll(currentAddresses) does 2 copies internally. So, it will be the same as using new ArrayList(anotherList) + add with resize.\n\nIt is expected that the ServiceDiscoverer will filter duplicate events\n\nDNS SD currently does not filter duplicates. It takes a List from netty's resolver.resolveAll and passes it as-is. I didn't check netty's code but assume it just parses each DnsRecord from the response. If DNS response contains duplicated addresses, we will see them here.", "author": "idelpivnitskiy", "createdAt": "2020-05-13T23:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4MjIwNA==", "url": "https://github.com/apple/servicetalk/pull/1051#discussion_r424782204", "bodyText": "I think we can assume we won't find any duplicates on addition\n\nActually I think we should allow duplicates which enables folks to effectively add weights to certain hosts. I would prefer not to do these two changes (unsorted and allow dups) in the same PR though. So, ya feel free to send a followup", "author": "NiteshKant", "createdAt": "2020-05-13T23:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5MzM1Nw==", "url": "https://github.com/apple/servicetalk/pull/1051#discussion_r424793357", "bodyText": "#1052", "author": "Scottmitch", "createdAt": "2020-05-13T23:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3MjcyMg=="}], "type": "inlineReview"}]}