{"pr_number": 1076, "pr_title": "Replace MaxSizeBasedWriteDemandEstimator with EWMAWriteDemandEstimator", "pr_createdAt": "2020-06-02T04:35:31Z", "pr_url": "https://github.com/apple/servicetalk/pull/1076", "timeline": [{"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d", "url": "https://github.com/apple/servicetalk/commit/5032816d30a2f88a2c32ee3de6b9d566096d081d", "message": "Replace MaxSizeBasedWriteDemandEstimator with EWMAWriteDemandEstimator\n\nMotivation:\nMaxSizeBasedWriteDemandEstimator allocates an array of 32 elements by\ndefault to keep historical size information. This can introduce a lot of\nallocation and has been shown in benchmarks to consist of >3% of\nallocations inside a TLAB and >%90 of allocations outside of a TLAB. The\nestimation fidelity can be reduced with an Exponential Weighted Moving\nAverage given the loose estimation requirements which can also reduce\nthe allocation pressure.\n\nModification:\n- Remove MaxSizeBasedWriteDemandEstimator\n- Add EWMAWriteDemandEstimator which uses Exponential Weighted Moving\nAverage to estimate requestN\n\nResult:\nLess memory pressure introduces while estimating requestN for writing\ndata.", "committedDate": "2020-06-02T03:44:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxNjY5MQ==", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433616691", "bodyText": "we can make this more configurable in the future (e.g. 5 correlates to decay factor) ... but these classes aren't very exposed at the moment and I think we can defer until we get some more demand to expose.", "author": "Scottmitch", "createdAt": "2020-06-02T04:42:55Z", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/EWMAWriteDemandEstimator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import static io.servicetalk.transport.netty.internal.OverlappingCapacityAwareEstimator.SizeEstimator.defaultEstimator;\n+import static java.lang.Math.max;\n+\n+final class EWMAWriteDemandEstimator extends OverlappingCapacityAwareEstimator {\n+    private static final double WEIGHT_NEW = 1 / 5d;", "originalCommit": "5032816d30a2f88a2c32ee3de6b9d566096d081d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4OTUyMQ==", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433689521", "bodyText": "What is this import needed for ?", "author": "normanmaurer", "createdAt": "2020-06-02T07:57:35Z", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/OverlappingCapacityAwareEstimator.java", "diffHunk": "@@ -17,6 +17,8 @@\n \n import io.netty.channel.FileRegion;\n \n+import java.nio.ByteBuffer;", "originalCommit": "5032816d30a2f88a2c32ee3de6b9d566096d081d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyODQ2Nw==", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433928467", "bodyText": "good question, it isn't :) removed.", "author": "Scottmitch", "createdAt": "2020-06-02T14:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4OTUyMQ=="}], "type": "inlineReview"}, {"oid": "82a949b5c610d5973d7309b148f60ee07e3450e8", "url": "https://github.com/apple/servicetalk/commit/82a949b5c610d5973d7309b148f60ee07e3450e8", "message": "remove unused import/code", "committedDate": "2020-06-02T14:38:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNDA0OA==", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433934048", "bodyText": "btw why is this constructor needed at all ? This is private so it will never be used outside of this class which means we could just only keep the EWMAWriteDemandEstimator(long sizeAccumulator) constructor.", "author": "normanmaurer", "createdAt": "2020-06-02T14:46:46Z", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/EWMAWriteDemandEstimator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import static io.servicetalk.transport.netty.internal.OverlappingCapacityAwareEstimator.SizeEstimator.defaultEstimator;\n+import static java.lang.Math.max;\n+\n+final class EWMAWriteDemandEstimator extends OverlappingCapacityAwareEstimator {\n+    private static final double WEIGHT_NEW = 1 / 5d;\n+    private static final double WEIGHT_HISTORICAL = 1 - WEIGHT_NEW;\n+    private long sizeAccumulator;\n+\n+    EWMAWriteDemandEstimator() {\n+        this(1024);\n+    }\n+\n+    EWMAWriteDemandEstimator(long sizeAccumulator) {\n+        this(sizeAccumulator, defaultEstimator());\n+    }\n+\n+    private EWMAWriteDemandEstimator(long sizeAccumulator, SizeEstimator sizeEstimator) {", "originalCommit": "82a949b5c610d5973d7309b148f60ee07e3450e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzODM4Ng==", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433938386", "bodyText": "let me kill this for now", "author": "Scottmitch", "createdAt": "2020-06-02T14:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNDA0OA=="}], "type": "inlineReview"}, {"oid": "8aa96bf4e18cbe73925bb8a21c015ccb5aab01e7", "url": "https://github.com/apple/servicetalk/commit/8aa96bf4e18cbe73925bb8a21c015ccb5aab01e7", "message": "more cleanup", "committedDate": "2020-06-02T15:00:08Z", "type": "commit"}]}