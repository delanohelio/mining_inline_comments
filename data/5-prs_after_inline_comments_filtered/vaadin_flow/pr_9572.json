{"pr_number": 9572, "pr_title": "refactor: get Executor service from Lookup instead init params", "pr_createdAt": "2020-12-04T08:13:11Z", "pr_url": "https://github.com/vaadin/flow/pull/9572", "timeline": [{"oid": "41545c9eab291f340f220598b0ca491d641fe26b", "url": "https://github.com/vaadin/flow/commit/41545c9eab291f340f220598b0ca491d641fe26b", "message": "refactor: get Executor service from Lookup instead init params\n\nfixes #9570", "committedDate": "2020-12-04T08:02:08Z", "type": "commit"}, {"oid": "f38c46bbf14663acab5cb199c891c88094cae7d7", "url": "https://github.com/vaadin/flow/commit/f38c46bbf14663acab5cb199c891c88094cae7d7", "message": "fix: update tests with new local API", "committedDate": "2020-12-04T08:11:26Z", "type": "commit"}, {"oid": "e7be22d9fc43863b48a683cecf553bad08b25e3f", "url": "https://github.com/vaadin/flow/commit/e7be22d9fc43863b48a683cecf553bad08b25e3f", "message": "fix: fix javadocs", "committedDate": "2020-12-04T08:38:15Z", "type": "commit"}, {"oid": "c491c821e49c314e72482ace762a70a0f7103fa1", "url": "https://github.com/vaadin/flow/commit/c491c821e49c314e72482ace762a70a0f7103fa1", "message": "fix: fix tests", "committedDate": "2020-12-04T09:46:49Z", "type": "commit"}, {"oid": "a43b621ef122aaf80c28e9683beb3235ba2a9a43", "url": "https://github.com/vaadin/flow/commit/a43b621ef122aaf80c28e9683beb3235ba2a9a43", "message": "test: extend LookupInitializer test", "committedDate": "2020-12-04T10:20:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwNDYxMA==", "url": "https://github.com/vaadin/flow/pull/9572#discussion_r536004610", "bodyText": "Remove this use of \"Thread.sleep()\".", "author": "vaadin-bot", "createdAt": "2020-12-04T10:41:32Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerTest.java", "diffHunk": "@@ -529,13 +534,14 @@ public void start_twoInstances_secondInstanceUsesAnotherPort()\n         // since the timeout is quite big the server port still should be\n         // available and the second instance should try to reuse it\n \n-        DevModeHandler.start(0, configuration, npmFolder,\n+        DevModeHandler.start(0, createDevModeLookup(), npmFolder,\n                 CompletableFuture.completedFuture(null));\n \n         // make checks only if webpack has not yet completed\n \n-        DevModeHandler anotherHandler = DevModeHandler.start(0, configuration,\n-                npmFolder, CompletableFuture.completedFuture(null));\n+        DevModeHandler anotherHandler = DevModeHandler.start(0,\n+                createDevModeLookup(), npmFolder,\n+                CompletableFuture.completedFuture(null));\n \n         while (handler.getPort() == 0) {\n             Thread.sleep(100);", "originalCommit": "a43b621ef122aaf80c28e9683beb3235ba2a9a43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwNDYyNg==", "url": "https://github.com/vaadin/flow/pull/9572#discussion_r536004626", "bodyText": "A \"Set\" cannot contain a \"Class\"", "author": "vaadin-bot", "createdAt": "2020-12-04T10:41:33Z", "path": "flow-server/src/main/java/com/vaadin/flow/di/Lookup.java", "diffHunk": "@@ -89,4 +94,91 @@\n      *         returned)\n      */\n     <T> Collection<T> lookupAll(Class<T> serviceClass);\n+\n+    /**\n+     * Creates a lookup which contains (only) the provided {@code service} as\n+     * instance of given {@code serviceTypes}.\n+     * <p>\n+     * This method may be used to create a temporary lookup which then can be\n+     * used to extend an existing lookup via {@link #compose(Lookup, Lookup)}.\n+     * \n+     * @param <T>\n+     *            the service type\n+     * @param service\n+     *            the service object\n+     * @param serviceTypes\n+     *            the supertypes of the service which may be used to access the\n+     *            service\n+     * @return a lookup initialized with the given {@code service}\n+     */\n+    @SafeVarargs\n+    static <T> Lookup of(T service, Class<? super T>... serviceTypes) {\n+        Objects.requireNonNull(service);\n+        Set<Class<? super T>> services = Stream.of(serviceTypes).peek(type -> {\n+            if (!type.isInstance(service)) {\n+                throw new IllegalArgumentException(\n+                        \"Service type\" + service.getClass().getName()\n+                                + \" is not a subtype of \" + type.getName());\n+            }\n+        }).collect(Collectors.toSet());\n+        return new Lookup() {\n+\n+            @Override\n+            public <U> Collection<U> lookupAll(Class<U> serviceClass) {\n+                U service = lookup(serviceClass);\n+                return service == null ? Collections.emptyList()\n+                        : Collections.singleton(service);\n+            }\n+\n+            @Override\n+            public <U> U lookup(Class<U> serviceClass) {\n+                if (services.contains(serviceClass)) {", "originalCommit": "a43b621ef122aaf80c28e9683beb3235ba2a9a43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f2e096dd69d537a7534f1b762998a82611a125a6", "url": "https://github.com/vaadin/flow/commit/f2e096dd69d537a7534f1b762998a82611a125a6", "message": "fix: clarify Lookup javadocs", "committedDate": "2020-12-07T06:21:01Z", "type": "commit"}]}