{"pr_number": 52, "pr_title": "Add functionality to map over dataset elements in both graph and eager mode.", "pr_createdAt": "2020-05-10T23:51:38Z", "pr_url": "https://github.com/tensorflow/java/pull/52", "timeline": [{"oid": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "url": "https://github.com/tensorflow/java/commit/1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "message": "Add functionality to map over dataset elements in both graph and eager mode.", "committedDate": "2020-05-10T23:52:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxOTk2Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422719962", "bodyText": "You should check your copyright setting.", "author": "Craigacp", "createdAt": "2020-05-10T23:58:13Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\r\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\r\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\r", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjQ2Nw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722467", "bodyText": "Fixed all of these, I think!", "author": "dhruvrajan", "createdAt": "2020-05-11T00:18:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxOTk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxOTk4Mw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422719983", "bodyText": "No star imports", "author": "Craigacp", "createdAt": "2020-05-10T23:58:22Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -17,10 +17,8 @@\n \r\n import org.tensorflow.DataType;\r\n import org.tensorflow.Operand;\r\n-import org.tensorflow.framework.data.impl.BatchDataset;\r\n-import org.tensorflow.framework.data.impl.SkipDataset;\r\n-import org.tensorflow.framework.data.impl.TakeDataset;\r\n-import org.tensorflow.framework.data.impl.TensorSliceDataset;\r\n+import org.tensorflow.Output;\r\n+import org.tensorflow.framework.data.impl.*;\r", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjUwNw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722507", "bodyText": "Added single-imports", "author": "dhruvrajan", "createdAt": "2020-05-11T00:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxOTk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2Mjg3Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426162876", "bodyText": "Star import came back, check your IDE settings!", "author": "karllessard", "createdAt": "2020-05-16T15:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxOTk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDAzMA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720030", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-10T23:58:43Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/DatasetIterator.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjUxNQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722515", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDA4Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720086", "bodyText": "These seem to have gone back to a Python convention for the variable names rather than a Java one?", "author": "Craigacp", "createdAt": "2020-05-10T23:59:35Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/DatasetIterator.java", "diffHunk": "@@ -76,37 +82,37 @@\n  *\n  * <pre>{@code\n  * // Create input tensors\n- * Operand<?> features = tf.constant( ... );\n- * Operand<?> labels = tf.constant( ... );\n+ * Operand<?> XTensor = tf.constant( ... );\n+ * Operand<?> yTensor = tf.constant( ... );\n  *\n  * int BATCH_SIZE = ...\n  *\n  * Dataset dataset = Dataset\n- *         .fromTensorSlices(features, labels)\n+ *         .fromTensorSlices(XTensor, yTensor)\n  *         .batch(BATCH_SIZE);\n  * DatasetIterator iterator = dataset.makeIterator();\n  *\n  * Optimizer optimizer = ... // create an optimizer\n  *\n  * for (List<Operand<?>> components : dataset) {\n- *     Operand<?> featureBatch = components.get(0);\n- *     Operand<?> labelBatch = components.get(1);\n+ *     Operand<?> XBatch = components.get(0);\n+ *     Operand<?> yBatch = components.get(1);\n  *\n- *     loss = computeModelLoss(featureBatch, labelBatch);\n+ *     loss = computeModelLoss(X, y);", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjUyMg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722522", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDE3MA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720170", "bodyText": "Typo: \"componenet\"", "author": "Craigacp", "createdAt": "2020-05-11T00:00:18Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/DatasetIterator.java", "diffHunk": "@@ -119,7 +125,7 @@\n    * @param outputShapes A list of `Shape` objects corresponding to the shapes of each componenet of", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjUzOA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722538", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDE3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDMyMg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720322", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-11T00:01:39Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/BatchDataset.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjU1Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722552", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDM0Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720342", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-11T00:01:47Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/DatasetOptional.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjU3MA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722570", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDM0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDQxMA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720410", "bodyText": "Missing copyright and license.", "author": "Craigacp", "createdAt": "2020-05-11T00:02:34Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/MapIterator.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.tensorflow.framework.data.impl;", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjU3Mw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722573", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDQxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDUzMQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720531", "bodyText": "Where does tf come from here?", "author": "Craigacp", "createdAt": "2020-05-11T00:03:27Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/MapIterator.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.tensorflow.framework.data.impl;\n+\n+import org.tensorflow.DataType;\n+import org.tensorflow.Operand;\n+import org.tensorflow.framework.data.DatasetIterator;\n+import org.tensorflow.framework.data.DatasetOptional;\n+import org.tensorflow.op.Ops;\n+\n+import java.util.List;\n+import java.util.function.BiFunction;\n+\n+public class MapIterator extends DatasetIterator {\n+  private final BiFunction<Ops, List<Operand<?>>, List<Operand<?>>> mapper;\n+\n+  public MapIterator(\n+      DatasetIterator source,\n+      BiFunction<Ops, List<Operand<?>>, List<Operand<?>>> mapper) {\n+    super(source);\n+    this.mapper = mapper;\n+  }\n+\n+  @Override\n+  public List<Operand<?>> getNext() {\n+    return mapper.apply(tf, super.getNext());", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMTQwMw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422721403", "bodyText": "It's a protected field of the superclass DatasetIterator", "author": "dhruvrajan", "createdAt": "2020-05-11T00:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDU2Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720566", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-11T00:03:44Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/SkipDataset.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjU4Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722586", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY0MQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720641", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-11T00:04:28Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/TakeDataset.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjU5OQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722599", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY1Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720656", "bodyText": "Missing copyright and license", "author": "Craigacp", "createdAt": "2020-05-11T00:04:35Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/TFRecordDataset.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.tensorflow.framework.data.impl;", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjg2Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722866", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY4MQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720681", "bodyText": "Copyright", "author": "Craigacp", "createdAt": "2020-05-11T00:04:49Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/TensorSliceDataset.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMzA0Mw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422723043", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY5Nw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720697", "bodyText": "Missing copyright and license", "author": "Craigacp", "createdAt": "2020-05-11T00:04:58Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/TextLineDataset.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.tensorflow.framework.data.impl;", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjg5MQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722891", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDY5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDczMg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720732", "bodyText": "No star imports", "author": "Craigacp", "createdAt": "2020-05-11T00:05:18Z", "path": "tensorflow-framework/src/test/java/org/tensorflow/framework/data/MapDatasetTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package org.tensorflow.framework.data;\n+\n+import org.tensorflow.*;", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMzA4Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422723082", "bodyText": "Added single imports", "author": "dhruvrajan", "createdAt": "2020-05-11T00:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDc1NQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422720755", "bodyText": "Missing copyright and license", "author": "Craigacp", "createdAt": "2020-05-11T00:05:25Z", "path": "tensorflow-framework/src/test/java/org/tensorflow/framework/data/MapDatasetTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package org.tensorflow.framework.data;", "originalCommit": "1e841e4ca57be6a0a3423a4232364b6e26a7e1b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMjkzMA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422722930", "bodyText": "Fixed", "author": "dhruvrajan", "createdAt": "2020-05-11T00:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDc1NQ=="}], "type": "inlineReview"}, {"oid": "93663589e3291ff8f68c358059a3944d90ee9152", "url": "https://github.com/tensorflow/java/commit/93663589e3291ff8f68c358059a3944d90ee9152", "message": "fix copyright comments", "committedDate": "2020-05-11T00:09:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMTQ3Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422721476", "bodyText": "Random g. Do you use vim perchance?", "author": "Craigacp", "createdAt": "2020-05-11T00:11:10Z", "path": "tensorflow-framework/src/test/java/org/tensorflow/framework/data/TakeDatasetTest.java", "diffHunk": "@@ -11,7 +25,7 @@\n import java.util.List;\n \n import static org.junit.Assert.assertEquals;\n-\n+g", "originalCommit": "93663589e3291ff8f68c358059a3944d90ee9152", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMzEwOA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r422723108", "bodyText": "thanks, fixed!", "author": "dhruvrajan", "createdAt": "2020-05-11T00:23:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMTQ3Ng=="}], "type": "inlineReview"}, {"oid": "59be22d79b4ef2a941510c764820e4469d11a5ad", "url": "https://github.com/tensorflow/java/commit/59be22d79b4ef2a941510c764820e4469d11a5ad", "message": "fix copyright comments", "committedDate": "2020-05-11T00:12:06Z", "type": "forcePushed"}, {"oid": "2ccf9a3f0e2d7a72537022f8b067f9f03279120a", "url": "https://github.com/tensorflow/java/commit/2ccf9a3f0e2d7a72537022f8b067f9f03279120a", "message": "fix copyright comments", "committedDate": "2020-05-11T00:13:13Z", "type": "forcePushed"}, {"oid": "28b49abe00732e6438cb54263c9eeda7546c4a0c", "url": "https://github.com/tensorflow/java/commit/28b49abe00732e6438cb54263c9eeda7546c4a0c", "message": "fix copyright comments", "committedDate": "2020-05-11T00:14:40Z", "type": "forcePushed"}, {"oid": "66319d89b265f143154133e5e1e6e9989cd0d3a8", "url": "https://github.com/tensorflow/java/commit/66319d89b265f143154133e5e1e6e9989cd0d3a8", "message": "fix copyright comments", "committedDate": "2020-05-11T00:16:52Z", "type": "forcePushed"}, {"oid": "2aff47af0cf267d03366ec3ea12d65fbc19d5c1a", "url": "https://github.com/tensorflow/java/commit/2aff47af0cf267d03366ec3ea12d65fbc19d5c1a", "message": "use captured Ops object for dataset map", "committedDate": "2020-05-11T06:33:42Z", "type": "forcePushed"}, {"oid": "9934179919462768e01f9b32714a69e20188a460", "url": "https://github.com/tensorflow/java/commit/9934179919462768e01f9b32714a69e20188a460", "message": "use captured Ops object for dataset map", "committedDate": "2020-05-11T06:55:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTI3Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r424849272", "bodyText": "While streams are more convenient syntactically, they are not as performant as a good ol' iteration so since we are writing a framework, maybe we should opt for the fastest path?", "author": "karllessard", "createdAt": "2020-05-14T03:24:15Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/DatasetIterator.java", "diffHunk": "@@ -235,6 +248,69 @@ public static DatasetIterator fromStructure(\n     return new DatasetIterator(tf, iteratorResource, outputTypes, outputShapes);\n   }\n \n+  /**\n+   * Returns a new DatasetIterator which maps a function across all elements from this iterator, on\n+   * a single component of each element.\n+   *\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\n+   * labels).\n+   *\n+   * <p>Calling `iterator.mapOneComponent(0, features -> tf.math.mul(features,\n+   * tf.constant(2)))` will map the function over the `features` component of each element,\n+   * multiplying each by 2.\n+   *\n+   * @param index The index of the component to transform.\n+   * @param mapper The function to apply to the target component.\n+   * @return A new DatasetIterator applying `mapper` to the component at the chosen index.\n+   */\n+  public DatasetIterator mapOneComponent(int index, Function<Operand<?>, Operand<?>> mapper) {\n+    return map(\n+        outputs -> {\n+          List<Operand<?>> newComponents = new ArrayList<>(outputs);\n+          newComponents.set(index, mapper.apply(outputs.get(index)));\n+          return newComponents;\n+        });\n+  }\n+\n+  /**\n+   * Returns a new DatasetIterator which maps a function across all elements from this iterator, on\n+   * all components of each element.\n+   *\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\n+   * labels).\n+   *\n+   * <p>Calling `iterator.mapAllComponents(component -> tf.math.mul(component,\n+   * tf.constant(2)))` will map the function over the both the `features` and `labels` components of\n+   * each element, multiplying them all by 2\n+   *\n+   * @param mapper The function to apply to each component\n+   * @return A new DatasetIterator applying `mapper` to all components of each element.\n+   */\n+  public DatasetIterator mapAllComponents(Function<Operand<?>, Operand<?>> mapper) {\n+    return map(outputs -> outputs.stream().map(mapper::apply).collect(Collectors.toList()));", "originalCommit": "9934179919462768e01f9b32714a69e20188a460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzQwMw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426117403", "bodyText": "Here I think it doesn't matter too much,  the list of outputs is in the vast majority of cases going to have only 2 elements. Though we could change it:\npublic DatasetIterator mapAllComponents(Function<Operand<?>, Operand<?>> mapper) {\n    return map(\n        outputs -> {\n          List<Operand<?>> mappedOutputs = new ArrayList<>();\n          outputs.forEach(o -> mappedOutputs.add(mapper.apply(o)));\n          return mappedOutputs;\n        });\n  }\n\nreadability here is a bit more important here. I think. Without streams it gets a little needlessly long-winded. What do you think?", "author": "dhruvrajan", "createdAt": "2020-05-16T04:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTI3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MDk2Nw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426170967", "bodyText": "(btw not a large preference, I made that change anyway, happy to move forward)", "author": "dhruvrajan", "createdAt": "2020-05-16T16:59:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1Njc1Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r424856756", "bodyText": "Maybe just a little preference to pass explicitly the Ops parameter instead of getting it from the source dataset, otherwise it sounds like the Ops instance is \"owned\" by the source while we simply want to share it across object creation.\nBTW, it looks like this constructor could be package-private? And I think it's the case for other classes in the dataset framework, might worth going through them and protect those we can so we enforce the usage of the factory methods instead.", "author": "karllessard", "createdAt": "2020-05-14T03:56:24Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/MapOptional.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 The TensorFlow Authors. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.tensorflow.framework.data.impl;\n+\n+import org.tensorflow.DataType;\n+import org.tensorflow.Operand;\n+import org.tensorflow.framework.data.DatasetOptional;\n+import org.tensorflow.tools.Shape;\n+\n+import java.util.List;\n+import java.util.function.Function;\n+\n+public class MapOptional extends DatasetOptional {\n+  private final Function<List<Operand<?>>, List<Operand<?>>> mapper;\n+\n+  public MapOptional(\n+      DatasetOptional source,\n+      Function<List<Operand<?>>, List<Operand<?>>> mapper,\n+      List<DataType<?>> outputTypes,\n+      List<Shape> outputShapes) {\n+    super(source.getOpsInstance(), source.getOptionalVariant(), outputTypes, outputShapes);", "originalCommit": "9934179919462768e01f9b32714a69e20188a460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzU3OQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426117579", "bodyText": "I refactored this constructor to take a DatasetOptional.\nSince these constructors are in the org.tensorflow.data.impl package, but are constructed in org.tensorflow.data.Dataset, I don't think the constructors can trivially be made package-private...", "author": "dhruvrajan", "createdAt": "2020-05-16T04:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1Njc1Ng=="}], "type": "inlineReview"}, {"oid": "0a49745b06e4fd00fb569488b7fecf66da75f710", "url": "https://github.com/tensorflow/java/commit/0a49745b06e4fd00fb569488b7fecf66da75f710", "message": "refactor method and constructor access", "committedDate": "2020-05-16T04:37:36Z", "type": "forcePushed"}, {"oid": "bd70c9d557066ebb76b90c64382d6bf062f776fb", "url": "https://github.com/tensorflow/java/commit/bd70c9d557066ebb76b90c64382d6bf062f776fb", "message": "Add functionality to map over dataset elements in both graph and eager mode.", "committedDate": "2020-05-16T04:49:19Z", "type": "commit"}, {"oid": "37ed42228e8f5843a5b9168f882eb45e83ad9c67", "url": "https://github.com/tensorflow/java/commit/37ed42228e8f5843a5b9168f882eb45e83ad9c67", "message": "fix copyright comments", "committedDate": "2020-05-16T04:49:19Z", "type": "commit"}, {"oid": "6c86d38e2d232453c9bbd5606a9c890a2db132e2", "url": "https://github.com/tensorflow/java/commit/6c86d38e2d232453c9bbd5606a9c890a2db132e2", "message": "use captured Ops object for dataset map", "committedDate": "2020-05-16T04:49:19Z", "type": "commit"}, {"oid": "f2eb8cbda4a9d74256d44f863695a28fe1ae8ee0", "url": "https://github.com/tensorflow/java/commit/f2eb8cbda4a9d74256d44f863695a28fe1ae8ee0", "message": "refactor method and constructor access", "committedDate": "2020-05-16T04:49:19Z", "type": "commit"}, {"oid": "48cb21ede359ec9685571a9d5fc6c9c0f90d8084", "url": "https://github.com/tensorflow/java/commit/48cb21ede359ec9685571a9d5fc6c9c0f90d8084", "message": "move map methods to Dataset class", "committedDate": "2020-05-17T00:09:01Z", "type": "forcePushed"}, {"oid": "3aca9ed97b682d8a98aaf801a6f8ca7bd56927fe", "url": "https://github.com/tensorflow/java/commit/3aca9ed97b682d8a98aaf801a6f8ca7bd56927fe", "message": "move map methods to Dataset class", "committedDate": "2020-05-17T00:13:05Z", "type": "forcePushed"}, {"oid": "57ec8ea9d61c59191cab95716e1483d6e1c2073b", "url": "https://github.com/tensorflow/java/commit/57ec8ea9d61c59191cab95716e1483d6e1c2073b", "message": "move map methods to Dataset class", "committedDate": "2020-05-17T00:19:14Z", "type": "forcePushed"}, {"oid": "9ca40747021b1b401cb3f4a63aaac800562549d5", "url": "https://github.com/tensorflow/java/commit/9ca40747021b1b401cb3f4a63aaac800562549d5", "message": "move map methods to Dataset class", "committedDate": "2020-05-17T00:57:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5MzEzNQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426993135", "bodyText": "Update the return type to Dataset instead of DatasetIterator (same for other methods below)", "author": "karllessard", "createdAt": "2020-05-19T02:25:11Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -107,6 +123,72 @@ public final Dataset take(long count) {\n         tf, this.getVariant(), tf.constant(count), this.getOutputTypes(), this.getOutputShapes());\r\n   }\r\n \r\n+  /**\r\n+   * Returns a new Dataset which maps a function across all elements from this iterator, on a single\r\n+   * component of each element.\r\n+   *\r\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\r\n+   * labels).\r\n+   *\r\n+   * <p>Calling `iterator.mapOneComponent(0, features -> tf.math.mul(features, tf.constant(2)))`\r\n+   * will map the function over the `features` component of each element, multiplying each by 2.\r\n+   *\r\n+   * @param index The index of the component to transform.\r\n+   * @param mapper The function to apply to the target component.\r\n+   * @return A new DatasetIterator applying `mapper` to the component at the chosen index.\r", "originalCommit": "9ca40747021b1b401cb3f4a63aaac800562549d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMTkxOA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r427021918", "bodyText": "Thanks, updated this!", "author": "dhruvrajan", "createdAt": "2020-05-19T04:23:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5MzEzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5MzMwOA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426993308", "bodyText": "update to dataset.mapOneComponent (idem for other methods below).\nBy the way in Java, you want to use {@code ...} for code snippets in your Javadoc instead of backquotes.", "author": "karllessard", "createdAt": "2020-05-19T02:25:46Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -107,6 +123,72 @@ public final Dataset take(long count) {\n         tf, this.getVariant(), tf.constant(count), this.getOutputTypes(), this.getOutputShapes());\r\n   }\r\n \r\n+  /**\r\n+   * Returns a new Dataset which maps a function across all elements from this iterator, on a single\r\n+   * component of each element.\r\n+   *\r\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\r\n+   * labels).\r\n+   *\r\n+   * <p>Calling `iterator.mapOneComponent(0, features -> tf.math.mul(features, tf.constant(2)))`\r", "originalCommit": "9ca40747021b1b401cb3f4a63aaac800562549d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMTk0OQ==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r427021949", "bodyText": "Updated these!", "author": "dhruvrajan", "createdAt": "2020-05-19T04:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5MzMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NDE0Mg==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426994142", "bodyText": "again instead of triple backquotes ``` (which should help with Javadoc, did it?, you should go with a block like this:\n<pre>{@code\nyour \nmultiline \ncode\nhere\n}</pre>", "author": "karllessard", "createdAt": "2020-05-19T02:29:05Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -107,6 +123,72 @@ public final Dataset take(long count) {\n         tf, this.getVariant(), tf.constant(count), this.getOutputTypes(), this.getOutputShapes());\r\n   }\r\n \r\n+  /**\r\n+   * Returns a new Dataset which maps a function across all elements from this iterator, on a single\r\n+   * component of each element.\r\n+   *\r\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\r\n+   * labels).\r\n+   *\r\n+   * <p>Calling `iterator.mapOneComponent(0, features -> tf.math.mul(features, tf.constant(2)))`\r\n+   * will map the function over the `features` component of each element, multiplying each by 2.\r\n+   *\r\n+   * @param index The index of the component to transform.\r\n+   * @param mapper The function to apply to the target component.\r\n+   * @return A new DatasetIterator applying `mapper` to the component at the chosen index.\r\n+   */\r\n+  public Dataset mapOneComponent(int index, Function<Operand<?>, Operand<?>> mapper) {\r\n+    return map(\r\n+        outputs -> {\r\n+          List<Operand<?>> newComponents = new ArrayList<>(outputs);\r\n+          newComponents.set(index, mapper.apply(outputs.get(index)));\r\n+          return newComponents;\r\n+        });\r\n+  }\r\n+\r\n+  /**\r\n+   * Returns a new Dataset which maps a function across all elements from this iterator, on all\r\n+   * components of each element.\r\n+   *\r\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\r\n+   * labels).\r\n+   *\r\n+   * <p>Calling `iterator.mapAllComponents(component -> tf.math.mul(component, tf.constant(2)))`\r\n+   * will map the function over the both the `features` and `labels` components of each element,\r\n+   * multiplying them all by 2\r\n+   *\r\n+   * @param mapper The function to apply to each component\r\n+   * @return A new DatasetIterator applying `mapper` to all components of each element.\r\n+   */\r\n+  public Dataset mapAllComponents(Function<Operand<?>, Operand<?>> mapper) {\r\n+    return map(\r\n+        outputs -> {\r\n+          List<Operand<?>> mappedOutputs = new ArrayList<>();\r\n+          outputs.forEach(o -> mappedOutputs.add(mapper.apply(o)));\r\n+          return mappedOutputs;\r\n+        });\r\n+  }\r\n+\r\n+  /**\r\n+   * Returns a new Dataset which maps a function over all elements returned by this iterator.\r\n+   *\r\n+   * <p>For example, suppose each element is a `List<Operand<?>>` with 2 components: (features,\r\n+   * labels).\r\n+   *\r\n+   * <p>Calling ``` iterator.map(components -> { Operand<?> features = components.get(0); Operand<?>\r\n+   * labels = components.get(1);\r\n+   *\r\n+   * <p>return Arrays.asList( tf.math.mul(features, tf.constant(2)), tf.math.mul(labels,\r\n+   * tf.constant(5)) ); }) ``` will map the function over the `features` and `labels` components,\r", "originalCommit": "9ca40747021b1b401cb3f4a63aaac800562549d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMTk3Ng==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r427021976", "bodyText": "Thanks, updated!", "author": "dhruvrajan", "createdAt": "2020-05-19T04:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NDE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NDQ5OA==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r426994498", "bodyText": "missing copyrights", "author": "karllessard", "createdAt": "2020-05-19T02:30:19Z", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/impl/MapDataset.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.tensorflow.framework.data.impl;", "originalCommit": "9ca40747021b1b401cb3f4a63aaac800562549d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMTk5Nw==", "url": "https://github.com/tensorflow/java/pull/52#discussion_r427021997", "bodyText": "Added it!", "author": "dhruvrajan", "createdAt": "2020-05-19T04:23:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NDQ5OA=="}], "type": "inlineReview"}, {"oid": "efc4b350591329629ad5a3cd1909a75dc63c9f78", "url": "https://github.com/tensorflow/java/commit/efc4b350591329629ad5a3cd1909a75dc63c9f78", "message": "move map methods to Dataset class", "committedDate": "2020-05-19T04:22:23Z", "type": "commit"}, {"oid": "efc4b350591329629ad5a3cd1909a75dc63c9f78", "url": "https://github.com/tensorflow/java/commit/efc4b350591329629ad5a3cd1909a75dc63c9f78", "message": "move map methods to Dataset class", "committedDate": "2020-05-19T04:22:23Z", "type": "forcePushed"}]}