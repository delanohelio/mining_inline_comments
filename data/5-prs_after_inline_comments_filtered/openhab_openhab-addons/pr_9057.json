{"pr_number": 9057, "pr_title": "[amazonechocontrol] improvements and bug fixes", "pr_createdAt": "2020-11-17T18:52:50Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9057", "timeline": [{"oid": "8816a6f10087417da3b254b252f82c5f25eacab6", "url": "https://github.com/openhab/openhab-addons/commit/8816a6f10087417da3b254b252f82c5f25eacab6", "message": "fixed: InterrupedException\n\nSigned-off-by: Tom Blum trinitus01@googlemail.com", "committedDate": "2020-11-17T17:59:41Z", "type": "commit"}, {"oid": "530a97d4df2ead7095cb782745c8ac14182a9e61", "url": "https://github.com/openhab/openhab-addons/commit/530a97d4df2ead7095cb782745c8ac14182a9e61", "message": "changed: single and group queues to device queue\nadded: standard volume to speak request\n\nSigned-off-by: Tom Blum trinitus01@googlemail.com", "committedDate": "2020-11-17T18:00:28Z", "type": "commit"}, {"oid": "67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "url": "https://github.com/openhab/openhab-addons/commit/67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "message": "changed: log from info to debug\n\nSigned-off-by: Tom Blum trinitus01@googlemail.com", "committedDate": "2020-11-17T18:00:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQxNTYwOA==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r525415608", "bodyText": "Judging from how you are using this, please change devicesRunning to a Lock and use tryLock instead.", "author": "cpmeister", "createdAt": "2020-11-17T19:07:46Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1553,87 +1558,97 @@ public void executeSequenceCommand(@Nullable Device device, String command,\n     }\n \n     private void executeSequenceNode(Device[] devices, JsonObject nodeToExecute) {\n-        if (devices.length == 1 && groups.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())\n-                || devices.length > 1\n-                        && singles.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())) {\n-            if (singleGroupTimer != null) {\n-                singleGroupTimer.cancel(true);\n-                singleGroupTimer = null;\n+        QueueObject queueObject = new QueueObject();\n+        queueObject.devices = devices;\n+        queueObject.nodeToExecute = nodeToExecute;\n+        String serial = \"\";\n+        for (Device device : devices) {\n+            if (!this.devices.containsKey(device.serialNumber)) {\n+                this.devices.put(device.serialNumber, new LinkedBlockingQueue<>());\n             }\n-            singleGroupTimer = scheduler.schedule(() -> executeSequenceNode(devices, nodeToExecute), 500,\n-                    TimeUnit.MILLISECONDS);\n-\n-            return;\n+            this.devices.get(device.serialNumber).offer(queueObject);\n+            serial = serial + device.serialNumber + \" \";\n         }\n+        logger.debug(\"added {} device {}\", queueObject.hashCode(), serial);\n+    }\n \n-        if (devices.length == 1) {\n-            if (!singles.containsKey(devices[0])) {\n-                singles.put(devices[0], new QueueObject());\n-            }\n-            singles.get(devices[0]).queue.add(nodeToExecute);\n-        } else {\n-            if (!groups.containsKey(devices[0])) {\n-                groups.put(devices[0], new QueueObject());\n+    private void handleExecuteSequenceNode() {\n+        if (devicesRunning.compareAndSet(false, true)) {", "originalCommit": "67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQxOTg1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r525419851", "bodyText": "Since you are now allowing the throwing of interrupts, you might as well group the interrupt related exceptions together.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (InterruptedException e) {\n          \n          \n            \n                        } catch (InterruptedException | InterruptedIOException e) {", "author": "cpmeister", "createdAt": "2020-11-17T19:12:37Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -691,12 +694,14 @@ public HttpsURLConnection makeRequest(String verb, String url, @Nullable String\n                         throw new HttpException(code,\n                                 verb + \" url '\" + url + \"' failed: \" + connection.getResponseMessage());\n                     }\n-                    try {\n-                        Thread.sleep(2000);\n-                    } catch (InterruptedException e) {\n-                        logger.warn(\"Unable to wait for next call to {}\", url, e);\n-                    }\n+                    Thread.sleep(2000);\n                 }\n+            } catch (InterruptedException e) {", "originalCommit": "67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyMzc1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r525423753", "bodyText": "computeIfAbsent would simplify this a bit.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!this.devices.containsKey(device.serialNumber)) {\n          \n          \n            \n                            this.devices.put(device.serialNumber, new LinkedBlockingQueue<>());\n          \n          \n            \n                        }\n          \n          \n            \n                        this.devices.computeIfAbsent(device.serialNumber, k -> new LinkedBlockingQueue<>()).offer(queueObject);", "author": "cpmeister", "createdAt": "2020-11-17T19:18:17Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1553,87 +1558,97 @@ public void executeSequenceCommand(@Nullable Device device, String command,\n     }\n \n     private void executeSequenceNode(Device[] devices, JsonObject nodeToExecute) {\n-        if (devices.length == 1 && groups.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())\n-                || devices.length > 1\n-                        && singles.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())) {\n-            if (singleGroupTimer != null) {\n-                singleGroupTimer.cancel(true);\n-                singleGroupTimer = null;\n+        QueueObject queueObject = new QueueObject();\n+        queueObject.devices = devices;\n+        queueObject.nodeToExecute = nodeToExecute;\n+        String serial = \"\";\n+        for (Device device : devices) {\n+            if (!this.devices.containsKey(device.serialNumber)) {\n+                this.devices.put(device.serialNumber, new LinkedBlockingQueue<>());\n             }", "originalCommit": "67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyODI4NA==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r525428284", "bodyText": "Could this be implemented using CompletableFuture instead?", "author": "cpmeister", "createdAt": "2020-11-17T19:25:48Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1553,87 +1558,97 @@ public void executeSequenceCommand(@Nullable Device device, String command,\n     }\n \n     private void executeSequenceNode(Device[] devices, JsonObject nodeToExecute) {\n-        if (devices.length == 1 && groups.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())\n-                || devices.length > 1\n-                        && singles.values().stream().anyMatch(queueObject -> queueObject.queueRunning.get())) {\n-            if (singleGroupTimer != null) {\n-                singleGroupTimer.cancel(true);\n-                singleGroupTimer = null;\n+        QueueObject queueObject = new QueueObject();\n+        queueObject.devices = devices;\n+        queueObject.nodeToExecute = nodeToExecute;\n+        String serial = \"\";\n+        for (Device device : devices) {\n+            if (!this.devices.containsKey(device.serialNumber)) {\n+                this.devices.put(device.serialNumber, new LinkedBlockingQueue<>());\n             }\n-            singleGroupTimer = scheduler.schedule(() -> executeSequenceNode(devices, nodeToExecute), 500,\n-                    TimeUnit.MILLISECONDS);\n-\n-            return;\n+            this.devices.get(device.serialNumber).offer(queueObject);\n+            serial = serial + device.serialNumber + \" \";\n         }\n+        logger.debug(\"added {} device {}\", queueObject.hashCode(), serial);\n+    }\n \n-        if (devices.length == 1) {\n-            if (!singles.containsKey(devices[0])) {\n-                singles.put(devices[0], new QueueObject());\n-            }\n-            singles.get(devices[0]).queue.add(nodeToExecute);\n-        } else {\n-            if (!groups.containsKey(devices[0])) {\n-                groups.put(devices[0], new QueueObject());\n+    private void handleExecuteSequenceNode() {\n+        if (devicesRunning.compareAndSet(false, true)) {\n+            try {\n+                for (String serialNumber : devices.keySet()) {\n+                    LinkedBlockingQueue<QueueObject> queueObjects = devices.get(serialNumber);\n+                    QueueObject queueObject = queueObjects.peek();\n+                    if (queueObject != null && (queueObject.future == null || queueObject.future.isDone())) {\n+                        boolean execute = true;\n+                        String serial = \"\";\n+                        for (Device tmpDevice : queueObject.devices) {\n+                            if (!tmpDevice.serialNumber.equals(serialNumber)) {\n+                                LinkedBlockingQueue<QueueObject> tmpQueueObjects = devices.get(tmpDevice.serialNumber);\n+                                QueueObject tmpQueueObject = tmpQueueObjects.peek();\n+                                if (!tmpQueueObject.equals(queueObject)\n+                                        || (tmpQueueObject.future != null && !queueObject.future.isDone())) {\n+                                    execute = false;\n+                                    break;\n+                                }\n+                                serial = serial + tmpDevice.serialNumber + \" \";\n+                            }\n+                        }\n+                        if (execute) {\n+                            queueObject.future = scheduler.submit(() -> queuedExecuteSequenceNode(queueObject));\n+                            logger.debug(\"thread {} device {}\", queueObject.hashCode(), serial);\n+                        }\n+                    }", "originalCommit": "67e66176c2078fa377796abb0b9d2d5ddd1f4f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwNzEzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r526807139", "bodyText": "Probably. But I would prefer to leave it as-is now as this part has a long history of wrong attempts to fix problems. It would be much easier to review the changes and see if they are really equivalent if there is nothing else in the PR.", "author": "J-N-K", "createdAt": "2020-11-19T11:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyODI4NA=="}], "type": "inlineReview"}, {"oid": "23c991e65c51b622d42a0197007ed51481b0e896", "url": "https://github.com/openhab/openhab-addons/commit/23c991e65c51b622d42a0197007ed51481b0e896", "message": "fix compile warnings\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-18T20:42:55Z", "type": "commit"}, {"oid": "4c5b692712ff35d97ed944928ab6f2752a9179e3", "url": "https://github.com/openhab/openhab-addons/commit/4c5b692712ff35d97ed944928ab6f2752a9179e3", "message": "final warnings\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T07:46:08Z", "type": "commit"}, {"oid": "e671cdfecf2c2fb1279753e3428a4d099c53d8c2", "url": "https://github.com/openhab/openhab-addons/commit/e671cdfecf2c2fb1279753e3428a4d099c53d8c2", "message": "remove dependency on StringUtils\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T09:45:10Z", "type": "commit"}, {"oid": "2829b3189c8249bd337267aff49752aed726fdcf", "url": "https://github.com/openhab/openhab-addons/commit/2829b3189c8249bd337267aff49752aed726fdcf", "message": "fix NPE\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T13:16:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkyNDgwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r526924809", "bodyText": "@mgeramb @Trinitus01\nDo you think this is correct? I assume that was the intended logic, because message.content.payload is always null at this place.\nl. 280/282 creates the message object with Message message = new Message(); which initializes message.content with a content = new Content();. In a newl created Content object the payload is null. message.content.payload is never assigned in the code between the object creation and here.", "author": "J-N-K", "createdAt": "2020-11-19T14:22:55Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/WebSocketConnection.java", "diffHunk": "@@ -349,19 +347,17 @@ Message parseIncomingMessage(byte[] data) {\n                             if (idDataElements.length == 2) {\n                                 payload = idDataElements[1];\n                             }\n-                            if (message.content.payload == null) {\n+                            if (payload == null) {\n                                 payload = readString(data, idx, data.length - 4 - idx);\n                             }", "originalCommit": "2829b3189c8249bd337267aff49752aed726fdcf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c38bde5791b31ffc2ec16b064639548b1bdc841", "url": "https://github.com/openhab/openhab-addons/commit/3c38bde5791b31ffc2ec16b064639548b1bdc841", "message": "more improvements\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T16:43:45Z", "type": "commit"}, {"oid": "c85feb7dc7a4477c86c7c38327914c884e58ce41", "url": "https://github.com/openhab/openhab-addons/commit/c85feb7dc7a4477c86c7c38327914c884e58ce41", "message": "fix HandlerPowerController\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T18:28:52Z", "type": "commit"}, {"oid": "da7b3b7c900550acb9d887607e017a98c6882bf7", "url": "https://github.com/openhab/openhab-addons/commit/da7b3b7c900550acb9d887607e017a98c6882bf7", "message": "attempt to solve stopping tts\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T18:31:06Z", "type": "commit"}, {"oid": "5c311cee2fa5bd92e5a401a76cda0c013fb5b1f2", "url": "https://github.com/openhab/openhab-addons/commit/5c311cee2fa5bd92e5a401a76cda0c013fb5b1f2", "message": "fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T18:40:32Z", "type": "commit"}, {"oid": "e6b06f76d778c790161fa5e0c65c91063a1fd29e", "url": "https://github.com/openhab/openhab-addons/commit/e6b06f76d778c790161fa5e0c65c91063a1fd29e", "message": "documentation\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T18:45:09Z", "type": "commit"}, {"oid": "e42d95aed2f918c0127d8c037860229ad7a010bb", "url": "https://github.com/openhab/openhab-addons/commit/e42d95aed2f918c0127d8c037860229ad7a010bb", "message": "timers\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T20:16:22Z", "type": "commit"}, {"oid": "834ab9f46b80077dfbe486ab9c8f1a42b63e19a5", "url": "https://github.com/openhab/openhab-addons/commit/834ab9f46b80077dfbe486ab9c8f1a42b63e19a5", "message": "logging powercontroller\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-19T20:16:39Z", "type": "commit"}, {"oid": "f7057b7f1f0f2723adf74c69f7be830551e39a0c", "url": "https://github.com/openhab/openhab-addons/commit/f7057b7f1f0f2723adf74c69f7be830551e39a0c", "message": "spotless fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-20T13:59:13Z", "type": "commit"}, {"oid": "c00def98f145980438b270855db95fc9ccae69ab", "url": "https://github.com/openhab/openhab-addons/commit/c00def98f145980438b270855db95fc9ccae69ab", "message": "fix smarthome devices not updating\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-21T07:54:37Z", "type": "commit"}, {"oid": "4a2f4a93c743396e1bb69472f30376e52f82fd79", "url": "https://github.com/openhab/openhab-addons/commit/4a2f4a93c743396e1bb69472f30376e52f82fd79", "message": "finalize smarthome device update fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-21T11:36:39Z", "type": "commit"}, {"oid": "e41cfa2dc6ea2be00c234f75e3b1ebd88dd511fe", "url": "https://github.com/openhab/openhab-addons/commit/e41cfa2dc6ea2be00c234f75e3b1ebd88dd511fe", "message": "additional device information logging for discovery\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-22T18:13:17Z", "type": "commit"}, {"oid": "82f88427bd761621e4baae2d82363b4d03a6cae4", "url": "https://github.com/openhab/openhab-addons/commit/82f88427bd761621e4baae2d82363b4d03a6cae4", "message": "fix color channel for smarthome devices\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-23T12:15:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3NzMyMA==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r528977320", "bodyText": "Was this a bugfix?", "author": "cpmeister", "createdAt": "2020-11-23T20:30:09Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/smarthome/HandlerColorController.java", "diffHunk": "@@ -134,15 +133,15 @@ public boolean handleCommand(Connection connection, SmartHomeDevice shd, String\n                     colorObject.addProperty(\"hue\", color.getHue());\n                     colorObject.addProperty(\"saturation\", color.getSaturation().floatValue() / 100);\n                     colorObject.addProperty(\"brightness\", color.getBrightness().floatValue() / 100);\n-                    connection.smartHomeCommand(entityId, \"setColor\", \"color\", colorObject);\n+                    connection.smartHomeCommand(entityId, \"setColor\", \"value\", colorObject);", "originalCommit": "82f88427bd761621e4baae2d82363b4d03a6cae4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk5NTkxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r528995919", "bodyText": "Exactly. Reported in the forum.", "author": "J-N-K", "createdAt": "2020-11-23T21:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3NzMyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk4MjAwMg==", "url": "https://github.com/openhab/openhab-addons/pull/9057#discussion_r528982002", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (strings != null && strings[0] != null) {\n          \n          \n            \n                                value = strings[0];\n          \n          \n            \n                            if (strings != null && && string.length > 0 && strings[0] != null) {\n          \n          \n            \n                                value = strings[0];", "author": "cpmeister", "createdAt": "2020-11-23T20:39:36Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/AccountServlet.java", "diffHunk": "@@ -192,15 +199,20 @@ void doVerb(String verb, @Nullable HttpServletRequest req, @Nullable HttpServlet\n \n             postDataBuilder.append(name);\n             postDataBuilder.append('=');\n-            String value = map.get(name)[0];\n+            String value = \"\";\n             if (name.equals(\"failedSignInCount\")) {\n                 value = \"ape:AA==\";\n+            } else {\n+                String[] strings = map.get(name);\n+                if (strings != null && strings[0] != null) {\n+                    value = strings[0];", "originalCommit": "82f88427bd761621e4baae2d82363b4d03a6cae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5194b0e13559a2814b67efdbd116856bc1805ce4", "url": "https://github.com/openhab/openhab-addons/commit/5194b0e13559a2814b67efdbd116856bc1805ce4", "message": "Update bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/AccountServlet.java\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2020-11-23T21:08:38Z", "type": "commit"}, {"oid": "626e091945768ac5612cb34190118c01ab8cd08b", "url": "https://github.com/openhab/openhab-addons/commit/626e091945768ac5612cb34190118c01ab8cd08b", "message": "fix typo\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-24T08:20:50Z", "type": "commit"}, {"oid": "a434d6b0187f0c2baeb3c23a6f9866fe337d22f6", "url": "https://github.com/openhab/openhab-addons/commit/a434d6b0187f0c2baeb3c23a6f9866fe337d22f6", "message": "fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-24T08:27:13Z", "type": "commit"}]}