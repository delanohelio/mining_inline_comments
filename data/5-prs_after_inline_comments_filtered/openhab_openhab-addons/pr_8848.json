{"pr_number": 8848, "pr_title": "[infrastructure] add external null-annotations", "pr_createdAt": "2020-10-23T20:40:44Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8848", "timeline": [{"oid": "9068f9c17ade7238be54bf4524e8c6aa3154ba18", "url": "https://github.com/openhab/openhab-addons/commit/9068f9c17ade7238be54bf4524e8c6aa3154ba18", "message": "fix null-errors\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-24T15:23:48Z", "type": "forcePushed"}, {"oid": "f950394ab4e7ec8eb46bcaeaccb39b2bc1657b9c", "url": "https://github.com/openhab/openhab-addons/commit/f950394ab4e7ec8eb46bcaeaccb39b2bc1657b9c", "message": "enable external null-annotations\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T10:26:44Z", "type": "commit"}, {"oid": "2701ed64f36325a8d15ac4c431b575fd7bce61cd", "url": "https://github.com/openhab/openhab-addons/commit/2701ed64f36325a8d15ac4c431b575fd7bce61cd", "message": "fix null-errors\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T10:29:10Z", "type": "commit"}, {"oid": "3dde0b79a567607ab7fc3c425b49d728a0d57027", "url": "https://github.com/openhab/openhab-addons/commit/3dde0b79a567607ab7fc3c425b49d728a0d57027", "message": "prevent eea-embedding\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T10:29:18Z", "type": "commit"}, {"oid": "644adceda2f1c8cad8898dd2464ba023fadd6205", "url": "https://github.com/openhab/openhab-addons/commit/644adceda2f1c8cad8898dd2464ba023fadd6205", "message": "add m2e  annotationpath\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T10:29:19Z", "type": "commit"}, {"oid": "644adceda2f1c8cad8898dd2464ba023fadd6205", "url": "https://github.com/openhab/openhab-addons/commit/644adceda2f1c8cad8898dd2464ba023fadd6205", "message": "add m2e  annotationpath\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T10:29:19Z", "type": "forcePushed"}, {"oid": "028e5077e0ffa6e0e47b43b290ee366878e683ab", "url": "https://github.com/openhab/openhab-addons/commit/028e5077e0ffa6e0e47b43b290ee366878e683ab", "message": "fix remoteopenhab\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T18:04:09Z", "type": "commit"}, {"oid": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "url": "https://github.com/openhab/openhab-addons/commit/b74f49afc7e34b29e4f6fbe31342cebce63e5971", "message": "fix snmp\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T18:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMzIxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511533215", "bodyText": "A class without a classloader is kinda more significant than a simple RuntimeException could provide. Something must be really wrong with the virtual machine environment if this should occur.\nI suggest elevating it to one of the VirtualMachineError classes.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalStateException(\"Cannot find classloader\");\n          \n          \n            \n                        throw new UnknownError(\"Cannot find classloader\");", "author": "cpmeister", "createdAt": "2020-10-25T01:28:00Z", "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/xml/DbXmlInfoReader.java", "diffHunk": "@@ -50,7 +50,11 @@ public DbXmlInfoReader() {\n         xstream = new XStream(driver);\n \n         configureSecurity(xstream);\n-        setClassLoader(Project.class.getClassLoader());\n+        ClassLoader classLoader = Project.class.getClassLoader();\n+        if (classLoader == null) {\n+            throw new IllegalStateException(\"Cannot find classloader\");", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMzMxNw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511533317", "bodyText": "This isn't an equivalent comparison.", "author": "cpmeister", "createdAt": "2020-10-25T01:29:42Z", "path": "bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/LxServerHandler.java", "diffHunk": "@@ -531,8 +531,9 @@ private void addThingChannels(List<Channel> newChannels, boolean purge) {\n             channels.addAll(getThing().getChannels());\n         }\n         channels.sort((c1, c2) -> {\n-            String label = c1.getLabel();\n-            return label == null ? 1 : label.compareTo(c2.getLabel());\n+            String label1 = c1.getLabel();\n+            String label2 = c2.getLabel();\n+            return (label1 == null || label2 == null) ? 1 : label1.compareTo(label2);", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMjY3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513802672", "bodyText": "Please check the new version.", "author": "J-N-K", "createdAt": "2020-10-28T22:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMzMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMzQxMg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511533412", "bodyText": "wouldn't a null be more appropriate here than an empty string?", "author": "cpmeister", "createdAt": "2020-10-25T01:31:02Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -276,8 +276,9 @@ protected void disconnectedNoResponse() {\n         disconnected(\"No Response from device\");\n     }\n \n-    protected void disconnected(String message) {\n-        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, message);\n+    protected void disconnected(@Nullable String message) {\n+        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR,\n+                message != null ? message : \"\");", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5NDk4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513794982", "bodyText": "I don't think this provides additional information. Since this is displayed to the user, an empty string is closer to having no message than \"null\".", "author": "J-N-K", "createdAt": "2020-10-28T22:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMzQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNDQ4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511534488", "bodyText": "No @Override annotation?", "author": "cpmeister", "createdAt": "2020-10-25T01:46:57Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api/ShellyApiException.java", "diffHunk": "@@ -58,8 +58,7 @@ public ShellyApiException(ShellyApiResult result, Exception exception) {\n         apiResult = result;\n     }\n \n-    @Override\n-    public String getMessage() {\n+    public @Nullable String getMessage() {", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTI2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511535267", "bodyText": "HttpResponse can't accept a null message?", "author": "cpmeister", "createdAt": "2020-10-25T01:57:20Z", "path": "bundles/org.openhab.io.neeo/src/main/java/org/openhab/io/neeo/internal/net/HttpRequest.java", "diffHunk": "@@ -100,7 +101,8 @@ public HttpResponse sendPostJsonCommand(String uri, String body) {\n                 content.close();\n             }\n         } catch (IOException | IllegalStateException | ProcessingException e) {\n-            return new HttpResponse(HttpStatus.SERVICE_UNAVAILABLE_503, e.getMessage());\n+            String message = e.getMessage();\n+            return new HttpResponse(HttpStatus.SERVICE_UNAVAILABLE_503, message != null ? message : \"\");", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5ODQ4MA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513798480", "bodyText": "Interesting. I reverted that change quite some time ago and made HttpResponse acceppt null-strings. Please check again.", "author": "J-N-K", "createdAt": "2020-10-28T22:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NjUwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r514546506", "bodyText": "Looks like there are two different HttpResponse classes. One in org.openhab.io.neeo and another in org.openhab.binding.neeo...", "author": "cpmeister", "createdAt": "2020-10-29T20:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTMyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511535328", "bodyText": "This change isn't equivalent. Would there by any consequences from setting these values to 0?", "author": "cpmeister", "createdAt": "2020-10-25T01:58:10Z", "path": "bundles/org.openhab.io.neeo/src/main/java/org/openhab/io/neeo/internal/OpenHabToDeviceConverter.java", "diffHunk": "@@ -135,9 +135,9 @@ NeeoDevice convert(Thing thing) {\n             final String manufacturer = StringUtils.isEmpty(properties.get(\"Manufacturer\")) ? \"openHAB\"\n                     : properties.get(\"Manufacturer\");\n \n-            final Integer standbyDelay = parseInteger(properties.get(\"Standby Command Delay\"));\n-            final Integer switchDelay = parseInteger(properties.get(\"Source Switch Delay\"));\n-            final Integer shutDownDelay = parseInteger(properties.get(\"Shutdown Delay\"));\n+            final Integer standbyDelay = parseInteger(properties.getOrDefault(\"Standby Command Delay\", \"0\"));\n+            final Integer switchDelay = parseInteger(properties.getOrDefault(\"Source Switch Delay\", \"0\"));\n+            final Integer shutDownDelay = parseInteger(properties.getOrDefault(\"Shutdown Delay\", \"0\"));", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5NjkxOA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513796918", "bodyText": "0 means no delay. This is for sure better than crashing.", "author": "J-N-K", "createdAt": "2020-10-28T22:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTMyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTM3NA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511535374", "bodyText": "Wouldn't it be better to change NetworkUtils.singleError to accept a null message?", "author": "cpmeister", "createdAt": "2020-10-25T01:58:59Z", "path": "bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/rest/Schedules.java", "diffHunk": "@@ -335,7 +337,9 @@ public Response postNewSchedule(@Context UriInfo uri,\n         try {\n             rule = createRule(uid, builder, Collections.emptyList(), Collections.emptyList(), newScheduleData, cs.ds);\n         } catch (IllegalStateException e) { // No stacktrace required, we just need the exception message\n-            return NetworkUtils.singleError(cs.gson, uri, HueResponse.ARGUMENTS_INVALID, e.getMessage());\n+            String message = e.getMessage();\n+            return NetworkUtils.singleError(cs.gson, uri, HueResponse.ARGUMENTS_INVALID,\n+                    message != null ? message : \"\");", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTcwNw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r511535707", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                future.completeExceptionally(new IllegalStateException());\n          \n          \n            \n                                future.completeExceptionally(e);", "author": "cpmeister", "createdAt": "2020-10-25T02:03:33Z", "path": "bundles/org.openhab.binding.spotify/src/main/java/org/openhab/binding/spotify/internal/api/SpotifyConnector.java", "diffHunk": "@@ -149,7 +149,12 @@ public Caller(Function<HttpClient, Request> requester, String authorization) {\n                     }\n                 }\n             } catch (ExecutionException e) {\n-                future.completeExceptionally(e.getCause());\n+                Throwable cause = e.getCause();\n+                if (cause != null) {\n+                    future.completeExceptionally(cause);\n+                } else {\n+                    future.completeExceptionally(new IllegalStateException());", "originalCommit": "df5c5951057e5dd55f942b969653e2df88c4c3d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2d27fe9b3a201860022ab5bf1b90ecdfdb7bb0e5", "url": "https://github.com/openhab/openhab-addons/commit/2d27fe9b3a201860022ab5bf1b90ecdfdb7bb0e5", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T22:33:46Z", "type": "commit"}, {"oid": "70f83b0ce24f45509fe908a681ee957db5b11b9c", "url": "https://github.com/openhab/openhab-addons/commit/70f83b0ce24f45509fe908a681ee957db5b11b9c", "message": "apply spotless\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-28T22:35:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5OTczNw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513799737", "bodyText": "Maybe add a message for the NumberFormatException here, the catch would end up using it.", "author": "cpmeister", "createdAt": "2020-10-28T22:29:00Z", "path": "bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/handler/ZonePlayerHandler.java", "diffHunk": "@@ -1393,7 +1393,11 @@ private Long getResultEntry(Map<String, @Nullable String> resultInput, String re\n         }\n \n         try {\n-            result = Long.valueOf(resultInput.get(requestedKey));\n+            String resultString = resultInput.get(requestedKey);\n+            if (resultString == null) {\n+                throw new NumberFormatException();", "originalCommit": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMTYyMw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513801623", "bodyText": "System.err can be null!?", "author": "cpmeister", "createdAt": "2020-10-28T22:33:50Z", "path": "bundles/org.openhab.transform.map/src/test/java/org/openhab/transform/map/internal/MapTransformationServiceTest.java", "diffHunk": "@@ -125,7 +122,10 @@ public Void call() throws Exception {\n                 }\n             }, 10000, 100);\n         } catch (IOException e1) {\n-            e1.printStackTrace(System.err);\n+            PrintStream err = System.err;\n+            if (err != null) {\n+                e1.printStackTrace(err);\n+            }", "originalCommit": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0MTg3OA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r514041878", "bodyText": "https://github.com/AdoptOpenJDK/openjdk-jdk11/blob/19fb8f93c59dfd791f62d41f332db9e306bc1422/src/java.base/share/classes/java/lang/System.java#L155", "author": "J-N-K", "createdAt": "2020-10-29T07:09:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMTYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMjA5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513802091", "bodyText": "I hope this doesn't cause problems...", "author": "cpmeister", "createdAt": "2020-10-28T22:35:00Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -74,7 +75,9 @@ public State getEndPosition() {\n     }\n \n     public long getDurationInMinutes() {\n-        return Duration.between(startTime, endTime).toMinutes();\n+        Temporal start = startTime;\n+        Temporal end = endTime;\n+        return (start == null || end == null) ? 0 : Duration.between(start, end).toMinutes();", "originalCommit": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0MjUyMA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r514042520", "bodyText": "What would you suggest as an alternative?", "author": "J-N-K", "createdAt": "2020-10-29T07:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMjA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUyNjMxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r514526315", "bodyText": "Change the return type of getDurationInMinutes to OptionalLong or Optional<Duration> and then adjust the code in VehicleHandler accordingly. Using an Undef state should suffice for the situation where it is missing.", "author": "cpmeister", "createdAt": "2020-10-29T19:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMjA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwNDE0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513804143", "bodyText": "Should probably log something here, looks like there is an expectation for the browseTarget to be logged for debugging. I'd suggest logging a message here regarding the lack of an entry for that browseTarget.", "author": "cpmeister", "createdAt": "2020-10-28T22:40:18Z", "path": "bundles/org.openhab.binding.upnpcontrol/src/main/java/org/openhab/binding/upnpcontrol/internal/handler/UpnpServerHandler.java", "diffHunk": "@@ -207,7 +207,12 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                                 // No parent found, so make it the root directory\n                                 browseTarget = DIRECTORY_ROOT;\n                             }\n-                            currentEntry = parentMap.get(browseTarget);\n+                            UpnpEntry entry = parentMap.get(browseTarget);\n+                            if (entry == null) {\n+                                return;", "originalCommit": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwNDg0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513804841", "bodyText": "contentEquals is equivalent to equals when comparing two strings.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } else if (value != null && \"PAUSED_PLAYBACK\".contentEquals(value)) {\n          \n          \n            \n                            } else if (\"PAUSED_PLAYBACK\".equals(value)) {", "author": "cpmeister", "createdAt": "2020-10-28T22:42:18Z", "path": "bundles/org.openhab.binding.upnpcontrol/src/main/java/org/openhab/binding/upnpcontrol/internal/handler/UpnpRendererHandler.java", "diffHunk": "@@ -590,7 +590,7 @@ public void onValueReceived(@Nullable String variable, @Nullable String value, @\n                     playing = true;\n                     updateState(CONTROL, PlayPauseType.PLAY);\n                     scheduleTrackPositionRefresh();\n-                } else if (\"PAUSED_PLAYBACK\".contentEquals(value)) {\n+                } else if (value != null && \"PAUSED_PLAYBACK\".contentEquals(value)) {", "originalCommit": "b74f49afc7e34b29e4f6fbe31342cebce63e5971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwOTY5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513809694", "bodyText": "If the logDir is not in the system properties I think it would be safer for this binding if you put the thing offline with a configuration error.", "author": "cpmeister", "createdAt": "2020-10-28T22:55:23Z", "path": "bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/handler/LogHandler.java", "diffHunk": "@@ -81,9 +81,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void initialize() {\n         configuration = getConfigAs(LogReaderConfiguration.class);\n-\n+        String logDir = System.getProperty(\"openhab.logdir\");\n         configuration.filePath = configuration.filePath.replaceFirst(\"\\\\$\\\\{OPENHAB_LOGDIR\\\\}\",\n-                System.getProperty(\"openhab.logdir\"));\n+                logDir != null ? logDir : \"\");", "originalCommit": "70f83b0ce24f45509fe908a681ee957db5b11b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgxMDQ4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513810482", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        HeliosVariable variable = variableMap.get(channelId);\n          \n          \n            \n                                        if (variable != null) {\n          \n          \n            \n                                            updateState(variable, v);\n          \n          \n            \n                                            updateStatus(ThingStatus.ONLINE);\n          \n          \n            \n                                        }\n          \n          \n            \n                                        HeliosVariable variable = variableMap.get(channelId);\n          \n          \n            \n                                        if (variable != null) {\n          \n          \n            \n                                            updateState(variable, v);\n          \n          \n            \n                                        }\n          \n          \n            \n                                        updateStatus(ThingStatus.ONLINE);", "author": "cpmeister", "createdAt": "2020-10-28T22:57:24Z", "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/main/java/org/openhab/binding/modbus/helioseasycontrols/internal/HeliosEasyControlsHandler.java", "diffHunk": "@@ -339,8 +339,11 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     try {\n                         writeValue(channelId, v);\n                         if (variableMap != null) {\n-                            updateState(variableMap.get(channelId), v);\n-                            updateStatus(ThingStatus.ONLINE);\n+                            HeliosVariable variable = variableMap.get(channelId);\n+                            if (variable != null) {\n+                                updateState(variable, v);\n+                                updateStatus(ThingStatus.ONLINE);\n+                            }", "originalCommit": "70f83b0ce24f45509fe908a681ee957db5b11b9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0OTA1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r514049055", "bodyText": "I was thinking about that. But finally decided to put it in the if-clause because I think that a null value here is some sort of error state and the thing should probably not be ONLINE.", "author": "J-N-K", "createdAt": "2020-10-29T07:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgxMDQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgxMTYwMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513811601", "bodyText": "Should you return if you find a null thingTypeUID? Is it ok to create a ThingUID with a null thingTypeUID?", "author": "cpmeister", "createdAt": "2020-10-28T23:00:25Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/discovery/SunspecDiscoveryProcess.java", "diffHunk": "@@ -282,8 +283,11 @@ private void createDiscoveryResult(ModelBlock block) {\n             return;\n         }\n \n-        ThingUID thingUID = new ThingUID(SUPPORTED_THING_TYPES_UIDS.get(block.moduleID), handler.getUID(),\n-                Integer.toString(block.address));\n+        ThingTypeUID thingTypeUID = SUPPORTED_THING_TYPES_UIDS.get(block.moduleID);\n+        if (thingTypeUID == null) {\n+            logger.warn(\"Found model block but no corresponding thing type UID present: {}\", block.moduleID);\n+        }\n+        ThingUID thingUID = new ThingUID(thingTypeUID, handler.getUID(), Integer.toString(block.address));", "originalCommit": "70f83b0ce24f45509fe908a681ee957db5b11b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgxOTIzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r513819239", "bodyText": "I just tested to make sure and confirmed that this isn't an equivalent change. findFirst() will throw an NPE if the first element it encounters is a null value, so you need to filter out the null values before you can do the mapping.", "author": "cpmeister", "createdAt": "2020-10-28T23:22:45Z", "path": "bundles/org.openhab.binding.nikohomecontrol/src/main/java/org/openhab/binding/nikohomecontrol/internal/protocol/nhc2/NikoHomeControlCommunication2.java", "diffHunk": "@@ -507,15 +510,15 @@ private void updateThermostatState(NhcThermostat2 thermostat, List<NhcProperty>\n         Optional<Boolean> overruleActiveProperty = deviceProperties.stream().map(p -> p.overruleActive)\n                 .filter(Objects::nonNull).map(t -> Boolean.parseBoolean(t)).findFirst();\n         Optional<Integer> overruleSetpointProperty = deviceProperties.stream().map(p -> p.overruleSetpoint)\n-                .filter(s -> !((s == null) || s.isEmpty())).map(t -> Math.round(Float.parseFloat(t) * 10)).findFirst();\n+                .map(s -> (!((s == null) || s.isEmpty())) ? Math.round(Float.parseFloat(s) * 10) : null).findFirst();", "originalCommit": "70f83b0ce24f45509fe908a681ee957db5b11b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b07f402611016338f48dd6237f6a13cc055094c5", "url": "https://github.com/openhab/openhab-addons/commit/b07f402611016338f48dd6237f6a13cc055094c5", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-29T07:34:04Z", "type": "commit"}, {"oid": "b9b180d8a4fad1b986e69ab1be19f68e6daaf621", "url": "https://github.com/openhab/openhab-addons/commit/b9b180d8a4fad1b986e69ab1be19f68e6daaf621", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-29T18:30:37Z", "type": "commit"}, {"oid": "670bf996d7221a873c66e1aa2c317581bf4f6a2b", "url": "https://github.com/openhab/openhab-addons/commit/670bf996d7221a873c66e1aa2c317581bf4f6a2b", "message": "fix POM\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-29T18:36:08Z", "type": "commit"}, {"oid": "3f8c1867c2fa0b28d54fc70f4426a3f9313a2a7c", "url": "https://github.com/openhab/openhab-addons/commit/3f8c1867c2fa0b28d54fc70f4426a3f9313a2a7c", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-29T20:15:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2NTY1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515065652", "bodyText": "It will build better with:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            logger.info(\"Browse target not found. Exiting.\")\n          \n          \n            \n                                            logger.info(\"Browse target not found. Exiting.\");", "author": "wborn", "createdAt": "2020-10-30T12:33:40Z", "path": "bundles/org.openhab.binding.upnpcontrol/src/main/java/org/openhab/binding/upnpcontrol/internal/handler/UpnpServerHandler.java", "diffHunk": "@@ -207,7 +207,13 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                                 // No parent found, so make it the root directory\n                                 browseTarget = DIRECTORY_ROOT;\n                             }\n-                            currentEntry = parentMap.get(browseTarget);\n+                            UpnpEntry entry = parentMap.get(browseTarget);\n+                            if (entry == null) {\n+                                logger.info(\"Browse target not found. Exiting.\")", "originalCommit": "3f8c1867c2fa0b28d54fc70f4426a3f9313a2a7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MjU3Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515072577", "bodyText": "obviously.", "author": "J-N-K", "createdAt": "2020-10-30T12:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2NTY1Mg=="}], "type": "inlineReview"}, {"oid": "1c3de9e9e9f2b4727854b390052f27e1a8b17c66", "url": "https://github.com/openhab/openhab-addons/commit/1c3de9e9e9f2b4727854b390052f27e1a8b17c66", "message": "fix build\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-30T12:47:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4OTMwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515089305", "bodyText": "It would be so much easier to read when statically importing Map.entry and using entry( instead of all those lengthy new AbstractMap.SimpleEntry<AlertLevel, String>( constructs here. \ud83d\ude06\nprivate static final Map<AlertLevel, String> ALERT_COLORS = Map.ofEntries(\n            entry(AlertLevel.GREEN, \"00ff00\"),\n            entry(AlertLevel.YELLOW, \"ffff00\"),\n            entry(AlertLevel.ORANGE, \"ff6600\"),\n            entry(AlertLevel.RED, \"ff0000\"),\n            entry(AlertLevel.UNKNOWN, UNKNOWN_COLOR));", "author": "wborn", "createdAt": "2020-10-30T13:18:31Z", "path": "bundles/org.openhab.binding.meteoalerte/src/main/java/org/openhab/binding/meteoalerte/internal/handler/MeteoAlerteHandler.java", "diffHunk": "@@ -63,12 +63,13 @@\n             + \"facet=etat_vent&facet=etat_pluie_inondation&facet=etat_orage&facet=etat_inondation&facet=etat_neige&facet=etat_canicule&\"\n             + \"facet=etat_grand_froid&facet=etat_avalanches&refine.nom_dept=\";\n     private static final int TIMEOUT_MS = 30000;\n+    private static final String UNKNOWN_COLOR = \"b3b3b3\";\n     private static final Map<AlertLevel, String> ALERT_COLORS = Map.ofEntries(\n             new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.GREEN, \"00ff00\"),\n             new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.YELLOW, \"ffff00\"),\n             new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.ORANGE, \"ff6600\"),\n             new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.RED, \"ff0000\"),\n-            new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.UNKNOWN, \"b3b3b3\"));\n+            new AbstractMap.SimpleEntry<AlertLevel, String>(AlertLevel.UNKNOWN, UNKNOWN_COLOR));", "originalCommit": "1c3de9e9e9f2b4727854b390052f27e1a8b17c66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5MTY0OA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515091648", "bodyText": "Since we will not backport to 2.5.x we could also use Map.of. But I think changing all this is beyond the scope here.", "author": "J-N-K", "createdAt": "2020-10-30T13:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4OTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNjI4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515136283", "bodyText": "I just hope a casual reader learns something from it so there will be less of these monstrosities in the future. :-)", "author": "wborn", "createdAt": "2020-10-30T14:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4OTMwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwNTM1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515105352", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (MonopriceAudioZone.VALID_ZONE_IDS.contains(zoneId) || zoneDTO != null) {\n          \n          \n            \n                                if (MonopriceAudioZone.VALID_ZONE_IDS.contains(zoneId) && zoneDTO != null) {\n          \n      \n    \n    \n  \n\nBecause of the different error/warning config in Eclipse it is already an error at L473:\nNull type mismatch: required '@NonNull MonopriceAudioZoneDTO' but the provided value is inferred as @Nullable", "author": "wborn", "createdAt": "2020-10-30T13:41:45Z", "path": "bundles/org.openhab.binding.monopriceaudio/src/main/java/org/openhab/binding/monopriceaudio/internal/handler/MonopriceAudioHandler.java", "diffHunk": "@@ -462,12 +467,12 @@ public void onNewMessageEvent(MonopriceAudioMessageEvent evt) {\n \n                 case MonopriceAudioConnector.KEY_ZONE_UPDATE:\n                     String zoneId = updateData.substring(0, 2);\n-\n-                    if (MonopriceAudioZone.VALID_ZONE_IDS.contains(zoneId)) {\n+                    MonopriceAudioZoneDTO zoneDTO = zoneDataMap.get(zoneId);\n+                    if (MonopriceAudioZone.VALID_ZONE_IDS.contains(zoneId) || zoneDTO != null) {", "originalCommit": "1c3de9e9e9f2b4727854b390052f27e1a8b17c66", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDUxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515124515", "bodyText": "Using anything else besides annotations from the org.eclipse.jdt.annotation package will likely cause runtime issues because these packages are considered to be optional:\n\n  \n    \n      openhab-addons/pom.xml\n    \n    \n         Line 142\n      in\n      9a5832a\n    \n    \n    \n    \n\n        \n          \n             org.eclipse.jdt.annotation.*;resolution:=optional,\\\\ \n        \n    \n  \n\n\nI think currently it is only safe to use the Checks class in test code.", "author": "wborn", "createdAt": "2020-10-30T14:08:13Z", "path": "bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/event/IntegraStateEvent.java", "diffHunk": "@@ -71,10 +73,10 @@ public BitSet getStateBits(StateType stateType) {\n         if (stateType.getStartByte() == 0 && bitsCount == stateBits.size()) {\n             return stateBits;\n         }\n-        return stateBitsMap.computeIfAbsent(stateType, k -> {\n+        return requireNonNull(stateBitsMap.computeIfAbsent(stateType, k -> {", "originalCommit": "1c3de9e9e9f2b4727854b390052f27e1a8b17c66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MjMyMA==", "url": "https://github.com/openhab/openhab-addons/pull/8848#discussion_r515162320", "bodyText": "It work without. I wonder why I added it. Also fixed some potential NPE while looking through the binding.", "author": "J-N-K", "createdAt": "2020-10-30T15:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDUxNQ=="}], "type": "inlineReview"}, {"oid": "26fc48ec19b2aa2be7ff946604af4b87d805a58e", "url": "https://github.com/openhab/openhab-addons/commit/26fc48ec19b2aa2be7ff946604af4b87d805a58e", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-30T14:59:04Z", "type": "commit"}, {"oid": "0efed7875b1baf446ddfe6ac0745d33134999168", "url": "https://github.com/openhab/openhab-addons/commit/0efed7875b1baf446ddfe6ac0745d33134999168", "message": "fix potential NPE\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-10-30T14:59:24Z", "type": "commit"}]}