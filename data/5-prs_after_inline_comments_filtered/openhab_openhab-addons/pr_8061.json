{"pr_number": 8061, "pr_title": "[hdpowerview] extensions, improvements, bug-fixes", "pr_createdAt": "2020-07-03T17:56:41Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8061", "timeline": [{"oid": "2fb44a5c70f6222838434eea4371d33e340c81fd", "url": "https://github.com/openhab/openhab-addons/commit/2fb44a5c70f6222838434eea4371d33e340c81fd", "message": "[hdpowerview] connection-close (experimental)\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "1c17d0657e139f2cc58aa9f75f1fd0c3f4c63ba6", "url": "https://github.com/openhab/openhab-addons/commit/1c17d0657e139f2cc58aa9f75f1fd0c3f4c63ba6", "message": "[hdpowerview] support for secondary rail position\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "b331dd817a3c0a16f466fdebdfc1f9359747ad5b", "url": "https://github.com/openhab/openhab-addons/commit/b331dd817a3c0a16f466fdebdfc1f9359747ad5b", "message": "[hdpowerview] second rail testing\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "fcddefb4ec81ef00b0ee49ec20b8c77800be3879", "url": "https://github.com/openhab/openhab-addons/commit/fcddefb4ec81ef00b0ee49ec20b8c77800be3879", "message": "[hdpowerview] cosmetics\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "c630efd0e46154b4fe1fb082f7444e87561ed8a5", "url": "https://github.com/openhab/openhab-addons/commit/c630efd0e46154b4fe1fb082f7444e87561ed8a5", "message": "[hdpowerview] fix maven niggles\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "59db59a2841d46c882b9f8c15b83ae5a282d3a8c", "url": "https://github.com/openhab/openhab-addons/commit/59db59a2841d46c882b9f8c15b83ae5a282d3a8c", "message": "[hdpowerview] read me updated\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "baf35b42b8e74d85f82806b16312f7993bc9c888", "url": "https://github.com/openhab/openhab-addons/commit/baf35b42b8e74d85f82806b16312f7993bc9c888", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "f8a24ea3479060fe886a4853c136bea4d64b287e", "url": "https://github.com/openhab/openhab-addons/commit/f8a24ea3479060fe886a4853c136bea4d64b287e", "message": "[hdpowerview] refresh cache\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "b80be83587c0a2e376f61472619cf2be49420a12", "url": "https://github.com/openhab/openhab-addons/commit/b80be83587c0a2e376f61472619cf2be49420a12", "message": "[hdpowerview] integer arithmetic and unit tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "6d9ef841aadcf74b2e6916c3bd811cc264179dbe", "url": "https://github.com/openhab/openhab-addons/commit/6d9ef841aadcf74b2e6916c3bd811cc264179dbe", "message": "[hdpowerview] integer arithmetic\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "26b728eb1a793ae5862853b650df8b7dd14d4741", "url": "https://github.com/openhab/openhab-addons/commit/26b728eb1a793ae5862853b650df8b7dd14d4741", "message": "[hdpowerview] various tweaks ans tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "ddbd63654afbfee60165e87d22f0c31758943cca", "url": "https://github.com/openhab/openhab-addons/commit/ddbd63654afbfee60165e87d22f0c31758943cca", "message": "[hdpowerview] various tweaks and tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "de4d617148f8ef2a3d37f4f1fad78b5770157ae5", "url": "https://github.com/openhab/openhab-addons/commit/de4d617148f8ef2a3d37f4f1fad78b5770157ae5", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:00Z", "type": "commit"}, {"oid": "8b55cd07b9c8744186d4f9b820cbcef126e08f4e", "url": "https://github.com/openhab/openhab-addons/commit/8b55cd07b9c8744186d4f9b820cbcef126e08f4e", "message": "[hdpowerview] netbios discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "8c066ff961ed636f46b42a5c07bfe943d38d4860", "url": "https://github.com/openhab/openhab-addons/commit/8c066ff961ed636f46b42a5c07bfe943d38d4860", "message": "[hdpowerview] mdns zero-conf discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "702ee1d61945e4d163d8cbdb55f1b459620ec5c7", "url": "https://github.com/openhab/openhab-addons/commit/702ee1d61945e4d163d8cbdb55f1b459620ec5c7", "message": "[hdpowerview] code formatting\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "ace5805a95eb35c1b85a61262ea72824a6d0713c", "url": "https://github.com/openhab/openhab-addons/commit/ace5805a95eb35c1b85a61262ea72824a6d0713c", "message": "[hdpowerview] shades with no hub data show offline\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "b034364fafdc51300f68a59f1c91d183020e6d85", "url": "https://github.com/openhab/openhab-addons/commit/b034364fafdc51300f68a59f1c91d183020e6d85", "message": "[hdpowerview] netbios discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "e617b2d30e5d4120aecdef6ee304ca38e58e732f", "url": "https://github.com/openhab/openhab-addons/commit/e617b2d30e5d4120aecdef6ee304ca38e58e732f", "message": "[hdpowerview] code clarity, logging, exception handling\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "d2fe3ca3d5efa02be1c128e3a74ec2f10d78803f", "url": "https://github.com/openhab/openhab-addons/commit/d2fe3ca3d5efa02be1c128e3a74ec2f10d78803f", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "5e791d5949b83f8685e42bee2369d5cb9bb0a55b", "url": "https://github.com/openhab/openhab-addons/commit/5e791d5949b83f8685e42bee2369d5cb9bb0a55b", "message": "[hdpowerview] minor docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "7eabfab82aff4a9674011c280f879444381e5c33", "url": "https://github.com/openhab/openhab-addons/commit/7eabfab82aff4a9674011c280f879444381e5c33", "message": "[hdpowerview] hub maintenance window\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "eb7db75ab2b25e90b2b2597c4559cace2cce5d1a", "url": "https://github.com/openhab/openhab-addons/commit/eb7db75ab2b25e90b2b2597c4559cace2cce5d1a", "message": "[hdpowerview] position co-ordinates many tweaks\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "157f2f7882b498cb822b725bb47b76a8d5d8b81e", "url": "https://github.com/openhab/openhab-addons/commit/157f2f7882b498cb822b725bb47b76a8d5d8b81e", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "efcfeadbf90e071743eadb19fbe109d1262b61dc", "url": "https://github.com/openhab/openhab-addons/commit/efcfeadbf90e071743eadb19fbe109d1262b61dc", "message": "[hdpowerview] code prettified\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:01Z", "type": "commit"}, {"oid": "e7c3ddc8314c439edc3923bfcd19067ed79f9c91", "url": "https://github.com/openhab/openhab-addons/commit/e7c3ddc8314c439edc3923bfcd19067ed79f9c91", "message": "[hdpowerview] refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "175712a6a8fb9a0e60259397ec1dcc7c35beb88a", "url": "https://github.com/openhab/openhab-addons/commit/175712a6a8fb9a0e60259397ec1dcc7c35beb88a", "message": "[hdpowerview] only send secondary move to shades with a secondary; refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "b3c6a63ecb2ce7cab0cc7eeda26d5ed2fa1dae20", "url": "https://github.com/openhab/openhab-addons/commit/b3c6a63ecb2ce7cab0cc7eeda26d5ed2fa1dae20", "message": "[hdpowerview] http connection close\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "3e8a3bee6025dcd95f77484c7c0e208d660c99ab", "url": "https://github.com/openhab/openhab-addons/commit/3e8a3bee6025dcd95f77484c7c0e208d660c99ab", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "75eaa26c575ff87cacea3c5ab13f42cf236ee156", "url": "https://github.com/openhab/openhab-addons/commit/75eaa26c575ff87cacea3c5ab13f42cf236ee156", "message": "[hdpowerview] improvement of refresh command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "7a55555ba6f09883f94eb21734d4596b1946da2d", "url": "https://github.com/openhab/openhab-addons/commit/7a55555ba6f09883f94eb21734d4596b1946da2d", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "b69c412a0637a256e25ad2b8ab051bf18191d82f", "url": "https://github.com/openhab/openhab-addons/commit/b69c412a0637a256e25ad2b8ab051bf18191d82f", "message": "[hdpowerview] shade stop command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "8bce776e449c7a99106ca7239a3afcb66652b05c", "url": "https://github.com/openhab/openhab-addons/commit/8bce776e449c7a99106ca7239a3afcb66652b05c", "message": "[hdpowerview] shade stop command; logging\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "606c46b37050bb2c02348c7cea519ec3d5a34356", "url": "https://github.com/openhab/openhab-addons/commit/606c46b37050bb2c02348c7cea519ec3d5a34356", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "d87428e89d46312d44c705980f6b0bacc7d3d254", "url": "https://github.com/openhab/openhab-addons/commit/d87428e89d46312d44c705980f6b0bacc7d3d254", "message": "[hdpowerview] code docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "6e204e2e0f0389d52bbb72c266bcdd9b7b0939f7", "url": "https://github.com/openhab/openhab-addons/commit/6e204e2e0f0389d52bbb72c266bcdd9b7b0939f7", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "891fee3f827ab8435af545fc3fbfa4418cf00968", "url": "https://github.com/openhab/openhab-addons/commit/891fee3f827ab8435af545fc3fbfa4418cf00968", "message": "[hdpowerview] disable live test\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "815e3f7d158c10299ff7762f52309977d1f879af", "url": "https://github.com/openhab/openhab-addons/commit/815e3f7d158c10299ff7762f52309977d1f879af", "message": "[hdpowerview] stop shade motion; null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "53bc731975625f6d204aa52af51005a7ecd21eff", "url": "https://github.com/openhab/openhab-addons/commit/53bc731975625f6d204aa52af51005a7ecd21eff", "message": "[hdpowerview] exclude ipv6 addresses\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "fbf7bfceec3650b4f4080855e25f83e7ff3c716c", "url": "https://github.com/openhab/openhab-addons/commit/fbf7bfceec3650b4f4080855e25f83e7ff3c716c", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "420ed55a9785a191d29c2b59239e702b09d69a4b", "url": "https://github.com/openhab/openhab-addons/commit/420ed55a9785a191d29c2b59239e702b09d69a4b", "message": "[hdpowerview] test position primary regular only\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "7ffb4d7d6686ed5ad0496c46a5bfec3db96beba7", "url": "https://github.com/openhab/openhab-addons/commit/7ffb4d7d6686ed5ad0496c46a5bfec3db96beba7", "message": "[hdpowerview] vane and shade max position; docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:02Z", "type": "commit"}, {"oid": "46aa4bdb93c6cd35ba5e42694cf117457838236c", "url": "https://github.com/openhab/openhab-addons/commit/46aa4bdb93c6cd35ba5e42694cf117457838236c", "message": "[hdpowerview] suppress refresh fom updating\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "abaa764201a4412663151016486b7d1157a2895f", "url": "https://github.com/openhab/openhab-addons/commit/abaa764201a4412663151016486b7d1157a2895f", "message": "[hdpowerview] log uri's\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "2452f5f8b1c5a2b34f13ed3a987edefd8201dc81", "url": "https://github.com/openhab/openhab-addons/commit/2452f5f8b1c5a2b34f13ed3a987edefd8201dc81", "message": "[hdpowerview] logging\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "d9703edfd7ae51c3b23fadac88885cb51b30bb47", "url": "https://github.com/openhab/openhab-addons/commit/d9703edfd7ae51c3b23fadac88885cb51b30bb47", "message": "[hdpowerview] range check\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "ad52f9b2c5832830a595f97afa1b75ec0199acfe", "url": "https://github.com/openhab/openhab-addons/commit/ad52f9b2c5832830a595f97afa1b75ec0199acfe", "message": "[hdpowerview] moveShade fix\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "5c59082124410323ec72998cacdf84e3e33533d1", "url": "https://github.com/openhab/openhab-addons/commit/5c59082124410323ec72998cacdf84e3e33533d1", "message": "[hdpowerview] adopted @berland suggestions\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "7f1312d1d95c8d63c410a31740fc928ffebcf9ea", "url": "https://github.com/openhab/openhab-addons/commit/7f1312d1d95c8d63c410a31740fc928ffebcf9ea", "message": "[hdpowerview] cleaner code\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "328dbdf2e87cd32447a914389daba77eaa0e7c27", "url": "https://github.com/openhab/openhab-addons/commit/328dbdf2e87cd32447a914389daba77eaa0e7c27", "message": "[hdpowerview] synchronization\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "f230d2680d86684b8a9ec5451cbf4381b5596cf7", "url": "https://github.com/openhab/openhab-addons/commit/f230d2680d86684b8a9ec5451cbf4381b5596cf7", "message": "[hdpowerview] error message\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "ff95cce4009bc4d119aeb1f48ea0d5925c544b54", "url": "https://github.com/openhab/openhab-addons/commit/ff95cce4009bc4d119aeb1f48ea0d5925c544b54", "message": "[hdpowerpiew] refactoring, synchronization, log messages\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "340c2a990785de32e711985a1769f6703dfceb17", "url": "https://github.com/openhab/openhab-addons/commit/340c2a990785de32e711985a1769f6703dfceb17", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "ba598fb92113a25ee503bdc076fec69f1f232bc7", "url": "https://github.com/openhab/openhab-addons/commit/ba598fb92113a25ee503bdc076fec69f1f232bc7", "message": "[hdpowerview] tweak\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "b91007e8a22740cb3f98089c4840b56d8a32a997", "url": "https://github.com/openhab/openhab-addons/commit/b91007e8a22740cb3f98089c4840b56d8a32a997", "message": "[hdpowerview] separate live and offline tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "9445210bb33fadcc647b932b52270c023ea45e18", "url": "https://github.com/openhab/openhab-addons/commit/9445210bb33fadcc647b932b52270c023ea45e18", "message": "[hdpowerview] id specified as integer not string\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:03Z", "type": "commit"}, {"oid": "3b299f476c71e73bfaf4b420b4d88c953ff6fd08", "url": "https://github.com/openhab/openhab-addons/commit/3b299f476c71e73bfaf4b420b4d88c953ff6fd08", "message": "[hdpowerview] request position refresh after stop command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "2ae4078297646515aa75ba2fbfdc2b100fa635d1", "url": "https://github.com/openhab/openhab-addons/commit/2ae4078297646515aa75ba2fbfdc2b100fa635d1", "message": "[hdpowerview] scene ids must also be integers\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "31174d6e740fa11327c23f60aa8f799959569f01", "url": "https://github.com/openhab/openhab-addons/commit/31174d6e740fa11327c23f60aa8f799959569f01", "message": "[hdpowerview] getshade() without calling refresh\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "1e52f01142733b558003ca2d45721bcc8093dd1c", "url": "https://github.com/openhab/openhab-addons/commit/1e52f01142733b558003ca2d45721bcc8093dd1c", "message": "[hdpowerview] docu error\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "ba0f481e14ae8c565e6345cb85d5e4519b1fe532", "url": "https://github.com/openhab/openhab-addons/commit/ba0f481e14ae8c565e6345cb85d5e4519b1fe532", "message": "[hdpowerview] refactor class names for clarity\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "c9d8b571e40221717951f056454cbd693772577c", "url": "https://github.com/openhab/openhab-addons/commit/c9d8b571e40221717951f056454cbd693772577c", "message": "[hdpowerview] use refactored classes\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "9eb08de63cfbca1cc99c619674934dc5f9d0145b", "url": "https://github.com/openhab/openhab-addons/commit/9eb08de63cfbca1cc99c619674934dc5f9d0145b", "message": "[hdpowerview] use refactored classes; fix move secondary shade\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "33470dd50d8d07cc188988299a5a17dfa5034c86", "url": "https://github.com/openhab/openhab-addons/commit/33470dd50d8d07cc188988299a5a17dfa5034c86", "message": "[hdpowerview] refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "81e35b85748ba47e842afd13429575dac27584bb", "url": "https://github.com/openhab/openhab-addons/commit/81e35b85748ba47e842afd13429575dac27584bb", "message": "[hdpowerview] javadoc and comments\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "1c4602aa38add0228b96be0eb57be0b5f7f58eb8", "url": "https://github.com/openhab/openhab-addons/commit/1c4602aa38add0228b96be0eb57be0b5f7f58eb8", "message": "[hdpowerview] normal and representation properties\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "9489829df10d77a35993fd5d6e8c0557d5db6e9f", "url": "https://github.com/openhab/openhab-addons/commit/9489829df10d77a35993fd5d6e8c0557d5db6e9f", "message": "[hdpowerview] bugfix representation property\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "29923267313ff7b9bb28dc0bad729f2a3f80657a", "url": "https://github.com/openhab/openhab-addons/commit/29923267313ff7b9bb28dc0bad729f2a3f80657a", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:04Z", "type": "commit"}, {"oid": "068030fc518630318162a95af8cb4775ea0a30a7", "url": "https://github.com/openhab/openhab-addons/commit/068030fc518630318162a95af8cb4775ea0a30a7", "message": "hdpowerview] docu typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:05Z", "type": "commit"}, {"oid": "2048a482c13f558a53f8c2e3b78f77d70d9ae1e8", "url": "https://github.com/openhab/openhab-addons/commit/2048a482c13f558a53f8c2e3b78f77d70d9ae1e8", "message": "[hdpowerview] cosmetics\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T16:59:05Z", "type": "commit"}, {"oid": "5693e30ca569f93142edc2f3a5453c3993032eca", "url": "https://github.com/openhab/openhab-addons/commit/5693e30ca569f93142edc2f3a5453c3993032eca", "message": "[hdpowerview] suppress test fail if no hub present\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-02T17:23:37Z", "type": "commit"}, {"oid": "ea64a2970cce93447c307fd68471c83d455a63b8", "url": "https://github.com/openhab/openhab-addons/commit/ea64a2970cce93447c307fd68471c83d455a63b8", "message": "[hdpowerview] javadocs\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-03T16:57:21Z", "type": "commit"}, {"oid": "28cbdb5058bd0e3f53cefad8e2b44b1056c68743", "url": "https://github.com/openhab/openhab-addons/commit/28cbdb5058bd0e3f53cefad8e2b44b1056c68743", "message": "[hdpowerview] delete unused method\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-03T16:58:00Z", "type": "commit"}, {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "url": "https://github.com/openhab/openhab-addons/commit/264b1da9e83455baa5dd45f1f2de1d159b9d4121", "message": "[hdpowerview] restore noembeddependencies.profile\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-03T17:41:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460566469", "bodyText": "The annotation has no effect and can be removed.", "author": "fwolter", "createdAt": "2020-07-26T19:52:15Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/HDPowerViewWebTargets.java", "diffHunk": "@@ -33,82 +37,205 @@\n import com.google.gson.JsonParseException;\n \n /**\n- * JAX-RS targets for communicating with the HD Power View Hub\n+ * JAX-RS targets for communicating with an HD PowerView hub\n  *\n  * @author Andy Lintner - Initial contribution\n+ * @author Andrew Fiddian-Green - Added support for secondary rail positions\n  */\n+@NonNullByDefault\n public class HDPowerViewWebTargets {\n \n+    private static final String PUT = \"PUT\";\n+    private static final String GET = \"GET\";\n+    private static final String SCENE_ID = \"sceneId\";\n+    private static final String ID = \"id\";\n+    private static final String REFRESH = \"refresh\";\n+    private static final String CONN_HDR = \"Connection\";\n+    private static final String CONN_VAL = \"close\"; // versus \"keep-alive\"\n+\n+    private final Logger logger = LoggerFactory.getLogger(HDPowerViewWebTargets.class);\n+\n+    /*\n+     * the hub returns a 423 error (resource locked) daily just after midnight;\n+     * which means it is temporarily undergoing maintenance; so we use \"soft\"\n+     * exception handling during the five minute maintenance period after a 423\n+     * error is received\n+     */\n+    private final int maintenancePeriod = 300;\n+    private Instant maintenanceScheduledEnd = Instant.now().minusSeconds(2 * maintenancePeriod);\n+\n     private WebTarget base;\n     private WebTarget shades;\n-    private WebTarget shadeMove;\n+    private WebTarget shade;\n     private WebTarget sceneActivate;\n     private WebTarget scenes;\n-    private final Logger logger = LoggerFactory.getLogger(HDPowerViewWebTargets.class);\n-    private final Gson gson;\n \n+    private final Gson gson = new Gson();\n+    \n+    /**\n+     * Initialize the web targets\n+     * \n+     * @param client    the Javax RS client (the binding)\n+     * @param ipAddress the IP address of the server (the hub)\n+     */\n     public HDPowerViewWebTargets(Client client, String ipAddress) {\n         base = client.target(\"http://\" + ipAddress + \"/api\");\n         shades = base.path(\"shades/\");\n-        shadeMove = base.path(\"shades/{id}\");\n+        shade = base.path(\"shades/{id}\");\n         sceneActivate = base.path(\"scenes\");\n         scenes = base.path(\"scenes/\");\n-        gson = new Gson();\n     }\n \n-    public Shades getShades() throws JsonParseException, IOException {\n-        Response response = invoke(shades.request().buildGet(), shades);\n-        if (response != null) {\n-            String result = response.readEntity(String.class);\n-            return gson.fromJson(result, Shades.class);\n-        } else {\n-            return null;\n-        }\n+    /**\n+     * Fetches a JSON package that describes all shades in the hub, and wraps it in\n+     * a Shades class instance\n+     * \n+     * @return Shades class instance\n+     * @throws JsonParseException      if there is a JSON parsing error\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public @Nullable Shades getShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        String json = invoke(shades.request().header(CONN_HDR, CONN_VAL).buildGet(), shades, null);\n+        return gson.fromJson(json, Shades.class);\n     }\n \n-    public Response moveShade(String shadeIdString, ShadePosition position) throws IOException {\n-        int shadeId = Integer.parseInt(shadeIdString);\n-        WebTarget target = shadeMove.resolveTemplate(\"id\", shadeId);\n-\n-        String body = gson.toJson(new ShadeMove(shadeId, position));\n-        return invoke(target.request().buildPut(Entity.entity(body, MediaType.APPLICATION_JSON_TYPE)), shadeMove);\n+    /**\n+     * Instructs the hub to move a specific shade\n+     * \n+     * @param shadeId  id of the shade to be moved\n+     * @param position instance of ShadePosition containing the new position\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public void moveShade(int shadeId, ShadePosition position) throws ProcessingException, HubMaintenanceException {\n+        WebTarget target = shade.resolveTemplate(ID, shadeId);\n+        String json = gson.toJson(new ShadeMove(shadeId, position));\n+        invoke(target.request().header(CONN_HDR, CONN_VAL)\n+                .buildPut(Entity.entity(json, MediaType.APPLICATION_JSON_TYPE)), target, json);\n+        return;\n     }\n \n-    public Scenes getScenes() throws JsonParseException, IOException {\n-        Response response = invoke(scenes.request().buildGet(), scenes);\n-        if (response != null) {\n-            String result = response.readEntity(String.class);\n-            return gson.fromJson(result, Scenes.class);\n-        } else {\n-            return null;\n-        }\n+    /**\n+     * Fetches a JSON package that describes all scenes in the hub, and wraps it in\n+     * a Scenes class instance\n+     * \n+     * @return Scenes class instance\n+     * @throws JsonParseException      if there is a JSON parsing error\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public @Nullable Scenes getScenes() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        String json = invoke(scenes.request().header(CONN_HDR, CONN_VAL).buildGet(), scenes, null);\n+        return gson.fromJson(json, Scenes.class);\n     }\n \n-    public void activateScene(int sceneId) {\n-        WebTarget target = sceneActivate.queryParam(\"sceneId\", sceneId);\n-        invoke(target.request().buildGet(), sceneActivate);\n+    /**\n+     * Instructs the hub to execute a specific scene\n+     * \n+     * @param sceneId id of the scene to be executed\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public void activateScene(int sceneId) throws ProcessingException, HubMaintenanceException {\n+        WebTarget target = sceneActivate.queryParam(SCENE_ID, sceneId);\n+        invoke(target.request().header(CONN_HDR, CONN_VAL).buildGet(), target, null);\n     }\n \n-    private Response invoke(Invocation invocation, WebTarget target) throws ProcessingException {\n+    private synchronized String invoke(Invocation invocation, WebTarget target, @Nullable String jsonCommand)\n+            throws ProcessingException, HubMaintenanceException {\n+        if (logger.isTraceEnabled()) {\n+            logger.trace(\"API command {} {}\", jsonCommand == null ? GET : PUT, target.getUri());\n+            if (jsonCommand != null) {\n+                logger.trace(\"JSON command = {}\", jsonCommand);\n+            }\n+        }\n         Response response;\n-        synchronized (this) {\n+        try {\n             response = invocation.invoke();\n+        } catch (ProcessingException e) {\n+            if (Instant.now().isBefore(maintenanceScheduledEnd)) {\n+                // throw \"softer\" exception during maintenance window\n+                logger.debug(\"Hub still undergoing maintenance\");\n+                throw new HubMaintenanceException(\"Hub still undergoing maintenance\");\n+            }\n+            throw e;\n         }\n-\n-        if (response.getStatus() == 423) {\n-            // the hub seems to return a 423 error (resource locked) once per day around midnight\n-            // this is probably some kind of regular re-initialization process, so suppress the error log\n-            logger.debug(\"Bridge returned '423' while invoking {}\", target.getUri());\n-            return null;\n-        } else if (response.getStatus() != 200) {\n-            logger.warn(\"Bridge returned '{}' while invoking {} : {}\", response.getStatus(), target.getUri(),\n-                    response.readEntity(String.class));\n-            return null;\n-        } else if (!response.hasEntity()) {\n-            logger.warn(\"Bridge returned null response while invoking {}\", target.getUri());\n-            return null;\n+        int statusCode = response.getStatus();\n+        if (statusCode == 423) {\n+            // set end of maintenance window, and throw a \"softer\" exception\n+            maintenanceScheduledEnd = Instant.now().plusSeconds(maintenancePeriod);\n+            logger.debug(\"Hub undergoing maintenance\");\n+            if (response.hasEntity()) {\n+                response.readEntity(String.class);\n+            }\n+            response.close();\n+            throw new HubMaintenanceException(\"Hub undergoing maintenance\");\n+        }\n+        if (statusCode != 200) {\n+            logger.warn(\"Hub returned HTTP error '{}'\", statusCode);\n+            if (response.hasEntity()) {\n+                response.readEntity(String.class);\n+            }\n+            response.close();\n+            throw new ProcessingException(String.format(\"HTTP %d error\", statusCode));\n+        }\n+        if (!response.hasEntity()) {\n+            logger.warn(\"Hub returned no content\");\n+            response.close();\n+            throw new ProcessingException(\"Missing response entity\");\n         }\n+        @SuppressWarnings(\"null\")", "originalCommit": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MDQ5MA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461060490", "bodyText": "Hmm. If I remove the suppression, then the Eclipse IDE does give me a warning as follows..\nUnsafe interpretation of method return type as '@NonNull' based on substitution 'T=@NonNull String'.\nDeclaring type 'Response' doesn't seem to be designed with null type annotations in mind\n\nAnd Eclipse IDE QuickFix suggests the solution \"Add @SuppressWarnings 'null' to xyz\"", "author": "andrewfg", "createdAt": "2020-07-27T17:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NDYwNA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461064604", "bodyText": "Basically I added @SuppressWarnings in all cases where the Eclipse IDE instructed me to do that (and I did it ONLY where it instructed me to do that).", "author": "andrewfg", "createdAt": "2020-07-27T17:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyNDk1OA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461124958", "bodyText": "I don't see this info (not a warning) in eclipse, but with maven. The reason for this info is, that Response has no null annotations. As readEntity() doesn't return null by javadoc, this info can safely be ignored.", "author": "fwolter", "createdAt": "2020-07-27T19:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczNDk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461734988", "bodyText": "I don't see this info (not a warning) in eclipse, but with maven.\n\nIndeed. The problem is that Maven's Null analysis is different than Eclipse's. Personally I like to have a clean compile in BOTH Maven and Eclipse. And AFAIK the only way to make both compilers happy is to Suppress warnings. :)", "author": "andrewfg", "createdAt": "2020-07-28T17:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1MzAxMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461753011", "bodyText": "Suppress Warning annotations are not inteded to suppress infos. Beside that, the unnecessary suppression causes eclipse to generate an info... Additionally, the origin of the info message is not in your code. I'd go for removing them. This makes it also consistent with most of the other bindings.", "author": "fwolter", "createdAt": "2020-07-28T17:32:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NjY1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461776655", "bodyText": "I just turned off these warnings in Eclipse ;) and so have deleted the suppression too :)", "author": "andrewfg", "createdAt": "2020-07-28T18:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODAxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461788015", "bodyText": "PS actually, with the suppressions removed, Maven also gives an INFO (not a WARNING), but I have committed the changes anyway..", "author": "andrewfg", "createdAt": "2020-07-28T18:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzQ4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567487", "bodyText": "These have no effect an can be removed.", "author": "fwolter", "createdAt": "2020-07-26T20:03:43Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")", "originalCommit": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MDk1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461060957", "bodyText": "..ditto above..", "author": "andrewfg", "createdAt": "2020-07-27T17:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzU1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567553", "bodyText": "This is not needed, as the compiler is intelligent enough with local variables.", "author": "fwolter", "createdAt": "2020-07-26T20:04:22Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")\n+            String shadeId = item.getValue();\n+            @Nullable", "originalCommit": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MjQ0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461062441", "bodyText": "If I remove the @Nullable then the Eclipse IDE does give a warning, and then QuickFix suggests the solution \"Add @SuppressWarnings 'null' to xyz\" analog to above..", "author": "andrewfg", "createdAt": "2020-07-27T17:46:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyNjc3OA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461126778", "bodyText": "Strange, I don't get a warning. You could declare the Map's values as Nullable if the Map can contain null values:\nMap<Thing, @Nullable String> ret = new HashMap<>();", "author": "fwolter", "createdAt": "2020-07-27T19:44:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3Nzg2NA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461777864", "bodyText": "Done, as above..", "author": "andrewfg", "createdAt": "2020-07-28T18:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzkzNA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567934", "bodyText": "The suppressions can be removed again.", "author": "fwolter", "createdAt": "2020-07-26T20:08:02Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")\n+            String shadeId = item.getValue();\n+            @Nullable\n+            ShadeData shadeData = idShadeDataMap.get(shadeId);\n+            updateShadeThing(shadeId, thing, shadeData);\n+        }\n+    }\n+\n+    private void updateShadeThing(String shadeId, Thing thing, @Nullable ShadeData shadeData) {\n+        HDPowerViewShadeHandler thingHandler = ((HDPowerViewShadeHandler) thing.getHandler());\n+        if (thingHandler == null) {\n+            logger.debug(\"Shade '{}' handler not initialized\", shadeId);\n+            return;\n+        }\n+        if (shadeData == null) {\n+            logger.debug(\"Shade '{}' has no data in hub\", shadeId);\n         } else {\n-            logger.warn(\"No response to shade poll\");\n+            logger.debug(\"Updating shade '{}'\", shadeId);\n         }\n+        thingHandler.onReceiveUpdate(shadeData);\n     }\n \n-    private void pollScenes() throws JsonParseException, ProcessingException, IOException {\n+    private void pollScenes() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Scenes scenes = webTargets.getScenes();\n-        if (scenes != null) {\n-            logger.debug(\"Received {} scenes\", scenes.sceneIds.size());\n-            Map<Integer, Channel> channels = getSceneChannelsById();\n-            for (Scene scene : scenes.sceneData) {\n-                // Remove existing scene from the map\n-                Channel existingChannel = channels.remove(scene.id);\n-                if (existingChannel == null) {\n-                    // Create the new scene\n-                    ChannelUID channelUID = new ChannelUID(getThing().getUID(), Integer.toString(scene.id, 10));\n-                    Channel channel = ChannelBuilder.create(channelUID, \"Switch\").withType(sceneChannelTypeUID)\n-                            .withLabel(scene.getName()).withDescription(\"Activates the scene \" + scene.getName())\n-                            .build();\n-                    updateThing(editThing().withChannel(channel).build());\n-                    logger.debug(\"Created new channel for scene {}\", scene.id);\n-                } else {\n-                    logger.debug(\"Skipping existing scene {}\", scene.id);\n-                }\n-            }\n+        if (scenes == null) {\n+            throw new JsonParseException(\"Missing 'scenes' element\");\n+        }\n \n-            // Remove any previously created channels that no longer exist\n-            if (!channels.isEmpty()) {\n-                logger.debug(\"Removing {} existing scenes\", channels.size());\n-                List<Channel> allChannels = new ArrayList<>(getThing().getChannels());\n-                allChannels.removeAll(channels.values());\n-                updateThing(editThing().withChannels(allChannels).build());\n+        List<Scene> sceneData = scenes.sceneData;\n+        if (sceneData == null) {\n+            throw new JsonParseException(\"Missing 'scenes.sceneData' element\");\n+        }\n+        logger.debug(\"Received data for {} scenes\", sceneData.size());\n+\n+        Map<String, Channel> idChannelMap = getIdChannelMap();\n+        for (Scene scene : sceneData) {\n+            // remove existing scene channel from the map\n+            String sceneId = Integer.toString(scene.id);\n+            if (idChannelMap.containsKey(sceneId)) {\n+                idChannelMap.remove(sceneId);\n+                logger.debug(\"Keeping channel for existing scene '{}'\", sceneId);\n+            } else {\n+                // create a new scene channel\n+                ChannelUID channelUID = new ChannelUID(getThing().getUID(), sceneId);\n+                Channel channel = ChannelBuilder.create(channelUID, \"Switch\").withType(sceneChannelTypeUID)\n+                        .withLabel(scene.getName()).withDescription(\"Activates the scene \" + scene.getName()).build();\n+                updateThing(editThing().withChannel(channel).build());\n+                logger.debug(\"Creating new channel for scene '{}'\", sceneId);\n             }\n-        } else {\n-            logger.warn(\"No response to scene poll\");\n+        }\n+\n+        // remove any previously created channels that no longer exist\n+        if (!idChannelMap.isEmpty()) {\n+            logger.debug(\"Removing {} orphan scene channels\", idChannelMap.size());\n+            List<Channel> allChannels = new ArrayList<>(getThing().getChannels());\n+            allChannels.removeAll(idChannelMap.values());\n+            updateThing(editThing().withChannels(allChannels).build());\n         }\n     }\n \n-    private Map<String, Thing> getThingsByShadeId() {\n-        Map<String, Thing> ret = new HashMap<>();\n+    private Map<Thing, String> getThingIdMap() {\n+        Map<Thing, String> ret = new HashMap<>();\n         for (Thing thing : getThing().getThings()) {\n-            if (thing.getThingTypeUID().equals(HDPowerViewBindingConstants.THING_TYPE_SHADE)) {\n-                String id = thing.getConfiguration().as(HDPowerViewShadeConfiguration.class).id;\n-                ret.put(id, thing);\n+            String id = thing.getConfiguration().as(HDPowerViewShadeConfiguration.class).id;\n+            if (id != null && !id.isEmpty()) {\n+                ret.put(thing, id);\n             }\n         }\n         return ret;\n     }\n \n-    private Map<Integer, Channel> getSceneChannelsById() {\n-        Map<Integer, Channel> ret = new HashMap<>();\n+    private Map<String, ShadeData> getIdShadeDataMap(List<ShadeData> shadeData) {\n+        Map<String, ShadeData> ret = new HashMap<>();\n+        for (ShadeData shade : shadeData) {\n+            if (shade.id != 0) {\n+                ret.put(Integer.toString(shade.id), shade);\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    private Map<String, Channel> getIdChannelMap() {\n+        Map<String, Channel> ret = new HashMap<>();\n         for (Channel channel : getThing().getChannels()) {\n-            if (channel.getChannelTypeUID().equals(sceneChannelTypeUID)) {\n-                Integer id = Integer.parseInt(channel.getUID().getId());\n-                ret.put(id, channel);\n+            if (sceneChannelTypeUID.equals(channel.getChannelTypeUID())) {\n+                ret.put(channel.getUID().getId(), channel);\n             }\n         }\n         return ret;\n     }\n+\n+    private void requestRefreshShades() {\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            ThingHandler handler = thing.getHandler();\n+            if (handler instanceof HDPowerViewShadeHandler) {\n+                ((HDPowerViewShadeHandler) handler).requestRefreshShade();\n+            } else {\n+                @SuppressWarnings(\"null\")", "originalCommit": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NDE0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461064147", "bodyText": "..ditto..", "author": "andrewfg", "createdAt": "2020-07-27T17:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2ODAzNg==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460568036", "bodyText": "It's good practice to append the unit to the field name e.g. REFRESH_DELAY_SEC.", "author": "fwolter", "createdAt": "2020-07-26T20:09:11Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewShadeHandler.java", "diffHunk": "@@ -12,119 +12,253 @@\n  */\n package org.openhab.binding.hdpowerview.internal.handler;\n \n-import java.io.IOException;\n+import static org.openhab.binding.hdpowerview.internal.HDPowerViewBindingConstants.*;\n+import static org.openhab.binding.hdpowerview.internal.api.ActuatorClass.*;\n+import static org.openhab.binding.hdpowerview.internal.api.CoordinateSystem.*;\n \n-import javax.ws.rs.core.Response;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n \n+import javax.ws.rs.ProcessingException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.smarthome.core.library.types.OnOffType;\n import org.eclipse.smarthome.core.library.types.PercentType;\n import org.eclipse.smarthome.core.library.types.StopMoveType;\n import org.eclipse.smarthome.core.library.types.UpDownType;\n import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n import org.eclipse.smarthome.core.types.Command;\n+import org.eclipse.smarthome.core.types.RefreshType;\n+import org.eclipse.smarthome.core.types.State;\n import org.eclipse.smarthome.core.types.UnDefType;\n-import org.openhab.binding.hdpowerview.internal.HDPowerViewBindingConstants;\n+import org.openhab.binding.hdpowerview.internal.HDPowerViewWebTargets;\n+import org.openhab.binding.hdpowerview.internal.HubMaintenanceException;\n+import org.openhab.binding.hdpowerview.internal.api.ActuatorClass;\n+import org.openhab.binding.hdpowerview.internal.api.CoordinateSystem;\n import org.openhab.binding.hdpowerview.internal.api.ShadePosition;\n-import org.openhab.binding.hdpowerview.internal.api.responses.Shades.Shade;\n+import org.openhab.binding.hdpowerview.internal.api.responses.Shade;\n+import org.openhab.binding.hdpowerview.internal.api.responses.Shades.ShadeData;\n import org.openhab.binding.hdpowerview.internal.config.HDPowerViewShadeConfiguration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- * Handles commands for an HD Power View shade\n+ * Handles commands for an HD PowerView Shade\n  *\n  * @author Andy Lintner - Initial contribution\n+ * @author Andrew Fiddian-Green - Added support for secondary rail positions\n  */\n+@NonNullByDefault\n public class HDPowerViewShadeHandler extends AbstractHubbedThingHandler {\n \n-    private static final int MAX_POSITION = 65535;\n-    private static final int MAX_VANE = 32767;\n-\n     private final Logger logger = LoggerFactory.getLogger(HDPowerViewShadeHandler.class);\n \n+    private static final int REFRESH_DELAY = 10;", "originalCommit": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ4MA==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461065480", "bodyText": "Ok. Will do.", "author": "andrewfg", "createdAt": "2020-07-27T17:51:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2ODAzNg=="}], "type": "inlineReview"}, {"oid": "a74b808d466fcdc326e099996d7600449ccc336a", "url": "https://github.com/openhab/openhab-addons/commit/a74b808d466fcdc326e099996d7600449ccc336a", "message": "[hdpowerview] rename constant at request of @fwolter\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-27T18:40:15Z", "type": "commit"}, {"oid": "216b8f192a5632f29a344c205d3174205f24ed76", "url": "https://github.com/openhab/openhab-addons/commit/216b8f192a5632f29a344c205d3174205f24ed76", "message": "[hdpowerview] delted hard refresh channel\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-28T18:18:48Z", "type": "commit"}, {"oid": "d3ab3a6032e5c6b671cb8b61d7c86277c50e849b", "url": "https://github.com/openhab/openhab-addons/commit/d3ab3a6032e5c6b671cb8b61d7c86277c50e849b", "message": "[hdpowerview] convert hard refresh channel to auto; remove null supression\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-28T18:23:25Z", "type": "commit"}, {"oid": "a69dfbda006224788905ec3ddbbc5b6344894078", "url": "https://github.com/openhab/openhab-addons/commit/a69dfbda006224788905ec3ddbbc5b6344894078", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-28T18:25:04Z", "type": "commit"}, {"oid": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d", "url": "https://github.com/openhab/openhab-addons/commit/0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d", "message": "[hdpowerview] spotless\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-28T18:39:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxMjI2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461812263", "bodyText": "For further coding: No harm in canceling an already cancelled task. The isCancelled() can be removed safely.", "author": "fwolter", "createdAt": "2020-07-28T19:15:04Z", "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -110,25 +138,37 @@ public void dispose() {\n         stopPoll();\n     }\n \n-    void pollNow() {\n-        if (isInitialized()) {\n-            schedulePoll();\n+    private void schedulePoll() {\n+        ScheduledFuture<?> future = this.pollFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(false);\n         }\n-    }\n+        logger.debug(\"Scheduling poll for 5000ms out, then every {}ms\", refreshInterval);\n+        this.pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 5000, refreshInterval, TimeUnit.MILLISECONDS);\n \n-    private void schedulePoll() {\n-        if (pollFuture != null) {\n-            pollFuture.cancel(false);\n+        future = this.hardRefreshFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(false);\n+        }\n+        if (hardRefreshInterval > 0) {\n+            logger.debug(\"Scheduling hard refresh every {}minutes\", hardRefreshInterval);\n+            this.hardRefreshFuture = scheduler.scheduleWithFixedDelay(this::requestRefreshShades, 1,\n+                    hardRefreshInterval, TimeUnit.MINUTES);\n         }\n-        logger.debug(\"Scheduling poll for 500ms out, then every {} ms\", refreshInterval);\n-        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 500, refreshInterval, TimeUnit.MILLISECONDS);\n     }\n \n     private synchronized void stopPoll() {\n-        if (pollFuture != null && !pollFuture.isCancelled()) {\n-            pollFuture.cancel(true);\n-            pollFuture = null;\n+        ScheduledFuture<?> future = this.pollFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(true);", "originalCommit": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NjY1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r462246655", "bodyText": "Removed.", "author": "andrewfg", "createdAt": "2020-07-29T12:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxMjI2Mw=="}], "type": "inlineReview"}, {"oid": "e400b830a4fcce7b3e78b52d140de7241e272c09", "url": "https://github.com/openhab/openhab-addons/commit/e400b830a4fcce7b3e78b52d140de7241e272c09", "message": "[hdpowerview] longer hard refresh interval\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-29T11:58:04Z", "type": "commit"}, {"oid": "388f19c4d848673944f2dd9bd7b1aa54b9da7180", "url": "https://github.com/openhab/openhab-addons/commit/388f19c4d848673944f2dd9bd7b1aa54b9da7180", "message": "[hdpowerview] delete isCancelled calls\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-29T11:59:04Z", "type": "commit"}, {"oid": "9b114c8bce6460e40a4c88b287fb09671215d1ba", "url": "https://github.com/openhab/openhab-addons/commit/9b114c8bce6460e40a4c88b287fb09671215d1ba", "message": "[hdpowerview] delete refresh channel type\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-29T11:59:33Z", "type": "commit"}, {"oid": "d770c03ebb1c3a6b38f6ceaa06d787fa1059b757", "url": "https://github.com/openhab/openhab-addons/commit/d770c03ebb1c3a6b38f6ceaa06d787fa1059b757", "message": "[hdpowerview] typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-07-29T12:02:51Z", "type": "commit"}]}