{"pr_number": 7777, "pr_title": "[homekit] Use BigDecimal to ensure accurate rounding", "pr_createdAt": "2020-05-24T19:14:58Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7777", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTc5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7777#discussion_r429689792", "bodyText": "It bothers me that you have these duplicate methods for converting to and from Celsius.\nFor the sake of refactoring I'd prefer if you use this utility method to handle all your conversions and rounding.\n\n    private <T extends Quantity<T>> double convertAndRound(double value, Unit<T> from, Unit<T> to) {\n        double rawValue = from == to ? value : from.getConverterTo(to).convert(value);\n        return new BigDecimal(rawValue).setScale(1, RoundingMode.HALF_UP).doubleValue();\n    }\n\nThen you can make your methods look like this:\nprotected double convertToCelsius(double degrees){\n     return convertAndRound(degrees, getSettings().useFahrenheitTemperature ? ImperialUnits.FAHRENHEIT : SIUnits.CELSIUS, SIUnits.CELSIUS);\n}\n\nprotected double convertFromCelsius(double degrees){\n     return convertAndRound(degrees, getSettings().useFahrenheitTemperature ? SIUnits.CELSIUS : ImperialUnits.FAHRENHEIT, ImperialUnits.FAHRENHEIT);\n}\n\nAlso, I would like you to find someway to get rid of the code duplication of these methods in HomekitTemperatureSensorImpl and HomekitTermostatImpl. Either put these methods in a shared superclass or put them in a utility class.", "author": "cpmeister", "createdAt": "2020-05-25T00:14:05Z", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/HomekitTemperatureSensorImpl.java", "diffHunk": "@@ -58,17 +60,23 @@ public void unsubscribeCurrentTemperature() {\n \n     protected double convertToCelsius(double degrees) {\n         if (getSettings().useFahrenheitTemperature) {\n-            return Math.round((5d / 9d) * (degrees - 32d) * 1000d) / 1000d;\n+            double rawConvert = (5d / 9d) * (degrees - 32d);\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(rawConvert)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         } else {\n-            return degrees;\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(degrees)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         }", "originalCommit": "7d9611640aad5eb100003e98a62b07805de68b28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwMjI5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7777#discussion_r429702297", "bodyText": "Is that better?", "author": "ecdye", "createdAt": "2020-05-25T01:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTc5Mg=="}], "type": "inlineReview"}, {"oid": "bd70342123065401536bc3787823cd943e651450", "url": "https://github.com/openhab/openhab-addons/commit/bd70342123065401536bc3787823cd943e651450", "message": "Use BigDecimal to ensure accurate rounding\n\nTemperature values are often not reported correctly in HomeKit\nespecially when they are in Fahrenheit this also has the side effect of\nhaving no decimal when using Fahrenheit temperatures.\n\nThis intends to fix this and allows for accurate rounding and reporting\nof temperatures.\n\nSigned-off-by: Ethan Dye <mrtops03@gmail.com>", "committedDate": "2020-05-25T01:47:05Z", "type": "commit"}]}