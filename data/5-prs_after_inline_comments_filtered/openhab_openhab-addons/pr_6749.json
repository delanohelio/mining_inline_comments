{"pr_number": 6749, "pr_title": "[yeelight] Add support for yeelight 650 with ambient light (Closes #6\u2026", "pr_createdAt": "2020-01-02T20:45:08Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/6749", "timeline": [{"oid": "633d32e0a1ed3c91a2eb91513aea4c6d3518cf46", "url": "https://github.com/openhab/openhab-addons/commit/633d32e0a1ed3c91a2eb91513aea4c6d3518cf46", "message": "[yeelight] Add support for yeelight 650 with ambient light (Closes #6227)\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-02T20:34:10Z", "type": "commit"}, {"oid": "8e258d4828c4b7f6a2ebd654729f16bd0773c2e5", "url": "https://github.com/openhab/openhab-addons/commit/8e258d4828c4b7f6a2ebd654729f16bd0773c2e5", "message": "[yeelight] Combine switch cases with similar logic\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-04T00:18:55Z", "type": "commit"}, {"oid": "27d03d3f22082ff36aac99719c8e11228d0d8d29", "url": "https://github.com/openhab/openhab-addons/commit/27d03d3f22082ff36aac99719c8e11228d0d8d29", "message": "[yeelight] don't initialize variable with useless value\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-04T00:18:55Z", "type": "commit"}, {"oid": "d8758365c4effa12325386f06fda9fdf52befc36", "url": "https://github.com/openhab/openhab-addons/commit/d8758365c4effa12325386f06fda9fdf52befc36", "message": "[yeelight] Instead of creating an executor service on every search we create a cached thread pool once.\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-04T00:20:33Z", "type": "commit"}, {"oid": "c7c1fcb1ee65e2ce7f1e1b13c80cd73a6aefabd9", "url": "https://github.com/openhab/openhab-addons/commit/c7c1fcb1ee65e2ce7f1e1b13c80cd73a6aefabd9", "message": "[yeelight] Fixes code review remarks\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-08T18:11:24Z", "type": "forcePushed"}, {"oid": "f0e0c2f780b37946e88121b3a207ea3033df8137", "url": "https://github.com/openhab/openhab-addons/commit/f0e0c2f780b37946e88121b3a207ea3033df8137", "message": "[yeelight] Fixes code review remarks\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-11T17:20:36Z", "type": "commit"}, {"oid": "f0e0c2f780b37946e88121b3a207ea3033df8137", "url": "https://github.com/openhab/openhab-addons/commit/f0e0c2f780b37946e88121b3a207ea3033df8137", "message": "[yeelight] Fixes code review remarks\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-11T17:20:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzAwMw==", "url": "https://github.com/openhab/openhab-addons/pull/6749#discussion_r373623003", "bodyText": "Is it really necessary to catch Exception here? Whatr type of exceptions do you expect? The problem with catching Exception is that it also catches NPE and therefore might hide programming errors.", "author": "J-N-K", "createdAt": "2020-01-31T18:33:45Z", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/CeilingDeviceWithAmbientDevice.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.yeelight.internal.lib.device;\n+\n+import org.openhab.binding.yeelight.internal.lib.enums.ActiveMode;\n+import org.openhab.binding.yeelight.internal.lib.enums.DeviceType;\n+import org.openhab.binding.yeelight.internal.lib.enums.MethodAction;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+/**\n+ * The {@link CeilingDeviceWithAmbientDevice} contains methods for handling the ceiling device with ambient light.\n+ *\n+ * @author Viktor Koop - Initial contribution\n+ */\n+public class CeilingDeviceWithAmbientDevice extends CeilingDevice\n+        implements DeviceWithAmbientLight, DeviceWithNightlight {\n+    private final Logger logger = LoggerFactory.getLogger(CeilingDeviceWithAmbientDevice.class);\n+\n+    public CeilingDeviceWithAmbientDevice(String id) {\n+        super(id);\n+\n+        mDeviceType = DeviceType.ceiling4;\n+    }\n+\n+    @Override\n+    public void onNotify(String msg) {\n+        logger.debug(\"Got state: {}\", msg);\n+\n+        JsonObject result = new JsonParser().parse(msg).getAsJsonObject();\n+\n+        try {\n+            if (result.has(\"id\")) {\n+                String id = result.get(\"id\").getAsString();\n+                // for cmd transaction.\n+\n+                if (mQueryList.contains(id)) {\n+                    JsonArray status = result.get(\"result\").getAsJsonArray();\n+\n+                    final String backgroundPowerState = status.get(4).toString();\n+                    if (\"\\\"off\\\"\".equals(backgroundPowerState)) {\n+                        mDeviceStatus.setBackgroundIsPowerOff(true);\n+                    } else if (\"\\\"on\\\"\".equals(backgroundPowerState)) {\n+                        mDeviceStatus.setBackgroundIsPowerOff(false);\n+                    }\n+\n+                    final int backgroundBrightness = status.get(5).getAsInt();\n+                    mDeviceStatus.setBackgroundBrightness(backgroundBrightness);\n+\n+                    final int backgroundHue = status.get(6).getAsInt();\n+                    mDeviceStatus.setBackgroundHue(backgroundHue);\n+\n+                    final int backgroundSaturation = status.get(7).getAsInt();\n+                    mDeviceStatus.setBackgroundSat(backgroundSaturation);\n+\n+                    final int activeMode = status.get(8).getAsInt();\n+                    mDeviceStatus.setActiveMode(ActiveMode.values()[activeMode]);\n+                }\n+            }\n+        } catch (Exception e) {", "originalCommit": "f0e0c2f780b37946e88121b3a207ea3033df8137", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2MDIzMw==", "url": "https://github.com/openhab/openhab-addons/pull/6749#discussion_r373660233", "bodyText": "I don't think the try/catch block is needed at all and will remove it.", "author": "vkoop", "createdAt": "2020-01-31T19:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDUwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/6749#discussion_r373624505", "bodyText": "Wouldn't it be possible to use switch (property)  here? Since Java 7 we can switch on strings.", "author": "J-N-K", "createdAt": "2020-01-31T18:37:11Z", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/DeviceBase.java", "diffHunk": "@@ -79,48 +78,39 @@ public void onNotify(String response) {\n         boolean needNotify = true;\n         JsonObject message = new JsonParser().parse(response).getAsJsonObject();\n         try {\n-            String updateProp = \"\";\n             if (message.has(\"method\")) {\n                 String method = message.get(\"method\").toString().replace(\"\\\"\", \"\");\n                 if (method.equals(\"props\")) {// Property notify\n                     String params = message.get(\"params\").toString();\n                     JsonObject propsObject = new JsonParser().parse(params).getAsJsonObject();\n-                    Set<Entry<String, JsonElement>> props = propsObject.entrySet();\n-                    Iterator<Entry<String, JsonElement>> iterator = props.iterator();\n-                    while (iterator.hasNext()) {\n-                        Entry<String, JsonElement> prop = iterator.next();\n-                        if (prop.getKey().equals(\"power\")) {\n-                            updateProp += \" power\";\n+                    for (Entry<String, JsonElement> prop : propsObject.entrySet()) {\n+                        final YeelightDeviceProperty property = YeelightDeviceProperty.fromString(prop.getKey());\n+                        if (YeelightDeviceProperty.POWER.equals(property)) {", "originalCommit": "f0e0c2f780b37946e88121b3a207ea3033df8137", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2MTg4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/6749#discussion_r373661887", "bodyText": "Initially I didn't want to refactor to much of the code to simplify the review process.\nI've changed the if/else block to a switch statement.", "author": "vkoop", "createdAt": "2020-01-31T20:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDUwNQ=="}], "type": "inlineReview"}, {"oid": "dbcbb991001a049858ddccafe8dd0b5f2e575713", "url": "https://github.com/openhab/openhab-addons/commit/dbcbb991001a049858ddccafe8dd0b5f2e575713", "message": "[yeelight] Fixed code review remarks.\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-31T20:25:36Z", "type": "commit"}, {"oid": "dbcbb991001a049858ddccafe8dd0b5f2e575713", "url": "https://github.com/openhab/openhab-addons/commit/dbcbb991001a049858ddccafe8dd0b5f2e575713", "message": "[yeelight] Fixed code review remarks.\n\nSigned-off-by: Viktor Koop <viktor.koop@googlemail.com>", "committedDate": "2020-01-31T20:25:36Z", "type": "forcePushed"}]}