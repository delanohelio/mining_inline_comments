{"pr_number": 9522, "pr_title": "[ecobee] Rework discovery", "pr_createdAt": "2020-12-25T22:01:56Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9522", "timeline": [{"oid": "98f421c6bff8f5feb87a85fffaff74714b3ba35f", "url": "https://github.com/openhab/openhab-addons/commit/98f421c6bff8f5feb87a85fffaff74714b3ba35f", "message": "Rework discovery\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>", "committedDate": "2020-12-25T14:04:05Z", "type": "commit"}, {"oid": "cdca20202e4efb871aea707f008437444d0758a2", "url": "https://github.com/openhab/openhab-addons/commit/cdca20202e4efb871aea707f008437444d0758a2", "message": "Consolidate discovery into one service\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>", "committedDate": "2020-12-25T21:57:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MTc2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549041766", "bodyText": "This check should be removed. This method is called upon manually triggered scans, so it must be performed even if background discovery is not activated.", "author": "kaikreuzer", "createdAt": "2020-12-26T23:22:44Z", "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::discover, DISCOVERY_INITIAL_DELAY_SECONDS,\n+                    DISCOVERY_INTERVAL_SECONDS, TimeUnit.SECONDS);\n+        }\n+    }\n+\n+    @Override\n+    protected void stopBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Stopping background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob != null) {\n+            localDiscoveryJob.cancel(true);\n+            discoveryJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void startScan() {\n+        logger.debug(\"EcobeeDiscovery: Starting discovery scan\");\n+        discover();\n+    }\n+\n+    private void discover() {\n+        if (!bridgeHandler.isBackgroundDiscoveryEnabled()) {", "originalCommit": "cdca20202e4efb871aea707f008437444d0758a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEwODAxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549108019", "bodyText": "Good catch. I'll fix this.", "author": "mhilbush", "createdAt": "2020-12-27T12:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MTc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0NzA1OA==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549147058", "bodyText": "Fixed", "author": "mhilbush", "createdAt": "2020-12-27T18:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MTc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549042364", "bodyText": "You should check whether isBackgroundDiscoveryEnabled returns true before scheduling this job.", "author": "kaikreuzer", "createdAt": "2020-12-26T23:30:29Z", "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::discover, DISCOVERY_INITIAL_DELAY_SECONDS,", "originalCommit": "cdca20202e4efb871aea707f008437444d0758a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEwODM1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549108356", "bodyText": "From what I can see, startBackgroundDiscovery is being called before the bridge handler has initialized, therefore the configuration is not available at the time the job is scheduled.", "author": "mhilbush", "createdAt": "2020-12-27T12:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzOTI2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549139269", "bodyText": "Hm, I see. Then keep the scheduled job active in any case and do the check within the job as you intended to do it.", "author": "kaikreuzer", "createdAt": "2020-12-27T17:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0ODQ3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549148476", "bodyText": "Yeah, I thought it was odd that startBackgroundDiscovery can be called before the bridge thing has initialized. Especially in the case where the discovery service implements ThingHandlerService in order to get access to the bridge handler.\nI also ran into something a little weird for which I'd like your opinion. Let me know if you think I should log an issue for this.\nHere's the scenario:\nI have a things file containing two bridge things:\nBridge ecobee:account:account \"Ecobee Account\" [ apiKey=\"XXXXXXX\", apiTimeout=20, discoveryEnabled=false, refreshIntervalNormal=30, refreshIntervalQuick=5 ] {\n}\n\nBridge zoneminder:server:server \"Zoneminder Server\" [ host=\"zoneminder.host\", useSSL=false, portNumber=\"80\", urlPath=\"/zm\", discoveryEnabled=false, refreshInterval=30, defaultAlarmDuration=180 ] {\n}\n\nNotice that both Bridge definitions have a parameter called discoveryEnabled and that both are false.\nIf I change just the Zoneminder discoveryEnabled to true, I see this behavior.\n2020-12-27 13:15:07.103 [INFO ] [el.core.internal.ModelRepositoryImpl] - Loading model 'test.things'\n2020-12-27 13:15:07.120 [DEBUG] [.thing.internal.GenericThingProvider] - Read things from model 'test.things'\n2020-12-27 13:15:07.122 [DEBUG] [.thing.internal.GenericThingProvider] - Updating thing 'ecobee:account:account' from model 'test.things'.\n2020-12-27 13:15:07.136 [DEBUG] [.thing.internal.GenericThingProvider] - Updating thing 'zoneminder:server:server' from model 'test.things'.\n\nIf I change just the Zoneminder discoveryEnabled back to false, I see this behavior.\n2020-12-27 13:17:36.865 [INFO ] [el.core.internal.ModelRepositoryImpl] - Loading model 'test.things'\n2020-12-27 13:17:36.883 [DEBUG] [.thing.internal.GenericThingProvider] - Read things from model 'test.things'\n2020-12-27 13:17:36.886 [DEBUG] [.thing.internal.GenericThingProvider] - Updating thing 'ecobee:account:account' from model 'test.things'.", "author": "mhilbush", "createdAt": "2020-12-27T18:20:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwOTgzNA==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549409834", "bodyText": "Sounds not what one would expect. Clearly, the thing where something has changed should be updated...\nIf you are able to minimise this to an easily reproducible case (without requiring any hardware, so the astro binding might be a good fit), an issue in openhab-core will make sense.", "author": "kaikreuzer", "createdAt": "2020-12-28T16:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA=="}], "type": "inlineReview"}, {"oid": "5546563d28a615f9e15b23483e988318a39a6a91", "url": "https://github.com/openhab/openhab-addons/commit/5546563d28a615f9e15b23483e988318a39a6a91", "message": "Address review feedback\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>", "committedDate": "2020-12-27T18:04:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDMwMA==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190300", "bodyText": "You don't need to call this since the super implementation is empty by default.", "author": "cpmeister", "createdAt": "2020-12-28T01:58:39Z", "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();", "originalCommit": "5546563d28a615f9e15b23483e988318a39a6a91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2Nzc0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549367747", "bodyText": "Removed", "author": "mhilbush", "createdAt": "2020-12-28T14:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDY1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190653", "bodyText": "Maybe this should be synchronized instead of discoverThermostats() and discoverSensors().", "author": "cpmeister", "createdAt": "2020-12-28T02:02:05Z", "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::backgroundDiscover, DISCOVERY_INITIAL_DELAY_SECONDS,\n+                    DISCOVERY_INTERVAL_SECONDS, TimeUnit.SECONDS);\n+        }\n+    }\n+\n+    @Override\n+    protected void stopBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Stopping background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob != null) {\n+            localDiscoveryJob.cancel(true);\n+            discoveryJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void startScan() {\n+        logger.debug(\"EcobeeDiscovery: Starting discovery scan\");\n+        discover();\n+    }\n+\n+    private void backgroundDiscover() {\n+        if (!bridgeHandler.isBackgroundDiscoveryEnabled()) {\n+            return;\n+        }\n+        discover();\n+    }\n+\n+    private void discover() {", "originalCommit": "5546563d28a615f9e15b23483e988318a39a6a91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5Mzk5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549193992", "bodyText": "I thought about that. As the thermostat and sensor discovery processes are largely independent, I decided to do it at that level. Is there a preference for doing it here instead?", "author": "mhilbush", "createdAt": "2020-12-28T02:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDk4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190981", "bodyText": "Is this method ever called?", "author": "cpmeister", "createdAt": "2020-12-28T02:04:39Z", "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/handler/EcobeeThermostatBridgeHandler.java", "diffHunk": "@@ -179,8 +163,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         });\n     }\n \n-    public void setDiscoveryService(SensorDiscoveryService discoveryService) {\n-        this.discoveryService = discoveryService;\n+    public boolean isBackgroundDiscoveryEnabled() {\n+        return ((EcobeeAccountBridgeHandler) getBridge().getHandler()).isBackgroundDiscoveryEnabled();\n     }", "originalCommit": "5546563d28a615f9e15b23483e988318a39a6a91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MzYwMg==", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549193602", "bodyText": "It was before I consolidated the two discovery services into one. It can be removed now. Good spot.", "author": "mhilbush", "createdAt": "2020-12-28T02:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDk4MQ=="}], "type": "inlineReview"}, {"oid": "89f444a4e73b3395426071138e4008209fed1d3b", "url": "https://github.com/openhab/openhab-addons/commit/89f444a4e73b3395426071138e4008209fed1d3b", "message": "Address review feedback\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>", "committedDate": "2020-12-28T14:29:24Z", "type": "commit"}]}