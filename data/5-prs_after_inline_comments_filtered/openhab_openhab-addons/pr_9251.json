{"pr_number": 9251, "pr_title": "[telegram] Add event channels and Answer overload", "pr_createdAt": "2020-12-05T23:34:09Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9251", "timeline": [{"oid": "7d1d472777982ac6f862f1e9a89125bff29abe06", "url": "https://github.com/openhab/openhab-addons/commit/7d1d472777982ac6f862f1e9a89125bff29abe06", "message": "Add event channels and Answer overload\n\nSigned-off-by: Michael Murton <6764025+CrazyIvan359@users.noreply.github.com>", "committedDate": "2020-12-05T23:10:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDE5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r537800196", "bodyText": "Please cache callbackQuery.data().split(\" \", 2) to a local variable so it isn't called twice.", "author": "cpmeister", "createdAt": "2020-12-07T20:12:52Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +404,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n+                    callbackPayload.addProperty(\"callback_id\", callbackQuery.id());\n+                    callbackPayload.addProperty(\"reply_id\", callbackQuery.data().split(\" \", 2)[0]);\n+                    callbackPayload.addProperty(\"text\", callbackQuery.data().split(\" \", 2)[1]);", "originalCommit": "7d1d472777982ac6f862f1e9a89125bff29abe06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4Njg5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r538986893", "bodyText": "Resolved in 7fe68eb", "author": "CrazyIvan359", "createdAt": "2020-12-09T03:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMTc5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r537801797", "bodyText": "Similar code is used in several places. Please refactor this into a function and call that instead.", "author": "cpmeister", "createdAt": "2020-12-07T20:15:42Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -278,6 +289,99 @@ private int handleUpdates(List<Update> updates) {\n                     // chat\n                 }\n \n+                // build and publish messageEvent trigger channel payload\n+                JsonObject messageRaw = json.parse(gson.toJson(message)).getAsJsonObject();\n+                JsonObject messagePayload = new JsonObject();\n+                messagePayload.addProperty(\"message_id\", message.messageId());\n+                messagePayload.addProperty(\"from\",\n+                        String.join(\" \", new String[] { message.from().firstName(), message.from().lastName() }));\n+                messagePayload.addProperty(\"chat_id\", message.chat().id());\n+                if (messageRaw.has(\"text\")) {\n+                    messagePayload.addProperty(\"text\", message.text());\n+                }\n+                if (messageRaw.has(\"animation\")) {\n+                    JsonObject animationPayload = messageRaw.getAsJsonObject(\"animation\");\n+                    String animationURL = getFullDownloadUrl(\n+                            animationPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    animationPayload.addProperty(\"file_url\", animationURL);\n+                    messagePayload.addProperty(\"animation_url\", animationURL);\n+                    if (animationPayload.has(\"thumb\")) {\n+                        animationPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                animationPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"audio\")) {\n+                    JsonObject audioPayload = messageRaw.getAsJsonObject(\"audio\");\n+                    String audioURL = getFullDownloadUrl(audioPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    audioPayload.addProperty(\"file_url\", audioURL);\n+                    messagePayload.addProperty(\"audio_url\", audioURL);\n+                    if (audioPayload.has(\"thumb\")) {\n+                        audioPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                audioPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"document\")) {\n+                    JsonObject documentPayload = messageRaw.getAsJsonObject(\"document\");\n+                    String documentURL = getFullDownloadUrl(\n+                            documentPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    documentPayload.addProperty(\"file_url\", documentURL);\n+                    messagePayload.addProperty(\"document_url\", documentURL);\n+                    if (documentPayload.has(\"thumb\")) {\n+                        documentPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                documentPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }", "originalCommit": "7d1d472777982ac6f862f1e9a89125bff29abe06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4ODEwNw==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r538988107", "bodyText": "Resolved in 7fe68eb", "author": "CrazyIvan359", "createdAt": "2020-12-09T03:59:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMTc5Nw=="}], "type": "inlineReview"}, {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "url": "https://github.com/openhab/openhab-addons/commit/7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "message": "requested changes\n\nSigned-off-by: Michael Murton <6764025+CrazyIvan359@users.noreply.github.com>", "committedDate": "2020-12-09T03:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3NzI0MA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539677240", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"reply_id\", callbackData[0]);\n          \n          \n            \n                                callbackPayload.addProperty(\"text\", callbackData[1]);\n          \n          \n            \n                                callbackPayload.addProperty(\"reply_id\", replyId);\n          \n          \n            \n                                callbackPayload.addProperty(\"text\", lastMessageText);", "author": "cpmeister", "createdAt": "2020-12-09T21:55:05Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n+                    callbackPayload.addProperty(\"callback_id\", callbackQuery.id());\n+                    callbackPayload.addProperty(\"reply_id\", callbackData[0]);\n+                    callbackPayload.addProperty(\"text\", callbackData[1]);", "originalCommit": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539678558", "bodyText": "Try to use existing variables if possible.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"from\", String.join(\" \",\n          \n          \n            \n                                        new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n          \n          \n            \n                                callbackPayload.addProperty(\"from\", lastMessageFirstName + \" \" + lastMessageLastName);", "author": "cpmeister", "createdAt": "2020-12-09T21:57:22Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "originalCommit": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMjA3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549012076", "bodyText": "I was using String.join() because it is possible that lastName is null and for bots firstName will also be null.\nThe original code in the binding seems clunky and more (process time) costly than String.join():\nupdateChannel(LASTMESSAGENAME, (lastMessageFirstName != null || lastMessageLastName != null)\n        ? new StringType((lastMessageFirstName != null ? lastMessageFirstName + \" \" : \"\")\n                + (lastMessageLastName != null ? lastMessageLastName : \"\"))\n        : UnDefType.NULL);\nI will almalgamte both into a single operation, but what do you suggest between these two:\nlastMessageName = (lastMessageFirstName != null || lastMessageLastName != null)\n        ? (lastMessageFirstName != null ? lastMessageFirstName : \"\")\n        + (lastMessageLastName != null ? (lastMessageFirstName != null ? \" \" : \"\")\n        + lastMessageLastName : \"\") : null;\nlastMessageName = String.join(\" \",\n        new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() })", "author": "CrazyIvan359", "createdAt": "2020-12-26T17:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMjYyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549012625", "bodyText": "Oh, maybe the second version will throw errors if one of the values is null? I have not tested that specifically and don't know enough about Java to know how it will react.", "author": "CrazyIvan359", "createdAt": "2020-12-26T17:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUyOTA3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r572529072", "bodyText": "If you want to exclude the nulls I would suggest using a custom utility function to do it.\nprivate static String join(String delimiter, String... elements){\n    StringJoiner joiner = new StringJoiner(delimiter);\n    for(String element : elements){\n        if(element != null){\n            joiner.add(element);\n        }\n    }\n    return joiner.toString();\n}", "author": "cpmeister", "createdAt": "2021-02-09T02:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg0NzI0NA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680847244", "bodyText": "maybe the second version will throw errors if one of the values is null?\n\nJavaDoc of String.join says:\nNote that if an element is null, then {@code \"null\"} is added.\n\nThe current code therefore does not work as expected.\nBest if you go for @cpmeister's suggestion.", "author": "kaikreuzer", "createdAt": "2021-08-02T10:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTc3OA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539679778", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n          \n          \n            \n                                callbackPayload.addProperty(\"chat_id\", chatId);", "author": "cpmeister", "createdAt": "2020-12-09T21:59:23Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());", "originalCommit": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMzMxOA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549013318", "bodyText": "chatId is not populated for callbacks, only regular messages. I have made this change for regular messages ~80 lines above this.", "author": "CrazyIvan359", "createdAt": "2020-12-26T17:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1MDEzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680850135", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    triggerChannel(new ChannelUID(getThing().getUID(), channelName), payload);\n          \n          \n            \n                    triggerChannel(channelName, payload);", "author": "kaikreuzer", "createdAt": "2021-08-02T10:16:26Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -376,6 +466,10 @@ public void updateChannel(String channelName, State state) {\n         updateState(new ChannelUID(getThing().getUID(), channelName), state);\n     }\n \n+    public void triggerEvent(String channelName, String payload) {\n+        triggerChannel(new ChannelUID(getThing().getUID(), channelName), payload);", "originalCommit": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE3NjczOA==", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r691176738", "bodyText": "Does this create a breaking change?", "author": "Skinah", "createdAt": "2021-08-18T12:12:22Z", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/action/TelegramActions.java", "diffHunk": "@@ -108,34 +108,30 @@ public String toString() {\n \n     @RuleAction(label = \"send an answer\", description = \"Send a Telegram answer using the Telegram API.\")\n     public boolean sendTelegramAnswer(@ActionInput(name = \"chatId\") @Nullable Long chatId,\n-            @ActionInput(name = \"replyId\") @Nullable String replyId,\n+            @ActionInput(name = \"callbackId\") @Nullable String callbackId,\n+            @ActionInput(name = \"messageId\") @Nullable Long messageId,", "originalCommit": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82", "replyToReviewId": null, "replies": [{"id": "PRRC_kwDOAS1o684qafn5", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r711588345", "bodyText": "@CrazyIvan359 Can you answer this question?\nIt seems to be breaking the existing action. So if this is the case, please create a PR similar to https://github.com/openhab/openhab-distro/pull/1314/files for the distro.", "author": "kaikreuzer", "createdAt": "2021-09-18T13:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE3NjczOA=="}], "type": "inlineReview"}, {"oid": "dca4e540f96d3e9fc93aaf957f8cb0c3c0ddc6b7", "url": "https://github.com/openhab/openhab-addons/commit/dca4e540f96d3e9fc93aaf957f8cb0c3c0ddc6b7", "message": "Merge branch 'main' into telegram-updates", "committedDate": "2021-09-06T07:53:04Z", "type": "commit"}, {"oid": "a4d878d8b0bf9c60b2d8ae31704d7c0a29a947e4", "url": "https://github.com/openhab/openhab-addons/commit/a4d878d8b0bf9c60b2d8ae31704d7c0a29a947e4", "message": "Merge branch 'main' into telegram-updates", "committedDate": "2021-09-12T01:05:34Z", "type": "commit"}, {"oid": "f97a1fa4e790bb0d02bba20a6be103ffc89e735d", "url": "https://github.com/openhab/openhab-addons/commit/f97a1fa4e790bb0d02bba20a6be103ffc89e735d", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T01:07:28Z", "type": "commit"}, {"oid": "e91301ec105f86ed34664047cd6c9e15870e2381", "url": "https://github.com/openhab/openhab-addons/commit/e91301ec105f86ed34664047cd6c9e15870e2381", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T01:07:52Z", "type": "commit"}, {"oid": "439ae53a20ff57fca024eae2fcbf6fc7f3736712", "url": "https://github.com/openhab/openhab-addons/commit/439ae53a20ff57fca024eae2fcbf6fc7f3736712", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T01:08:08Z", "type": "commit"}, {"oid": "6e4127bfb7cfdc118f5ea42bf30523e8697881a6", "url": "https://github.com/openhab/openhab-addons/commit/6e4127bfb7cfdc118f5ea42bf30523e8697881a6", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T01:08:22Z", "type": "commit"}, {"oid": "ddd9909a7e8627545e5203dcb872d44d70c24d08", "url": "https://github.com/openhab/openhab-addons/commit/ddd9909a7e8627545e5203dcb872d44d70c24d08", "message": "Update bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T01:09:38Z", "type": "commit"}, {"oid": "08947d3ac7b232670c28d81079aadb171b1e73ad", "url": "https://github.com/openhab/openhab-addons/commit/08947d3ac7b232670c28d81079aadb171b1e73ad", "message": "Update bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2021-09-12T01:10:21Z", "type": "commit"}, {"oid": "a449706a1ef02eba407eabbbdfb061061efa0304", "url": "https://github.com/openhab/openhab-addons/commit/a449706a1ef02eba407eabbbdfb061061efa0304", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T01:18:21Z", "type": "commit"}, {"oid": "6354ea856cfc06813344558a90ffd019f10df61e", "url": "https://github.com/openhab/openhab-addons/commit/6354ea856cfc06813344558a90ffd019f10df61e", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T01:18:41Z", "type": "commit"}, {"oid": "c64a27b0f3f990348eecd464343ba0dc00276de5", "url": "https://github.com/openhab/openhab-addons/commit/c64a27b0f3f990348eecd464343ba0dc00276de5", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T01:18:50Z", "type": "commit"}, {"oid": "fce6472c6ada4a8f36ad8788dfd775cbb0bff722", "url": "https://github.com/openhab/openhab-addons/commit/fce6472c6ada4a8f36ad8788dfd775cbb0bff722", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T01:19:01Z", "type": "commit"}, {"oid": "f82646683e8e14e5917a770c408f4b9508ece8f3", "url": "https://github.com/openhab/openhab-addons/commit/f82646683e8e14e5917a770c408f4b9508ece8f3", "message": "Fix merge conflict issues.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T02:36:18Z", "type": "commit"}, {"oid": "1b91514b6b4cdf0dab7179f3a25e6f7430759485", "url": "https://github.com/openhab/openhab-addons/commit/1b91514b6b4cdf0dab7179f3a25e6f7430759485", "message": "Add event channels and Answer overload\n\nSigned-off-by: Michael Murton <6764025+CrazyIvan359@users.noreply.github.com>", "committedDate": "2021-09-12T07:45:33Z", "type": "commit"}, {"oid": "a1ec5f546d09197666eb2925d08572404cd4123b", "url": "https://github.com/openhab/openhab-addons/commit/a1ec5f546d09197666eb2925d08572404cd4123b", "message": "requested changes\n\nSigned-off-by: Michael Murton <6764025+CrazyIvan359@users.noreply.github.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "d948b207a96f68c2bb7fb56847e430eb582a975d", "url": "https://github.com/openhab/openhab-addons/commit/d948b207a96f68c2bb7fb56847e430eb582a975d", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "af0313a8cde2668cfc2e0a650d6997002470a8e7", "url": "https://github.com/openhab/openhab-addons/commit/af0313a8cde2668cfc2e0a650d6997002470a8e7", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "df2a26b6079743bf996bdefecb7eea7d5e9bc36c", "url": "https://github.com/openhab/openhab-addons/commit/df2a26b6079743bf996bdefecb7eea7d5e9bc36c", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "6aa24d02e96af7e578b5bdd57f6894249156e237", "url": "https://github.com/openhab/openhab-addons/commit/6aa24d02e96af7e578b5bdd57f6894249156e237", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "8d3ca16e5fef3e6923d49e2d6e8955f313a2e44b", "url": "https://github.com/openhab/openhab-addons/commit/8d3ca16e5fef3e6923d49e2d6e8955f313a2e44b", "message": "Update bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "294b23fa19975ed4dcffa7431a0033e31480b3ce", "url": "https://github.com/openhab/openhab-addons/commit/294b23fa19975ed4dcffa7431a0033e31480b3ce", "message": "Update bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "a72ee7e7096f5487fbcff439b3f4ce5eb080f6a4", "url": "https://github.com/openhab/openhab-addons/commit/a72ee7e7096f5487fbcff439b3f4ce5eb080f6a4", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "9333d48db792b6c0791aba6b62a865601c13ccc1", "url": "https://github.com/openhab/openhab-addons/commit/9333d48db792b6c0791aba6b62a865601c13ccc1", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "0ac958bae28a752c213fd4c06fa1e498b9862f34", "url": "https://github.com/openhab/openhab-addons/commit/0ac958bae28a752c213fd4c06fa1e498b9862f34", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "661ea70974faf1559b6bb58eb621a71b687aedcc", "url": "https://github.com/openhab/openhab-addons/commit/661ea70974faf1559b6bb58eb621a71b687aedcc", "message": "Update bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T07:45:34Z", "type": "commit"}, {"oid": "016bec1deea51b7496c76ef4901acdb79ae58fc2", "url": "https://github.com/openhab/openhab-addons/commit/016bec1deea51b7496c76ef4901acdb79ae58fc2", "message": "Remove deprecated methods used.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T08:07:54Z", "type": "commit"}, {"oid": "5b32b665188e0b2b9b831709b9a48588c95e0339", "url": "https://github.com/openhab/openhab-addons/commit/5b32b665188e0b2b9b831709b9a48588c95e0339", "message": "Fix conflicts\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T08:12:06Z", "type": "commit"}, {"oid": "f4d00c716720694358543ad6d18d8f74cd4068c6", "url": "https://github.com/openhab/openhab-addons/commit/f4d00c716720694358543ad6d18d8f74cd4068c6", "message": "remove redundant @NonNullByDefault\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2021-09-12T08:34:05Z", "type": "commit"}]}