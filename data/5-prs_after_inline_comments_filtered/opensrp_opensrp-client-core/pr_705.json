{"pr_number": 705, "pr_title": "add gps properties to their own obs", "pr_createdAt": "2020-11-27T12:55:35Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/705", "timeline": [{"oid": "3f09b76ac293417ee6bf04193c64ce23242454a3", "url": "https://github.com/opensrp/opensrp-client-core/commit/3f09b76ac293417ee6bf04193c64ce23242454a3", "message": "add gps properties to their own obs", "committedDate": "2020-11-27T12:52:16Z", "type": "commit"}, {"oid": "a807a5df982211bec065753ed4f676082b4b68af", "url": "https://github.com/opensrp/opensrp-client-core/commit/a807a5df982211bec065753ed4f676082b4b68af", "message": "fix fqn issue", "committedDate": "2020-11-27T13:04:59Z", "type": "commit"}, {"oid": "7c0920d5606374a5a2cf7a22cb63e37b93922e3b", "url": "https://github.com/opensrp/opensrp-client-core/commit/7c0920d5606374a5a2cf7a22cb63e37b93922e3b", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-core into add-gps-properties-to-obs", "committedDate": "2020-11-27T14:03:06Z", "type": "commit"}, {"oid": "a6880cd75e0584bf39a08277fe9226f0078ec29f", "url": "https://github.com/opensrp/opensrp-client-core/commit/a6880cd75e0584bf39a08277fe9226f0078ec29f", "message": "update snapshot version", "committedDate": "2020-11-27T15:43:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532387050", "bodyText": "Any reason to save each observation separately? Wouldn't it be more compact and consistent to use the approach native radio widget takes of saving key-value pairs as part of the obs using https://github.com/OpenSRP/opensrp-client-core/blob/a6880cd75e0584bf39a08277fe9226f0078ec29f/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java#L588?", "author": "vincent-karuri", "createdAt": "2020-11-30T07:16:38Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -466,11 +465,45 @@ public static void addObservation(Event e, JSONObject jsonObject) {\n             } catch (JSONException e1) {\n                 Timber.e(e1);\n             }\n+        } else if (AllConstants.GPS.equals(type)) {\n+            createGpsObservation(e, jsonObject, value);\n         } else {\n             createObservation(e, jsonObject, value);\n         }\n     }\n \n+    private static void createGpsObservation(Event e, JSONObject jsonObject, String value) {", "originalCommit": "a6880cd75e0584bf39a08277fe9226f0078ec29f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4OTAyOA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532389028", "bodyText": "What happens on https://github.com/OpenSRP/opensrp-client-core/blob/a6880cd75e0584bf39a08277fe9226f0078ec29f/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java#L597 ? Will it create separate obs with the key/value pair i provide?", "author": "bennsimon", "createdAt": "2020-11-30T07:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MzA1NA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532393054", "bodyText": "No it won't but is that necessary? This creates a block with the key-value pairs you pass as part of one obs e.g.\n{\n      \"fieldType\": \"formsubmissionField\",\n      \"fieldDataType\": \"text\",\n      \"fieldCode\": \"travel_location\",\n      \"parentCode\": \"\",\n      \"values\": [\n        \"Jakarta\",\n        \"Depok\",\n        \"Manado\"\n      ],\n      \"set\": [],\n      \"formSubmissionField\": \"travel_location\",\n      \"humanReadableValues\": [],\n      \"keyValPairs\": {\n        \"depok\": \"Depok\",\n        \"manado\": \"Manado\",\n        \"jakarta\": \"Jakarta\"\n      },\n      \"saveObsAsArray\": false\n }", "author": "vincent-karuri", "createdAt": "2020-11-30T07:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MzYxMw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532393613", "bodyText": "the keyValPairs can contain lat,lng,alt etc. for instance.", "author": "vincent-karuri", "createdAt": "2020-11-30T07:35:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwNjA5NA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532406094", "bodyText": "Yeah its necessary , I need them to be different obs.", "author": "bennsimon", "createdAt": "2020-11-30T08:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzNDY0NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532434645", "bodyText": "Could I ask why that is? Like what the use case is?", "author": "vincent-karuri", "createdAt": "2020-11-30T08:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4NzA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzODM0Ng==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532438346", "bodyText": "The code here looks duplicated, we can maybe move the common code into a private method.", "author": "vincent-karuri", "createdAt": "2020-11-30T09:03:11Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -466,11 +465,45 @@ public static void addObservation(Event e, JSONObject jsonObject) {\n             } catch (JSONException e1) {\n                 Timber.e(e1);\n             }\n+        } else if (AllConstants.GPS.equals(type)) {\n+            createGpsObservation(e, jsonObject, value);\n         } else {\n             createObservation(e, jsonObject, value);\n         }\n     }\n \n+    private static void createGpsObservation(Event e, JSONObject jsonObject, String value) {\n+        createObservation(e, jsonObject, value);\n+        if (StringUtils.isNotBlank(value)) {\n+            String[] valueArr = value.split(\" \");\n+            String formSubmissionFieldPrefix = getString(jsonObject, KEY);\n+            if (valueArr.length >= 2) {\n+                String latitude = valueArr[0];\n+                String longitude = valueArr[1];\n+                String formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LATITUDE;\n+                addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(latitude));\n+\n+                formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LONGITUDE;\n+                addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(longitude));", "originalCommit": "a6880cd75e0584bf39a08277fe9226f0078ec29f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzODQ1OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532438459", "bodyText": "https://github.com/OpenSRP/opensrp-client-core/pull/705/files#r532438346", "author": "vincent-karuri", "createdAt": "2020-11-30T09:03:24Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -466,11 +465,45 @@ public static void addObservation(Event e, JSONObject jsonObject) {\n             } catch (JSONException e1) {\n                 Timber.e(e1);\n             }\n+        } else if (AllConstants.GPS.equals(type)) {\n+            createGpsObservation(e, jsonObject, value);\n         } else {\n             createObservation(e, jsonObject, value);\n         }\n     }\n \n+    private static void createGpsObservation(Event e, JSONObject jsonObject, String value) {\n+        createObservation(e, jsonObject, value);\n+        if (StringUtils.isNotBlank(value)) {\n+            String[] valueArr = value.split(\" \");\n+            String formSubmissionFieldPrefix = getString(jsonObject, KEY);\n+            if (valueArr.length >= 2) {\n+                String latitude = valueArr[0];\n+                String longitude = valueArr[1];\n+                String formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LATITUDE;\n+                addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(latitude));\n+\n+                formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LONGITUDE;\n+                addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(longitude));\n+\n+                if (valueArr.length >= 4) {\n+                    String altitude = valueArr[2];\n+                    String accuracy = valueArr[3];\n+                    formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.ALTITUDE;\n+                    addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(altitude));\n+\n+                    formSubmissionField = formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.ACCURACY;\n+                    addObs(e, formSubmissionField, AllConstants.TEXT, Collections.singletonList(accuracy));", "originalCommit": "a6880cd75e0584bf39a08277fe9226f0078ec29f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00859c14bddfcc8f96f5f4ca17f29e18a907f936", "url": "https://github.com/opensrp/opensrp-client-core/commit/00859c14bddfcc8f96f5f4ca17f29e18a907f936", "message": "code cleanup", "committedDate": "2020-11-30T09:19:40Z", "type": "commit"}, {"oid": "29fdc2c345c9ad6debedfa31d0e320b51964e86c", "url": "https://github.com/opensrp/opensrp-client-core/commit/29fdc2c345c9ad6debedfa31d0e320b51964e86c", "message": "Merge branch 'master' into add-gps-properties-to-obs", "committedDate": "2020-11-30T11:25:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0MDMxMA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532540310", "bodyText": "These operations : formSubmissionFieldPrefix + \"_\" +, AllConstants.TEXT and Collections.singletonList() are still repeated. I think it's possible to simplify this by passing an event and formSubmissionFieldPrefix and suffix to a method that will perform the duplicated functionality.", "author": "vincent-karuri", "createdAt": "2020-11-30T11:50:54Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -466,11 +465,38 @@ public static void addObservation(Event e, JSONObject jsonObject) {\n             } catch (JSONException e1) {\n                 Timber.e(e1);\n             }\n+        } else if (AllConstants.GPS.equals(type)) {\n+            createGpsObservation(e, jsonObject, value);\n         } else {\n             createObservation(e, jsonObject, value);\n         }\n     }\n \n+    private static void createGpsObservation(Event e, JSONObject jsonObject, String value) {\n+        createObservation(e, jsonObject, value);\n+        if (StringUtils.isNotBlank(value)) {\n+            String[] valueArr = value.split(\" \");\n+            String formSubmissionFieldPrefix = getString(jsonObject, KEY);\n+            if (valueArr.length >= 2) {\n+                String latitude = valueArr[0];\n+                String longitude = valueArr[1];\n+                addObs(e, formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LATITUDE, AllConstants.TEXT, Collections.singletonList(latitude));", "originalCommit": "29fdc2c345c9ad6debedfa31d0e320b51964e86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NDI4Mw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532544283", "bodyText": "And since the method call would be relatively the same (minus the suffix), an array can be used to store the suffixes and loop through them while making the call.", "author": "vincent-karuri", "createdAt": "2020-11-30T11:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0MDMxMA=="}], "type": "inlineReview"}, {"oid": "e780822f2330cbd93fe278b22d7392bdad95a452", "url": "https://github.com/opensrp/opensrp-client-core/commit/e780822f2330cbd93fe278b22d7392bdad95a452", "message": "code cleanup", "committedDate": "2020-11-30T13:08:01Z", "type": "commit"}, {"oid": "c4455ae2e685e98d770c35a3cb4f0abbf22770cd", "url": "https://github.com/opensrp/opensrp-client-core/commit/c4455ae2e685e98d770c35a3cb4f0abbf22770cd", "message": "Merge branch 'add-gps-properties-to-obs' of github.com:OpenSRP/opensrp-client-core into add-gps-properties-to-obs", "committedDate": "2020-11-30T13:08:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwNDUzMw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532604533", "bodyText": "Why not use:\nString[] gpsKeys = new String{AllConstants.GpsConstants.ALTITUDE,...,...};\nfor (int i = 0; i < valueArr; i++) {\n   addGpsObs(e, formSubmissionFieldPrefix, gpsKeys[i], valueArr[i]);\n}\n\nThis removes the need to check for lengths and is a bit more concise.", "author": "vincent-karuri", "createdAt": "2020-11-30T13:42:10Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -480,18 +481,27 @@ private static void createGpsObservation(Event e, JSONObject jsonObject, String\n             if (valueArr.length >= 2) {\n                 String latitude = valueArr[0];\n                 String longitude = valueArr[1];\n-                addObs(e, formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LATITUDE, AllConstants.TEXT, Collections.singletonList(latitude));\n-                addObs(e, formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.LONGITUDE, AllConstants.TEXT, Collections.singletonList(longitude));\n+                addGpsObs(e, formSubmissionFieldPrefix, AllConstants.GpsConstants.LATITUDE, latitude);\n+                addGpsObs(e, formSubmissionFieldPrefix, AllConstants.GpsConstants.LONGITUDE, longitude);\n                 if (valueArr.length >= 4) {\n                     String altitude = valueArr[2];\n                     String accuracy = valueArr[3];\n-                    addObs(e, formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.ALTITUDE, AllConstants.TEXT, Collections.singletonList(altitude));\n-                    addObs(e, formSubmissionFieldPrefix + \"_\" + AllConstants.GpsConstants.ACCURACY, AllConstants.TEXT, Collections.singletonList(accuracy));\n+                    addGpsObs(e, formSubmissionFieldPrefix, AllConstants.GpsConstants.ALTITUDE, altitude);\n+                    addGpsObs(e, formSubmissionFieldPrefix, AllConstants.GpsConstants.ACCURACY, accuracy);\n                 }\n             }\n         }", "originalCommit": "e780822f2330cbd93fe278b22d7392bdad95a452", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b835d2bc9ff94a867b4cd2e7ee0df3538647ead3", "url": "https://github.com/opensrp/opensrp-client-core/commit/b835d2bc9ff94a867b4cd2e7ee0df3538647ead3", "message": "apply pr feedback", "committedDate": "2020-11-30T13:48:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyNzk0NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/705#discussion_r532627945", "bodyText": "This should really be a switch-case.", "author": "vincent-karuri", "createdAt": "2020-11-30T14:16:29Z", "path": "opensrp-app/src/test/java/org/smartregister/util/JsonFormUtilsTest.java", "diffHunk": "@@ -1472,4 +1473,35 @@ public void testCreateObservationShouldCreateCorrectObservation() throws Excepti\n         assertEquals(values, obs.getValues());\n         assertEquals(keyValPairs, obs.getKeyValPairs());\n     }\n+\n+    @Test\n+    public void addObservationAddsGpsObservationsToEvent() throws Exception {\n+        String observationJsonObjectString =\n+                \"{\\\"value\\\":\\\"-2.4535 37.324 0.2 0.3\\\",\\\"openmrs_entity\\\":\\\"\\\",\" +\n+                        \"\\\"openmrs_entity_id\\\":\\\"\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\" +\n+                        \"\\\"openmrs_data_type\\\":\\\"text\\\",\\\"type\\\":\\\"gps\\\",\\\"key\\\":\\\"gps\\\"}\";\n+        JSONObject observationJsonObject = new JSONObject(observationJsonObjectString);\n+        Event event = Mockito.spy(new Event());\n+        JsonFormUtils.addObservation(event, observationJsonObject);\n+        Mockito.verify(event, Mockito.times(5)).addObs(any(Obs.class));\n+        String values[] = observationJsonObject.optString(VALUE).split(\" \");\n+        String latitudeKey = observationJsonObject.getString(KEY) + \"_\" + AllConstants.GpsConstants.LATITUDE;\n+        String longitudeKey = observationJsonObject.getString(KEY) + \"_\" + AllConstants.GpsConstants.LONGITUDE;\n+        String altitudeKey = observationJsonObject.getString(KEY) + \"_\" + AllConstants.GpsConstants.ALTITUDE;\n+        String accuracyKey = observationJsonObject.getString(KEY) + \"_\" + AllConstants.GpsConstants.ACCURACY;\n+        List<String> formSubmissionFields = Arrays.asList(latitudeKey, longitudeKey, accuracyKey, altitudeKey, \"gps\");\n+        for (Obs obs : event.getObs()) {\n+            String formSubmissionField = obs.getFormSubmissionField();\n+            assertTrue(formSubmissionFields.contains(formSubmissionField));\n+            if (formSubmissionField.equals(latitudeKey)) {\n+                assertEquals(values[0], obs.getValues().get(0));\n+            } else if (formSubmissionField.equals(longitudeKey)) {\n+                assertEquals(values[1], obs.getValues().get(0));\n+            } else if (formSubmissionField.equals(altitudeKey)) {\n+                assertEquals(values[2], obs.getValues().get(0));\n+            } else if (formSubmissionField.equals(accuracyKey)) {\n+                assertEquals(values[3], obs.getValues().get(0));\n+            }", "originalCommit": "b835d2bc9ff94a867b4cd2e7ee0df3538647ead3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}