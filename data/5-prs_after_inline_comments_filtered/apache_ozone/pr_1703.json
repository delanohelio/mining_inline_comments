{"pr_number": 1703, "pr_title": "HDDS-4591. BasicOzoneFileSystem reports StorageUnit class not found.", "pr_createdAt": "2020-12-15T12:21:55Z", "pr_url": "https://github.com/apache/ozone/pull/1703", "timeline": [{"oid": "5d507094a5baa2785914fa9ed036f0d966d4319f", "url": "https://github.com/apache/ozone/commit/5d507094a5baa2785914fa9ed036f0d966d4319f", "message": "HDDS-4591. BasicOzoneFileSystem reports StorageUnit class not found.", "committedDate": "2020-12-15T12:19:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzI2OA==", "url": "https://github.com/apache/ozone/pull/1703#discussion_r543613268", "bodyText": "NIT: can we wrap this as a helper function as I can see the initialize() has similar logic.", "author": "xiaoyuyao", "createdAt": "2020-12-15T19:08:14Z", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -703,7 +703,14 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n \n   @Override\n   public long getDefaultBlockSize() {\n-    return (long) getConf().getStorageSize(\n+    Configuration conf = getConf();\n+    ConfigurationSource source;", "originalCommit": "5d507094a5baa2785914fa9ed036f0d966d4319f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzY3NA==", "url": "https://github.com/apache/ozone/pull/1703#discussion_r543613674", "bodyText": "We need a fix for this in BasicRootedOzoneFileSystem#getDefaultBlockSize() as well.", "author": "xiaoyuyao", "createdAt": "2020-12-15T19:08:50Z", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -703,7 +703,14 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n \n   @Override\n   public long getDefaultBlockSize() {", "originalCommit": "5d507094a5baa2785914fa9ed036f0d966d4319f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzY4NQ==", "url": "https://github.com/apache/ozone/pull/1703#discussion_r543613685", "bodyText": "Instead of duplicating this logic from initialize:\n\n  \n    \n      ozone/hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java\n    \n    \n        Lines 161 to 166\n      in\n      0957975\n    \n    \n    \n    \n\n        \n          \n           ConfigurationSource source; \n        \n\n        \n          \n           if (conf instanceof OzoneConfiguration) { \n        \n\n        \n          \n             source = (ConfigurationSource) conf; \n        \n\n        \n          \n           } else { \n        \n\n        \n          \n             source = new LegacyHadoopConfigurationSource(conf); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI think it would be cleaner to store this ConfigurationSource\n\neither in BasicOzoneFileSystem\nor in BasicOzoneClientAdapterImpl (and expose it via accessor method)\n\nand then use it here.", "author": "adoroszlai", "createdAt": "2020-12-15T19:08:51Z", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -703,7 +703,14 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n \n   @Override\n   public long getDefaultBlockSize() {\n-    return (long) getConf().getStorageSize(\n+    Configuration conf = getConf();\n+    ConfigurationSource source;\n+    if (conf instanceof OzoneConfiguration) {\n+      source = (ConfigurationSource) conf;\n+    } else {\n+      source = new LegacyHadoopConfigurationSource(conf);\n+    }", "originalCommit": "5d507094a5baa2785914fa9ed036f0d966d4319f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ebf8317659876d9850d7d41a1258b2876871a28", "url": "https://github.com/apache/ozone/commit/9ebf8317659876d9850d7d41a1258b2876871a28", "message": "address comments", "committedDate": "2020-12-16T06:31:51Z", "type": "commit"}]}