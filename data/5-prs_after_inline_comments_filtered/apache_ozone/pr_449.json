{"pr_number": 449, "pr_title": "HDDS-2891. Apache NiFi PutFile processor is failing with secure Ozone S3G", "pr_createdAt": "2020-01-16T13:54:30Z", "pr_url": "https://github.com/apache/ozone/pull/449", "timeline": [{"oid": "83540eda10c1f75fd47d7ce920a9eb257119c54b", "url": "https://github.com/apache/ozone/commit/83540eda10c1f75fd47d7ce920a9eb257119c54b", "message": "HDDS-2891. Apache NiFi PutFile processor is failing with secure Ozone S3G", "committedDate": "2020-01-16T13:50:50Z", "type": "commit"}, {"oid": "3c1bcd5dfcd845014c9558401e1d6899dda1f49b", "url": "https://github.com/apache/ozone/commit/3c1bcd5dfcd845014c9558401e1d6899dda1f49b", "message": "restore the info page redirect", "committedDate": "2020-01-17T10:40:05Z", "type": "commit"}, {"oid": "5f4ec4ce5a0ee9e1e9faf1787de06c55bba26ec9", "url": "https://github.com/apache/ozone/commit/5f4ec4ce5a0ee9e1e9faf1787de06c55bba26ec9", "message": "adjust the acceptanc test of the root page redirect", "committedDate": "2020-01-17T11:20:23Z", "type": "commit"}, {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "url": "https://github.com/apache/ozone/commit/258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "message": "rat fix", "committedDate": "2020-01-18T09:54:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjQ0OQ==", "url": "https://github.com/apache/ozone/pull/449#discussion_r372202449", "bodyText": "Right now, we have only AWSV4Header authentication only right, so we need the header check.\nOr is there any reason for removal of this check", "author": "bharatviswa504", "createdAt": "2020-01-29T06:02:34Z", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/OzoneClientProducer.java", "diffHunk": "@@ -75,36 +70,31 @@ private OzoneClient getClient(OzoneConfiguration config) throws IOException {\n     try {\n       if (OzoneSecurityUtil.isSecurityEnabled(config)) {\n         LOG.debug(\"Creating s3 auth info for client.\");\n-        if (context.getHeaderString(AUTHORIZATION_HEADER).startsWith(\"AWS4\")) {\n-          try {\n-            AWSV4AuthParser v4RequestParser = new AWSV4AuthParser(context);\n-            v4RequestParser.parse();\n-\n-            OzoneTokenIdentifier identifier = new OzoneTokenIdentifier();\n-            identifier.setTokenType(S3AUTHINFO);\n-            identifier.setStrToSign(v4RequestParser.getStringToSign());\n-            identifier.setSignature(v4RequestParser.getSignature());\n-            identifier.setAwsAccessId(v4RequestParser.getAwsAccessId());\n-            identifier.setOwner(new Text(v4RequestParser.getAwsAccessId()));\n-            if (LOG.isTraceEnabled()) {\n-              LOG.trace(\"Adding token for service:{}\", omService);\n-            }\n-            Token<OzoneTokenIdentifier> token = new Token(identifier.getBytes(),\n-                identifier.getSignature().getBytes(UTF_8),\n-                identifier.getKind(),\n-                omService);\n-            UserGroupInformation remoteUser =\n-                UserGroupInformation.createRemoteUser(\n-                    v4RequestParser.getAwsAccessId());\n-            remoteUser.addToken(token);\n-            UserGroupInformation.setLoginUser(remoteUser);\n-          } catch (OS3Exception | URISyntaxException ex) {\n-            LOG.error(\"S3 auth info creation failed.\");\n-            throw S3_AUTHINFO_CREATION_ERROR;\n+        try {\n+", "originalCommit": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAxNDg1Ng==", "url": "https://github.com/apache/ozone/pull/449#discussion_r374014856", "bodyText": "The idea was to avoid code duplication. Instead of using AWSV4AuthParser we use the common SignatureProcessor.\nThis particular check is included in the AWS3SignatureProcessor->authorizationHeader->validateAlgorithm() which will throw an exception if it's anything else than AWS4.", "author": "elek", "createdAt": "2020-02-03T10:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjk1NA==", "url": "https://github.com/apache/ozone/pull/449#discussion_r372202954", "bodyText": "Can we rename this getVolumeName, as it is converting to md5Hex, and we use that as volume name.", "author": "bharatviswa504", "createdAt": "2020-01-29T06:05:09Z", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/util/OzoneS3Util.java", "diffHunk": "@@ -38,9 +38,9 @@\n   private OzoneS3Util() {\n   }\n \n-  public static String getVolumeName(String userName) {\n+  public static String getS3Username(String userName) {", "originalCommit": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAxODcwMg==", "url": "https://github.com/apache/ozone/pull/449#discussion_r374018702", "bodyText": "I am not sure what is the right name, I renamed after a long debug session when I was totally confused what is in a variable.\nThis method doesn't return with a volumeName it returns with and unique (and safe) identifier of the s3 user. It will be converted to an s3 volume name on the server side (\"s3\" + this unique id).\nThis string is used as a parameter of the createS3Bucket(String userName, String bucketName) which clearly shows that this is not a volumeName. This is a unique ID / username.\nDuring the debug I was very confused as I expected to have the final volumeName from this method, but didn't get it.\nBut please let me know if you have any better suggestion for the name.", "author": "elek", "createdAt": "2020-02-03T10:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwMzgyNw==", "url": "https://github.com/apache/ozone/pull/449#discussion_r377803827", "bodyText": "Agreed. I am fine with current way.", "author": "bharatviswa504", "createdAt": "2020-02-11T18:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwNDIwOA==", "url": "https://github.com/apache/ozone/pull/449#discussion_r372204208", "bodyText": "What does else part do, for other HTTP method requests?\nOr we should fail the request as it is not a valid request.\nOr I am not sure if my understanding is not correct, could you provide some info here.", "author": "bharatviswa504", "createdAt": "2020-01-29T06:11:26Z", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/RootPageDisplayFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.s3;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+/**\n+ * This redirect helps to show and info page in case the endpoint is opened\n+ * from the browser.\n+ */\n+public class RootPageDisplayFilter implements Filter {\n+\n+  @Override\n+  public void init(FilterConfig filterConfig) throws ServletException {\n+\n+  }\n+\n+  @Override\n+  public void doFilter(ServletRequest servletRequest,\n+      ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException {\n+    HttpServletRequest httpRequest = (HttpServletRequest) servletRequest;\n+    String httpMethod = httpRequest.getMethod();\n+    String uri = httpRequest.getRequestURI();\n+    String authorizationHeader = httpRequest.getHeader(\"Authorization\");\n+    if (httpMethod.equalsIgnoreCase(\"GET\") && authorizationHeader == null && uri\n+        .equals(\"/\")) {\n+      ((HttpServletResponse) servletResponse).sendRedirect(\"/static/\");\n+    } else {", "originalCommit": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAxNjE3MA==", "url": "https://github.com/apache/ozone/pull/449#discussion_r374016170", "bodyText": "filterChain.doFilter (else branch) means: \"do all the other stuff defined by other filters/servlets/jaxrs classes.\nThis condition has a short-circuit response for the \"GET /\" page (without Authorization header). In this case it immediately redirect to the internal documentation page.\nFor any other case it does the normal work. (else)", "author": "elek", "createdAt": "2020-02-03T10:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwNDIwOA=="}], "type": "inlineReview"}]}