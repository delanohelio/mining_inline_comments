{"pr_number": 504, "pr_title": "HDDS-2953. Handle replay of S3 requests", "pr_createdAt": "2020-01-29T22:25:22Z", "pr_url": "https://github.com/apache/ozone/pull/504", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMzg4NQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r373733885", "bodyText": "Looks like checking keyTable is not required here. I feel we can ignore it here, as unnecessary extra DB read for all MPU initate cases.", "author": "bharatviswa504", "createdAt": "2020-01-31T23:53:19Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -118,6 +127,28 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check if this transaction is a replay.\n+      // We check only the KeyTable here and not the OpenKeyTable. In case\n+      // this transaction is a replay but the transaction was not committed\n+      // to the KeyTable, then we recreate the key in OpenKey table. This is\n+      // okay as all the subsequent transactions would also be replayed and\n+      // the openKey table would eventually reach the same state.\n+      // The reason we do not check the OpenKey table is to avoid a DB read\n+      // in regular non-replay scenario.\n+      String dbKeyName = omMetadataManager.getOzoneKey(volumeName, bucketName,", "originalCommit": "7663b8d605b68e3eb619e898f931df5c28f59a33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTI5OQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r374475299", "bodyText": "How this check will help here, as we don't set updateID for open key OmKeyInfo in the below logic similar to multipartKeyInfo.\nExample:\nT1 -> MPU Initiate\nT2 -> MPU abort\nNow replay, T2 will not be considered as a replay. As OmKeyInfo will have updateID as 1.", "author": "bharatviswa504", "createdAt": "2020-02-04T05:02:11Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3MultipartUploadAbortRequest.java", "diffHunk": "@@ -116,36 +122,51 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         throw new OMException(\"Abort Multipart Upload Failed: volume: \" +\n             volumeName + \"bucket: \" + bucketName + \"key: \" + keyName,\n             OMException.ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR);\n-      } else {\n-        multipartKeyInfo = omMetadataManager\n-            .getMultipartInfoTable().get(multipartKey);\n-\n-        multipartKeyInfo.setUpdateID(transactionLogIndex);\n-\n-        // Update cache of openKeyTable and multipartInfo table.\n-        // No need to add the cache entries to delete table, as the entries\n-        // in delete table are not used by any read/write operations.\n-        omMetadataManager.getOpenKeyTable().addCacheEntry(\n-            new CacheKey<>(multipartKey),\n-            new CacheValue<>(Optional.absent(), transactionLogIndex));\n-        omMetadataManager.getMultipartInfoTable().addCacheEntry(\n-            new CacheKey<>(multipartKey),\n-            new CacheValue<>(Optional.absent(), transactionLogIndex));\n       }\n \n-      omClientResponse = new S3MultipartUploadAbortResponse(multipartKey,\n-          multipartKeyInfo,\n+      // Check the OpenKeyTable if this transaction is a replay of ratis logs.\n+      if (isReplay(ozoneManager, omKeyInfo.getUpdateID(), trxnLogIndex)) {", "originalCommit": "7663b8d605b68e3eb619e898f931df5c28f59a33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyMTk3NQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r374921975", "bodyText": "If the openKey was created after this transaction, then it is safe to assume that this is a replay.\nFor the case you mentioned, yes we will miss classifying it as replay.", "author": "hanishakoneru", "createdAt": "2020-02-04T21:05:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMTEyMw==", "url": "https://github.com/apache/ozone/pull/504#discussion_r374931123", "bodyText": "I see what you are saying now. MultipartUploadID would be unique even for the same keys for different initiates. Is that correct? If yes, ya we can remove this check here.", "author": "hanishakoneru", "createdAt": "2020-02-04T21:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTI5OQ=="}], "type": "inlineReview"}, {"oid": "a6e0f5bf5edc6080d5cb6cce2ab7faccfaba1f47", "url": "https://github.com/apache/ozone/commit/a6e0f5bf5edc6080d5cb6cce2ab7faccfaba1f47", "message": "Removing replay check from Initiate and Abort requests", "committedDate": "2020-02-04T23:06:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzMjQ2MQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r376132461", "bodyText": "This looks brittle, if someone mistakenly sent for normal key deletes trxnLogIndex we will update it. (I think no harm)\nSo, make this logic generic for all requests, instead of special cases, and remove the above method.", "author": "bharatviswa504", "createdAt": "2020-02-06T23:07:17Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/OmUtils.java", "diffHunk": "@@ -453,20 +453,32 @@ public static File createOMDir(String dirPath) {\n     return dirFile;\n   }\n \n+  public static RepeatedOmKeyInfo prepareKeyForDelete(OmKeyInfo keyInfo,\n+      RepeatedOmKeyInfo repeatedOmKeyInfo) throws IOException {\n+    return prepareKeyForDelete(keyInfo, repeatedOmKeyInfo, 0L);\n+  }\n+\n   /**\n    * Prepares key info to be moved to deletedTable.\n    * 1. It strips GDPR metadata from key info\n    * 2. For given object key, if the repeatedOmKeyInfo instance is null, it\n    * implies that no entry for the object key exists in deletedTable so we\n    * create a new instance to include this key, else we update the existing\n    * repeatedOmKeyInfo instance.\n+   * 3. Set the updateID to the transactionLogIndex\n    * @param keyInfo args supplied by client\n    * @param repeatedOmKeyInfo key details from deletedTable\n+   * @param trxnLogIndex For Multipart keys, this is the transactionLogIndex\n+   *                     of the MultipartUploadAbort request which needs to\n+   *                     be set as the updateID of the partKeyInfos.\n+   *                     For regular Key deletes, this value should be passed\n+   *                     as 0 as the updateID is already set.\n    * @return {@link RepeatedOmKeyInfo}\n    * @throws IOException if I/O Errors when checking for key\n    */\n   public static RepeatedOmKeyInfo prepareKeyForDelete(OmKeyInfo keyInfo,\n-      RepeatedOmKeyInfo repeatedOmKeyInfo) throws IOException{\n+      RepeatedOmKeyInfo repeatedOmKeyInfo, long trxnLogIndex)", "originalCommit": "a6e0f5bf5edc6080d5cb6cce2ab7faccfaba1f47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTY5Nw==", "url": "https://github.com/apache/ozone/pull/504#discussion_r377311697", "bodyText": "Done.", "author": "hanishakoneru", "createdAt": "2020-02-10T20:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzMjQ2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MTg1OQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r376151859", "bodyText": "Can we mention this as TODO? (As still it is not addressed)", "author": "bharatviswa504", "createdAt": "2020-02-07T00:08:43Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -118,6 +126,11 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // We do not check if this transaction is a replay here to avoid extra\n+      // DB reads. Even if this transaction is replayed, in\n+      // S3MultipartUploadComplete request, we would delete this entry from", "originalCommit": "a6e0f5bf5edc6080d5cb6cce2ab7faccfaba1f47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTY1NQ==", "url": "https://github.com/apache/ozone/pull/504#discussion_r377311655", "bodyText": "Added a TODO in MultipartComplete request.", "author": "hanishakoneru", "createdAt": "2020-02-10T20:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MTg1OQ=="}], "type": "inlineReview"}, {"oid": "306a9b624dd2f414e34e8bb5111d32c01cd5b74a", "url": "https://github.com/apache/ozone/commit/306a9b624dd2f414e34e8bb5111d32c01cd5b74a", "message": "HDDS-2953. Handle replay of S3 requests", "committedDate": "2020-02-10T20:43:39Z", "type": "commit"}, {"oid": "5a7fec26d9fffb26c913b23d48112d6f096a389a", "url": "https://github.com/apache/ozone/commit/5a7fec26d9fffb26c913b23d48112d6f096a389a", "message": "checkstyle fix", "committedDate": "2020-02-10T20:43:39Z", "type": "commit"}, {"oid": "87ea599905b907ed9aeae7e47b234a700d45a0c7", "url": "https://github.com/apache/ozone/commit/87ea599905b907ed9aeae7e47b234a700d45a0c7", "message": "Removing replay check from Initiate and Abort requests", "committedDate": "2020-02-10T20:43:39Z", "type": "commit"}, {"oid": "b1f2e29fd0b49a4d8a8d542e5b336010bf27bb10", "url": "https://github.com/apache/ozone/commit/b1f2e29fd0b49a4d8a8d542e5b336010bf27bb10", "message": "rebase and review comments", "committedDate": "2020-02-10T20:56:14Z", "type": "commit"}, {"oid": "b1f2e29fd0b49a4d8a8d542e5b336010bf27bb10", "url": "https://github.com/apache/ozone/commit/b1f2e29fd0b49a4d8a8d542e5b336010bf27bb10", "message": "rebase and review comments", "committedDate": "2020-02-10T20:56:14Z", "type": "forcePushed"}, {"oid": "e804eab9e0cda95f391932548b482103bb613a98", "url": "https://github.com/apache/ozone/commit/e804eab9e0cda95f391932548b482103bb613a98", "message": "unit test fix", "committedDate": "2020-02-10T22:46:22Z", "type": "commit"}]}