{"pr_number": 696, "pr_title": "HDDS-3056. Allow users to list volumes they have access to, and optionally allow all users to list all volumes", "pr_createdAt": "2020-03-18T21:40:14Z", "pr_url": "https://github.com/apache/ozone/pull/696", "timeline": [{"oid": "e880d579718c576c7e548cc4d73d15f26a196e49", "url": "https://github.com/apache/ozone/commit/e880d579718c576c7e548cc4d73d15f26a196e49", "message": "Remove unused imports.", "committedDate": "2020-03-27T17:15:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MDkxOA==", "url": "https://github.com/apache/ozone/pull/696#discussion_r401240918", "bodyText": "Remove _USER.", "author": "smengcl", "createdAt": "2020-03-31T21:59:53Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/OMConfigKeys.java", "diffHunk": "@@ -76,6 +76,10 @@ private OMConfigKeys() {\n       \"ozone.om.db.cache.size.mb\";\n   public static final int OZONE_OM_DB_CACHE_SIZE_DEFAULT = 128;\n \n+  public static final String OZONE_OM_USER_VOLUME_LISTALL_ALLOWED =", "originalCommit": "e880d579718c576c7e548cc4d73d15f26a196e49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MjkwNg==", "url": "https://github.com/apache/ozone/pull/696#discussion_r401242906", "bodyText": "Remove log", "author": "smengcl", "createdAt": "2020-03-31T22:04:36Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1819,7 +1823,30 @@ public void deleteVolume(String volume) throws IOException {\n     auditMap.put(OzoneConsts.USERNAME, userName);\n     try {\n       metrics.incNumVolumeLists();\n-      return volumeManager.listVolumes(userName, prefix, prevKey, maxKeys);\n+      if (isAclEnabled) {\n+        if (LOG.isDebugEnabled()) {", "originalCommit": "e880d579718c576c7e548cc4d73d15f26a196e49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTQ2Mw==", "url": "https://github.com/apache/ozone/pull/696#discussion_r401245463", "bodyText": "Use accessAuthorizer.checkAccess", "author": "smengcl", "createdAt": "2020-03-31T22:10:30Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1819,7 +1823,30 @@ public void deleteVolume(String volume) throws IOException {\n     auditMap.put(OzoneConsts.USERNAME, userName);\n     try {\n       metrics.incNumVolumeLists();\n-      return volumeManager.listVolumes(userName, prefix, prevKey, maxKeys);\n+      if (isAclEnabled) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"ACL is enabled. Listing volumes accessible by user. \"\n+                  + \"Principal: {}, keytab: {}\",\n+              configuration.get(OZONE_OM_KERBEROS_PRINCIPAL_KEY),\n+              configuration.get(OZONE_OM_KERBEROS_KEYTAB_FILE_KEY));\n+        }\n+        // List all volumes first\n+        List<OmVolumeArgs> listOfAllVolumes = volumeManager.listVolumes(\n+            null, prefix, prevKey, maxKeys);\n+        // Filter all volumes by ACL LIST permission of UGI\n+        return listOfAllVolumes.stream().filter(v -> v.getAclMap()", "originalCommit": "e880d579718c576c7e548cc4d73d15f26a196e49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTUxMA==", "url": "https://github.com/apache/ozone/pull/696#discussion_r401245510", "bodyText": "Remove log", "author": "smengcl", "createdAt": "2020-03-31T22:10:37Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1819,7 +1823,30 @@ public void deleteVolume(String volume) throws IOException {\n     auditMap.put(OzoneConsts.USERNAME, userName);\n     try {\n       metrics.incNumVolumeLists();\n-      return volumeManager.listVolumes(userName, prefix, prevKey, maxKeys);\n+      if (isAclEnabled) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"ACL is enabled. Listing volumes accessible by user. \"\n+                  + \"Principal: {}, keytab: {}\",\n+              configuration.get(OZONE_OM_KERBEROS_PRINCIPAL_KEY),\n+              configuration.get(OZONE_OM_KERBEROS_KEYTAB_FILE_KEY));\n+        }\n+        // List all volumes first\n+        List<OmVolumeArgs> listOfAllVolumes = volumeManager.listVolumes(\n+            null, prefix, prevKey, maxKeys);\n+        // Filter all volumes by ACL LIST permission of UGI\n+        return listOfAllVolumes.stream().filter(v -> v.getAclMap()\n+            .hasAccess(IAccessAuthorizer.ACLType.LIST, remoteUserUgi))\n+            .collect(Collectors.toList());\n+      } else {\n+        if (LOG.isDebugEnabled()) {", "originalCommit": "e880d579718c576c7e548cc4d73d15f26a196e49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NTM2Mw==", "url": "https://github.com/apache/ozone/pull/696#discussion_r401885363", "bodyText": "Improve the description.", "author": "smengcl", "createdAt": "2020-04-01T20:20:38Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/web/ozShell/volume/ListVolumeHandler.java", "diffHunk": "@@ -63,6 +63,10 @@\n       description = \"Owner of the volumes to list.\")", "originalCommit": "e880d579718c576c7e548cc4d73d15f26a196e49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "acaca3447599e7316e5186ef1bdb772c91b3ceea", "url": "https://github.com/apache/ozone/commit/acaca3447599e7316e5186ef1bdb772c91b3ceea", "message": "Clean up test.", "committedDate": "2020-04-07T22:45:31Z", "type": "forcePushed"}, {"oid": "f56ccba8beed3c818f7390dbbf6e8c1a648ffe6b", "url": "https://github.com/apache/ozone/commit/f56ccba8beed3c818f7390dbbf6e8c1a648ffe6b", "message": "Clean up test.", "committedDate": "2020-04-10T05:27:44Z", "type": "forcePushed"}, {"oid": "c85d20bcf31b533c2850dd301ae94a94744a70da", "url": "https://github.com/apache/ozone/commit/c85d20bcf31b533c2850dd301ae94a94744a70da", "message": "Enable TestOzoneManagerListVolumes (do not ignore). Expect failure from timeout due to (suspected) RocksDB not being cleaned up during each mini cluster launch and setup.", "committedDate": "2020-04-14T18:18:04Z", "type": "forcePushed"}, {"oid": "2e3ab3bf1d8a21cb5f98cfb61191884157b944ad", "url": "https://github.com/apache/ozone/commit/2e3ab3bf1d8a21cb5f98cfb61191884157b944ad", "message": "Enable TestOzoneManagerListVolumes (do not ignore). Expect failure from timeout due to (suspected) RocksDB not being cleaned up during each mini cluster launch and setup.", "committedDate": "2020-04-15T03:02:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzI2MQ==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409833261", "bodyText": "can we wrap the stopCluster inside the try/final block in case the check failure the cluster will be stopped properly.", "author": "xiaoyuyao", "createdAt": "2020-04-16T20:37:17Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerListVolumes.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.UUID;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.client.protocol.ClientProtocol;\n+import org.apache.hadoop.ozone.om.exceptions.OMException;\n+import org.apache.hadoop.ozone.security.acl.OzoneObj;\n+import org.apache.hadoop.ozone.security.acl.OzoneObjInfo;\n+import org.apache.hadoop.security.UserGroupInformation;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_RATIS_PIPELINE_LIMIT;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_AUTHORIZER_CLASS;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_AUTHORIZER_CLASS_NATIVE;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_ENABLED;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ADMINISTRATORS;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS;\n+import static org.apache.hadoop.ozone.om.OMConfigKeys.OZONE_OM_VOLUME_LISTALL_ALLOWED;\n+import static org.apache.hadoop.ozone.security.acl.OzoneObj.StoreType.OZONE;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.Timeout;\n+\n+/**\n+ * Test OzoneManager list volume operation under combinations of configs.\n+ */\n+public class TestOzoneManagerListVolumes {\n+\n+  @Rule\n+  public Timeout timeout = new Timeout(120_000);\n+\n+  private UserGroupInformation loginUser;\n+  private UserGroupInformation user1 =\n+      UserGroupInformation.createRemoteUser(\"user1\");  // Admin user\n+  private UserGroupInformation user2 =\n+      UserGroupInformation.createRemoteUser(\"user2\");  // Non-admin user\n+\n+  @Before\n+  public void init() throws Exception {\n+    loginUser = UserGroupInformation.getLoginUser();\n+  }\n+\n+  /**\n+   * Create a MiniDFSCluster for testing.\n+   */\n+  private MiniOzoneCluster startCluster(boolean aclEnabled,\n+      boolean volListAllAllowed) throws Exception {\n+\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    String clusterId = UUID.randomUUID().toString();\n+    String scmId = UUID.randomUUID().toString();\n+    String omId = UUID.randomUUID().toString();\n+    conf.setInt(OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS, 2);\n+    conf.set(OZONE_ADMINISTRATORS, \"user1\");\n+    conf.setInt(OZONE_SCM_RATIS_PIPELINE_LIMIT, 10);\n+\n+    // Use native impl here, default impl doesn't do actual checks\n+    conf.set(OZONE_ACL_AUTHORIZER_CLASS, OZONE_ACL_AUTHORIZER_CLASS_NATIVE);\n+    // Note: OM doesn't support live config reloading\n+    conf.setBoolean(OZONE_ACL_ENABLED, aclEnabled);\n+    conf.setBoolean(OZONE_OM_VOLUME_LISTALL_ALLOWED, volListAllAllowed);\n+\n+    MiniOzoneCluster cluster = MiniOzoneCluster.newBuilder(conf)\n+        .setClusterId(clusterId).setScmId(scmId).setOmId(omId).build();\n+    cluster.waitForClusterToBeReady();\n+\n+    // loginUser is the user running this test.\n+    // Implication: loginUser is automatically added to the OM admin list.\n+    UserGroupInformation.setLoginUser(loginUser);\n+    // Create volumes with non-default owners and ACLs\n+    OzoneClient client = cluster.getClient();\n+    ObjectStore objectStore = client.getObjectStore();\n+\n+    /* r = READ, w = WRITE, c = CREATE, d = DELETE\n+       l = LIST, a = ALL, n = NONE, x = READ_ACL, y = WRITE_ACL */\n+    String aclUser1All = \"user:user1:a\";\n+    String aclUser2All = \"user:user2:a\";\n+    String aclWorldAll = \"world::a\";\n+    createVolumeWithOwnerAndAcl(objectStore, \"volume1\", \"user1\", aclUser1All);\n+    createVolumeWithOwnerAndAcl(objectStore, \"volume2\", \"user2\", aclUser2All);\n+    createVolumeWithOwnerAndAcl(objectStore, \"volume3\", \"user1\", aclUser2All);\n+    createVolumeWithOwnerAndAcl(objectStore, \"volume4\", \"user2\", aclUser1All);\n+    createVolumeWithOwnerAndAcl(objectStore, \"volume5\", \"user1\", aclWorldAll);\n+\n+    return cluster;\n+  }\n+\n+  private void stopCluster(MiniOzoneCluster cluster) {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+    }\n+  }\n+\n+  private void createVolumeWithOwnerAndAcl(ObjectStore objectStore,\n+      String volumeName, String ownerName, String aclString)\n+      throws IOException {\n+    ClientProtocol proxy = objectStore.getClientProxy();\n+    objectStore.createVolume(volumeName);\n+    proxy.setVolumeOwner(volumeName, ownerName);\n+    setVolumeAcl(objectStore, volumeName, aclString);\n+  }\n+\n+  /**\n+   * Helper function to set volume ACL.\n+   */\n+  private void setVolumeAcl(ObjectStore objectStore, String volumeName,\n+      String aclString) throws IOException {\n+    OzoneObj obj = OzoneObjInfo.Builder.newBuilder().setVolumeName(volumeName)\n+        .setResType(OzoneObj.ResourceType.VOLUME).setStoreType(OZONE).build();\n+    Assert.assertTrue(objectStore.setAcl(obj, OzoneAcl.parseAcls(aclString)));\n+  }\n+\n+  /**\n+   * Helper function to reduce code redundancy for test checks with each user\n+   * under different config combination.\n+   */\n+  private void checkUser(MiniOzoneCluster cluster, UserGroupInformation user,\n+      List<String> expectVol, boolean expectListAllSuccess) throws IOException {\n+\n+    UserGroupInformation.setLoginUser(user);\n+    OzoneClient client = cluster.getClient();\n+    ObjectStore objectStore = client.getObjectStore();\n+\n+    // `ozone sh volume list` shall return volumes with LIST permission of user.\n+    Iterator<? extends OzoneVolume> it = objectStore.listVolumesByUser(\n+        null, \"\", \"\");\n+    Set<String> accessibleVolumes = new HashSet<>();\n+    while (it.hasNext()) {\n+      OzoneVolume vol = it.next();\n+      String volumeName = vol.getName();\n+      accessibleVolumes.add(volumeName);\n+    }\n+    Assert.assertEquals(new HashSet<>(expectVol), accessibleVolumes);\n+\n+    // `ozone sh volume list --all` returns all volumes,\n+    //  or throws exception (for non-admin if acl enabled & listall disallowed).\n+    if (expectListAllSuccess) {\n+      it = objectStore.listVolumes(\"volume\");\n+      int count = 0;\n+      while (it.hasNext()) {\n+        it.next();\n+        count++;\n+      }\n+      Assert.assertEquals(5, count);\n+    } else {\n+      try {\n+        objectStore.listVolumes(\"volume\");\n+        Assert.fail(\"listAllVolumes should fail for \" + user.getUserName());\n+      } catch (RuntimeException ex) {\n+        // Current listAllVolumes throws RuntimeException\n+        if (ex.getCause() instanceof OMException) {\n+          // Expect PERMISSION_DENIED\n+          if (((OMException) ex.getCause()).getResult() !=\n+              OMException.ResultCodes.PERMISSION_DENIED) {\n+            throw ex;\n+          }\n+        } else {\n+          throw ex;\n+        }\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testAclEnabledListAllAllowed() throws Exception {\n+    // ozone.acl.enabled = true, ozone.om.volume.listall.allowed = true\n+    MiniOzoneCluster cluster = startCluster(true, true);\n+    checkUser(cluster, user1, Arrays.asList(\"volume1\", \"volume4\", \"volume5\"),\n+        true);\n+    checkUser(cluster, user2, Arrays.asList(\"volume2\", \"volume3\", \"volume5\"),\n+        true);\n+    stopCluster(cluster);", "originalCommit": "3eec9d23d7030f030cd9cbf72f39ca3bbe35592a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg5Nzg2NQ==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409897865", "bodyText": "Sure will do", "author": "smengcl", "createdAt": "2020-04-16T23:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDkzMQ==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409834931", "bodyText": "Do we really need a write lock for list volume operation?", "author": "xiaoyuyao", "createdAt": "2020-04-16T20:40:20Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "diffHunk": "@@ -453,23 +449,11 @@ public boolean checkVolumeAccess(String volume, OzoneAclInfo userAcl)\n   @Override\n   public List<OmVolumeArgs> listVolumes(String userName,\n       String prefix, String startKey, int maxKeys) throws IOException {\n-    metadataManager.getLock().acquireLock(USER_LOCK, userName);\n+    metadataManager.getLock().acquireWriteLock(USER_LOCK, userName);", "originalCommit": "3eec9d23d7030f030cd9cbf72f39ca3bbe35592a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg5NzgxMA==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409897810", "bodyText": "This is merely cleaning up the deprecated call.", "author": "smengcl", "createdAt": "2020-04-16T23:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwNTY0MQ==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409905641", "bodyText": "I could either leave it alone, or change it to acquireReadLock. The latter should be fine though.", "author": "smengcl", "createdAt": "2020-04-16T23:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3NzIxMA==", "url": "https://github.com/apache/ozone/pull/696#discussion_r409977210", "bodyText": "I think we should change it to acquireReadLock.", "author": "xiaoyuyao", "createdAt": "2020-04-17T03:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NzExNg==", "url": "https://github.com/apache/ozone/pull/696#discussion_r410357116", "bodyText": "done: c9a9291", "author": "smengcl", "createdAt": "2020-04-17T17:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDkzMQ=="}], "type": "inlineReview"}, {"oid": "da737d3b23844cfb125b4f583faef68d9f806674", "url": "https://github.com/apache/ozone/commit/da737d3b23844cfb125b4f583faef68d9f806674", "message": "Use read lock for listVolumes in VolumeManagerImpl.", "committedDate": "2020-04-20T15:13:33Z", "type": "forcePushed"}, {"oid": "7fb402706bbba41de877349a9ca089c740d53c51", "url": "https://github.com/apache/ozone/commit/7fb402706bbba41de877349a9ca089c740d53c51", "message": "Remove admin check for listVolumes so every user can list all volumes via OM.", "committedDate": "2020-04-20T22:56:24Z", "type": "commit"}, {"oid": "00b4d86f36ec9c3476d9adcea0faf633cc52528e", "url": "https://github.com/apache/ozone/commit/00b4d86f36ec9c3476d9adcea0faf633cc52528e", "message": "Add new option `--all` for `ozone sh volume list` so users can list all volumes via Ozone shell.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "693adb194ab5ea9cad1f369ae579968c7152530c", "url": "https://github.com/apache/ozone/commit/693adb194ab5ea9cad1f369ae579968c7152530c", "message": "Add new config key that optionally allows everyone to list all volumes.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "1128faf0de430eee9b143e1080d484ba9baf3610", "url": "https://github.com/apache/ozone/commit/1128faf0de430eee9b143e1080d484ba9baf3610", "message": "Allow users to list volumes they have access to. accessible = has READ ACL, for now.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "9c6d759046f0fd1a26012beab1ebc7f3e0c626b1", "url": "https://github.com/apache/ozone/commit/9c6d759046f0fd1a26012beab1ebc7f3e0c626b1", "message": "Simplify code; Remove filter logic in VolumeManager.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "28ceabf2e64b4c73c707e543cbc80edce803c4f7", "url": "https://github.com/apache/ozone/commit/28ceabf2e64b4c73c707e543cbc80edce803c4f7", "message": "Rename config key ozone.om.user.volume.listall.allowed -> ozone.om.volume.listall.allowed", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "da9508c57d2b2e3c168f205fef65ff9154697e9a", "url": "https://github.com/apache/ozone/commit/da9508c57d2b2e3c168f205fef65ff9154697e9a", "message": "Remove unused imports.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "0d7b0dfd67dfe8a062ff5bc5da4bbb984fc6afc7", "url": "https://github.com/apache/ozone/commit/0d7b0dfd67dfe8a062ff5bc5da4bbb984fc6afc7", "message": "OZONE_OM_USER_VOLUME_LISTALL_ALLOWED -> OZONE_OM_VOLUME_LISTALL_ALLOWED", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "fba10bd50349e6aebb6c6f2b03ab6548aeb16ed8", "url": "https://github.com/apache/ozone/commit/fba10bd50349e6aebb6c6f2b03ab6548aeb16ed8", "message": "Improve doc for ozone sh volume list.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "b3dca6e3e4268ade5d37fe6f5d481befefbe909b", "url": "https://github.com/apache/ozone/commit/b3dca6e3e4268ade5d37fe6f5d481befefbe909b", "message": "Remove unnecessary debug log.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "403ea76e41ad284dd38b13ac7811de55b6c24c4f", "url": "https://github.com/apache/ozone/commit/403ea76e41ad284dd38b13ac7811de55b6c24c4f", "message": "Use checkAccess; Add new `hasAcls` helper function to check ACL without throwing.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "2e2bc3880d206cb5763ac4c28a8756779a2ca379", "url": "https://github.com/apache/ozone/commit/2e2bc3880d206cb5763ac4c28a8756779a2ca379", "message": "Amend the doc.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "7bed9820fd363e387c948c66d829c0fefe4f18d5", "url": "https://github.com/apache/ozone/commit/7bed9820fd363e387c948c66d829c0fefe4f18d5", "message": "Remove unused import.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "4d3bed867cfc541f34ebf4f064e2a976c5390a80", "url": "https://github.com/apache/ozone/commit/4d3bed867cfc541f34ebf4f064e2a976c5390a80", "message": "OZONE_OM_USER_VOLUME_LISTALL_ALLOWED_DEFAULT -> OZONE_OM_VOLUME_LISTALL_ALLOWED_DEFAULT", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "c2927378f96f7bb9e5805fa3c56813135d6abdbc", "url": "https://github.com/apache/ozone/commit/c2927378f96f7bb9e5805fa3c56813135d6abdbc", "message": "Duplicate TestOzoneManagerRestart -> TestOzoneManagerListVolumes.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "da604505ee85b2c2bfeccd96e9bd8503ba0e7497", "url": "https://github.com/apache/ozone/commit/da604505ee85b2c2bfeccd96e9bd8503ba0e7497", "message": "Add integration tests.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "7d5189419d332fee1fcd4600864f299455c1a83b", "url": "https://github.com/apache/ozone/commit/7d5189419d332fee1fcd4600864f299455c1a83b", "message": "Clean up test.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "9445c5c2c6038991a746faaaf657db3835b96444", "url": "https://github.com/apache/ozone/commit/9445c5c2c6038991a746faaaf657db3835b96444", "message": "Enable TestOzoneManagerListVolumes (do not ignore). Expect failure from timeout due to (suspected) RocksDB not being cleaned up during each mini cluster launch and setup.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "139858462f4363c6d6f9787282f28ffaa88f4c5c", "url": "https://github.com/apache/ozone/commit/139858462f4363c6d6f9787282f28ffaa88f4c5c", "message": "Retest", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "f4a8817a6523a14f1293d6509e64e45dc2d775bc", "url": "https://github.com/apache/ozone/commit/f4a8817a6523a14f1293d6509e64e45dc2d775bc", "message": "Use read lock for listVolumes in VolumeManagerImpl.", "committedDate": "2020-04-20T22:56:25Z", "type": "commit"}, {"oid": "f4a8817a6523a14f1293d6509e64e45dc2d775bc", "url": "https://github.com/apache/ozone/commit/f4a8817a6523a14f1293d6509e64e45dc2d775bc", "message": "Use read lock for listVolumes in VolumeManagerImpl.", "committedDate": "2020-04-20T22:56:25Z", "type": "forcePushed"}]}