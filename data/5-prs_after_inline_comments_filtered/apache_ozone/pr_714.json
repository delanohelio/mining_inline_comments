{"pr_number": 714, "pr_title": "HDDS-3164. Add Recon endpoint to serve missing containers and its metadata.", "pr_createdAt": "2020-03-23T22:21:18Z", "pr_url": "https://github.com/apache/ozone/pull/714", "timeline": [{"oid": "7f966f9058be733c195ffb1e89faf685ab4ab6a8", "url": "https://github.com/apache/ozone/commit/7f966f9058be733c195ffb1e89faf685ab4ab6a8", "message": "HDDS-3164. Add Recon endpoint to serve missing containers and its metadata.", "committedDate": "2020-03-23T22:13:01Z", "type": "commit"}, {"oid": "ed56e61e2d9827ed1a535a75596e42875557b747", "url": "https://github.com/apache/ozone/commit/ed56e61e2d9827ed1a535a75596e42875557b747", "message": "Consider UNHEALTHY state of container replicas while determining missing containers", "committedDate": "2020-03-24T19:43:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2Nzc2MQ==", "url": "https://github.com/apache/ozone/pull/714#discussion_r397467761", "bodyText": "Unintended change?", "author": "avijayanhwx", "createdAt": "2020-03-24T21:19:43Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java", "diffHunk": "@@ -47,7 +48,7 @@\n \n   private ContainerManager containerManager;\n   private MissingContainersDao missingContainersDao;\n-  private static final long INTERVAL = 5 * 60 * 1000L;", "originalCommit": "ed56e61e2d9827ed1a535a75596e42875557b747", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNDIwMw==", "url": "https://github.com/apache/ozone/pull/714#discussion_r397504203", "bodyText": "Good catch :)", "author": "vivekratnavel", "createdAt": "2020-03-24T22:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2Nzc2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MTAzOA==", "url": "https://github.com/apache/ozone/pull/714#discussion_r397471038", "bodyText": "Nit. This may be replaced with something like\nall.forEach(r -> Assert.assertTrue(missingContainerIDs.contains(r.getContainerId())));", "author": "avijayanhwx", "createdAt": "2020-03-24T21:26:15Z", "path": "hadoop-ozone/recon/src/test/java/org/apache/hadoop/ozone/recon/fsck/TestMissingContainerTask.java", "diffHunk": "@@ -90,15 +102,19 @@ public void testRun() throws Exception {\n     missingContainerTask.start();\n \n     LambdaTestUtils.await(6000, 1000, () ->\n-        (missingContainersTableHandle.findAll().size() == 1));\n+        (missingContainersTableHandle.findAll().size() == 2));\n     all = missingContainersTableHandle.findAll();\n-    Assert.assertEquals(3, all.get(0).getContainerId().longValue());\n-\n+    // Container IDs 2 and 3 should be present in the missing containers table\n+    Set<Long> missingContainerIDs = Collections.unmodifiableSet(\n+        new HashSet<>(Arrays.asList(2L, 3L))\n+    );\n+    Assert.assertTrue(all.stream().allMatch(record ->\n+        missingContainerIDs.stream().anyMatch(", "originalCommit": "ed56e61e2d9827ed1a535a75596e42875557b747", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3NjM2NQ==", "url": "https://github.com/apache/ozone/pull/714#discussion_r397476365", "bodyText": "Why not do assertEquals check with \"missingSince\" ?", "author": "avijayanhwx", "createdAt": "2020-03-24T21:36:47Z", "path": "hadoop-ozone/recon/src/test/java/org/apache/hadoop/ozone/recon/api/TestContainerEndpoint.java", "diffHunk": "@@ -350,24 +407,52 @@ public void testGetContainersWithPrevKey() {\n     assertEquals(1L, containerMetadata.getContainerID());\n \n     // test for negative cases\n-    response = containerKeyService.getContainers(-1, 5L);\n+    response = containerEndpoint.getContainers(-1, 5L);\n     responseObject = (ContainersResponse) response.getEntity();\n     data = responseObject.getContainersResponseData();\n     containers = new ArrayList<>(data.getContainers());\n     assertEquals(0, containers.size());\n     assertEquals(2, data.getTotalCount());\n \n-    response = containerKeyService.getContainers(-1, -1L);\n+    response = containerEndpoint.getContainers(-1, -1L);\n     responseObject = (ContainersResponse) response.getEntity();\n     data = responseObject.getContainersResponseData();\n     containers = new ArrayList<>(data.getContainers());\n     assertEquals(2, containers.size());\n     assertEquals(2, data.getTotalCount());\n   }\n \n+  @Test\n+  public void testGetMissingContainers() {\n+    Response response = containerEndpoint.getMissingContainers();\n+\n+    MissingContainersResponse responseObject =\n+        (MissingContainersResponse) response.getEntity();\n+\n+    assertEquals(0, responseObject.getTotalCount());\n+    assertEquals(Collections.EMPTY_LIST, responseObject.getContainers());\n+\n+    // Add missing containers to the database\n+    long missingSince = System.currentTimeMillis();\n+    MissingContainers newRecord =\n+        new MissingContainers(1L, missingSince);\n+    missingContainersDao.insert(newRecord);\n+\n+    response = containerEndpoint.getMissingContainers();\n+    responseObject = (MissingContainersResponse) response.getEntity();\n+    assertEquals(1, responseObject.getTotalCount());\n+    MissingContainerMetadata container =\n+        responseObject.getContainers().stream().findFirst().orElse(null);\n+    Assert.assertNotNull(container);\n+\n+    assertEquals(containerID.getId(), container.getContainerID());\n+    assertEquals(keyCount, container.getKeys());\n+    assertEquals(pipelineID.getId(), container.getPipelineID());\n+    assertEquals(0, container.getDatanodes().size());\n+    assertTrue(System.currentTimeMillis() > container.getMissingSince());", "originalCommit": "ed56e61e2d9827ed1a535a75596e42875557b747", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3Nzg1Ng==", "url": "https://github.com/apache/ozone/pull/714#discussion_r397477856", "bodyText": "Nit. We can probably get rid of this method 'getMockOzoneManagerServiceProvider'.", "author": "avijayanhwx", "createdAt": "2020-03-24T21:39:48Z", "path": "hadoop-ozone/recon/src/test/java/org/apache/hadoop/ozone/recon/api/TestContainerEndpoint.java", "diffHunk": "@@ -45,66 +48,120 @@\n import org.apache.hadoop.ozone.recon.api.types.ContainersResponse;\n import org.apache.hadoop.ozone.recon.api.types.KeyMetadata;\n import org.apache.hadoop.ozone.recon.api.types.KeysResponse;\n+import org.apache.hadoop.ozone.recon.api.types.MissingContainerMetadata;\n+import org.apache.hadoop.ozone.recon.api.types.MissingContainersResponse;\n import org.apache.hadoop.ozone.recon.recovery.ReconOMMetadataManager;\n+import org.apache.hadoop.ozone.recon.scm.ReconContainerManager;\n+import org.apache.hadoop.ozone.recon.scm.ReconStorageContainerManagerFacade;\n import org.apache.hadoop.ozone.recon.spi.ContainerDBServiceProvider;\n+import org.apache.hadoop.ozone.recon.spi.StorageContainerServiceProvider;\n import org.apache.hadoop.ozone.recon.spi.impl.OzoneManagerServiceProviderImpl;\n+import org.apache.hadoop.ozone.recon.spi.impl.StorageContainerServiceProviderImpl;\n import org.apache.hadoop.ozone.recon.tasks.ContainerKeyMapperTask;\n import org.apache.hadoop.hdds.utils.db.Table;\n+import org.hadoop.ozone.recon.schema.ReconTaskSchemaDefinition;\n import org.hadoop.ozone.recon.schema.StatsSchemaDefinition;\n-import org.jooq.impl.DSL;\n-import org.jooq.impl.DefaultConfiguration;\n+import org.hadoop.ozone.recon.schema.UtilizationSchemaDefinition;\n+import org.hadoop.ozone.recon.schema.tables.daos.MissingContainersDao;\n+import org.hadoop.ozone.recon.schema.tables.daos.ReconTaskStatusDao;\n+import org.hadoop.ozone.recon.schema.tables.pojos.MissingContainers;\n+import org.jooq.Configuration;\n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n \n import com.google.inject.AbstractModule;\n import com.google.inject.Injector;\n \n /**\n- * Test for container key service.\n+ * Test for container endpoint.\n  */\n-public class TestContainerKeyService extends AbstractOMMetadataManagerTest {\n+public class TestContainerEndpoint extends AbstractOMMetadataManagerTest {\n \n   private ContainerDBServiceProvider containerDbServiceProvider;\n-  private Injector injector;\n-  private OzoneManagerServiceProviderImpl ozoneManagerServiceProvider;\n-  private ContainerKeyService containerKeyService;\n+  private ContainerEndpoint containerEndpoint;\n   private GuiceInjectorUtilsForTestsImpl guiceInjectorTest =\n       new GuiceInjectorUtilsForTestsImpl();\n   private boolean isSetupDone = false;\n   private ReconOMMetadataManager reconOMMetadataManager;\n+  private MissingContainersDao missingContainersDao;\n+  private ContainerID containerID = new ContainerID(1L);\n+  private PipelineID pipelineID;\n+  private long keyCount = 5L;\n   private void initializeInjector() throws Exception {\n     reconOMMetadataManager = getTestMetadataManager(\n         initializeNewOmMetadataManager());\n-    ozoneManagerServiceProvider = getMockOzoneManagerServiceProvider();\n+    OzoneManagerServiceProviderImpl ozoneManagerServiceProvider =", "originalCommit": "ed56e61e2d9827ed1a535a75596e42875557b747", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f6210232f5569011a53624c4d9465d4f01f68fc", "url": "https://github.com/apache/ozone/commit/1f6210232f5569011a53624c4d9465d4f01f68fc", "message": "Fix review comments.", "committedDate": "2020-03-24T22:49:41Z", "type": "commit"}, {"oid": "d7b76bfc5f49afae7c6bb4a095509d1d59137c02", "url": "https://github.com/apache/ozone/commit/d7b76bfc5f49afae7c6bb4a095509d1d59137c02", "message": "Empty commit to trigger build", "committedDate": "2020-03-25T07:11:52Z", "type": "commit"}, {"oid": "f43b84fa34599df5944727a3245ec525e76bb92c", "url": "https://github.com/apache/ozone/commit/f43b84fa34599df5944727a3245ec525e76bb92c", "message": "Merge remote-tracking branch 'apache/master' into HDDS-3164", "committedDate": "2020-03-25T16:37:24Z", "type": "commit"}]}