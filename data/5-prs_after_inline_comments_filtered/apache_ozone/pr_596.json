{"pr_number": 596, "pr_title": "HDDS-3066. SCM crash during loading containers to DB.", "pr_createdAt": "2020-02-24T20:04:13Z", "pr_url": "https://github.com/apache/ozone/pull/596", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r383548033", "bodyText": "Pipeline scrubber only destroy pipeline that has been in ALLOCATED for too long. And the container loader only call addContainerToPipeline if the container is in OPEN state.\nIf I understand correctly, we should not have OPEN container assigned on an ALLOCATED pipeline.", "author": "xiaoyuyao", "createdAt": "2020-02-24T22:17:52Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -117,9 +126,17 @@ private void loadExistingContainers() throws IOException {\n           ContainerInfoProto.PARSER.parseFrom(entry.getValue()));\n       Preconditions.checkNotNull(container);\n       containerStateManager.loadContainer(container);\n-      if (container.getState() == LifeCycleState.OPEN) {\n-        pipelineManager.addContainerToPipeline(container.getPipelineID(),\n-            ContainerID.valueof(container.getContainerID()));\n+      try {\n+        if (container.getState() == LifeCycleState.OPEN) {", "originalCommit": "ff0eef45745e5e73fff5c0cb750507b981762786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MTg1Mw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r383561853", "bodyText": "When SCM is restarted, all pipelines will be in allocated state, they will be moved to open state. And when pipeline reports are received from DN, they will be moved to Open State.\nSo, here scrubber removed those pipelines and container is in open State.\n2020-02-20 12:42:18,947 [RatisPipelineUtilsThread] INFO org.apache.hadoop.hdds.scm.pipeline.SCMPipelineManager: Destroying pipeline:Pipeline[ Id: 35dff62d-9bfa-449b-b6e8-6f00cc8c1b6e, Nodes: 53fc2e1a-73da-4ae7-8725-9cc23ac6c393{ip: 10.65.54.245, host: om-ha-3.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}2346b987-3126-48b8-b2d2-e8244cb2e0ae{ip: 10.65.51.168, host: om-ha-2.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}45987d8b-4bfd-4ccc-bf2f-224bcf5b0dcd{ip: 10.65.51.49, host: om-ha-1.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}, Type:RATIS, Factor:THREE, State:ALLOCATED, leaderId:null, CreationTimestamp2020-02-20T03:59:02.043Z]\n2020-02-20 12:42:18,947 [RatisPipelineUtilsThread] INFO org.apache.hadoop.hdds.scm.pipeline.PipelineStateManager: Pipeline Pipeline[ Id: 35dff62d-9bfa-449b-b6e8-6f00cc8c1b6e, Nodes: 53fc2e1a-73da-4ae7-8725-9cc23ac6c393{ip: 10.65.54.245, host: om-ha-3.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}2346b987-3126-48b8-b2d2-e8244cb2e0ae{ip: 10.65.51.168, host: om-ha-2.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}45987d8b-4bfd-4ccc-bf2f-224bcf5b0dcd{ip: 10.65.51.49, host: om-ha-1.vpc.cloudera.com, networkLocation: /default-rack, certSerialId: null}, Type:RATIS, Factor:THREE, State:CLOSED, leaderId:null, CreationTimestamp2020-02-20T03:59:02.043Z] moved to CLOSED state\nAnd SCM log in first restart.\nNow after 2nd restart the pipeline is not in DB, but the container is in open state.", "author": "bharatviswa504", "createdAt": "2020-02-24T22:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MjE0NQ==", "url": "https://github.com/apache/ozone/pull/596#discussion_r383562145", "bodyText": "And also I am thinking scrubber should not come and delete pipelines until we are out of SafeMode, will try to do that in a new jira.", "author": "bharatviswa504", "createdAt": "2020-02-24T22:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU3MDcxMw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r383570713", "bodyText": "As mentioned in Jira, another scenario where this can happen\nThis can happen in other scenarios like when safeModeHandler calls finalizeAndDestroyPipeline and do SCM restart.\nAs we remove the pipeline from DB and container can be in an open state. (This can happen because close container command is triggered, but not yet processed.) When SCM restart, we can be in this scenario.", "author": "bharatviswa504", "createdAt": "2020-02-24T23:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNzM5NA==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384107394", "bodyText": "bq. And also I am thinking scrubber should not come and delete pipelines until we are out of SafeMode, will try to do that in a new jira.\nAgree, we should have a special state to indicate that state of the pipeline. We can fix it in a separate JIRA.", "author": "xiaoyuyao", "createdAt": "2020-02-25T20:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMzQ5MA==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384113490", "bodyText": "Scrubbing to start after safe mode, I have handled in this PR #605\nI see that we can do without introducing a new state.", "author": "bharatviswa504", "createdAt": "2020-02-25T20:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4MTA5MA==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384781090", "bodyText": "I think there are values to keep the scurbber running in safemode. Without it, any pipeline created/restored during safemode will hold there forever if any issue hit during pipeline creation. This prevent new pipeline from being created to exit safemode.\nE.g., when datanodes restart during safemode pipeline creation, before the pipeline report changed the SCM pipeline state from ALLOCATE to OPEN.", "author": "xiaoyuyao", "createdAt": "2020-02-26T21:36:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MDgxNA==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384790814", "bodyText": "If old pipelines are reported, and they are only accounted for SafeMode rule calculation. (Because the pipeline count is got from pipeline DB during startup)\nOnce, we are out of safe mode, we are triggering pipeline creation.\nSo, to come out of safe mode pipelines which have already been created if we have them and they are reported according to percentage configured, we can come out of safe mode.\nThe main purpose not to run scrub in safe mode is if it is closing the pipelines where datanodes have still not reported, we shall never come out of safe mode. To avoid this kind of scenario, I think running scrubber in safe mode is not correct.", "author": "bharatviswa504", "createdAt": "2020-02-26T21:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MTEzMg==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384791132", "bodyText": "The fix for not to run scrubber is in HDDS-3072, we can discuss more on that over #605\nIf this is fine, we can get this in.", "author": "bharatviswa504", "createdAt": "2020-02-26T21:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNDc1NQ==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384804755", "bodyText": "bq. The main purpose not to run scrub in safe mode is if it is closing the pipelines where datanodes have still not reported, we shall never come out of safe mode.\nMulti-raft allows additional pipeline being created on top if existing one if they are not functional. To new OM client to write, there is no difference between pipeline loaded/reported or created/reported. If those loaded but not reported pipeline is not working, we should use scrubber to allow recreate/report. Agree, we can discuss this on #605.", "author": "xiaoyuyao", "createdAt": "2020-02-26T22:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODAzMw=="}], "type": "inlineReview"}, {"oid": "4a7c8ffcea75b77c53e2bbb65e8557702552a31d", "url": "https://github.com/apache/ozone/commit/4a7c8ffcea75b77c53e2bbb65e8557702552a31d", "message": "HDDS-3066. SCM crash during loading containers to DB.", "committedDate": "2020-02-24T23:08:31Z", "type": "commit"}, {"oid": "85ce437aa10fa0b42b179d4bfc362d85f4f375c5", "url": "https://github.com/apache/ozone/commit/85ce437aa10fa0b42b179d4bfc362d85f4f375c5", "message": "more changes", "committedDate": "2020-02-24T23:08:31Z", "type": "commit"}, {"oid": "b499ab44b7defa587b0bb658581feb5a23940543", "url": "https://github.com/apache/ozone/commit/b499ab44b7defa587b0bb658581feb5a23940543", "message": "fix checkstyle.", "committedDate": "2020-02-24T23:08:31Z", "type": "commit"}, {"oid": "7571b84dc6fbab83385d8986e03ab05cde036017", "url": "https://github.com/apache/ozone/commit/7571b84dc6fbab83385d8986e03ab05cde036017", "message": "fix test", "committedDate": "2020-02-24T23:08:32Z", "type": "commit"}, {"oid": "7571b84dc6fbab83385d8986e03ab05cde036017", "url": "https://github.com/apache/ozone/commit/7571b84dc6fbab83385d8986e03ab05cde036017", "message": "fix test", "committedDate": "2020-02-24T23:08:32Z", "type": "forcePushed"}, {"oid": "c4895bf73e6709da0d541a62f522a3ee9bfff9a8", "url": "https://github.com/apache/ozone/commit/c4895bf73e6709da0d541a62f522a3ee9bfff9a8", "message": "remove not needed code", "committedDate": "2020-02-24T23:11:11Z", "type": "commit"}, {"oid": "591a129f6f5c7801be03b326d3d16d2acffce6d8", "url": "https://github.com/apache/ozone/commit/591a129f6f5c7801be03b326d3d16d2acffce6d8", "message": "check style", "committedDate": "2020-02-24T23:12:05Z", "type": "commit"}, {"oid": "cecc04cbc0eb7010089d985da0c2d0a9fd0bfce6", "url": "https://github.com/apache/ozone/commit/cecc04cbc0eb7010089d985da0c2d0a9fd0bfce6", "message": "reword", "committedDate": "2020-02-24T23:15:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMjAzNw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384112037", "bodyText": "NIT: can we reword \"with out a pipeline {}\" to \"with pipeline {} that does not exist\"", "author": "xiaoyuyao", "createdAt": "2020-02-25T20:36:45Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -117,9 +119,28 @@ private void loadExistingContainers() throws IOException {\n           ContainerInfoProto.PARSER.parseFrom(entry.getValue()));\n       Preconditions.checkNotNull(container);\n       containerStateManager.loadContainer(container);\n-      if (container.getState() == LifeCycleState.OPEN) {\n-        pipelineManager.addContainerToPipeline(container.getPipelineID(),\n-            ContainerID.valueof(container.getContainerID()));\n+      try {\n+        if (container.getState() == LifeCycleState.OPEN) {\n+          pipelineManager.addContainerToPipeline(container.getPipelineID(),\n+              ContainerID.valueof(container.getContainerID()));\n+        }\n+      } catch (PipelineNotFoundException ex) {\n+        LOG.warn(\"Found a Container {} which is in {} state with out a \" +", "originalCommit": "cecc04cbc0eb7010089d985da0c2d0a9fd0bfce6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNDU1Mw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384204553", "bodyText": "Fixed it.", "author": "bharatviswa504", "createdAt": "2020-02-26T00:12:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMjAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNTM3Mw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384115373", "bodyText": "This comment does not match with the code any more. Should we remove it?\n\"// Not firing CLOSE_CONTAINER event ...\"", "author": "xiaoyuyao", "createdAt": "2020-02-25T20:44:06Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -117,9 +119,28 @@ private void loadExistingContainers() throws IOException {\n           ContainerInfoProto.PARSER.parseFrom(entry.getValue()));\n       Preconditions.checkNotNull(container);\n       containerStateManager.loadContainer(container);\n-      if (container.getState() == LifeCycleState.OPEN) {\n-        pipelineManager.addContainerToPipeline(container.getPipelineID(),\n-            ContainerID.valueof(container.getContainerID()));\n+      try {\n+        if (container.getState() == LifeCycleState.OPEN) {\n+          pipelineManager.addContainerToPipeline(container.getPipelineID(),\n+              ContainerID.valueof(container.getContainerID()));\n+        }\n+      } catch (PipelineNotFoundException ex) {\n+        LOG.warn(\"Found a Container {} which is in {} state with out a \" +\n+            \"pipeline {}. Close Container.\", container, container.getState(),\n+            container.getPipelineID());\n+\n+        // Not firing CLOSE_CONTAINER event because CloseContainer Event", "originalCommit": "cecc04cbc0eb7010089d985da0c2d0a9fd0bfce6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNDA4MA==", "url": "https://github.com/apache/ozone/pull/596#discussion_r384204080", "bodyText": "This was added to explain the reason why we are not calling CLOSE_CONTAINER event to close container. In future, if someone changes this part of the code, they will know the reason in doing this way.", "author": "bharatviswa504", "createdAt": "2020-02-26T00:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNTM3Mw=="}], "type": "inlineReview"}, {"oid": "34ee16ff8cd1ade8ff2be6ea8f5a6c6e45209043", "url": "https://github.com/apache/ozone/commit/34ee16ff8cd1ade8ff2be6ea8f5a6c6e45209043", "message": "review comment", "committedDate": "2020-02-26T00:11:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNTEzOQ==", "url": "https://github.com/apache/ozone/pull/596#discussion_r385315139", "bodyText": "We don't need this comment. As SCMContainerManager is the one which is taking this decision, it should not file an event to close the container. It is logical to directly update the container state.\nIt is very explicit that we are performing this in case of PipelineNotFoundException, so there is no need to repeat it again.", "author": "nandakumar131", "createdAt": "2020-02-27T19:12:09Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -117,9 +119,28 @@ private void loadExistingContainers() throws IOException {\n           ContainerInfoProto.PARSER.parseFrom(entry.getValue()));\n       Preconditions.checkNotNull(container);\n       containerStateManager.loadContainer(container);\n-      if (container.getState() == LifeCycleState.OPEN) {\n-        pipelineManager.addContainerToPipeline(container.getPipelineID(),\n-            ContainerID.valueof(container.getContainerID()));\n+      try {\n+        if (container.getState() == LifeCycleState.OPEN) {\n+          pipelineManager.addContainerToPipeline(container.getPipelineID(),\n+              ContainerID.valueof(container.getContainerID()));\n+        }\n+      } catch (PipelineNotFoundException ex) {\n+        LOG.warn(\"Found a Container {} which is in {} state with pipeline {} \" +\n+                \"that does not exist. Closing Container.\", container,\n+            container.getState(), container.getPipelineID());\n+\n+        // Not firing CLOSE_CONTAINER event because CloseContainer event\n+        // handler is not registered by the time when we come\n+        // here. So, we are calling update Container state to set\n+        // container state to CLOSING, and later replication manager takes care\n+        // of send close commands to datanode to close containers on the\n+        // datanode.\n+\n+        // Skipping pipeline to container removal because, we got a\n+        // pipelineNotFoundException when adding container to\n+        // pipeline. So, we can only update container state.", "originalCommit": "34ee16ff8cd1ade8ff2be6ea8f5a6c6e45209043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMDk1MQ==", "url": "https://github.com/apache/ozone/pull/596#discussion_r385400951", "bodyText": "Done.", "author": "bharatviswa504", "createdAt": "2020-02-27T22:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNTEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNjYxMw==", "url": "https://github.com/apache/ozone/pull/596#discussion_r385316613", "bodyText": "We don't have to introduce a new method to updateContainerState. Since we are doing this inside a constructor, we don't need any lock.\nWe can directly call containerStateManager.updateContainerState(container.containerID(), HddsProtos.LifeCycleEvent.FINALIZE)", "author": "nandakumar131", "createdAt": "2020-02-27T19:15:09Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -117,9 +119,28 @@ private void loadExistingContainers() throws IOException {\n           ContainerInfoProto.PARSER.parseFrom(entry.getValue()));\n       Preconditions.checkNotNull(container);\n       containerStateManager.loadContainer(container);\n-      if (container.getState() == LifeCycleState.OPEN) {\n-        pipelineManager.addContainerToPipeline(container.getPipelineID(),\n-            ContainerID.valueof(container.getContainerID()));\n+      try {\n+        if (container.getState() == LifeCycleState.OPEN) {\n+          pipelineManager.addContainerToPipeline(container.getPipelineID(),\n+              ContainerID.valueof(container.getContainerID()));\n+        }\n+      } catch (PipelineNotFoundException ex) {\n+        LOG.warn(\"Found a Container {} which is in {} state with pipeline {} \" +\n+                \"that does not exist. Closing Container.\", container,\n+            container.getState(), container.getPipelineID());\n+\n+        // Not firing CLOSE_CONTAINER event because CloseContainer event\n+        // handler is not registered by the time when we come\n+        // here. So, we are calling update Container state to set\n+        // container state to CLOSING, and later replication manager takes care\n+        // of send close commands to datanode to close containers on the\n+        // datanode.\n+\n+        // Skipping pipeline to container removal because, we got a\n+        // pipelineNotFoundException when adding container to\n+        // pipeline. So, we can only update container state.\n+        updateContainerState(container.containerID(),\n+            HddsProtos.LifeCycleEvent.FINALIZE, true);", "originalCommit": "34ee16ff8cd1ade8ff2be6ea8f5a6c6e45209043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMDYyMQ==", "url": "https://github.com/apache/ozone/pull/596#discussion_r385400621", "bodyText": "This call is being done so that it will be reflected in container DB also.", "author": "bharatviswa504", "createdAt": "2020-02-27T22:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNjYxMw=="}], "type": "inlineReview"}, {"oid": "c5ee13ae4f77de79a224b305fd943809267fa696", "url": "https://github.com/apache/ozone/commit/c5ee13ae4f77de79a224b305fd943809267fa696", "message": "review comment", "committedDate": "2020-02-27T22:10:28Z", "type": "commit"}, {"oid": "f8d64d225fafeeb5631df1eeab9fdbd4fcb5da19", "url": "https://github.com/apache/ozone/commit/f8d64d225fafeeb5631df1eeab9fdbd4fcb5da19", "message": "empty commit to retest build", "committedDate": "2020-02-28T09:54:48Z", "type": "commit"}]}