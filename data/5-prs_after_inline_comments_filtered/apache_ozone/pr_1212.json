{"pr_number": 1212, "pr_title": "HDDS-3979. Make bufferSize configurable for stream copy", "pr_createdAt": "2020-07-17T16:25:08Z", "pr_url": "https://github.com/apache/ozone/pull/1212", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2NTU1NQ==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458665555", "bodyText": "add unit test for skip.", "author": "runzhiwang", "createdAt": "2020-07-22T09:36:42Z", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyInputStream.java", "diffHunk": "@@ -325,62 +323,14 @@ public long getRemainingOfIndex(int index) throws IOException {\n     return blockStreams.get(index).getRemaining();\n   }\n \n-  /**\n-   * Copies some or all bytes from a large (over 2GB) <code>InputStream</code>\n-   * to an <code>OutputStream</code>, optionally skipping input bytes.\n-   * <p>\n-   * Copy the method from IOUtils of commons-io to reimplement skip by seek\n-   * rather than read. The reason why IOUtils of commons-io implement skip\n-   * by read can be found at\n-   * <a href=\"https://issues.apache.org/jira/browse/IO-203\">IO-203</a>.\n-   * </p>\n-   * <p>\n-   * This method uses the provided buffer, so there is no need to use a\n-   * <code>BufferedInputStream</code>.\n-   * </p>\n-   *\n-   * @param output the <code>OutputStream</code> to write to\n-   * @param inputOffset : number of bytes to skip from input before copying\n-   * -ve values are ignored\n-   * @param length : number of bytes to copy. -ve means all\n-   * @param buffer the buffer to use for the copy\n-   * @return the number of bytes copied\n-   * @throws NullPointerException if the input or output is null\n-   * @throws IOException          if an I/O error occurs\n-   */\n-  public long copyLarge(final OutputStream output,\n-      final long inputOffset, final long len, final byte[] buffer)\n-      throws IOException {\n-    if (inputOffset > 0) {\n-      seek(inputOffset);\n-    }\n-\n-    if (len == 0) {\n+  @Override\n+  public long skip(long n) throws IOException {", "originalCommit": "49ca2904f75d6e067a691e46e2888a001f54ffeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MjE3Mg==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458762172", "bodyText": "Ok, done.", "author": "maobaolong", "createdAt": "2020-07-22T12:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2NTU1NQ=="}], "type": "inlineReview"}, {"oid": "6449f6656f593e83621ddc5874696c15be4eee00", "url": "https://github.com/apache/ozone/commit/6449f6656f593e83621ddc5874696c15be4eee00", "message": "HDDS-3979. Clarify the ObjectEndpoint code of s3g.", "committedDate": "2020-07-22T11:32:08Z", "type": "commit"}, {"oid": "6449f6656f593e83621ddc5874696c15be4eee00", "url": "https://github.com/apache/ozone/commit/6449f6656f593e83621ddc5874696c15be4eee00", "message": "HDDS-3979. Clarify the ObjectEndpoint code of s3g.", "committedDate": "2020-07-22T11:32:08Z", "type": "forcePushed"}, {"oid": "635a8741311a5d839988f7ffe57ea32cd4fcc464", "url": "https://github.com/apache/ozone/commit/635a8741311a5d839988f7ffe57ea32cd4fcc464", "message": "Add ut for skip", "committedDate": "2020-07-22T12:25:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1Njk0NA==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458756944", "bodyText": "why { ?", "author": "runzhiwang", "createdAt": "2020-07-22T12:33:19Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestKeyInputStream.java", "diffHunk": "@@ -395,4 +334,64 @@ public void testReadChunk() throws Exception {\n     }\n     keyInputStream.close();\n   }\n+\n+  @Test\n+  public void testSkip() throws Exception {\n+    {", "originalCommit": "635a8741311a5d839988f7ffe57ea32cd4fcc464", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MjU0MQ==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458762541", "bodyText": "Sorry, my bad, already fixed it.", "author": "maobaolong", "createdAt": "2020-07-22T12:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1Njk0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1NzIyMw==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458757223", "bodyText": "4 space ?", "author": "runzhiwang", "createdAt": "2020-07-22T12:33:46Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestKeyInputStream.java", "diffHunk": "@@ -395,4 +334,64 @@ public void testReadChunk() throws Exception {\n     }\n     keyInputStream.close();\n   }\n+\n+  @Test\n+  public void testSkip() throws Exception {\n+    {\n+      XceiverClientManager.resetXceiverClientMetrics();", "originalCommit": "635a8741311a5d839988f7ffe57ea32cd4fcc464", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MjYxMA==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r458762610", "bodyText": "Sorry, my bad, already fixed it.", "author": "maobaolong", "createdAt": "2020-07-22T12:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1NzIyMw=="}], "type": "inlineReview"}, {"oid": "ae006e920aab139c0454d4dea513166efc01627d", "url": "https://github.com/apache/ozone/commit/ae006e920aab139c0454d4dea513166efc01627d", "message": "Address review comments.", "committedDate": "2020-07-22T12:39:26Z", "type": "commit"}, {"oid": "9edbae595866265c25fca2419a44cbf982be2e1f", "url": "https://github.com/apache/ozone/commit/9edbae595866265c25fca2419a44cbf982be2e1f", "message": "trigger new ci check", "committedDate": "2020-07-22T13:23:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU0NA==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r462306544", "bodyText": "Two things:\n\nozone.client.buffer.size seems to be confusing. This configuration for the Ozone client of the s3g. As we have a global list of configuration keys, I guess we need a s3g prefix here. (For example ozone.s3g.client.buffer.size)\nUsually, I prefer to use annotation based configuration, if possible. (It can be harder here as S3g uses CDI injections. If it's too complex, you can ignore...)", "author": "elek", "createdAt": "2020-07-29T13:40:46Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConfigKeys.java", "diffHunk": "@@ -465,6 +465,12 @@\n   public static final String  OZONE_CLIENT_HTTPS_NEED_AUTH_KEY =\n       \"ozone.https.client.need-auth\";\n   public static final boolean OZONE_CLIENT_HTTPS_NEED_AUTH_DEFAULT = false;\n+", "originalCommit": "9edbae595866265c25fca2419a44cbf982be2e1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMDgzNA==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r463120834", "bodyText": "Thank you for give me this task,  i have create a ticket for it, and take it, https://issues.apache.org/jira/browse/HDDS-4049\nFor this PR, lets just correct the key name.", "author": "maobaolong", "createdAt": "2020-07-30T16:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNzYzOQ==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r462307639", "bodyText": "NIT: It can be slightly better to use\n  @Inject\n  private OzoneConfiguration ozoneConfiguration;\n\nAnd you don't need to expose getClient() in the EndpointBase.\n(Didn't try, but it should work, IMHO).", "author": "elek", "createdAt": "2020-07-29T13:42:18Z", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java", "diffHunk": "@@ -114,6 +120,13 @@ public ObjectEndpoint() {\n     customizableGetHeaders.add(\"Content-Encoding\");\n   }\n \n+  @PostConstruct\n+  public void init() {", "originalCommit": "9edbae595866265c25fca2419a44cbf982be2e1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExMzkyMw==", "url": "https://github.com/apache/ozone/pull/1212#discussion_r463113923", "bodyText": "Thank you for let me know this high technology", "author": "maobaolong", "createdAt": "2020-07-30T16:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNzYzOQ=="}], "type": "inlineReview"}, {"oid": "ca7c9c04126fc80d9f53903e8bfa7b1388699529", "url": "https://github.com/apache/ozone/commit/ca7c9c04126fc80d9f53903e8bfa7b1388699529", "message": "Address comments. Use Injection to get configuration instance and add s3g prefix to the config key.", "committedDate": "2020-07-30T16:28:46Z", "type": "commit"}, {"oid": "9ec1c7872a6560c8693d30ec2ca9d2ad69ca0689", "url": "https://github.com/apache/ozone/commit/9ec1c7872a6560c8693d30ec2ca9d2ad69ca0689", "message": "fix test failed", "committedDate": "2020-07-31T00:59:26Z", "type": "commit"}]}