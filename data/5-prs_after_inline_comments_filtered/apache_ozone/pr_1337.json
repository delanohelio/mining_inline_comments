{"pr_number": 1337, "pr_title": "HDDS-4129. change MAX_QUOTA_IN_BYTES to Long.MAX_VALUE.", "pr_createdAt": "2020-08-19T08:25:58Z", "pr_url": "https://github.com/apache/ozone/pull/1337", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzY5NA==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r475697694", "bodyText": "What about volumes created before this change with the previous max. value?  Will those be treated by new version as if quota had been enabled for them?", "author": "adoroszlai", "createdAt": "2020-08-24T15:24:53Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -200,9 +200,9 @@ public static Versioning getVersioning(boolean versioning) {\n \n \n   /**\n-   * Max OM Quota size of 1024 PB.\n+   * Max OM Quota size of Long.MAX_VALUE.\n    */\n-  public static final long MAX_QUOTA_IN_BYTES = 1024L * 1024 * TB;\n+  public static final long MAX_QUOTA_IN_BYTES = Long.MAX_VALUE;", "originalCommit": "16772eee391abb6c4d12ae8e07864e26f2a88127", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1MzE1Ng==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r476253156", "bodyText": "Thanks for  @adoroszlai 's discussion. Yes, the previous volume will enable quota. So I created JIRA HDDS-4106, which supports user Clearing spaceQuota.", "author": "captainzmc", "createdAt": "2020-08-25T08:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAxNDkzOQ==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r477014939", "bodyText": "Suggest add new logic during OM startup to reset existing Volume max quota value to mitigate the compatibility issue.", "author": "ChenSammi", "createdAt": "2020-08-26T03:43:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEyMTE4NQ==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r477121185", "bodyText": "I double checked HDFS implementation\uff0cit doesn't use LONG.MAX_VALUE to verify whether quota is enabled or not. It use \"-1\" which is more reasonable for a set/unset check.", "author": "ChenSammi", "createdAt": "2020-08-26T08:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA0MjQ4Mw==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r478042483", "bodyText": "Thanks sammi for the discussion. It is indeed uncommon to use the maximum value to determine whether to enable quota, and it is more common to use -1 to determine. Later I will confirm whether to enable quota with -1 in HDDS-3727. The MAX_QUOTA_IN_BYTES here will be used to determine if the parameter values for setquota and updatequota are reasonable in HDDS-3725.", "author": "captainzmc", "createdAt": "2020-08-27T03:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzY5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MDA0Nw==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483480047", "bodyText": "Can we add a UT for this function?", "author": "ChenSammi", "createdAt": "2020-09-04T08:48:32Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3540,6 +3546,43 @@ public boolean getEnableFileSystemPaths() {\n         OZONE_OM_ENABLE_FILESYSTEM_PATHS_DEFAULT);\n   }\n \n+  /**\n+   * Initialize volume's quota, which resolves the problem that the old quota\n+   * initial value was not set correctly. This method will be removed in a\n+   * later version.\n+   * @throws IOException\n+   */\n+  private void initializeOldVolumeQuota() throws IOException {", "originalCommit": "3f1fd51531e3f2836bcc7c916d8b1a0c0e72d8fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MzQyMA==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483493420", "bodyText": "Yes, the corresponding UT has been added.", "author": "captainzmc", "createdAt": "2020-09-04T09:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MDA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MDUzMQ==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483480531", "bodyText": "Why  omVolumeArgs.getQuotaInBytes() == OzoneConsts.MAX_QUOTA_IN_BYTES check is required here?", "author": "ChenSammi", "createdAt": "2020-09-04T08:49:23Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3540,6 +3546,43 @@ public boolean getEnableFileSystemPaths() {\n         OZONE_OM_ENABLE_FILESYSTEM_PATHS_DEFAULT);\n   }\n \n+  /**\n+   * Initialize volume's quota, which resolves the problem that the old quota\n+   * initial value was not set correctly. This method will be removed in a\n+   * later version.\n+   * @throws IOException\n+   */\n+  private void initializeOldVolumeQuota() throws IOException {\n+\n+    TableIterator<String, ? extends Table.KeyValue<String,\n+         OmVolumeArgs>> iterator = metadataManager.getVolumeTable().iterator();\n+    while(iterator.hasNext()) {\n+      OmVolumeArgs omVolumeArgs = iterator.next().getValue();\n+      String omVolumeKey = metadataManager.getVolumeKey(\n+          omVolumeArgs.getVolume());\n+      // Previously, the volume quota was created to default to 1EB. To change\n+      // to -1, default does not enable quota.\n+      if (omVolumeArgs.getQuotaInBytes() == 1024 * 1024 * TB ||\n+          omVolumeArgs.getQuotaInBytes() == OzoneConsts.MAX_QUOTA_IN_BYTES) {", "originalCommit": "3f1fd51531e3f2836bcc7c916d8b1a0c0e72d8fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMTA3Mw==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483501073", "bodyText": "This judgment is redundant, will delete it.", "author": "captainzmc", "createdAt": "2020-09-04T09:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MDUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MDc5NA==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483480794", "bodyText": "duplicate \",\"", "author": "ChenSammi", "createdAt": "2020-09-04T08:49:52Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3540,6 +3546,43 @@ public boolean getEnableFileSystemPaths() {\n         OZONE_OM_ENABLE_FILESYSTEM_PATHS_DEFAULT);\n   }\n \n+  /**\n+   * Initialize volume's quota, which resolves the problem that the old quota\n+   * initial value was not set correctly. This method will be removed in a\n+   * later version.\n+   * @throws IOException\n+   */\n+  private void initializeOldVolumeQuota() throws IOException {\n+\n+    TableIterator<String, ? extends Table.KeyValue<String,\n+         OmVolumeArgs>> iterator = metadataManager.getVolumeTable().iterator();\n+    while(iterator.hasNext()) {\n+      OmVolumeArgs omVolumeArgs = iterator.next().getValue();\n+      String omVolumeKey = metadataManager.getVolumeKey(\n+          omVolumeArgs.getVolume());\n+      // Previously, the volume quota was created to default to 1EB. To change\n+      // to -1, default does not enable quota.\n+      if (omVolumeArgs.getQuotaInBytes() == 1024 * 1024 * TB ||\n+          omVolumeArgs.getQuotaInBytes() == OzoneConsts.MAX_QUOTA_IN_BYTES) {\n+        omVolumeArgs.setQuotaInBytes(-1);\n+        // Commit to DB.\n+        BatchOperation batchOperation =\n+            metadataManager.getStore().initBatchOperation();\n+        metadataManager.getVolumeTable().putWithBatch(batchOperation,\n+            omVolumeKey, omVolumeArgs);\n+        metadataManager.getStore().commitBatchOperation(batchOperation);\n+\n+        // Add to cache.\n+        long transactionID = (Long.MAX_VALUE - 1) >> 8;\n+        metadataManager.getVolumeTable().addCacheEntry(\n+            new CacheKey<>(omVolumeKey),\n+            new CacheValue<>(Optional.of(omVolumeArgs), transactionID));\n+        LOG.info(\"Update Volume {}'s quota to -1, , default does not enable\" +", "originalCommit": "3f1fd51531e3f2836bcc7c916d8b1a0c0e72d8fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MjA5Mw==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483482093", "bodyText": "There is one risk here,  if user set the quota to 1EB specifically,  we cann't reset it to -1 on next OM restart.", "author": "ChenSammi", "createdAt": "2020-09-04T08:52:17Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3540,6 +3546,43 @@ public boolean getEnableFileSystemPaths() {\n         OZONE_OM_ENABLE_FILESYSTEM_PATHS_DEFAULT);\n   }\n \n+  /**\n+   * Initialize volume's quota, which resolves the problem that the old quota\n+   * initial value was not set correctly. This method will be removed in a\n+   * later version.\n+   * @throws IOException\n+   */\n+  private void initializeOldVolumeQuota() throws IOException {\n+\n+    TableIterator<String, ? extends Table.KeyValue<String,\n+         OmVolumeArgs>> iterator = metadataManager.getVolumeTable().iterator();\n+    while(iterator.hasNext()) {\n+      OmVolumeArgs omVolumeArgs = iterator.next().getValue();\n+      String omVolumeKey = metadataManager.getVolumeKey(\n+          omVolumeArgs.getVolume());\n+      // Previously, the volume quota was created to default to 1EB. To change\n+      // to -1, default does not enable quota.\n+      if (omVolumeArgs.getQuotaInBytes() == 1024 * 1024 * TB ||", "originalCommit": "3f1fd51531e3f2836bcc7c916d8b1a0c0e72d8fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxMDM3Mg==", "url": "https://github.com/apache/ozone/pull/1337#discussion_r483510372", "bodyText": "Currently, the way to determine the old quota is by seeing whether his quota is 1 EB. So 1EB is still a special value. At present, OZone's cluster size is not large, far from the upper limit of 1EB.\nSo can we ignore this case? In addition, I adjust the LOG level from INFO to Warn (I can change it to ERROR if needed) to alert the user that the corresponding quota has been changed.", "author": "captainzmc", "createdAt": "2020-09-04T09:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4MjA5Mw=="}], "type": "inlineReview"}, {"oid": "7e8f4f611d00a1bc68bb571403935c2afc1110b7", "url": "https://github.com/apache/ozone/commit/7e8f4f611d00a1bc68bb571403935c2afc1110b7", "message": "change max quota in bytes to long max value.", "committedDate": "2020-09-04T09:12:25Z", "type": "commit"}, {"oid": "daae0e22682f0a6deaaeead0a994a9890ccb6f1f", "url": "https://github.com/apache/ozone/commit/daae0e22682f0a6deaaeead0a994a9890ccb6f1f", "message": "initialize old volume quota.", "committedDate": "2020-09-04T09:12:25Z", "type": "commit"}, {"oid": "c955f26489ad502d4f8c364c71ae26f3f604e1cb", "url": "https://github.com/apache/ozone/commit/c955f26489ad502d4f8c364c71ae26f3f604e1cb", "message": "fix review issues.", "committedDate": "2020-09-04T09:24:06Z", "type": "commit"}, {"oid": "c955f26489ad502d4f8c364c71ae26f3f604e1cb", "url": "https://github.com/apache/ozone/commit/c955f26489ad502d4f8c364c71ae26f3f604e1cb", "message": "fix review issues.", "committedDate": "2020-09-04T09:24:06Z", "type": "forcePushed"}, {"oid": "a64e251283f87e724da389c4cbdd4792eac3511e", "url": "https://github.com/apache/ozone/commit/a64e251283f87e724da389c4cbdd4792eac3511e", "message": "Revert \"fix review issues.\"\n\nThis reverts commit c955f26489ad502d4f8c364c71ae26f3f604e1cb.", "committedDate": "2020-09-10T09:33:56Z", "type": "commit"}, {"oid": "161375883f0936821b825e2453ae767b9933b0f7", "url": "https://github.com/apache/ozone/commit/161375883f0936821b825e2453ae767b9933b0f7", "message": "Revert \"initialize old volume quota.\"\n\nThis reverts commit daae0e22682f0a6deaaeead0a994a9890ccb6f1f.", "committedDate": "2020-09-10T09:34:12Z", "type": "commit"}]}