{"pr_number": 276, "pr_title": "Adding an option to disable activity pollers", "pr_createdAt": "2020-12-15T00:36:11Z", "pr_url": "https://github.com/temporalio/sdk-java/pull/276", "timeline": [{"oid": "08109e26b5844083a7c7d906bfb6b0d37a24b5a2", "url": "https://github.com/temporalio/sdk-java/commit/08109e26b5844083a7c7d906bfb6b0d37a24b5a2", "message": "Adding an option to disable activity pollers", "committedDate": "2020-12-15T00:34:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r542959895", "bodyText": "This is a pretty neat trick. Do we have any business-logic-related thing we can verify here other than there are no threads and the worker is null?", "author": "Sushisource", "createdAt": "2020-12-15T00:49:06Z", "path": "temporal-sdk/src/test/java/io/temporal/worker/ActivityPollerDisabledTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *  Copyright (C) 2020 Temporal Technologies, Inc. All Rights Reserved.\n+ *\n+ *  Copyright 2012-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Modifications copyright (C) 2017 Uber Technologies, Inc.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n+ *  use this file except in compliance with the License. A copy of the License is\n+ *  located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed on\n+ *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package io.temporal.worker;\n+\n+import static java.util.stream.Collectors.groupingBy;\n+import static org.junit.Assert.*;\n+\n+import io.temporal.testing.TestEnvironmentOptions;\n+import io.temporal.testing.TestWorkflowEnvironment;\n+import io.temporal.workflow.WorkflowInterface;\n+import io.temporal.workflow.WorkflowMethod;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import org.junit.Test;\n+\n+public class ActivityPollerDisabledTest {\n+\n+  @WorkflowInterface\n+  public interface Workflow {\n+    @WorkflowMethod\n+    void bar();\n+  }\n+\n+  public static class WorkflowImpl implements Workflow {\n+\n+    @Override\n+    public void bar() {}\n+  }\n+\n+  @Test\n+  public void testActivityPollerDisabled() throws InterruptedException {\n+    String activityPollerThreadNamePrefix = \"Activity Poller task\";\n+    String workflowPollerThreadNamePrefix = \"Workflow Poller task\";\n+    String workflowHostLocalPollerThreadNamePrefix = \"Host Local Workflow \";\n+    int hostLocalThreadCount = 22;\n+    int workflowPollCount = 11;\n+    int activityPollCount = 18;\n+\n+    TestEnvironmentOptions options =\n+        TestEnvironmentOptions.newBuilder()\n+            .setWorkerFactoryOptions(\n+                WorkerFactoryOptions.newBuilder()\n+                    .setWorkflowHostLocalPollThreadCount(hostLocalThreadCount)\n+                    .build())\n+            .build();\n+    TestWorkflowEnvironment env = TestWorkflowEnvironment.newInstance(options);\n+    Worker worker =\n+        env.newWorker(\n+            \"tl1\",\n+            WorkerOptions.newBuilder()\n+                .setWorkflowPollThreadCount(workflowPollCount)\n+                .setActivityPollThreadCount(activityPollCount)\n+                .setActivityPollerDisabled(true)\n+                .build());\n+    // Need to register something for workers to start\n+    worker.registerWorkflowImplementationTypes(WorkflowImpl.class);\n+    env.start();\n+    Thread.sleep(1000);\n+    Map<String, Long> threads =\n+        Thread.getAllStackTraces().keySet().stream()\n+            .map((t) -> t.getName().substring(0, Math.min(20, t.getName().length())))\n+            .collect(groupingBy(Function.identity(), Collectors.counting()));\n+    assertEquals(hostLocalThreadCount, (long) threads.get(workflowHostLocalPollerThreadNamePrefix));\n+    assertEquals(workflowPollCount, (long) threads.get(workflowPollerThreadNamePrefix));\n+    assertFalse(threads.containsKey(activityPollerThreadNamePrefix));", "originalCommit": "08109e26b5844083a7c7d906bfb6b0d37a24b5a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MzI0NQ==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543083245", "bodyText": "It's the last assertion line:\n    assertNull(worker.activityWorker);", "author": "vitarb", "createdAt": "2020-12-15T06:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MjY3OA==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543592678", "bodyText": "Right - I meant is there something besides that we can assert, like something doesn't happen that otherwise would? Perhaps an integ test that verifies the worker doesn't attempt to perform any activities?\nIf you think it's low value don't bother. I was just curious if there's something we could do here besides \"this is null\"", "author": "Sushisource", "createdAt": "2020-12-15T18:41:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NjgwNw==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543766807", "bodyText": "Another option is to schedule a local activity and after it completes schedule a normal activity and let it timeout with ScheduleToStart to show that no activity worker is present.", "author": "mfateev", "createdAt": "2020-12-15T23:38:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwMjczOQ==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543802739", "bodyText": "Added two tests for local and normal activities.", "author": "vitarb", "createdAt": "2020-12-16T01:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNjU5Nw==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543806597", "bodyText": "\ud83c\udf89 Thanks!", "author": "Sushisource", "createdAt": "2020-12-16T01:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1OTg5NQ=="}], "type": "inlineReview"}, {"oid": "5a1fa03d4b40f5a94d9c25606730144b415acb13", "url": "https://github.com/temporalio/sdk-java/commit/5a1fa03d4b40f5a94d9c25606730144b415acb13", "message": "register activity implementation", "committedDate": "2020-12-15T19:08:25Z", "type": "commit"}, {"oid": "2d330e5d8bd23a0c93bd4a223abe794ec92be291", "url": "https://github.com/temporalio/sdk-java/commit/2d330e5d8bd23a0c93bd4a223abe794ec92be291", "message": "remove duplication in workflow and activity definitions", "committedDate": "2020-12-15T19:52:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NDc4Mw==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543764783", "bodyText": "I would change all this check to activityWorker != null which would make it more obvious.", "author": "mfateev", "createdAt": "2020-12-15T23:34:18Z", "path": "temporal-sdk/src/main/java/io/temporal/worker/Worker.java", "diffHunk": "@@ -323,25 +327,38 @@ void start() {\n       return;\n     }\n     workflowWorker.start();\n-    activityWorker.start();\n+    if (!options.isActivityPollerDisabled()) {", "originalCommit": "2d330e5d8bd23a0c93bd4a223abe794ec92be291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3ODAzNA==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543778034", "bodyText": "I wanted to use this option explicitly in order to be able to catch potential bugs more easily in case if activityWorker is null when it shouldn't be.", "author": "vitarb", "createdAt": "2020-12-16T00:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NDc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NTg1MA==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543765850", "bodyText": "To have workflow tasks only don't call worker.registerActivity. The reason to have this option is to support only local activities by this activity worker.\nShould we rename it to something more explicit? More like setLocalActivityWorkerOnly?", "author": "mfateev", "createdAt": "2020-12-15T23:36:49Z", "path": "temporal-sdk/src/main/java/io/temporal/worker/WorkerOptions.java", "diffHunk": "@@ -173,6 +177,17 @@ public Builder setActivityPollThreadCount(int activityPollThreadCount) {\n       return this;\n     }\n \n+    /**\n+     * If set to true disables activity poller on this worker. Can be useful if you want to handle\n+     * workflow tasks only.", "originalCommit": "2d330e5d8bd23a0c93bd4a223abe794ec92be291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3ODc1NA==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543778754", "bodyText": "I don't have strong opinion about naming here as long as default false means normal worker, let me rename to localActivityWorkerOnly if you like it better.", "author": "vitarb", "createdAt": "2020-12-16T00:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NTg1MA=="}], "type": "inlineReview"}, {"oid": "1e34246add4209a8ec7fd108b1ff9245a3568889", "url": "https://github.com/temporalio/sdk-java/commit/1e34246add4209a8ec7fd108b1ff9245a3568889", "message": "Addressed CR feedback:\n- renamed property\n- added couple of tests\n- replaced property checks with null checks", "committedDate": "2020-12-16T01:03:53Z", "type": "commit"}, {"oid": "64825a1bb1d44b7589bb5574aa60f46a37fbe110", "url": "https://github.com/temporalio/sdk-java/commit/64825a1bb1d44b7589bb5574aa60f46a37fbe110", "message": "apply formatting", "committedDate": "2020-12-16T01:07:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwOTUyMg==", "url": "https://github.com/temporalio/sdk-java/pull/276#discussion_r543809522", "bodyText": "Would you add a comment that explains what is the meaning of this flag?", "author": "mfateev", "createdAt": "2020-12-16T01:28:25Z", "path": "temporal-sdk/src/main/java/io/temporal/worker/WorkerOptions.java", "diffHunk": "@@ -183,8 +183,8 @@ public Builder setActivityPollThreadCount(int activityPollThreadCount) {\n      *\n      * <p>Default is false.\n      */\n-    public Builder setActivityPollerDisabled(boolean activityPollerDisabled) {\n-      this.activityPollerDisabled = activityPollerDisabled;\n+    public Builder setLocalActivityWorkerOnly(boolean localActivityWorkerOnly) {", "originalCommit": "64825a1bb1d44b7589bb5574aa60f46a37fbe110", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "449b2c45338e04fb3bf887ea85cca52b6b48e319", "url": "https://github.com/temporalio/sdk-java/commit/449b2c45338e04fb3bf887ea85cca52b6b48e319", "message": "change comment", "committedDate": "2020-12-16T01:39:24Z", "type": "commit"}]}