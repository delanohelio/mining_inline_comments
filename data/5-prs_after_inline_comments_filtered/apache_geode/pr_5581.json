{"pr_number": 5581, "pr_title": "GEODE-8559: Compute interest routing info after transaction committed.", "pr_createdAt": "2020-09-30T23:38:17Z", "pr_url": "https://github.com/apache/geode/pull/5581", "timeline": [{"oid": "c80eaa33c5376ee43c6fff5de2987c4162774b37", "url": "https://github.com/apache/geode/commit/c80eaa33c5376ee43c6fff5de2987c4162774b37", "message": "GEODE-8559: Compute interest routing info after transaction committed.\n\n  * Compute interest routing info after transactional event has been\n    applied to cache. This will make sure an interested client will\n    either get the event through region snapshot taken or through\n    HARegionQueue.\n  * Add test coverage for CQ with transactional destroy event to make\n    sure CQ routing is computed correctly.\n  * Remove sleep in exiting test code.", "committedDate": "2020-09-30T23:27:55Z", "type": "commit"}, {"oid": "93a34ee028b657e72b486473b851051b1a4a83d6", "url": "https://github.com/apache/geode/commit/93a34ee028b657e72b486473b851051b1a4a83d6", "message": "fix a test mocking issue.", "committedDate": "2020-10-01T01:26:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxNTIzNA==", "url": "https://github.com/apache/geode/pull/5581#discussion_r498515234", "bodyText": "This can be simplified to return localFilterInfo == null;", "author": "DonalEvans", "createdAt": "2020-10-01T21:11:04Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/FilterProfile.java", "diffHunk": "@@ -1126,27 +1126,75 @@ public FilterRoutingInfo getFilterRoutingInfoPart1(CacheEvent event, Profile[] p\n    */\n   public FilterRoutingInfo getFilterRoutingInfoPart2(FilterRoutingInfo part1Info,\n       CacheEvent event) {\n+    return getFilterRoutingInfoPart2(part1Info, event, false);\n+  }\n+\n+  public FilterRoutingInfo getFilterRoutingInfoPart2(FilterRoutingInfo part1Info,\n+      CacheEvent event, boolean computeInterestRoutingInfo) {\n     FilterRoutingInfo result = part1Info;\n     if (localProfile.hasCacheServer) {\n       // bug #45520 - CQ events arriving out of order causes result set\n       // inconsistency, so don't compute routings for events in conflict\n       boolean isInConflict =\n           event.getOperation().isEntry() && ((EntryEventImpl) event).isConcurrencyConflict();\n       CqService cqService = getCqService(event.getRegion());\n-      if (!isInConflict && cqService.isRunning()\n-          && this.region != null /*\n-                                  * && !( this.region.isUsedForPartitionedRegionBucket() || //\n-                                  * partitioned region CQ this.region instanceof PartitionedRegion)\n-                                  */) { // processing is done in part 1\n+      if (!isInConflict && cqService.isRunning() && region != null) {\n         if (result == null) {\n           result = new FilterRoutingInfo();\n         }\n         if (logger.isDebugEnabled()) {\n           logger.debug(\"getting local cq matches for {}\", event);\n         }\n-        fillInCQRoutingInfo(event, true, NO_PROFILES, result);\n+        setLocalCQRoutingInfo(event, result);\n       }\n+      result = setLocalInterestRoutingInfo(event, result, computeInterestRoutingInfo);\n+    }\n+    return result;\n+  }\n+\n+  void setLocalCQRoutingInfo(CacheEvent event, FilterRoutingInfo result) {\n+    if (isCQRoutingNeeded(event)) {\n+      fillInCQRoutingInfo(event, true, NO_PROFILES, result);\n+    } else {\n+      result.setLocalFilterInfo(getLocalFilterInfo(event));\n+    }\n+  }\n+\n+  boolean isCQRoutingNeeded(CacheEvent event) {\n+    if (!isTransactionalEvent(event)) {\n+      return true;\n+    }\n+    FilterInfo localFilterInfo = getLocalFilterInfo(event);\n+    if (localFilterInfo != null) {\n+      return false;\n+    }\n+    return true;", "originalCommit": "93a34ee028b657e72b486473b851051b1a4a83d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "87e6c22649ebc946ccd3d19a84a51849e98bb6d0", "url": "https://github.com/apache/geode/commit/87e6c22649ebc946ccd3d19a84a51849e98bb6d0", "message": "fix a review comment.", "committedDate": "2020-10-02T16:04:59Z", "type": "commit"}]}