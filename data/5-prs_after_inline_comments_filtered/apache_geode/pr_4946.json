{"pr_number": 4946, "pr_title": "GEODE-7870: Fix PubSubIntegrationTest flakiness", "pr_createdAt": "2020-04-11T14:24:38Z", "pr_url": "https://github.com/apache/geode/pull/4946", "timeline": [{"oid": "92168a18181696792ee713e38a81826374a04948", "url": "https://github.com/apache/geode/commit/92168a18181696792ee713e38a81826374a04948", "message": "GEODE-7870: Fix PubSubIntegrationTest\n\nThe complete fix also builds on the following prior fixes\n\n- GEODE-7943 add synchronization to Subscriptions class\n- GEODE-7946: Fix redis publish/subscribe leaking netty buffers", "committedDate": "2020-04-10T16:23:15Z", "type": "commit"}, {"oid": "043092eb14740026246a3244414a7adc6a5dcdc5", "url": "https://github.com/apache/geode/commit/043092eb14740026246a3244414a7adc6a5dcdc5", "message": "Fix spotless", "committedDate": "2020-04-13T16:16:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2ODk4OA==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407568988", "bodyText": "instead of size() != 0 !isEmpty() is a bit better", "author": "dschneider-pivotal", "createdAt": "2020-04-13T16:24:55Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/PubSubIntegrationTest.java", "diffHunk": "@@ -253,11 +251,14 @@ public void testPatternSubscribe() {\n \n     waitFor(() -> mockSubscriber.getSubscribedChannels() == 1);\n \n-    Long result = publisher.publish(\"salutations\", \"hello\");\n+    String message = \"hello-\" + System.currentTimeMillis();\n+\n+    Long result = publisher.publish(\"salutations\", message);\n     assertThat(result).isEqualTo(1);\n \n     assertThat(mockSubscriber.getReceivedMessages()).isEmpty();\n-    assertThat(mockSubscriber.getReceivedPMessages()).containsExactly(\"hello\");\n+    GeodeAwaitility.await().until(() -> mockSubscriber.getReceivedPMessages().size() != 0);", "originalCommit": "043092eb14740026246a3244414a7adc6a5dcdc5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2OTc1OA==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407569758", "bodyText": "It seems like this old assert that we have no receivedMessages should be AFTER the new await that we did receive a PMessage. I could be wrong about this but it seems like you should have the test wait for the event and then do the asserts", "author": "dschneider-pivotal", "createdAt": "2020-04-13T16:26:23Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/PubSubIntegrationTest.java", "diffHunk": "@@ -253,11 +251,14 @@ public void testPatternSubscribe() {\n \n     waitFor(() -> mockSubscriber.getSubscribedChannels() == 1);\n \n-    Long result = publisher.publish(\"salutations\", \"hello\");\n+    String message = \"hello-\" + System.currentTimeMillis();\n+\n+    Long result = publisher.publish(\"salutations\", message);\n     assertThat(result).isEqualTo(1);\n \n     assertThat(mockSubscriber.getReceivedMessages()).isEmpty();", "originalCommit": "043092eb14740026246a3244414a7adc6a5dcdc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNDA1Ng==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407724056", "bodyText": "There are actually 2 categories of received messages - one is as a result of a 'regular' subscription and one is as a result of a pattern subscription. They are both sent and processed separately. So it doesn't matter in which order these asserts are done in. In this case I just want to make sure I received 1 'pmessage' and did not receive any other messages.", "author": "jdeppe-pivotal", "createdAt": "2020-04-13T21:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2OTc1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc0NzYyMA==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407747620", "bodyText": "But if you made sure AFTER you had received the message you are expecting, you would give the test more of a chance to catch that it also received the unexpected message. I don't think you should wait for something you never expect to happen; that would cause all tests to take too long to run. I'm okay if you leave the test as is", "author": "dschneider-pivotal", "createdAt": "2020-04-13T22:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2OTc1OA=="}], "type": "inlineReview"}, {"oid": "bf2f2b1cb36e1225b6154d408a9415cf4333bd06", "url": "https://github.com/apache/geode/commit/bf2f2b1cb36e1225b6154d408a9415cf4333bd06", "message": "Review update", "committedDate": "2020-04-13T22:33:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2NDYzOQ==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407764639", "bodyText": "Doesn't this need to be !isEmpty()?", "author": "dschneider-pivotal", "createdAt": "2020-04-13T22:50:51Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/PubSubIntegrationTest.java", "diffHunk": "@@ -253,11 +251,14 @@ public void testPatternSubscribe() {\n \n     waitFor(() -> mockSubscriber.getSubscribedChannels() == 1);\n \n-    Long result = publisher.publish(\"salutations\", \"hello\");\n+    String message = \"hello-\" + System.currentTimeMillis();\n+\n+    Long result = publisher.publish(\"salutations\", message);\n     assertThat(result).isEqualTo(1);\n \n     assertThat(mockSubscriber.getReceivedMessages()).isEmpty();\n-    assertThat(mockSubscriber.getReceivedPMessages()).containsExactly(\"hello\");\n+    GeodeAwaitility.await().until(() -> mockSubscriber.getReceivedPMessages().isEmpty());", "originalCommit": "bf2f2b1cb36e1225b6154d408a9415cf4333bd06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1MTU0Nw==", "url": "https://github.com/apache/geode/pull/4946#discussion_r407851547", "bodyText": "Doh! Thanks.", "author": "jdeppe-pivotal", "createdAt": "2020-04-14T03:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2NDYzOQ=="}], "type": "inlineReview"}, {"oid": "37b2cead92b8abb15485383249ebb843a2d3a719", "url": "https://github.com/apache/geode/commit/37b2cead92b8abb15485383249ebb843a2d3a719", "message": "Fixed failing test", "committedDate": "2020-04-14T03:54:58Z", "type": "commit"}]}