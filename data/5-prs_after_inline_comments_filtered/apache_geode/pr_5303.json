{"pr_number": 5303, "pr_title": "GEODE-8176: Fix for flaky testPingWrongServer", "pr_createdAt": "2020-06-25T11:40:50Z", "pr_url": "https://github.com/apache/geode/pull/5303", "timeline": [{"oid": "cc54896cc7cb014cb9e814eee6702952b08956a3", "url": "https://github.com/apache/geode/commit/cc54896cc7cb014cb9e814eee6702952b08956a3", "message": "GEODE-8176: Fix for flaky testPingWrongServer", "committedDate": "2020-06-25T11:33:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445500467", "bodyText": "Please use the default timeout (5 minutes) set by GeodeAwaitility instead: await().untilAsserted() (without the timeout).", "author": "jujoramos", "createdAt": "2020-06-25T11:51:05Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -129,7 +130,9 @@ public void testPingWrongServer() {\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").timeout(Duration.ofMinutes(1))", "originalCommit": "cc54896cc7cb014cb9e814eee6702952b08956a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMjY2Nw==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445502667", "bodyText": "I thought 5 minutes were too much for this case but if its ok for you, then I can change it, no problem.", "author": "alb3rtobr", "createdAt": "2020-06-25T11:55:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwNDkyMg==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445504922", "bodyText": "I agree in that 5 minutes might be \"too much\" for this test, but it's the current standard and there are only a handful of tests (8 I think) that overrides it, so I think is better to keep using the defaults for everything new.\nAs a side note, the poll occurs every 100 milliseconds anyway, so the condition should be met way sooner than 5 minutes.", "author": "jujoramos", "createdAt": "2020-06-25T11:59:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDk0Mg==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445500942", "bodyText": "The current preferred approach is to always use org.assertj.core.api.Assertions instead of org.junit.Assert, can you change it?.", "author": "jujoramos", "createdAt": "2020-06-25T11:52:04Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -20,6 +20,8 @@\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.Assert.assertEquals;", "originalCommit": "cc54896cc7cb014cb9e814eee6702952b08956a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56c774f1be706d683f6f028ebe1519154602b462", "url": "https://github.com/apache/geode/commit/56c774f1be706d683f6f028ebe1519154602b462", "message": "GEODE-8176: Change timeout and asserts", "committedDate": "2020-06-25T12:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY1Mw==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445531653", "bodyText": "This logging message can be removed.", "author": "jujoramos", "createdAt": "2020-06-25T12:49:43Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);", "originalCommit": "56c774f1be706d683f6f028ebe1519154602b462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDE5Mg==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445550192", "bodyText": "done!", "author": "alb3rtobr", "createdAt": "2020-06-25T13:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTkzNw==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445531937", "bodyText": "This logging message can be removed.", "author": "jujoramos", "createdAt": "2020-06-25T12:50:12Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);\n     server2.invoke(() -> {\n       assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().contains(proxyID))\n           .isFalse();\n-      assertEquals(0, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+          .isEqualTo(0);\n     });\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").untilAsserted(() -> assertThat(\n+          ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+              .isEqualTo(1));\n       ClientProxyMembershipID proxyIDFound =\n           ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().iterator().next();\n       logger.info(\"ProxyID found in clientHealthMonitor: \" + proxyIDFound);", "originalCommit": "56c774f1be706d683f6f028ebe1519154602b462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDI1NA==", "url": "https://github.com/apache/geode/pull/5303#discussion_r445550254", "bodyText": "done!", "author": "alb3rtobr", "createdAt": "2020-06-25T13:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTkzNw=="}], "type": "inlineReview"}, {"oid": "44d594d512a55f64e900820f187b64f1ca7e58a2", "url": "https://github.com/apache/geode/commit/44d594d512a55f64e900820f187b64f1ca7e58a2", "message": "GEODE-8176: Remove unnecessary logs", "committedDate": "2020-06-25T13:16:13Z", "type": "commit"}]}