{"pr_number": 5843, "pr_title": "Feature/geode 8768", "pr_createdAt": "2020-12-12T08:06:48Z", "pr_url": "https://github.com/apache/geode/pull/5843", "timeline": [{"oid": "c0cebd490b7449c590e76bb031456fc3a86d49d9", "url": "https://github.com/apache/geode/commit/c0cebd490b7449c590e76bb031456fc3a86d49d9", "message": "GEODE-8768: update failing test", "committedDate": "2020-12-12T16:58:51Z", "type": "forcePushed"}, {"oid": "70de9515c0afca16b790337a6b8fdb8835fd8c1e", "url": "https://github.com/apache/geode/commit/70de9515c0afca16b790337a6b8fdb8835fd8c1e", "message": "GEODE-8768: update failing test", "committedDate": "2020-12-12T20:50:04Z", "type": "forcePushed"}, {"oid": "e84d645a441a2b184ea4aeeca86d6e3441991d4a", "url": "https://github.com/apache/geode/commit/e84d645a441a2b184ea4aeeca86d6e3441991d4a", "message": "GEODE-8768: extend DistributionLocatorId", "committedDate": "2021-01-26T21:11:46Z", "type": "commit"}, {"oid": "06535bbbacc1e0a3dcc984bb356298544b00e6d8", "url": "https://github.com/apache/geode/commit/06535bbbacc1e0a3dcc984bb356298544b00e6d8", "message": "GEODE-8768: update solution", "committedDate": "2021-01-26T21:11:46Z", "type": "commit"}, {"oid": "6e200290dea0df0ec524ed4dfee2f5133b47c326", "url": "https://github.com/apache/geode/commit/6e200290dea0df0ec524ed4dfee2f5133b47c326", "message": "GEODE-8768: update failing test", "committedDate": "2021-01-26T21:11:46Z", "type": "commit"}, {"oid": "1b2f2be9d634932c7438c379805547a8d6e04ea6", "url": "https://github.com/apache/geode/commit/1b2f2be9d634932c7438c379805547a8d6e04ea6", "message": "GEODE-8768: added test to simulate problem", "committedDate": "2021-01-26T21:11:46Z", "type": "commit"}, {"oid": "70b04cb7d19d506df85e258d9a597c7470437cc1", "url": "https://github.com/apache/geode/commit/70b04cb7d19d506df85e258d9a597c7470437cc1", "message": "GEODE-8768: update comments", "committedDate": "2021-01-26T21:11:46Z", "type": "commit"}, {"oid": "70b04cb7d19d506df85e258d9a597c7470437cc1", "url": "https://github.com/apache/geode/commit/70b04cb7d19d506df85e258d9a597c7470437cc1", "message": "GEODE-8768: update comments", "committedDate": "2021-01-26T21:11:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg1NDM1Ng==", "url": "https://github.com/apache/geode/pull/5843#discussion_r564854356", "bodyText": "You don't need all these when you use ClusterStartupRule. The rule sets those properties for you already so that you can avoid all these boiler code.\nThe rule also allocates the available ports for you so that you don't need to pre-allocate them.\nuse something like:\nlocator = cluster.startLocatorVM(index, l->l.withPropety(....).withConnectionToLocator(port0, port1, port2));", "author": "jinmeiliao", "createdAt": "2021-01-26T21:44:33Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/misc/WanLocatorDiscoveryDUnitTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.internal.cache.wan.misc;\n+\n+import static org.apache.geode.distributed.ConfigurationProperties.DISTRIBUTED_SYSTEM_ID;\n+import static org.apache.geode.distributed.ConfigurationProperties.MCAST_PORT;\n+import static org.apache.geode.distributed.ConfigurationProperties.REMOTE_LOCATORS;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.Set;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.client.internal.locator.wan.LocatorMembershipListener;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.internal.admin.remote.DistributionLocatorId;\n+import org.apache.geode.test.awaitility.GeodeAwaitility;\n+import org.apache.geode.test.dunit.IgnoredException;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+\n+public class WanLocatorDiscoveryDUnitTest {\n+\n+  private static MemberVM locator_ln1;\n+  private static MemberVM locator_ln2;\n+\n+  private static MemberVM locator_ny1;\n+  private static MemberVM locator_ny2;\n+  private int[] ports;\n+\n+  @Rule\n+  public ClusterStartupRule cluster = new ClusterStartupRule();\n+\n+  @Before\n+  public void setupCluster() throws Exception {\n+    IgnoredException.addIgnoredException(\"Connection reset\");\n+    IgnoredException.addIgnoredException(\"Broken pipe\");\n+    IgnoredException.addIgnoredException(\"Connection refused\");\n+    IgnoredException.addIgnoredException(\"could not get remote locator information\");\n+    IgnoredException.addIgnoredException(\"Unexpected IOException\");\n+  }\n+\n+  private void setupWanSites() throws IOException {\n+    ports = AvailablePortHelper.getRandomAvailableTCPPorts(5);\n+    int site1Port =\n+        setupWanSite1();\n+    setupWanSite2(site1Port);\n+  }\n+\n+  private int setupWanSite1() throws IOException {\n+    Properties locator_ln_props = new Properties();\n+    // create a cluster\n+    locator_ln_props.setProperty(MCAST_PORT, \"0\");", "originalCommit": "70b04cb7d19d506df85e258d9a597c7470437cc1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTQ2MjIwMg==", "url": "https://github.com/apache/geode/pull/5843#discussion_r565462202", "bodyText": "you can get rid of withProperty(MCAST_PORT, \"0\"), it's already set by the rule", "author": "jinmeiliao", "createdAt": "2021-01-27T16:42:33Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/misc/WanLocatorDiscoveryDUnitTest.java", "diffHunk": "@@ -65,25 +65,29 @@ private void setupWanSites() throws IOException {\n   }\n \n   private int setupWanSite1() throws IOException {\n-    Properties locator_ln_props = new Properties();\n-    // create a cluster\n-    locator_ln_props.setProperty(MCAST_PORT, \"0\");\n-    locator_ln_props.setProperty(DISTRIBUTED_SYSTEM_ID, \"1\");\n-\n-    locator_ln1 = cluster.startLocatorVM(0, ports[0], locator_ln_props);\n-    locator_ln2 = cluster.startLocatorVM(1, ports[1], locator_ln_props, locator_ln1.getPort());\n-    return locator_ln1.getPort();\n+    locator_ln1 = cluster.startLocatorVM(0, ports[0], VersionManager.CURRENT_VERSION,\n+        i -> i.withProperty(MCAST_PORT, \"0\").withProperty(DISTRIBUTED_SYSTEM_ID, \"1\"));", "originalCommit": "9776324f736c46a8d631af6333eb643dc0a35b2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a69eb1346d2264283f29754c1560935ba0d510ac", "url": "https://github.com/apache/geode/commit/a69eb1346d2264283f29754c1560935ba0d510ac", "message": "GEODE-8768: update test according to comments", "committedDate": "2021-01-27T22:29:38Z", "type": "commit"}, {"oid": "a69eb1346d2264283f29754c1560935ba0d510ac", "url": "https://github.com/apache/geode/commit/a69eb1346d2264283f29754c1560935ba0d510ac", "message": "GEODE-8768: update test according to comments", "committedDate": "2021-01-27T22:29:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODE3NDg2MA==", "url": "https://github.com/apache/geode/pull/5843#discussion_r568174860", "bodyText": "is this \"::\" a typo here?", "author": "gesterzhou", "createdAt": "2021-02-01T22:10:07Z", "path": "geode-core/src/main/java/org/apache/geode/internal/admin/remote/DistributionLocatorId.java", "diffHunk": "@@ -104,6 +122,26 @@ public DistributionLocatorId(InetAddress host, int port, String bindAddress, SSL\n    * two.\n    */\n   public DistributionLocatorId(String marshalled) {\n+    this(marshalled, null);\n+  }\n+\n+  /**\n+   * Constructs a DistributionLocatorId with a String of the form: hostname[port] or\n+   * hostname:bindaddress[port] or hostname@bindaddress[port]\n+   * and membername\n+   * <p>\n+   * The :bindaddress portion is optional. hostname[port] is the more common form.\n+   * <p>\n+   * Example: merry.gemstone.com[7056]<br>\n+   * Example w/ bind address: merry.gemstone.com:81.240.0.1[7056], or\n+   * merry.gemstone.com@fdf0:76cf:a0ed:9449::16[7056]", "originalCommit": "a69eb1346d2264283f29754c1560935ba0d510ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODE3NTgzMQ==", "url": "https://github.com/apache/geode/pull/5843#discussion_r568175831", "bodyText": "it's better to put an example of membername here.", "author": "gesterzhou", "createdAt": "2021-02-01T22:12:06Z", "path": "geode-core/src/main/java/org/apache/geode/internal/admin/remote/DistributionLocatorId.java", "diffHunk": "@@ -104,6 +122,26 @@ public DistributionLocatorId(InetAddress host, int port, String bindAddress, SSL\n    * two.\n    */\n   public DistributionLocatorId(String marshalled) {\n+    this(marshalled, null);\n+  }\n+\n+  /**\n+   * Constructs a DistributionLocatorId with a String of the form: hostname[port] or\n+   * hostname:bindaddress[port] or hostname@bindaddress[port]\n+   * and membername", "originalCommit": "a69eb1346d2264283f29754c1560935ba0d510ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODE3OTgzMw==", "url": "https://github.com/apache/geode/pull/5843#discussion_r568179833", "bodyText": "Should it be:\nif (this.host != null && !this.host.equals(that.host))\n?", "author": "gesterzhou", "createdAt": "2021-02-01T22:19:56Z", "path": "geode-core/src/main/java/org/apache/geode/internal/admin/remote/DistributionLocatorId.java", "diffHunk": "@@ -317,6 +363,43 @@ public boolean equals(Object other) {\n       return false;\n     final DistributionLocatorId that = (DistributionLocatorId) other;\n \n+    if (this.membername != null && that.membername != null) {\n+      if (this.membername.equals(that.membername))\n+        return true;\n+\n+      return false;\n+    }\n+\n+    if (!StringUtils.equals(this.hostnameForClients, that.hostnameForClients))\n+      return false;\n+    if (this.host != that.host && !(this.host != null && this.host.equals(that.host)))", "originalCommit": "a69eb1346d2264283f29754c1560935ba0d510ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI1OTI2Nw==", "url": "https://github.com/apache/geode/pull/5843#discussion_r568259267", "bodyText": "Bruce suggested to use:\nif (!Objects.equals(this.host, that.host) {\nreturn false;\n}", "author": "gesterzhou", "createdAt": "2021-02-02T01:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODE3OTgzMw=="}], "type": "inlineReview"}, {"oid": "db620296efd5fb75850ed1d1eec366bd2dac5c6a", "url": "https://github.com/apache/geode/commit/db620296efd5fb75850ed1d1eec366bd2dac5c6a", "message": "GEODE-8768: update after comments", "committedDate": "2021-02-02T11:16:35Z", "type": "commit"}]}