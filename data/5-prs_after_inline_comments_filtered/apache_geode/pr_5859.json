{"pr_number": 5859, "pr_title": "GEODE-8278: Modified to cause lruEntryUpdate to be called", "pr_createdAt": "2020-12-16T23:20:47Z", "pr_url": "https://github.com/apache/geode/pull/5859", "timeline": [{"oid": "0b8df1158cd916b2217bc800881ae2f49fe74241", "url": "https://github.com/apache/geode/commit/0b8df1158cd916b2217bc800881ae2f49fe74241", "message": "GEODE-8278: Modified to cause lruEntryUpdate to be called", "committedDate": "2020-12-16T23:18:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzMzQyOQ==", "url": "https://github.com/apache/geode/pull/5859#discussion_r545233429", "bodyText": "How about putting the lruEntryUpdate(oldRe) and lruEntryCreate(oldRe)calls inside the else for the case in which the value for the new entry is not a tombstone as follows:\n...      \n                  } else { //newValue != Token.TOMBSTONE\n                    int newSize = owner.calculateRegionEntryValueSize(oldRe);\n                    if (!oldIsTombstone) {\n                      lruEntryUpdate(oldRe);\n                      owner.updateSizeOnPut(key, oldSize, newSize);\n                    } else {\n                      lruEntryCreate(oldRe);\n                      owner.updateSizeOnCreate(key, newSize);\n                    }\n...", "author": "albertogpz", "createdAt": "2020-12-17T16:39:33Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java", "diffHunk": "@@ -838,11 +838,11 @@ public boolean initialImagePut(final Object key, final long lastModified, Object\n                 if (result) {\n                   if (oldIsTombstone) {\n                     owner.unscheduleTombstone(oldRe);\n-                    if (newValue != Token.TOMBSTONE) {", "originalCommit": "0b8df1158cd916b2217bc800881ae2f49fe74241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI5Nzg5Nw==", "url": "https://github.com/apache/geode/pull/5859#discussion_r545297897", "bodyText": "Thanks for taking a look at these changes. I mainly put this PR up to see if it would pass the unit tests. This was the change that I was concerned about. Event though the tests passed, I'm still not sure its a valid change. I have a request to another team to take a look at these changes before I proceed.", "author": "boglesby", "createdAt": "2020-12-17T18:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzMzQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUwMDczOQ==", "url": "https://github.com/apache/geode/pull/5859#discussion_r553500739", "bodyText": "I agree with Alberto. I don't see any reason to do call lruEntryUpdate/lruEntryCreate if the next thing we are going to do is call lruEntryDestroy. But it does seem like this code should make sure to call one of lruEntry(Create/Update/Destroy). So I would change it to be:\n                if (result) {\n                  if (oldIsTombstone) {\n                    owner.unscheduleTombstone(oldRe);\n                  }\n                  if (newValue == Token.TOMBSTONE) {\n                    if (!oldIsDestroyedOrRemoved) {\n                      owner.updateSizeOnRemove(key, oldSize);\n                    }\n                    owner.scheduleTombstone(oldRe, entryVersion);\n                    lruEntryDestroy(oldRe);\n                  } else {\n                    int newSize = owner.calculateRegionEntryValueSize(oldRe);\n                    if (!oldIsTombstone) {\n                      owner.updateSizeOnPut(key, oldSize, newSize);\n                      lruEntryUpdate(oldRe);\n                    } else {\n                      owner.updateSizeOnCreate(key, newSize);\n                      lruEntryCreate(oldRe);\n                    }\n                    EntryLogger.logInitialImagePut(_getOwnerObject(), key, newValue);\n                  }\n                }", "author": "dschneider-pivotal", "createdAt": "2021-01-07T18:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzMzQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUwODE4NQ==", "url": "https://github.com/apache/geode/pull/5859#discussion_r553508185", "bodyText": "Great. Thanks a lot @dschneider-pivotal. I'll make the changes you suggest.", "author": "boglesby", "createdAt": "2021-01-07T18:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzMzQyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzNDM1OQ==", "url": "https://github.com/apache/geode/pull/5859#discussion_r545234359", "bodyText": "I would put this change in a different PR/JIRA as it is about a different bug.", "author": "albertogpz", "createdAt": "2020-12-17T16:40:42Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/LocalRegion.java", "diffHunk": "@@ -10219,6 +10219,7 @@ public void initializeStats(long numEntriesInVM, long numOverflowOnDisk,\n       long numOverflowBytesOnDisk) {\n     getDiskRegion().getStats().incNumEntriesInVM(numEntriesInVM);\n     getDiskRegion().getStats().incNumOverflowOnDisk(numOverflowOnDisk);\n+    getDiskRegion().getStats().incNumOverflowBytesOnDisk(numOverflowBytesOnDisk);", "originalCommit": "0b8df1158cd916b2217bc800881ae2f49fe74241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI5ODQzNg==", "url": "https://github.com/apache/geode/pull/5859#discussion_r545298436", "bodyText": "Thanks for the comment. I'll definitely move this change to the correct JIRA.", "author": "boglesby", "createdAt": "2020-12-17T18:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzNDM1OQ=="}], "type": "inlineReview"}, {"oid": "2d4b1653e70f7edcb1ed1b1125cd52c63d698f1a", "url": "https://github.com/apache/geode/commit/2d4b1653e70f7edcb1ed1b1125cd52c63d698f1a", "message": "GEODE-8278: Modified initialImagePut to invoke callback methods", "committedDate": "2021-01-08T23:35:21Z", "type": "commit"}, {"oid": "7c3e2ab245c057844100e1ae827c78a485b65dbc", "url": "https://github.com/apache/geode/commit/7c3e2ab245c057844100e1ae827c78a485b65dbc", "message": "GEODE-8278: Update spotless", "committedDate": "2021-01-11T17:02:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjEyNTk5OA==", "url": "https://github.com/apache/geode/pull/5859#discussion_r556125998", "bodyText": "One question I have here is, when newValue == Token.TOMBSTONE and oldIsTombstone == true, it used to have lruEntryUpdate(oldRe), which is in the deleted line 844. Now, after the code change, it is not having lruEntryUpdate(oldRe), when newValue == Token.TOMBSTONE and oldIsTombstone == true. Is this expected?", "author": "jchen21", "createdAt": "2021-01-12T22:05:11Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java", "diffHunk": "@@ -838,24 +838,23 @@ public boolean initialImagePut(final Object key, final long lastModified, Object\n                 if (result) {\n                   if (oldIsTombstone) {\n                     owner.unscheduleTombstone(oldRe);\n-                    if (newValue != Token.TOMBSTONE) {\n-                      lruEntryCreate(oldRe);\n-                    } else {\n-                      lruEntryUpdate(oldRe);\n-                    }\n                   }\n                   if (newValue == Token.TOMBSTONE) {\n                     if (!oldIsDestroyedOrRemoved) {\n                       owner.updateSizeOnRemove(key, oldSize);\n                     }\n                     owner.scheduleTombstone(oldRe, entryVersion);\n-                    lruEntryDestroy(oldRe);\n+                    if (!oldIsTombstone) {", "originalCommit": "7c3e2ab245c057844100e1ae827c78a485b65dbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwOTY4Mw==", "url": "https://github.com/apache/geode/pull/5859#discussion_r556709683", "bodyText": "Yes. That was part of the problem. The code used to do this (abbreviated):\nif (oldIsTombstone) {\n  if (newValue != Token.TOMBSTONE) {\n    lruEntryCreate(oldRe);\n  } else {\n    lruEntryUpdate(oldRe);\n  }\n}\nif (newValue == Token.TOMBSTONE) {\n  lruEntryDestroy(oldRe);\n}\n\nSo if oldIsTombstone and newValue == Token.TOMBSTONE, both lruEntryUpdate and lruEntryDestroy were called.\nAnd, lruEntryCreate \\ lruEntryUpdate were not called at all when newValue != Token.TOMBSTONE.", "author": "boglesby", "createdAt": "2021-01-13T17:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjEyNTk5OA=="}], "type": "inlineReview"}]}