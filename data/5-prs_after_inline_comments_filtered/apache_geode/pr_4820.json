{"pr_number": 4820, "pr_title": "GEODE-7826: start jmx-manager if the Geode Management Rest Service is enabled", "pr_createdAt": "2020-03-16T22:21:13Z", "pr_url": "https://github.com/apache/geode/pull/4820", "timeline": [{"oid": "e444532659a02ac5b8e7ce4e842eee826a50bb39", "url": "https://github.com/apache/geode/commit/e444532659a02ac5b8e7ce4e842eee826a50bb39", "message": "Before the geode management rest service web app is added,\nthe code now starts the jmx-manager.", "committedDate": "2020-03-16T22:18:06Z", "type": "commit"}, {"oid": "f84572caa2b3180e180c725407fb0ac0dd1a1350", "url": "https://github.com/apache/geode/commit/f84572caa2b3180e180c725407fb0ac0dd1a1350", "message": "now checks if manager is already running before starting it.\nAlso if an esception occurs trying to start the manager it is now\nthrown instead of eating it and logging a warning.", "committedDate": "2020-03-17T20:18:02Z", "type": "commit"}, {"oid": "e5397281204b5276752bd09b51b536fda07b9420", "url": "https://github.com/apache/geode/commit/e5397281204b5276752bd09b51b536fda07b9420", "message": "fix for failing dunit tests", "committedDate": "2020-03-17T23:04:50Z", "type": "commit"}, {"oid": "9e59d0ab57893a4e64e3a557da68f796e2e012bc", "url": "https://github.com/apache/geode/commit/9e59d0ab57893a4e64e3a557da68f796e2e012bc", "message": "fixed test to not start locators with default jmx-manager port by disabling the management service", "committedDate": "2020-03-18T00:30:58Z", "type": "commit"}, {"oid": "6f4cc9943378e253778b618d92f36ed20387be8b", "url": "https://github.com/apache/geode/commit/6f4cc9943378e253778b618d92f36ed20387be8b", "message": "added unit tests", "committedDate": "2020-03-19T16:32:18Z", "type": "commit"}, {"oid": "78b56f314f63ce2bb58f3866f0a89136b3d092b8", "url": "https://github.com/apache/geode/commit/78b56f314f63ce2bb58f3866f0a89136b3d092b8", "message": "fix failing test", "committedDate": "2020-03-19T18:06:50Z", "type": "commit"}, {"oid": "822015186cc335173d594584ca7861870e8ac549", "url": "https://github.com/apache/geode/commit/822015186cc335173d594584ca7861870e8ac549", "message": "now uses await", "committedDate": "2020-03-19T19:35:24Z", "type": "commit"}, {"oid": "68a07a38af8afafe9b81d9344274c1fee19e9eab", "url": "https://github.com/apache/geode/commit/68a07a38af8afafe9b81d9344274c1fee19e9eab", "message": "disabled tests to help DEBUG the one that keeps failing in pr tests", "committedDate": "2020-03-19T21:34:51Z", "type": "commit"}, {"oid": "8f2233a229ccd5bb8f197055585916bff0bb8d14", "url": "https://github.com/apache/geode/commit/8f2233a229ccd5bb8f197055585916bff0bb8d14", "message": "removed new tests from InternalLocatorIntegrationTest since\nthe geode-web-management war is not available to that test", "committedDate": "2020-03-19T23:21:39Z", "type": "commit"}, {"oid": "4fb0c2192ade0b14c77bca6daa3ceb355ffc895f", "url": "https://github.com/apache/geode/commit/4fb0c2192ade0b14c77bca6daa3ceb355ffc895f", "message": "removed one more DEBUG line", "committedDate": "2020-03-19T23:23:39Z", "type": "commit"}, {"oid": "3213a44aad6764869cad84305796f72f10ac2ebf", "url": "https://github.com/apache/geode/commit/3213a44aad6764869cad84305796f72f10ac2ebf", "message": "added unit test for InternalLocator", "committedDate": "2020-03-20T21:44:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMTI0NQ==", "url": "https://github.com/apache/geode/pull/4820#discussion_r395911245", "bodyText": "I think most of the common setup stuff could be moved into a setup method. Then only the stuff that differs from one test to another would remain. That would make the test-specific details stand out more, and would more clearly express the intent of each test.\nIf only a few setup details remain in each test, and the intent is obvious, that's enough. If there are more than a few details, perhaps they can be hidden in helper methods with that express the intent.", "author": "demery-pivotal", "createdAt": "2020-03-20T22:09:39Z", "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/InternalLocatorTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.distributed.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.RegionShortcut;\n+import org.apache.geode.cache.internal.HttpService;\n+import org.apache.geode.internal.cache.InternalCacheForClientAccess;\n+import org.apache.geode.internal.cache.InternalRegionFactory;\n+import org.apache.geode.internal.security.SecurableCommunicationChannel;\n+import org.apache.geode.logging.internal.LoggingSession;\n+import org.apache.geode.management.internal.BaseManagementService;\n+\n+public class InternalLocatorTest {\n+  @Test\n+  public void startClusterManagementServiceWithRestServiceEnabledInvokesStartManager()\n+      throws IOException {\n+    LoggingSession loggingSession = mock(LoggingSession.class);", "originalCommit": "3213a44aad6764869cad84305796f72f10ac2ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NTUyOQ==", "url": "https://github.com/apache/geode/pull/4820#discussion_r396675529", "bodyText": "I refactored common code into a couple of helper methods. I hope that at some point this unit test will have more coverage for this class so I did not put this code into a common setup method. I think most of this code is specific to testing the \"startClusterManagementService\" method.", "author": "dschneider-pivotal", "createdAt": "2020-03-23T18:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMTI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNjE2Mg==", "url": "https://github.com/apache/geode/pull/4820#discussion_r395916162", "bodyText": "Instead of adding a new test-only method, try this:\n\nAdd a new Supplier<InternalCache> parameter to the InternalLocator constructor, and let the constructor store the supplier in a field for later use.\nChange InternalLocator.getCache() to call the supplier instead of calling GemFireCacheImpl.getInstance() directly.\nChange InternalLocator.createLocator(\u2026) and InternalLocatorIntegrationTest to pass GemFireCacheImpl::getInstance to the InternalLocator constructor.\nIn these new tests, pass the mock cache to the InternalLocator constructor.", "author": "demery-pivotal", "createdAt": "2020-03-20T22:26:32Z", "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/InternalLocatorTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.distributed.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.RegionShortcut;\n+import org.apache.geode.cache.internal.HttpService;\n+import org.apache.geode.internal.cache.InternalCacheForClientAccess;\n+import org.apache.geode.internal.cache.InternalRegionFactory;\n+import org.apache.geode.internal.security.SecurableCommunicationChannel;\n+import org.apache.geode.logging.internal.LoggingSession;\n+import org.apache.geode.management.internal.BaseManagementService;\n+\n+public class InternalLocatorTest {\n+  @Test\n+  public void startClusterManagementServiceWithRestServiceEnabledInvokesStartManager()\n+      throws IOException {\n+    LoggingSession loggingSession = mock(LoggingSession.class);\n+    DistributionConfigImpl distributionConfig = mock(DistributionConfigImpl.class);\n+    when(distributionConfig.getJmxManager()).thenReturn(true);\n+    when(distributionConfig.getLocators()).thenReturn(\"\");\n+    when(distributionConfig.getSecurableCommunicationChannels())\n+        .thenReturn(new SecurableCommunicationChannel[] {});\n+    when(distributionConfig.getSecurityAuthTokenEnabledComponents()).thenReturn(new String[] {});\n+    InternalLocator internalLocator = new InternalLocator(0, loggingSession, null, null, null, null,\n+        null, null, distributionConfig, null);\n+    InternalCacheForClientAccess cache = mock(InternalCacheForClientAccess.class);\n+    InternalRegionFactory regionFactory = mock(InternalRegionFactory.class);\n+    when(cache.createInternalRegionFactory(RegionShortcut.REPLICATE)).thenReturn(regionFactory);\n+    when(cache.getOptionalService(HttpService.class))\n+        .thenReturn(Optional.of(mock(HttpService.class)));\n+    when(cache.getCacheForProcessingClientRequests()).thenReturn(cache);\n+    BaseManagementService managementService = mock(BaseManagementService.class);\n+    BaseManagementService.setManagementService(cache, managementService);\n+    internalLocator.setInternalCache(cache);", "originalCommit": "3213a44aad6764869cad84305796f72f10ac2ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NjY4Nw==", "url": "https://github.com/apache/geode/pull/4820#discussion_r396676687", "bodyText": "I was able to get rid of the new test-only method. But I did it in a different way that did not require the constructor to change. The method being tested now takes as a parameter the cache it should use. Let me know what you think.", "author": "dschneider-pivotal", "createdAt": "2020-03-23T18:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNjE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzMzY2Nw==", "url": "https://github.com/apache/geode/pull/4820#discussion_r396533667", "bodyText": "Maybe put a comment here stating why jmxManager is needed when starting management rest service", "author": "jinmeiliao", "createdAt": "2020-03-23T15:23:17Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/InternalLocator.java", "diffHunk": "@@ -815,6 +822,10 @@ void startClusterManagementService() throws IOException {\n \n     if (distributionConfig.getEnableManagementRestService()) {\n       myCache.getOptionalService(HttpService.class).ifPresent(x -> {\n+        ManagementService managementService = ManagementService.getManagementService(myCache);", "originalCommit": "3213a44aad6764869cad84305796f72f10ac2ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NDI4Ng==", "url": "https://github.com/apache/geode/pull/4820#discussion_r396674286", "bodyText": "added a comment", "author": "dschneider-pivotal", "createdAt": "2020-03-23T18:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzMzY2Nw=="}], "type": "inlineReview"}, {"oid": "6d973c9d7027022f1980325841f9916272555eca", "url": "https://github.com/apache/geode/commit/6d973c9d7027022f1980325841f9916272555eca", "message": "removed the new setInternalCache method that was only used for testing", "committedDate": "2020-03-23T17:58:32Z", "type": "commit"}, {"oid": "1517e1bc8c879d2f58d8ff951eade5825457f411", "url": "https://github.com/apache/geode/commit/1517e1bc8c879d2f58d8ff951eade5825457f411", "message": "tests can now inject a mocked AgentUtil", "committedDate": "2020-03-23T18:11:56Z", "type": "commit"}, {"oid": "3b252da4e7eb4ce6cf6d656e049f1e83f28cd9c7", "url": "https://github.com/apache/geode/commit/3b252da4e7eb4ce6cf6d656e049f1e83f28cd9c7", "message": "common code in unit test is now in shared private helper method", "committedDate": "2020-03-23T18:33:45Z", "type": "commit"}, {"oid": "aee7de2aca1d9129921c5b5e071928326e27fa23", "url": "https://github.com/apache/geode/commit/aee7de2aca1d9129921c5b5e071928326e27fa23", "message": "added comment explaining why the jmx-manager is started\nif the management rest service is.", "committedDate": "2020-03-23T18:37:28Z", "type": "commit"}, {"oid": "2a30adbd901c69458e17bab80eb331f58c887fbb", "url": "https://github.com/apache/geode/commit/2a30adbd901c69458e17bab80eb331f58c887fbb", "message": "Merge branch 'develop' into GEODE-7826", "committedDate": "2020-03-23T19:21:11Z", "type": "commit"}, {"oid": "7c77e2eff539244d3b764f97b36c77660edcaf99", "url": "https://github.com/apache/geode/commit/7c77e2eff539244d3b764f97b36c77660edcaf99", "message": "Since the locator currently just logs a message if the management rest\nservice can not be started, this is now also the behavior if the\njmx-manager can not be started on behalf of the management rest service.\nIf that happens the management rest service will not be available and\nyou will get a warning logged describing why the jmx-manager could not\nbe started.", "committedDate": "2020-03-23T23:09:59Z", "type": "commit"}]}