{"pr_number": 5147, "pr_title": "GEODE-8171: javadoc for putAll need to have accurate exception", "pr_createdAt": "2020-05-22T00:06:23Z", "pr_url": "https://github.com/apache/geode/pull/5147", "timeline": [{"oid": "d14cb54837f26a72b292b6cadfd82c17633dfb3d", "url": "https://github.com/apache/geode/commit/d14cb54837f26a72b292b6cadfd82c17633dfb3d", "message": "GEODE-8171: javadoc for putAll need to have accurate exception", "committedDate": "2020-05-22T00:02:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MTU3OA==", "url": "https://github.com/apache/geode/pull/5147#discussion_r428981578", "bodyText": "\"the entries\" are they in two different lines or it is my browser. If they are two lines, it will be nice to have in the same line.", "author": "agingade", "createdAt": "2020-05-22T00:21:30Z", "path": "geode-core/src/main/java/org/apache/geode/cache/Region.java", "diffHunk": "@@ -1359,10 +1359,30 @@ Object selectValue(String queryPredicate) throws FunctionDomainException, TypeMi\n    * in the specified map. This operation will be distributed to other caches if the scope is not\n    * <code>Scope.LOCAL</code>.\n    *\n-   * @param map the key/value pairs to put in this region.\n-   * @since GemFire 5.0\n+   * If any exception is thrown due to this call, it can imply that there may have been a partial\n+   * update performed on the region. Use putAll from within a transaction to get atomicity with all\n+   * the", "originalCommit": "d14cb54837f26a72b292b6cadfd82c17633dfb3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1OTQzNQ==", "url": "https://github.com/apache/geode/pull/5147#discussion_r429359435", "bodyText": "fixed.", "author": "gesterzhou", "createdAt": "2020-05-22T17:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MTU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MjE1Nw==", "url": "https://github.com/apache/geode/pull/5147#discussion_r428982157", "bodyText": "May be changing it to \"throwsExpectedExceptions\"?", "author": "agingade", "createdAt": "2020-05-22T00:23:39Z", "path": "geode-cq/src/distributedTest/java/org/apache/geode/internal/cache/PutAllClientServerDistributedTest.java", "diffHunk": "@@ -1827,6 +1829,135 @@ public void testPartialKeyInLocalRegion() {\n     });\n   }\n \n+  /**\n+   * Verify all the possible exceptions a putAll/put/removeAll/destroy could return\n+   */\n+  @Test\n+  public void testPutAllReturnsExceptions() {", "originalCommit": "d14cb54837f26a72b292b6cadfd82c17633dfb3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwODQ5MA==", "url": "https://github.com/apache/geode/pull/5147#discussion_r429308490", "bodyText": "This sentence is missing some pronouns, and the last sentence might be worded better.  Here's my attempt at a rewrite:\nIf an exception is thrown due to this call, it can imply that there may have been a partial\n\nupdate performed on the region. Use putAll from within a transaction to obtain\nan atomic update.", "author": "karensmolermiller", "createdAt": "2020-05-22T15:17:55Z", "path": "geode-core/src/main/java/org/apache/geode/cache/Region.java", "diffHunk": "@@ -1359,10 +1359,30 @@ Object selectValue(String queryPredicate) throws FunctionDomainException, TypeMi\n    * in the specified map. This operation will be distributed to other caches if the scope is not\n    * <code>Scope.LOCAL</code>.\n    *\n-   * @param map the key/value pairs to put in this region.\n-   * @since GemFire 5.0\n+   * If any exception is thrown due to this call, it can imply that there may have been a partial\n+   * update performed on the region. Use putAll from within a transaction to get atomicity with all\n+   * the\n+   * entries.", "originalCommit": "d14cb54837f26a72b292b6cadfd82c17633dfb3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7511338193b620f6f09bbac0dd563a9fdee7d8ee", "url": "https://github.com/apache/geode/commit/7511338193b620f6f09bbac0dd563a9fdee7d8ee", "message": "fix javadoc and add more cases for put", "committedDate": "2020-05-22T17:50:19Z", "type": "commit"}, {"oid": "51ce6e0ca38de615f2497c223f0bdf3026de7218", "url": "https://github.com/apache/geode/commit/51ce6e0ca38de615f2497c223f0bdf3026de7218", "message": "add TimeoutException handling", "committedDate": "2020-05-23T03:09:43Z", "type": "commit"}, {"oid": "854ec9c4d62395bfd79e4f9bd5d2b724bae6d212", "url": "https://github.com/apache/geode/commit/854ec9c4d62395bfd79e4f9bd5d2b724bae6d212", "message": "update javadoc", "committedDate": "2020-05-26T21:09:01Z", "type": "commit"}, {"oid": "683306d7cf132a4ea452960c52d212353cae88bc", "url": "https://github.com/apache/geode/commit/683306d7cf132a4ea452960c52d212353cae88bc", "message": "remove the duplicated see java.util.Map#putAll", "committedDate": "2020-05-26T21:15:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MDAzNg==", "url": "https://github.com/apache/geode/pull/5147#discussion_r431440036", "bodyText": "Please slightly reword LeaseExpiredException (in BOTH putall signatures):\nif the lease expired on a distributed lock, for regions with Scope.GLOBAL", "author": "karensmolermiller", "createdAt": "2020-05-27T21:02:11Z", "path": "geode-core/src/main/java/org/apache/geode/cache/Region.java", "diffHunk": "@@ -1362,49 +1362,77 @@ Object selectValue(String queryPredicate) throws FunctionDomainException, TypeMi\n    * <code>Scope.LOCAL</code>.\n    *\n    * If an exception is thrown due to this call, it can imply that there may have been a partial\n-   * update performed on the region. Use putAll from within a transaction to to obtain an atomic\n-   * update.\n+   * update performed on the region.\n    * <p>\n    *\n    * @see java.util.Map#putAll(Map map)\n-   * @param map the key/value pairs to put in this region.\n+   * @param map the key/value pairs to put in this region\n+   * @throws ServerOperationException if called from a client, and the server throws an exception\n+   *         such as CacheWriterException, PartitionedRegionStorageException or LowMemoryException.\n+   *         These server exceptions become the ServerOperationException cause\n+   * @throws ServerConnectivityException if called from a client, and the server throws\n+   *         CancelException. CancelException will be the ServerConnectivityException cause\n    * @throws NullPointerException if key is null or if value is null (use invalidate instead), or if\n    *         the key or value do not meet serializability requirements\n    * @throws ClassCastException if key does not satisfy the keyConstraint\n-   * @throws org.apache.geode.distributed.LeaseExpiredException if lease expired on distributed lock\n-   *         for Scope.GLOBAL\n-   * @throws TimeoutException if timed out getting distributed lock for Scope.GLOBAL\n+   * @throws org.apache.geode.distributed.LeaseExpiredException if lease expired on distributed\n+   *         lock for regions with Scope.GLOBAL", "originalCommit": "854ec9c4d62395bfd79e4f9bd5d2b724bae6d212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1MDI0Nw==", "url": "https://github.com/apache/geode/pull/5147#discussion_r431450247", "bodyText": "fixed", "author": "gesterzhou", "createdAt": "2020-05-27T21:22:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MDAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MDg2Mw==", "url": "https://github.com/apache/geode/pull/5147#discussion_r431440863", "bodyText": "Please slightly reword NullPointerException (in BOTH putAll signatures):\nif the key is null, if the value is null (use invalidate instead), or if the key or value do not meet serialization requirements", "author": "karensmolermiller", "createdAt": "2020-05-27T21:03:51Z", "path": "geode-core/src/main/java/org/apache/geode/cache/Region.java", "diffHunk": "@@ -1362,49 +1362,77 @@ Object selectValue(String queryPredicate) throws FunctionDomainException, TypeMi\n    * <code>Scope.LOCAL</code>.\n    *\n    * If an exception is thrown due to this call, it can imply that there may have been a partial\n-   * update performed on the region. Use putAll from within a transaction to to obtain an atomic\n-   * update.\n+   * update performed on the region.\n    * <p>\n    *\n    * @see java.util.Map#putAll(Map map)\n-   * @param map the key/value pairs to put in this region.\n+   * @param map the key/value pairs to put in this region\n+   * @throws ServerOperationException if called from a client, and the server throws an exception\n+   *         such as CacheWriterException, PartitionedRegionStorageException or LowMemoryException.\n+   *         These server exceptions become the ServerOperationException cause\n+   * @throws ServerConnectivityException if called from a client, and the server throws\n+   *         CancelException. CancelException will be the ServerConnectivityException cause\n    * @throws NullPointerException if key is null or if value is null (use invalidate instead), or if\n    *         the key or value do not meet serializability requirements", "originalCommit": "854ec9c4d62395bfd79e4f9bd5d2b724bae6d212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1MDE4Mg==", "url": "https://github.com/apache/geode/pull/5147#discussion_r431450182", "bodyText": "fixed.", "author": "gesterzhou", "createdAt": "2020-05-27T21:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MDg2Mw=="}], "type": "inlineReview"}, {"oid": "6eefa198d688fb7a77bf84d8b348a66e6946fb21", "url": "https://github.com/apache/geode/commit/6eefa198d688fb7a77bf84d8b348a66e6946fb21", "message": "fix based on karen's comments", "committedDate": "2020-05-27T21:22:08Z", "type": "commit"}]}