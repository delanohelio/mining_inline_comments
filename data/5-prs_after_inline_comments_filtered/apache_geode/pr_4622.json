{"pr_number": 4622, "pr_title": "GEODE-7731: fix the checking of the end state of test.", "pr_createdAt": "2020-01-23T17:30:38Z", "pr_url": "https://github.com/apache/geode/pull/4622", "timeline": [{"oid": "9844568cd7782956d67527c0302cd1c096a2bd94", "url": "https://github.com/apache/geode/commit/9844568cd7782956d67527c0302cd1c096a2bd94", "message": "GEODE-7705: fix the checking of the end state of test.", "committedDate": "2020-01-23T17:29:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2MzM4NQ==", "url": "https://github.com/apache/geode/pull/4622#discussion_r370263385", "bodyText": "If isSystemConnected returns false, that means the test will pass immediately. Is that your intention?", "author": "upthewaterspout", "createdAt": "2020-01-23T17:46:17Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n     vm2.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n \n-    if (vm1.invoke(() -> system.getDistributedMember().equals(getView().getCreator()))) {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> !system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    } else {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    }\n+    await().untilAsserted(() -> {\n+      MemberIdentifier viewCreator = vm1.invoke(() -> getView().getCreator());\n+      MemberIdentifier viewCreator2 = vm1.invoke(() -> getView().getCreator());\n+\n+      if (isSystemConnected()) {", "originalCommit": "9844568cd7782956d67527c0302cd1c096a2bd94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MzUzNg==", "url": "https://github.com/apache/geode/pull/4622#discussion_r370363536", "bodyText": "uh, nope... I was just guarding against the NPE that was happening...", "author": "echobravopapa", "createdAt": "2020-01-23T21:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2MzM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NjYxNg==", "url": "https://github.com/apache/geode/pull/4622#discussion_r370266616", "bodyText": "I think that waitUntilLocatorBecomesCoordinator should also use view.getCreator(), not view.getCoordinator().  This is allowing the test to proceed past these checks before a locator is actually coordinator - the view merely thinks that one of the locators should become the coordinator.", "author": "bschuchardt", "createdAt": "2020-01-23T17:53:11Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);", "originalCommit": "9844568cd7782956d67527c0302cd1c096a2bd94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2Mzg4Mw==", "url": "https://github.com/apache/geode/pull/4622#discussion_r370363883", "bodyText": "I'll have a look at that one too, thx", "author": "echobravopapa", "createdAt": "2020-01-23T21:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NjYxNg=="}], "type": "inlineReview"}, {"oid": "a5ea0daeeb83ffb4e7073e1f5b6de353486bf616", "url": "https://github.com/apache/geode/commit/a5ea0daeeb83ffb4e7073e1f5b6de353486bf616", "message": "Using getCreator call and plumbed through acess to the member from each VM.\n- resolving PR comments...", "committedDate": "2020-01-23T22:57:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjMwMQ==", "url": "https://github.com/apache/geode/pull/4622#discussion_r370402301", "bodyText": "Remove commented out code.", "author": "upthewaterspout", "createdAt": "2020-01-23T23:07:07Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1319,20 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n     vm2.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n \n-    if (vm1.invoke(() -> system.getDistributedMember().equals(getView().getCreator()))) {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> !system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    } else {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    }\n+    await().untilAsserted(() -> {\n+      MemberIdentifier viewCreator = vm1.invoke(() -> getView().getCreator());\n+      MemberIdentifier viewCreator2 = vm1.invoke(() -> getView().getCreator());\n+\n+      // return (InternalDistributedMember) MembershipManagerHelper.getCreator(system);", "originalCommit": "a5ea0daeeb83ffb4e7073e1f5b6de353486bf616", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e673cd7a9d0d81009608bc81b9d51ffd4c997f83", "url": "https://github.com/apache/geode/commit/e673cd7a9d0d81009608bc81b9d51ffd4c997f83", "message": "mulligan", "committedDate": "2020-01-23T23:09:31Z", "type": "commit"}]}