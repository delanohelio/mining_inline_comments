{"pr_number": 59658, "pr_title": "Mark all scripted field queries as expensive", "pr_createdAt": "2020-07-15T19:43:24Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59658", "timeline": [{"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b", "url": "https://github.com/elastic/elasticsearch/commit/04b320de3671c00b583bc118c7e74bb0a16ed37b", "message": "Mark all scripted field queries as expensive\n\nThis will cause them to fail if you don't have permission to execute\nexpensive queries.", "committedDate": "2020-07-15T19:40:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455324265", "bodyText": "nit: use the constant from the mapper? content type I think it is called", "author": "javanna", "createdAt": "2020-07-15T20:32:10Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "originalCommit": "04b320de3671c00b583bc118c7e74bb0a16ed37b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTA2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455325066", "bodyText": "should we rather throw ElasticsearchException also, and why doesn't the context expose a check method instead that accepts for instance a message? :)", "author": "javanna", "createdAt": "2020-07-15T20:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM0OTg2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455349864", "bodyText": "should we rather throw ElasticsearchException also, and why doesn't the context expose a check method instead that accepts for instance a message? :)\n\nThat would probably be a good choice.\nI have no idea why we were throwing ElasticsearchException when we were. It feels like this is what IAE is for.", "author": "nik9000", "createdAt": "2020-07-15T21:11:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NjY5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455776696", "bodyText": "I have no idea why we were throwing ElasticsearchException when we were. It feels like this is what IAE is for.\n\nI figured it out - we translate all exceptions thrown when building a query into a QueryShardException which is always a 400.", "author": "nik9000", "createdAt": "2020-07-16T13:15:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4MDgyMw==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455780823", "bodyText": "why doesn't the context expose a check method instead that accepts for instance a message? :)\n\nIt really is a good idea. I took a look at it and, ironically, testing it is kind of a pain. I'll hold off on it.", "author": "nik9000", "createdAt": "2020-07-16T13:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQyMTg3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r456421879", "bodyText": "shall we open issues for possible follow-up tasks that we don't want to spend time on right now?", "author": "javanna", "createdAt": "2020-07-17T12:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzOTQ1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r456439455", "bodyText": "Let me give it another go this morning!", "author": "nik9000", "createdAt": "2020-07-17T13:24:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTUzMg==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455325532", "bodyText": "maybe one day we will a base class for runtime mapper field types that does this in one place.", "author": "javanna", "createdAt": "2020-07-15T20:34:40Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"\n+            );\n+        }\n+    }\n+\n     @Override\n     public Query existsQuery(QueryShardContext context) {\n+        checkAllowExpensiveQueries(context);", "originalCommit": "04b320de3671c00b583bc118c7e74bb0a16ed37b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM0ODYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455348605", "bodyText": "probably!", "author": "nik9000", "createdAt": "2020-07-15T21:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTUzMg=="}], "type": "inlineReview"}, {"oid": "01aa69d682702f62e8f77cee0ec623659115db66", "url": "https://github.com/elastic/elasticsearch/commit/01aa69d682702f62e8f77cee0ec623659115db66", "message": "Update exception type", "committedDate": "2020-07-16T13:21:03Z", "type": "commit"}]}