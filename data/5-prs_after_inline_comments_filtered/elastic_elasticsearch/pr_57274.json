{"pr_number": 57274, "pr_title": "[ML] Adds setting to configure threads used by DF analytics job", "pr_createdAt": "2020-05-28T11:16:16Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57274", "timeline": [{"oid": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71", "url": "https://github.com/elastic/elasticsearch/commit/84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71", "message": "[ML] Adds setting to configure threads used by DF analytics job\n\nThis commit adds a `max_num_threads` setting to data frame analytics\njobs. The setting value defaults to 1 which, for now, preserves\nbehaviour. Setting it to a higher value allows the analytics process\nto utilize more threads in order to speed up the analysis.\n\nWe introduce this setting here in order to be able to test node load\nwhen multiple threads are used. Depending on the feedback the setting\nmay be changed. Thus, this commit adds the minimum to allow testing.", "committedDate": "2020-05-28T11:09:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2MjE3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431762172", "bodyText": "We should validate that this setting is >= 1 when it is provided. I did not see this check anywhere (unless you were planning on adding it to the rest layer).", "author": "benwtrent", "createdAt": "2020-05-28T11:19:51Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfig.java", "diffHunk": "@@ -142,6 +146,7 @@ private DataFrameAnalyticsConfig(String id, String description, DataFrameAnalyti\n         this.createTime = createTime == null ? null : Instant.ofEpochMilli(createTime.toEpochMilli());\n         this.version = version;\n         this.allowLazyStart = allowLazyStart;\n+        this.maxNumThreads = maxNumThreads;", "originalCommit": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDU5MA==", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431794590", "bodyText": "I intentionally avoided adding validation as I believe the way we implement the setting may change based on the feedback we get from testing performance behaviour. If we end up leaving it as is, I'll add validation plus other things that are missing in a following PR.", "author": "dimitris-athanasiou", "createdAt": "2020-05-28T12:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2MjE3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3NzE2MA==", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431777160", "bodyText": "I'm wondering where we should apply the default: here or in DataFrameAnalyticsConfig.\nIf the calling code doesn't care whether the user has set max_num_threads, the default of 1 could be as well applied in DataFrameAnalyticsConfig's constructor.\nThen we wouldn't need null handling here.\nI don't have a strong opinion though so feel free to disregard the comment.", "author": "przemekwitek", "createdAt": "2020-05-28T11:50:12Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "diffHunk": "@@ -438,12 +443,13 @@ private AnalyticsProcessConfig createProcessConfig(DataFrameDataExtractor dataEx\n                                                            ExtractedFields extractedFields) {\n             DataFrameDataExtractor.DataSummary dataSummary = dataExtractor.collectDataSummary();\n             Set<String> categoricalFields = dataExtractor.getCategoricalFields(config.getAnalysis());\n+            int threads = config.getMaxNumThreads() == null ? 1 : Math.min(config.getMaxNumThreads(), numAllocatedProcessors);", "originalCommit": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431794977", "bodyText": "I intentionally left it there as it's minimum effort. I anticipate we might change the way we implement this setting depending on feedback we'll get from testing.", "author": "dimitris-athanasiou", "createdAt": "2020-05-28T12:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3NzE2MA=="}], "type": "inlineReview"}]}