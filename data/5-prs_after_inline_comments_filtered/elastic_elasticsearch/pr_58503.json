{"pr_number": 58503, "pr_title": "Index name expression resolver bwc layer for date parsing", "pr_createdAt": "2020-06-24T15:05:59Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58503", "timeline": [{"oid": "d2a1aff5129406feff471eafd7c30e4968806eae", "url": "https://github.com/elastic/elasticsearch/commit/d2a1aff5129406feff471eafd7c30e4968806eae", "message": "backport index name resolver", "committedDate": "2020-06-24T14:01:50Z", "type": "commit"}, {"oid": "1eb41c831d67baf450c6f54038eee4429340f9ba", "url": "https://github.com/elastic/elasticsearch/commit/1eb41c831d67baf450c6f54038eee4429340f9ba", "message": "fix geting local date from week based date", "committedDate": "2020-06-24T15:03:43Z", "type": "commit"}, {"oid": "d12a2097b0085c43ba1d48d2094ab7ef5666e7ea", "url": "https://github.com/elastic/elasticsearch/commit/d12a2097b0085c43ba1d48d2094ab7ef5666e7ea", "message": "checkstyle", "committedDate": "2020-06-25T06:36:48Z", "type": "commit"}, {"oid": "662d3ac59e44a585e0754606efc48de00063a6e7", "url": "https://github.com/elastic/elasticsearch/commit/662d3ac59e44a585e0754606efc48de00063a6e7", "message": "Revert \"GlobalBuildInfo support packed-refs with work-tree (#50791)\"\n\nThis reverts commit 7bebc65cb2b398c87f4df3d61de50d98ec712916.", "committedDate": "2020-06-25T07:18:35Z", "type": "commit"}, {"oid": "eccb89d4e385ac9150fe6f647cf2ada4d5ed9614", "url": "https://github.com/elastic/elasticsearch/commit/eccb89d4e385ac9150fe6f647cf2ada4d5ed9614", "message": "fix millis parsing", "committedDate": "2020-06-25T07:42:20Z", "type": "commit"}, {"oid": "9febfc88a5f33620e85c549145749f5568c53e68", "url": "https://github.com/elastic/elasticsearch/commit/9febfc88a5f33620e85c549145749f5568c53e68", "message": "Revert \"Revert \"GlobalBuildInfo support packed-refs with work-tree (#50791)\"\"\n\nThis reverts commit 662d3ac5", "committedDate": "2020-06-25T08:44:09Z", "type": "commit"}, {"oid": "73b9e08db9a3e9d6e4e757b0639aea320d9e65a1", "url": "https://github.com/elastic/elasticsearch/commit/73b9e08db9a3e9d6e4e757b0639aea320d9e65a1", "message": "draft test", "committedDate": "2020-06-25T09:36:45Z", "type": "commit"}, {"oid": "c1208847f3fb18abd33ca9f0ea5162954ca349ac", "url": "https://github.com/elastic/elasticsearch/commit/c1208847f3fb18abd33ca9f0ea5162954ca349ac", "message": "joda and java yml test", "committedDate": "2020-06-25T09:55:57Z", "type": "commit"}, {"oid": "4eed78b4df0d812bbe1c8353f8b3895c57ec379d", "url": "https://github.com/elastic/elasticsearch/commit/4eed78b4df0d812bbe1c8353f8b3895c57ec379d", "message": "remove unused test", "committedDate": "2020-06-25T12:02:44Z", "type": "commit"}, {"oid": "e7f1ba28d244bf12e23f26addc603400354b9212", "url": "https://github.com/elastic/elasticsearch/commit/e7f1ba28d244bf12e23f26addc603400354b9212", "message": "add index and search test case", "committedDate": "2020-06-26T14:01:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0NDI1OA==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448444258", "bodyText": "nit: why is this moved here? i think setting a member variable shoudl be done on it's own line, like it was before, not hidden inside a list initialization", "author": "rjernst", "createdAt": "2020-07-01T15:29:16Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -64,12 +61,11 @@\n     private final DateMathExpressionResolver dateMathExpressionResolver;\n \n     public IndexNameExpressionResolver(Settings settings) {\n-        dateMathExpressionResolver = new DateMathExpressionResolver(settings);\n         expressionResolvers = Arrays.asList(\n-                dateMathExpressionResolver,\n-                new WildcardExpressionResolver());\n+            dateMathExpressionResolver = new DateMathExpressionResolver(settings),", "originalCommit": "e7f1ba28d244bf12e23f26addc603400354b9212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MTE1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448781156", "bodyText": "++ agree. It was moved because I just cherrypicked the changes from https://github.com/elastic/elasticsearch/pull/34507/files and there was no conflict on this one\nwill fix", "author": "pgomulka", "createdAt": "2020-07-02T06:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0NDI1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NTM0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448645346", "bodyText": "Shouldn't this use the pattern in defaultDateFormatterPattern?", "author": "rjernst", "createdAt": "2020-07-01T22:19:48Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -848,22 +844,23 @@ private boolean isEmptyOrTrivialWildcard(List<String> expressions) {\n \n     static final class DateMathExpressionResolver implements ExpressionResolver {\n \n+        private static final DateFormatter DEFAULT_DATE_FORMATTER = DateFormatters.forPattern(\"uuuu.MM.dd\");\n         private static final String EXPRESSION_LEFT_BOUND = \"<\";\n         private static final String EXPRESSION_RIGHT_BOUND = \">\";\n         private static final char LEFT_BOUND = '{';\n         private static final char RIGHT_BOUND = '}';\n         private static final char ESCAPE_CHAR = '\\\\';\n         private static final char TIME_ZONE_BOUND = '|';\n \n-        private final DateTimeZone defaultTimeZone;\n+        private final ZoneId defaultTimeZone;\n         private final String defaultDateFormatterPattern;\n-        private final DateTimeFormatter defaultDateFormatter;\n+        private final DateFormatter defaultDateFormatter;\n \n         DateMathExpressionResolver(Settings settings) {\n             String defaultTimeZoneId = settings.get(\"date_math_expression_resolver.default_time_zone\", \"UTC\");\n-            this.defaultTimeZone = DateTimeZone.forID(defaultTimeZoneId);\n-            defaultDateFormatterPattern = settings.get(\"date_math_expression_resolver.default_date_format\", \"YYYY.MM.dd\");\n-            this.defaultDateFormatter = DateTimeFormat.forPattern(defaultDateFormatterPattern);\n+            this.defaultTimeZone = ZoneId.of(defaultTimeZoneId);\n+            defaultDateFormatterPattern = settings.get(\"date_math_expression_resolver.default_date_format\", \"uuuu.MM.dd\");\n+            this.defaultDateFormatter = DateFormatters.forPattern(\"uuuu.MM.dd\");", "originalCommit": "e7f1ba28d244bf12e23f26addc603400354b9212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MTg5NA==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448781894", "bodyText": "good catch, this should use the defaultDateFormatterPattern", "author": "pgomulka", "createdAt": "2020-07-02T06:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NTM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NjA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448646051", "bodyText": "Since this is in 6.8, shouldn't this default format be prefixed with '8' since we still use joda by default here?", "author": "rjernst", "createdAt": "2020-07-01T22:21:48Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -848,22 +844,23 @@ private boolean isEmptyOrTrivialWildcard(List<String> expressions) {\n \n     static final class DateMathExpressionResolver implements ExpressionResolver {\n \n+        private static final DateFormatter DEFAULT_DATE_FORMATTER = DateFormatters.forPattern(\"uuuu.MM.dd\");\n         private static final String EXPRESSION_LEFT_BOUND = \"<\";\n         private static final String EXPRESSION_RIGHT_BOUND = \">\";\n         private static final char LEFT_BOUND = '{';\n         private static final char RIGHT_BOUND = '}';\n         private static final char ESCAPE_CHAR = '\\\\';\n         private static final char TIME_ZONE_BOUND = '|';\n \n-        private final DateTimeZone defaultTimeZone;\n+        private final ZoneId defaultTimeZone;\n         private final String defaultDateFormatterPattern;\n-        private final DateTimeFormatter defaultDateFormatter;\n+        private final DateFormatter defaultDateFormatter;\n \n         DateMathExpressionResolver(Settings settings) {\n             String defaultTimeZoneId = settings.get(\"date_math_expression_resolver.default_time_zone\", \"UTC\");\n-            this.defaultTimeZone = DateTimeZone.forID(defaultTimeZoneId);\n-            defaultDateFormatterPattern = settings.get(\"date_math_expression_resolver.default_date_format\", \"YYYY.MM.dd\");\n-            this.defaultDateFormatter = DateTimeFormat.forPattern(defaultDateFormatterPattern);\n+            this.defaultTimeZone = ZoneId.of(defaultTimeZoneId);\n+            defaultDateFormatterPattern = settings.get(\"date_math_expression_resolver.default_date_format\", \"uuuu.MM.dd\");", "originalCommit": "e7f1ba28d244bf12e23f26addc603400354b9212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MjMyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448782329", "bodyText": "yes, should be with 8. will fix", "author": "pgomulka", "createdAt": "2020-07-02T06:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NjA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NzAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448647024", "bodyText": "We previously added the '8' prefix in date formats so that both joda and java formats could be distinguished. I have a vague memory that the zone identifiers do not completely match up between joda and java. Is this correct? If so, what happens if the format specified by the user is one not supported by java?", "author": "rjernst", "createdAt": "2020-07-01T22:24:21Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -947,23 +943,25 @@ String resolveExpression(String expression, final Context context) {\n                                             inPlaceHolderString);\n                                     }\n                                     mathExpression = inPlaceHolderString.substring(0, dateTimeFormatLeftBoundIndex);\n-                                    String patternAndTZid =\n+                                    String dateFormatterPatternAndTimeZoneId =\n                                         inPlaceHolderString.substring(dateTimeFormatLeftBoundIndex + 1, inPlaceHolderString.length() - 1);\n-                                    int formatPatternTimeZoneSeparatorIndex = patternAndTZid.indexOf(TIME_ZONE_BOUND);\n+                                    int formatPatternTimeZoneSeparatorIndex = dateFormatterPatternAndTimeZoneId.indexOf(TIME_ZONE_BOUND);\n                                     if (formatPatternTimeZoneSeparatorIndex != -1) {\n-                                        dateFormatterPattern = patternAndTZid.substring(0, formatPatternTimeZoneSeparatorIndex);\n-                                        timeZone = DateTimeZone.forID(patternAndTZid.substring(formatPatternTimeZoneSeparatorIndex + 1));\n+                                        dateFormatterPattern\n+                                            = dateFormatterPatternAndTimeZoneId.substring(0, formatPatternTimeZoneSeparatorIndex);\n+                                        timeZone = ZoneId.of(", "originalCommit": "e7f1ba28d244bf12e23f26addc603400354b9212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4Mzk0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58503#discussion_r448783945", "bodyText": "we test against this discrepancies in https://github.com/elastic/elasticsearch/blob/6.8/server/src/test/java/org/elasticsearch/common/time/DateUtilsTests.java#L38\nas long as timezone dbs are the same in both joda and java (and we make sure about this with this test) then there should always be a match", "author": "pgomulka", "createdAt": "2020-07-02T06:49:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NzAyNA=="}], "type": "inlineReview"}, {"oid": "e773628aebbecdc56432b89d130d9f2905472749", "url": "https://github.com/elastic/elasticsearch/commit/e773628aebbecdc56432b89d130d9f2905472749", "message": "code review fixes", "committedDate": "2020-07-02T06:49:48Z", "type": "commit"}, {"oid": "ed9e8c6ee24ba84f017bb522ec507450a418fcfa", "url": "https://github.com/elastic/elasticsearch/commit/ed9e8c6ee24ba84f017bb522ec507450a418fcfa", "message": "fix formatter creation", "committedDate": "2020-07-02T07:15:18Z", "type": "commit"}, {"oid": "de1067a1d943da49b4b21982d0e766666b6ab044", "url": "https://github.com/elastic/elasticsearch/commit/de1067a1d943da49b4b21982d0e766666b6ab044", "message": "add back dmath expresion resolver to a list", "committedDate": "2020-07-02T08:09:46Z", "type": "commit"}, {"oid": "31e8cfe0f94b62d59eaefc471eca881462c4679e", "url": "https://github.com/elastic/elasticsearch/commit/31e8cfe0f94b62d59eaefc471eca881462c4679e", "message": "Merge branch '6.8' into bp/index_name_expression_resolver", "committedDate": "2020-07-02T08:24:36Z", "type": "commit"}, {"oid": "0a89df06b3f2446ff892e03fe51215849ab9bdcb", "url": "https://github.com/elastic/elasticsearch/commit/0a89df06b3f2446ff892e03fe51215849ab9bdcb", "message": "import", "committedDate": "2020-07-02T08:55:55Z", "type": "commit"}]}