{"pr_number": 64981, "pr_title": "Add support for script-less runtime fields", "pr_createdAt": "2020-11-12T09:59:11Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64981", "timeline": [{"oid": "dca3cca7f9d41088806541a4b7c6a55098549207", "url": "https://github.com/elastic/elasticsearch/commit/dca3cca7f9d41088806541a4b7c6a55098549207", "message": "Examples of how to build source-only fields using runtime scripts", "committedDate": "2020-11-12T09:29:14Z", "type": "commit"}, {"oid": "e330861ab089c2b51c29a925fb9ef10fcc4e843a", "url": "https://github.com/elastic/elasticsearch/commit/e330861ab089c2b51c29a925fb9ef10fcc4e843a", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-12T09:29:34Z", "type": "commit"}, {"oid": "bd12224c78830f0b19fd625e2e2e006c1437295b", "url": "https://github.com/elastic/elasticsearch/commit/bd12224c78830f0b19fd625e2e2e006c1437295b", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-17T10:41:07Z", "type": "commit"}, {"oid": "8f2ee0ad041d74178e269312f866d44f8084ffc4", "url": "https://github.com/elastic/elasticsearch/commit/8f2ee0ad041d74178e269312f866d44f8084ffc4", "message": "Simplify booleans", "committedDate": "2020-11-17T11:36:08Z", "type": "commit"}, {"oid": "dfab592acb2043278815f49a4626501035026bb0", "url": "https://github.com/elastic/elasticsearch/commit/dfab592acb2043278815f49a4626501035026bb0", "message": "test objects", "committedDate": "2020-11-17T14:00:19Z", "type": "commit"}, {"oid": "0516000e38bb65e947b547a8898c82c24f840130", "url": "https://github.com/elastic/elasticsearch/commit/0516000e38bb65e947b547a8898c82c24f840130", "message": "keywords", "committedDate": "2020-11-17T14:11:49Z", "type": "commit"}, {"oid": "3381d380cd8beb7c18ee55430693a2137ffc5ae6", "url": "https://github.com/elastic/elasticsearch/commit/3381d380cd8beb7c18ee55430693a2137ffc5ae6", "message": "longs", "committedDate": "2020-11-17T14:19:22Z", "type": "commit"}, {"oid": "fe918f25b89c525bb4398e12a501ab5075867b87", "url": "https://github.com/elastic/elasticsearch/commit/fe918f25b89c525bb4398e12a501ab5075867b87", "message": "doubles", "committedDate": "2020-11-17T14:25:53Z", "type": "commit"}, {"oid": "7d05373d9b60e1eb882c1ea104798252dc0cb7fd", "url": "https://github.com/elastic/elasticsearch/commit/7d05373d9b60e1eb882c1ea104798252dc0cb7fd", "message": "dates", "committedDate": "2020-11-17T14:33:27Z", "type": "commit"}, {"oid": "2ed3ee6a3e26cf4374d7957eb856bcfe4152d055", "url": "https://github.com/elastic/elasticsearch/commit/2ed3ee6a3e26cf4374d7957eb856bcfe4152d055", "message": "ips", "committedDate": "2020-11-17T14:43:46Z", "type": "commit"}, {"oid": "61599db916648683fecd24b6c4831c7fd55ef197", "url": "https://github.com/elastic/elasticsearch/commit/61599db916648683fecd24b6c4831c7fd55ef197", "message": "spotless", "committedDate": "2020-11-17T16:30:48Z", "type": "commit"}, {"oid": "04e08092e1aedeeb844761fef20c82d0e55e481d", "url": "https://github.com/elastic/elasticsearch/commit/04e08092e1aedeeb844761fef20c82d0e55e481d", "message": "emitValues for keyword script fields", "committedDate": "2020-11-18T11:26:32Z", "type": "commit"}, {"oid": "e76eaedffce68cf7c8d2d6fa1356b8d0e6124065", "url": "https://github.com/elastic/elasticsearch/commit/e76eaedffce68cf7c8d2d6fa1356b8d0e6124065", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-23T17:19:35Z", "type": "commit"}, {"oid": "35b2ef188cab24ddf4535a25906bd4583ba505e0", "url": "https://github.com/elastic/elasticsearch/commit/35b2ef188cab24ddf4535a25906bd4583ba505e0", "message": "WIP", "committedDate": "2020-11-24T10:31:25Z", "type": "commit"}, {"oid": "4fecb3611477dbcbb3238f525c0be739d4d988a7", "url": "https://github.com/elastic/elasticsearch/commit/4fecb3611477dbcbb3238f525c0be739d4d988a7", "message": "Go to source if no script specified for a runtime field", "committedDate": "2020-11-24T12:28:18Z", "type": "commit"}, {"oid": "a2b1e2ab95a991bde9d478ce50a7c6df64966516", "url": "https://github.com/elastic/elasticsearch/commit/a2b1e2ab95a991bde9d478ce50a7c6df64966516", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-24T12:28:22Z", "type": "commit"}, {"oid": "7e8d7a667a08b40dc73d913ed396011594f9c90c", "url": "https://github.com/elastic/elasticsearch/commit/7e8d7a667a08b40dc73d913ed396011594f9c90c", "message": "precommit", "committedDate": "2020-11-24T12:39:51Z", "type": "commit"}, {"oid": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "url": "https://github.com/elastic/elasticsearch/commit/a7f5693a34f00bb30fc070211029091f7aea1cd4", "message": "Remove no-script test", "committedDate": "2020-11-24T13:39:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3NDA0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529574042", "bodyText": "Just a though, a bit controversial I reckon: although we are not documenting emitValues, I wonder if it's worth iterating on it and making it closer to what we will need in the long run. I see that the function is context dependent in how it extracts values from source. Would it make sense to instead have parse* functions that are independent of the context and can potentially be used in any context? I would be ok even if the default script loops over the returned values.", "author": "javanna", "createdAt": "2020-11-24T14:11:55Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptFieldType.java", "diffHunk": "@@ -239,6 +235,10 @@ protected final void doXContentBody(XContentBuilder builder, boolean includeDefa\n \n         protected abstract AbstractScriptFieldType<?> buildFieldType();\n \n+        protected final Script defaultScript() {\n+            return new Script(\"emitValues(\\\"\" + name + \"\\\")\");", "originalCommit": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3NTgwOA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529575808", "bodyText": "what exception may we get here? IllegalArgumentException because the value is neither \"true\" nor \"false\"?", "author": "javanna", "createdAt": "2020-11-24T14:14:19Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/BooleanFieldScript.java", "diffHunk": "@@ -84,4 +86,26 @@ public void value(boolean v) {\n             script.emit(v);\n         }\n     }\n+\n+    public static class EmitValues {\n+        private final BooleanFieldScript script;\n+\n+        public EmitValues(BooleanFieldScript script) {\n+            this.script = script;\n+        }\n+\n+        public void emitFromPath(String path) {\n+            for (Object v : script.extractFromSource(path)) {\n+                if (v instanceof Boolean) {\n+                    script.emit((Boolean) v);\n+                } else if (v instanceof String) {\n+                    try {\n+                        script.emit(Booleans.parseBoolean((String) v));\n+                    } catch (Exception e) {", "originalCommit": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1OTE0NA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529659144", "bodyText": "Can we add a comment to make it clear that this is temporary and only exposed through script-less runtime fields, undocumented on purpose?", "author": "javanna", "createdAt": "2020-11-24T15:45:00Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/BooleanFieldScript.java", "diffHunk": "@@ -84,4 +86,26 @@ public void value(boolean v) {\n             script.emit(v);\n         }\n     }\n+\n+    public static class EmitValues {", "originalCommit": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4Mzk1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529783951", "bodyText": "++", "author": "nik9000", "createdAt": "2020-11-24T18:17:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1OTE0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY2NDc4NA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529664784", "bodyText": "why not casting to string at this point?", "author": "javanna", "createdAt": "2020-11-24T15:49:06Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/IpFieldScript.java", "diffHunk": "@@ -111,4 +114,24 @@ public void emit(String v) {\n             script.emit(v);\n         }\n     }\n+\n+    public static class EmitValues {\n+        private final IpFieldScript script;\n+\n+        public EmitValues(IpFieldScript script) {\n+            this.script = script;\n+        }\n+\n+        public void emitFromPath(String path) {\n+            for (Object v : script.extractFromSource(path)) {\n+                if (v instanceof String) {\n+                    try {\n+                        script.emit(v.toString());", "originalCommit": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDkwNA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529784904", "bodyText": "May as well cast if you've already instaceofed", "author": "nik9000", "createdAt": "2020-11-24T18:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY2NDc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY3MDM1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529670356", "bodyText": "does this mean that we can remove the parse function from the date context @nik9000 ?", "author": "javanna", "createdAt": "2020-11-24T15:52:59Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/DateFieldScript.java", "diffHunk": "@@ -75,4 +75,24 @@ public long parse(Object str) {\n             return script.formatter.parseMillis(str.toString());\n         }\n     }\n+\n+    public static class EmitValues {\n+        private final DateFieldScript script;\n+\n+        public EmitValues(DateFieldScript script) {\n+            this.script = script;\n+        }\n+\n+        public void emitFromPath(String path) {\n+            for (Object v : script.extractFromSource(path)) {\n+                if (v instanceof String) {\n+                    try {\n+                        script.emit(script.formatter.parseMillis((String) v));", "originalCommit": "a7f5693a34f00bb30fc070211029091f7aea1cd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2OTY4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529769687", "bodyText": "I believe we can, yes. We should do that either in this PR or in a follow up right after. Though I think maybe we're better off doing it in this one just because of all the lovely test coverage that adds. It might catch something funny about this PR that we didn't see.", "author": "nik9000", "createdAt": "2020-11-24T17:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY3MDM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwNzkzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r529807935", "bodyText": "++ to doing that here then, it seems like parse won't have any use after this change anyways", "author": "javanna", "createdAt": "2020-11-24T18:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY3MDM1Ng=="}], "type": "inlineReview"}, {"oid": "7e465b9bff6112a8d29f4c5b830b4783415ec311", "url": "https://github.com/elastic/elasticsearch/commit/7e465b9bff6112a8d29f4c5b830b4783415ec311", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-25T12:30:04Z", "type": "commit"}, {"oid": "f41911847e07b6b0f9a5b652a3e634e813a88941", "url": "https://github.com/elastic/elasticsearch/commit/f41911847e07b6b0f9a5b652a3e634e813a88941", "message": "implement as native scripts", "committedDate": "2020-11-25T14:01:17Z", "type": "commit"}, {"oid": "edabd56adbb8b6396537b4a836919f4e5da88f38", "url": "https://github.com/elastic/elasticsearch/commit/edabd56adbb8b6396537b4a836919f4e5da88f38", "message": "spotless", "committedDate": "2020-11-25T14:07:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyMTE0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530421147", "bodyText": "this is no longer needed right?", "author": "javanna", "createdAt": "2020-11-25T14:38:23Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/DateFieldScript.java", "diffHunk": "@@ -75,4 +96,24 @@ public long parse(Object str) {\n             return script.formatter.parseMillis(str.toString());\n         }\n     }\n+\n+    public static class EmitValues {", "originalCommit": "edabd56adbb8b6396537b4a836919f4e5da88f38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyOTM0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530429346", "bodyText": "yep, missed it", "author": "romseygeek", "createdAt": "2020-11-25T14:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyMTE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyMTk2NA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530421964", "bodyText": "let's remove the parse function that's exposed for dates?", "author": "javanna", "createdAt": "2020-11-25T14:39:28Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/DateFieldScript.java", "diffHunk": "@@ -35,6 +35,27 @@\n         DateFieldScript newInstance(LeafReaderContext ctx);\n     }\n \n+    public static final Factory PARSE_FROM_SOURCE = (field, params, lookup, formatter) -> (LeafFactory) ctx -> new DateFieldScript(\n+        field,\n+        params,\n+        lookup,\n+        formatter,\n+        ctx\n+    ) {\n+        @Override\n+        public void execute() {\n+            for (Object v : extractFromSource(field)) {\n+                if (v instanceof String) {\n+                    try {\n+                        emit(formatter.parseMillis((String) v));", "originalCommit": "edabd56adbb8b6396537b4a836919f4e5da88f38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyOTc2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530429760", "bodyText": "I think it might still be required for Nik's tests?  I can try removing it and we'll see what CI says", "author": "romseygeek", "createdAt": "2020-11-25T14:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyMTk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzNDU2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530434563", "bodyText": "ok, I keep forgetting that the tests for runtime fields in the search request are still running. Let's address that next then, I mean updating the tests and removing the function.", "author": "javanna", "createdAt": "2020-11-25T14:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyMTk2NA=="}], "type": "inlineReview"}, {"oid": "065cbbb198602b5bac51f34c40baee0b9b912401", "url": "https://github.com/elastic/elasticsearch/commit/065cbbb198602b5bac51f34c40baee0b9b912401", "message": "leftovers", "committedDate": "2020-11-25T14:50:31Z", "type": "commit"}, {"oid": "a139edd228e8a5bdb76cbe686e2027230082a467", "url": "https://github.com/elastic/elasticsearch/commit/a139edd228e8a5bdb76cbe686e2027230082a467", "message": "Remove date Parse function", "committedDate": "2020-11-25T14:57:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzNzM3MA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530437370", "bodyText": "Oh this is tricky! Could we use null here instead? I'm not a big of making a Script that no one can compile. It'll have stuff like engine=painless which is isn't.", "author": "nik9000", "createdAt": "2020-11-25T15:00:21Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptFieldType.java", "diffHunk": "@@ -206,6 +206,9 @@ protected final void doXContentBody(XContentBuilder builder, boolean includeDefa\n         toXContent.accept(builder, includeDefaults);\n     }\n \n+    // Placeholder Script for source-only fields\n+    private static final Script DEFAULT_SCRIPT = new Script(\"\");", "originalCommit": "a139edd228e8a5bdb76cbe686e2027230082a467", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0NTg2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530445860", "bodyText": "On second though, I think null is difficult here because we dereference the script all over the place. I plan to rework a lot of those dereferences eventually anyway so maybe we can just swear that we'll remove this \"very soon\" and be ok with it.", "author": "nik9000", "createdAt": "2020-11-25T15:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzNzM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ2OTU3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530469576", "bodyText": "let's add a TODO just to make it clear that this is temporary?", "author": "javanna", "createdAt": "2020-11-25T15:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzNzM3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MjM4OA==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530472388", "bodyText": "do we need to check for the result of toString? emit(null) will cause an error and we are not catching exceptions here", "author": "javanna", "createdAt": "2020-11-25T15:48:36Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/StringFieldScript.java", "diffHunk": "@@ -41,6 +41,22 @@\n         StringFieldScript newInstance(LeafReaderContext ctx);\n     }\n \n+    public static final Factory PARSE_FROM_SOURCE = (field, params, lookup) -> (LeafFactory) ctx -> new StringFieldScript(\n+        field,\n+        params,\n+        lookup,\n+        ctx\n+    ) {\n+        @Override\n+        public void execute() {\n+            for (Object v : extractFromSource(field)) {\n+                if (v != null) {\n+                    emit(v.toString());", "originalCommit": "a139edd228e8a5bdb76cbe686e2027230082a467", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYyMjIyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530622221", "bodyText": "If toString returns null we're in a sad place.", "author": "nik9000", "createdAt": "2020-11-25T20:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MjM4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYyNjcyNw==", "url": "https://github.com/elastic/elasticsearch/pull/64981#discussion_r530626727", "bodyText": "true. I got carried away I think :)", "author": "javanna", "createdAt": "2020-11-25T20:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MjM4OA=="}], "type": "inlineReview"}, {"oid": "68a00c4c3e48e857ffa27ef41e3e34d9c4e1f19b", "url": "https://github.com/elastic/elasticsearch/commit/68a00c4c3e48e857ffa27ef41e3e34d9c4e1f19b", "message": "Revert \"Remove date Parse function\"\n\nThis reverts commit a139edd228e8a5bdb76cbe686e2027230082a467.", "committedDate": "2020-11-25T17:02:31Z", "type": "commit"}, {"oid": "394634f47cc4372ad2a4ee5557e443d7742cdbcb", "url": "https://github.com/elastic/elasticsearch/commit/394634f47cc4372ad2a4ee5557e443d7742cdbcb", "message": "Merge remote-tracking branch 'origin/master' into runtime/parse-functions", "committedDate": "2020-11-26T09:05:18Z", "type": "commit"}, {"oid": "d2641760a9d2b37b060acd1c2c278def125a88f1", "url": "https://github.com/elastic/elasticsearch/commit/d2641760a9d2b37b060acd1c2c278def125a88f1", "message": "Add TODO", "committedDate": "2020-11-26T09:06:21Z", "type": "commit"}]}