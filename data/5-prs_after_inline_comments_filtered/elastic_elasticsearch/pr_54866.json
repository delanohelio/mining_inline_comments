{"pr_number": 54866, "pr_title": "Add Snapshot Resiliency Test for Master Failover during Delete", "pr_createdAt": "2020-04-07T08:56:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54866", "timeline": [{"oid": "7c34b37b11aec1978959713ee1315341be171425", "url": "https://github.com/elastic/elasticsearch/commit/7c34b37b11aec1978959713ee1315341be171425", "message": "Add Snapshot Resiliency Test for Master Failover during Delete\n\nWe only have very indirect coverage of master failovers during snaphot delete\nat the moment. This comment adds a direct test of this scenario and also\nan assertion that makes sure we are not leaking any snapshot completion listeners\nin the snapshots service in this scenario.\n\nThis gives us better coverage of scenarios like #54256 and makes the diff\nto the upcoming more consistent snapshot delete implementation in #54705\nsmaller.", "committedDate": "2020-04-07T08:52:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzODM5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r404838391", "bodyText": "Shouldn't it be always hasSize(0) when waitForSnapshot is true?", "author": "tlrx", "createdAt": "2020-04-07T14:09:14Z", "path": "server/src/test/java/org/elasticsearch/snapshots/SnapshotResiliencyTests.java", "diffHunk": "@@ -407,6 +408,49 @@ public void testSnapshotWithNodeDisconnects() {\n         assertThat(snapshotIds, hasSize(1));\n     }\n \n+    public void testSnapshotDeleteWithMasterFailOvers() {\n+        final int dataNodes = randomIntBetween(2, 10);\n+        final int masterNodes = randomFrom(3, 5);\n+        setupTestCluster(masterNodes, dataNodes);\n+\n+        String repoName = \"repo\";\n+        String snapshotName = \"snapshot\";\n+        final String index = \"test\";\n+        final int shards = randomIntBetween(1, 10);\n+\n+        final boolean waitForSnapshot = randomBoolean();\n+        final StepListener<CreateSnapshotResponse> createSnapshotResponseStepListener = new StepListener<>();\n+        continueOrDie(createRepoAndIndex(repoName, index, shards), createIndexResponse ->\n+            testClusterNodes.randomMasterNodeSafe().client.admin().cluster().prepareCreateSnapshot(repoName, snapshotName)\n+                .setWaitForCompletion(waitForSnapshot).execute(createSnapshotResponseStepListener));\n+\n+        final AtomicBoolean snapshotDeleteResponded = new AtomicBoolean(false);\n+        continueOrDie(createSnapshotResponseStepListener, createSnapshotResponse -> {\n+            scheduleNow(this::disconnectOrRestartMasterNode);\n+            testClusterNodes.randomDataNodeSafe().client.admin().cluster()\n+                .prepareDeleteSnapshot(repoName, snapshotName).execute(ActionListener.wrap(() -> snapshotDeleteResponded.set(true)));\n+        });\n+\n+        runUntil(() -> testClusterNodes.randomMasterNode().map(master -> {\n+            if (snapshotDeleteResponded.get() == false) {\n+                return false;\n+            }\n+            final SnapshotDeletionsInProgress snapshotDeletionsInProgress =\n+                master.clusterService.state().custom(SnapshotDeletionsInProgress.TYPE);\n+            return snapshotDeletionsInProgress == null || snapshotDeletionsInProgress.getEntries().isEmpty();\n+        }).orElse(false), TimeUnit.MINUTES.toMillis(1L));\n+\n+        clearDisruptionsAndAwaitSync();\n+\n+        final TestClusterNodes.TestClusterNode randomMaster = testClusterNodes.randomMasterNode()\n+            .orElseThrow(() -> new AssertionError(\"expected to find at least one active master node\"));\n+        SnapshotsInProgress finalSnapshotsInProgress = randomMaster.clusterService.state().custom(SnapshotsInProgress.TYPE);\n+        assertThat(finalSnapshotsInProgress.entries(), empty());\n+        final Repository repository = randomMaster.repositoriesService.repository(repoName);\n+        Collection<SnapshotId> snapshotIds = getRepositoryData(repository).getSnapshotIds();\n+        assertThat(snapshotIds, either(hasSize(1)).or(hasSize(0)));", "originalCommit": "7c34b37b11aec1978959713ee1315341be171425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg0MDc5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r404840797", "bodyText": "Right :) I shouldn't have mindlessly copied that from the concurrent snapshots branch.  Thanks for spotting :)", "author": "original-brownbear", "createdAt": "2020-04-07T14:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzMjcwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r404932705", "bodyText": "As a matter of fact, thanks to recent fixes this is always 0. Even on master fail-over the deletes are now properly retried :) Adjusted tests accordingly. Interestingly enough, this created one strange spot for one, one in a million seed where the cleanup logic would take multiple minutes to complete on the fake threadpool (so it's just fake minutes) but still interesting => that's why I had to up the timeout there.\nI'm investigating why that is now.", "author": "original-brownbear", "createdAt": "2020-04-07T16:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5OTgxMg==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r405499812", "bodyText": "@tlrx This was a really stupid bug ... forgot to start the node connections service. This had some strange side effects since it resulted in some transport handlers never failing, causing some CS publications on the failing over master to never complete, causing this test to only move on once the failing master was again removed from the cluster after the 1.5m publication timeout ... behaves much better now.\nShould be good for review with 3370c84 now :)", "author": "original-brownbear", "createdAt": "2020-04-08T12:51:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMzYyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r406013621", "bodyText": "LGTM :) Thanks Armin", "author": "tlrx", "createdAt": "2020-04-09T07:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzODM5MQ=="}], "type": "inlineReview"}, {"oid": "c88dff7ce779351c2c0a8e427118584e01373be5", "url": "https://github.com/elastic/elasticsearch/commit/c88dff7ce779351c2c0a8e427118584e01373be5", "message": "Merge remote-tracking branch 'elastic/master' into add-snapshot-delete-master-failover-test", "committedDate": "2020-04-07T14:09:51Z", "type": "commit"}, {"oid": "1ca65174b3f0b132921619666d4dc42f17a45fac", "url": "https://github.com/elastic/elasticsearch/commit/1ca65174b3f0b132921619666d4dc42f17a45fac", "message": "tricky business", "committedDate": "2020-04-07T14:41:38Z", "type": "commit"}, {"oid": "50088b6622cc1df39b03632f436ab3f5ab91647d", "url": "https://github.com/elastic/elasticsearch/commit/50088b6622cc1df39b03632f436ab3f5ab91647d", "message": "We never leave any snapshots", "committedDate": "2020-04-07T16:07:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzMzM3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r404933377", "bodyText": "I'm investigating why this is taking so long, until then upping the value here to because even though I found a seed that fails here now I bet there's one where this could fail in one of the other master failover tests.", "author": "original-brownbear", "createdAt": "2020-04-07T16:10:46Z", "path": "server/src/test/java/org/elasticsearch/snapshots/SnapshotResiliencyTests.java", "diffHunk": "@@ -266,7 +267,7 @@ public void verifyReposThenStopServices() {\n             final AtomicBoolean cleanedUp = new AtomicBoolean(false);\n             continueOrDie(cleanupResponse, r -> cleanedUp.set(true));\n \n-            runUntil(cleanedUp::get, TimeUnit.MINUTES.toMillis(1L));\n+            runUntil(cleanedUp::get, TimeUnit.MINUTES.toMillis(5L));", "originalCommit": "50088b6622cc1df39b03632f436ab3f5ab91647d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e7444b3e0a75b7be6dae254f6b47f2e7bf71e631", "url": "https://github.com/elastic/elasticsearch/commit/e7444b3e0a75b7be6dae254f6b47f2e7bf71e631", "message": "Merge remote-tracking branch 'elastic/master' into add-snapshot-delete-master-failover-test", "committedDate": "2020-04-08T09:21:20Z", "type": "commit"}, {"oid": "3370c84c53249d81414e2ee29900d6537e7b713a", "url": "https://github.com/elastic/elasticsearch/commit/3370c84c53249d81414e2ee29900d6537e7b713a", "message": "start node connections service", "committedDate": "2020-04-08T12:48:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMDMzMA==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r405600330", "bodyText": "Should we also call close in the stop method?", "author": "ywelsch", "createdAt": "2020-04-08T15:12:11Z", "path": "server/src/test/java/org/elasticsearch/snapshots/SnapshotResiliencyTests.java", "diffHunk": "@@ -1477,10 +1525,9 @@ public void start(ClusterState initialState) {\n                     new BatchedRerouteService(clusterService, allocationService::reroute), ElectionStrategy.DEFAULT_INSTANCE);\n                 masterService.setClusterStatePublisher(coordinator);\n                 coordinator.start();\n-                masterService.start();\n-                clusterService.getClusterApplierService().setNodeConnectionsService(\n-                    new NodeConnectionsService(clusterService.getSettings(), threadPool, transportService));\n-                clusterService.getClusterApplierService().start();\n+                clusterService.getClusterApplierService().setNodeConnectionsService(nodeConnectionsService);\n+                nodeConnectionsService.start();", "originalCommit": "3370c84c53249d81414e2ee29900d6537e7b713a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3NTg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r405675868", "bodyText": "Yea let's do it to prevent stray connection checks.", "author": "original-brownbear", "createdAt": "2020-04-08T17:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMDMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/54866#discussion_r405602722", "bodyText": "Failover", "author": "ywelsch", "createdAt": "2020-04-08T15:15:23Z", "path": "server/src/test/java/org/elasticsearch/snapshots/SnapshotResiliencyTests.java", "diffHunk": "@@ -407,6 +408,49 @@ public void testSnapshotWithNodeDisconnects() {\n         assertThat(snapshotIds, hasSize(1));\n     }\n \n+    public void testSnapshotDeleteWithMasterFailOvers() {", "originalCommit": "3370c84c53249d81414e2ee29900d6537e7b713a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9873a89895553aaa7a1c558e23e9017855c330ca", "url": "https://github.com/elastic/elasticsearch/commit/9873a89895553aaa7a1c558e23e9017855c330ca", "message": "Merge remote-tracking branch 'elastic/master' into add-snapshot-delete-master-failover-test", "committedDate": "2020-04-08T16:45:00Z", "type": "commit"}, {"oid": "0e3f3ebbb742b8bc145192c6d3a2f48f1a43f75a", "url": "https://github.com/elastic/elasticsearch/commit/0e3f3ebbb742b8bc145192c6d3a2f48f1a43f75a", "message": "CR comments", "committedDate": "2020-04-08T16:53:37Z", "type": "commit"}]}