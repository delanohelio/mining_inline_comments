{"pr_number": 52073, "pr_title": "Allow forcemerge in the hot phase for ILM policies", "pr_createdAt": "2020-02-07T18:23:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52073", "timeline": [{"oid": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f", "url": "https://github.com/elastic/elasticsearch/commit/abadba95e21f41ec3f12d06dcff6ddadf9a4123f", "message": "Allow forcemerge in the hot phase for ILM policies\n\nThis commit changes the `forcemerge` action to also be allowed in the `hot` phase for policies. The\nforcemerge will occur after a rollover, and allows users to take advantage of higher disk speeds for\nperforming the force merge (on a separate node type, for example).\n\nOn caveat with this is that a `forcemerge` in the `hot` phase *MUST* be accompanied by a `rollover`\naction. ILM validates policies to ensure this is the case.\n\nResolves #43165", "committedDate": "2020-02-07T18:19:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3ODE5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376578198", "bodyText": "Would it be a bit faster to validate when generating the random policy that if we added forcemerge we will add rollover?", "author": "andreidan", "createdAt": "2020-02-07T19:54:36Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/LifecyclePolicyTests.java", "diffHunk": "@@ -145,6 +146,24 @@ public static LifecyclePolicy randomTimeseriesLifecyclePolicyWithAllPhases(@Null\n     }\n \n     public static LifecyclePolicy randomTimeseriesLifecyclePolicy(@Nullable String lifecycleName) {\n+        LifecyclePolicy policy = null;\n+\n+        // Keep generating a random policy until it passes the validation,\n+        // ignoring known specific invalid states\n+        while (policy == null) {", "originalCommit": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDgyMw==", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376584823", "bodyText": "+1 for @andreidan idea, currently we risk potentially very long running tests (or random timeouts) if we can't generate correct policy", "author": "probakowski", "createdAt": "2020-02-07T20:10:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3ODE5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzM2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376583363", "bodyText": "Can be simplified slightly:\nif (phases.stream()\n    // Is there a hot phase\n    .filter(phase -> HOT_PHASE.equals(phase.getName()))\n    // That contains the 'forcemerge' action\n    .filter(phase -> phase.getActions().containsKey(ForceMergeAction.NAME))\n    // But does *not* contain the 'rollover' action?\n    .anyMatch(phase -> phase.getActions().containsKey(RolloverAction.NAME) == false)) {\n    // If there is, throw an exception\n    throw new IllegalArgumentException(\"the [\" + ForceMergeAction.NAME +\n        \"] action may not be used in the [\" + HOT_PHASE +\n        \"] phase without an accompanying [\" + RolloverAction.NAME + \"] action\");\n}", "author": "probakowski", "createdAt": "2020-02-07T20:06:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -195,5 +200,21 @@ public void validate(Collection<Phase> phases) {\n                 }\n             });\n         });\n+\n+        // Check for forcemerge in 'hot' without a rollover action\n+        phases.stream()\n+            // Is there a hot phase\n+            .filter(phase -> HOT_PHASE.equals(phase.getName()))\n+            // That contains the 'forcemerge' action\n+            .filter(phase -> phase.getActions().containsKey(ForceMergeAction.NAME))\n+            // But does *not* contain the 'rollover' action?\n+            .filter(phase -> phase.getActions().containsKey(RolloverAction.NAME) == false)\n+            // If there is, throw an exception\n+            .findAny()\n+            .ifPresent(phase -> {\n+                throw new IllegalArgumentException(\"the [\" + ForceMergeAction.NAME +\n+                    \"] action may not be used in the [\" + phase.getName() +\n+                    \"] phase without an accompanying [\" + RolloverAction.NAME + \"] action\");", "originalCommit": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a64757c0e77307cdf516e63ddb1bf29ded897aa3", "url": "https://github.com/elastic/elasticsearch/commit/a64757c0e77307cdf516e63ddb1bf29ded897aa3", "message": "Use anyMatch instead of findAny in validation", "committedDate": "2020-02-07T21:12:17Z", "type": "commit"}, {"oid": "705f39b430b14589aa181bc3744d504882b7aad8", "url": "https://github.com/elastic/elasticsearch/commit/705f39b430b14589aa181bc3744d504882b7aad8", "message": "Make randomTimeseriesLifecyclePolicy single-pass", "committedDate": "2020-02-07T21:16:01Z", "type": "commit"}]}