{"pr_number": 55163, "pr_title": "[ML] Fixing inference stats race condition", "pr_createdAt": "2020-04-14T14:48:51Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55163", "timeline": [{"oid": "f7b30fce203247159dd0ef0db97328b81c064543", "url": "https://github.com/elastic/elasticsearch/commit/f7b30fce203247159dd0ef0db97328b81c064543", "message": "[ML] Fixing inference stats race condition", "committedDate": "2020-04-14T14:09:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNjQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r408206445", "bodyText": "Why is this lock() statement inside the try block?", "author": "przemekwitek", "createdAt": "2020-04-14T14:59:51Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,24 +234,67 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            try {\n+                readWriteLock.readLock().lock();", "originalCommit": "f7b30fce203247159dd0ef0db97328b81c064543", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwODg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r408208889", "bodyText": "There is only one place where this method is called so I think it could be inlined there.", "author": "przemekwitek", "createdAt": "2020-04-14T15:02:54Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,24 +234,67 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            try {\n+                readWriteLock.readLock().lock();\n+                this.failureCountAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n-        public InferenceStats currentStats() {\n+        private InferenceStats currentStats() {", "originalCommit": "f7b30fce203247159dd0ef0db97328b81c064543", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ace801179da58ba3d0dc185cf926c11fc2682b50", "url": "https://github.com/elastic/elasticsearch/commit/ace801179da58ba3d0dc185cf926c11fc2682b50", "message": "attempting to address race conditions and adding some logging", "committedDate": "2020-04-14T19:05:18Z", "type": "commit"}, {"oid": "9bf4dfe39e99f093a82876cfffbd2570578a2b7e", "url": "https://github.com/elastic/elasticsearch/commit/9bf4dfe39e99f093a82876cfffbd2570578a2b7e", "message": "waiting for yellow on write alias", "committedDate": "2020-04-14T20:22:10Z", "type": "commit"}, {"oid": "e3932f9dfd2dbcef7a7b6bc210e6fc735ab360dc", "url": "https://github.com/elastic/elasticsearch/commit/e3932f9dfd2dbcef7a7b6bc210e6fc735ab360dc", "message": "verifying the indices exist (hopefully)", "committedDate": "2020-04-15T12:27:41Z", "type": "commit"}, {"oid": "bdca9cb60901fece22f3ed8bf09a1508de30b997", "url": "https://github.com/elastic/elasticsearch/commit/bdca9cb60901fece22f3ed8bf09a1508de30b997", "message": "remove unused import", "committedDate": "2020-04-15T12:49:19Z", "type": "commit"}, {"oid": "16461ef827f6bec3940f62cd735ce33bbe0746d7", "url": "https://github.com/elastic/elasticsearch/commit/16461ef827f6bec3940f62cd735ce33bbe0746d7", "message": "ignoring bad index creation", "committedDate": "2020-04-15T15:50:00Z", "type": "commit"}, {"oid": "89e967b673d82fd98d6d72b836f4fb9652d4cb25", "url": "https://github.com/elastic/elasticsearch/commit/89e967b673d82fd98d6d72b836f4fb9652d4cb25", "message": "Merge branch 'master' into feature/ml-inference-stats-race", "committedDate": "2020-04-15T15:57:27Z", "type": "commit"}, {"oid": "f922584dd99bb9d5a02fb1d3730b49bd5f050fa4", "url": "https://github.com/elastic/elasticsearch/commit/f922584dd99bb9d5a02fb1d3730b49bd5f050fa4", "message": "separating out model names", "committedDate": "2020-04-15T19:40:50Z", "type": "commit"}, {"oid": "aa3957c4cbe754a87d3f24717f472919e4b4d460", "url": "https://github.com/elastic/elasticsearch/commit/aa3957c4cbe754a87d3f24717f472919e4b4d460", "message": "cleaning up statts indexer", "committedDate": "2020-04-16T11:41:33Z", "type": "commit"}, {"oid": "4e4f8fd1cc7e65d5ce61559550588ddef853335e", "url": "https://github.com/elastic/elasticsearch/commit/4e4f8fd1cc7e65d5ce61559550588ddef853335e", "message": "flush stats when model is no longer referenced", "committedDate": "2020-04-16T16:09:18Z", "type": "commit"}, {"oid": "69550e97c5667b571b9d2e5ca94ea1ebc131a4c0", "url": "https://github.com/elastic/elasticsearch/commit/69550e97c5667b571b9d2e5ca94ea1ebc131a4c0", "message": "removing debug logging", "committedDate": "2020-04-17T11:23:08Z", "type": "commit"}, {"oid": "8176efc9284e3affd3f7dc584b0ae828c1115788", "url": "https://github.com/elastic/elasticsearch/commit/8176efc9284e3affd3f7dc584b0ae828c1115788", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-inference-stats-race", "committedDate": "2020-04-17T11:23:22Z", "type": "commit"}, {"oid": "008e73821a7204684c841870c970d9ba1486b7db", "url": "https://github.com/elastic/elasticsearch/commit/008e73821a7204684c841870c970d9ba1486b7db", "message": "removing unused import + variable", "committedDate": "2020-04-17T11:28:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3ODg0OA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410178848", "bodyText": "nit: make public InferenceStats currentStats(Instant timeStamp) private as it is only called here and not protected by the lock otherwise", "author": "davidkyle", "createdAt": "2020-04-17T12:06:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,22 +234,52 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.failureCountAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n-        public InferenceStats currentStats() {\n-            return currentStats(Instant.now());\n+        /**\n+         * Thread safe.\n+         *\n+         * Returns the current stats and resets the values of all the counters.\n+         * @return The current stats\n+         */\n+        public InferenceStats currentStatsAndReset() {\n+            readWriteLock.writeLock().lock();\n+            try {\n+                InferenceStats stats = currentStats(Instant.now());", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyOTIwMg==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410229202", "bodyText": "Actually, it is thread safe and it is used in the stats service.\ngetting the longValue without resetting is perfectly safe. Its guaranteed to get the latest count on the stats.\nAnd since where it is used, no more updates are occurring, it should be safe.", "author": "benwtrent", "createdAt": "2020-04-17T13:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3ODg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MTU1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410181556", "bodyText": "nit: rename method createBothModels()  -> setLogging() or setup() as no longer creating models here", "author": "davidkyle", "createdAt": "2020-04-17T12:12:42Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -44,16 +46,19 @@\n \n     private static final String BASIC_AUTH_VALUE_SUPER_USER =\n         basicAuthHeaderValue(\"x_pack_rest_user\", SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING);\n+    private List<String> createdModels = new ArrayList<>();\n \n     @Before\n     public void createBothModels() throws Exception {\n-        Request request = new Request(\"PUT\", \"_ml/inference/test_classification\");", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyNjIzMA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410226230", "bodyText": "yep yep!", "author": "benwtrent", "createdAt": "2020-04-17T13:35:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MTU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MTcyOA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410181728", "bodyText": "\ud83d\udc4d", "author": "davidkyle", "createdAt": "2020-04-17T12:13:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "diffHunk": "@@ -267,10 +266,6 @@ private void writeHeaderRecord(DataFrameDataExtractor dataExtractor, AnalyticsPr\n         process.writeRecord(headerRecord);\n     }\n \n-    private void indexDataCounts(DataCounts dataCounts) {", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM4MA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410185380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (stats.hasStats() == false) {\n          \n          \n            \n                        if (flush) {\n          \n          \n            \n                            threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                        }\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n          \n          \n            \n                        (k, previousStats) -> previousStats == null ?\n          \n          \n            \n                            stats :\n          \n          \n            \n                            InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n          \n          \n            \n                    if (flush) {\n          \n          \n            \n                        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                    }\n          \n          \n            \n                    if (stats.hasStats()) {        \n          \n          \n            \n                        statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n          \n          \n            \n                            (k, previousStats) -> previousStats == null ?\n          \n          \n            \n                                stats :\n          \n          \n            \n                                InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n          \n          \n            \n                    }        \n          \n          \n            \n                    if (flush) {\n          \n          \n            \n                        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                    }", "author": "davidkyle", "createdAt": "2020-04-17T12:20:47Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -97,11 +103,26 @@ public void beforeStop() {\n         clusterService.addListener((event) -> this.clusterState = event.state());\n     }\n \n-    public void queueStats(InferenceStats stats) {\n+    /**\n+     * Queues the stats for storing.\n+     * @param stats The stats to store or increment\n+     * @param flush When `true`, this indicates that stats should be written as soon as possible.\n+     *              If `false`, stats are not persisted until the next periodic persistence action.\n+     */\n+    public void queueStats(InferenceStats stats, boolean flush) {\n+        if (stats.hasStats() == false) {\n+            if (flush) {\n+                threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n+            }\n+            return;\n+        }\n         statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n             (k, previousStats) -> previousStats == null ?\n                 stats :\n                 InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n+        if (flush) {\n+            threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n+        }", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNDkwMA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410204900", "bodyText": "2 threads could be calling updateStats at the same time, one invoked here and the other from the the scheduler. Is that safe? Both threads will be iterating and removing entries from the map, maybe use an iterator on the entrySet", "author": "davidkyle", "createdAt": "2020-04-17T12:59:01Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -97,11 +103,26 @@ public void beforeStop() {\n         clusterService.addListener((event) -> this.clusterState = event.state());\n     }\n \n-    public void queueStats(InferenceStats stats) {\n+    /**\n+     * Queues the stats for storing.\n+     * @param stats The stats to store or increment\n+     * @param flush When `true`, this indicates that stats should be written as soon as possible.\n+     *              If `false`, stats are not persisted until the next periodic persistence action.\n+     */\n+    public void queueStats(InferenceStats stats, boolean flush) {\n+        if (stats.hasStats() == false) {\n+            if (flush) {\n+                threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyNTkyOA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410225928", "bodyText": "It should be safe. I make a copy of the entry set and iterate removals. If the key does not exist, it would return null. So, only one of the two threads would end up having the update.", "author": "benwtrent", "createdAt": "2020-04-17T13:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzMzIwMg==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410233202", "bodyText": "More verbose reply.\nThe iteration code is here:\nSet<String> keys = new HashSet<>(statsQueue.keySet());\nfor(String k : keys) {\n    InferenceStats inferenceStats = statsQueue.remove(k);\n    if (inferenceStats != null) {\n        stats.add(inferenceStats);\n    }\n}\n\nThis gets the latest known view of the keySet and makes a copy. This way if keys are added AFTER the remove, it does not double count the stats (I think the keySet view is updated when keys are added...so I opted to not use it directly in iteration).\nconcurrent map remove is thread safe. So if one thread removes an item from the hashmap, the other thread won't see it and get null. So, it won't add it to its request payload.", "author": "benwtrent", "createdAt": "2020-04-17T13:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM0NjkwMw==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410346903", "bodyText": "\ud83d\udc4d it was the double removal I was worried about", "author": "davidkyle", "createdAt": "2020-04-17T16:50:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNDkwMA=="}], "type": "inlineReview"}, {"oid": "2aa965f328302b5d5b03a332e5852ec7d085e8de", "url": "https://github.com/elastic/elasticsearch/commit/2aa965f328302b5d5b03a332e5852ec7d085e8de", "message": "addressing PR comments", "committedDate": "2020-04-17T14:40:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODc4MA==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410258780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }),anyBoolean());\n          \n          \n            \n                    }), anyBoolean());", "author": "przemekwitek", "createdAt": "2020-04-17T14:25:53Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/inference/loadingservice/LocalModelTests.java", "diffHunk": "@@ -273,7 +274,7 @@ public void testInferPersistsStatsAfterNumberOfCalls() throws Exception {\n             public boolean matches(Object o) {\n                 return ((InferenceStats)o).getInferenceCount() == 99L;\n             }\n-        }));\n+        }),anyBoolean());", "originalCommit": "008e73821a7204684c841870c970d9ba1486b7db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MDM5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410270393", "bodyText": "s/pathalogical/pathological/", "author": "przemekwitek", "createdAt": "2020-04-17T14:43:35Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -64,19 +68,33 @@ protected Settings restClientSettings() {\n     @After\n     public void cleanUpData() throws Exception {\n         new MlRestTestStateCleaner(logger, adminClient()).clearMlMetadata();\n+        client().performRequest(new Request(\"DELETE\", InferenceIndexConstants.INDEX_PATTERN));\n+        client().performRequest(new Request(\"DELETE\", MlStatsIndex.indexPattern()));\n+        Request loggingSettings = new Request(\"PUT\", \"_cluster/settings\");\n+        loggingSettings.setJsonEntity(\"\" +\n+            \"{\" +\n+            \"\\\"transient\\\" : {\\n\" +\n+            \"        \\\"logger.org.elasticsearch.xpack.ml.inference\\\" : null\\n\" +\n+            \"    }\" +\n+            \"}\");\n+        client().performRequest(loggingSettings);\n         ESRestTestCase.waitForPendingTasks(adminClient());\n-        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_classification\"));\n-        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_regression\"));\n     }\n \n     public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n+        String classificationModelId = \"test_pathalogical_classification\";", "originalCommit": "2aa965f328302b5d5b03a332e5852ec7d085e8de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MzI1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410273251", "bodyText": "I think you could replace it with IndicesOptions.LENIENT_EXPAND_OPEN_HIDDEN", "author": "przemekwitek", "createdAt": "2020-04-17T14:48:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -153,12 +175,47 @@ void updateStats() {\n         if (bulkRequest.requests().isEmpty()) {\n             return;\n         }\n+        if (stopped) {\n+            return;\n+        }\n         resultsPersisterService.bulkIndexWithRetry(bulkRequest,\n             stats.stream().map(InferenceStats::getModelId).collect(Collectors.joining(\",\")),\n             () -> stopped == false,\n             (msg) -> {});\n     }\n \n+    private static boolean verifyIndicesPrimaryShardsAreActive(ClusterState clusterState, IndexNameExpressionResolver expressionResolver) {\n+        String[] indices = expressionResolver.concreteIndexNames(clusterState,\n+            new IndicesOptions(", "originalCommit": "2aa965f328302b5d5b03a332e5852ec7d085e8de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33d4ca7e82d0957c6bfb06f149cbb035810019e8", "url": "https://github.com/elastic/elasticsearch/commit/33d4ca7e82d0957c6bfb06f149cbb035810019e8", "message": "addressing pr comments", "committedDate": "2020-04-17T15:13:11Z", "type": "commit"}, {"oid": "419be4c841164edd065f93e7f844a14241d8f0c8", "url": "https://github.com/elastic/elasticsearch/commit/419be4c841164edd065f93e7f844a14241d8f0c8", "message": "fixing unused import", "committedDate": "2020-04-17T15:18:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MzgyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r411183829", "bodyText": "Shouldn't this \"catch\" clause call \"Assert.fail()\"?\nIf it doesn't I think the whole block won't be retried when the ResponseException happens...", "author": "przemekwitek", "createdAt": "2020-04-20T08:18:09Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -94,13 +112,29 @@ public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n                     QueryBuilders.existsQuery(\"ml.inference.classification.predicted_value\"))));\n \n         assertThat(EntityUtils.toString(searchResponse.getEntity()), containsString(\"\\\"value\\\":10\"));\n+        assertBusy(() -> {\n+            try {\n+                Response statsResponse = client().performRequest(new Request(\"GET\",\n+                    \"_ml/inference/\" + classificationModelId + \"/_stats\"));\n+                assertThat(EntityUtils.toString(statsResponse.getEntity()), containsString(\"\\\"inference_count\\\":10\"));\n+                statsResponse = client().performRequest(new Request(\"GET\", \"_ml/inference/\" + regressionModelId + \"/_stats\"));\n+                assertThat(EntityUtils.toString(statsResponse.getEntity()), containsString(\"\\\"inference_count\\\":10\"));\n+            } catch (ResponseException ex) {\n+                //this could just mean shard failures.", "originalCommit": "419be4c841164edd065f93e7f844a14241d8f0c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2480e75150e7795dd1334db376ef16f08d4045dc", "url": "https://github.com/elastic/elasticsearch/commit/2480e75150e7795dd1334db376ef16f08d4045dc", "message": "Merge branch 'master' into feature/ml-inference-stats-race", "committedDate": "2020-04-20T11:43:34Z", "type": "commit"}, {"oid": "a5ef177d78ce6820ea92976e51ac5f56ef844085", "url": "https://github.com/elastic/elasticsearch/commit/a5ef177d78ce6820ea92976e51ac5f56ef844085", "message": "addressing PR comments", "committedDate": "2020-04-20T11:45:18Z", "type": "commit"}, {"oid": "969ad44c4542a1cdac425867733716ee7ff0b364", "url": "https://github.com/elastic/elasticsearch/commit/969ad44c4542a1cdac425867733716ee7ff0b364", "message": "Merge branch 'master' into feature/ml-inference-stats-race", "committedDate": "2020-04-20T16:44:58Z", "type": "commit"}, {"oid": "28ba96ccfeac19335fd99eddfe4e25f64e92c44f", "url": "https://github.com/elastic/elasticsearch/commit/28ba96ccfeac19335fd99eddfe4e25f64e92c44f", "message": "fixing test", "committedDate": "2020-04-20T18:06:06Z", "type": "commit"}, {"oid": "0b487362b6f9ebb6fed9e2bb108c0ad5e2cf4f26", "url": "https://github.com/elastic/elasticsearch/commit/0b487362b6f9ebb6fed9e2bb108c0ad5e2cf4f26", "message": "Merge branch 'master' into feature/ml-inference-stats-race", "committedDate": "2020-04-20T18:32:47Z", "type": "commit"}]}