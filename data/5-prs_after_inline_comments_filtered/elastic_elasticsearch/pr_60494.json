{"pr_number": 60494, "pr_title": "Avoid reloading _source for every inner hit.", "pr_createdAt": "2020-07-31T02:17:54Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60494", "timeline": [{"oid": "b00db97e890fe150a54aa138bfb230513783f743", "url": "https://github.com/elastic/elasticsearch/commit/b00db97e890fe150a54aa138bfb230513783f743", "message": "Avoid reloading _source for every inner hit.\n\nPreviously if an inner_hits block required _ source, we would reload and parse\nthe root document's source for every hit. This PR adds a shared SourceLookup to\nthe inner hits context that allows inner hits to reuse parsed source if it's\nalready available. This matches our approach for sharing the root document ID.", "committedDate": "2020-07-31T16:34:50Z", "type": "commit"}, {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "url": "https://github.com/elastic/elasticsearch/commit/f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "message": "Add javadoc to InnerHitsContext.", "committedDate": "2020-07-31T16:54:36Z", "type": "commit"}, {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "url": "https://github.com/elastic/elasticsearch/commit/f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "message": "Add javadoc to InnerHitsContext.", "committedDate": "2020-07-31T16:54:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r463723631", "bodyText": "This felt a bit hacky. We take a similar strategy in FetchSourceContext#getFilter.", "author": "jtibshirani", "createdAt": "2020-07-31T16:58:04Z", "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "originalCommit": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2MDc0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r464660746", "bodyText": "I think it's still hacky but slightly better.\nThere should be a way to share a state in FetchSubPhase#hitExecute though.\nIf we plan to use hitExecute more, maybe we should provide a way to  share a state between hits ?\nA factory could help for instance:\nFunction<SearchContext, FetchSubPhase> fetchSubPhase;", "author": "jimczi", "createdAt": "2020-08-03T21:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NTI3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r464695275", "bodyText": "This is a good idea, I do think we'll need a mechanism like this as we convert more phases to use hitExecute.", "author": "jtibshirani", "createdAt": "2020-08-03T22:29:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ=="}], "type": "inlineReview"}]}