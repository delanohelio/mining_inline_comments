{"pr_number": 56917, "pr_title": "SQL: JDBC: fix temporary directory locked test errors in Windows", "pr_createdAt": "2020-05-18T17:19:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56917", "timeline": [{"oid": "b6c5f74fb762666869c430ea9655ae0c6a35176c", "url": "https://github.com/elastic/elasticsearch/commit/b6c5f74fb762666869c430ea9655ae0c6a35176c", "message": "Fix temp dir locked errors\n\nThe tests involving a temporary directory (containing the JDBC JAR) fail\non Windows because they can't be deleted, due to still being in use.\nThis commit forces a premature closing of the JAR file, which mitigates\nthe failure by giving the JVM more time to collect any open FDs.\n(Calling the System.gc() in the tests is another working alternative\nfix.)\n\nThe stream-based JAR access is taken care by disabling the cache usage", "committedDate": "2020-05-18T17:09:28Z", "type": "commit"}, {"oid": "11994c9062733f1365376762d4b3650807000332", "url": "https://github.com/elastic/elasticsearch/commit/11994c9062733f1365376762d4b3650807000332", "message": "Fix style errors\n\n- supress JarFile usage warning\n- remove unused import", "committedDate": "2020-05-18T18:03:20Z", "type": "commit"}, {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "url": "https://github.com/elastic/elasticsearch/commit/6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "message": "Address review comments\n\nWrap closing the JAR into a try-block, ignore any failure caused by\nit: we can continue for as long as we've got the Manifest", "committedDate": "2020-05-19T07:41:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODA2NA==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427148064", "bodyText": "Maybe we should log here, since this is not only for testing.", "author": "matriv", "createdAt": "2020-05-19T09:07:34Z", "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now\n+                    } catch (IOException e) {/* ignore any closing failure */}", "originalCommit": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2MTQzNg==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427261436", "bodyText": "We could, but where: the CLI client uses java.util.logging, but JDBC uses it's own logging. Would hooking into either just for this warning - since it's not really an error - be justified?", "author": "bpintea", "createdAt": "2020-05-19T12:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDI0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r428030242", "bodyText": "Probably not I guess...", "author": "matriv", "createdAt": "2020-05-20T13:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427148445", "bodyText": "Shouldn't this be in a finally block to return not only in case of exception?", "author": "matriv", "createdAt": "2020-05-19T09:08:09Z", "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now\n+                    } catch (IOException e) {/* ignore any closing failure */}\n+                    return manifest;", "originalCommit": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2MTIwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427261209", "bodyText": "Not sure I get your suggestion: the function returns irrespective of an IOException being raised. Or are you rather suggesting to return a version (in the calling function), also when an IOExceptoin is raised (which we currently propagate into a IllegalArgumentException)?", "author": "bpintea", "createdAt": "2020-05-19T12:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODQ0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MzIwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427293201", "bodyText": "My bad, sorry, misread that the return is within the catch block.", "author": "matriv", "createdAt": "2020-05-19T13:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDMzMg==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427354332", "bodyText": "Here both getJarFile() and .close() can throw an IOException. getManifest() call above does use getJarFile() so the danger of an IOException being thrown while calling getJarFile() wouldn't be ignored, is not justified.\nBut, would make sense to call jarConn.getJarFile() and reuse this object in both getManifest() and .close() calls?", "author": "astefan", "createdAt": "2020-05-19T14:37:49Z", "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now", "originalCommit": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0NDI5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427444292", "bodyText": "why is this .close() needed now, but wasn't needed before?\n\nWe just didn't test with JAR non-entry URLs. The tests were using file (i.e. setting the ClientVersion.CURRENT) and entry JAR URLs (i.e. the JarInJar test).\n\nHere both getJarFile() and .close() can throw an IOException.\n\nTrue. And while the former's exception should surface, the latter (if it can ever occur) is non-critical.\n\nwould make sense to call jarConn.getJarFile() and reuse this object in both getManifest() and .close() calls?\n\nThat exposes a bit more of \"deprecated\" surface and is more verbose, but I see how this would make sense. I've applied your suggestion.", "author": "bpintea", "createdAt": "2020-05-19T16:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDMzMg=="}], "type": "inlineReview"}, {"oid": "6025074fd20e1fcb777d7442b9a711291d3673f4", "url": "https://github.com/elastic/elasticsearch/commit/6025074fd20e1fcb777d7442b9a711291d3673f4", "message": "Address review comments\n\nExtract Jar file out of the connection and work directly with it when\nextracting the manifeset and closing it.", "committedDate": "2020-05-19T16:37:26Z", "type": "commit"}, {"oid": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42", "url": "https://github.com/elastic/elasticsearch/commit/4bb19a0db94a43b2fab6f386644456c5b0ba3f42", "message": "Merge branch 'master' into fix/fix_locked_jar_file_tests", "committedDate": "2020-05-20T08:39:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDk5MA==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427900990", "bodyText": "I suggest using the try/close approach - it's similar but more concise:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                JarFile jar = jarConn.getJarFile();\n          \n          \n            \n            if (jarConn.getEntryName() == null) {\n          \n          \n            \n             try (JarFile jar = jarconn.getJarFile()) {\n          \n          \n            \n                  return jar.getManifest();\n          \n          \n            \n              }\n          \n          \n            \n            }", "author": "costin", "createdAt": "2020-05-20T10:21:09Z", "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +89,12 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    JarFile jar = jarConn.getJarFile();", "originalCommit": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5OTk5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r428099997", "bodyText": "Beautiful, forgot JarFile implements AutoCloseable. Thanks!", "author": "bpintea", "createdAt": "2020-05-20T15:22:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwMTk3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r428101979", "bodyText": "For the record, that will still interrupt the loading if closing fails (while it shouldn't), but OTOH, I can't imagine a case where opening would work, but closing not.", "author": "bpintea", "createdAt": "2020-05-20T15:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDk5MA=="}], "type": "inlineReview"}, {"oid": "395f9af5f83efc53edc4003da812a5374c5f27d2", "url": "https://github.com/elastic/elasticsearch/commit/395f9af5f83efc53edc4003da812a5374c5f27d2", "message": "Address review comments\n\n- make use of JarFile AutoCloseable if'ace (try-with-resources)", "committedDate": "2020-05-20T15:19:51Z", "type": "commit"}]}