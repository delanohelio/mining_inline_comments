{"pr_number": 54673, "pr_title": "ILM wait for snapshot creation to complete", "pr_createdAt": "2020-04-02T18:08:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54673", "timeline": [{"oid": "66264070a1add777ed1aaedbea9286b116445af2", "url": "https://github.com/elastic/elasticsearch/commit/66264070a1add777ed1aaedbea9286b116445af2", "message": "ILM wait for snapshot creation to complete\n\nAs the snapshot is not taken on the calling thread even though the request\nwait_for_completion parameter is true, we can set the flag to true and make\nuse of the response SnapshotInfo to verify the snapshot was created successfully\nor go back to the CleanSnapshotStep and retry creating the snapshot otherwise.\nThis branching is executed using a new step that wraps an AsyncActionStep\n(keeping the wrapped's step key()) and moving to a different next step when\nthe wrapped action reports an incomplete response.", "committedDate": "2020-04-02T18:06:47Z", "type": "commit"}, {"oid": "4ed4e1753045b919b21d87365e57e4b4c19a5cb7", "url": "https://github.com/elastic/elasticsearch/commit/4ed4e1753045b919b21d87365e57e4b4c19a5cb7", "message": "Fix checkstyle", "committedDate": "2020-04-02T18:20:18Z", "type": "commit"}, {"oid": "cbdcb26c0503cb31a8bf48978b834d73c01ff690", "url": "https://github.com/elastic/elasticsearch/commit/cbdcb26c0503cb31a8bf48978b834d73c01ff690", "message": "Fix test", "committedDate": "2020-04-02T19:48:29Z", "type": "commit"}, {"oid": "414f8451f4e2e42bd9a85aacdc9c0d9cadd7bfb7", "url": "https://github.com/elastic/elasticsearch/commit/414f8451f4e2e42bd9a85aacdc9c0d9cadd7bfb7", "message": "Keep wait for completion assertion", "committedDate": "2020-04-02T21:01:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNzMwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54673#discussion_r402607301", "bodyText": "Super minor nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalStateException(\"Cannot call getNextStepKey before performAction\");\n          \n          \n            \n                        throw new IllegalStateException(\"cannot call getNextStepKey before performAction\");", "author": "dakrone", "createdAt": "2020-04-02T21:29:45Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/AsyncActionBranchingStep.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.apache.lucene.util.SetOnce;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This step wraps an {@link AsyncActionStep} in order to be able to manipulate what the next step will be, depending on the result of the\n+ * wrapped {@link AsyncActionStep}.\n+ * <p>\n+ * If the action response is complete, the {@link AsyncActionBranchingStep}'s nextStepKey will be the nextStepKey of the wrapped action. If\n+ * the response is incomplete the nextStepKey will be the provided {@link AsyncActionBranchingStep#nextKeyOnIncompleteResponse}.\n+ * Failures encountered whilst executing the wrapped action will be propagated directly.\n+ */\n+public class AsyncActionBranchingStep extends AsyncActionStep {\n+    private final AsyncActionStep stepToExecute;\n+\n+    private StepKey nextKeyOnIncompleteResponse;\n+    private SetOnce<Boolean> onResponseResult;\n+\n+    public AsyncActionBranchingStep(AsyncActionStep stepToExecute, StepKey nextKeyOnIncompleteResponse, Client client) {\n+        // super.nextStepKey is set to null since it is not used by this step\n+        super(stepToExecute.getKey(), null, client);\n+        this.stepToExecute = stepToExecute;\n+        this.nextKeyOnIncompleteResponse = nextKeyOnIncompleteResponse;\n+        this.onResponseResult = new SetOnce<>();\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentClusterState, ClusterStateObserver observer,\n+                              Listener listener) {\n+        stepToExecute.performAction(indexMetadata, currentClusterState, observer, new Listener() {\n+            @Override\n+            public void onResponse(boolean complete) {\n+                onResponseResult.set(complete);\n+                listener.onResponse(complete);\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+                listener.onFailure(e);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public final StepKey getNextStepKey() {\n+        if (onResponseResult.get() == null) {\n+            throw new IllegalStateException(\"Cannot call getNextStepKey before performAction\");", "originalCommit": "414f8451f4e2e42bd9a85aacdc9c0d9cadd7bfb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9fe27f36068e167f83d9cc3a8af80154b23f76ae", "url": "https://github.com/elastic/elasticsearch/commit/9fe27f36068e167f83d9cc3a8af80154b23f76ae", "message": "Lowercase exception message\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-04-03T07:40:04Z", "type": "commit"}, {"oid": "e9b2e911eb4a6eae6c1d268b2697b003ef8c1dcf", "url": "https://github.com/elastic/elasticsearch/commit/e9b2e911eb4a6eae6c1d268b2697b003ef8c1dcf", "message": "Merge branch 'feature/searchable-snapshots' into ilm-wait-for-snapshot-creation", "committedDate": "2020-04-03T08:47:58Z", "type": "commit"}]}