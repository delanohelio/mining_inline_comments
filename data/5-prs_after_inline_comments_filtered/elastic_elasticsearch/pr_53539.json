{"pr_number": 53539, "pr_title": "[ML] Extend classification to support multiple classes", "pr_createdAt": "2020-03-13T11:52:51Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53539", "timeline": [{"oid": "367cfd654f5c32105c818b9a782a5ee8c3ad6619", "url": "https://github.com/elastic/elasticsearch/commit/367cfd654f5c32105c818b9a782a5ee8c3ad6619", "message": "[ML] Extend classification to support multiple classes\n\nPrepares classification analysis to support more than just\ntwo classes. It introduces a new parameter to the process config\nwhich dictates the `num_classes` to the process. It also\nchanges the max classes limit to `30` provisionally.", "committedDate": "2020-03-13T13:01:23Z", "type": "forcePushed"}, {"oid": "367cfd654f5c32105c818b9a782a5ee8c3ad6619", "url": "https://github.com/elastic/elasticsearch/commit/367cfd654f5c32105c818b9a782a5ee8c3ad6619", "message": "[ML] Extend classification to support multiple classes\n\nPrepares classification analysis to support more than just\ntwo classes. It introduces a new parameter to the process config\nwhich dictates the `num_classes` to the process. It also\nchanges the max classes limit to `30` provisionally.", "committedDate": "2020-03-13T13:01:23Z", "type": "commit"}, {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef", "url": "https://github.com/elastic/elasticsearch/commit/b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef", "message": "We can't test cardinality is too high in the YML tests anymore", "committedDate": "2020-03-13T15:11:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0ODMxNg==", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392848316", "bodyText": "Should 30 become a constant in this class?", "author": "przemekwitek", "createdAt": "2020-03-16T08:22:17Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -272,7 +275,7 @@ public boolean supportsCategoricalFields() {\n     @Override\n     public List<FieldCardinalityConstraint> getFieldCardinalityConstraints() {\n         // This restriction is due to the fact that currently the C++ backend only supports binomial classification.\n-        return Collections.singletonList(FieldCardinalityConstraint.between(dependentVariable, 2, 2));\n+        return Collections.singletonList(FieldCardinalityConstraint.between(dependentVariable, 2, 30));", "originalCommit": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0OTg2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392849866", "bodyText": "Could this test be made to work without muting if you indexed more than 30 distinct values for dep var?", "author": "przemekwitek", "createdAt": "2020-03-16T08:25:23Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java", "diffHunk": "@@ -322,9 +322,11 @@ public void testStopAndRestart() throws Exception {\n         assertEvaluation(KEYWORD_FIELD, KEYWORD_FIELD_VALUES, \"ml.\" + predictedClassField);\n     }\n \n+    @AwaitsFix(bugUrl = \"Muted until ml-cpp supports multiple classes\")", "originalCommit": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NTkxMA==", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392875910", "bodyText": "Yes, I'll do that but after multiclass is wired in ml-cpp", "author": "dimitris-athanasiou", "createdAt": "2020-03-16T09:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0OTg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjM0MA==", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392852340", "bodyText": "Should there be at least one unit test with non-empty map provided to this constructor?", "author": "przemekwitek", "createdAt": "2020-03-16T08:30:32Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/extractor/ExtractedFieldsTests.java", "diffHunk": "@@ -32,7 +32,7 @@ public void testAllTypesOfFields() {\n         ExtractedField sourceField1 = new SourceField(\"src1\", Collections.singleton(\"text\"));\n         ExtractedField sourceField2 = new SourceField(\"src2\", Collections.singleton(\"text\"));\n         ExtractedFields extractedFields = new ExtractedFields(Arrays.asList(\n-                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2));\n+                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2), Collections.emptyMap());", "originalCommit": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NjQ4MA==", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392876480", "bodyText": "There is in AnalyticsProcessConfigTests where this is tested. Testing it here would just test the getter.", "author": "dimitris-athanasiou", "createdAt": "2020-03-16T09:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjM0MA=="}], "type": "inlineReview"}, {"oid": "150dd0e6eda3cd7f04e60c9dc1e11199be41cfaf", "url": "https://github.com/elastic/elasticsearch/commit/150dd0e6eda3cd7f04e60c9dc1e11199be41cfaf", "message": "Extract max number of classes in a constant", "committedDate": "2020-03-16T09:20:43Z", "type": "commit"}]}