{"pr_number": 63416, "pr_title": "Simplify reroute counting in InternalSnapshotsInfoServiceTests", "pr_createdAt": "2020-10-07T15:21:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63416", "timeline": [{"oid": "428e1ac350e66974c510f8ff2df81287244dc9e2", "url": "https://github.com/elastic/elasticsearch/commit/428e1ac350e66974c510f8ff2df81287244dc9e2", "message": "Simplify reroute counting", "committedDate": "2020-10-07T15:15:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4Mjg5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/63416#discussion_r501582891", "bodyText": "I wonder, couldn't we get rid of the busy asserting completely by doing this via a latch (has the slight upside that we verify exact count a little stronger with the assertion on the latch count?)?\ne.g.:\ndiff --git a/server/src/test/java/org/elasticsearch/snapshots/InternalSnapshotsInfoServiceTests.java b/server/src/test/java/org/elasticsearch/snapshots/InternalSnapshotsInfoServiceTests.java\nindex a4483bd5ce2..fdcdcdb013f 100644\n--- a/server/src/test/java/org/elasticsearch/snapshots/InternalSnapshotsInfoServiceTests.java\n+++ b/server/src/test/java/org/elasticsearch/snapshots/InternalSnapshotsInfoServiceTests.java\n@@ -120,12 +120,20 @@ public class InternalSnapshotsInfoServiceTests extends ESTestCase {\n \n     public void testSnapshotShardSizes() throws Exception {\n         final int maxConcurrentFetches = randomIntBetween(1, 10);\n+\n+        final int numberOfShards = randomIntBetween(1, 50);\n+        final CountDownLatch rerouteLatch = new CountDownLatch(numberOfShards);\n+        final RerouteService rerouteService = (reason, priority, listener) -> {\n+            listener.onResponse(clusterService.state());\n+            assertThat(rerouteLatch.getCount(), greaterThanOrEqualTo(0L));\n+            rerouteLatch.countDown();\n+        };\n+\n         final InternalSnapshotsInfoService snapshotsInfoService =\n             new InternalSnapshotsInfoService(Settings.builder()\n                 .put(INTERNAL_SNAPSHOT_INFO_MAX_CONCURRENT_FETCHES_SETTING.getKey(), maxConcurrentFetches)\n                 .build(), clusterService, () -> repositoriesService, () -> rerouteService);\n \n-        final int numberOfShards = randomIntBetween(1, 50);\n         final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         final long[] expectedShardSizes = new long[numberOfShards];\n         for (int i = 0; i < expectedShardSizes.length; i++) {\n@@ -163,12 +171,10 @@ public class InternalSnapshotsInfoServiceTests extends ESTestCase {\n \n         latch.countDown();\n \n-        assertBusy(() -> {\n-            assertThat(snapshotsInfoService.numberOfKnownSnapshotShardSizes(), equalTo(numberOfShards));\n-            assertThat(snapshotsInfoService.numberOfUnknownSnapshotShardSizes(), equalTo(0));\n-            assertThat(snapshotsInfoService.numberOfFailedSnapshotShardSizes(), equalTo(0));\n-        });\n-        verify(rerouteService, times(numberOfShards)).reroute(anyString(), any(Priority.class), any());\n+        assertTrue(rerouteLatch.await(10L, TimeUnit.SECONDS));\n+        assertThat(snapshotsInfoService.numberOfKnownSnapshotShardSizes(), equalTo(numberOfShards));\n+        assertThat(snapshotsInfoService.numberOfUnknownSnapshotShardSizes(), equalTo(0));\n+        assertThat(snapshotsInfoService.numberOfFailedSnapshotShardSizes(), equalTo(0));\n         assertThat(getShardSnapshotStatusCount.get(), equalTo(numberOfShards));\n \n         final SnapshotShardSizeInfo snapshotShardSizeInfo = snapshotsInfoService.snapshotShardSizes();\nJust a suggestion :) this approach looks fine as well.", "author": "original-brownbear", "createdAt": "2020-10-08T09:37:37Z", "path": "server/src/test/java/org/elasticsearch/snapshots/InternalSnapshotsInfoServiceTests.java", "diffHunk": "@@ -120,6 +107,13 @@ public void tearDown() throws Exception {\n \n     public void testSnapshotShardSizes() throws Exception {\n         final int maxConcurrentFetches = randomIntBetween(1, 10);\n+\n+        final AtomicInteger rerouteCount = new AtomicInteger(0);", "originalCommit": "428e1ac350e66974c510f8ff2df81287244dc9e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxNTQ1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/63416#discussion_r501615456", "bodyText": "This is a good suggestion, thanks!", "author": "tlrx", "createdAt": "2020-10-08T10:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4Mjg5MQ=="}], "type": "inlineReview"}, {"oid": "23e9c3d4b984fdd18255a917a3aaed59ec6f91f8", "url": "https://github.com/elastic/elasticsearch/commit/23e9c3d4b984fdd18255a917a3aaed59ec6f91f8", "message": "Simplify reroute counting", "committedDate": "2020-10-08T10:29:48Z", "type": "commit"}]}