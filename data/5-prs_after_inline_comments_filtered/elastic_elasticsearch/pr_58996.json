{"pr_number": 58996, "pr_title": "Simplify parser declarations when specialist types are stored in strings", "pr_createdAt": "2020-07-03T08:13:29Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58996", "timeline": [{"oid": "74368c32c36757c9d79ccc59b67d8756da6a62c8", "url": "https://github.com/elastic/elasticsearch/commit/74368c32c36757c9d79ccc59b67d8756da6a62c8", "message": "Mute failing test DataFrameAnalyticsConfigProviderIT.testUpdate_UpdateCannotBeAppliedWhenTaskIsRunning", "committedDate": "2020-07-01T10:10:39Z", "type": "commit"}, {"oid": "5c1345a0d051188f2957bcc5c20ed4fc57c6ed6a", "url": "https://github.com/elastic/elasticsearch/commit/5c1345a0d051188f2957bcc5c20ed4fc57c6ed6a", "message": "Merge branch 'master' of github.com:elastic/elasticsearch", "committedDate": "2020-07-01T10:29:53Z", "type": "commit"}, {"oid": "9f7feb0a434ee2b619468455799006f50cec710c", "url": "https://github.com/elastic/elasticsearch/commit/9f7feb0a434ee2b619468455799006f50cec710c", "message": "Merge branch 'master' of github.com:elastic/elasticsearch", "committedDate": "2020-07-01T11:30:36Z", "type": "commit"}, {"oid": "f6f56abea6bdd4c8f8de1e1f8df7efbc7eb74ff7", "url": "https://github.com/elastic/elasticsearch/commit/f6f56abea6bdd4c8f8de1e1f8df7efbc7eb74ff7", "message": "Merge branch 'master' of github.com:elastic/elasticsearch", "committedDate": "2020-07-02T07:09:52Z", "type": "commit"}, {"oid": "38ef4fb524a74d2f02e2ee8a3358221d65f84ea7", "url": "https://github.com/elastic/elasticsearch/commit/38ef4fb524a74d2f02e2ee8a3358221d65f84ea7", "message": "Merge branch 'master' of github.com:elastic/elasticsearch", "committedDate": "2020-07-03T08:05:33Z", "type": "commit"}, {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453", "url": "https://github.com/elastic/elasticsearch/commit/965ef9752b1eaec445dc2656bc38aa5605517453", "message": "Implement \"declareStringField\" method and use it to simplify ml parsing code", "committedDate": "2020-07-03T08:44:08Z", "type": "commit"}, {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453", "url": "https://github.com/elastic/elasticsearch/commit/965ef9752b1eaec445dc2656bc38aa5605517453", "message": "Implement \"declareStringField\" method and use it to simplify ml parsing code", "committedDate": "2020-07-03T08:44:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NTg0NA==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449565844", "bodyText": "I thought that this wouldn't get called unless it is on a string because of the ValueType.STRING.", "author": "nik9000", "createdAt": "2020-07-03T12:47:22Z", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {\n+        declareField(\n+            consumer,\n+            p -> {\n+                if (p.currentToken() == XContentParser.Token.VALUE_STRING) {", "originalCommit": "965ef9752b1eaec445dc2656bc38aa5605517453", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NjQ5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449596491", "bodyText": "Indeed, when I passed wrong value type (e.g.: number) to the parser, it failed with:\n  2> org.elasticsearch.common.xcontent.XContentParseException: [1:12] [foo] test doesn't support values of type: VALUE_NUMBER\n        at __randomizedtesting.SeedInfo.seed([FDF3EC059D2820C1:FB42380CBB0B58E0]:0)\n        at org.elasticsearch.common.xcontent.ObjectParser$FieldParser.assertSupports(ObjectParser.java:601)\n        at org.elasticsearch.common.xcontent.ObjectParser.parse(ObjectParser.java:299)\n\ninstead of the exception thrown from inside the lambda.\nUnfortunately, I don't know where this snippet (i.e. if (p.currentToken() == XContentParser.Token.VALUE_STRING)) comes from as it got propagated by copy-pasting many times.\nI've now removed the if block altogether. WDYT?", "author": "przemekwitek", "createdAt": "2020-07-03T13:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NTg0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449567128", "bodyText": "Would you be ok renaming to declareString?", "author": "nik9000", "createdAt": "2020-07-03T12:50:30Z", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {", "originalCommit": "965ef9752b1eaec445dc2656bc38aa5605517453", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5Mjc0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449592742", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-07-03T13:48:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzQyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449567421", "bodyText": "I'd prefer not to have an _ in the method name.", "author": "nik9000", "createdAt": "2020-07-03T12:51:08Z", "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "diffHunk": "@@ -338,6 +338,21 @@ public void set(TestEnum value) {\n         assertEquals(s.test, TestEnum.FOO);\n     }\n \n+    public void testDeclareStringField_ParseEnumFromString() throws IOException {", "originalCommit": "965ef9752b1eaec445dc2656bc38aa5605517453", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NTMxMg==", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449575312", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-07-03T13:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzQyMQ=="}], "type": "inlineReview"}, {"oid": "e9ec61216a60b11f59ea3a6cad6797809eeb7247", "url": "https://github.com/elastic/elasticsearch/commit/e9ec61216a60b11f59ea3a6cad6797809eeb7247", "message": "Apply review comments", "committedDate": "2020-07-03T14:01:15Z", "type": "commit"}]}