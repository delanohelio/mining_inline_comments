{"pr_number": 66596, "pr_title": "EQL: Add key constraints to sequence mechanism", "pr_createdAt": "2020-12-18T13:48:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66596", "timeline": [{"oid": "8ff0bb6e6e8bb67639e226a1e40b51c755008a01", "url": "https://github.com/elastic/elasticsearch/commit/8ff0bb6e6e8bb67639e226a1e40b51c755008a01", "message": "EQL: Add key constraints to sequence mechanism\n\nIf possible, improve search by looking for the already determined keys.\nChange field extraction to use exact fields", "committedDate": "2020-12-18T13:45:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0MjcyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r545842729", "bodyText": "This is a subtle one that otherwise a lot of things don't work. For example grouping a text field should only occur on a keyword.", "author": "costin", "createdAt": "2020-12-18T13:50:41Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/querydsl/container/FieldExtractorRegistry.java", "diffHunk": "@@ -24,14 +24,14 @@\n public class FieldExtractorRegistry {\n \n     private final Map<String, FieldExtraction> cache = new HashMap<>();\n-    \n+\n     public FieldExtraction fieldExtraction(Expression expression) {\n         return cache.computeIfAbsent(Expressions.id(expression), k -> createFieldExtractionFor(expression));\n     }\n \n     private FieldExtraction createFieldExtractionFor(Expression expression) {\n         if (expression instanceof FieldAttribute) {\n-            FieldAttribute fa = (FieldAttribute) expression;\n+            FieldAttribute fa = ((FieldAttribute) expression).exactAttribute();", "originalCommit": "8ff0bb6e6e8bb67639e226a1e40b51c755008a01", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0NzE5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r545947199", "bodyText": "if (ql's CollectionUtils.isEmpty(values)) { and same below with keyFilters?", "author": "bpintea", "createdAt": "2020-12-18T16:31:20Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/BoxedQueryRequest.java", "diffHunk": "@@ -70,6 +90,78 @@ public BoxedQueryRequest to(Ordinal end) {\n         return this;\n     }\n \n+    /**\n+     * Sets keys / terms to filter on.\n+     * Accepts the unwrapped SequenceKey as a list of values matching an instance of a given\n+     * event.\n+     * Can be removed through null.\n+     */\n+    public BoxedQueryRequest keys(List<List<Object>> values) {\n+        List<QueryBuilder> newFilters;\n+\n+        if (values == null || values.isEmpty()) {", "originalCommit": "8ff0bb6e6e8bb67639e226a1e40b51c755008a01", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd152e909f62582191b3f704a1ca1fed74925657", "url": "https://github.com/elastic/elasticsearch/commit/dd152e909f62582191b3f704a1ca1fed74925657", "message": "Merge branch 'master' into eql/filter-terms", "committedDate": "2020-12-21T12:51:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcyODIyNg==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r546728226", "bodyText": "The key here is needed further down after the max_terms size check is performed on keyValues size. You could move the key initialization further down after you initialize the query QueryBuilder with null.", "author": "astefan", "createdAt": "2020-12-21T14:14:27Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/BoxedQueryRequest.java", "diffHunk": "@@ -70,6 +90,78 @@ public BoxedQueryRequest to(Ordinal end) {\n         return this;\n     }\n \n+    /**\n+     * Sets keys / terms to filter on.\n+     * Accepts the unwrapped SequenceKey as a list of values matching an instance of a given\n+     * event.\n+     * Can be removed through null.\n+     */\n+    public BoxedQueryRequest keys(List<List<Object>> values) {\n+        List<QueryBuilder> newFilters;\n+\n+        if (values == null || values.isEmpty()) {\n+            // no keys have been specified and none have been set\n+            if (keyFilters == null || keyFilters.isEmpty()) {\n+                return this;\n+            }\n+            newFilters = emptyList();\n+        }\n+        else {\n+            // iterate on all possible values for a given key\n+            newFilters = new ArrayList<>(values.size());\n+            for (int keyIndex = 0; keyIndex < keys.size(); keyIndex++) {\n+                String key = keys.get(keyIndex);", "originalCommit": "dd152e909f62582191b3f704a1ca1fed74925657", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjczMDg4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r546730886", "bodyText": "else { should be on the same line as the closing curly bracket from the if statement, no?", "author": "astefan", "createdAt": "2020-12-21T14:19:12Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/ExecutionManager.java", "diffHunk": "@@ -65,13 +68,30 @@ public Executable assemble(List<List<Attribute>> listOfKeys,\n         for (int i = 0; i < plans.size(); i++) {\n             List<Attribute> keys = listOfKeys.get(i);\n             List<HitExtractor> keyExtractors = hitExtractors(keys, extractorRegistry);\n+            List<String> keyFields = new ArrayList<>(keyExtractors.size());\n+\n+            // extract top-level fields used as keys to optimize query lookups\n+            // this process gets skipped for nested fields\n+            for (HitExtractor extractor : keyExtractors) {\n+                if (extractor instanceof AbstractFieldHitExtractor) {\n+                    AbstractFieldHitExtractor hitExtractor = (AbstractFieldHitExtractor) extractor;\n+                    // no nested fields\n+                    if (hitExtractor.hitName() == null) {\n+                        keyFields.add(hitExtractor.fieldName());\n+                    }", "originalCommit": "dd152e909f62582191b3f704a1ca1fed74925657", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjczMjIwOA==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r546732208", "bodyText": "Why is this skipped for nested fields? It's because of the complexity added by creating a nested query?", "author": "astefan", "createdAt": "2020-12-21T14:21:54Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/ExecutionManager.java", "diffHunk": "@@ -65,13 +68,30 @@ public Executable assemble(List<List<Attribute>> listOfKeys,\n         for (int i = 0; i < plans.size(); i++) {\n             List<Attribute> keys = listOfKeys.get(i);\n             List<HitExtractor> keyExtractors = hitExtractors(keys, extractorRegistry);\n+            List<String> keyFields = new ArrayList<>(keyExtractors.size());\n+\n+            // extract top-level fields used as keys to optimize query lookups\n+            // this process gets skipped for nested fields", "originalCommit": "dd152e909f62582191b3f704a1ca1fed74925657", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc1NTE1MA==", "url": "https://github.com/elastic/elasticsearch/pull/66596#discussion_r546755150", "bodyText": "We don't support nested fields in general since they are a 1:n relationship. The check is currently performed in createExtractor (and really should be moved into the Verifier instead).", "author": "costin", "createdAt": "2020-12-21T15:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjczMjIwOA=="}], "type": "inlineReview"}, {"oid": "576e5b2c86b1c9b568a1e15e70e3ab127f102edc", "url": "https://github.com/elastic/elasticsearch/commit/576e5b2c86b1c9b568a1e15e70e3ab127f102edc", "message": "Address feedback", "committedDate": "2020-12-21T15:04:30Z", "type": "commit"}, {"oid": "c7313ec1b7efde6217823a3c6e3585088f4dd0de", "url": "https://github.com/elastic/elasticsearch/commit/c7313ec1b7efde6217823a3c6e3585088f4dd0de", "message": "Merge branch 'master' into eql/filter-terms", "committedDate": "2020-12-21T15:30:08Z", "type": "commit"}]}