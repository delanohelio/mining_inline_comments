{"pr_number": 63513, "pr_title": "Introduce \"Feature States\" for managing snapshots of system indices", "pr_createdAt": "2020-10-08T22:10:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63513", "timeline": [{"oid": "afdf54c6d21babe818d8f2375784f5e83a6bd7d1", "url": "https://github.com/elastic/elasticsearch/commit/afdf54c6d21babe818d8f2375784f5e83a6bd7d1", "message": "Add version-based skip to Get Features YAML test", "committedDate": "2021-01-06T22:44:59Z", "type": "commit"}, {"oid": "8c324fd6ff4fa684d84cb036061d771f7579b8ac", "url": "https://github.com/elastic/elasticsearch/commit/8c324fd6ff4fa684d84cb036061d771f7579b8ac", "message": "Add HLRC support for Get Features API", "committedDate": "2021-01-07T21:54:07Z", "type": "commit"}, {"oid": "eec57859f00a5ecea4b9cbc64c0dcdbf19721723", "url": "https://github.com/elastic/elasticsearch/commit/eec57859f00a5ecea4b9cbc64c0dcdbf19721723", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-07T21:55:03Z", "type": "commit"}, {"oid": "1b999412b5c7efaaa3222bed30b7a2c7c6bf90ab", "url": "https://github.com/elastic/elasticsearch/commit/1b999412b5c7efaaa3222bed30b7a2c7c6bf90ab", "message": "Checkstyle", "committedDate": "2021-01-07T21:59:13Z", "type": "commit"}, {"oid": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "url": "https://github.com/elastic/elasticsearch/commit/055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-12T00:27:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgzODU1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r556838556", "bodyText": "Let's either fill this in or remove it and open an issue to update it", "author": "jaymode", "createdAt": "2021-01-13T21:22:49Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java", "diffHunk": "@@ -389,4 +391,43 @@ public Cancellable deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, Requ\n             SnapshotRequestConverters::deleteSnapshot, options,\n             AcknowledgedResponse::fromXContent, listener, emptySet());\n     }\n+\n+    /**\n+     * Get a list of features which can be included in a snapshot as feature states.\n+     * See [link here]", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgzOTEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r556839128", "bodyText": "Add a blurb about what this does?", "author": "jaymode", "createdAt": "2021-01-13T21:23:21Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java", "diffHunk": "@@ -389,4 +391,43 @@ public Cancellable deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, Requ\n             SnapshotRequestConverters::deleteSnapshot, options,\n             AcknowledgedResponse::fromXContent, listener, emptySet());\n     }\n+\n+    /**\n+     * Get a list of features which can be included in a snapshot as feature states.\n+     * See [link here]\n+     *\n+     * @param getFeaturesRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public GetSnapshottableFeaturesResponse getFeatures(GetSnapshottableFeaturesRequest getFeaturesRequest, RequestOptions options)\n+        throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(\n+            getFeaturesRequest,\n+            SnapshotRequestConverters::getSnapshottableFeatures,\n+            options,\n+            GetSnapshottableFeaturesResponse::parse,\n+            emptySet()\n+        );\n+    }\n+\n+    /**\n+     *", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUyOTIxMA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r557529210", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2021-01-14T16:33:21Z", "path": "server/src/main/java/org/elasticsearch/indices/IndicesService.java", "diffHunk": "@@ -877,23 +877,25 @@ public void afterIndexShardClosed(ShardId shardId, IndexShard indexShard, Settin\n      * but does not deal with in-memory structures. For those call {@link #removeIndex(Index, IndexRemovalReason, String)}\n      */\n     @Override\n-    public void deleteUnassignedIndex(String reason, IndexMetadata metadata, ClusterState clusterState) {\n+    public void deleteUnassignedIndex(String reason, IndexMetadata oldIndexMetadata, ClusterState clusterState) {\n         if (nodeEnv.hasNodeFile()) {\n-            String indexName = metadata.getIndex().getName();\n+            Index index = oldIndexMetadata.getIndex();\n             try {\n-                if (clusterState.metadata().hasIndex(indexName)) {\n-                    final IndexMetadata index = clusterState.metadata().index(indexName);\n-                    throw new IllegalStateException(\"Can't delete unassigned index store for [\" + indexName + \"] - it's still part of \" +\n-                                                    \"the cluster state [\" + index.getIndexUUID() + \"] [\" + metadata.getIndexUUID() + \"]\");\n+                if (clusterState.metadata().hasIndex(index)) {\n+                    final IndexMetadata currentMetadata = clusterState.metadata().index(index);\n+                    throw new IllegalStateException(\"Can't delete unassigned index store for [\" + index.getName() + \"] - it's still part \" +\n+                        \"of the cluster state [\" + currentMetadata.getIndexUUID() + \"] [\" +\n+                        oldIndexMetadata.getIndexUUID() + \"]\");\n                 }\n-                deleteIndexStore(reason, metadata);\n+                deleteIndexStore(reason, oldIndexMetadata);\n             } catch (Exception e) {\n                 logger.warn(() -> new ParameterizedMessage(\"[{}] failed to delete unassigned index (reason [{}])\",\n-                    metadata.getIndex(), reason), e);\n+                    oldIndexMetadata.getIndex(), reason), e);\n             }\n         }\n     }\n \n+", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2NDE4NA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r558564184", "bodyText": "Map.of() or Collections.emptyMap()?", "author": "jaymode", "createdAt": "2021-01-15T20:02:43Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -614,6 +658,88 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n         }\n     }\n \n+    private boolean isSystemIndex(IndexMetadata indexMetadata) {\n+        return indexMetadata.isSystem() || systemIndices.isSystemIndex(indexMetadata.getIndex());\n+    }\n+\n+    private Map<String, DataStream> getDataStreamsToRestore(Repository repository, SnapshotId snapshotId, SnapshotInfo snapshotInfo,\n+                                                           Metadata globalMetadata, List<String> requestIndices) {\n+        Map<String, DataStream> dataStreams;\n+        List<String> requestedDataStreams = filterIndices(snapshotInfo.dataStreams(), requestIndices.toArray(String[]::new),\n+            IndicesOptions.fromOptions(true, true, true, true));\n+        if (requestedDataStreams.isEmpty()) {\n+            dataStreams = new HashMap<>();", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2NTE1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r558565159", "bodyText": "shouldn't this be an error and not a log message?", "author": "jaymode", "createdAt": "2021-01-15T20:04:54Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -614,6 +658,88 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n         }\n     }\n \n+    private boolean isSystemIndex(IndexMetadata indexMetadata) {\n+        return indexMetadata.isSystem() || systemIndices.isSystemIndex(indexMetadata.getIndex());\n+    }\n+\n+    private Map<String, DataStream> getDataStreamsToRestore(Repository repository, SnapshotId snapshotId, SnapshotInfo snapshotInfo,\n+                                                           Metadata globalMetadata, List<String> requestIndices) {\n+        Map<String, DataStream> dataStreams;\n+        List<String> requestedDataStreams = filterIndices(snapshotInfo.dataStreams(), requestIndices.toArray(String[]::new),\n+            IndicesOptions.fromOptions(true, true, true, true));\n+        if (requestedDataStreams.isEmpty()) {\n+            dataStreams = new HashMap<>();\n+        } else {\n+            if (globalMetadata == null) {\n+                globalMetadata = repository.getSnapshotGlobalMetadata(snapshotId);\n+            }\n+            final Map<String, DataStream> dataStreamsInSnapshot = globalMetadata.dataStreams();\n+            dataStreams = new HashMap<>(requestedDataStreams.size());\n+            for (String requestedDataStream : requestedDataStreams) {\n+                final DataStream dataStreamInSnapshot = dataStreamsInSnapshot.get(requestedDataStream);\n+                assert dataStreamInSnapshot != null : \"DataStream [\" + requestedDataStream + \"] not found in snapshot\";\n+                dataStreams.put(requestedDataStream, dataStreamInSnapshot);\n+            }\n+        }\n+        return dataStreams;\n+    }\n+\n+    private Map<String, List<String>> getFeatureStatesToRestore(RestoreSnapshotRequest request, SnapshotInfo snapshotInfo,\n+                                                                Snapshot snapshot) {\n+        if (snapshotInfo.featureStates() == null) {\n+            return Collections.emptyMap();\n+        }\n+        final Map<String, List<String>> snapshotFeatureStates = snapshotInfo.featureStates().stream()\n+            .collect(Collectors.toMap(SnapshotFeatureInfo::getPluginName, SnapshotFeatureInfo::getIndices));\n+\n+        final Map<String, List<String>> featureStatesToRestore = new HashMap<>(snapshotFeatureStates);\n+        if (request.featureStates() != null) {\n+            final Set<String> requestedStates = Set.of(request.featureStates());\n+            if (snapshotFeatureStates.keySet().containsAll(requestedStates) == false) {\n+                Set<String> nonExistingRequestedStates = new HashSet<>(requestedStates);\n+                nonExistingRequestedStates.removeAll(snapshotFeatureStates.keySet());\n+                throw new SnapshotRestoreException(snapshot, \"requested feature states [\" + nonExistingRequestedStates +\n+                    \"] are not present in snapshot\");\n+            }\n+            featureStatesToRestore.keySet().retainAll(requestedStates);\n+        } else if (request.includeGlobalState() == false) {\n+            featureStatesToRestore.clear();\n+        }\n+\n+        final List<String> featuresNotOnThisNode = featureStatesToRestore.keySet().stream()\n+            .filter(featureName -> systemIndices.getFeatures().containsKey(featureName))\n+            .collect(Collectors.toList());\n+        if (featuresNotOnThisNode.isEmpty() == false) {\n+            logger.warn(\"while restoring feature states from snapshot [{}], some requested feature states are not present on this node: {}\",", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODYwNTEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r558605128", "bodyText": "Looking at this again, I agree, it probably should be an error. Not certain why I didn't make it one originally. I'll change this, although I'm not sure if it's possible to write a test for this case given how our test infrastructure works.", "author": "gwbrown", "createdAt": "2021-01-15T21:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2NTE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2OTU3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r558569577", "bodyText": "I wonder if this should be ml? @droberts195 any thoughts?", "author": "jaymode", "createdAt": "2021-01-15T20:14:18Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java", "diffHunk": "@@ -1170,6 +1170,16 @@ static long machineMemoryFromStats(OsStats stats) {\n         );\n     }\n \n+    @Override\n+    public String getFeatureName() {\n+        return \"machine_learning\";", "originalCommit": "055adf26fd6bb53fb77b90ca66fcace9446b2d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "290b203351fed4daa088117a447623d7f4d02e2f", "url": "https://github.com/elastic/elasticsearch/commit/290b203351fed4daa088117a447623d7f4d02e2f", "message": "Cluster state -> global state in docs where it makes sense", "committedDate": "2021-01-15T21:21:43Z", "type": "commit"}, {"oid": "f7a0dc2158c51225964319a80f2b65e72973e049", "url": "https://github.com/elastic/elasticsearch/commit/f7a0dc2158c51225964319a80f2b65e72973e049", "message": "Fix Client javadoc", "committedDate": "2021-01-15T21:25:20Z", "type": "commit"}, {"oid": "774f11c3e0f398f5e8d85b3e9fdd7539404cc7ad", "url": "https://github.com/elastic/elasticsearch/commit/774f11c3e0f398f5e8d85b3e9fdd7539404cc7ad", "message": "Typo/wording fixes per review", "committedDate": "2021-01-15T21:28:24Z", "type": "commit"}, {"oid": "82cfdaca4d294da32478428b6795e6ff083b7a19", "url": "https://github.com/elastic/elasticsearch/commit/82cfdaca4d294da32478428b6795e6ff083b7a19", "message": "Remove excess line", "committedDate": "2021-01-15T21:29:03Z", "type": "commit"}, {"oid": "46f5eed68118b5cf570de08742f7a6427dd8939c", "url": "https://github.com/elastic/elasticsearch/commit/46f5eed68118b5cf570de08742f7a6427dd8939c", "message": "new HashMap<>() -> Collections.emptyMap()", "committedDate": "2021-01-15T21:33:57Z", "type": "commit"}, {"oid": "8be4e746c75e891c1b8bc10480237c82acd68c52", "url": "https://github.com/elastic/elasticsearch/commit/8be4e746c75e891c1b8bc10480237c82acd68c52", "message": "Throw an error when attempting to restore feature states that go with features which are not installed", "committedDate": "2021-01-15T21:42:59Z", "type": "commit"}, {"oid": "1bec52b07f88a787e2536bfcbc097eb85e0a71bc", "url": "https://github.com/elastic/elasticsearch/commit/1bec52b07f88a787e2536bfcbc097eb85e0a71bc", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-15T21:43:08Z", "type": "commit"}, {"oid": "59ab24067e267fdcadc21ae5b8f2d2fd26d71933", "url": "https://github.com/elastic/elasticsearch/commit/59ab24067e267fdcadc21ae5b8f2d2fd26d71933", "message": "Clean up error message", "committedDate": "2021-01-15T22:22:32Z", "type": "commit"}, {"oid": "b9383238c2fd70210e3480806b2dd024abcaa58c", "url": "https://github.com/elastic/elasticsearch/commit/b9383238c2fd70210e3480806b2dd024abcaa58c", "message": "Flip incorrect boolean logic (d'oh)", "committedDate": "2021-01-15T23:13:48Z", "type": "commit"}, {"oid": "201eec6fca9bb676a6c9daa5bc4ce6ac559be1df", "url": "https://github.com/elastic/elasticsearch/commit/201eec6fca9bb676a6c9daa5bc4ce6ac559be1df", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-19T18:25:54Z", "type": "commit"}, {"oid": "7ceecaea0e031fce27645fe5de4375fd3a30cb1c", "url": "https://github.com/elastic/elasticsearch/commit/7ceecaea0e031fce27645fe5de4375fd3a30cb1c", "message": "Add category for deprecation warning", "committedDate": "2021-01-19T18:40:18Z", "type": "commit"}, {"oid": "6c4669f714c93fbc390ea8aef4f373c9d0a77c8e", "url": "https://github.com/elastic/elasticsearch/commit/6c4669f714c93fbc390ea8aef4f373c9d0a77c8e", "message": "Handle null & empty feature states the same in Create/Restore requests", "committedDate": "2021-01-19T22:02:02Z", "type": "commit"}, {"oid": "596c9ac3bc5d3d96649455e1f8ddb85c4b7e4019", "url": "https://github.com/elastic/elasticsearch/commit/596c9ac3bc5d3d96649455e1f8ddb85c4b7e4019", "message": "Add \"none\" special case for including no feature states\n\nAlso removes `[]` as a way to specify no feature states", "committedDate": "2021-01-20T00:11:58Z", "type": "commit"}, {"oid": "d677aeb0411403469834fb7317cd82c95a851f7d", "url": "https://github.com/elastic/elasticsearch/commit/d677aeb0411403469834fb7317cd82c95a851f7d", "message": "Don't include feature_states in restore request JSON if it's empty\n\nIf we include it, some BWC tests use new_version request classes to make\nrequests against old_version clusters.", "committedDate": "2021-01-20T21:58:00Z", "type": "commit"}, {"oid": "8946c94e3f726546d48a3d87ff2f41ed9e379fea", "url": "https://github.com/elastic/elasticsearch/commit/8946c94e3f726546d48a3d87ff2f41ed9e379fea", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-20T22:00:38Z", "type": "commit"}, {"oid": "1476d8d5cbf68faf9d2b2b5abd1de5569df83e0f", "url": "https://github.com/elastic/elasticsearch/commit/1476d8d5cbf68faf9d2b2b5abd1de5569df83e0f", "message": "Exercise feature_states in HLRC tests", "committedDate": "2021-01-20T23:56:41Z", "type": "commit"}, {"oid": "884983c6f31a1c64daf157fc4cac2b701da1a2e5", "url": "https://github.com/elastic/elasticsearch/commit/884983c6f31a1c64daf157fc4cac2b701da1a2e5", "message": "Add integration test for feature states and security index", "committedDate": "2021-01-21T22:02:12Z", "type": "commit"}, {"oid": "1dc1a80b51344f072d43119ddb83cca5e5c6c6fd", "url": "https://github.com/elastic/elasticsearch/commit/1dc1a80b51344f072d43119ddb83cca5e5c6c6fd", "message": "Add a test to ensure system indices can be renamed if restored by name", "committedDate": "2021-01-21T22:09:44Z", "type": "commit"}, {"oid": "1e37dc6fb2d4387162c9256023b97967497527bd", "url": "https://github.com/elastic/elasticsearch/commit/1e37dc6fb2d4387162c9256023b97967497527bd", "message": "Add UUID comparison to security index state change listeners", "committedDate": "2021-01-21T22:32:03Z", "type": "commit"}, {"oid": "8f038ee190eefe9fb240178f38b9167a6be3bada", "url": "https://github.com/elastic/elasticsearch/commit/8f038ee190eefe9fb240178f38b9167a6be3bada", "message": "Exclude all feature states in `createSnapshot`\n\nOtherwise some tests can fail because the snapshot includes a different\nnumber of shards than the test expects, due to system indices being\nimplicitly included.", "committedDate": "2021-01-25T19:45:01Z", "type": "commit"}, {"oid": "898a3b3e09723bc16627077176288034c5439e9a", "url": "https://github.com/elastic/elasticsearch/commit/898a3b3e09723bc16627077176288034c5439e9a", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-25T19:59:10Z", "type": "commit"}, {"oid": "fe203f664b1c50bbaa9e69a8d0b72a09b6b08b0a", "url": "https://github.com/elastic/elasticsearch/commit/fe203f664b1c50bbaa9e69a8d0b72a09b6b08b0a", "message": "Merge remote-tracking branch 'gwbrown/si/snapshot-and-restore' into si/snapshot-and-restore", "committedDate": "2021-01-25T21:55:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTYwMDA3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r565600079", "bodyText": "did something change with formatting the imports in your IDE? I've always seen static imports as going last", "author": "jaymode", "createdAt": "2021-01-27T20:08:01Z", "path": "server/src/main/java/org/elasticsearch/indices/IndicesService.java", "diffHunk": "@@ -19,6 +19,43 @@\n \n package org.elasticsearch.indices;\n \n+import static java.util.Collections.emptyList;", "originalCommit": "fe203f664b1c50bbaa9e69a8d0b72a09b6b08b0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY0NjkxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r565646915", "bodyText": "Fascinating. I didn't intentionally change anything, I'll look into that and see if I can undo whatever happened there.", "author": "gwbrown", "createdAt": "2021-01-27T21:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTYwMDA3OQ=="}], "type": "inlineReview"}, {"oid": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "url": "https://github.com/elastic/elasticsearch/commit/dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "message": "Merge branch 'master' into si/snapshot-and-restore\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/snapshots/RestoreService.java\n#\tserver/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexUpgradeServiceTests.java", "committedDate": "2021-01-28T20:53:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc5NDA4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568794082", "bodyText": "EDIT: please revert noisy format changes in this PR, they're all over the place now that I read through it in full :)", "author": "original-brownbear", "createdAt": "2021-02-02T17:30:33Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java", "diffHunk": "@@ -47,16 +63,6 @@\n import org.elasticsearch.snapshots.RestoreInfo;\n import org.mockito.internal.util.collections.Sets;\n \n-import java.io.IOException;", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc5NTk1OA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568795958", "bodyText": "You can just use createFullSnapshot(REPO_NAME, \"test-snap\") here that does assert that everything went fine and runs the same snapshot request", "author": "original-brownbear", "createdAt": "2021-02-02T17:33:21Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/snapshots/SystemIndicesSnapshotIT.java", "diffHunk": "@@ -0,0 +1,828 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.snapshots;\n+\n+import static org.elasticsearch.snapshots.SnapshotsService.NO_FEATURE_STATES_VALUE;\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.hamcrest.Matchers.allOf;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.hamcrest.Matchers.hasItem;\n+import static org.hamcrest.Matchers.in;\n+import static org.hamcrest.Matchers.not;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotResponse;\n+import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotResponse;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.logging.Loggers;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.indices.SystemIndexDescriptor;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.SystemIndexPlugin;\n+import org.elasticsearch.test.MockLogAppender;\n+import org.junit.Before;\n+\n+public class SystemIndicesSnapshotIT extends AbstractSnapshotIntegTestCase {\n+\n+    public static final String REPO_NAME = \"test-repo\";\n+\n+    @Override\n+    protected Collection<Class<? extends Plugin>> nodePlugins() {\n+        List<Class<? extends Plugin>> plugins = new ArrayList<>(super.nodePlugins());\n+        plugins.add(SystemIndexTestPlugin.class);\n+        plugins.add(AnotherSystemIndexTestPlugin.class);\n+        plugins.add(AssociatedIndicesTestPlugin.class);\n+        return plugins;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        createRepository(REPO_NAME, \"fs\");\n+    }\n+\n+    /**\n+     * Test that if a snapshot includes system indices and we restore global state,\n+     * with no reference to feature state, the system indices are restored too.\n+     */\n+    public void testRestoreSystemIndicesAsGlobalState() {\n+        // put a document in a system index\n+        indexDoc(SystemIndexTestPlugin.SYSTEM_INDEX_NAME, \"1\", \"purpose\", \"pre-snapshot doc\");\n+        refresh(SystemIndexTestPlugin.SYSTEM_INDEX_NAME);\n+\n+        // run a snapshot including global state\n+        CreateSnapshotResponse createSnapshotResponse = clusterAdmin().prepareCreateSnapshot(REPO_NAME, \"test-snap\")\n+            .setWaitForCompletion(true)\n+            .setIncludeGlobalState(true)\n+            .get();\n+        assertSnapshotSuccess(createSnapshotResponse);", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc5Nzc1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568797757", "bodyText": "NIT: noisy imports", "author": "original-brownbear", "createdAt": "2021-02-02T17:35:52Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java", "diffHunk": "@@ -19,6 +19,18 @@\n \n package org.elasticsearch.action.admin.cluster.snapshots.create;\n \n+import static org.elasticsearch.action.ValidateActions.addValidationError;\n+import static org.elasticsearch.common.Strings.EMPTY_ARRAY;\n+import static org.elasticsearch.common.settings.Settings.readSettingsFromStream;\n+import static org.elasticsearch.common.settings.Settings.writeSettingsToStream;\n+import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;\n+\n+import java.io.IOException;\n+import java.util.Arrays;", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc5ODc4NA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568798784", "bodyText": "NIT: Strings.EMPTY_ARRAY (less verbose than pre-sizing the array and technically faster :))", "author": "original-brownbear", "createdAt": "2021-02-02T17:37:20Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java", "diffHunk": "@@ -348,6 +360,28 @@ public CreateSnapshotRequest userMetadata(Map<String, Object> userMetadata) {\n         return this;\n     }\n \n+    /**\n+     * @return Which plugin states should be included in the snapshot\n+     */\n+    public String[] featureStates() {\n+        return featureStates;\n+    }\n+\n+    /**\n+     * @param featureStates The plugin states to be included in the snapshot\n+     */\n+    public CreateSnapshotRequest featureStates(String[] featureStates) {\n+        this.featureStates = featureStates;\n+        return this;\n+    }\n+\n+    /**\n+     * @param featureStates The plugin states to be included in the snapshot\n+     */\n+    public CreateSnapshotRequest featureStates(List<String> featureStates) {\n+        return featureStates(featureStates.toArray(new String[featureStates.size()]));", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc5OTkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568799938", "bodyText": "NIT: Strings.EMPTY_ARRAY", "author": "original-brownbear", "createdAt": "2021-02-02T17:38:58Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java", "diffHunk": "@@ -448,6 +459,29 @@ public String snapshotUuid() {\n         return snapshotUuid;\n     }\n \n+    /**\n+     * @return Which feature states should be included in the snapshot\n+     */\n+    @Nullable\n+    public String[] featureStates() {\n+        return featureStates;\n+    }\n+\n+    /**\n+     * @param featureStates The feature states to be included in the snapshot\n+     */\n+    public RestoreSnapshotRequest featureStates(String[] featureStates) {\n+        this.featureStates = featureStates;\n+        return this;\n+    }\n+\n+    /**\n+     * @param featureStates The feature states to be included in the snapshot\n+     */\n+    public RestoreSnapshotRequest featureStates(List<String> featureStates) {\n+        return featureStates(featureStates.toArray(new String[featureStates.size()]));", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgwMDc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568800753", "bodyText": "Why switch places here, let's just put this as the last argument to keep noise down when backporting (there's some other ctors in 7.x I think that will be painful otherwise).", "author": "original-brownbear", "createdAt": "2021-02-02T17:40:07Z", "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java", "diffHunk": "@@ -93,12 +96,12 @@ public String toString() {\n      * will be in state {@link State#SUCCESS} right away otherwise it will be in state {@link State#STARTED}.\n      */\n     public static Entry startedEntry(Snapshot snapshot, boolean includeGlobalState, boolean partial, List<IndexId> indices,\n-                                     List<String> dataStreams, long startTime, long repositoryStateId,\n+                                     List<String> dataStreams, List<SnapshotFeatureInfo> featureStates, long repositoryStateId,", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgwNTg2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568805861", "bodyText": "Is this even true for partial snapshots? We can concurrently delete the related system indices for partial snapshots and then not see them in the final snapshot can't we?", "author": "original-brownbear", "createdAt": "2021-02-02T17:47:37Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1161,9 +1236,10 @@ private void finalizeSnapshotEntry(SnapshotsInProgress.Entry entry, Metadata met\n             final SnapshotInfo snapshotInfo = new SnapshotInfo(snapshot.getSnapshotId(),\n                 shardGenerations.indices().stream().map(IndexId::getName).collect(Collectors.toList()),\n                 entry.dataStreams(),\n-                entry.startTime(), failure, threadPool.absoluteTimeInMillis(),\n-                entry.partial() ? shardGenerations.totalShards() : entry.shards().size(), shardFailures,\n-                entry.includeGlobalState(), entry.userMetadata());\n+                entry.featureStates(), failure, threadPool.absoluteTimeInMillis(),", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgwODc3NA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568808774", "bodyText": "We have all the state machine changing version constants in SnapshotsService so far, I think this should go there as well to keep things simple.", "author": "original-brownbear", "createdAt": "2021-02-02T17:51:50Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java", "diffHunk": "@@ -64,6 +64,7 @@\n         implements IndicesRequest.Replaceable, ToXContentObject {\n \n     public static final Version SETTINGS_IN_REQUEST_VERSION = Version.V_8_0_0;\n+    public static final Version FEATURE_STATES_VERSION = Version.V_8_0_0;", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgxMTc0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568811743", "bodyText": "Is this true? Shouldn't this be taken from the original snapshot if it contained relevant system indices and the clone operation was set to clone those?", "author": "original-brownbear", "createdAt": "2021-02-02T17:56:05Z", "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java", "diffHunk": "@@ -115,8 +118,8 @@ public static Entry startedEntry(Snapshot snapshot, boolean includeGlobalState,\n     public static Entry startClone(Snapshot snapshot, SnapshotId source, List<IndexId> indices, long startTime,\n                                    long repositoryStateId, Version version) {\n         return new SnapshotsInProgress.Entry(snapshot, true, false, State.STARTED, indices, Collections.emptyList(),\n-                startTime, repositoryStateId, ImmutableOpenMap.of(), null, Collections.emptyMap(), version, source,\n-                ImmutableOpenMap.of());\n+            Collections.emptyList(), startTime, repositoryStateId, ImmutableOpenMap.of(), null, Collections.emptyMap(), version, source,", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk5MzA3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568993075", "bodyText": "This seems like a good point. Snapshot cloning is relatively new and I don't know much about it - if that's the case though, why are data streams Collections.emptyList() here? Shouldn't they be copied as well?", "author": "gwbrown", "createdAt": "2021-02-02T23:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgxMTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDM4MDYwNA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r570380604", "bodyText": "\ud83e\udd26 yet another datastream curve-ball :) This should be fixed as well. Let's do what you did here then maybe and add a TODO for this. I don't think it's critical to fix in this PR since it's broken already for datastreams. Thanks for noticing!", "author": "original-brownbear", "createdAt": "2021-02-04T16:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgxMTc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgxMjIxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568812215", "bodyText": "we tend to use == false through the ES codebase", "author": "original-brownbear", "createdAt": "2021-02-02T17:56:46Z", "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java", "diffHunk": "@@ -410,6 +424,7 @@ public boolean equals(Object o) {\n             if (version.equals(entry.version) == false) return false;\n             if (Objects.equals(source, ((Entry) o).source) == false) return false;\n             if (clones.equals(((Entry) o).clones) == false) return false;\n+            if (!featureStates.equals(entry.featureStates)) return false;", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgyMDIxMA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568820210", "bodyText": "I think we need BwC here. We shouldn't be triggering ta snapshot that includes featureStates as long as there's old master nodes in the cluster that don't understand featureStates yet. Even if it might work out magically now (because we redundantly store what to snapshot in indices it's a potential point of failure where we move to a different state machine on master failover.", "author": "original-brownbear", "createdAt": "2021-02-02T18:08:05Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -257,6 +268,44 @@ public ClusterState execute(ClusterState currentState) {\n                 // Store newSnapshot here to be processed in clusterStateProcessed\n                 List<String> indices = Arrays.asList(indexNameExpressionResolver.concreteIndexNames(currentState, request));\n \n+                List<SnapshotFeatureInfo> featureStates = Collections.emptyList();", "originalCommit": "dc2ac03a67d97dace051aa07c2c3c9d6a303b879", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk5NTUyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r568995529", "bodyText": "To clarify, what you're recommending here is not using featureStates in a mixed cluster where some master nodes are <FEATURE_STATES_VERSION?\nIn that case, f there's a request that explicitly uses feature states, we can just throw an exception that that feature isn't allowed in mixed clusters. But if we have a create snapshot request that implicitly uses feature states (include_global_state: true), should we use the pre-7.12.0 behavior regardless of the current version of the master? I don't like silently using the previous behavior like that, but it seems like we'd still want to be able to take a snapshot in that case.", "author": "gwbrown", "createdAt": "2021-02-02T23:12:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgyMDIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDM3OTY1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r570379659", "bodyText": "the pre-7.12.0 behavior regardless of the current version of the master?\n\nI think that's the correct approach as long as there's old version nodes in the cluster. At least, it's what we currently do for all the snapshot features/changes, we always keep using the old state machine as long as there's nodes of an old version around. It's just the by far easiest BwC behavior to reason about.\n\nIn that case, f there's a request that explicitly uses feature states, we can just throw an exception that that feature isn't allowed in mixed clusters\n\nYea I'd throw here if the request explicitly requests feature states. If it doesn't specify anything, just using the previous behavior seems the way to go.", "author": "original-brownbear", "createdAt": "2021-02-04T16:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODgyMDIxMA=="}], "type": "inlineReview"}, {"oid": "1e65d125efd7b8f31539c19c9ace482b17d4ae00", "url": "https://github.com/elastic/elasticsearch/commit/1e65d125efd7b8f31539c19c9ace482b17d4ae00", "message": "Undo import changes (thanks IntelliJ)", "committedDate": "2021-02-02T22:33:04Z", "type": "commit"}, {"oid": "fda3a9c7b560d00161f4c7a7262228caba5a4501", "url": "https://github.com/elastic/elasticsearch/commit/fda3a9c7b560d00161f4c7a7262228caba5a4501", "message": "! -> == false", "committedDate": "2021-02-02T22:39:28Z", "type": "commit"}, {"oid": "455f76270308c0242dfe2ea76efcdb1730d83376", "url": "https://github.com/elastic/elasticsearch/commit/455f76270308c0242dfe2ea76efcdb1730d83376", "message": "DRY up test per review", "committedDate": "2021-02-02T22:43:59Z", "type": "commit"}, {"oid": "ba8aba300fb77b133f1639c69d4b9738bf5e302b", "url": "https://github.com/elastic/elasticsearch/commit/ba8aba300fb77b133f1639c69d4b9738bf5e302b", "message": "Don't pre-size arrays per review", "committedDate": "2021-02-02T22:44:38Z", "type": "commit"}, {"oid": "4c5ce561d51fc359156298a9feb255f8115aac89", "url": "https://github.com/elastic/elasticsearch/commit/4c5ce561d51fc359156298a9feb255f8115aac89", "message": "Rearrange `startedEntry` params per review", "committedDate": "2021-02-02T22:59:47Z", "type": "commit"}, {"oid": "eeda4e123a64be29069d52d86110e834c1918b0c", "url": "https://github.com/elastic/elasticsearch/commit/eeda4e123a64be29069d52d86110e834c1918b0c", "message": "Move `FEATURE_STATES_VERSION` to `SnapshotsService` per review", "committedDate": "2021-02-02T23:02:32Z", "type": "commit"}, {"oid": "b78fbcdec7e48c8f4e85c28d5fd3870c4729156f", "url": "https://github.com/elastic/elasticsearch/commit/b78fbcdec7e48c8f4e85c28d5fd3870c4729156f", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-02T23:44:55Z", "type": "commit"}, {"oid": "facf8fa63787cdf35c3ad11020c07b9c5f0d1f06", "url": "https://github.com/elastic/elasticsearch/commit/facf8fa63787cdf35c3ad11020c07b9c5f0d1f06", "message": "\"Partial\" fix in SnapshotsService#finalizeSnapshotEntry", "committedDate": "2021-02-02T23:45:29Z", "type": "commit"}, {"oid": "4bc6bae8f7b66e4d9404a1a36d6cb79c6404a55c", "url": "https://github.com/elastic/elasticsearch/commit/4bc6bae8f7b66e4d9404a1a36d6cb79c6404a55c", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-03T22:07:17Z", "type": "commit"}, {"oid": "56fbb20496153a40d74a1f7e6a1dc448f190ae4d", "url": "https://github.com/elastic/elasticsearch/commit/56fbb20496153a40d74a1f7e6a1dc448f190ae4d", "message": "New license headers that didn't get auto-updated", "committedDate": "2021-02-03T22:24:16Z", "type": "commit"}, {"oid": "6b1cf06118f2f5d242199fb41d14ad2be0da0108", "url": "https://github.com/elastic/elasticsearch/commit/6b1cf06118f2f5d242199fb41d14ad2be0da0108", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-04T21:20:27Z", "type": "commit"}, {"oid": "12d1b25775cefb66d682e4d9b62af2826ba635d3", "url": "https://github.com/elastic/elasticsearch/commit/12d1b25775cefb66d682e4d9b62af2826ba635d3", "message": "Don't put Descriptor patterns through IndexNameExpressionResolver\n\nSystemIndexDescriptor patterns can use full Lucene regex syntax, so we\ncan't feed them to IndexNameExpressionResolver anymore. This commit\nintroduces a method to SystemIndexDescriptor to resolve all indices\nmatching a descriptor.", "committedDate": "2021-02-04T23:57:46Z", "type": "commit"}, {"oid": "699c2aef1eea47df677f0436ca99a29d94efb35c", "url": "https://github.com/elastic/elasticsearch/commit/699c2aef1eea47df677f0436ca99a29d94efb35c", "message": "Unused imports", "committedDate": "2021-02-05T00:06:52Z", "type": "commit"}, {"oid": "d503868f626644fba39769fc01f6351e5ca6db11", "url": "https://github.com/elastic/elasticsearch/commit/d503868f626644fba39769fc01f6351e5ca6db11", "message": "Only use feature_states if all nodes are on a version that can handle it (BWC)", "committedDate": "2021-02-05T19:33:26Z", "type": "commit"}, {"oid": "f2d7bbe390db9e79434a3a165acf6a60f157e83d", "url": "https://github.com/elastic/elasticsearch/commit/f2d7bbe390db9e79434a3a165acf6a60f157e83d", "message": "If any feature state indices are partial, drop associated feature state", "committedDate": "2021-02-06T00:01:14Z", "type": "commit"}, {"oid": "ef0dda4d548c1f8074745c352ff94064310dca5a", "url": "https://github.com/elastic/elasticsearch/commit/ef0dda4d548c1f8074745c352ff94064310dca5a", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-06T00:01:46Z", "type": "commit"}, {"oid": "6d9edd800362f7a982e5e019f37fe981c3816e9c", "url": "https://github.com/elastic/elasticsearch/commit/6d9edd800362f7a982e5e019f37fe981c3816e9c", "message": "Unused import", "committedDate": "2021-02-06T00:06:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIwMzEwMw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r572203103", "bodyText": "NIT: random empty line", "author": "original-brownbear", "createdAt": "2021-02-08T16:51:47Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/snapshots/GetSnapshottableFeaturesResponseTests.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License\n+ * 2.0 and the Server Side Public License, v 1; you may not use this file except\n+ * in compliance with, at your election, the Elastic License 2.0 or the Server\n+ * Side Public License, v 1.\n+ */\n+\n+package org.elasticsearch.client.snapshots;\n+\n+import org.elasticsearch.client.AbstractResponseTestCase;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.common.xcontent.XContentType;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.hamcrest.Matchers.everyItem;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.hamcrest.Matchers.in;\n+import static org.hamcrest.Matchers.is;\n+\n+public class GetSnapshottableFeaturesResponseTests extends AbstractResponseTestCase<\n+    org.elasticsearch.action.admin.cluster.snapshots.features.GetSnapshottableFeaturesResponse,\n+    GetSnapshottableFeaturesResponse> {\n+\n+    @Override\n+    protected org.elasticsearch.action.admin.cluster.snapshots.features.GetSnapshottableFeaturesResponse createServerTestInstance(\n+        XContentType xContentType\n+    ) {\n+        return new org.elasticsearch.action.admin.cluster.snapshots.features.GetSnapshottableFeaturesResponse(\n+            randomList(\n+                10,\n+                () -> new org.elasticsearch.action.admin.cluster.snapshots.features.GetSnapshottableFeaturesResponse.SnapshottableFeature(\n+                    randomAlphaOfLengthBetween(4, 10),\n+                    randomAlphaOfLengthBetween(5, 10)\n+                )\n+            )\n+        );\n+", "originalCommit": "6d9edd800362f7a982e5e019f37fe981c3816e9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMTgxMw==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r572211813", "bodyText": "I think you need to do this the other way around. If you have a partial snapshot, the indices just disappear from the Entry instead of showing up as failure. So if indices are missing, this will just quietly ignore those. You can just run the logic the other way around and check that all the indices you need for a feature are in the indices list.", "author": "original-brownbear", "createdAt": "2021-02-08T17:02:55Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1218,6 +1306,29 @@ private void finalizeSnapshotEntry(SnapshotsInProgress.Entry entry, Metadata met\n         }\n     }\n \n+    /**\n+     * Removes all feature states which have missing or failed shards, as they are no longer safely restorable.\n+     * @param entry The \"in progress\" entry with a list of feature states and one or more failed shards.\n+     * @return The list of feature states which were completed successfully in the given entry.\n+     */\n+    private List<SnapshotFeatureInfo> onlySuccessfulFeatureStates(SnapshotsInProgress.Entry entry) {\n+        assert entry.partial() : \"should not try to filter feature states from a non-partial entry\";\n+\n+        // Figure out which indices have unsuccessful shards\n+        Set<String> indicesWithUnsuccessfulShards = new HashSet<>();\n+        entry.shards().keysIt().forEachRemaining(shardId -> {\n+            final ShardState shardState = entry.shards().get(shardId).state();\n+            if (shardState.failed() || shardState.completed() == false) {\n+                indicesWithUnsuccessfulShards.add(shardId.getIndexName());\n+            }\n+        });\n+\n+        // Now remove any feature states which contain any of those indices, as the feature state is not intact and not safely restorable\n+        return entry.featureStates().stream()", "originalCommit": "6d9edd800362f7a982e5e019f37fe981c3816e9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjQ1NDc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r572454759", "bodyText": "I'm not entirely sure what you mean here - I tried replacing this method with:\nfinal Set<String> indicesInSnapshot = entry.indices().stream()\n    .map(IndexId::getName)\n    .collect(Collectors.toUnmodifiableSet());\n\nreturn entry.featureStates().stream()\n    .filter(stateInfo -> indicesInSnapshot.containsAll(stateInfo.getIndices()))\n    .collect(Collectors.toList());\nAnd the test I added to check partial snapshots failed - the index which was only partially captured was still in entry.indices(). What I did was apply both approaches (see this commit) - check for any indices which had failed shards and remove any feature states which include those indices AND check for any indices in feature states which aren't in entry.indices(), but I couldn't figure out how to force that case in a test.\nIs that what you mean? Or did I misunderstand you?", "author": "gwbrown", "createdAt": "2021-02-08T23:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzk0MzM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r573943379", "bodyText": "@gwbrown\n\nIs that what you mean?\n\nYea exactly we gotta check both. Sorry I missed that you did that correctly in that commit :) Looks good.\nCan we still add a test for this please?\n\ncheck for any indices in feature states which aren't in entry.indices(), but I couldn't figure out how to force that case in a test.\n\nThis should be easy:\n\nStart partial=true snapshot and block it somewhere\nWait for block\nDelete index\nLet snapshot continue\nThe finalisation should go through fine and and the feature should not become part of the snapshot.\n\nThat should work?", "author": "original-brownbear", "createdAt": "2021-02-10T17:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIwODk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r574208974", "bodyText": "@original-brownbear\nI've written a test that follows that pattern, and it passes, but I'm concerned because if I comment out this line, which applies the logic you recommended of checking entry.indices():\n\n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\n    \n    \n         Line 1354\n      in\n      90bf18d\n    \n    \n    \n    \n\n        \n          \n           .filter(stateInfo -> indicesInSnapshot.containsAll(stateInfo.getIndices())) \n        \n    \n  \n\n\n...then the test still passes, which it sounds like it shouldn't. As far as I can tell, when this test runs, the featureStates field in the initial Entry doesn't get populated until after the index is deleted, so that feature state is never included in the entry to begin with.\nI've tried blocking on data nodes instead of blocking the master (see the commented-out lines removed in this commit), and that version also passes, and again still passes if I comment out the same line - in that case, at least one shard fails and the feature state is removed via the logic I originally had in place.\nI also tried using, instead of blockNodeOnAnyFiles:\n\nblockMasterOnWriteIndexFile, which results in the snapshot completing with all shards successful (including the index that got deleted)\nblockMasterFromFinalizingSnapshotOnSnapFile, which results in the snapshot entirely failing (SnapshotMissingException when attempting to get the SnapshotInfo)\nblockMasterFromFinalizingSnapshotOnIndexFile, which has the same results as blockMasterFromFinalizingSnapshotOnSnapFile\n\nSo I'm still confused about how to actually get the original situation you describe, where we can get a feature state in the Entry that references an index not in entry.indices().\nIf you have bandwidth, I'd be happy to talk synchronously on this.", "author": "gwbrown", "createdAt": "2021-02-11T01:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY3NTgyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63513#discussion_r574675821", "bodyText": "I talked with @original-brownbear synchronously and figured out what was going on. It turned out that with some recent snapshot optimizations, it's more difficult to trigger the case he originally described.\nIn order to trigger the case reliably, the test now:\n\nAfter creating the system indices, starts a new data node\nCreates an index allocated only on the new data node\nBlocks the new data node and starts a snapshot\nWaits for the block to be hit\nDeletes the index\nUnblocks the data node\n\nThis allows all shards of the system index to be snapshotted, so that there are no failed shards, but still have that index removed from the snapshot.\nThere was also something else I misunderstood - when the index is deleted, it's removed from the final SnapshotInfo, but not the Entry - the final list of indices is generated via ShardGenerations. So the method to filter feature states now takes the final list of indices as well as the Entry and checks against that, rather than against Entry#indices() as the latter does not change.", "author": "gwbrown", "createdAt": "2021-02-11T17:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMTgxMw=="}], "type": "inlineReview"}, {"oid": "2b52037e16e87953c4b6f0d66c1741dc3678a41b", "url": "https://github.com/elastic/elasticsearch/commit/2b52037e16e87953c4b6f0d66c1741dc3678a41b", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-08T18:31:53Z", "type": "commit"}, {"oid": "38022ddf0fb242b40f239c7398e887f2ee05edf0", "url": "https://github.com/elastic/elasticsearch/commit/38022ddf0fb242b40f239c7398e887f2ee05edf0", "message": "Check indices in snapshot as well as failed shards", "committedDate": "2021-02-08T23:22:10Z", "type": "commit"}, {"oid": "c5d68ea613f9a21e3b74b10a131ac3c3c0b98287", "url": "https://github.com/elastic/elasticsearch/commit/c5d68ea613f9a21e3b74b10a131ac3c3c0b98287", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-08T23:22:20Z", "type": "commit"}, {"oid": "873de63e27f1606e49552a0ddf39283f344a4294", "url": "https://github.com/elastic/elasticsearch/commit/873de63e27f1606e49552a0ddf39283f344a4294", "message": "Remove extraneous line break", "committedDate": "2021-02-08T23:26:49Z", "type": "commit"}, {"oid": "6dd31f182ed8736809c848aa8b3e807f6a0b88c8", "url": "https://github.com/elastic/elasticsearch/commit/6dd31f182ed8736809c848aa8b3e807f6a0b88c8", "message": "`!` -> `== false`", "committedDate": "2021-02-08T23:30:31Z", "type": "commit"}, {"oid": "66bc5cda3d7352456fb556c9460264861b7e7d04", "url": "https://github.com/elastic/elasticsearch/commit/66bc5cda3d7352456fb556c9460264861b7e7d04", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-09T23:13:01Z", "type": "commit"}, {"oid": "90bf18dfa85e4c2a8c896e914d56062ee42ea56c", "url": "https://github.com/elastic/elasticsearch/commit/90bf18dfa85e4c2a8c896e914d56062ee42ea56c", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-11T00:26:04Z", "type": "commit"}, {"oid": "dd8889ffacf796962bff9f2cfea17a1fda5c5e39", "url": "https://github.com/elastic/elasticsearch/commit/dd8889ffacf796962bff9f2cfea17a1fda5c5e39", "message": "Add test - but this test doesn't fail if logic is removed\n\nThis test does not get a state where the SnapshotsInProgress.Entry has a feature state but not the index in that feature state", "committedDate": "2021-02-11T01:36:57Z", "type": "commit"}, {"oid": "d3005866c05e13a7ec7df20824e1680b39a737b9", "url": "https://github.com/elastic/elasticsearch/commit/d3005866c05e13a7ec7df20824e1680b39a737b9", "message": "Remove commented lines", "committedDate": "2021-02-11T01:37:16Z", "type": "commit"}, {"oid": "b6364204ed6dd1d94256c32eb6a0921175e3e6d9", "url": "https://github.com/elastic/elasticsearch/commit/b6364204ed6dd1d94256c32eb6a0921175e3e6d9", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-11T16:30:45Z", "type": "commit"}, {"oid": "6930e000a51bd2d393e8353714acbba18084bc21", "url": "https://github.com/elastic/elasticsearch/commit/6930e000a51bd2d393e8353714acbba18084bc21", "message": "Fix test and use real final indices list", "committedDate": "2021-02-11T17:04:58Z", "type": "commit"}, {"oid": "d4267d45449fa1e855204fd94b536c5618520239", "url": "https://github.com/elastic/elasticsearch/commit/d4267d45449fa1e855204fd94b536c5618520239", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-02-11T17:38:06Z", "type": "commit"}, {"oid": "65903abdfa15326420932108aec60e8010d43fa2", "url": "https://github.com/elastic/elasticsearch/commit/65903abdfa15326420932108aec60e8010d43fa2", "message": "Add plugin name to SystemIndexPlugin", "committedDate": "2020-10-08T20:58:28Z", "type": "commit"}, {"oid": "6d32a6522a3dfda380ee8329429ee76672a5afad", "url": "https://github.com/elastic/elasticsearch/commit/6d32a6522a3dfda380ee8329429ee76672a5afad", "message": "Use plugin name for system index descriptor map", "committedDate": "2020-10-08T21:02:22Z", "type": "commit"}, {"oid": "37e4f4b4a79ee8fca501c662f252a541b3db1f08", "url": "https://github.com/elastic/elasticsearch/commit/37e4f4b4a79ee8fca501c662f252a541b3db1f08", "message": "Add pluginStates to create and restore snapshot requests", "committedDate": "2020-10-08T22:02:27Z", "type": "commit"}, {"oid": "1fefb26832bdc9db7b16a29155011d2a7bd2b4ad", "url": "https://github.com/elastic/elasticsearch/commit/1fefb26832bdc9db7b16a29155011d2a7bd2b4ad", "message": "Plumb system index descriptor map into SnapshotsService", "committedDate": "2020-10-08T22:03:32Z", "type": "commit"}, {"oid": "1869e915cbb56693c40e387c3526e8ad68f76c2e", "url": "https://github.com/elastic/elasticsearch/commit/1869e915cbb56693c40e387c3526e8ad68f76c2e", "message": "Remove unnecessary comment", "committedDate": "2020-10-08T22:06:37Z", "type": "commit"}, {"oid": "ac2961f1aa5680d8510976eaa06aff9c858f5fbe", "url": "https://github.com/elastic/elasticsearch/commit/ac2961f1aa5680d8510976eaa06aff9c858f5fbe", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-12T22:37:39Z", "type": "commit"}, {"oid": "febcdd778d22c12df9e2f543462bac761e3f84ba", "url": "https://github.com/elastic/elasticsearch/commit/febcdd778d22c12df9e2f543462bac761e3f84ba", "message": "Only include pluginStates in request XContent if non-empty", "committedDate": "2020-10-12T22:47:52Z", "type": "commit"}, {"oid": "6561940369988d3396feb72a4f1b3ac750d9bbf8", "url": "https://github.com/elastic/elasticsearch/commit/6561940369988d3396feb72a4f1b3ac750d9bbf8", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-13T18:16:09Z", "type": "commit"}, {"oid": "c16e472c26582a49babf4c2444a725650e6aef51", "url": "https://github.com/elastic/elasticsearch/commit/c16e472c26582a49babf4c2444a725650e6aef51", "message": "Add plugin states to SnapshotInfo", "committedDate": "2020-10-14T22:06:58Z", "type": "commit"}, {"oid": "0c53a229ab9f6f9bfd5f7e2eb01e706ae581e4ce", "url": "https://github.com/elastic/elasticsearch/commit/0c53a229ab9f6f9bfd5f7e2eb01e706ae581e4ce", "message": "pluginStates->featureStates", "committedDate": "2020-10-14T22:17:49Z", "type": "commit"}, {"oid": "f0ef426f106bc050443ead6072592f248cbeb224", "url": "https://github.com/elastic/elasticsearch/commit/f0ef426f106bc050443ead6072592f248cbeb224", "message": "More plugin->feature", "committedDate": "2020-10-14T22:20:36Z", "type": "commit"}, {"oid": "1f4ecfe6641fbbc2b9ebc505414f05dd1c3fc403", "url": "https://github.com/elastic/elasticsearch/commit/1f4ecfe6641fbbc2b9ebc505414f05dd1c3fc403", "message": "Break out SnapshotFeatureInfo, add tests and equals/hashcode", "committedDate": "2020-10-14T22:34:42Z", "type": "commit"}, {"oid": "f824abe0079c1e7fef6cc5e273119a603bccc74a", "url": "https://github.com/elastic/elasticsearch/commit/f824abe0079c1e7fef6cc5e273119a603bccc74a", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-14T22:38:09Z", "type": "commit"}, {"oid": "040fda6b5906ae4772866a58330600f109888512", "url": "https://github.com/elastic/elasticsearch/commit/040fda6b5906ae4772866a58330600f109888512", "message": "Null guard for `featureStates` in `toXContent`", "committedDate": "2020-10-15T21:48:03Z", "type": "commit"}, {"oid": "013b76415f900530d08499de9b7578aa624387bb", "url": "https://github.com/elastic/elasticsearch/commit/013b76415f900530d08499de9b7578aa624387bb", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-15T21:48:12Z", "type": "commit"}, {"oid": "9120ffadb267c991ebdb25df605f237427119e66", "url": "https://github.com/elastic/elasticsearch/commit/9120ffadb267c991ebdb25df605f237427119e66", "message": "Another null guard for `featureStates` in `toXContent`", "committedDate": "2020-10-15T22:14:06Z", "type": "commit"}, {"oid": "26e94f603804bfef8efe6d464cc375a968b8056f", "url": "https://github.com/elastic/elasticsearch/commit/26e94f603804bfef8efe6d464cc375a968b8056f", "message": "writeTo version guard", "committedDate": "2020-10-15T22:37:58Z", "type": "commit"}, {"oid": "df3defff3bbc3ccd55f5ed690c90e74f66b2ee5b", "url": "https://github.com/elastic/elasticsearch/commit/df3defff3bbc3ccd55f5ed690c90e74f66b2ee5b", "message": "ACTUAL writeTo version guard", "committedDate": "2020-10-15T22:52:40Z", "type": "commit"}, {"oid": "ce24b74b34753e15c96b0f3804451e26a3e8b591", "url": "https://github.com/elastic/elasticsearch/commit/ce24b74b34753e15c96b0f3804451e26a3e8b591", "message": "SnapshotInfo featureStates now non-nullable", "committedDate": "2020-10-19T16:19:57Z", "type": "commit"}, {"oid": "9382885bdfffb01a684074e5aae8d0011bba2224", "url": "https://github.com/elastic/elasticsearch/commit/9382885bdfffb01a684074e5aae8d0011bba2224", "message": "Test featureStates in CreateSnapshotResponseTests & fix parser", "committedDate": "2020-10-19T16:28:30Z", "type": "commit"}, {"oid": "261f5c0d1a27a2cc958b3cf337a5705b2510c5f1", "url": "https://github.com/elastic/elasticsearch/commit/261f5c0d1a27a2cc958b3cf337a5705b2510c5f1", "message": "NOCOMMIT -> GWB todos", "committedDate": "2020-10-19T16:28:47Z", "type": "commit"}, {"oid": "89d8e19b81f440884b0892d4c6bf050fc431d5e5", "url": "https://github.com/elastic/elasticsearch/commit/89d8e19b81f440884b0892d4c6bf050fc431d5e5", "message": "Line length", "committedDate": "2020-10-19T16:31:38Z", "type": "commit"}, {"oid": "c207993f1c54c8ea101c9f155bc3616edb93a396", "url": "https://github.com/elastic/elasticsearch/commit/c207993f1c54c8ea101c9f155bc3616edb93a396", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-19T16:33:43Z", "type": "commit"}, {"oid": "08406bd6f88ddcab78333c3aebf43d5283932295", "url": "https://github.com/elastic/elasticsearch/commit/08406bd6f88ddcab78333c3aebf43d5283932295", "message": "Add `feature_states` to expected responses in the docs", "committedDate": "2020-10-19T19:31:34Z", "type": "commit"}, {"oid": "d2b517bdf2e58224431eca85e841175df6256722", "url": "https://github.com/elastic/elasticsearch/commit/d2b517bdf2e58224431eca85e841175df6256722", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-20T18:43:52Z", "type": "commit"}, {"oid": "93af2218917b25b3359074ea612ceeb097774c90", "url": "https://github.com/elastic/elasticsearch/commit/93af2218917b25b3359074ea612ceeb097774c90", "message": "Add system indices during snapshot creation (first draft)", "committedDate": "2020-10-20T20:26:06Z", "type": "commit"}, {"oid": "b6392afe783361ac1ba1dd6b3f06e68b8bc9d4a9", "url": "https://github.com/elastic/elasticsearch/commit/b6392afe783361ac1ba1dd6b3f06e68b8bc9d4a9", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-21T21:25:48Z", "type": "commit"}, {"oid": "e4a4580eeb5ef16c4a72ae2ae7199181e78e95ab", "url": "https://github.com/elastic/elasticsearch/commit/e4a4580eeb5ef16c4a72ae2ae7199181e78e95ab", "message": "Address various TODOs", "committedDate": "2020-10-21T22:07:14Z", "type": "commit"}, {"oid": "b7ef98ea81542f8c95b9f3d1474899c321fc5775", "url": "https://github.com/elastic/elasticsearch/commit/b7ef98ea81542f8c95b9f3d1474899c321fc5775", "message": "Refactor giant pile of streams", "committedDate": "2020-10-21T22:19:48Z", "type": "commit"}, {"oid": "9197bb8f50d6b3f95ccff5052985e0adedece161", "url": "https://github.com/elastic/elasticsearch/commit/9197bb8f50d6b3f95ccff5052985e0adedece161", "message": "Spotless", "committedDate": "2020-10-21T22:25:49Z", "type": "commit"}, {"oid": "8d6cbcb43f7ef57651374bd306f62ee8d03a07d4", "url": "https://github.com/elastic/elasticsearch/commit/8d6cbcb43f7ef57651374bd306f62ee8d03a07d4", "message": "Line length", "committedDate": "2020-10-21T23:11:47Z", "type": "commit"}, {"oid": "27df301596562b8869011e82e7bb4d5253cc1be1", "url": "https://github.com/elastic/elasticsearch/commit/27df301596562b8869011e82e7bb4d5253cc1be1", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-28T16:12:33Z", "type": "commit"}, {"oid": "a344a6599a2820e40aae298ae3eece05d2f7d4b4", "url": "https://github.com/elastic/elasticsearch/commit/a344a6599a2820e40aae298ae3eece05d2f7d4b4", "message": "Fix accidental change to startTime and add featureStates to Entry serialization tests", "committedDate": "2020-10-28T16:34:51Z", "type": "commit"}, {"oid": "2a5c42a7b6252e1c976cbc2d34cbfd13a1a05ac1", "url": "https://github.com/elastic/elasticsearch/commit/2a5c42a7b6252e1c976cbc2d34cbfd13a1a05ac1", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-29T22:11:58Z", "type": "commit"}, {"oid": "2ff22b10f6ce43bbcea622073703ad16a95c9b6a", "url": "https://github.com/elastic/elasticsearch/commit/2ff22b10f6ce43bbcea622073703ad16a95c9b6a", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-10-30T21:48:27Z", "type": "commit"}, {"oid": "7ecabdc928e69d6df7368b9231761b2f11b20c55", "url": "https://github.com/elastic/elasticsearch/commit/7ecabdc928e69d6df7368b9231761b2f11b20c55", "message": "Fix NPE in SnapshotResiliencyTests", "committedDate": "2020-10-30T22:29:34Z", "type": "commit"}, {"oid": "f069cf163e8593defc1624e9229f5f717e5a9a4f", "url": "https://github.com/elastic/elasticsearch/commit/f069cf163e8593defc1624e9229f5f717e5a9a4f", "message": "Remove null guards for SnapshotInfo featureStates as featureStates cannot be null", "committedDate": "2020-10-30T22:34:04Z", "type": "commit"}, {"oid": "93c96df3d9a97b246e1e978f797c0b4bdc679ea6", "url": "https://github.com/elastic/elasticsearch/commit/93c96df3d9a97b246e1e978f797c0b4bdc679ea6", "message": "Omit empty featureStates when creating the snapshots", "committedDate": "2020-10-30T22:38:59Z", "type": "commit"}, {"oid": "9a1ee0ff247cf17a11f6719842f81867e6d3b968", "url": "https://github.com/elastic/elasticsearch/commit/9a1ee0ff247cf17a11f6719842f81867e6d3b968", "message": "Ensure built-in features (i.e. tasks) are propagated to SnapshotsService", "committedDate": "2020-11-03T21:17:59Z", "type": "commit"}, {"oid": "06898bae656cb1697cb8a38f6c59620f76420296", "url": "https://github.com/elastic/elasticsearch/commit/06898bae656cb1697cb8a38f6c59620f76420296", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-03T21:29:09Z", "type": "commit"}, {"oid": "b86dcf663503c34df4fe786fac508180c7a83d30", "url": "https://github.com/elastic/elasticsearch/commit/b86dcf663503c34df4fe786fac508180c7a83d30", "message": "Don't include global state in test snapshot (for now) to prevent conflicts", "committedDate": "2020-11-05T20:03:31Z", "type": "commit"}, {"oid": "4b5cb0870a7d0394be4d4853b6d1d9f6276a553a", "url": "https://github.com/elastic/elasticsearch/commit/4b5cb0870a7d0394be4d4853b6d1d9f6276a553a", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-05T20:09:02Z", "type": "commit"}, {"oid": "1966575489f2ea3643931dd3022d97b843adad2c", "url": "https://github.com/elastic/elasticsearch/commit/1966575489f2ea3643931dd3022d97b843adad2c", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-09T17:54:14Z", "type": "commit"}, {"oid": "e3efb29b961c6e48120e1e04f10519ff5c0a6f5d", "url": "https://github.com/elastic/elasticsearch/commit/e3efb29b961c6e48120e1e04f10519ff5c0a6f5d", "message": "Very basic first cut of snapshottable features API", "committedDate": "2020-11-11T00:02:59Z", "type": "commit"}, {"oid": "c8ed77a604c1d41255a2db8496f7f2556621789a", "url": "https://github.com/elastic/elasticsearch/commit/c8ed77a604c1d41255a2db8496f7f2556621789a", "message": "Add tests for snapshot and restore of system indices", "committedDate": "2020-11-12T19:31:33Z", "type": "commit"}, {"oid": "e9b25ac83f10b79c58ff690833aebba99d2ffd89", "url": "https://github.com/elastic/elasticsearch/commit/e9b25ac83f10b79c58ff690833aebba99d2ffd89", "message": "Add feature description to system index plugins", "committedDate": "2020-11-13T00:05:46Z", "type": "commit"}, {"oid": "a8398fa8a75ace1c97b066c83dd9db4a0cebc86c", "url": "https://github.com/elastic/elasticsearch/commit/a8398fa8a75ace1c97b066c83dd9db4a0cebc86c", "message": "Fix typo in test name", "committedDate": "2020-11-13T00:11:18Z", "type": "commit"}, {"oid": "87fde965404990894578140d38e1013545b8e152", "url": "https://github.com/elastic/elasticsearch/commit/87fde965404990894578140d38e1013545b8e152", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-13T00:17:57Z", "type": "commit"}, {"oid": "8ccbba627e942b7ff111103d413829bbde3ae83f", "url": "https://github.com/elastic/elasticsearch/commit/8ccbba627e942b7ff111103d413829bbde3ae83f", "message": "Merge branch 'si/snapshot-and-restore' into si/snapshot-tests", "committedDate": "2020-11-17T16:08:17Z", "type": "commit"}, {"oid": "410b8bb13c754b24e0190c4a590dd162f8b6ade8", "url": "https://github.com/elastic/elasticsearch/commit/410b8bb13c754b24e0190c4a590dd162f8b6ade8", "message": "Delete indices by UUID rather than name", "committedDate": "2020-11-17T16:09:19Z", "type": "commit"}, {"oid": "c262c0beff82826036f23351d03a17f71fd8db7e", "url": "https://github.com/elastic/elasticsearch/commit/c262c0beff82826036f23351d03a17f71fd8db7e", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-17T22:10:11Z", "type": "commit"}, {"oid": "952ffb077faae6d35d450d0cb52179915f0c9b45", "url": "https://github.com/elastic/elasticsearch/commit/952ffb077faae6d35d450d0cb52179915f0c9b45", "message": "Plumbing through descriptions", "committedDate": "2020-11-17T23:53:17Z", "type": "commit"}, {"oid": "aa32eb51946fce8b00a1f05634d02b02d025a893", "url": "https://github.com/elastic/elasticsearch/commit/aa32eb51946fce8b00a1f05634d02b02d025a893", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-18T18:17:31Z", "type": "commit"}, {"oid": "7ba77bd367c68b93616c9f3ff2b638e5fb949240", "url": "https://github.com/elastic/elasticsearch/commit/7ba77bd367c68b93616c9f3ff2b638e5fb949240", "message": "Allow restoring by feature state", "committedDate": "2020-11-18T20:33:47Z", "type": "commit"}, {"oid": "d544f1ee4edbb08282318fe1cae831195d8c66c1", "url": "https://github.com/elastic/elasticsearch/commit/d544f1ee4edbb08282318fe1cae831195d8c66c1", "message": "Code review fixes", "committedDate": "2020-11-19T16:55:41Z", "type": "commit"}, {"oid": "d2adae14101b94de165625fe10304b47659f3605", "url": "https://github.com/elastic/elasticsearch/commit/d2adae14101b94de165625fe10304b47659f3605", "message": "Merge pull request #1 from williamrandolph/si/snapshot-tests", "committedDate": "2020-11-23T22:23:08Z", "type": "commit"}, {"oid": "88c6c4105fd818f016e4bea62f1a4203ded3cb75", "url": "https://github.com/elastic/elasticsearch/commit/88c6c4105fd818f016e4bea62f1a4203ded3cb75", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-25T22:28:27Z", "type": "commit"}, {"oid": "c3f88136afce815f5918f42c2b9530fe2b2d0c90", "url": "https://github.com/elastic/elasticsearch/commit/c3f88136afce815f5918f42c2b9530fe2b2d0c90", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-11-30T18:56:08Z", "type": "commit"}, {"oid": "64f60d084939a3f6d3ea46ff0e8a8d4bc229f437", "url": "https://github.com/elastic/elasticsearch/commit/64f60d084939a3f6d3ea46ff0e8a8d4bc229f437", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-01T23:37:13Z", "type": "commit"}, {"oid": "ab4106a427d1976a722369e7db574a0fb32ab706", "url": "https://github.com/elastic/elasticsearch/commit/ab4106a427d1976a722369e7db574a0fb32ab706", "message": "Treat a `null` and empty list of feature states differently\n\nA `null` means \"default to `include_global_state`\" - i.e. restore all\nsystem indices if it's `true`, or none otherwise. An empty list means\nrestore *no* system indices, even if `include_global_state` is `true`.", "committedDate": "2020-12-02T00:34:15Z", "type": "commit"}, {"oid": "031e86e3c0ba023afdd09c9c9a28d5c6ac1e9c4b", "url": "https://github.com/elastic/elasticsearch/commit/031e86e3c0ba023afdd09c9c9a28d5c6ac1e9c4b", "message": "Don't rename system indices", "committedDate": "2020-12-02T23:38:38Z", "type": "commit"}, {"oid": "9b6d1ff5d88c21d427ae37797a0c32044c8114fe", "url": "https://github.com/elastic/elasticsearch/commit/9b6d1ff5d88c21d427ae37797a0c32044c8114fe", "message": "Refactoring/cleanup. No functionality changes", "committedDate": "2020-12-03T00:09:42Z", "type": "commit"}, {"oid": "f24ac7862a079365985926dc8a5e99d8b9f809fc", "url": "https://github.com/elastic/elasticsearch/commit/f24ac7862a079365985926dc8a5e99d8b9f809fc", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-04T00:23:47Z", "type": "commit"}, {"oid": "c8ca4a16998163dc073a2855149fe3432371241f", "url": "https://github.com/elastic/elasticsearch/commit/c8ca4a16998163dc073a2855149fe3432371241f", "message": "Name and description for Fleet", "committedDate": "2020-12-04T00:30:11Z", "type": "commit"}, {"oid": "c16d60f78cd14af7874cfbeb38d6909cccca1d40", "url": "https://github.com/elastic/elasticsearch/commit/c16d60f78cd14af7874cfbeb38d6909cccca1d40", "message": "Add deprecation warning for directly restoring system indices", "committedDate": "2020-12-04T19:07:51Z", "type": "commit"}, {"oid": "3b0fb7f7d7c6d10133dddcac5840c06a5793a5b7", "url": "https://github.com/elastic/elasticsearch/commit/3b0fb7f7d7c6d10133dddcac5840c06a5793a5b7", "message": "Add test for bad feature state request", "committedDate": "2020-12-04T19:08:21Z", "type": "commit"}, {"oid": "cfbfbcba0f7d87e73224fa344c882e27872bcf8c", "url": "https://github.com/elastic/elasticsearch/commit/cfbfbcba0f7d87e73224fa344c882e27872bcf8c", "message": "Make HashSet variable final", "committedDate": "2020-12-04T19:45:49Z", "type": "commit"}, {"oid": "d0b3a4478de1ea1f87e97a80afe71031945a6bf8", "url": "https://github.com/elastic/elasticsearch/commit/d0b3a4478de1ea1f87e97a80afe71031945a6bf8", "message": "Deprecate direct system index restoration\n\nThis commit covers two goals:\r\n\r\n* Emit a deprecation log when a request explicitly restores a system index (rather than via feature state) if the snapshot has feature states\r\n* Throw an exception if a feature state is requested but it's not in the snapshot\r\n\r\nThe `getFeatureStatesToRestore` method already throws an exception if a requested feature state isn't in the snapshot, so I added an integration test to cover this case.\r\n\r\nIf one of the indices in the restore request is a system index, it might be from a feature that wasn't snapshotted, so we won't know that it's a system index until we've resolved the index against repository data. We can check that each system index has not been directly requested as we build the list of system indices to delete.", "committedDate": "2020-12-04T23:25:41Z", "type": "commit"}, {"oid": "091ca4cda3016735f38c218a6424dbca05790f96", "url": "https://github.com/elastic/elasticsearch/commit/091ca4cda3016735f38c218a6424dbca05790f96", "message": "Only warn when explicitly requesting system indices if the snapshot is from a version with feature states", "committedDate": "2020-12-08T18:30:02Z", "type": "commit"}, {"oid": "05fd6d71351992ed6d2def1d43c7345350c37ffd", "url": "https://github.com/elastic/elasticsearch/commit/05fd6d71351992ed6d2def1d43c7345350c37ffd", "message": "Some missed s/plugin/feature/", "committedDate": "2020-12-08T18:31:38Z", "type": "commit"}, {"oid": "4af0a2417d2a0d941f232e096ecf6f38f01efcab", "url": "https://github.com/elastic/elasticsearch/commit/4af0a2417d2a0d941f232e096ecf6f38f01efcab", "message": "Address a couple minor TODO comments", "committedDate": "2020-12-08T18:45:49Z", "type": "commit"}, {"oid": "439679df5388774561eb6d1db8bca001045271b7", "url": "https://github.com/elastic/elasticsearch/commit/439679df5388774561eb6d1db8bca001045271b7", "message": "Address TODO by generating random feature infos in test", "committedDate": "2020-12-08T18:49:51Z", "type": "commit"}, {"oid": "376e2641ee5a05866a9b291f799c760795f75702", "url": "https://github.com/elastic/elasticsearch/commit/376e2641ee5a05866a9b291f799c760795f75702", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-08T19:27:15Z", "type": "commit"}, {"oid": "3c3b1b86d10eb9bc2f432820c011e8f7749a6bcd", "url": "https://github.com/elastic/elasticsearch/commit/3c3b1b86d10eb9bc2f432820c011e8f7749a6bcd", "message": "One missed s/plugin/feature/", "committedDate": "2020-12-08T23:01:23Z", "type": "commit"}, {"oid": "d36f6c844f003d4a9b2b1a7c37c3519e4d0550a7", "url": "https://github.com/elastic/elasticsearch/commit/d36f6c844f003d4a9b2b1a7c37c3519e4d0550a7", "message": "Basic associated indices implementation", "committedDate": "2020-12-08T23:20:10Z", "type": "commit"}, {"oid": "ef88902fd57ec7a5506ce533253e9c99dd23c27f", "url": "https://github.com/elastic/elasticsearch/commit/ef88902fd57ec7a5506ce533253e9c99dd23c27f", "message": "Remove unused method", "committedDate": "2020-12-09T22:23:52Z", "type": "commit"}, {"oid": "10f28020d6aa16e223f8340169fced8ade079d8f", "url": "https://github.com/elastic/elasticsearch/commit/10f28020d6aa16e223f8340169fced8ade079d8f", "message": "Don't include associated indices in the feature state (but snapshot them)\n\nWe don't control the namespace for hidden indices as much as we do for\nsystem indices, so we shouldn't just stomp on any existing indices that\nconflict with associated indices. But we can at least ensure they're\nincluded in the snapshot.", "committedDate": "2020-12-09T23:02:57Z", "type": "commit"}, {"oid": "e9b0f80992b75390a8ff1417d90de417d47b1f16", "url": "https://github.com/elastic/elasticsearch/commit/e9b0f80992b75390a8ff1417d90de417d47b1f16", "message": "Delete all system indices for features that are being restored", "committedDate": "2020-12-10T00:03:15Z", "type": "commit"}, {"oid": "2e54c9470f9345df39eb6593a9013f7bd9df86a6", "url": "https://github.com/elastic/elasticsearch/commit/2e54c9470f9345df39eb6593a9013f7bd9df86a6", "message": "Always restore aliases for system indices", "committedDate": "2020-12-10T00:09:50Z", "type": "commit"}, {"oid": "7300c0c35fc1e8d7737319daaf07b3145fe01a14", "url": "https://github.com/elastic/elasticsearch/commit/7300c0c35fc1e8d7737319daaf07b3145fe01a14", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-10T00:13:09Z", "type": "commit"}, {"oid": "2b9945ba7e90b216de5d430f6df90759fdb4c6ed", "url": "https://github.com/elastic/elasticsearch/commit/2b9945ba7e90b216de5d430f6df90759fdb4c6ed", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-10T23:19:05Z", "type": "commit"}, {"oid": "cdc3bd1433a127b5124cff9f6ab1f65fdb73572d", "url": "https://github.com/elastic/elasticsearch/commit/cdc3bd1433a127b5124cff9f6ab1f65fdb73572d", "message": "Don't delete all indices if there aren't any feature states to restore", "committedDate": "2020-12-10T23:42:19Z", "type": "commit"}, {"oid": "9520873444802dde081d85dc36d37a8dc1865d18", "url": "https://github.com/elastic/elasticsearch/commit/9520873444802dde081d85dc36d37a8dc1865d18", "message": "Null guards for FeatureStates", "committedDate": "2020-12-10T23:42:31Z", "type": "commit"}, {"oid": "a0baac2828ee5e297493c7e92ead623a45f5b6f7", "url": "https://github.com/elastic/elasticsearch/commit/a0baac2828ee5e297493c7e92ead623a45f5b6f7", "message": "Make Get Snapshottable Features non-operator only", "committedDate": "2020-12-11T00:48:49Z", "type": "commit"}, {"oid": "262760f1dad23aec28740dee496bc15cc8093fdd", "url": "https://github.com/elastic/elasticsearch/commit/262760f1dad23aec28740dee496bc15cc8093fdd", "message": "Fix test now that system indices aren't always deleted", "committedDate": "2020-12-11T01:16:02Z", "type": "commit"}, {"oid": "b416193b70a6b185b0fe9f01ba5587eed759ffdb", "url": "https://github.com/elastic/elasticsearch/commit/b416193b70a6b185b0fe9f01ba5587eed759ffdb", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-14T18:24:16Z", "type": "commit"}, {"oid": "2dde730a2db2ad65bd1e93f887ce264ff905cca4", "url": "https://github.com/elastic/elasticsearch/commit/2dde730a2db2ad65bd1e93f887ce264ff905cca4", "message": "Improve system index snapshot IT\n\nI did some refactoring and cleanup of the test class, and removed some\nunnecessary operations from the tests so it's easier to see what they're\ndoing. I also added comments.\n\nWe have four new tests here as well: \n\n1.`testSystemIndicesCannotBeRenamed` - verify that even if a system\nindex matches a rename pattern, it isn't renamed in a restore operation\n2. `testRestoreSystemIndicesAsGlobalStateWithNullFeatureStateList` -\nwith `restoreGlobalState` set to true, explicitly pass a `null` for the\nlist of feature states and verify that all feature states are restored.\n3. `testRestoreSystemIndicesAsGlobalStateWithEmptyListOfFeatureStates` -\nagain restoring global state, pass an empty list for the list of feature\nstates and verify that no feature states are restored.\n4. `testRestoreSystemIndicesAsGlobalStateWithEmptyListOfFeatureStatesNoIndicesSpecified`\n- test for BWC edge case behavior. If no indices are specified and an\nempty list of feature states is passed, verify that we try to restore\nthe system index because it was included in the expansion of \"all\nindices.\" This behavior will change in the future.", "committedDate": "2020-12-17T23:52:18Z", "type": "commit"}, {"oid": "68316718f5cd121006d5755612474d653b642520", "url": "https://github.com/elastic/elasticsearch/commit/68316718f5cd121006d5755612474d653b642520", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2020-12-17T23:59:30Z", "type": "commit"}, {"oid": "510ab18e81d24019c5459ad5e352739454de92af", "url": "https://github.com/elastic/elasticsearch/commit/510ab18e81d24019c5459ad5e352739454de92af", "message": "Name/description for test plugins", "committedDate": "2020-12-18T00:05:05Z", "type": "commit"}, {"oid": "20c6b98b76205259c3fc7e209b47e7fdfb0101d6", "url": "https://github.com/elastic/elasticsearch/commit/20c6b98b76205259c3fc7e209b47e7fdfb0101d6", "message": "Add a test to ensure system indices in a feature state are removed when restoring that state", "committedDate": "2020-12-18T00:36:08Z", "type": "commit"}, {"oid": "15b4903da98c3917d0c7ced9901cc6b54aa24767", "url": "https://github.com/elastic/elasticsearch/commit/15b4903da98c3917d0c7ced9901cc6b54aa24767", "message": "Add test to ensure system index aliases are always restored", "committedDate": "2020-12-18T00:48:56Z", "type": "commit"}, {"oid": "792d735cad4503fb25eaea7544eae1b88536a54e", "url": "https://github.com/elastic/elasticsearch/commit/792d735cad4503fb25eaea7544eae1b88536a54e", "message": "Missed a necessary refresh", "committedDate": "2020-12-18T00:49:09Z", "type": "commit"}, {"oid": "b375b4ba89129e4b74858dade883e32ed0964654", "url": "https://github.com/elastic/elasticsearch/commit/b375b4ba89129e4b74858dade883e32ed0964654", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-04T18:40:59Z", "type": "commit"}, {"oid": "85b90e8e72ebd0c06e38048be3f5d229c500f2f9", "url": "https://github.com/elastic/elasticsearch/commit/85b90e8e72ebd0c06e38048be3f5d229c500f2f9", "message": "Fix rest test and add test coverage elsewhere", "committedDate": "2021-01-05T17:08:29Z", "type": "commit"}, {"oid": "3909cfc8cc010bdaf7c199160b1d425f7e919e4d", "url": "https://github.com/elastic/elasticsearch/commit/3909cfc8cc010bdaf7c199160b1d425f7e919e4d", "message": "Ignore global state in searchable snapshot test", "committedDate": "2021-01-05T20:02:46Z", "type": "commit"}, {"oid": "86ed638debfc7e9a71ee6eedeb0612223cf76aac", "url": "https://github.com/elastic/elasticsearch/commit/86ed638debfc7e9a71ee6eedeb0612223cf76aac", "message": "Nest features array under an object key in Get Features API to better match API standards", "committedDate": "2021-01-06T19:07:12Z", "type": "commit"}, {"oid": "0a70ae1750da52003d919d71ecfa8e208f5d85f4", "url": "https://github.com/elastic/elasticsearch/commit/0a70ae1750da52003d919d71ecfa8e208f5d85f4", "message": "Get Snapshottable Features API spec & yaml spec/smoke test", "committedDate": "2021-01-06T19:07:45Z", "type": "commit"}, {"oid": "9f16920c4c915ee5e131979c4abc5e2e59fc85be", "url": "https://github.com/elastic/elasticsearch/commit/9f16920c4c915ee5e131979c4abc5e2e59fc85be", "message": "Update docs for feature states", "committedDate": "2021-01-06T19:20:49Z", "type": "commit"}, {"oid": "2e652fa04620ddbf27d8022804c7a54a24589ebb", "url": "https://github.com/elastic/elasticsearch/commit/2e652fa04620ddbf27d8022804c7a54a24589ebb", "message": "Merge branch 'master' into si/snapshot-and-restore", "committedDate": "2021-01-06T20:01:22Z", "type": "commit"}, {"oid": "178e941f2b3d52769157c9e6ace16a4068ae13b3", "url": "https://github.com/elastic/elasticsearch/commit/178e941f2b3d52769157c9e6ace16a4068ae13b3", "message": "Merge remote-tracking branch 'gwbrown/si/snapshot-and-restore' into si/snapshot-and-restore", "committedDate": "2021-01-06T20:08:03Z", "type": "commit"}]}