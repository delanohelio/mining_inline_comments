{"pr_number": 66327, "pr_title": "Allow blocking calls on futures used in TimestampFieldMapperService", "pr_createdAt": "2020-12-15T10:55:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66327", "timeline": [{"oid": "242ca00666fb98c1a7d5d10480cbc9a1f8af556f", "url": "https://github.com/elastic/elasticsearch/commit/242ca00666fb98c1a7d5d10480cbc9a1f8af556f", "message": "Allow blocking calls on futures used in TimestampFieldMapperService\n\nSome of the clients of TimestampFieldMapperService might be executed\nin a transport thread, we only do a blocking action once the future\nis completed in #getTimestampFieldType, so technically we are not\nblocking the thread. To avoid triggering assertion errors, we mark\nthat future as non-blocking.", "committedDate": "2020-12-15T10:50:31Z", "type": "commit"}, {"oid": "979eed947fbbfb693fa52892439383a2a90e239e", "url": "https://github.com/elastic/elasticsearch/commit/979eed947fbbfb693fa52892439383a2a90e239e", "message": "Use a timeout of 0 to avoid triggering exceptions", "committedDate": "2020-12-15T11:35:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3MDM4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66327#discussion_r543270383", "bodyText": "Let's not fail the whole node if we messed this up somehow :)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }", "author": "DaveCTurner", "createdAt": "2020-12-15T11:38:28Z", "path": "server/src/main/java/org/elasticsearch/indices/TimestampFieldMapperService.java", "diffHunk": "@@ -176,7 +178,17 @@ private static boolean hasUsefulTimestampField(IndexMetadata indexMetadata) {\n         if (future == null || future.isDone() == false) {\n             return null;\n         }\n-        return future.actionGet();\n+\n+        try {\n+            // It's possible that callers of this class are executed\n+            // in a transport thread, for that reason we request\n+            // the future value with a timeout of 0. That won't\n+            // trigger assertion errors.\n+            return future.actionGet(TimeValue.ZERO);\n+        } catch (ElasticsearchTimeoutException e) {\n+            assert false : \"Unexpected timeout exception while getting a timestamp mapping\";\n+        }", "originalCommit": "979eed947fbbfb693fa52892439383a2a90e239e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba3545c55889ed337b487b37cbfbdced04133665", "url": "https://github.com/elastic/elasticsearch/commit/ba3545c55889ed337b487b37cbfbdced04133665", "message": "Update server/src/main/java/org/elasticsearch/indices/TimestampFieldMapperService.java\n\nCo-authored-by: David Turner <david.turner@elastic.co>", "committedDate": "2020-12-15T11:45:32Z", "type": "commit"}, {"oid": "f5c19ed47f989d5d1e3067ec53efa8b93e5222f8", "url": "https://github.com/elastic/elasticsearch/commit/f5c19ed47f989d5d1e3067ec53efa8b93e5222f8", "message": "Fix compilation error", "committedDate": "2020-12-15T12:17:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMyNjk0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66327#discussion_r543326947", "bodyText": "We can remove this override now that we're setting the timeout.", "author": "DaveCTurner", "createdAt": "2020-12-15T13:09:05Z", "path": "server/src/main/java/org/elasticsearch/indices/TimestampFieldMapperService.java", "diffHunk": "@@ -104,7 +106,15 @@ public void applyClusterState(ClusterChangedEvent event) {\n \n             if (hasUsefulTimestampField(indexMetadata) && fieldTypesByIndex.containsKey(index) == false) {\n                 logger.trace(\"computing timestamp mapping for {}\", index);\n-                final PlainActionFuture<DateFieldMapper.DateFieldType> future = new PlainActionFuture<>();\n+                final PlainActionFuture<DateFieldMapper.DateFieldType> future = new PlainActionFuture<>() {\n+                    @Override\n+                    protected boolean blockingAllowed() {", "originalCommit": "f5c19ed47f989d5d1e3067ec53efa8b93e5222f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMyNzY3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66327#discussion_r543327676", "bodyText": "Oh, I thought I removed it... I need more \u2615  today", "author": "fcofdez", "createdAt": "2020-12-15T13:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMyNjk0Nw=="}], "type": "inlineReview"}, {"oid": "4b707f78eb20f32993d5b611782e77435772e44b", "url": "https://github.com/elastic/elasticsearch/commit/4b707f78eb20f32993d5b611782e77435772e44b", "message": "Remove method override", "committedDate": "2020-12-15T13:32:28Z", "type": "commit"}]}