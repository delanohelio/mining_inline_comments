{"pr_number": 61544, "pr_title": "[ML] Recover data frame extraction search from latest sort key", "pr_createdAt": "2020-08-25T17:09:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61544", "timeline": [{"oid": "f65d7391a31f5bd554898975374b35eb135048f9", "url": "https://github.com/elastic/elasticsearch/commit/f65d7391a31f5bd554898975374b35eb135048f9", "message": "[ML] Recover data frame extraction search from latest sort key\n\nIf a search failure occurs during data frame extraction we catch\nthe error and retry once. However, we retry another search that is\nidentical to the first one. This means we will re-fetch any docs\nthat were already processed. This may result either to training\na model using duplicate data or in the case of outlier detection to\nan error message that the process received more records than it\nexpected.\n\nThis commit fixes this issue by tracking the latest doc's sort key\nand then using that in a range query in case we restart the search\ndue to a failure.", "committedDate": "2020-08-25T17:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA1ODk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477058977", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    hit.sortValues(new String[] { sortValue}, new DocValueFormat[] { DocValueFormat.RAW });\n          \n          \n            \n                    hit.sortValues(new String[] { sortValue }, new DocValueFormat[] { DocValueFormat.RAW });", "author": "przemekwitek", "createdAt": "2020-08-26T06:18:08Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/test/SearchHitBuilder.java", "diffHunk": "@@ -41,6 +42,11 @@ public SearchHitBuilder setSource(String sourceJson) {\n         return this;\n     }\n \n+    public SearchHitBuilder setStringSortValue(String sortValue) {\n+        hit.sortValues(new String[] { sortValue}, new DocValueFormat[] { DocValueFormat.RAW });", "originalCommit": "f65d7391a31f5bd554898975374b35eb135048f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDIxNg==", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477060216", "bodyText": "Is hit.getSortValues() always non-empty?", "author": "przemekwitek", "createdAt": "2020-08-26T06:21:22Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractor.java", "diffHunk": "@@ -426,5 +441,9 @@ public boolean isTraining() {\n         public int getChecksum() {\n             return Arrays.hashCode(values);\n         }\n+\n+        public String getSortKey() {\n+            return (String) hit.getSortValues()[0];", "originalCommit": "f65d7391a31f5bd554898975374b35eb135048f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA3NTEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477075134", "bodyText": "Yes because we own the search from within the extractor and we are sorting on the id copy field.", "author": "dimitris-athanasiou", "createdAt": "2020-08-26T06:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477060508", "bodyText": "IMO hasSize matcher could be used here instead.", "author": "przemekwitek", "createdAt": "2020-08-26T06:22:08Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractorTests.java", "diffHunk": "@@ -196,6 +197,13 @@ public void testRecoveryFromErrorOnSearchAfterRetry() throws IOException {\n         List<String> capturedClearScrollRequests = getCapturedClearScrollIds();\n         assertThat(capturedClearScrollRequests.size(), equalTo(1));\n         assertThat(capturedClearScrollRequests.get(0), equalTo(lastAndEmptyResponse.getScrollId()));\n+\n+        // Notice we've done two searches here\n+        assertThat(dataExtractor.capturedSearchRequests.size(), equalTo(2));", "originalCommit": "f65d7391a31f5bd554898975374b35eb135048f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9dec047329b393c975ad0a1700e005a0e6c8ba6d", "url": "https://github.com/elastic/elasticsearch/commit/9dec047329b393c975ad0a1700e005a0e6c8ba6d", "message": "Address review comments", "committedDate": "2020-08-26T06:56:48Z", "type": "commit"}, {"oid": "bdab6ac7da66876a183fb6e21cc554beeb83dba9", "url": "https://github.com/elastic/elasticsearch/commit/bdab6ac7da66876a183fb6e21cc554beeb83dba9", "message": "Merge branch 'master' into recover-df-extraction-search-from-latest-sort-key", "committedDate": "2020-08-26T07:20:24Z", "type": "commit"}]}