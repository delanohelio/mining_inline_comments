{"pr_number": 64849, "pr_title": "[ML] Truncate long audit messages", "pr_createdAt": "2020-11-10T09:51:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64849", "timeline": [{"oid": "0298f8e2ee5a41cbe8af801a89e6c056cd0ebe54", "url": "https://github.com/elastic/elasticsearch/commit/0298f8e2ee5a41cbe8af801a89e6c056cd0ebe54", "message": "Truncate audit messages at 8191 characters", "committedDate": "2020-11-10T10:08:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMjYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524002605", "bodyText": "Could you explain what is the value of this assertion given that you check this condition in the line above?", "author": "przemekwitek", "createdAt": "2020-11-16T09:11:43Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessage.java", "diffHunk": "@@ -95,7 +96,13 @@ public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params par\n         if (resourceId != null) {\n             builder.field(getResourceField(), resourceId);\n         }\n-        builder.field(MESSAGE.getPreferredName(), message.substring(0, Math.min(message.length(), MAX_AUDIT_MESSAGE_CHARS)));\n+\n+        if (message.length() > MAX_AUDIT_MESSAGE_CHARS) {\n+            assert message.length() > MAX_AUDIT_MESSAGE_CHARS : \"Audit message is unexpectedly large\";", "originalCommit": "011a97019852f919bd8bd1afd231a009ec7dd4b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAzNDEwMg==", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524034102", "bodyText": "The idea is that we want this to throw in CI tests if we get a super long message. We don't expect to have a long message but if we do we would like to know about it.\nObviously the assertion won't affect production deployments", "author": "davidkyle", "createdAt": "2020-11-16T09:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMjYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNTI0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524005247", "bodyText": "Let's put a blank line before each example to be able to visually tell them apart.", "author": "przemekwitek", "createdAt": "2020-11-16T09:14:20Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessageTests.java", "diffHunk": "@@ -79,6 +86,67 @@ public void testNewError() {\n         assertThat(message.getNodeName(), equalTo(NODE_NAME));\n     }\n \n+    public void testLongMessageIsTruncated() throws IOException {\n+        AbstractAuditMessage longMessage = new AbstractAuditMessage(\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            \"thisis17charslong\".repeat(490),\n+            randomFrom(Level.values()),\n+            new Date(),\n+            randomBoolean() ? null : randomAlphaOfLengthBetween(1, 20)\n+        ) {\n+            @Override\n+            public String getJobType() {\n+                return \"unused\";\n+            }\n+\n+            @Override\n+            protected String getResourceField() {\n+                return \"unused\";\n+            }\n+        };\n+\n+        assertThat(longMessage.getMessage().length(), greaterThan(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+\n+        // serialise the message and check the new message is truncated\n+        XContentType xContentType = randomFrom(XContentType.values());\n+        BytesReference originalXContent = XContentHelper.toXContent(longMessage, xContentType, randomBoolean());\n+        XContentParser parser = createParser(XContentFactory.xContent(xContentType), originalXContent);\n+        AbstractAuditMessage parsed = doParseInstance(parser);\n+        assertThat(parsed.getMessage().length(), equalTo(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+    }\n+\n+    public void testTruncateString() {\n+        String message = \"a short message short message short message short message short message\";\n+        String truncated = AbstractAuditMessage.truncateMessage(message, 20);\n+        assertEquals(\"a ... (truncated)\", truncated);\n+        assertThat(truncated.length(), lessThanOrEqualTo(20));\n+        truncated = AbstractAuditMessage.truncateMessage(message, 23);", "originalCommit": "011a97019852f919bd8bd1afd231a009ec7dd4b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNjc1NA==", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524006754", "bodyText": "assertThat(..., equalTo(...)) could be used instead of assertEquals for consistency as you're already using assertThat with lessThanOrEqualTo below.", "author": "przemekwitek", "createdAt": "2020-11-16T09:15:42Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessageTests.java", "diffHunk": "@@ -79,6 +86,67 @@ public void testNewError() {\n         assertThat(message.getNodeName(), equalTo(NODE_NAME));\n     }\n \n+    public void testLongMessageIsTruncated() throws IOException {\n+        AbstractAuditMessage longMessage = new AbstractAuditMessage(\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            \"thisis17charslong\".repeat(490),\n+            randomFrom(Level.values()),\n+            new Date(),\n+            randomBoolean() ? null : randomAlphaOfLengthBetween(1, 20)\n+        ) {\n+            @Override\n+            public String getJobType() {\n+                return \"unused\";\n+            }\n+\n+            @Override\n+            protected String getResourceField() {\n+                return \"unused\";\n+            }\n+        };\n+\n+        assertThat(longMessage.getMessage().length(), greaterThan(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+\n+        // serialise the message and check the new message is truncated\n+        XContentType xContentType = randomFrom(XContentType.values());\n+        BytesReference originalXContent = XContentHelper.toXContent(longMessage, xContentType, randomBoolean());\n+        XContentParser parser = createParser(XContentFactory.xContent(xContentType), originalXContent);\n+        AbstractAuditMessage parsed = doParseInstance(parser);\n+        assertThat(parsed.getMessage().length(), equalTo(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+    }\n+\n+    public void testTruncateString() {\n+        String message = \"a short message short message short message short message short message\";\n+        String truncated = AbstractAuditMessage.truncateMessage(message, 20);\n+        assertEquals(\"a ... (truncated)\", truncated);", "originalCommit": "011a97019852f919bd8bd1afd231a009ec7dd4b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA0NzI2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524047262", "bodyText": "I know it is not consistent but I find assertEquals easier to read and understand.", "author": "davidkyle", "createdAt": "2020-11-16T09:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNjc1NA=="}], "type": "inlineReview"}, {"oid": "e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "url": "https://github.com/elastic/elasticsearch/commit/e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "message": "Make test easier to read", "committedDate": "2020-11-16T09:49:58Z", "type": "forcePushed"}, {"oid": "363eb46088e28040909c1837adcd2b4c034a296f", "url": "https://github.com/elastic/elasticsearch/commit/363eb46088e28040909c1837adcd2b4c034a296f", "message": "Make test easier to read", "committedDate": "2020-11-18T08:52:03Z", "type": "forcePushed"}, {"oid": "dacc726b3aced3b5a872e56271863f5e5d057ac1", "url": "https://github.com/elastic/elasticsearch/commit/dacc726b3aced3b5a872e56271863f5e5d057ac1", "message": "Truncate audit messages at 8191 characters", "committedDate": "2020-11-18T09:43:14Z", "type": "commit"}, {"oid": "fb6b5b013da723e9abbf1a53919944f0fd27a16e", "url": "https://github.com/elastic/elasticsearch/commit/fb6b5b013da723e9abbf1a53919944f0fd27a16e", "message": "Append ... (truncated) when the messages is truncated\n\nAnd add assertion that the message is not over the max length", "committedDate": "2020-11-18T09:43:14Z", "type": "commit"}, {"oid": "47908c35adcd3121e4ccd3de5c0b3308dea5447e", "url": "https://github.com/elastic/elasticsearch/commit/47908c35adcd3121e4ccd3de5c0b3308dea5447e", "message": "Make test easier to read", "committedDate": "2020-11-18T09:43:14Z", "type": "commit"}, {"oid": "47908c35adcd3121e4ccd3de5c0b3308dea5447e", "url": "https://github.com/elastic/elasticsearch/commit/47908c35adcd3121e4ccd3de5c0b3308dea5447e", "message": "Make test easier to read", "committedDate": "2020-11-18T09:43:14Z", "type": "forcePushed"}]}