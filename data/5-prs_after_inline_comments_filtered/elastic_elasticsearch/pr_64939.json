{"pr_number": 64939, "pr_title": "[7.x] Implement aggregations on aggregate metric fields", "pr_createdAt": "2020-11-11T15:31:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64939", "timeline": [{"oid": "272439211350c7ca4c41eb864a2f40be2e43c5dd", "url": "https://github.com/elastic/elasticsearch/commit/272439211350c7ca4c41eb864a2f40be2e43c5dd", "message": "Implement aggregations on aggregate metric fields (#56745)\n\nIn the process of developing a new implementation for the Elasticsearch Rollups functionality we came up with the concept of the aggregate metric field type.\n\nThe aggregate_metric_double field type can store the results of aggregations (currently min, max, sum, value_count and avg are supported - more to come).\n\nThis field allows us to run (min, max, sum, value_count, avg) aggregations on the container field and the field will return the correct metric depending on the aggregation that is computed.", "committedDate": "2020-11-11T13:25:39Z", "type": "commit"}, {"oid": "56ea6dd78606d5f833033992d96f2c9d35bc4806", "url": "https://github.com/elastic/elasticsearch/commit/56ea6dd78606d5f833033992d96f2c9d35bc4806", "message": "Fix build and test after backport", "committedDate": "2020-11-11T15:13:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0MTgyMg==", "url": "https://github.com/elastic/elasticsearch/pull/64939#discussion_r521441822", "bodyText": "@polyfractal I guess after this PR is merged, we should change the minimal supported version in master branch from V_8_0_0 to V_7_11_0. Right?", "author": "csoulios", "createdAt": "2020-11-11T15:34:08Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/aggregatemetric/AggregateMetricFeatureSetUsage.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.aggregatemetric;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.xpack.core.XPackFeatureSet;\n+import org.elasticsearch.xpack.core.XPackField;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class AggregateMetricFeatureSetUsage extends XPackFeatureSet.Usage {\n+\n+    public AggregateMetricFeatureSetUsage(StreamInput input) throws IOException {\n+        super(input);\n+    }\n+\n+    public AggregateMetricFeatureSetUsage(boolean available, boolean enabled) {\n+        super(XPackField.AGGREGATE_METRIC, available, enabled);\n+    }\n+\n+    @Override public Version getMinimalSupportedVersion() {\n+        return Version.V_7_11_0;", "originalCommit": "56ea6dd78606d5f833033992d96f2c9d35bc4806", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY1ODY3OA==", "url": "https://github.com/elastic/elasticsearch/pull/64939#discussion_r521658678", "bodyText": "Yes, I believe that is correct... we'll need to followup with a third PR in master to toggle over the BWC version.  And adjust any yaml/BWC tests as necessary too, if they had version skips added in master, etc.", "author": "polyfractal", "createdAt": "2020-11-11T21:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0MTgyMg=="}], "type": "inlineReview"}, {"oid": "79013d6f3bc02d67b616a7790a41889aa2601418", "url": "https://github.com/elastic/elasticsearch/commit/79013d6f3bc02d67b616a7790a41889aa2601418", "message": "checkstyle", "committedDate": "2020-11-11T15:42:51Z", "type": "commit"}, {"oid": "c58b1cc4809430268f39c5f550b09961f8895a77", "url": "https://github.com/elastic/elasticsearch/commit/c58b1cc4809430268f39c5f550b09961f8895a77", "message": "Fix tests", "committedDate": "2020-11-11T17:24:04Z", "type": "commit"}, {"oid": "9a5e5c976268ce12ce2c168f84dc42fc5ae7b92d", "url": "https://github.com/elastic/elasticsearch/commit/9a5e5c976268ce12ce2c168f84dc42fc5ae7b92d", "message": "checkstyle", "committedDate": "2020-11-11T17:31:23Z", "type": "commit"}, {"oid": "e7312ae67634f8eff94b74357c7084894fbbb3b3", "url": "https://github.com/elastic/elasticsearch/commit/e7312ae67634f8eff94b74357c7084894fbbb3b3", "message": "Merge branch '7.x' into aggregate-metrics-7.x", "committedDate": "2020-11-11T19:24:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2MjAwNA==", "url": "https://github.com/elastic/elasticsearch/pull/64939#discussion_r521662004", "bodyText": "I think we need to add a clause to check if this is running as a transport client, and not inject the plugin in that case.  See: https://github.com/elastic/elasticsearch/blob/7.x/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/AnalyticsPlugin.java#L143\nI'm not 100 percent sure this is still necessary, but I skimmed the other 7x plugins and they seem to still have this structure so probably for the best to follow suit too :)", "author": "polyfractal", "createdAt": "2020-11-11T21:55:21Z", "path": "x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/AggregateMetricMapperPlugin.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.aggregatemetric;\n+\n+import org.elasticsearch.common.collect.List;\n+import org.elasticsearch.common.inject.Module;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.plugins.ActionPlugin;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.SearchPlugin;\n+import org.elasticsearch.search.aggregations.support.ValuesSourceRegistry;\n+import org.elasticsearch.xpack.aggregatemetric.aggregations.metrics.AggregateMetricsAggregatorsRegistrar;\n+import org.elasticsearch.xpack.aggregatemetric.mapper.AggregateDoubleMetricFieldMapper;\n+import org.elasticsearch.xpack.core.XPackPlugin;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import static java.util.Collections.singletonMap;\n+\n+public class AggregateMetricMapperPlugin extends Plugin implements MapperPlugin, ActionPlugin, SearchPlugin {\n+\n+    public AggregateMetricMapperPlugin() {}\n+\n+    @Override\n+    public Collection<Module> createGuiceModules() {\n+        return Collections.singletonList(b -> { XPackPlugin.bindFeatureSet(b, AggregateMetricFeatureSet.class); });", "originalCommit": "e7312ae67634f8eff94b74357c7084894fbbb3b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8373b3f238528a9233ffe7c0f6599f594bc5d4b2", "url": "https://github.com/elastic/elasticsearch/commit/8373b3f238528a9233ffe7c0f6599f594bc5d4b2", "message": "Addressed reviewer comments", "committedDate": "2020-11-12T10:14:17Z", "type": "commit"}]}