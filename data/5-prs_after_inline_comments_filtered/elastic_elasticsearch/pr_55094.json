{"pr_number": 55094, "pr_title": "SQL: introduce a query builder for the Rest tests", "pr_createdAt": "2020-04-11T09:12:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55094", "timeline": [{"oid": "89814e2948158f8f863adef8f579a54b3475a29d", "url": "https://github.com/elastic/elasticsearch/commit/89814e2948158f8f863adef8f579a54b3475a29d", "message": "Introduce a query builder for the rest tests\n\nThe new BaseRestSqlTestCase.RequestObjectBuilder class is a helper class\nto build REST request objects for the tests. Consequently, \"manual\" string\nconcatenation to form JSON is done away with.\n\nThe class mimics SqlQueryRequestBuilder API.", "committedDate": "2020-04-10T09:04:03Z", "type": "commit"}, {"oid": "ef2f13ffa6d254c852d0ccbdd648413324582338", "url": "https://github.com/elastic/elasticsearch/commit/ef2f13ffa6d254c852d0ccbdd648413324582338", "message": "Further extension for RequestObjectBuilder usage\n\nReplace more \"manual\" JSON building with RequestObjectBuilder calls.", "committedDate": "2020-04-11T08:21:04Z", "type": "commit"}, {"oid": "52668f7289d6ca2fc55276481f51bde1449e10fc", "url": "https://github.com/elastic/elasticsearch/commit/52668f7289d6ca2fc55276481f51bde1449e10fc", "message": "Extract SQL req/repl JSON obj attribute names\n\nThis commit extracts the attribute names used in SQL's JSON\nrequest/replies as Protocol static final strings and updates the classes\nthat make use of the hard-coded strings to use these references.", "committedDate": "2020-04-11T09:05:57Z", "type": "commit"}, {"oid": "cbd409a815c89a2737b7be615c42768792dbde80", "url": "https://github.com/elastic/elasticsearch/commit/cbd409a815c89a2737b7be615c42768792dbde80", "message": "Merge remote-tracking branch 'upstream/master' into enh/query_builder_rest_test", "committedDate": "2020-05-04T10:46:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4NDc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419384762", "bodyText": "I would add a method that accepts Mode directly so callers don't have to keep calling mode(someMode.toString())", "author": "costin", "createdAt": "2020-05-04T12:00:59Z", "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {\n+        private StringBuilder request;\n+        private final boolean isQuery;\n+\n+        private RequestObjectBuilder(String init, boolean isQuery) {\n+            request = new StringBuilder(init);\n+            this.isQuery = isQuery;\n+        }\n+\n+        public static RequestObjectBuilder query(String query) {\n+            return new RequestObjectBuilder(field(QUERY_NAME, query).substring(1), true);\n+        }\n+\n+        public static RequestObjectBuilder cursor(String cursor) {\n+            return new RequestObjectBuilder(field(CURSOR_NAME, cursor).substring(1), false);\n+        }\n+\n+        public RequestObjectBuilder version(String version) {\n+            request.append(field(VERSION_NAME, version));\n+            return this;\n+        }\n+\n+        public RequestObjectBuilder mode(String mode) {", "originalCommit": "cbd409a815c89a2737b7be615c42768792dbde80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0MzMyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419543325", "bodyText": "Good idea, thanks.", "author": "bpintea", "createdAt": "2020-05-04T15:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4NDc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5OTQ1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419399459", "bodyText": "Nice!", "author": "matriv", "createdAt": "2020-05-04T12:30:00Z", "path": "x-pack/plugin/sql/sql-proto/src/main/java/org/elasticsearch/xpack/sql/proto/Protocol.java", "diffHunk": "@@ -14,6 +14,32 @@\n  * Sql protocol defaults and end-points shared between JDBC and REST protocol implementations\n  */\n public final class Protocol {\n+    /**\n+     * The attribute names used in the protocol request/response objects.\n+     */\n+    // requests\n+    public static final String QUERY_NAME = \"query\";", "originalCommit": "cbd409a815c89a2737b7be615c42768792dbde80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMTM0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419401345", "bodyText": "Can this (and the methods) be private or package private?", "author": "matriv", "createdAt": "2020-05-04T12:33:36Z", "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {", "originalCommit": "cbd409a815c89a2737b7be615c42768792dbde80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDA5OA==", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419544098", "bodyText": "They are called from outside the package (i.e. from qa) in a few instances.", "author": "bpintea", "createdAt": "2020-05-04T15:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMTM0NQ=="}], "type": "inlineReview"}, {"oid": "bd8d19de82daede68447912f7cb47c5036995775", "url": "https://github.com/elastic/elasticsearch/commit/bd8d19de82daede68447912f7cb47c5036995775", "message": "Address review comments\n\nAdd a method to take Mode as parameter, besides its string\nrepresentation.", "committedDate": "2020-05-04T13:51:04Z", "type": "commit"}, {"oid": "72ce7f76fa1569a56519f7cf737089274c2bc49a", "url": "https://github.com/elastic/elasticsearch/commit/72ce7f76fa1569a56519f7cf737089274c2bc49a", "message": "Merge overrides to disambiguate call\n\nDisambiguate mode(String|Mode) to all compiler resolve the method when\ncalled from packages with not access to Mode class.", "committedDate": "2020-05-04T15:50:46Z", "type": "commit"}]}