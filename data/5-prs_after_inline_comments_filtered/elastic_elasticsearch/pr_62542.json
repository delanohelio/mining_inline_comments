{"pr_number": 62542, "pr_title": "Fix test error in InternalCardinalityTests#testEqualsAndHashcode", "pr_createdAt": "2020-09-17T13:13:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62542", "timeline": [{"oid": "c7c09c248b5e332b60d3912893e21c48486253b3", "url": "https://github.com/elastic/elasticsearch/commit/c7c09c248b5e332b60d3912893e21c48486253b3", "message": "Make sure the the new HLL++ is different to the original one", "committedDate": "2020-09-17T13:09:53Z", "type": "commit"}, {"oid": "c762173b75c0a4fd08d96ef4e20be4e23800dacc", "url": "https://github.com/elastic/elasticsearch/commit/c762173b75c0a4fd08d96ef4e20be4e23800dacc", "message": "Merge branch 'master' into fixCardinalityTest", "committedDate": "2020-09-17T13:32:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDg0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62542#discussion_r490280842", "bodyText": "Haven't looked closely at the test, but is there a way to ensure we add new values that weren't previously added?  Maybe by picking from a different range of random values or something?  Or keeping a set?\nMaybe it's a non-issue and random enough to not matter... might be a problem for a different day :)", "author": "polyfractal", "createdAt": "2020-09-17T14:14:06Z", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalCardinalityTests.java", "diffHunk": "@@ -99,9 +99,7 @@ protected InternalCardinality mutateInstance(InternalCardinality instance) {\n         case 1:\n             HyperLogLogPlusPlus newState = new HyperLogLogPlusPlus(state.precision(),\n                     new MockBigArrays(new MockPageCacheRecycler(Settings.EMPTY), new NoneCircuitBreakerService()), 0);\n-            newState.merge(0, state, 0);\n-            int extraValues = between(10, 100);\n-            for (int i = 0; i < extraValues; i++) {\n+            for (int i = 0; i < 10; i++) {\n                 newState.collect(0, BitMixer.mix64(randomIntBetween(500, 10000)));", "originalCommit": "c762173b75c0a4fd08d96ef4e20be4e23800dacc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MzA1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/62542#discussion_r490283057", "bodyText": "It does use a different range of values, Still for precision 4 in the previous approach you could get the same sketch at the end :( I think this way is very very unlikely.", "author": "iverase", "createdAt": "2020-09-17T14:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDg0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4NjE1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62542#discussion_r490286159", "bodyText": "Ah gotcha.  Sounds good!", "author": "polyfractal", "createdAt": "2020-09-17T14:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDg0Mg=="}], "type": "inlineReview"}]}