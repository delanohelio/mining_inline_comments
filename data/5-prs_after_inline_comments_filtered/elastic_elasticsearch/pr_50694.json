{"pr_number": 50694, "pr_title": "Remove persistent cluster settings tool", "pr_createdAt": "2020-01-07T08:40:07Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50694", "timeline": [{"oid": "6ad4ce8cfbccdcf53cc2b0a7a90660a7a8ad8058", "url": "https://github.com/elastic/elasticsearch/commit/6ad4ce8cfbccdcf53cc2b0a7a90660a7a8ad8058", "message": "Remove persistent cluster settings tool", "committedDate": "2020-01-07T08:36:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY0NDQwMA==", "url": "https://github.com/elastic/elasticsearch/pull/50694#discussion_r363644400", "bodyText": "I think we could use fewer words, and I also think we should emit the value we're going to remove. How about aiming for some vaguely YAML-like output like this?\nThe following settings will be removed:\n\nsetting.name: value\nother.setting.name: other value", "author": "DaveCTurner", "createdAt": "2020-01-07T08:50:43Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/RemoveSettingsCommand.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.cluster.coordination;\n+\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+import org.elasticsearch.cli.ExitCodes;\n+import org.elasticsearch.cli.Terminal;\n+import org.elasticsearch.cli.UserException;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.MetaData;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.env.Environment;\n+import org.elasticsearch.gateway.PersistedClusterStateService;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class RemoveSettingsCommand extends ElasticsearchNodeCommand {\n+\n+    static final String SETTINGS_REMOVED_MSG = \"Settings were successfully removed from the cluster state\";\n+    static final String CONFIRMATION_MSG =\n+        DELIMITER +\n+            \"\\n\" +\n+            \"You should only run this tool if you have incompatible settings in the\\n\" +\n+            \"cluster state that prevent the cluster from forming.\\n\" +\n+            \"This tool can cause data loss and its use should be your last resort.\\n\" +\n+            \"\\n\" +\n+            \"Do you want to proceed?\\n\";\n+\n+    private final OptionSpec<String> arguments;\n+\n+    public RemoveSettingsCommand() {\n+        super(\"Removes persistent settings from the cluster state\");\n+        arguments = parser.nonOptions(\"setting names\");\n+    }\n+\n+    @Override\n+    protected void processNodePaths(Terminal terminal, Path[] dataPaths, OptionSet options, Environment env)\n+        throws IOException, UserException {\n+        final List<String> settingsToRemove = arguments.values(options);\n+        if (settingsToRemove.isEmpty()) {\n+            throw new UserException(ExitCodes.USAGE, \"Must supply at least one setting to remove\");\n+        }\n+\n+        final PersistedClusterStateService persistedClusterStateService = createPersistedClusterStateService(dataPaths);\n+\n+        terminal.println(Terminal.Verbosity.VERBOSE, \"Loading cluster state\");\n+        final Tuple<Long, ClusterState> termAndClusterState = loadTermAndClusterState(persistedClusterStateService, env);\n+        final ClusterState oldClusterState = termAndClusterState.v2();\n+        final Settings oldPersistentSettings = oldClusterState.metaData().persistentSettings();\n+        terminal.println(Terminal.Verbosity.VERBOSE, \"persistent settings: \" + oldPersistentSettings);\n+        final Settings.Builder newPersistentSettingsBuilder = Settings.builder().put(oldPersistentSettings);\n+        for (String settingToRemove : settingsToRemove) {\n+            boolean matched = false;\n+            for (String settingKey : oldPersistentSettings.keySet()) {\n+                if (Regex.simpleMatch(settingToRemove, settingKey)) {\n+                    newPersistentSettingsBuilder.remove(settingKey);\n+                    matched = true;\n+                    terminal.println(\"Matched persistent cluster setting to remove: \" + settingKey);", "originalCommit": "6ad4ce8cfbccdcf53cc2b0a7a90660a7a8ad8058", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY0NDc3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/50694#discussion_r363644779", "bodyText": "I think this will cause some confusion. How about this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new UserException(ExitCodes.USAGE, \"Must match at least one setting to remove: \" + settingToRemove);\n          \n          \n            \n                            throw new UserException(ExitCodes.USAGE, \"No persistent cluster settings matching [\" + settingToRemove + \"] were found on this node\");", "author": "DaveCTurner", "createdAt": "2020-01-07T08:51:40Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/RemoveSettingsCommand.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.cluster.coordination;\n+\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+import org.elasticsearch.cli.ExitCodes;\n+import org.elasticsearch.cli.Terminal;\n+import org.elasticsearch.cli.UserException;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.MetaData;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.env.Environment;\n+import org.elasticsearch.gateway.PersistedClusterStateService;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class RemoveSettingsCommand extends ElasticsearchNodeCommand {\n+\n+    static final String SETTINGS_REMOVED_MSG = \"Settings were successfully removed from the cluster state\";\n+    static final String CONFIRMATION_MSG =\n+        DELIMITER +\n+            \"\\n\" +\n+            \"You should only run this tool if you have incompatible settings in the\\n\" +\n+            \"cluster state that prevent the cluster from forming.\\n\" +\n+            \"This tool can cause data loss and its use should be your last resort.\\n\" +\n+            \"\\n\" +\n+            \"Do you want to proceed?\\n\";\n+\n+    private final OptionSpec<String> arguments;\n+\n+    public RemoveSettingsCommand() {\n+        super(\"Removes persistent settings from the cluster state\");\n+        arguments = parser.nonOptions(\"setting names\");\n+    }\n+\n+    @Override\n+    protected void processNodePaths(Terminal terminal, Path[] dataPaths, OptionSet options, Environment env)\n+        throws IOException, UserException {\n+        final List<String> settingsToRemove = arguments.values(options);\n+        if (settingsToRemove.isEmpty()) {\n+            throw new UserException(ExitCodes.USAGE, \"Must supply at least one setting to remove\");\n+        }\n+\n+        final PersistedClusterStateService persistedClusterStateService = createPersistedClusterStateService(dataPaths);\n+\n+        terminal.println(Terminal.Verbosity.VERBOSE, \"Loading cluster state\");\n+        final Tuple<Long, ClusterState> termAndClusterState = loadTermAndClusterState(persistedClusterStateService, env);\n+        final ClusterState oldClusterState = termAndClusterState.v2();\n+        final Settings oldPersistentSettings = oldClusterState.metaData().persistentSettings();\n+        terminal.println(Terminal.Verbosity.VERBOSE, \"persistent settings: \" + oldPersistentSettings);\n+        final Settings.Builder newPersistentSettingsBuilder = Settings.builder().put(oldPersistentSettings);\n+        for (String settingToRemove : settingsToRemove) {\n+            boolean matched = false;\n+            for (String settingKey : oldPersistentSettings.keySet()) {\n+                if (Regex.simpleMatch(settingToRemove, settingKey)) {\n+                    newPersistentSettingsBuilder.remove(settingKey);\n+                    matched = true;\n+                    terminal.println(\"Matched persistent cluster setting to remove: \" + settingKey);\n+                }\n+            }\n+            if (matched == false) {\n+                throw new UserException(ExitCodes.USAGE, \"Must match at least one setting to remove: \" + settingToRemove);", "originalCommit": "6ad4ce8cfbccdcf53cc2b0a7a90660a7a8ad8058", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbbc418a2f6f15586782d5044c82e65069149734", "url": "https://github.com/elastic/elasticsearch/commit/dbbc418a2f6f15586782d5044c82e65069149734", "message": "Merge branch 'reduce-metadata-writes-master' into tool-to-remove-cluster-settings", "committedDate": "2020-01-09T16:37:29Z", "type": "commit"}, {"oid": "7d32c25c4ce5d0d2105ede8b6d11a8582d81ac33", "url": "https://github.com/elastic/elasticsearch/commit/7d32c25c4ce5d0d2105ede8b6d11a8582d81ac33", "message": "review feedback", "committedDate": "2020-01-09T16:57:00Z", "type": "commit"}]}