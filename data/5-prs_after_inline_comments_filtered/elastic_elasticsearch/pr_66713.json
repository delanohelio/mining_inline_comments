{"pr_number": 66713, "pr_title": "Retry point in time on other copy when possible", "pr_createdAt": "2020-12-21T19:08:11Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66713", "timeline": [{"oid": "c79325153f3a69646feb2c560cec215e22316241", "url": "https://github.com/elastic/elasticsearch/commit/c79325153f3a69646feb2c560cec215e22316241", "message": "Retry point in time on other copy when possible", "committedDate": "2020-12-22T01:23:14Z", "type": "forcePushed"}, {"oid": "46d7d02aefba1b5c43c958787423754250f510a1", "url": "https://github.com/elastic/elasticsearch/commit/46d7d02aefba1b5c43c958787423754250f510a1", "message": "Retry point in time on other copy when possible", "committedDate": "2020-12-22T16:28:25Z", "type": "commit"}, {"oid": "46d7d02aefba1b5c43c958787423754250f510a1", "url": "https://github.com/elastic/elasticsearch/commit/46d7d02aefba1b5c43c958787423754250f510a1", "message": "Retry point in time on other copy when possible", "committedDate": "2020-12-22T16:28:25Z", "type": "forcePushed"}, {"oid": "e53d421ffbc119b8058d4f5b51026434da9440ac", "url": "https://github.com/elastic/elasticsearch/commit/e53d421ffbc119b8058d4f5b51026434da9440ac", "message": "Merge branch 'master' into retry-searcher-id", "committedDate": "2021-01-04T15:06:47Z", "type": "commit"}, {"oid": "6a7cd2945b8d65438a894bb88286eea0242b546e", "url": "https://github.com/elastic/elasticsearch/commit/6a7cd2945b8d65438a894bb88286eea0242b546e", "message": "Merge branch 'master' into retry-searcher-id", "committedDate": "2021-01-06T15:36:23Z", "type": "commit"}, {"oid": "2a14cf1876d878bd8fecd9d6616edeb5a9124406", "url": "https://github.com/elastic/elasticsearch/commit/2a14cf1876d878bd8fecd9d6616edeb5a9124406", "message": "add test", "committedDate": "2021-01-06T17:44:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg1MzE1MA==", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r552853150", "bodyText": "I will remove this constructor in a follow-up.", "author": "dnhatn", "createdAt": "2021-01-06T17:47:21Z", "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchContextId.java", "diffHunk": "@@ -30,10 +30,17 @@\n public final class ShardSearchContextId implements Writeable {\n     private final String sessionId;\n     private final long id;\n+    private final String searcherId;\n \n+    // TODO: Remove this constructor\n     public ShardSearchContextId(String sessionId, long id) {", "originalCommit": "2a14cf1876d878bd8fecd9d6616edeb5a9124406", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0MDAxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r553340011", "bodyText": "Do we need to apply the same logic when deleting the PIT ? We cannot assume that all replicas are present in the PIT that is used for the final deletion so we have to check them all ?", "author": "jimczi", "createdAt": "2021-01-07T13:53:59Z", "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "diffHunk": "@@ -580,7 +581,15 @@ private void executeLocalSearch(Task task, SearchTimeProvider timeProvider, Sear\n                 final String clusterAlias = entry.getKey();\n                 final SearchContextIdForNode perNode = searchContextId.shards().get(shardId);\n                 assert clusterAlias.equals(perNode.getClusterAlias()) : clusterAlias + \" != \" + perNode.getClusterAlias();\n-                final List<String> targetNodes = List.of(perNode.getNode());\n+                final List<String> targetNodes = new ArrayList<>(group.getShards().length);\n+                targetNodes.add(perNode.getNode());\n+                if (perNode.getSearchContextId().getSearcherId() != null) {\n+                    for (ShardRouting shard : group.getShards()) {\n+                        if (shard.currentNodeId().equals(perNode.getNode()) == false) {\n+                            targetNodes.add(shard.currentNodeId());", "originalCommit": "2a14cf1876d878bd8fecd9d6616edeb5a9124406", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0MDA1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r553340057", "bodyText": "Same here ?", "author": "jimczi", "createdAt": "2021-01-07T13:54:06Z", "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "diffHunk": "@@ -914,8 +923,16 @@ private static RemoteTransportException wrapRemoteClusterFailure(String clusterA\n             final SearchContextIdForNode perNode = entry.getValue();\n             if (Strings.isEmpty(perNode.getClusterAlias())) {\n                 final ShardId shardId = entry.getKey();\n-                OperationRouting.getShards(clusterState, shardId);\n-                final List<String> targetNodes = List.of(perNode.getNode());\n+                final ShardIterator shards = OperationRouting.getShards(clusterState, shardId);\n+                final List<String> targetNodes = new ArrayList<>(shards.size());\n+                targetNodes.add(perNode.getNode());\n+                if (perNode.getSearchContextId().getSearcherId() != null) {\n+                    for (ShardRouting shard : shards) {\n+                        if (shard.currentNodeId().equals(perNode.getNode()) == false) {\n+                            targetNodes.add(shard.currentNodeId());", "originalCommit": "2a14cf1876d878bd8fecd9d6616edeb5a9124406", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7d267b4a83fb098768c88f46f52b29d9e980cf6e", "url": "https://github.com/elastic/elasticsearch/commit/7d267b4a83fb098768c88f46f52b29d9e980cf6e", "message": "Merge branch 'master' into retry-searcher-id", "committedDate": "2021-01-07T22:18:50Z", "type": "commit"}, {"oid": "9dc5a26196052a670387e5eb420e4f7c1683e7ce", "url": "https://github.com/elastic/elasticsearch/commit/9dc5a26196052a670387e5eb420e4f7c1683e7ce", "message": "Merge branch 'master' into retry-searcher-id", "committedDate": "2021-01-07T23:23:20Z", "type": "commit"}]}