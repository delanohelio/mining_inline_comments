{"pr_number": 64606, "pr_title": "Create async search index if necessary on updates and deletes", "pr_createdAt": "2020-11-04T18:05:29Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64606", "timeline": [{"oid": "6478407a6b40440eed0fddd6f2e8a66fa652f8bf", "url": "https://github.com/elastic/elasticsearch/commit/6478407a6b40440eed0fddd6f2e8a66fa652f8bf", "message": "Register a template for .async-search index\n\nThis change registers a template for the .async-search system index in order\nto ensure that deleting and re-creating the index outside of the async search API\ndoesn't break the strict mapping.", "committedDate": "2020-11-04T18:04:30Z", "type": "commit"}, {"oid": "f807e3c8cc5c101bf286aa77ae4112ca3a08622b", "url": "https://github.com/elastic/elasticsearch/commit/f807e3c8cc5c101bf286aa77ae4112ca3a08622b", "message": "fix test compilation", "committedDate": "2020-11-04T18:11:00Z", "type": "commit"}, {"oid": "950b4ea34f8afd7dc00229d52c9a70fc64325c65", "url": "https://github.com/elastic/elasticsearch/commit/950b4ea34f8afd7dc00229d52c9a70fc64325c65", "message": "fix template name in ESRestTestCase", "committedDate": "2020-11-04T20:04:44Z", "type": "commit"}, {"oid": "50a53182dc732f41036ca21bf9cf204c8f8b8db9", "url": "https://github.com/elastic/elasticsearch/commit/50a53182dc732f41036ca21bf9cf204c8f8b8db9", "message": "line len", "committedDate": "2020-11-04T20:30:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg4Nzc1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64606#discussion_r518887752", "bodyText": "Hmm, does this meant that any async search user can now mess with templates. Does this really necessary?", "author": "imotov", "createdAt": "2020-11-06T17:10:17Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/user/AsyncSearchUser.java", "diffHunk": "@@ -16,7 +16,8 @@\n     public static final AsyncSearchUser INSTANCE = new AsyncSearchUser();\n     public static final String ROLE_NAME = UsernamesField.ASYNC_SEARCH_ROLE;\n     public static final Role ROLE = Role.builder(new RoleDescriptor(ROLE_NAME,\n-            null,\n+            // handles template registry for the .async-search index\n+            new String[] { \"manage_index_templates\" },", "originalCommit": "50a53182dc732f41036ca21bf9cf204c8f8b8db9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08a01fbe57c050f31840f59b1094f2872b80aa80", "url": "https://github.com/elastic/elasticsearch/commit/08a01fbe57c050f31840f59b1094f2872b80aa80", "message": "Merge branch 'master' into async_search_index_template", "committedDate": "2020-11-30T18:48:18Z", "type": "commit"}, {"oid": "383d030d1403105d49f8808cd920fca3f7967bd7", "url": "https://github.com/elastic/elasticsearch/commit/383d030d1403105d49f8808cd920fca3f7967bd7", "message": "apply review comment and set index.codec to best_compression", "committedDate": "2020-11-30T18:55:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MTkyNg==", "url": "https://github.com/elastic/elasticsearch/pull/64606#discussion_r532881926", "bodyText": "It looks like we are reusing this in snapshot as well. So I am ok with this approach. I am just not 100% sure of it needs a separate original and a separate role. Maybe ping somebody from security?", "author": "imotov", "createdAt": "2020-11-30T20:25:57Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/async/AsyncTaskTemplateRegistry.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.async;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.xpack.core.ClientHelper;\n+import org.elasticsearch.xpack.core.template.IndexTemplateConfig;\n+import org.elasticsearch.xpack.core.template.IndexTemplateRegistry;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * The {@link AsyncTaskTemplateRegistry} class sets up the index template for the .async-search index.\n+ */\n+public class AsyncTaskTemplateRegistry extends IndexTemplateRegistry {\n+    public static final int INDEX_TEMPLATE_VERSION = 0;\n+\n+    public static final String ASYNC_TASK_TEMPLATE_VERSION_VARIABLE = \"xpack.async_search.template.version\";\n+    public static final String ASYNC_SEARCH_TEMPLATE_NAME = \"async-search\";\n+\n+    public static final IndexTemplateConfig TEMPLATE_ASYNC_SEARCH = new IndexTemplateConfig(\n+        ASYNC_SEARCH_TEMPLATE_NAME,\n+        \"/async-search.json\",\n+        INDEX_TEMPLATE_VERSION,\n+        ASYNC_TASK_TEMPLATE_VERSION_VARIABLE\n+    );\n+\n+    public AsyncTaskTemplateRegistry(Settings nodeSettings, ClusterService clusterService,\n+                                     ThreadPool threadPool, Client client,\n+                                     NamedXContentRegistry xContentRegistry) {\n+        super(nodeSettings, clusterService, threadPool, client, xContentRegistry);\n+    }\n+\n+    @Override\n+    protected boolean requiresMasterNode() {\n+        return true;\n+    }\n+\n+    @Override\n+    protected List<IndexTemplateConfig> getComposableTemplateConfigs() {\n+        return Collections.singletonList(TEMPLATE_ASYNC_SEARCH);\n+    }\n+\n+    @Override\n+    protected String getOrigin() {\n+        return ClientHelper.INDEX_LIFECYCLE_ORIGIN;", "originalCommit": "383d030d1403105d49f8808cd920fca3f7967bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6be60beeeb0d1acb72da2930547ae33b9850cb2f", "url": "https://github.com/elastic/elasticsearch/commit/6be60beeeb0d1acb72da2930547ae33b9850cb2f", "message": "another round of review", "committedDate": "2020-12-01T11:55:58Z", "type": "commit"}, {"oid": "7cd49e88381fed357ae800715a80f151074aaeab", "url": "https://github.com/elastic/elasticsearch/commit/7cd49e88381fed357ae800715a80f151074aaeab", "message": "remove change", "committedDate": "2020-12-01T11:57:27Z", "type": "commit"}, {"oid": "df5b3f0c2b96f97752920e7c7c88eaf25023ce62", "url": "https://github.com/elastic/elasticsearch/commit/df5b3f0c2b96f97752920e7c7c88eaf25023ce62", "message": "add a test case", "committedDate": "2020-12-01T12:31:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwNDI0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64606#discussion_r533604241", "bodyText": "Do we need to create an index in this case or this is for consistency?", "author": "imotov", "createdAt": "2020-12-01T17:46:38Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/async/AsyncTaskIndexService.java", "diffHunk": "@@ -225,7 +227,7 @@ public void deleteResponse(AsyncExecutionId asyncExecutionId,\n                                ActionListener<DeleteResponse> listener) {\n         try {\n             DeleteRequest request = new DeleteRequest(index).id(asyncExecutionId.getDocId());\n-            client.delete(request, listener);\n+            createIndexIfNecessary(ActionListener.wrap(v -> client.delete(request, listener), listener::onFailure));", "originalCommit": "df5b3f0c2b96f97752920e7c7c88eaf25023ce62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzczODgxMA==", "url": "https://github.com/elastic/elasticsearch/pull/64606#discussion_r533738810", "bodyText": "I pushed a273d92 to explain the reasoning.", "author": "jimczi", "createdAt": "2020-12-01T21:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwNDI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MTQ0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64606#discussion_r533741446", "bodyText": "\ud83d\udc4d", "author": "imotov", "createdAt": "2020-12-01T21:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwNDI0MQ=="}], "type": "inlineReview"}, {"oid": "25874dd833cc0f5480ccd44fa29b72b5d4b122c9", "url": "https://github.com/elastic/elasticsearch/commit/25874dd833cc0f5480ccd44fa29b72b5d4b122c9", "message": "Merge branch 'master' into async_search_index_template", "committedDate": "2020-12-01T21:35:51Z", "type": "commit"}, {"oid": "a273d920cd9f91e67507abe2c1c321c3e9eb62ad", "url": "https://github.com/elastic/elasticsearch/commit/a273d920cd9f91e67507abe2c1c321c3e9eb62ad", "message": "apply review comment", "committedDate": "2020-12-01T21:39:31Z", "type": "commit"}, {"oid": "6a2b1d5bc630879b94ced2195545b7f4d031fe02", "url": "https://github.com/elastic/elasticsearch/commit/6a2b1d5bc630879b94ced2195545b7f4d031fe02", "message": "Merge branch 'master' into async_search_index_template", "committedDate": "2020-12-01T22:06:18Z", "type": "commit"}]}