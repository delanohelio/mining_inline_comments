{"pr_number": 57319, "pr_title": "Remove duplicate ssl setup in sql/qa projects", "pr_createdAt": "2020-05-28T21:45:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57319", "timeline": [{"oid": "86c96e61b0adc4885a858c0e2e42d4364771ac72", "url": "https://github.com/elastic/elasticsearch/commit/86c96e61b0adc4885a858c0e2e42d4364771ac72", "message": "Some fixing in the ssl setup task plumbing", "committedDate": "2020-06-02T08:17:33Z", "type": "forcePushed"}, {"oid": "97901d3990ab289e8330f639a1374dca88f82030", "url": "https://github.com/elastic/elasticsearch/commit/97901d3990ab289e8330f639a1374dca88f82030", "message": "Remove duplicate ssl setup in sql/qa projects", "committedDate": "2020-06-02T09:10:02Z", "type": "commit"}, {"oid": "2f0aa8568676a8ac3a7b29adb28bdca665232941", "url": "https://github.com/elastic/elasticsearch/commit/2f0aa8568676a8ac3a7b29adb28bdca665232941", "message": "Fix enforcement of task instances", "committedDate": "2020-06-02T09:10:39Z", "type": "commit"}, {"oid": "ce6869f855f219a6f30aeaf74f32fecacc43da01", "url": "https://github.com/elastic/elasticsearch/commit/ce6869f855f219a6f30aeaf74f32fecacc43da01", "message": "Fix imports", "committedDate": "2020-06-02T09:10:39Z", "type": "commit"}, {"oid": "90d24585d1bf03b0ff3da0152ec04bd73fd992d0", "url": "https://github.com/elastic/elasticsearch/commit/90d24585d1bf03b0ff3da0152ec04bd73fd992d0", "message": "Fix another import", "committedDate": "2020-06-02T09:10:39Z", "type": "commit"}, {"oid": "c66d11d8e659c2545885a26af707040abc36e753", "url": "https://github.com/elastic/elasticsearch/commit/c66d11d8e659c2545885a26af707040abc36e753", "message": "Fix configuration refernce", "committedDate": "2020-06-02T09:11:20Z", "type": "commit"}, {"oid": "d2cfb33227549852a0c1546d93700b35e1d63e68", "url": "https://github.com/elastic/elasticsearch/commit/d2cfb33227549852a0c1546d93700b35e1d63e68", "message": "Use static data for cert generation", "committedDate": "2020-06-02T09:11:20Z", "type": "commit"}, {"oid": "b6205f18ba2309fbe555973bbe8c4936a7ece6d1", "url": "https://github.com/elastic/elasticsearch/commit/b6205f18ba2309fbe555973bbe8c4936a7ece6d1", "message": "Some fixing in the ssl setup task plumbing", "committedDate": "2020-06-02T09:11:21Z", "type": "commit"}, {"oid": "63aea79fb8a6977e345a83e33b3086e2b98751d9", "url": "https://github.com/elastic/elasticsearch/commit/63aea79fb8a6977e345a83e33b3086e2b98751d9", "message": "Put certs on test runtime classpath", "committedDate": "2020-06-02T09:23:17Z", "type": "commit"}, {"oid": "63aea79fb8a6977e345a83e33b3086e2b98751d9", "url": "https://github.com/elastic/elasticsearch/commit/63aea79fb8a6977e345a83e33b3086e2b98751d9", "message": "Put certs on test runtime classpath", "committedDate": "2020-06-02T09:23:17Z", "type": "forcePushed"}, {"oid": "1126d89b0b1dcbaf014062287e1b78371baaed37", "url": "https://github.com/elastic/elasticsearch/commit/1126d89b0b1dcbaf014062287e1b78371baaed37", "message": "Resolve certs for testing directly", "committedDate": "2020-06-02T13:29:30Z", "type": "commit"}, {"oid": "7d1779d458950c2d1f84f3f4180382e4d1475538", "url": "https://github.com/elastic/elasticsearch/commit/7d1779d458950c2d1f84f3f4180382e4d1475538", "message": "Move ssl testing logic into a plugin", "committedDate": "2020-06-02T20:13:28Z", "type": "commit"}, {"oid": "d525f1d281a81563a652e5202fd84d3765b11254", "url": "https://github.com/elastic/elasticsearch/commit/d525f1d281a81563a652e5202fd84d3765b11254", "message": "Fix imports", "committedDate": "2020-06-03T06:18:03Z", "type": "commit"}, {"oid": "657569eab16da13f9b9febbada95a2f09ee457cb", "url": "https://github.com/elastic/elasticsearch/commit/657569eab16da13f9b9febbada95a2f09ee457cb", "message": "Document test cert creation and cleanup", "committedDate": "2020-06-03T07:32:41Z", "type": "commit"}, {"oid": "51d752d5bc77c6b5470ef166891463ed41ade17a", "url": "https://github.com/elastic/elasticsearch/commit/51d752d5bc77c6b5470ef166891463ed41ade17a", "message": "Put more common logic into TestWithSslPlugin", "committedDate": "2020-06-03T08:38:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNDY2NA==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434414664", "bodyText": "Alternatively, We could reuse the buildResources task. I have no strong opinion but my thinking of using a new task here is to detangle this logic from other uses of  buildResources within the elasticsearch build logic.", "author": "breskeby", "createdAt": "2020-06-03T08:58:03Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {", "originalCommit": "51d752d5bc77c6b5470ef166891463ed41ade17a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNjAxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434706011", "bodyText": "Yes. In fact, @rjernst's recent work has removed that global task in favor of individual per-plugin tasks so this is the correct approach going forward.", "author": "mark-vieira", "createdAt": "2020-06-03T16:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNDY2NA=="}], "type": "inlineReview"}, {"oid": "a5b388649fd2a1dfbdffc3c09f77f274a9e5d57d", "url": "https://github.com/elastic/elasticsearch/commit/a5b388649fd2a1dfbdffc3c09f77f274a9e5d57d", "message": "Cleanup", "committedDate": "2020-06-03T09:00:30Z", "type": "commit"}, {"oid": "75db1baafbad9054811f608fa545b640095799a6", "url": "https://github.com/elastic/elasticsearch/commit/75db1baafbad9054811f608fa545b640095799a6", "message": "Fix checkstyle", "committedDate": "2020-06-03T09:37:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzODkzMA==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434538930", "bodyText": "nit: It doesn't really matter but can we rename the suffices to crt instead ?", "author": "jkakavas", "createdAt": "2020-06-03T12:46:03Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");", "originalCommit": "75db1baafbad9054811f608fa545b640095799a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzY2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434603667", "bodyText": "done", "author": "breskeby", "createdAt": "2020-06-03T14:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzODkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDEwNg==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434544106", "bodyText": "Can we also get the private keys into test/ssl/test-X.pem ? In general , given the applicability that this plugin has in so many projects in our security and core tests, I wonder if we can do a little more up front:\n\nSetup a CA key and certificate\nGenerate test-node private key and certificate signed by that CA\nGenerate test-client private key and certificate signed by that CA\nMake all the above available as PEM files ( x.crt and x.key ) and in JKS / PKCS12 keystores\nCopy all of them as extra config files", "author": "jkakavas", "createdAt": "2020-06-03T12:54:40Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");", "originalCommit": "75db1baafbad9054811f608fa545b640095799a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNzU5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434607596", "bodyText": "@jkakavas I think we should be able to do that. Can you raise a separate issue for this? I'd like to keep this PR small and focussed.", "author": "breskeby", "createdAt": "2020-06-03T14:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMjcwNg==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434622706", "bodyText": "raised #57606", "author": "jkakavas", "createdAt": "2020-06-03T14:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDU1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434544551", "bodyText": "Can I override/overwrite this in the build.gradle file of a subproject where I use this new plugin ?", "author": "jkakavas", "createdAt": "2020-06-03T12:55:19Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)\n+                .configureEach(integTest -> integTest.runner.systemProperty(\"tests.ssl.enabled\", \"true\"));\n+        });\n+\n+        project.getPlugins().withType(TestClustersPlugin.class).configureEach(clustersPlugin -> {\n+            File keystoreDir = new File(project.getBuildDir(), \"keystore/test/ssl\");\n+            File nodeKeystore = new File(keystoreDir, \"test-node.jks\");\n+            File clientKeyStore = new File(keystoreDir, \"test-client.jks\");\n+            NamedDomainObjectContainer<ElasticsearchCluster> clusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+                .getExtensions()\n+                .getByName(TestClustersPlugin.EXTENSION_NAME);\n+            clusters.all(c -> {\n+                // ceremony to set up ssl\n+                c.setting(\"xpack.security.transport.ssl.keystore.path\", \"test-node.jks\");", "originalCommit": "75db1baafbad9054811f608fa545b640095799a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMjkyMg==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434602922", "bodyText": "yes, you can override them in the build script after applying the plugin", "author": "breskeby", "createdAt": "2020-06-03T14:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0OTIyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434549221", "bodyText": "Could we also have a conditional here that if we are inFipsJvm() it would use key and certificate PEM files to set up TLS instead of keystores so that it can work even when the subproject that uses this plugin is running tests in fips mode ? i.e.\n*.ssl.key\n*.ssl.secure_key_passphrase\n*.ssl.certificate\n\ninstead of\n*.ssl.keystore.path\n*.ssl.keystore.secure_password\n\nand\n*.ssl.certificate_authorities\n\ninstead of\n*.ssl.keystore.path\n\nor\n*.ssl.truststore.path", "author": "jkakavas", "createdAt": "2020-06-03T13:02:50Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)\n+                .configureEach(integTest -> integTest.runner.systemProperty(\"tests.ssl.enabled\", \"true\"));\n+        });\n+\n+        project.getPlugins().withType(TestClustersPlugin.class).configureEach(clustersPlugin -> {\n+            File keystoreDir = new File(project.getBuildDir(), \"keystore/test/ssl\");\n+            File nodeKeystore = new File(keystoreDir, \"test-node.jks\");\n+            File clientKeyStore = new File(keystoreDir, \"test-client.jks\");\n+            NamedDomainObjectContainer<ElasticsearchCluster> clusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+                .getExtensions()\n+                .getByName(TestClustersPlugin.EXTENSION_NAME);\n+            clusters.all(c -> {", "originalCommit": "75db1baafbad9054811f608fa545b640095799a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwODg1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434608857", "bodyText": "@jkakavas same as above. Would like to tackle this in a separate story", "author": "breskeby", "createdAt": "2020-06-03T14:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0OTIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMTM5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434621397", "bodyText": "I'm fine with that as long as we don't apply this plugin to any other subproject until we have the fips handling because it will start failing in CI. ( sql is fine because we mute the tests in fips eitherway )", "author": "jkakavas", "createdAt": "2020-06-03T14:42:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0OTIyMQ=="}], "type": "inlineReview"}, {"oid": "f5adb44c31066dd14e6af13dd10b9c53e211d401", "url": "https://github.com/elastic/elasticsearch/commit/f5adb44c31066dd14e6af13dd10b9c53e211d401", "message": "Apply feedback: Rename *.cert to *.crt files", "committedDate": "2020-06-03T14:17:15Z", "type": "commit"}, {"oid": "4a7782b0965f97d11685de3af80cd1673841090d", "url": "https://github.com/elastic/elasticsearch/commit/4a7782b0965f97d11685de3af80cd1673841090d", "message": "Apply feedback regarding generated test certs\n\n- make them valid for 10 years\n- Add note to readme about date of expiration", "committedDate": "2020-06-03T14:31:53Z", "type": "commit"}, {"oid": "42de63b3c5b43a512ee9569631e02c5a86fd5aa6", "url": "https://github.com/elastic/elasticsearch/commit/42de63b3c5b43a512ee9569631e02c5a86fd5aa6", "message": "Fix forbiddenPattern task after cert -> crt renaming", "committedDate": "2020-06-03T14:44:37Z", "type": "commit"}, {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "url": "https://github.com/elastic/elasticsearch/commit/3e7240babaea9e2125c38a8b067e379e8af86bfc", "message": "Another fix after cert -> crt renaming", "committedDate": "2020-06-03T14:46:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODMxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434708311", "bodyText": "How does this compare to project.getPluginManager().withPlugin()?", "author": "mark-vieira", "createdAt": "2020-06-03T16:42:39Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {", "originalCommit": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczMDg1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434730853", "bodyText": "getPluginManager() doesn't allow configuration by plugin type (class) which I usually prefer when coding. also depending on your environment it used to be better when doing safer when refactorings etc instead of relying on plugin ids. PluginManager provides access to AppliedPlugin which we do not need here.", "author": "breskeby", "createdAt": "2020-06-03T17:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODg4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434708887", "bodyText": "We can use Util.getJavaTestSourceSet().", "author": "mark-vieira", "createdAt": "2020-06-03T16:43:27Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");", "originalCommit": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczNjc4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434736785", "bodyText": "done", "author": "breskeby", "createdAt": "2020-06-03T17:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwOTQ3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434709476", "bodyText": "Do we have to use the fully qualified name here? Can we add an import?", "author": "mark-vieira", "createdAt": "2020-06-03T16:44:23Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)", "originalCommit": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczNjg0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434736843", "bodyText": "done", "author": "breskeby", "createdAt": "2020-06-03T17:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwOTQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434710440", "bodyText": "We should instead configure all tasks of RestTestRunnerTask type. There can be instances where we create these directly w/o creating a RestIntegTestTask. Also, the latter will hopefully dissapear soon.", "author": "mark-vieira", "createdAt": "2020-06-03T16:45:47Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)", "originalCommit": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDc2NA==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434710764", "bodyText": "Also, would we not want this for unit tests as well? Or is this very specific to integration tests?", "author": "mark-vieira", "createdAt": "2020-06-03T16:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDQ0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczNzM3OA==", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434737378", "bodyText": "changed to use RestTestRunnerTask. So far I don't think we have unit tests for this kind of testing. I don't see how this would look like tbh.", "author": "breskeby", "createdAt": "2020-06-03T17:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDQ0MA=="}], "type": "inlineReview"}, {"oid": "11bbb65f75863cac9197a9dbf9dfe2b98ded7abf", "url": "https://github.com/elastic/elasticsearch/commit/11bbb65f75863cac9197a9dbf9dfe2b98ded7abf", "message": "Fix generated certificates", "committedDate": "2020-06-03T17:11:29Z", "type": "commit"}, {"oid": "aaa29ad351602d9e947c420b904c2d92a17d2c12", "url": "https://github.com/elastic/elasticsearch/commit/aaa29ad351602d9e947c420b904c2d92a17d2c12", "message": "Apply review feedback\n\n- Minor cleanup", "committedDate": "2020-06-03T17:29:52Z", "type": "commit"}]}