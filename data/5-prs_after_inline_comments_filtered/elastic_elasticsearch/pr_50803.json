{"pr_number": 50803, "pr_title": "Test password-protected keystore with Docker", "pr_createdAt": "2020-01-09T16:24:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50803", "timeline": [{"oid": "a45858b04bc725dc064335e1b0a7ffa66a84e55c", "url": "https://github.com/elastic/elasticsearch/commit/a45858b04bc725dc064335e1b0a7ffa66a84e55c", "message": "Test pwd-protected keystore with Docker\n\nThis commit adds two tests for the case where we mount a\npassword-protected keystore into a Docker container and provide a\npassword via a Docker environment variable.\n\nWe also fix a logging bug where we were logging the identifier for an\narray of strings rather than the contents of that array.", "committedDate": "2020-01-09T16:16:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2OTUxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364869519", "bodyText": "Are we only concerned with whether ES starts up?", "author": "rjernst", "createdAt": "2020-01-09T17:31:28Z", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -253,6 +258,81 @@ public void test51WrongKeystorePasswordFromFile() throws Exception {\n         }\n     }\n \n+    /**\n+     * Check that we can mount a password-protected keystore to a docker image\n+     * and provide a password via an environment variable.\n+     */\n+    public void test60DockerEnvironmentVariablePassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", password);\n+        runContainer(distribution(), volumes, envVars);", "originalCommit": "a45858b04bc725dc064335e1b0a7ffa66a84e55c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5Mzg1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364893852", "bodyText": "Ah, what a silly oversight. I spent so long trying to get ES to start up that I forgot the line that runs our quick tests. I'll put that in.", "author": "williamrandolph", "createdAt": "2020-01-09T18:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2OTUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDE4NA==", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364870184", "bodyText": "Future thought: should we have a test utility to grab any file from the container, not just the keystore?", "author": "rjernst", "createdAt": "2020-01-09T17:33:00Z", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -253,6 +258,81 @@ public void test51WrongKeystorePasswordFromFile() throws Exception {\n         }\n     }\n \n+    /**\n+     * Check that we can mount a password-protected keystore to a docker image\n+     * and provide a password via an environment variable.\n+     */\n+    public void test60DockerEnvironmentVariablePassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", password);\n+        runContainer(distribution(), volumes, envVars);\n+    }\n+\n+    /**\n+     * Check that if we provide the wrong password for a mounted and password-protected\n+     * keystore, Elasticsearch doesn't start.\n+     */\n+    public void test61DockerEnvironmentVariableBadPassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", \"wrong\");\n+        Shell.Result r = runContainerExpectingFailure(distribution(), volumes, envVars);\n+        assertThat(r.stderr, containsString(PASSWORD_ERROR_MESSAGE));\n+    }\n+\n+    /**\n+     * In the Docker context, it's a little bit tricky to get a password-protected\n+     * keystore. All of the utilities we'd want to use are on the Docker image.\n+     * This method mounts a temporary directory to a Docker container, password-protects\n+     * the keystore, and then returns the path of the file that appears in the\n+     * mounted directory (now accessible from the local filesystem).\n+     */\n+    private Path getKeystoreFileFromDockerContainer(String password, Path dockerKeystore) throws IOException {", "originalCommit": "a45858b04bc725dc064335e1b0a7ffa66a84e55c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NTQ1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364895456", "bodyText": "We already do \u2014\u00a0Docker#copyFromContainer. But because I was already using a mounted directory to load the script, it seemed like a fairly clean way to get this specific file.", "author": "williamrandolph", "createdAt": "2020-01-09T18:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDE4NA=="}], "type": "inlineReview"}, {"oid": "cda1e3c16c6a718daf25dd8c71f5825d5a197e65", "url": "https://github.com/elastic/elasticsearch/commit/cda1e3c16c6a718daf25dd8c71f5825d5a197e65", "message": "Add line to run ES tests", "committedDate": "2020-01-09T18:40:11Z", "type": "commit"}]}