{"pr_number": 58917, "pr_title": "Adding new `require_alias` option to indexing requests", "pr_createdAt": "2020-07-02T13:30:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58917", "timeline": [{"oid": "b324dcd09ac54be6b5743abc5e7587c62a956e7f", "url": "https://github.com/elastic/elasticsearch/commit/b324dcd09ac54be6b5743abc5e7587c62a956e7f", "message": "Adding new `no_auto_create` to indexing requests", "committedDate": "2020-07-02T13:26:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNzUzMA==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r449027530", "bodyText": "Where does the defaulting of request-level setting to index-level setting happen?", "author": "przemekwitek", "createdAt": "2020-07-02T14:06:26Z", "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "diffHunk": "@@ -85,26 +85,36 @@ public void testAutoCreationDisabled() {\n         AutoCreateIndex autoCreateIndex = newAutoCreateIndex(settings);\n         String randomIndex = randomAlphaOfLengthBetween(1, 10);\n         IndexNotFoundException e = expectThrows(IndexNotFoundException.class, () ->\n-            autoCreateIndex.shouldAutoCreate(randomIndex, buildClusterState()));\n+            autoCreateIndex.shouldAutoCreate(randomIndex, false, buildClusterState()));\n         assertEquals(\"no such index [\" + randomIndex + \"] and [action.auto_create_index] is [false]\", e.getMessage());\n     }\n \n     public void testAutoCreationEnabled() {\n         Settings settings = Settings.builder().put(AutoCreateIndex.AUTO_CREATE_INDEX_SETTING.getKey(), true).build();\n         AutoCreateIndex autoCreateIndex = newAutoCreateIndex(settings);\n-        assertThat(autoCreateIndex.shouldAutoCreate(randomAlphaOfLengthBetween(1, 10), buildClusterState()), equalTo(true));\n+        assertThat(autoCreateIndex.shouldAutoCreate(randomAlphaOfLengthBetween(1, 10), false, buildClusterState()), equalTo(true));\n+    }\n+\n+    public void testAutoCreationEnabledWithNoAutoCreateFlagSet() {", "originalCommit": "b324dcd09ac54be6b5743abc5e7587c62a956e7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTkzNg==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r449201936", "bodyText": "I don't understand your question.\nWhat is the default of the setting? Or how are the settings adjusted for this test?", "author": "benwtrent", "createdAt": "2020-07-02T18:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNzUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQyMDg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r449420889", "bodyText": "What I meant is more: where is the code that checks the value of the index-level setting should the request-level setting be false.", "author": "przemekwitek", "createdAt": "2020-07-03T07:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNzUzMA=="}], "type": "inlineReview"}, {"oid": "88dd1021e0aed47464b1dd634c6b8ce13c194a3d", "url": "https://github.com/elastic/elasticsearch/commit/88dd1021e0aed47464b1dd634c6b8ce13c194a3d", "message": "fixing docs", "committedDate": "2020-07-02T18:40:04Z", "type": "commit"}, {"oid": "daaeaad876c9f259cf2db1ce9b590e89485374a6", "url": "https://github.com/elastic/elasticsearch/commit/daaeaad876c9f259cf2db1ce9b590e89485374a6", "message": "Update DataFrameAnalyticsTask.java", "committedDate": "2020-07-02T19:01:22Z", "type": "commit"}, {"oid": "d5bda2937a38f889775d99debd5a826110769a65", "url": "https://github.com/elastic/elasticsearch/commit/d5bda2937a38f889775d99debd5a826110769a65", "message": "Merge branch 'master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-07T12:46:57Z", "type": "commit"}, {"oid": "338b1ffbae63932bb59b9c2d96dd73ae52766821", "url": "https://github.com/elastic/elasticsearch/commit/338b1ffbae63932bb59b9c2d96dd73ae52766821", "message": "moving to requiring alias", "committedDate": "2020-07-07T13:47:28Z", "type": "commit"}, {"oid": "ac2bed27f12488987d058383178a3d1a88771b7e", "url": "https://github.com/elastic/elasticsearch/commit/ac2bed27f12488987d058383178a3d1a88771b7e", "message": "Merge branch 'feature/add-no_autocreate-flag' of github.com:benwtrent/elasticsearch into feature/add-no_autocreate-flag", "committedDate": "2020-07-07T13:47:39Z", "type": "commit"}, {"oid": "f1b49b259181c66248f41714e6683f19d881042b", "url": "https://github.com/elastic/elasticsearch/commit/f1b49b259181c66248f41714e6683f19d881042b", "message": "adjusting test", "committedDate": "2020-07-07T13:54:42Z", "type": "commit"}, {"oid": "79ce9aadc1b01549d796b4c4243abadfd360e75d", "url": "https://github.com/elastic/elasticsearch/commit/79ce9aadc1b01549d796b4c4243abadfd360e75d", "message": "fixing bulk index handling of require_alias flag", "committedDate": "2020-07-07T16:31:55Z", "type": "commit"}, {"oid": "f527f77c43c2283733c06b94f8ae9e5db4dc302a", "url": "https://github.com/elastic/elasticsearch/commit/f527f77c43c2283733c06b94f8ae9e5db4dc302a", "message": "prevent auto-create if the request requires alias", "committedDate": "2020-07-07T17:33:45Z", "type": "commit"}, {"oid": "81fb555472b452897590ec654d8ced6d5abbb454", "url": "https://github.com/elastic/elasticsearch/commit/81fb555472b452897590ec654d8ced6d5abbb454", "message": "Merge remote-tracking branch 'upstream/master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-07T17:34:12Z", "type": "commit"}, {"oid": "158403a9e7b252f20185dc195a89629c7657c854", "url": "https://github.com/elastic/elasticsearch/commit/158403a9e7b252f20185dc195a89629c7657c854", "message": "fixing tests", "committedDate": "2020-07-07T18:03:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MTE3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451161176", "bodyText": "I think we could make this clearer, users will see \"[require_alias] request flag is [true]\" (they'll totally ignore the IndexNotFoundException part) and not have any idea what the error actually is, maybe something like:\n\"[require_alias] request flag is [true] and [myindex] is not an alias\"", "author": "dakrone", "createdAt": "2020-07-07T21:43:40Z", "path": "modules/reindex/src/main/java/org/elasticsearch/index/reindex/ReindexValidator.java", "diffHunk": "@@ -111,6 +113,9 @@ static void validateAgainstAliases(SearchRequest source, IndexRequest destinatio\n             return;\n         }\n         String target = destination.index();\n+        if (destination.isRequireAlias() && (false == clusterState.getMetadata().hasAlias(target))) {\n+            throw new IndexNotFoundException(\"[\" + DocWriteRequest.REQUIRE_ALIAS + \"] request flag is [true]\", target);", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MzYwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451163609", "bodyText": "This is confusing I think, because I think it means that if someone has two bulk actions and one has require_alias: true and another require_alias: false that it will overall be require_alias: false. Since isRequireAlias cannot return null, that means that having it unset for a single operation effectively disables the require_alias flag for all operations for that index.\nI think we may want to err on the side of being stricter (if any operation requires it to be an alias, they all do) and change this to v1 || v2 instead of v1 && v2.\nEither that, or we will need to make the boolean a Boolean and differentiate between explicitly set and unset default values (I suspect just using || is an easier solution).\nAlso, can you add a test for this scenario?", "author": "dakrone", "createdAt": "2020-07-07T21:49:09Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -222,28 +222,29 @@ protected void doInternalExecute(Task task, BulkRequest bulkRequest, ActionListe\n         if (needToCheck()) {\n             // Attempt to create all the indices that we're going to need during the bulk before we start.\n             // Step 1: collect all the indices in the request\n-            final Set<String> indices = bulkRequest.requests.stream()\n-                    // delete requests should not attempt to create the index (if the index does not\n-                    // exists), unless an external versioning is used\n+            final Map<String, Boolean> indices = bulkRequest.requests.stream()\n+                // delete requests should not attempt to create the index (if the index does not\n+                // exists), unless an external versioning is used\n                 .filter(request -> request.opType() != DocWriteRequest.OpType.DELETE\n-                        || request.versionType() == VersionType.EXTERNAL\n-                        || request.versionType() == VersionType.EXTERNAL_GTE)\n-                .map(DocWriteRequest::index)\n-                .collect(Collectors.toSet());\n+                    || request.versionType() == VersionType.EXTERNAL\n+                    || request.versionType() == VersionType.EXTERNAL_GTE)\n+                .collect(Collectors.toMap(DocWriteRequest::index, DocWriteRequest::isRequireAlias, (v1, v2) -> v1 && v2));", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ3MTg0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451471847", "bodyText": "I think we may want to err on the side of being stricter\n\nSounds good to me", "author": "benwtrent", "createdAt": "2020-07-08T11:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MzYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2NjA2NA==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451166064", "bodyText": "Same comment here about making the error message a bit clearer", "author": "dakrone", "createdAt": "2020-07-07T21:54:40Z", "path": "server/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java", "diffHunk": "@@ -115,6 +119,9 @@ public static void resolveAndValidateRouting(Metadata metadata, String concreteI\n \n     @Override\n     protected void doExecute(Task task, final UpdateRequest request, final ActionListener<UpdateResponse> listener) {\n+        if (request.isRequireAlias() && (clusterService.state().getMetadata().hasAlias(request.index()) == false)) {\n+            throw new IndexNotFoundException(\"[\" + DocWriteRequest.REQUIRE_ALIAS + \"] request flag is [true]\", request.index());", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2NjUyNA==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451166524", "bodyText": "I don't think we should make this parsed out of the body of the request, it should stay as a querystring parameter for the update request, but not in the actual xcontent", "author": "dakrone", "createdAt": "2020-07-07T21:55:51Z", "path": "server/src/main/java/org/elasticsearch/action/update/UpdateRequest.java", "diffHunk": "@@ -99,6 +100,7 @@\n             ObjectParser.ValueType.OBJECT_ARRAY_BOOLEAN_OR_STRING);\n         PARSER.declareLong(UpdateRequest::setIfSeqNo, IF_SEQ_NO);\n         PARSER.declareLong(UpdateRequest::setIfPrimaryTerm, IF_PRIMARY_TERM);\n+        PARSER.declareBoolean(UpdateRequest::setRequireAlias, REQUIRE_ALIAS);", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2NzU4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451167582", "bodyText": "I can kind of understand this parsing (more than the update request), but I don't like that we are parsing it out of the body here. I would prefer to only grab it from the querystring parameters, not from any request bodies", "author": "dakrone", "createdAt": "2020-07-07T21:58:09Z", "path": "server/src/main/java/org/elasticsearch/index/reindex/ReindexRequest.java", "diffHunk": "@@ -345,6 +357,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         destParser.declareString(IndexRequest::routing, new ParseField(\"routing\"));\n         destParser.declareString(IndexRequest::opType, new ParseField(\"op_type\"));\n         destParser.declareString(IndexRequest::setPipeline, new ParseField(\"pipeline\"));\n+        destParser.declareBoolean(IndexRequest::setRequireAlias, new ParseField(DocWriteRequest.REQUIRE_ALIAS));", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2ODgxMw==", "url": "https://github.com/elastic/elasticsearch/pull/58917#discussion_r451168813", "bodyText": "We need to add this in RestBulkAction also, and make it top-level rather than only allowing it per-operation", "author": "dakrone", "createdAt": "2020-07-07T22:00:59Z", "path": "server/src/main/java/org/elasticsearch/rest/action/document/RestIndexAction.java", "diffHunk": "@@ -122,6 +123,7 @@ public RestChannelConsumer prepareRequest(final RestRequest request, final NodeC\n         indexRequest.versionType(VersionType.fromString(request.param(\"version_type\"), indexRequest.versionType()));\n         indexRequest.setIfSeqNo(request.paramAsLong(\"if_seq_no\", indexRequest.ifSeqNo()));\n         indexRequest.setIfPrimaryTerm(request.paramAsLong(\"if_primary_term\", indexRequest.ifPrimaryTerm()));\n+        indexRequest.setRequireAlias(request.paramAsBoolean(DocWriteRequest.REQUIRE_ALIAS, indexRequest.isRequireAlias()));", "originalCommit": "158403a9e7b252f20185dc195a89629c7657c854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "beb3edb6f1d82ded4b47b06ba9ca6bef825a1486", "url": "https://github.com/elastic/elasticsearch/commit/beb3edb6f1d82ded4b47b06ba9ca6bef825a1486", "message": "adding tests", "committedDate": "2020-07-08T13:04:45Z", "type": "commit"}, {"oid": "006f3779fc864f255083bd54e1b3acaf244cfedb", "url": "https://github.com/elastic/elasticsearch/commit/006f3779fc864f255083bd54e1b3acaf244cfedb", "message": "Merge remote-tracking branch 'upstream/master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-08T13:05:01Z", "type": "commit"}, {"oid": "a5da8f27e05d0b602f92d5b3187bc1bc593fcf41", "url": "https://github.com/elastic/elasticsearch/commit/a5da8f27e05d0b602f92d5b3187bc1bc593fcf41", "message": "adjusting bulk handling and updating tests", "committedDate": "2020-07-08T13:58:21Z", "type": "commit"}, {"oid": "1bb5ebf017256209bab897eeb2576f816bfacec7", "url": "https://github.com/elastic/elasticsearch/commit/1bb5ebf017256209bab897eeb2576f816bfacec7", "message": "fixing tests", "committedDate": "2020-07-08T14:21:36Z", "type": "commit"}, {"oid": "69e4bebed6466386aa7350be04ff4cd572371eb2", "url": "https://github.com/elastic/elasticsearch/commit/69e4bebed6466386aa7350be04ff4cd572371eb2", "message": "Merge branch 'master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-08T16:47:23Z", "type": "commit"}, {"oid": "de7b25184441e03b518677ed0ed1e1227b7c815c", "url": "https://github.com/elastic/elasticsearch/commit/de7b25184441e03b518677ed0ed1e1227b7c815c", "message": "Merge remote-tracking branch 'upstream/master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-16T19:31:01Z", "type": "commit"}, {"oid": "4c0df8264ec6b37fa938a715ec7d76c997755c38", "url": "https://github.com/elastic/elasticsearch/commit/4c0df8264ec6b37fa938a715ec7d76c997755c38", "message": "Merge branch 'master' into feature/add-no_autocreate-flag", "committedDate": "2020-07-17T11:52:35Z", "type": "commit"}]}