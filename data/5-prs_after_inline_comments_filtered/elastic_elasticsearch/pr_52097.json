{"pr_number": 52097, "pr_title": "SQL: Enhance timestamp escaped literal parsing", "pr_createdAt": "2020-02-08T15:11:11Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52097", "timeline": [{"oid": "3166b8ef3222c706cbae45312e626c592a74c470", "url": "https://github.com/elastic/elasticsearch/commit/3166b8ef3222c706cbae45312e626c592a74c470", "message": "SQL: Enhance timestamp escaped literal parsing\n\nAllow also whitespace ` ` (together with `T`) as a separator between\ndate and time parts of the timestamp string. E.g.:\n```\n2020-02-08 12.10.45\n```\nor\n```\n2020-02-08T12.10.45\n```\n\nFixes: #46049", "committedDate": "2020-02-08T15:03:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMzk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52097#discussion_r376723981", "bodyText": "This could be improved by checking whether there's a T separator at its dedicated position (10) in order to select the right parser. This should avoid the fallback in case of an exception.", "author": "costin", "createdAt": "2020-02-08T17:57:42Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/DateUtils.java", "diffHunk": "@@ -105,7 +111,11 @@ public static ZonedDateTime asDateTime(String dateFormat) {\n     }\n \n     public static ZonedDateTime ofEscapedLiteral(String dateFormat) {\n-        return ZonedDateTime.parse(dateFormat, DATE_TIME_ESCAPED_LITERAL_FORMATTER.withZone(UTC));\n+        try {", "originalCommit": "3166b8ef3222c706cbae45312e626c592a74c470", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyNTg3OA==", "url": "https://github.com/elastic/elasticsearch/pull/52097#discussion_r376725878", "bodyText": "The position is not dedicated though as the year can be more than 4 digits.\nBut I can use lastIndexOf('-')", "author": "matriv", "createdAt": "2020-02-08T18:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMzk4MQ=="}], "type": "inlineReview"}, {"oid": "3e294010106af2c2eaab1f01bf7cf9af91b5e53e", "url": "https://github.com/elastic/elasticsearch/commit/3e294010106af2c2eaab1f01bf7cf9af91b5e53e", "message": "enhance escaped time literal tests", "committedDate": "2020-02-08T18:09:36Z", "type": "commit"}, {"oid": "439c3504dc522c91345584545ad1362f8342a16e", "url": "https://github.com/elastic/elasticsearch/commit/439c3504dc522c91345584545ad1362f8342a16e", "message": "Address comments - enhance tests", "committedDate": "2020-02-08T18:46:32Z", "type": "commit"}, {"oid": "439c3504dc522c91345584545ad1362f8342a16e", "url": "https://github.com/elastic/elasticsearch/commit/439c3504dc522c91345584545ad1362f8342a16e", "message": "Address comments - enhance tests", "committedDate": "2020-02-08T18:46:32Z", "type": "forcePushed"}, {"oid": "cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "url": "https://github.com/elastic/elasticsearch/commit/cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "message": "fix index out of bounds", "committedDate": "2020-02-08T19:06:50Z", "type": "commit"}, {"oid": "cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "url": "https://github.com/elastic/elasticsearch/commit/cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "message": "fix index out of bounds", "committedDate": "2020-02-08T19:06:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNDIzMg==", "url": "https://github.com/elastic/elasticsearch/pull/52097#discussion_r376804232", "bodyText": "I think this whole code could be simplified (and still readable and not cluttered) as:\n        if (randomBoolean()) {\n           return \":55\" + randomFrom(\"\", \".1\", \".12\", \".123\", \".1234\", \".12345\", \".123456\",\n                    \".1234567\", \".12345678\", \".123456789\");\n        }\n        return \"\";", "author": "astefan", "createdAt": "2020-02-09T18:25:33Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/parser/EscapedFunctionsTests.java", "diffHunk": "@@ -62,6 +62,40 @@ private Literal timestampLiteral(String date) {\n         return (Literal) exp;\n     }\n \n+    private String buildDate() {\n+        StringBuilder sb = new StringBuilder();\n+        int length = randomIntBetween(4, 9);\n+\n+        if (randomBoolean()) {\n+            sb.append('-');\n+        } else {\n+            if (length > 4) {\n+                sb.append('-');\n+            }\n+        }\n+\n+        for (int i = 1; i <= length; i++) {\n+            sb.append(i);\n+        }\n+        sb.append(\"-05-10\");\n+        return sb.toString();\n+    }\n+\n+    private String buildSecsAndFractional() {\n+        boolean hasSecs = randomBoolean();\n+        String secs = \"\";\n+        if (hasSecs) {\n+            secs = \":55\";\n+        }\n+\n+        String fractionalSecs = \"\";\n+        if (hasSecs) {\n+            fractionalSecs = randomFrom(\"\", \".1\", \".12\", \".123\", \".1234\", \".12345\", \".123456\",\n+                    \".1234567\", \".12345678\", \".123456789\");\n+        }\n+        return secs + fractionalSecs;", "originalCommit": "cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNDM3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52097#discussion_r376804377", "bodyText": "I don't understand this. Why is the date starting with -?", "author": "astefan", "createdAt": "2020-02-09T18:27:22Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/parser/EscapedFunctionsTests.java", "diffHunk": "@@ -62,6 +62,40 @@ private Literal timestampLiteral(String date) {\n         return (Literal) exp;\n     }\n \n+    private String buildDate() {\n+        StringBuilder sb = new StringBuilder();\n+        int length = randomIntBetween(4, 9);\n+\n+        if (randomBoolean()) {\n+            sb.append('-');", "originalCommit": "cb520d7126b0a878ccc5f67c2f9e3e112f1df0fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNDcxMg==", "url": "https://github.com/elastic/elasticsearch/pull/52097#discussion_r376804712", "bodyText": "To test negative Year.", "author": "matriv", "createdAt": "2020-02-09T18:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNDM3Nw=="}], "type": "inlineReview"}, {"oid": "406433f045a13db7a21bcc22bf33ead67d7be0c9", "url": "https://github.com/elastic/elasticsearch/commit/406433f045a13db7a21bcc22bf33ead67d7be0c9", "message": "address comments", "committedDate": "2020-02-09T18:37:44Z", "type": "commit"}]}