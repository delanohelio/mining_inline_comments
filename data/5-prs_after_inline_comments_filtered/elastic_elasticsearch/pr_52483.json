{"pr_number": 52483, "pr_title": "[Transform] add support for filter aggregation", "pr_createdAt": "2020-02-18T16:06:44Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52483", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5NzY4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/52483#discussion_r380797686", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            nested.put(subAgg.getName(), getExtractor(subAgg).value(subAgg, fieldTypeMap.get(agg.getName()), fieldTypeMap));\n          \n          \n            \n                            nested.put(subAgg.getName(), getExtractor(subAgg).value(subAgg, fieldTypeMap.get(subAgg.getName()), fieldTypeMap));\n          \n      \n    \n    \n  \n\nWe should use the subAgg field type no? If we just used the parent agg's type, we could pass fieldType", "author": "benwtrent", "createdAt": "2020-02-18T16:45:39Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationResultUtils.java", "diffHunk": "@@ -211,17 +215,35 @@ public Object value(Aggregation agg, String fieldType) {\n         }\n     }\n \n+    static class SingleBucketAggExtractor implements AggValueExtractor {\n+        @Override\n+        public Object value(Aggregation agg, String fieldType, Map<String, String> fieldTypeMap) {\n+            SingleBucketAggregation aggregation = (SingleBucketAggregation) agg;\n+\n+            if (aggregation.getAggregations().iterator().hasNext() == false) {\n+                return aggregation.getDocCount();\n+            }\n+\n+            HashMap<String, Object> nested = new HashMap<>();\n+            for (Aggregation subAgg : aggregation.getAggregations()) {\n+                nested.put(subAgg.getName(), getExtractor(subAgg).value(subAgg, fieldTypeMap.get(agg.getName()), fieldTypeMap));", "originalCommit": "78b63e334cd3c10cfcf3b399048cd453d22734ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMTM4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/52483#discussion_r380801382", "bodyText": "\ud83e\udd14\nDoes this actually work? It seems like we should recursively supply the String fieldName or something and then read that from fieldTypeMap.\nThat way we can continually append the field name.\nSomething like\nnested.put(subAgg.getName(), getExtractor(subAgg).value(subAgg, fieldName + \".\" + subAgg.getName(), fieldTypeMap));\n\nAnd those that worry about fieldType can get it from the fieldTypeMap", "author": "benwtrent", "createdAt": "2020-02-18T16:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5NzY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTUwMw==", "url": "https://github.com/elastic/elasticsearch/pull/52483#discussion_r381241503", "bodyText": "good catch! I think that makes sense.\nIn order to fix this, I will create a test combines both mapping deduction and value extraction, both are tested individually at the moment which makes it hard to discover bugs like this.", "author": "hendrikmuhs", "createdAt": "2020-02-19T11:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5NzY4Ng=="}], "type": "inlineReview"}, {"oid": "68aeabeee2042fbd28358c59500a88b12a332b33", "url": "https://github.com/elastic/elasticsearch/commit/68aeabeee2042fbd28358c59500a88b12a332b33", "message": "fix recursive field mapping lookup", "committedDate": "2020-02-20T13:24:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4MjQ5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52483#discussion_r382082497", "bodyText": "It strikes me that supplying fieldType is no longer necessary.\nAnything that desires to know fieldType could look it up via its own agg name combined with the prefix (if not empty).", "author": "benwtrent", "createdAt": "2020-02-20T15:42:02Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationResultUtils.java", "diffHunk": "@@ -211,17 +215,44 @@ public Object value(Aggregation agg, String fieldType) {\n         }\n     }\n \n+    static class SingleBucketAggExtractor implements AggValueExtractor {\n+        @Override\n+        public Object value(Aggregation agg, String fieldType, Map<String, String> fieldTypeMap, String lookupFieldPrefix) {\n+            SingleBucketAggregation aggregation = (SingleBucketAggregation) agg;\n+\n+            if (aggregation.getAggregations().iterator().hasNext() == false) {\n+                return aggregation.getDocCount();\n+            }\n+\n+            HashMap<String, Object> nested = new HashMap<>();\n+            for (Aggregation subAgg : aggregation.getAggregations()) {\n+                String subLookupFieldPrefix = lookupFieldPrefix.isEmpty() ? agg.getName() : lookupFieldPrefix + \".\" + agg.getName();\n+                nested.put(\n+                    subAgg.getName(),\n+                    getExtractor(subAgg).value(\n+                        subAgg,\n+                        fieldTypeMap.get(subLookupFieldPrefix + \".\" + subAgg.getName()),", "originalCommit": "d3279744e53c6a532ee6c23c710a7dd0ab8c665b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dcc10aac70190c58aa0f3ea44e5f17b7a0927d6e", "url": "https://github.com/elastic/elasticsearch/commit/dcc10aac70190c58aa0f3ea44e5f17b7a0927d6e", "message": "code formatting", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "fe11de0f6b7a911e35cc01c5348d3f808fffe3cc", "url": "https://github.com/elastic/elasticsearch/commit/fe11de0f6b7a911e35cc01c5348d3f808fffe3cc", "message": "add support for filter aggregations, refactor code for sub-aggregation support", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "bfdc1540620bef523af474b5c0b301f57d9dcac0", "url": "https://github.com/elastic/elasticsearch/commit/bfdc1540620bef523af474b5c0b301f57d9dcac0", "message": "add a combined test for mapping deduction and extraction", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "46485a95a9030607aa02e08cdd61c1bea080e6e6", "url": "https://github.com/elastic/elasticsearch/commit/46485a95a9030607aa02e08cdd61c1bea080e6e6", "message": "fix recursive field mapping lookup", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "eb457bc2825d3671a681960299f5872f8244a95e", "url": "https://github.com/elastic/elasticsearch/commit/eb457bc2825d3671a681960299f5872f8244a95e", "message": "fix recursive type lookup in unit tests", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "dddfe05d82b9ac56dabb244b97c23b3d5c05dace", "url": "https://github.com/elastic/elasticsearch/commit/dddfe05d82b9ac56dabb244b97c23b3d5c05dace", "message": "checkstyle fixes", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "0d8d6d00bdd94c9a2982529a5729f84b78146474", "url": "https://github.com/elastic/elasticsearch/commit/0d8d6d00bdd94c9a2982529a5729f84b78146474", "message": "simplify field type lookup", "committedDate": "2020-02-21T11:01:52Z", "type": "commit"}, {"oid": "0d8d6d00bdd94c9a2982529a5729f84b78146474", "url": "https://github.com/elastic/elasticsearch/commit/0d8d6d00bdd94c9a2982529a5729f84b78146474", "message": "simplify field type lookup", "committedDate": "2020-02-21T11:01:52Z", "type": "forcePushed"}]}