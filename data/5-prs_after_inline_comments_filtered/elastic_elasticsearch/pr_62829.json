{"pr_number": 62829, "pr_title": "ILM: migrate action configures the _tier_preference setting", "pr_createdAt": "2020-09-23T13:52:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62829", "timeline": [{"oid": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "url": "https://github.com/elastic/elasticsearch/commit/a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "message": "ILM: migrate action configures the _tier_preference setting\n\nThe `migrate` action will now configure the\n`index.routing.allocation.include._tier_preference` setting to the corresponding\ntiers. For the HOT phase it will configure `data_hot`, for the WARM phase it will\nconfigure `data_warm,data_hot` and for the COLD phase\n`data_cold,data_warm,data_cold`.", "committedDate": "2020-09-23T13:46:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NDU0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493654546", "bodyText": "this becomes the equivalent of a null check with the .orElse(\"\") above, maybe we can just leave it in an Optional<String> above and do availableDestinationTier.isPresent(), which I think is a bit clearer than checking for text (especially since we don't care what the text is)", "author": "dakrone", "createdAt": "2020-09-23T14:47:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DataTierMigrationRoutedStep.java", "diffHunk": "@@ -73,44 +70,49 @@ public Result isConditionMet(Index index, ClusterState clusterState) {\n             logger.debug(\"[{}] lifecycle action for index [{}] executed but index no longer exists\", getKey().getAction(), index.getName());\n             return new Result(false, null);\n         }\n-        String destinationTier = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String preferredTierConfiguration = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String availableDestinationTier = DataTierAllocationDecider.preferredAvailableTier(preferredTierConfiguration,\n+            clusterState.getNodes()).orElse(\"\");\n+\n         if (ActiveShardCount.ALL.enoughShardsActive(clusterState, index.getName()) == false) {\n-            if (Strings.isEmpty(destinationTier)) {\n+            if (Strings.isEmpty(preferredTierConfiguration)) {\n                 logger.debug(\"[{}] lifecycle action for index [{}] cannot make progress because not all shards are active\",\n                     getKey().getAction(), index.getName());\n             } else {\n-                logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n-                    getKey().getAction(), index.getName(), destinationTier);\n+                if (Strings.hasText(availableDestinationTier)) {", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NTA4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493655089", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n          \n          \n            \n                                logger.debug(\"[{}] migration of index [{}] to the [{}] tier preference cannot progress, as not all shards are active\",", "author": "dakrone", "createdAt": "2020-09-23T14:48:26Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DataTierMigrationRoutedStep.java", "diffHunk": "@@ -73,44 +70,49 @@ public Result isConditionMet(Index index, ClusterState clusterState) {\n             logger.debug(\"[{}] lifecycle action for index [{}] executed but index no longer exists\", getKey().getAction(), index.getName());\n             return new Result(false, null);\n         }\n-        String destinationTier = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String preferredTierConfiguration = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String availableDestinationTier = DataTierAllocationDecider.preferredAvailableTier(preferredTierConfiguration,\n+            clusterState.getNodes()).orElse(\"\");\n+\n         if (ActiveShardCount.ALL.enoughShardsActive(clusterState, index.getName()) == false) {\n-            if (Strings.isEmpty(destinationTier)) {\n+            if (Strings.isEmpty(preferredTierConfiguration)) {\n                 logger.debug(\"[{}] lifecycle action for index [{}] cannot make progress because not all shards are active\",\n                     getKey().getAction(), index.getName());\n             } else {\n-                logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n-                    getKey().getAction(), index.getName(), destinationTier);\n+                if (Strings.hasText(availableDestinationTier)) {\n+                    logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NzM5OA==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493657398", "bodyText": "I think in this message we should include the original preference setting, or else I think users will be confused why their cold phase index is waiting to move to the data_warm tier (if they see preference [data_cold,data_warm,data_hot] in the message I hope it will be clearer to them)", "author": "dakrone", "createdAt": "2020-09-23T14:51:07Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DataTierMigrationRoutedStep.java", "diffHunk": "@@ -73,44 +70,49 @@ public Result isConditionMet(Index index, ClusterState clusterState) {\n             logger.debug(\"[{}] lifecycle action for index [{}] executed but index no longer exists\", getKey().getAction(), index.getName());\n             return new Result(false, null);\n         }\n-        String destinationTier = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String preferredTierConfiguration = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String availableDestinationTier = DataTierAllocationDecider.preferredAvailableTier(preferredTierConfiguration,\n+            clusterState.getNodes()).orElse(\"\");\n+\n         if (ActiveShardCount.ALL.enoughShardsActive(clusterState, index.getName()) == false) {\n-            if (Strings.isEmpty(destinationTier)) {\n+            if (Strings.isEmpty(preferredTierConfiguration)) {\n                 logger.debug(\"[{}] lifecycle action for index [{}] cannot make progress because not all shards are active\",\n                     getKey().getAction(), index.getName());\n             } else {\n-                logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n-                    getKey().getAction(), index.getName(), destinationTier);\n+                if (Strings.hasText(availableDestinationTier)) {\n+                    logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n+                        getKey().getAction(), index.getName(), preferredTierConfiguration);\n+                } else {\n+                    logger.debug(\"[{}] migration of index [{}] to the next tier cannot progress as there is no available tier for the \" +\n+                            \"configured preferred tiers [{}] and not all shards are active\", getKey().getAction(), index.getName(),\n+                        preferredTierConfiguration);\n+                }\n             }\n             return new Result(false, waitingForActiveShardsAllocationInfo(idxMeta.getNumberOfReplicas()));\n         }\n \n-        if (Strings.isEmpty(destinationTier)) {\n-            logger.debug(\"index [{}] has no data tier routing setting configured and all its shards are active. considering the [{}] \" +\n-                \"step condition met and continuing to the next step\", index.getName(), getKey().getName());\n+        if (Strings.isEmpty(preferredTierConfiguration)) {\n+            logger.debug(\"index [{}] has no data tier routing preference setting configured and all its shards are active. considering \" +\n+                \"the [{}] step condition met and continuing to the next step\", index.getName(), getKey().getName());\n             // the user removed the tier routing setting and all the shards are active so we'll cary on\n             return new Result(true, null);\n         }\n \n         int allocationPendingAllShards = getPendingAllocations(index, ALLOCATION_DECIDERS, clusterState);\n \n         if (allocationPendingAllShards > 0) {\n-            boolean targetTierNodeFound = false;\n-            for (DiscoveryNode node : clusterState.nodes()) {\n-                for (DiscoveryNodeRole role : node.getRoles()) {\n-                    if (role.roleName().equals(DATA_ROLE.roleName()) || role.roleName().equals(destinationTier)) {\n-                        targetTierNodeFound = true;\n-                        break;\n-                    }\n-                }\n+            String statusMessage;\n+            if (Strings.hasText(availableDestinationTier)) {\n+                statusMessage = String.format(Locale.ROOT, \"[%s] lifecycle action [%s] waiting for [%s] shards to be moved to the [%s] \" +\n+                    \"tier\", index.getName(), getKey().getAction(), allocationPendingAllShards, availableDestinationTier);", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE5NzQ0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r494197447", "bodyText": "Great point, updating the message to include the preference. Thanks Lee", "author": "andreidan", "createdAt": "2020-09-24T10:12:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NzM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1ODM5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493658393", "bodyText": "I think we could do something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.debug(\"[{}] migration of index [{}] to tier [{}] complete\", getKey().getAction(), index, availableDestinationTier);\n          \n          \n            \n                        logger.debug(\"[{}] migration of index [{}] to tier [{}] (preference [{}]) complete\", getKey().getAction(), index, availableDestinationTier, preferredTierConfiguration);\n          \n      \n    \n    \n  \n\nto make it a bit clearer", "author": "dakrone", "createdAt": "2020-09-23T14:52:19Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DataTierMigrationRoutedStep.java", "diffHunk": "@@ -73,44 +70,49 @@ public Result isConditionMet(Index index, ClusterState clusterState) {\n             logger.debug(\"[{}] lifecycle action for index [{}] executed but index no longer exists\", getKey().getAction(), index.getName());\n             return new Result(false, null);\n         }\n-        String destinationTier = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String preferredTierConfiguration = INDEX_ROUTING_PREFER_SETTING.get(idxMeta.getSettings());\n+        String availableDestinationTier = DataTierAllocationDecider.preferredAvailableTier(preferredTierConfiguration,\n+            clusterState.getNodes()).orElse(\"\");\n+\n         if (ActiveShardCount.ALL.enoughShardsActive(clusterState, index.getName()) == false) {\n-            if (Strings.isEmpty(destinationTier)) {\n+            if (Strings.isEmpty(preferredTierConfiguration)) {\n                 logger.debug(\"[{}] lifecycle action for index [{}] cannot make progress because not all shards are active\",\n                     getKey().getAction(), index.getName());\n             } else {\n-                logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n-                    getKey().getAction(), index.getName(), destinationTier);\n+                if (Strings.hasText(availableDestinationTier)) {\n+                    logger.debug(\"[{}] migration of index [{}] to the [{}] tier cannot progress, as not all shards are active\",\n+                        getKey().getAction(), index.getName(), preferredTierConfiguration);\n+                } else {\n+                    logger.debug(\"[{}] migration of index [{}] to the next tier cannot progress as there is no available tier for the \" +\n+                            \"configured preferred tiers [{}] and not all shards are active\", getKey().getAction(), index.getName(),\n+                        preferredTierConfiguration);\n+                }\n             }\n             return new Result(false, waitingForActiveShardsAllocationInfo(idxMeta.getNumberOfReplicas()));\n         }\n \n-        if (Strings.isEmpty(destinationTier)) {\n-            logger.debug(\"index [{}] has no data tier routing setting configured and all its shards are active. considering the [{}] \" +\n-                \"step condition met and continuing to the next step\", index.getName(), getKey().getName());\n+        if (Strings.isEmpty(preferredTierConfiguration)) {\n+            logger.debug(\"index [{}] has no data tier routing preference setting configured and all its shards are active. considering \" +\n+                \"the [{}] step condition met and continuing to the next step\", index.getName(), getKey().getName());\n             // the user removed the tier routing setting and all the shards are active so we'll cary on\n             return new Result(true, null);\n         }\n \n         int allocationPendingAllShards = getPendingAllocations(index, ALLOCATION_DECIDERS, clusterState);\n \n         if (allocationPendingAllShards > 0) {\n-            boolean targetTierNodeFound = false;\n-            for (DiscoveryNode node : clusterState.nodes()) {\n-                for (DiscoveryNodeRole role : node.getRoles()) {\n-                    if (role.roleName().equals(DATA_ROLE.roleName()) || role.roleName().equals(destinationTier)) {\n-                        targetTierNodeFound = true;\n-                        break;\n-                    }\n-                }\n+            String statusMessage;\n+            if (Strings.hasText(availableDestinationTier)) {\n+                statusMessage = String.format(Locale.ROOT, \"[%s] lifecycle action [%s] waiting for [%s] shards to be moved to the [%s] \" +\n+                    \"tier\", index.getName(), getKey().getAction(), allocationPendingAllShards, availableDestinationTier);\n+            } else {\n+                statusMessage = String.format(Locale.ROOT, \"index [%s] has a preference for tiers [%s], \" +\n+                    \"but no nodes for any of those tiers are available in the cluster\", index.getName(), preferredTierConfiguration);\n             }\n-            String statusMessage = String.format(Locale.ROOT, \"%s lifecycle action [%s] waiting for [%s] shards to be moved to the [%s] \" +\n-                    \"tier\" + (targetTierNodeFound ? \"\" : \" but there are currently no [%s] nodes in the cluster\"),\n-                index, getKey().getAction(), allocationPendingAllShards, destinationTier, destinationTier);\n             logger.debug(statusMessage);\n             return new Result(false, new AllocationInfo(idxMeta.getNumberOfReplicas(), allocationPendingAllShards, true, statusMessage));\n         } else {\n-            logger.debug(\"[{}] migration of index [{}] to tier [{}] complete\", getKey().getAction(), index, destinationTier);\n+            logger.debug(\"[{}] migration of index [{}] to tier [{}] complete\", getKey().getAction(), index, availableDestinationTier);", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1OTcxNg==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493659716", "bodyText": "Super minor nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(indexOfTargetTier == -1) {\n          \n          \n            \n                    if (indexOfTargetTier == -1) {", "author": "dakrone", "createdAt": "2020-09-23T14:53:59Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/MigrateAction.java", "diffHunk": "@@ -102,6 +106,23 @@ public boolean isSafeAction() {\n         }\n     }\n \n+    /**\n+     * Based on the provided target tier it will return a comma separated list of preferred tiers.\n+     * ie. if `data_cold` is the target tier, it will return `data_cold,data_warm,data_hot`\n+     * This is usually used in conjunction with {@link DataTierAllocationDecider#INDEX_ROUTING_PREFER_SETTING}\n+     */\n+    static String getPreferredTiersConfiguration(String targetTier) {\n+        int indexOfTargetTier = COLD_TO_HOT_TIERS.indexOf(targetTier);\n+        if(indexOfTargetTier == -1) {", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MjAzMg==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493662032", "bodyText": "If we keep this, we could reverse the double negative with\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Strings.hasText(preferredTiers) == false) {\n          \n          \n            \n                    if (Strings.isEmpty(preferredTiers)) {\n          \n      \n    \n    \n  \n\nBut what I'm trying to understand is how this would actually be empty, even in the hot phase the stream skip above would at least return \"data_hot\", and we check that the index is not -1 above, so I'm not sure how it actually gets into this state?", "author": "dakrone", "createdAt": "2020-09-23T14:56:44Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/MigrateAction.java", "diffHunk": "@@ -102,6 +106,23 @@ public boolean isSafeAction() {\n         }\n     }\n \n+    /**\n+     * Based on the provided target tier it will return a comma separated list of preferred tiers.\n+     * ie. if `data_cold` is the target tier, it will return `data_cold,data_warm,data_hot`\n+     * This is usually used in conjunction with {@link DataTierAllocationDecider#INDEX_ROUTING_PREFER_SETTING}\n+     */\n+    static String getPreferredTiersConfiguration(String targetTier) {\n+        int indexOfTargetTier = COLD_TO_HOT_TIERS.indexOf(targetTier);\n+        if(indexOfTargetTier == -1) {\n+            throw new IllegalArgumentException(\"invalid data tier [\" + targetTier + \"]\");\n+        }\n+        String preferredTiers = COLD_TO_HOT_TIERS.stream().skip(indexOfTargetTier).collect(Collectors.joining(\",\"));\n+        if (Strings.hasText(preferredTiers) == false) {", "originalCommit": "a77a99a1cca1a5188cddc8fd830f884ded6d9e88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4NTMzOA==", "url": "https://github.com/elastic/elasticsearch/pull/62829#discussion_r493685338", "bodyText": "this is my paranoia, you're right, I'll drop it", "author": "andreidan", "createdAt": "2020-09-23T15:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MjAzMg=="}], "type": "inlineReview"}, {"oid": "53c3a99023829e2499a0adadad72e19bacbb2332", "url": "https://github.com/elastic/elasticsearch/commit/53c3a99023829e2499a0adadad72e19bacbb2332", "message": "Drop redundant check", "committedDate": "2020-09-23T15:32:33Z", "type": "commit"}, {"oid": "27577db697dcd6f82de7d6e1c662365d0d07286a", "url": "https://github.com/elastic/elasticsearch/commit/27577db697dcd6f82de7d6e1c662365d0d07286a", "message": "Extra space on if statement\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-09-24T10:07:52Z", "type": "commit"}, {"oid": "f1dd5cef40cc124dfe99cc850656321c979da229", "url": "https://github.com/elastic/elasticsearch/commit/f1dd5cef40cc124dfe99cc850656321c979da229", "message": "Include the preference configuration in log message\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-09-24T10:08:30Z", "type": "commit"}, {"oid": "408df916a0e8530450f056556b29e62bc67fb0f8", "url": "https://github.com/elastic/elasticsearch/commit/408df916a0e8530450f056556b29e62bc67fb0f8", "message": "Update log message\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-09-24T10:09:05Z", "type": "commit"}, {"oid": "a087b3d63a53837c21a106e923286578140a8c83", "url": "https://github.com/elastic/elasticsearch/commit/a087b3d63a53837c21a106e923286578140a8c83", "message": "Update log message to include the tier preference config", "committedDate": "2020-09-24T10:13:31Z", "type": "commit"}, {"oid": "7e834cc100569421bb3e9dcf17067f16a47c1835", "url": "https://github.com/elastic/elasticsearch/commit/7e834cc100569421bb3e9dcf17067f16a47c1835", "message": "Use %s for string templating", "committedDate": "2020-09-24T10:15:50Z", "type": "commit"}, {"oid": "f62104c8a68c35389083567b4c942894cdbe2937", "url": "https://github.com/elastic/elasticsearch/commit/f62104c8a68c35389083567b4c942894cdbe2937", "message": "Use Optional", "committedDate": "2020-09-24T10:20:41Z", "type": "commit"}, {"oid": "12955d5e7e4069e3847a2c89c3627606547eaf47", "url": "https://github.com/elastic/elasticsearch/commit/12955d5e7e4069e3847a2c89c3627606547eaf47", "message": "Fix test", "committedDate": "2020-09-24T10:24:28Z", "type": "commit"}, {"oid": "e9602e259719f773bcbeb96bb6a919e474114802", "url": "https://github.com/elastic/elasticsearch/commit/e9602e259719f773bcbeb96bb6a919e474114802", "message": "Merge branch 'master' into ilm-tier-preference-configuration", "committedDate": "2020-09-24T10:24:51Z", "type": "commit"}]}