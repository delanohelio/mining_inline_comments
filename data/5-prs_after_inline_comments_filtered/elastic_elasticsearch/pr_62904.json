{"pr_number": 62904, "pr_title": "Small refactoring of unsinged_long", "pr_createdAt": "2020-09-24T22:08:37Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62904", "timeline": [{"oid": "00579d1081c6e80f5834ced7e2dc5686a49ef0b2", "url": "https://github.com/elastic/elasticsearch/commit/00579d1081c6e80f5834ced7e2dc5686a49ef0b2", "message": "Small refactoring of unsinged_long\n\n- Modify Lucene::readSortValue to read BigInteger as a sortValue.\nIn #60050 writeSortValue was modified, but readSortValue was forgotten.\n\n- Adjust yml tests to v7.10 asr unsigned_long has been backported\n\n- Change MapperTests to use proper document IDs\n\nRelates to #60050", "committedDate": "2020-09-24T22:02:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4Mjc0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r495082746", "bodyText": "You can use the nice source helper method here:\nmapper.parse(source(b -> b.field(\"field\", malformedalue1)))", "author": "romseygeek", "createdAt": "2020-09-25T15:56:42Z", "path": "x-pack/plugin/mapper-unsigned-long/src/test/java/org/elasticsearch/xpack/unsignedlong/UnsignedLongFieldMapperTests.java", "diffHunk": "@@ -241,7 +241,7 @@ public void testIgnoreMalformed() throws Exception {\n             ThrowingRunnable runnable = () -> mapper.parse(\n                 new SourceToParse(", "originalCommit": "00579d1081c6e80f5834ced7e2dc5686a49ef0b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "949ee78fe806b338f17f2e54bcb3cb8544f519f0", "url": "https://github.com/elastic/elasticsearch/commit/949ee78fe806b338f17f2e54bcb3cb8544f519f0", "message": "Adress Alan's feedback", "committedDate": "2020-09-28T14:49:10Z", "type": "commit"}, {"oid": "b127e880757321a310ab96febe3c37bf1f7fa6d5", "url": "https://github.com/elastic/elasticsearch/commit/b127e880757321a310ab96febe3c37bf1f7fa6d5", "message": "Address format changes", "committedDate": "2020-09-28T15:05:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r496063888", "bodyText": "I'm a bit nervous that we didn't have any test failures because this was missed - do we have any tests that check sorting via BigInteger?", "author": "romseygeek", "createdAt": "2020-09-28T16:02:05Z", "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "diffHunk": "@@ -398,6 +398,8 @@ public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n             return in.readBoolean();\n         } else if (type == 9) {\n             return in.readBytesRef();\n+        } else if (type == 10) {\n+            return new BigInteger(in.readString());", "originalCommit": "b127e880757321a310ab96febe3c37bf1f7fa6d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA2MDg3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r497060877", "bodyText": "@romseygeek  Thank you for the review.  We do have tests that sort on BigInteger: UnsignedLongTests, and yml test: unsigned_long/10_basic.yml.  The serialization of SortValues is used in very particular circumstances (when bottomSortValue is involved, with collapseSort and may that's all); I could not come up with easy examples,  I will try to do this for a following PR.\nA usual distributed search on  BigInteger sort doesn't involve serialization of SortValues. SearchHit arrays come from shards with empty sortValues, and  sortValues get filled  on a coordinating node in the last stage before presenting results to a user.\nI am wondering if it is ok to merge this PR for now with a plan to do more test with SortValues in a following PR.", "author": "mayya-sharipova", "createdAt": "2020-09-29T21:08:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ4MjE1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r497482153", "bodyText": "That sounds fine, thanks @mayya-sharipova", "author": "romseygeek", "createdAt": "2020-09-30T12:49:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA=="}], "type": "inlineReview"}]}