{"pr_number": 63224, "pr_title": "Bulk invalidate API keys using a list of IDs", "pr_createdAt": "2020-10-05T02:19:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63224", "timeline": [{"oid": "b2e8f07496f84e404435542b2543e9ae236cb790", "url": "https://github.com/elastic/elasticsearch/commit/b2e8f07496f84e404435542b2543e9ae236cb790", "message": "Add ids field to API key invalidation request", "committedDate": "2020-10-05T02:06:13Z", "type": "commit"}, {"oid": "d2ce92a4cf32e6ee23b1fbd6c7109be7c77cd7b1", "url": "https://github.com/elastic/elasticsearch/commit/d2ce92a4cf32e6ee23b1fbd6c7109be7c77cd7b1", "message": "Fix tests", "committedDate": "2020-10-05T02:59:55Z", "type": "commit"}, {"oid": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "url": "https://github.com/elastic/elasticsearch/commit/e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "message": "Add yaml test", "committedDate": "2020-10-05T05:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2NzUxOA==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499367518", "bodyText": "Nit: Can we move this field up to where id used to be, so that the order matches serialization?", "author": "tvernum", "createdAt": "2020-10-05T06:26:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -26,19 +28,24 @@\n \n     private final String realmName;\n     private final String userName;\n-    private final String id;\n     private final String name;\n     private final boolean ownedByAuthenticatedUser;\n+    private final String[] ids;", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2ODEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499368133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +\n          \n          \n            \n                        validationException = addValidationError(\"One of [api key id(s), api key name, username, realm name] must be specified if \" +", "author": "tvernum", "createdAt": "2020-10-05T06:28:19Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -141,12 +161,25 @@ public static InvalidateApiKeyRequest forOwnedApiKeys() {\n     @Override\n     public ActionRequestValidationException validate() {\n         ActionRequestValidationException validationException = null;\n-        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && Strings.hasText(id) == false\n+        if (ids != null) {\n+            if (ids.length == 0) {\n+                validationException = addValidationError(\"Field [ids] cannot be an empty array\", validationException);\n+            } else {\n+                final int[] idxOfBlankIds = IntStream.range(0, ids.length).filter(i -> Strings.hasText(ids[i]) == false).toArray();\n+                if (idxOfBlankIds.length > 0) {\n+                    validationException = addValidationError(\"Field [ids] must not contain blank id, but got blank \"\n+                        + (idxOfBlankIds.length == 1 ? \"id\" : \"ids\") + \" at index \"\n+                        + (idxOfBlankIds.length == 1 ? \"position\" : \"positions\") + \": \"\n+                        + Arrays.toString(idxOfBlankIds), validationException);\n+                }\n+            }\n+        }\n+        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && ids == null\n             && Strings.hasText(name) == false && ownedByAuthenticatedUser == false) {\n             validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2ODQwMg==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499368402", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"username or realm name must not be specified when the api key id or api key name is specified\",\n          \n          \n            \n                                \"username or realm name must not be specified when the api key id(s) or api key name are specified\",", "author": "tvernum", "createdAt": "2020-10-05T06:29:09Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -141,12 +161,25 @@ public static InvalidateApiKeyRequest forOwnedApiKeys() {\n     @Override\n     public ActionRequestValidationException validate() {\n         ActionRequestValidationException validationException = null;\n-        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && Strings.hasText(id) == false\n+        if (ids != null) {\n+            if (ids.length == 0) {\n+                validationException = addValidationError(\"Field [ids] cannot be an empty array\", validationException);\n+            } else {\n+                final int[] idxOfBlankIds = IntStream.range(0, ids.length).filter(i -> Strings.hasText(ids[i]) == false).toArray();\n+                if (idxOfBlankIds.length > 0) {\n+                    validationException = addValidationError(\"Field [ids] must not contain blank id, but got blank \"\n+                        + (idxOfBlankIds.length == 1 ? \"id\" : \"ids\") + \" at index \"\n+                        + (idxOfBlankIds.length == 1 ? \"position\" : \"positions\") + \": \"\n+                        + Arrays.toString(idxOfBlankIds), validationException);\n+                }\n+            }\n+        }\n+        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && ids == null\n             && Strings.hasText(name) == false && ownedByAuthenticatedUser == false) {\n             validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +\n                 \"[owner] flag is false\", validationException);\n         }\n-        if (Strings.hasText(id) || Strings.hasText(name)) {\n+        if (ids != null || Strings.hasText(name)) {\n             if (Strings.hasText(realmName) || Strings.hasText(userName)) {\n                 validationException = addValidationError(\n                     \"username or realm name must not be specified when the api key id or api key name is specified\",", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2OTYxNw==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499369617", "bodyText": "Oh wow. I can't believe we need to have this. We definitely need to look at removing this class in a follow up PR.", "author": "tvernum", "createdAt": "2020-10-05T06:33:04Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequestTests.java", "diffHunk": "@@ -69,7 +110,15 @@ public void writeTo(StreamOutput out) throws IOException {\n                 super.writeTo(out);\n                 out.writeOptionalString(realm);\n                 out.writeOptionalString(user);\n-                out.writeOptionalString(apiKeyId);\n+                if (out.getVersion().onOrAfter(Version.V_7_10_0)) {\n+                    if (Strings.hasText(apiKeyId)) {\n+                        out.writeOptionalStringArray(new String[] { apiKeyId });\n+                    } else {\n+                        out.writeOptionalStringArray(null);\n+                    }\n+                } else {\n+                    out.writeOptionalString(apiKeyId);\n+                }", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a2fc5c9a996c1c224a39a7844be7babdb372168", "url": "https://github.com/elastic/elasticsearch/commit/2a2fc5c9a996c1c224a39a7844be7babdb372168", "message": "Fix tests", "committedDate": "2020-10-05T07:49:39Z", "type": "commit"}, {"oid": "20a1d8aeec2464cee2becee82c4444b400067941", "url": "https://github.com/elastic/elasticsearch/commit/20a1d8aeec2464cee2becee82c4444b400067941", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-10-05T10:47:35Z", "type": "commit"}, {"oid": "9129e931858c6ba001cb7ad9009e6120f704f8e8", "url": "https://github.com/elastic/elasticsearch/commit/9129e931858c6ba001cb7ad9009e6120f704f8e8", "message": "feedback", "committedDate": "2020-10-05T10:52:16Z", "type": "commit"}, {"oid": "96c32832caa77f89e371ec56a89936d8caa528c3", "url": "https://github.com/elastic/elasticsearch/commit/96c32832caa77f89e371ec56a89936d8caa528c3", "message": "Fix test", "committedDate": "2020-10-05T11:45:19Z", "type": "commit"}]}