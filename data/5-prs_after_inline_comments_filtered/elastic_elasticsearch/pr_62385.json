{"pr_number": 62385, "pr_title": "Fix failure in AppendProcessorTests.testAppendingToListWithDuplicatesDisallowed", "pr_createdAt": "2020-09-15T14:05:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62385", "timeline": [{"oid": "260a61cf131e763d12ffcfc8cd22fe7dc5adc9ac", "url": "https://github.com/elastic/elasticsearch/commit/260a61cf131e763d12ffcfc8cd22fe7dc5adc9ac", "message": "fix test", "committedDate": "2020-09-15T14:00:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3NjA2OA==", "url": "https://github.com/elastic/elasticsearch/pull/62385#discussion_r488776068", "bodyText": "This seems really confusing to me, I think we could do the same thing with:\nint nonexistingValueSize = randomIntBetween(0, 10);\n// generate n new values\nSet<String> newValues = Stream.generate(() -> randomAlphaOfLengthBetween(1, 10)).limit(nonexistingValueSize).collect(Collectors.toSet());\n// create a set using the new values, making sure there are no overlapping values already present in the existing values\nSet<String> nonexistingValues = Sets.difference(newValues, new HashSet<>(existingValues));\nUsing the while loop for this is a bit overkill, I think Sets makes it easier to avoid duplicates", "author": "dakrone", "createdAt": "2020-09-15T15:50:36Z", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorTests.java", "diffHunk": "@@ -198,14 +198,21 @@ public void testAppendingToListWithDuplicatesDisallowed() throws Exception {\n         String originalField = RandomDocumentPicks.addRandomField(random(), ingestDocument, list);\n         List<String> expectedValues = new ArrayList<>(list);\n         List<String> existingValues = randomSubsetOf(list);\n-        int uniqueValuesSize = randomIntBetween(0, 10);\n-        List<String> uniqueValues = new ArrayList<>();\n-        for (int i = 0; i < uniqueValuesSize; i++) {\n-            uniqueValues.add(randomAlphaOfLengthBetween(1, 10));\n+        int nonexistingValuesSize = randomIntBetween(0, 10);\n+        List<String> nonexistingValues = new ArrayList<>();\n+        for (int i = 0; i < nonexistingValuesSize; i++) {\n+            boolean valueExists = true;\n+            while (valueExists) {", "originalCommit": "260a61cf131e763d12ffcfc8cd22fe7dc5adc9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4NTcwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62385#discussion_r488785705", "bodyText": "Thanks, @dakrone. I simplified the test as you suggested.", "author": "danhermann", "createdAt": "2020-09-15T16:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3NjA2OA=="}], "type": "inlineReview"}, {"oid": "34a9cf97c2041aae0815757b91224de1d654eb5a", "url": "https://github.com/elastic/elasticsearch/commit/34a9cf97c2041aae0815757b91224de1d654eb5a", "message": "simplify test", "committedDate": "2020-09-15T16:04:01Z", "type": "commit"}]}