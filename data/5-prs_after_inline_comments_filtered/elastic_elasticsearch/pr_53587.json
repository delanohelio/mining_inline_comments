{"pr_number": 53587, "pr_title": "Delete empty .ml-state* indices during nightly maintenance task.", "pr_createdAt": "2020-03-16T10:09:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53587", "timeline": [{"oid": "2faf6ced0acfdf935b19fd8f3150d940b740bc82", "url": "https://github.com/elastic/elasticsearch/commit/2faf6ced0acfdf935b19fd8f3150d940b740bc82", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-16T13:10:32Z", "type": "forcePushed"}, {"oid": "fb39294a08588dd3d6c855b059e20b3eb9d5d570", "url": "https://github.com/elastic/elasticsearch/commit/fb39294a08588dd3d6c855b059e20b3eb9d5d570", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-17T10:56:55Z", "type": "forcePushed"}, {"oid": "d70324c272fad2ee6d42fce2b4506238c218a160", "url": "https://github.com/elastic/elasticsearch/commit/d70324c272fad2ee6d42fce2b4506238c218a160", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-17T11:14:25Z", "type": "forcePushed"}, {"oid": "030d4d4cfe3587187de4e4a3359c9a876b92d96c", "url": "https://github.com/elastic/elasticsearch/commit/030d4d4cfe3587187de4e4a3359c9a876b92d96c", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-17T12:03:13Z", "type": "forcePushed"}, {"oid": "589db76b94f2fdf7a62effc978ed452e7255a377", "url": "https://github.com/elastic/elasticsearch/commit/589db76b94f2fdf7a62effc978ed452e7255a377", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-18T08:30:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwNjE2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53587#discussion_r395106162", "bodyText": "I think we can request here indices that match the write alias. Then we don't need to filter them as it will just return indices that have the alias.", "author": "dimitris-athanasiou", "createdAt": "2020-03-19T15:18:16Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/retention/EmptyStateIndexRemover.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.job.retention;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest;\n+import org.elasticsearch.action.admin.indices.get.GetIndexRequest;\n+import org.elasticsearch.action.admin.indices.get.GetIndexResponse;\n+import org.elasticsearch.action.admin.indices.stats.IndexStats;\n+import org.elasticsearch.action.admin.indices.stats.IndicesStatsRequest;\n+import org.elasticsearch.client.OriginSettingClient;\n+import org.elasticsearch.common.util.set.Sets;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndex;\n+\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+import static java.util.stream.Collectors.toSet;\n+\n+/**\n+ * This class deletes empty indices matching .ml-state* pattern that are not pointed at by the .ml-state-write alias.\n+ */\n+public class EmptyStateIndexRemover implements MlDataRemover {\n+    \n+    private final OriginSettingClient client;\n+\n+    public EmptyStateIndexRemover(OriginSettingClient client) {\n+        this.client = Objects.requireNonNull(client);\n+    }\n+\n+    @Override\n+    public void remove(ActionListener<Boolean> listener, Supplier<Boolean> isTimedOutSupplier) {\n+        try {\n+            if (isTimedOutSupplier.get()) {\n+                listener.onResponse(false);\n+                return;\n+            }\n+            getEmptyStateIndices(\n+                ActionListener.wrap(\n+                    emptyStateIndices -> {\n+                        if (emptyStateIndices.isEmpty()) {\n+                            listener.onResponse(true);\n+                            return;\n+                        }\n+                        getCurrentStateIndices(\n+                            ActionListener.wrap(\n+                                currentStateIndices -> {\n+                                    Set<String> stateIndicesToRemove = Sets.difference(emptyStateIndices, currentStateIndices);\n+                                    executeDeleteEmptyStateIndices(stateIndicesToRemove, listener);\n+                                },\n+                                listener::onFailure\n+                            )\n+                        );\n+                    },\n+                    listener::onFailure\n+                )\n+            );\n+        } catch (Exception e) {\n+            listener.onFailure(e);\n+        }\n+    }\n+\n+    private void getEmptyStateIndices(ActionListener<Set<String>> listener) {\n+        IndicesStatsRequest indicesStatsRequest = new IndicesStatsRequest().indices(AnomalyDetectorsIndex.jobStateIndexPattern());\n+        client.admin().indices().stats(\n+            indicesStatsRequest,\n+            ActionListener.wrap(\n+                indicesStatsResponse -> {\n+                    Set<String> emptyStateIndices =\n+                        indicesStatsResponse.getIndices().values().stream()\n+                            .filter(stats -> stats.getTotal().getDocs().getCount() == 0)\n+                            .map(IndexStats::getIndex)\n+                            .collect(toSet());\n+                    listener.onResponse(emptyStateIndices);\n+                },\n+                listener::onFailure\n+            )\n+        );\n+    }\n+\n+    private void getCurrentStateIndices(ActionListener<Set<String>> listener) {\n+        GetIndexRequest getIndexRequest = new GetIndexRequest().indices(AnomalyDetectorsIndex.jobStateIndexPattern());", "originalCommit": "589db76b94f2fdf7a62effc978ed452e7255a377", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEzMzY2OA==", "url": "https://github.com/elastic/elasticsearch/pull/53587#discussion_r395133668", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-03-19T15:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwNjE2Mg=="}], "type": "inlineReview"}, {"oid": "e6f7543df52e28e8957831fdb58ebb821ce9414c", "url": "https://github.com/elastic/elasticsearch/commit/e6f7543df52e28e8957831fdb58ebb821ce9414c", "message": "Apply review comment", "committedDate": "2020-03-19T16:01:56Z", "type": "forcePushed"}, {"oid": "bfb25178ff0fbf1754d48da8f439c62af913b25c", "url": "https://github.com/elastic/elasticsearch/commit/bfb25178ff0fbf1754d48da8f439c62af913b25c", "message": "Delete empty .ml-state* indices during daily maintenance task.", "committedDate": "2020-03-20T07:56:07Z", "type": "commit"}, {"oid": "40df603485f3bbbfc27a947595fa300550c448be", "url": "https://github.com/elastic/elasticsearch/commit/40df603485f3bbbfc27a947595fa300550c448be", "message": "Apply review comment", "committedDate": "2020-03-20T07:56:07Z", "type": "commit"}, {"oid": "40df603485f3bbbfc27a947595fa300550c448be", "url": "https://github.com/elastic/elasticsearch/commit/40df603485f3bbbfc27a947595fa300550c448be", "message": "Apply review comment", "committedDate": "2020-03-20T07:56:07Z", "type": "forcePushed"}, {"oid": "4782a9d827b929a1bc3621bc89bc0dd871d099b4", "url": "https://github.com/elastic/elasticsearch/commit/4782a9d827b929a1bc3621bc89bc0dd871d099b4", "message": "Do not invoke Delete API when there are no indices to delete", "committedDate": "2020-03-20T09:25:14Z", "type": "commit"}]}