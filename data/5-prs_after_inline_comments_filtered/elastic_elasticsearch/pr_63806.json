{"pr_number": 63806, "pr_title": "Count only mapped fields towards docvalue_fields limit", "pr_createdAt": "2020-10-16T13:29:57Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63806", "timeline": [{"oid": "88d8ff1b87f064baff0c8d422bf4c6800bd1a1d5", "url": "https://github.com/elastic/elasticsearch/commit/88d8ff1b87f064baff0c8d422bf4c6800bd1a1d5", "message": "Count only mapped fields towards docvalue_fields limit\n\nCurrently we count every field requested in the search request bodies\n'docvalue_fields' section towards the limit defined by\nthe 'max_docvalue_fields_search' index setting which defaults to 100. This can\nbe a problem e.g. if the user searches across several indices with some fields\npresent in one index but not the other and has to add the joint set of field\nnames to the query. We currently trip the limit even if the number of actually\nmapped fields in each index is below the limit.\nThis change adds a step to distiguish between mappend and unmapped fields and\nonly count the former towards the limit.\n\nCloses #63730", "committedDate": "2020-10-16T13:24:03Z", "type": "commit"}, {"oid": "02738f8860c459f216428ab842b1d852055a045f", "url": "https://github.com/elastic/elasticsearch/commit/02738f8860c459f216428ab842b1d852055a045f", "message": "fix yaml", "committedDate": "2020-10-16T14:57:31Z", "type": "commit"}, {"oid": "cb0d60983d8901ba19d2e341b4b0515055c4cd02", "url": "https://github.com/elastic/elasticsearch/commit/cb0d60983d8901ba19d2e341b4b0515055c4cd02", "message": "Skip yaml test for mixed cluster since message changed", "committedDate": "2020-10-16T15:58:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MzMwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63806#discussion_r506583301", "bodyText": "I think this signature change undoes some of @javanna's work in #63239. The easiest fix would be to keep the function parameter, and add a new one QueryShardContext::isFieldMapped.\nAs a side note, if we end up passing a lot of functions to avoid exposing MapperService, I wonder if we should pull out a lightweight abstraction similar to FieldTypeLookup and pass it around instead?", "author": "jtibshirani", "createdAt": "2020-10-16T16:21:09Z", "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/FetchDocValuesContext.java", "diffHunk": "@@ -33,20 +32,25 @@\n \n     private final List<FieldAndFormat> fields;\n \n-    public static FetchDocValuesContext create(Function<String, Set<String>> simpleMatchToFullName,\n-                                               int maxAllowedDocvalueFields,\n-                                               List<FieldAndFormat> fieldPatterns) {\n+    public static FetchDocValuesContext create(MapperService mapperService, List<FieldAndFormat> fieldPatterns) {", "originalCommit": "cb0d60983d8901ba19d2e341b4b0515055c4cd02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYzMzExNA==", "url": "https://github.com/elastic/elasticsearch/pull/63806#discussion_r506633114", "bodyText": "thanks for catching this Julie. I am still addressing the original problem: we carry MapperService around too often when it's not needed. I do see the increasing need for functions which is definitely a signal that we dont have the right abstractions. I am using functions in some places but I see it more as a temporary work-around. I do think once we remove getMapperService from QueryShardContext we should reconsider the functions needed. A field type lookup abstraction may also be needed as I would like to split DocumentMapper into some sub-components that can be shared independently. To be seen very soon :)", "author": "javanna", "createdAt": "2020-10-16T17:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MzMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYxNTIzNA==", "url": "https://github.com/elastic/elasticsearch/pull/63806#discussion_r507615234", "bodyText": "Instead of using MapperService, I pass in QueryShardContext now which has methods to resolve field name patterns, allows looking up the setting and look up whether a field is mapped. I can go back to passing in three parameters (functions and the setting itself) if you think this is not ideal for any reason.", "author": "cbuescher", "createdAt": "2020-10-19T09:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MzMwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NTQwMg==", "url": "https://github.com/elastic/elasticsearch/pull/63806#discussion_r506585402", "bodyText": "For efficiency could we only create a new FieldAndFormat if the field is mapped? I think we'll end up dropping the field anyways, not even having an entry in the response for it.\nAlso small typo, fedinde -> defined.", "author": "jtibshirani", "createdAt": "2020-10-16T16:24:51Z", "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/FetchDocValuesContext.java", "diffHunk": "@@ -33,20 +32,25 @@\n \n     private final List<FieldAndFormat> fields;\n \n-    public static FetchDocValuesContext create(Function<String, Set<String>> simpleMatchToFullName,\n-                                               int maxAllowedDocvalueFields,\n-                                               List<FieldAndFormat> fieldPatterns) {\n+    public static FetchDocValuesContext create(MapperService mapperService, List<FieldAndFormat> fieldPatterns) {\n+        int maxAllowedDocvalueFields = mapperService.getIndexSettings().getMaxDocvalueFields();\n+\n         List<FieldAndFormat> fields = new ArrayList<>();\n+        int mappedFieldCount = 0;\n         for (FieldAndFormat field : fieldPatterns) {\n-            Collection<String> fieldNames = simpleMatchToFullName.apply(field.field);\n+            Collection<String> fieldNames = mapperService.simpleMatchToFullName(field.field);\n             for (String fieldName: fieldNames) {\n                 fields.add(new FieldAndFormat(fieldName, field.format));\n+                // only count the mapped fields towards the limit fedinde by IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING\n+                if (mapperService.fieldType(fieldName) != null) {", "originalCommit": "cb0d60983d8901ba19d2e341b4b0515055c4cd02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5NTk4OA==", "url": "https://github.com/elastic/elasticsearch/pull/63806#discussion_r507595988", "bodyText": "You are right, I only see the \"fields\" really being used in \"FetchDocValuePhase#getProcessor\" and we seem to disregard fields without a mapping there. I will update the comments on the class though to reflect this for future usage.", "author": "cbuescher", "createdAt": "2020-10-19T09:17:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NTQwMg=="}], "type": "inlineReview"}, {"oid": "d09744e5d0aa70870505c9ff13e9c612ff7e4bc1", "url": "https://github.com/elastic/elasticsearch/commit/d09744e5d0aa70870505c9ff13e9c612ff7e4bc1", "message": "Merge branch 'master' into fix-63730", "committedDate": "2020-10-19T08:58:31Z", "type": "commit"}, {"oid": "c331adf181c951e2fdfa1c35272346a74512cc60", "url": "https://github.com/elastic/elasticsearch/commit/c331adf181c951e2fdfa1c35272346a74512cc60", "message": "iter", "committedDate": "2020-10-19T10:09:18Z", "type": "commit"}, {"oid": "3822a3e2c9d3a9a6dfdd91d424c436e0784c53d8", "url": "https://github.com/elastic/elasticsearch/commit/3822a3e2c9d3a9a6dfdd91d424c436e0784c53d8", "message": "remove skip", "committedDate": "2020-10-19T17:24:01Z", "type": "commit"}]}