{"pr_number": 66112, "pr_title": "Extend dynamic templates to make them define runtime fields", "pr_createdAt": "2020-12-09T15:33:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66112", "timeline": [{"oid": "dcbc5c26594e51b0a35e888bc0d30935cba99019", "url": "https://github.com/elastic/elasticsearch/commit/dcbc5c26594e51b0a35e888bc0d30935cba99019", "message": "Extend dynamic templates to make them define runtime fields\n\nRuntime fields are defined as part of the runtime section in the mappings. Dynamic templates allow to specify mappings for fields that are getting automatically created. With this change, we allow users to create dynamic under the runtime section, and optionally define their mappings.\n\nThe following is an example of dynamic template that matches any incoming long field as runtime field, meaning they will all be evaluated at runtime. When a script is not specified, runtime fields are loaded from a field with the same name in _source.\n\n```\n{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"long_as_runtime\": {\n          \"match_mapping_type\": \"long\",\n          \"runtime\": {\n\n          }\n        }\n      }\n    ]\n  }\n}\n```", "committedDate": "2020-12-09T15:20:27Z", "type": "commit"}, {"oid": "5ec9cc87564a1a740db79b021322a382651cd0e8", "url": "https://github.com/elastic/elasticsearch/commit/5ec9cc87564a1a740db79b021322a382651cd0e8", "message": "Merge branch 'master' into enhancement/dynamic_templates_runtime", "committedDate": "2020-12-09T16:18:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NDYwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r539984609", "bodyText": "In hindsight, we may want to rework the DynamicRuntimeFieldsBuilder interface that plugins have to implement for the dynamic runtime mode. Given that the notion of runtime field is added to XContentFieldType, we could tie the two together, as there is now some more subtle link between the two. I will do some more thinking around this as a follow-up", "author": "javanna", "createdAt": "2020-12-10T08:52:47Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DynamicTemplate.java", "diffHunk": "@@ -72,12 +73,8 @@ public static MatchType fromString(String value) {\n     public enum XContentFieldType {\n         OBJECT {\n             @Override\n-            public String defaultMappingType() {\n-                return ObjectMapper.CONTENT_TYPE;\n-            }\n-            @Override\n-            public String toString() {\n-                return \"object\";\n+            boolean supportsRuntimeField() {", "originalCommit": "5ec9cc87564a1a740db79b021322a382651cd0e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAzMzUxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r540033515", "bodyText": "++, I was thinking as I was reading this that it would be nice to move most of applyMatchingTemplate into the dynamic template itself", "author": "romseygeek", "createdAt": "2020-12-10T10:01:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NDYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0NzM1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r540047352", "bodyText": "FYI - this will clash with a test I'm adding in #66030 so depending on who gets there first one of us will need to update :)", "author": "romseygeek", "createdAt": "2020-12-10T10:19:57Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/TestRuntimeField.java", "diffHunk": "@@ -61,7 +61,7 @@ public Query termQuery(Object value, QueryShardContext context) {\n         @Override\n         public Map<String, Parser> getRuntimeFieldTypes() {\n             return Map.of(\n-                \"string\", (name, node, parserContext) -> new TestRuntimeField(name, \"string\"),\n+                \"keyword\", (name, node, parserContext) -> new TestRuntimeField(name, \"keyword\"),", "originalCommit": "5ec9cc87564a1a740db79b021322a382651cd0e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA1MzU3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r540053577", "bodyText": "yes this is odd, in the beginning I was only plugging in a \"test\" field, then a bunch of them, but now string is no longer good because dynamic templates need to know how to map a string field by default, and that default is keyword, while it is text for concrete fields.", "author": "javanna", "createdAt": "2020-12-10T10:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0NzM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0ODk2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r540048965", "bodyText": "This all makes me think that we need to extend the XContentMapValues functions to take predicates or lambdas or something, we have a lot of repeated 'descend through json objects' code here and elsewhere.  But that can be for later, we don't need it for this PR.", "author": "romseygeek", "createdAt": "2020-12-10T10:22:11Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java", "diffHunk": "@@ -476,21 +480,21 @@ private static boolean containsSnippet(Map<?, ?> map, String snippet) {\n \n     private static boolean containsSnippet(List<?> list, String snippet) {\n         for (Object value : list) {\n-            if (value instanceof Map) {\n-                if (containsSnippet((Map<?, ?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof List) {\n-                if (containsSnippet((List<?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof String) {\n-                String valueString = (String) value;\n-                if (valueString.contains(snippet)) {\n-                    return true;\n-                }\n+            if (containsSnippet(value, snippet)) {\n+                return true;\n             }\n         }\n         return false;\n     }\n+\n+    private static boolean containsSnippet(Object value, String snippet) {\n+        if (value instanceof Map) {\n+            return containsSnippet((Map<?, ?>) value, snippet);\n+        } else if (value instanceof List) {\n+            return containsSnippet((List<?>) value, snippet);\n+        } else if (value instanceof String) {\n+            return ((String) value).contains(snippet);\n+        }\n+        return false;\n+    }", "originalCommit": "5ec9cc87564a1a740db79b021322a382651cd0e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA1MjUyNA==", "url": "https://github.com/elastic/elasticsearch/pull/66112#discussion_r540052524", "bodyText": "true I have refactored two places where we do that as part of this PR.", "author": "javanna", "createdAt": "2020-12-10T10:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0ODk2NQ=="}], "type": "inlineReview"}]}