{"pr_number": 56125, "pr_title": "[ML] More advanced model snapshot retention options", "pr_createdAt": "2020-05-04T16:16:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56125", "timeline": [{"oid": "8d03124ba36b247f0d7f8582469e4068d126db79", "url": "https://github.com/elastic/elasticsearch/commit/8d03124ba36b247f0d7f8582469e4068d126db79", "message": "[ML] More advanced model snapshot retention options\n\nThis PR implements the following changes to make ML model snapshot\nretention more flexible in advance of adding a UI for the feature in\nan upcoming release.\n\n- The default for `model_snapshot_retention_days` for new jobs is now\n  10 instead of 1\n- There is a new job setting, `daily_model_snapshot_retention_after_days`,\n  that defaults to 1 for new jobs and `model_snapshot_retention_days`\n  for pre-7.8 jobs\n- For days that are older than `model_snapshot_retention_days`, all\n  model snapshots are deleted as before\n- For days that are in between `daily_model_snapshot_retention_after_days`\n  and `model_snapshot_retention_days` all but the first model snapshot\n  for that day are deleted\n- The `retain` setting of model snapshots is still respected to allow\n  selected model snapshots to be retained indefinitely\n\nCloses #52150", "committedDate": "2020-05-04T16:14:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MTc3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56125#discussion_r419641777", "bodyText": "#nit, do these tests NEED to be the native-multi-node-tests? These take a while to spin-up and run.", "author": "benwtrent", "createdAt": "2020-05-04T18:32:13Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ModelSnapshotRetentionIT.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.integration;\n+\n+import org.elasticsearch.action.DocWriteResponse;\n+import org.elasticsearch.action.bulk.BulkAction;\n+import org.elasticsearch.action.bulk.BulkRequest;\n+import org.elasticsearch.action.bulk.BulkResponse;\n+import org.elasticsearch.action.index.IndexAction;\n+import org.elasticsearch.action.index.IndexRequest;\n+import org.elasticsearch.action.index.IndexResponse;\n+import org.elasticsearch.action.search.SearchAction;\n+import org.elasticsearch.action.search.SearchRequest;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.action.support.WriteRequest;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.json.JsonXContent;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilders;\n+import org.elasticsearch.search.SearchHit;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+import org.elasticsearch.xpack.core.ml.action.PutJobAction;\n+import org.elasticsearch.xpack.core.ml.action.UpdateJobAction;\n+import org.elasticsearch.xpack.core.ml.job.config.AnalysisConfig;\n+import org.elasticsearch.xpack.core.ml.job.config.DataDescription;\n+import org.elasticsearch.xpack.core.ml.job.config.Detector;\n+import org.elasticsearch.xpack.core.ml.job.config.Job;\n+import org.elasticsearch.xpack.core.ml.job.config.JobUpdate;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndex;\n+import org.elasticsearch.xpack.core.ml.job.process.autodetect.state.ModelSnapshot;\n+import org.elasticsearch.xpack.core.ml.job.process.autodetect.state.ModelState;\n+import org.junit.After;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class ModelSnapshotRetentionIT extends MlNativeAutodetectIntegTestCase {", "originalCommit": "8d03124ba36b247f0d7f8582469e4068d126db79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NTM0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56125#discussion_r419945345", "bodyText": "They don't NEED to be multi-node tests, but I think they need to be external cluster tests.\nI initially tried adding the integration test as an internal cluster test, but that didn't work because delete-by-query didn't work in the internal cluster tests.\nWe have a single node external cluster test suite too but I am not sure there is a huge performance benefit in moving the test here.  Also, over the years we've found numerous bugs in our multi-node clusters caused by differences between requests getting sent directly to the master node and requests getting sent to a non-master node, so I don't think it hurts to have a bit more coverage of inter-node communications.", "author": "droberts195", "createdAt": "2020-05-05T08:31:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MTc3Nw=="}], "type": "inlineReview"}, {"oid": "3e7bf0e0a6c26886920e968367795e41d1c0d52a", "url": "https://github.com/elastic/elasticsearch/commit/3e7bf0e0a6c26886920e968367795e41d1c0d52a", "message": "[DOCS] Updates retention descriptions", "committedDate": "2020-05-04T19:40:07Z", "type": "commit"}, {"oid": "ee14fd324c0be7fb244975499d34700bf0fd7b4c", "url": "https://github.com/elastic/elasticsearch/commit/ee14fd324c0be7fb244975499d34700bf0fd7b4c", "message": "Update docs/reference/ml/ml-shared.asciidoc\n\nCo-authored-by: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-05-05T08:32:49Z", "type": "commit"}, {"oid": "7951a77f19af480e2375218944eba18e2c3d0679", "url": "https://github.com/elastic/elasticsearch/commit/7951a77f19af480e2375218944eba18e2c3d0679", "message": "Fixing tests", "committedDate": "2020-05-05T08:37:59Z", "type": "commit"}, {"oid": "394be6dd213a6f6b96b0aeedc945ea37d5e7dbd7", "url": "https://github.com/elastic/elasticsearch/commit/394be6dd213a6f6b96b0aeedc945ea37d5e7dbd7", "message": "Merge branch 'master' into daily_model_snapshot_retention", "committedDate": "2020-05-05T09:09:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3ODYwMA==", "url": "https://github.com/elastic/elasticsearch/pull/56125#discussion_r419978600", "bodyText": "It might be worth replacing the tuple with a struct-like class that better explains what each value is.", "author": "dimitris-athanasiou", "createdAt": "2020-05-05T09:30:31Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/retention/AbstractExpiredJobDataRemover.java", "diffHunk": "@@ -84,15 +87,15 @@ private WrappedBatchedJobsIterator newJobIterator() {\n         return new WrappedBatchedJobsIterator(jobsIterator);\n     }\n \n-    abstract void calcCutoffEpochMs(String jobId, long retentionDays, ActionListener<Long> listener);\n+    abstract void calcCutoffEpochMs(String jobId, long retentionDays, ActionListener<Tuple<Long, Long>> listener);", "originalCommit": "3e7bf0e0a6c26886920e968367795e41d1c0d52a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3201549168e5524398a96b6db160a92419339403", "url": "https://github.com/elastic/elasticsearch/commit/3201549168e5524398a96b6db160a92419339403", "message": "Use a dedicated class instead of Tuple", "committedDate": "2020-05-05T09:58:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNTA0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56125#discussion_r420015042", "bodyText": "Make those two members final?", "author": "dimitris-athanasiou", "createdAt": "2020-05-05T10:39:32Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/retention/AbstractExpiredJobDataRemover.java", "diffHunk": "@@ -147,4 +145,39 @@ public Job next() {\n             return new VolatileCursorIterator<>(jobs);\n         }\n     }\n+\n+    /**\n+     * The latest time that cutoffs are measured from is not wall clock time,\n+     * but some other reference point that makes sense for the type of data\n+     * being removed.  This class groups the cutoff time with it's \"latest\"\n+     * reference point.\n+     */\n+    protected static final class CutoffDetails {\n+\n+        public long latestTimeMs;", "originalCommit": "3201549168e5524398a96b6db160a92419339403", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0bb92d995240ba59f1187571bd10260f34d5d420", "url": "https://github.com/elastic/elasticsearch/commit/0bb92d995240ba59f1187571bd10260f34d5d420", "message": "Merge branch 'master' into daily_model_snapshot_retention", "committedDate": "2020-05-05T10:48:46Z", "type": "commit"}, {"oid": "c3f6a8477a99e16633c08c9f07ff2d9f70e1d71a", "url": "https://github.com/elastic/elasticsearch/commit/c3f6a8477a99e16633c08c9f07ff2d9f70e1d71a", "message": "Make members final", "committedDate": "2020-05-05T10:51:16Z", "type": "commit"}]}