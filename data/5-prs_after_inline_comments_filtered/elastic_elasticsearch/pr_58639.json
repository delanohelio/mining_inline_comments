{"pr_number": 58639, "pr_title": "Move MappedFieldType#getSearchAnalyzer and #getSearchQuoteAnalyzer to TextSearchInfo", "pr_createdAt": "2020-06-28T11:35:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58639", "timeline": [{"oid": "0e39bfb8d7d7cca113d2e9a722694cddf8d2a5cc", "url": "https://github.com/elastic/elasticsearch/commit/0e39bfb8d7d7cca113d2e9a722694cddf8d2a5cc", "message": "Move search-time analyzers from MappedFieldType to TextSearchInfo", "committedDate": "2020-06-25T16:57:30Z", "type": "commit"}, {"oid": "81284822cc07e7b0c21807eca7da4c79e0962da0", "url": "https://github.com/elastic/elasticsearch/commit/81284822cc07e7b0c21807eca7da4c79e0962da0", "message": "Merge remote-tracking branch 'origin/master' into mapper/search-analyzers", "committedDate": "2020-06-28T11:23:42Z", "type": "commit"}, {"oid": "92b416fbe2d21cc78886ee7e083693a02e9ed480", "url": "https://github.com/elastic/elasticsearch/commit/92b416fbe2d21cc78886ee7e083693a02e9ed480", "message": "Merge remote-tracking branch 'origin/master' into mapper/search-analyzers", "committedDate": "2020-06-29T12:59:59Z", "type": "commit"}, {"oid": "93ea4a26b34d5c743532d5ba8a501f00542c5597", "url": "https://github.com/elastic/elasticsearch/commit/93ea4a26b34d5c743532d5ba8a501f00542c5597", "message": "tests", "committedDate": "2020-06-29T13:53:19Z", "type": "commit"}, {"oid": "ddfaeec9afdff0554db9158423d5d5336faca001", "url": "https://github.com/elastic/elasticsearch/commit/ddfaeec9afdff0554db9158423d5d5336faca001", "message": "tests", "committedDate": "2020-06-29T14:35:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzMTM1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447031352", "bodyText": "Could you comment on why you zapped these?", "author": "nik9000", "createdAt": "2020-06-29T14:51:09Z", "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java", "diffHunk": "@@ -669,21 +669,6 @@ public void testMatchPhrase() throws IOException {\n             assertThat(actual, equalTo(expected));\n         }\n \n-        // todo are these queries generated for the prefix field right?\n-        {", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyMzMxNw==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447523317", "bodyText": "The answer to the TODO is 'no' - previously it was working 'accidentally' because if you set a search analyzer but not a search quote analyzer, then asking for the quote analyzer would fall back to the search analyzer.  However, queries against the prefix subfield should always be term queries (that's what the prefix subfield is for, converting prefixes to terms), and so the correct thing to do here is throw an exception.  Possibly it should be an assertion rather than an exception though?", "author": "romseygeek", "createdAt": "2020-06-30T08:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzMTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NjY0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447566642", "bodyText": "Turns out adding an assertion just means we assert false and then throw an IllegalArgumentException which seems a bit pointless.", "author": "romseygeek", "createdAt": "2020-06-30T10:04:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzMTM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzNTc3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447035776", "bodyText": "If you are adding parameters like this you may as well run them through the formatter to save some diff when we apply it to everything one day.", "author": "nik9000", "createdAt": "2020-06-29T14:56:57Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "diffHunk": "@@ -193,12 +194,17 @@ private NamedAnalyzer getNamedAnalyzer(ParserContext parserContext, String name)\n         private boolean preservePositionIncrements = Defaults.DEFAULT_POSITION_INCREMENTS;\n         private ContextMappings contextMappings = null;\n \n-        public CompletionFieldType(String name, FieldType luceneFieldType, Map<String, String> meta) {\n-            super(name, true, false, new TextSearchInfo(luceneFieldType, null), meta);\n+        public CompletionFieldType(String name, FieldType luceneFieldType,", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MTI1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447041251", "bodyText": "Will this change the behavior when includeDefaults is true and there isn't a search_analyzer? I'm not familiar enough with the default values of everything to know. I think it is a least worth a comment about it here.", "author": "nik9000", "createdAt": "2020-06-29T15:04:32Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java", "diffHunk": "@@ -420,7 +420,7 @@ protected void doXContentBody(XContentBuilder builder, boolean includeDefaults,\n     }\n \n     protected final void doXContentAnalyzers(XContentBuilder builder, boolean includeDefaults) throws IOException {\n-        if (fieldType.tokenized() == false) {\n+        if (fieldType.tokenized() == false || fieldType().getTextSearchInfo().getSearchAnalyzer() == null) {", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNTAwMA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447525000", "bodyText": "It shouldn't do, because doXContentAnalyzers is only called from text-based field mappers, which ought to always have analyzers configured (if nothing is specified in config, then we'll end up with the default).  This should probably be an assertion again though.", "author": "romseygeek", "createdAt": "2020-06-30T08:57:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU5NTM0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447595342", "bodyText": "Turns out this is incorrect - it can return null here, in which case we need to use the default.  Which is all a bit of a pain, but will be cleaned up when we move mapper definitions to the Parametrized system.", "author": "romseygeek", "createdAt": "2020-06-30T10:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MTI1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MzU1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447043557", "bodyText": "Should TestSearchInfo be in equals and hashCode?", "author": "nik9000", "createdAt": "2020-06-29T15:07:38Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -119,15 +115,13 @@ public boolean equals(Object o) {\n             docValues == fieldType.docValues &&\n             Objects.equals(name, fieldType.name) &&\n             Objects.equals(indexAnalyzer, fieldType.indexAnalyzer) &&\n-            Objects.equals(searchAnalyzer, fieldType.searchAnalyzer) &&\n-            Objects.equals(searchQuoteAnalyzer(), fieldType.searchQuoteAnalyzer()) &&\n             Objects.equals(eagerGlobalOrdinals, fieldType.eagerGlobalOrdinals) &&\n             Objects.equals(meta, fieldType.meta);", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNjEyNw==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447526127", "bodyText": "equals and hashCode on MappedFieldType are basically useless now.  Previously we used them to check that fields with the same name defined on different types within a single index were identical, but we only have one type per index and this check doesn't exist any more since #58162 .  I'll open a separate issue to remove them.", "author": "romseygeek", "createdAt": "2020-06-30T08:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MzU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NTgzMA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447045830", "bodyText": "Should we be able to change the search_analyzer like this?", "author": "nik9000", "createdAt": "2020-06-29T15:10:49Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "diffHunk": "@@ -439,7 +426,6 @@ protected void mergeOptions(FieldMapper other, List<String> conflicts) {\n         }\n         this.ignoreAbove = k.ignoreAbove;\n         this.splitQueriesOnWhitespace = k.splitQueriesOnWhitespace;\n-        this.fieldType().setSearchAnalyzer(k.fieldType().searchAnalyzer());", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMDM2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447530362", "bodyText": "You can still update the search_analyzer - the MappedFieldType of the merged mapper is taken directly from the update, which includes TextSearchInfo and hence the new search analyzer.", "author": "romseygeek", "createdAt": "2020-06-30T09:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NTgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NzQwMw==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447047403", "bodyText": "I generally feat protected mutable variables. What's up with this?", "author": "nik9000", "createdAt": "2020-06-29T15:13:02Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -129,7 +130,7 @@\n         private double fielddataMinFreq = Defaults.FIELDDATA_MIN_FREQUENCY;\n         private double fielddataMaxFreq = Defaults.FIELDDATA_MAX_FREQUENCY;\n         private int fielddataMinSegSize = Defaults.FIELDDATA_MIN_SEGMENT_SIZE;\n-        private SimilarityProvider similarity;\n+        protected SimilarityProvider similarity;", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0ODExOA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447048118", "bodyText": "I get that this is the builder, but do we plan to extend it or something? Everything else manages to be private which makes me less nervous.", "author": "nik9000", "createdAt": "2020-06-29T15:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NzQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMTU2NA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447531564", "bodyText": "It's extended by the AnnotatedTextFieldMapper and used there.", "author": "romseygeek", "createdAt": "2020-06-30T09:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NzQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0ODU4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447048582", "bodyText": "Probably worth javadoc on this one too.", "author": "nik9000", "createdAt": "2020-06-29T15:14:43Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/TextSearchInfo.java", "diffHunk": "@@ -40,15 +42,22 @@\n      *\n      * Note that the results of {@link #isStored()} for this may not be accurate\n      */\n-    public static final TextSearchInfo SIMPLE_MATCH_ONLY = new TextSearchInfo(SIMPLE_MATCH_ONLY_FIELD_TYPE, null);\n+    public static final TextSearchInfo SIMPLE_MATCH_ONLY\n+        = new TextSearchInfo(SIMPLE_MATCH_ONLY_FIELD_TYPE, null, Lucene.KEYWORD_ANALYZER, Lucene.KEYWORD_ANALYZER);\n+\n+    public static final TextSearchInfo WHITESPACE_MATCH_ONLY", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MDAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447050001", "bodyText": "I think we used to be able to change these.", "author": "nik9000", "createdAt": "2020-06-29T15:16:39Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java", "diffHunk": "@@ -55,28 +52,6 @@\n \n public class KeywordFieldTypeTests extends FieldTypeTestCase<KeywordFieldType> {\n \n-    @Before\n-    public void addModifiers() {\n-        addModifier(t -> {", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMjM3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447532372", "bodyText": "yeah, these Modifier tests are basically useless now", "author": "romseygeek", "createdAt": "2020-06-30T09:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MDAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MTQ5OA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447051498", "bodyText": "Nice to see that gone!", "author": "nik9000", "createdAt": "2020-06-29T15:18:39Z", "path": "server/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java", "diffHunk": "@@ -161,19 +162,10 @@ public void testBuild() throws IOException {\n                     indexSettings);\n             MapperService mapperService = mock(MapperService.class);\n             ScriptService scriptService = mock(ScriptService.class);\n-            MappedFieldType fieldType = mockFieldType(suggestionBuilder.field());\n             boolean fieldTypeSearchAnalyzerSet = randomBoolean();\n-            if (fieldTypeSearchAnalyzerSet) {", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MjM2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447052365", "bodyText": "Should we still test these on string fields?", "author": "nik9000", "createdAt": "2020-06-29T15:19:54Z", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -51,26 +48,6 @@\n             copy.setBoost(t.boost() + 1);\n             return (T) copy;\n         },\n-        t -> {", "originalCommit": "ddfaeec9afdff0554db9158423d5d5336faca001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMjkyMA==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447532920", "bodyText": "actually yes, these should be moved to the relevent FieldMapper tests", "author": "romseygeek", "createdAt": "2020-06-30T09:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MjM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2MjAxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58639#discussion_r447562019", "bodyText": "ah, they're already tested in FieldMapperTestCase.", "author": "romseygeek", "createdAt": "2020-06-30T09:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MjM2NQ=="}], "type": "inlineReview"}, {"oid": "496ab61b7d13677e43e87658ae034b8daf4ffe50", "url": "https://github.com/elastic/elasticsearch/commit/496ab61b7d13677e43e87658ae034b8daf4ffe50", "message": "feedback", "committedDate": "2020-06-30T10:06:14Z", "type": "commit"}, {"oid": "ba5c9ea90f9bf026e17a1db01532f300a0204652", "url": "https://github.com/elastic/elasticsearch/commit/ba5c9ea90f9bf026e17a1db01532f300a0204652", "message": "Merge remote-tracking branch 'origin/master' into mapper/search-analyzers", "committedDate": "2020-06-30T10:07:39Z", "type": "commit"}, {"oid": "f572c5f4e4aa90e6fe7409fd3e05030a20b2021f", "url": "https://github.com/elastic/elasticsearch/commit/f572c5f4e4aa90e6fe7409fd3e05030a20b2021f", "message": "default searchanalyzer", "committedDate": "2020-06-30T10:58:07Z", "type": "commit"}, {"oid": "8377419f1ee3b3c300b60bdaf05ce6721bdf37e8", "url": "https://github.com/elastic/elasticsearch/commit/8377419f1ee3b3c300b60bdaf05ce6721bdf37e8", "message": "Merge branch 'master' into mapper/search-analyzers", "committedDate": "2020-07-01T10:06:01Z", "type": "commit"}]}