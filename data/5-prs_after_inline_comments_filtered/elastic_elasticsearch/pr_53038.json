{"pr_number": 53038, "pr_title": "Add a VSConfig resolver for aggregations not using the registry", "pr_createdAt": "2020-03-02T23:06:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53038", "timeline": [{"oid": "e460cb240b524f8482c008d955f937bc869eff37", "url": "https://github.com/elastic/elasticsearch/commit/e460cb240b524f8482c008d955f937bc869eff37", "message": "make field to VST function a parameter", "committedDate": "2020-03-02T22:05:53Z", "type": "commit"}, {"oid": "fcf649a16033e4cd4a9cd90e7eedcb3c37dd719e", "url": "https://github.com/elastic/elasticsearch/commit/fcf649a16033e4cd4a9cd90e7eedcb3c37dd719e", "message": "Put aggs we don't intend to wire up on the legacy resolver", "committedDate": "2020-03-02T22:56:35Z", "type": "commit"}, {"oid": "11f2ce6adc9a0e093e938683e6692cf1277f1d3a", "url": "https://github.com/elastic/elasticsearch/commit/11f2ce6adc9a0e093e938683e6692cf1277f1d3a", "message": "Merge branch 'feature/extensible-values-source' into vs-refactor-legacy-resolve", "committedDate": "2020-03-03T19:54:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyODEwMg==", "url": "https://github.com/elastic/elasticsearch/pull/53038#discussion_r387328102", "bodyText": "Should this be private, since it uses a private interface (FieldResolver) and looks to be an internal thing anyway?", "author": "polyfractal", "createdAt": "2020-03-03T22:17:00Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -61,6 +65,50 @@ public static ValuesSourceConfig resolve(QueryShardContext context,\n                                              String format,\n                                              ValuesSourceType defaultValueSourceType,\n                                              String aggregationName) {\n+\n+        return internalResolve(context, userValueTypeHint, field, script, missing, timeZone, format, defaultValueSourceType,\n+            aggregationName, ValuesSourceConfig::getMappingFromRegistry);\n+    }\n+\n+    /**\n+     * AKA legacy resolve.  This method should be called by aggregations not supported by the {@link ValuesSourceRegistry}, to use the\n+     * pre-registry logic to decide on the {@link ValuesSourceType}.  New aggregations which extend from\n+     * {@link ValuesSourceAggregationBuilder} should not use this method, preferring {@link ValuesSourceConfig#resolve} instead.\n+     *\n+     * @param context - the query context\n+     * @param userValueTypeHint - User specified value type; used for missing values and scripts\n+     * @param field - The field being aggregated over.  At least one of field and script must not be null\n+     * @param script - The script the user specified.  At least one of field and script must not be null\n+     * @param missing - A user specified value to apply when the field is missing.  Should be of type userValueTypeHint\n+     * @param timeZone - Used to generate a format for dates\n+     * @param format - The format string to apply to this field.  Confusingly, this is used for input parsing as well as output formatting\n+     *               See https://github.com/elastic/elasticsearch/issues/47469\n+     * @param defaultValueSourceType - per-aggregation {@link ValuesSource} of last resort.\n+     * @return - An initialized {@link ValuesSourceConfig} that will yield the appropriate {@link ValuesSourceType}\n+     */\n+    public static ValuesSourceConfig resolveUnregistered(QueryShardContext context,\n+                                                         ValueType userValueTypeHint,\n+                                                         String field,\n+                                                         Script script,\n+                                                         Object missing,\n+                                                         ZoneId timeZone,\n+                                                         String format,\n+                                                         ValuesSourceType defaultValueSourceType) {\n+        return internalResolve(context, userValueTypeHint, field, script, missing, timeZone, format, defaultValueSourceType, null,\n+            ValuesSourceConfig::getLegacyMapping);\n+    }\n+\n+    public static ValuesSourceConfig internalResolve(QueryShardContext context,", "originalCommit": "11f2ce6adc9a0e093e938683e6692cf1277f1d3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcxNDUzNg==", "url": "https://github.com/elastic/elasticsearch/pull/53038#discussion_r387714536", "bodyText": "yes, yes it should.  Will fix before merging.  Thanks!", "author": "not-napoleon", "createdAt": "2020-03-04T14:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyODEwMg=="}], "type": "inlineReview"}, {"oid": "bd624dcd1b7dba949fef9cdeea3a7075c7c025e1", "url": "https://github.com/elastic/elasticsearch/commit/bd624dcd1b7dba949fef9cdeea3a7075c7c025e1", "message": "public -> private for the internal constructor", "committedDate": "2020-03-04T15:09:55Z", "type": "commit"}]}