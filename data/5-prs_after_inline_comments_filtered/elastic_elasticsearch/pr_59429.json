{"pr_number": 59429, "pr_title": "Convert DateFieldMapper to parametrized format", "pr_createdAt": "2020-07-13T15:10:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59429", "timeline": [{"oid": "bf7219715dfdc9f8a2f29c184546a50627a21027", "url": "https://github.com/elastic/elasticsearch/commit/bf7219715dfdc9f8a2f29c184546a50627a21027", "message": "Convert DateFieldMapper to parametrized format", "committedDate": "2020-07-13T12:06:37Z", "type": "commit"}, {"oid": "d765b18ee8b537391af68dfd7e36c7f273cc343d", "url": "https://github.com/elastic/elasticsearch/commit/d765b18ee8b537391af68dfd7e36c7f273cc343d", "message": "Merge remote-tracking branch 'origin/master' into mapper/date-mergebuilder", "committedDate": "2020-07-13T15:07:40Z", "type": "commit"}, {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "url": "https://github.com/elastic/elasticsearch/commit/88821ada4b41e5c27e418148d7f92bbe15c4f525", "message": "precommit", "committedDate": "2020-07-13T15:24:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MDcxNw==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453840717", "bodyText": "I'd prefer to drop these if we can manage it. Or to rename it to public static Builder millisecondResolution(String name) or something.", "author": "nik9000", "createdAt": "2020-07-13T18:17:45Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -178,79 +159,64 @@ public static Resolution ofOrdinal(int ord) {\n         }\n     }\n \n-    public static class Builder extends FieldMapper.Builder<Builder> {\n-\n-        private Boolean ignoreMalformed;\n-        private Explicit<String> format = new Explicit<>(DEFAULT_DATE_TIME_FORMATTER.pattern(), false);\n-        private Locale locale;\n-        private Resolution resolution = Resolution.MILLISECONDS;\n-        String nullValue;\n+    private static DateFieldMapper toType(FieldMapper in) {\n+        return (DateFieldMapper) in;\n+    }\n \n-        public Builder(String name) {\n-            super(name, Defaults.FIELD_TYPE);\n-            builder = this;\n-            locale = Locale.ROOT;\n-        }\n+    public static class Builder extends ParametrizedFieldMapper.Builder {\n \n-        public Builder ignoreMalformed(boolean ignoreMalformed) {\n-            this.ignoreMalformed = ignoreMalformed;\n-            return builder;\n-        }\n+        private final Parameter<Boolean> index = Parameter.indexParam(m -> toType(m).indexed, true);\n+        private final Parameter<Boolean> docValues = Parameter.docValuesParam(m -> toType(m).hasDocValues, true);\n+        private final Parameter<Boolean> store = Parameter.storeParam(m -> toType(m).store, false);\n \n-        protected Explicit<Boolean> ignoreMalformed(BuilderContext context) {\n-            if (ignoreMalformed != null) {\n-                return new Explicit<>(ignoreMalformed, true);\n-            }\n-            if (context.indexSettings() != null) {\n-                return new Explicit<>(IGNORE_MALFORMED_SETTING.get(context.indexSettings()), false);\n-            }\n-            return Defaults.IGNORE_MALFORMED;\n-        }\n+        private final Parameter<Float> boost = Parameter.boostParam();\n+        private final Parameter<Map<String, String>> meta = Parameter.metaParam();\n \n-        public Builder locale(Locale locale) {\n-            this.locale = locale;\n-            return this;\n-        }\n+        private final Parameter<String> format\n+            = Parameter.stringParam(\"format\", false, m -> toType(m).format, DEFAULT_DATE_TIME_FORMATTER.pattern());\n+        private final Parameter<Locale> locale = new Parameter<>(\"locale\", false, Locale.ROOT,\n+            (n, c, o) -> LocaleUtils.parse(o.toString()), m -> toType(m).locale);\n \n-        public Builder nullValue(String nullValue) {\n-            this.nullValue = nullValue;\n-            return this;\n-        }\n+        private final Parameter<String> nullValue\n+            = Parameter.stringParam(\"null_value\", false, m -> toType(m).nullValueAsString, null);\n+        private final Parameter<Boolean> ignoreMalformed;\n \n-        public Locale locale() {\n-            return locale;\n-        }\n-\n-        public String format() {\n-            return format.value();\n-        }\n-\n-        public Builder format(String format) {\n-            this.format = new Explicit<>(format, true);\n-            return this;\n-        }\n+        private final Resolution resolution;\n \n-        public Builder withResolution(Resolution resolution) {\n+        public Builder(String name, Resolution resolution, DateFormatter dateFormatter, boolean ignoreMalformedByDefault) {\n+            super(name);\n             this.resolution = resolution;\n-            return this;\n+            this.ignoreMalformed\n+                = Parameter.boolParam(\"ignore_malformed\", true, m -> toType(m).ignoreMalformed, ignoreMalformedByDefault);\n+            if (dateFormatter != null) {\n+                this.format.setValue(dateFormatter.pattern());\n+                this.locale.setValue(dateFormatter.locale());\n+            }\n         }\n \n-        public boolean isFormatterSet() {\n-            return format.explicit();\n+        // for testing\n+        public Builder(String name) {", "originalCommit": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTY2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453841662", "bodyText": "Do you think it'd be cleaner to use the builder to get these in tests?", "author": "nik9000", "createdAt": "2020-07-13T18:19:28Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -311,6 +254,14 @@ public DateFieldType(String name) {\n             this(name, true, true, DEFAULT_DATE_TIME_FORMATTER, Resolution.MILLISECONDS, Collections.emptyMap());\n         }\n \n+        public DateFieldType(String name, DateFormatter dateFormatter) {", "originalCommit": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0ODM1NA==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r454948354", "bodyText": "Builders give us field mappers though, not field types, so it feels like an extra unnecessary step.", "author": "romseygeek", "createdAt": "2020-07-15T10:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTY2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI2MzEwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r455263108", "bodyText": "Yeah. I can see that. I'm just not a big fan of having a bunch of ctors, especially when we have a fancy builder system already that makes it super clear what you are doing. Oh well. Its cool.", "author": "nik9000", "createdAt": "2020-07-15T18:39:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTY2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MzM0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453843346", "bodyText": "\u2764\ufe0f", "author": "nik9000", "createdAt": "2020-07-13T18:22:25Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -681,17 +679,15 @@ private static void parseNullValue(ParseContext context, ObjectMapper parentMapp\n                         // failure to parse this, continue\n                         continue;\n                     }\n-                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);\n+                    Mapper.Builder builder\n+                        = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE, dateTimeFormatter);\n                     if (builder == null) {\n-                        builder = newDateBuilder(currentFieldName, dateTimeFormatter);\n-                    }\n-                    if (builder instanceof DateFieldMapper.Builder) {\n-                        DateFieldMapper.Builder dateBuilder = (DateFieldMapper.Builder) builder;\n-                        if (dateBuilder.isFormatterSet() == false) {", "originalCommit": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0NTgyMA==", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453845820", "bodyText": "Probably worth javadoc - this is the format used for dynamic date detection and the default date format for date fields that don't have one set. Right?", "author": "nik9000", "createdAt": "2020-07-13T18:26:43Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/Mapper.java", "diffHunk": "@@ -122,6 +129,14 @@ public Version indexVersionCreated() {\n                 return queryShardContextSupplier;\n             }\n \n+            public DateFormatter getDateFormatter() {", "originalCommit": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ff06a3f4e074490afeb83251181e88a72d6da2c9", "url": "https://github.com/elastic/elasticsearch/commit/ff06a3f4e074490afeb83251181e88a72d6da2c9", "message": "Merge remote-tracking branch 'origin/master' into mapper/date-mergebuilder", "committedDate": "2020-07-15T09:16:14Z", "type": "commit"}, {"oid": "1ff6504640fb0eac396fa36aebe65aed2582d5bc", "url": "https://github.com/elastic/elasticsearch/commit/1ff6504640fb0eac396fa36aebe65aed2582d5bc", "message": "feedback", "committedDate": "2020-07-15T10:20:13Z", "type": "commit"}]}