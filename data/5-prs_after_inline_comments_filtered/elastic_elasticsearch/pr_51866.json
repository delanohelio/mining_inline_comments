{"pr_number": 51866, "pr_title": "Add stats for time spent fetching data while searching snapshots", "pr_createdAt": "2020-02-04T14:19:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51866", "timeline": [{"oid": "48e2d1af009e8e84b5f38e700cb736435fe52f96", "url": "https://github.com/elastic/elasticsearch/commit/48e2d1af009e8e84b5f38e700cb736435fe52f96", "message": "Add stats for fetch speed as a function of size\n\nThis commit builds on #51637, adding tracking of the total time spent fetching\ndata from the blob store and a linear regression model for these fetches.", "committedDate": "2020-02-04T14:15:17Z", "type": "commit"}, {"oid": "5870d96fc3eb360fab738af58758305689bf8233", "url": "https://github.com/elastic/elasticsearch/commit/5870d96fc3eb360fab738af58758305689bf8233", "message": "Merge branch 'feature/searchable-snapshots' into 2020-02-04-searchable-snapshots-track-time-spent-fetching-from-blob-store", "committedDate": "2020-02-24T10:16:33Z", "type": "commit"}, {"oid": "906a39e8430d7fd057bf96254f951e64702123d2", "url": "https://github.com/elastic/elasticsearch/commit/906a39e8430d7fd057bf96254f951e64702123d2", "message": "Remove linear model", "committedDate": "2020-02-24T10:30:35Z", "type": "commit"}, {"oid": "86e4b97632b25d23b1a25c735cedba420b6a36bb", "url": "https://github.com/elastic/elasticsearch/commit/86e4b97632b25d23b1a25c735cedba420b6a36bb", "message": "Rename", "committedDate": "2020-02-24T10:52:17Z", "type": "commit"}, {"oid": "b7db2ef7af73136035621d10bd6fb141ddf88c80", "url": "https://github.com/elastic/elasticsearch/commit/b7db2ef7af73136035621d10bd6fb141ddf88c80", "message": "Use System::nanoTime since threadpool's time is too coarse", "committedDate": "2020-02-24T10:53:29Z", "type": "commit"}, {"oid": "dbc18a78a26fe86b903814534bd604bab9c3f58f", "url": "https://github.com/elastic/elasticsearch/commit/dbc18a78a26fe86b903814534bd604bab9c3f58f", "message": "Unnecessary test case", "committedDate": "2020-02-24T10:55:03Z", "type": "commit"}, {"oid": "d2246193c61941acab537fc22989105a1ccebe41", "url": "https://github.com/elastic/elasticsearch/commit/d2246193c61941acab537fc22989105a1ccebe41", "message": "inline test utilities", "committedDate": "2020-02-24T10:57:57Z", "type": "commit"}, {"oid": "e4c2a5d17160d7b753351bcf468520dba232d01c", "url": "https://github.com/elastic/elasticsearch/commit/e4c2a5d17160d7b753351bcf468520dba232d01c", "message": "Tidy", "committedDate": "2020-02-24T10:59:15Z", "type": "commit"}, {"oid": "e634b7890fb5276e2c30d816793359104ffa9295", "url": "https://github.com/elastic/elasticsearch/commit/e634b7890fb5276e2c30d816793359104ffa9295", "message": "Add stats", "committedDate": "2020-02-24T11:59:10Z", "type": "commit"}, {"oid": "95a86e707e034cdfd38df1825bcc2631b8fddfc9", "url": "https://github.com/elastic/elasticsearch/commit/95a86e707e034cdfd38df1825bcc2631b8fddfc9", "message": "Whitespace", "committedDate": "2020-02-24T12:05:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNzEyMA==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383227120", "bodyText": "Using System::nanoTime since we need finer resolution than ThreadPool::relativeTimeInNanos offers.", "author": "DaveCTurner", "createdAt": "2020-02-24T12:03:51Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -106,7 +106,7 @@ public void onRepositoriesModule(RepositoriesModule repositoriesModule) {\n     @Override\n     public Map<String, DirectoryFactory> getDirectoryFactories() {\n         return Map.of(SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY,\n-            SearchableSnapshotRepository.newDirectoryFactory(repositoriesService::get, cacheService::get));\n+            SearchableSnapshotRepository.newDirectoryFactory(repositoriesService::get, cacheService::get, System::nanoTime));", "originalCommit": "e634b7890fb5276e2c30d816793359104ffa9295", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8edbdf64482ce0c415ab8d47779bbedc722c57a5", "url": "https://github.com/elastic/elasticsearch/commit/8edbdf64482ce0c415ab8d47779bbedc722c57a5", "message": "ZLong", "committedDate": "2020-02-24T12:20:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1MjQxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383252419", "bodyText": "builder.timeField(String, String, long) does not produce what we want here?", "author": "tlrx", "createdAt": "2020-02-24T13:04:43Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotShardStats.java", "diffHunk": "@@ -395,4 +396,55 @@ public int hashCode() {\n             return Objects.hash(count, total, min, max);\n         }\n     }\n+\n+    public static class TimedCounter extends Counter {\n+\n+        private final long totalNanoseconds;\n+\n+        public TimedCounter(long count, long total, long min, long max, long totalNanoseconds) {\n+            super(count, total, min, max);\n+            this.totalNanoseconds = totalNanoseconds;\n+        }\n+\n+        TimedCounter(StreamInput in) throws IOException {\n+            super(in);\n+            totalNanoseconds = in.readZLong();\n+        }\n+\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+            out.writeZLong(totalNanoseconds);\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+            builder.startObject();\n+            {\n+                builder.field(\"count\", getCount());\n+                builder.field(\"sum\", getTotal());\n+                builder.field(\"min\", getMin());\n+                builder.field(\"max\", getMax());\n+                builder.field(\"time\", TimeValue.timeValueNanos(totalNanoseconds));", "originalCommit": "8edbdf64482ce0c415ab8d47779bbedc722c57a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjYxNA==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383272614", "bodyText": "No, I don't think so, this formats an absolute time in milliseconds-since-the-unix-epoch as a date, whereas here we have a relative time in nanoseconds.\nIt did, however, highlight that I should respect the ?human parameter -- see 5b26f66.", "author": "DaveCTurner", "createdAt": "2020-02-24T13:46:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1MjQxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3OTM0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383279349", "bodyText": "Right, I just checked the code. Thanks for supporting the human readable parameter.", "author": "tlrx", "createdAt": "2020-02-24T13:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1MjQxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NDk5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383254996", "bodyText": "Interestingly, this captures the start time after the initial blob read request has been made. I'm wondering if we should capture it before the openInput() which sends the underlying S3 request and update the stats in a finally block?", "author": "tlrx", "createdAt": "2020-02-24T13:10:34Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java", "diffHunk": "@@ -274,6 +278,7 @@ void writeCacheFile(FileChannel fc, long start, long end) throws IOException {\n             int bytesCopied = 0;\n             try (IndexInput input = in.openInput(cacheFileReference.getFileName(), ioContext)) {\n                 stats.incrementInnerOpenCount();\n+                final long startTimeNanos = currentTimeNanosSupplier.getAsLong();", "originalCommit": "8edbdf64482ce0c415ab8d47779bbedc722c57a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NTg1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383275853", "bodyText": "I'm perhaps missing something here, because I think that we don't interact with the blob store until the first readBytes call. We certainly shouldn't start reading before we've called seek since seeks mean we must discard some work. Are you sure we do anything worth timing in openInput()?", "author": "DaveCTurner", "createdAt": "2020-02-24T13:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NzcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383277722", "bodyText": "Oh no you're perfectly right, I confused the openInput() method with the readBlob() \ud83e\udd26\u200d\u2642\ufe0f  Sorry for the noise.", "author": "tlrx", "createdAt": "2020-02-24T13:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NDk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NjcxNA==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383256714", "bodyText": "Maybe define an empty innerToXContent(XContentBuilder, Params) to the Counter class and overrides it here to only add the time field? That's what we do for other XContent implementations.", "author": "tlrx", "createdAt": "2020-02-24T13:13:28Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotShardStats.java", "diffHunk": "@@ -395,4 +396,55 @@ public int hashCode() {\n             return Objects.hash(count, total, min, max);\n         }\n     }\n+\n+    public static class TimedCounter extends Counter {\n+\n+        private final long totalNanoseconds;\n+\n+        public TimedCounter(long count, long total, long min, long max, long totalNanoseconds) {\n+            super(count, total, min, max);\n+            this.totalNanoseconds = totalNanoseconds;\n+        }\n+\n+        TimedCounter(StreamInput in) throws IOException {\n+            super(in);\n+            totalNanoseconds = in.readZLong();\n+        }\n+\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+            out.writeZLong(totalNanoseconds);\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {", "originalCommit": "8edbdf64482ce0c415ab8d47779bbedc722c57a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NTk2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51866#discussion_r383275962", "bodyText": "Nice, thanks for the tip. Done in 5b26f66.", "author": "DaveCTurner", "createdAt": "2020-02-24T13:52:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NjcxNA=="}], "type": "inlineReview"}, {"oid": "5b26f66ad3bd54d4f2c43febaf6be448ca0d4b5f", "url": "https://github.com/elastic/elasticsearch/commit/5b26f66ad3bd54d4f2c43febaf6be448ca0d4b5f", "message": "Neater subclassing and human-only output", "committedDate": "2020-02-24T13:43:18Z", "type": "commit"}]}