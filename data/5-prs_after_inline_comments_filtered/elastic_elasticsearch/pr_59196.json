{"pr_number": 59196, "pr_title": "EQL: Fix bug in skipping window", "pr_createdAt": "2020-07-07T21:36:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59196", "timeline": [{"oid": "f64d29b329084511b5ddf390e88424e53cc115eb", "url": "https://github.com/elastic/elasticsearch/commit/f64d29b329084511b5ddf390e88424e53cc115eb", "message": "EQL: Polishing\n\nFix NPE when closing a sequence group\nIncrease randomization in testing\nMake maxspan inclusive (up to and equal to value vs just up to)", "committedDate": "2020-07-08T10:26:06Z", "type": "commit"}, {"oid": "8142fc383c7145250b765c15912ad1370d800bd5", "url": "https://github.com/elastic/elasticsearch/commit/8142fc383c7145250b765c15912ad1370d800bd5", "message": "Skip a window when a query returns no results, only if there are no\nin-flight matches on following queries\nImprove logging", "committedDate": "2020-07-08T10:26:06Z", "type": "commit"}, {"oid": "8142fc383c7145250b765c15912ad1370d800bd5", "url": "https://github.com/elastic/elasticsearch/commit/8142fc383c7145250b765c15912ad1370d800bd5", "message": "Skip a window when a query returns no results, only if there are no\nin-flight matches on following queries\nImprove logging", "committedDate": "2020-07-08T10:26:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0Nzg5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59196#discussion_r451447896", "bodyText": "@matriv Included your feedback from the previous PR.", "author": "costin", "createdAt": "2020-07-08T10:40:22Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchRequest.java", "diffHunk": "@@ -191,8 +191,8 @@ public int fetchSize() {\n         return this.fetchSize;\n     }\n \n-    public EqlSearchRequest fetchSize(int size) {\n-        this.fetchSize = size;\n+    public EqlSearchRequest fetchSize(int fetchSize) {", "originalCommit": "8142fc383c7145250b765c15912ad1370d800bd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0ODIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/59196#discussion_r451448200", "bodyText": "@matriv see this one as well. It unraveled a bug - when the fetchSize was 5, the results were different due to us skipping a window.", "author": "costin", "createdAt": "2020-07-08T10:41:00Z", "path": "x-pack/plugin/eql/qa/common/src/main/java/org/elasticsearch/test/eql/CommonEqlActionTestCase.java", "diffHunk": "@@ -146,7 +146,7 @@ protected EqlSearchResponse runQuery(String index, String query, boolean isCaseS\n         request.tiebreakerField(\"event.sequence\");\n         // some queries return more than 10 results\n         request.size(50);\n-        request.fetchSize(2);\n+        request.fetchSize(randomIntBetween(2, 50));", "originalCommit": "8142fc383c7145250b765c15912ad1370d800bd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0ODU2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59196#discussion_r451448561", "bodyText": "Made maxspan to be inclusive.", "author": "costin", "createdAt": "2020-07-08T10:41:40Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceStateMachine.java", "diffHunk": "@@ -82,19 +83,19 @@ public void match(int stage, SequenceKey key, Ordinal ordinal, SearchHit hit) {\n         Sequence sequence = before.v1();\n         // eliminate the match and all previous values from the frame\n         group.trim(before.v2() + 1);\n+\n+        // remove the frame and keys early (as the key space is large)\n+        if (group.isEmpty()) {\n+            stageToKeys.keys(previousStage).remove(key);\n+        }\n         \n         // check maxspan before continuing the sequence\n-        if (maxSpanInMillis > 0 && (ordinal.timestamp() - sequence.startTimestamp() >= maxSpanInMillis)) {\n+        if (maxSpanInMillis > 0 && (ordinal.timestamp() - sequence.startTimestamp() > maxSpanInMillis)) {", "originalCommit": "8142fc383c7145250b765c15912ad1370d800bd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0ODk2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59196#discussion_r451448964", "bodyText": "This turned out to be causing data skipping by ignoring potential matches for following stages.", "author": "costin", "createdAt": "2020-07-08T10:42:27Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceStateMachine.java", "diffHunk": "@@ -117,7 +118,27 @@ public boolean reachedLimit() {\n         return limitReached;\n     }\n \n+    /**\n+     * Checks whether the rest of the stages have in-flight data.\n+     * This method is called when a query returns no data meaning\n+     * sequences on previous stages cannot match this window (since there's no new data).\n+     * However sequences on higher stages can, hence this check to know whether\n+     * it's possible to advance the window early.\n+     */\n     public boolean hasCandidates(int stage) {\n-        return stage < completionStage && stageToKeys.keys(stage).isEmpty() == false;\n+        for (int i = stage; i < completionStage; i++) {", "originalCommit": "8142fc383c7145250b765c15912ad1370d800bd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}