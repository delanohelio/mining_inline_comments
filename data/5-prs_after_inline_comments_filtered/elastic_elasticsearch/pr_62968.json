{"pr_number": 62968, "pr_title": "Use services for archive and file operations in tasks", "pr_createdAt": "2020-09-28T16:35:26Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62968", "timeline": [{"oid": "f4eaa73247c43cf4b8f1da7911b35843b4849756", "url": "https://github.com/elastic/elasticsearch/commit/f4eaa73247c43cf4b8f1da7911b35843b4849756", "message": "Introduce FileSystemOperationsAware to avoid project references", "committedDate": "2020-09-29T11:35:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMDE1OA==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497110158", "bodyText": "This is psudo-internal. Can we rely on this?", "author": "mark-vieira", "createdAt": "2020-09-29T22:50:55Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchTestBasePlugin.java", "diffHunk": "@@ -38,6 +38,7 @@\n import java.util.Map;\n \n import static org.elasticsearch.gradle.util.GradleUtils.maybeConfigure;\n+import static org.gradle.util.GFileUtils.mkdirs;", "originalCommit": "51896a4cb6b75631d97fee78fb127b83e794cec0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMzMDc0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497330741", "bodyText": "let's do not. fixed.", "author": "breskeby", "createdAt": "2020-09-30T08:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMDE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMjU5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497112596", "bodyText": "Not really a \"marker\" interface if it defines methods. I'm not sure this provides a lot of benefit, as is. Perhaps we can have the interface define the injected method to be implemented by supporting types then provide default method impls that delegate to getFileSystemOperations()?", "author": "mark-vieira", "createdAt": "2020-09-29T22:54:08Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/FileSystemOperationsAware.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle;\n+\n+import org.gradle.api.tasks.WorkResult;\n+\n+/**\n+ * A marker interface for tasks signaling that they support basic file operations.\n+ * Methods will be added as needed.\n+ */\n+\n+public interface FileSystemOperationsAware {\n+    WorkResult delete(Object... objects);", "originalCommit": "51896a4cb6b75631d97fee78fb127b83e794cec0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMyNjYyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497326621", "bodyText": "My idea when introducing this was more to keep a common pattern for those methods defined by this interface. The injected methods are usually protected and I think we should keep it like that. interfaces do not support protected methods. Also e.g. in RestIntegTest we use the protected getFileSystemOperations() coming from Test so we cannot change its visibility.", "author": "breskeby", "createdAt": "2020-09-30T08:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMjU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMzc4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497113786", "bodyText": "Can't we inject this into the constructor as well? If so, doesn't that avoid having this weird exception throwing method implementation?", "author": "mark-vieira", "createdAt": "2020-09-29T22:55:39Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/LoggedExec.java", "diffHunk": "@@ -47,11 +50,16 @@\n  * A wrapper around gradle's Exec task to capture output and log on error.\n  */\n @SuppressWarnings(\"unchecked\")\n-public class LoggedExec extends Exec {\n+public class LoggedExec extends Exec implements FileSystemOperationsAware {\n \n     private static final Logger LOGGER = Logging.getLogger(LoggedExec.class);\n     private Consumer<Logger> outputLogger;\n \n+    @Inject\n+    protected FileSystemOperations getFileSystemOperations() {\n+        throw new UnsupportedOperationException();", "originalCommit": "51896a4cb6b75631d97fee78fb127b83e794cec0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NDI1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62968#discussion_r497294256", "bodyText": "done", "author": "breskeby", "createdAt": "2020-09-30T07:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExMzc4Ng=="}], "type": "inlineReview"}, {"oid": "2f9d12901de27a1f00ed35f979a954a95377c8b3", "url": "https://github.com/elastic/elasticsearch/commit/2f9d12901de27a1f00ed35f979a954a95377c8b3", "message": "Use services for archive and file operations in tasks", "committedDate": "2020-10-01T07:40:51Z", "type": "commit"}, {"oid": "bf076cf320b2393edb811d458d569e7f85ab177d", "url": "https://github.com/elastic/elasticsearch/commit/bf076cf320b2393edb811d458d569e7f85ab177d", "message": "Tiny formatting fix", "committedDate": "2020-10-01T07:40:52Z", "type": "commit"}, {"oid": "c35719ea263eacc231e707dc7619eb361b7e8eee", "url": "https://github.com/elastic/elasticsearch/commit/c35719ea263eacc231e707dc7619eb361b7e8eee", "message": "Introduce FileSystemOperationsAware to avoid project references", "committedDate": "2020-10-01T07:40:52Z", "type": "commit"}, {"oid": "23783865b77b9d7a4036320d34a43ad505f670e3", "url": "https://github.com/elastic/elasticsearch/commit/23783865b77b9d7a4036320d34a43ad505f670e3", "message": "Avoid project reference in task action", "committedDate": "2020-10-01T07:40:52Z", "type": "commit"}, {"oid": "df414adf6240f417716cd853a24b7b57a21a3597", "url": "https://github.com/elastic/elasticsearch/commit/df414adf6240f417716cd853a24b7b57a21a3597", "message": "Address review feedback\n\n- Use constructor injection were adequate\n- Do not rely on pseudo internal gradle api", "committedDate": "2020-10-01T07:40:52Z", "type": "commit"}, {"oid": "b491689776efaed8988df2335eb96a6b993f2660", "url": "https://github.com/elastic/elasticsearch/commit/b491689776efaed8988df2335eb96a6b993f2660", "message": "Fix some merge issues", "committedDate": "2020-10-01T07:57:11Z", "type": "commit"}, {"oid": "b491689776efaed8988df2335eb96a6b993f2660", "url": "https://github.com/elastic/elasticsearch/commit/b491689776efaed8988df2335eb96a6b993f2660", "message": "Fix some merge issues", "committedDate": "2020-10-01T07:57:11Z", "type": "forcePushed"}]}