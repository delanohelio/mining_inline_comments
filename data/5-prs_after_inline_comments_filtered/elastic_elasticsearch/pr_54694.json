{"pr_number": 54694, "pr_title": "Only allow retrieving a single index or component template", "pr_createdAt": "2020-04-02T23:17:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54694", "timeline": [{"oid": "986def0f21c916cd25372f5e5f1d9b4b2195b11c", "url": "https://github.com/elastic/elasticsearch/commit/986def0f21c916cd25372f5e5f1d9b4b2195b11c", "message": "Only allow retrieving a single index or component template\n\nThis changes the Index Template v2 APIs to only allow retrieving a single \"named\" entity, where the\nnamed entity can be nothing (return everything), a wildcard (return the ones that match), or the\nname of a template.\n\nRelates to #53101", "committedDate": "2020-04-02T22:56:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1ODIxNg==", "url": "https://github.com/elastic/elasticsearch/pull/54694#discussion_r402858216", "bodyText": "I think in case when the template is missing here (when asking for a specific template by name) we want to throw a resource not found exception. Like was done here: https://github.com/elastic/elasticsearch/pull/54530/files#diff-e753c14c84c5edb785bc197306e5a24fR180", "author": "martijnvg", "createdAt": "2020-04-03T09:00:11Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/template/get/TransportGetComponentTemplateAction.java", "diffHunk": "@@ -71,22 +71,21 @@ protected void masterOperation(Task task, GetComponentTemplateAction.Request req\n         Map<String, ComponentTemplate> allTemplates = state.metadata().componentTemplates();\n \n         // If we did not ask for a specific name, then we return all templates\n-        if (request.names().length == 0) {\n+        if (request.name() == null) {\n             listener.onResponse(new GetComponentTemplateAction.Response(allTemplates));\n             return;\n         }\n \n         final Map<String, ComponentTemplate> results = new HashMap<>();\n-        for (String name : request.names()) {\n-            if (Regex.isSimpleMatchPattern(name)) {\n-                for (Map.Entry<String, ComponentTemplate> entry : allTemplates.entrySet()) {\n-                    if (Regex.simpleMatch(name, entry.getKey())) {\n-                        results.put(entry.getKey(), entry.getValue());\n-                    }\n+        String name = request.name();\n+        if (Regex.isSimpleMatchPattern(name)) {\n+            for (Map.Entry<String, ComponentTemplate> entry : allTemplates.entrySet()) {\n+                if (Regex.simpleMatch(name, entry.getKey())) {\n+                    results.put(entry.getKey(), entry.getValue());\n                 }\n-            } else if (allTemplates.containsKey(name)) {\n-                results.put(name, allTemplates.get(name));\n             }\n+        } else if (allTemplates.containsKey(name)) {\n+            results.put(name, allTemplates.get(name));", "originalCommit": "986def0f21c916cd25372f5e5f1d9b4b2195b11c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1ODYxMg==", "url": "https://github.com/elastic/elasticsearch/pull/54694#discussion_r402858612", "bodyText": "Throw a resource not found exception if template does not exist?", "author": "martijnvg", "createdAt": "2020-04-03T09:00:38Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/template/get/TransportGetIndexTemplateV2Action.java", "diffHunk": "@@ -71,22 +71,21 @@ protected void masterOperation(Task task, GetIndexTemplateV2Action.Request reque\n         Map<String, IndexTemplateV2> allTemplates = state.metadata().templatesV2();\n \n         // If we did not ask for a specific name, then we return all templates\n-        if (request.names().length == 0) {\n+        if (request.name() == null) {\n             listener.onResponse(new GetIndexTemplateV2Action.Response(allTemplates));\n             return;\n         }\n \n         final Map<String, IndexTemplateV2> results = new HashMap<>();\n-        for (String name : request.names()) {\n-            if (Regex.isSimpleMatchPattern(name)) {\n-                for (Map.Entry<String, IndexTemplateV2> entry : allTemplates.entrySet()) {\n-                    if (Regex.simpleMatch(name, entry.getKey())) {\n-                        results.put(entry.getKey(), entry.getValue());\n-                    }\n+        String name = request.name();\n+        if (Regex.isSimpleMatchPattern(name)) {\n+            for (Map.Entry<String, IndexTemplateV2> entry : allTemplates.entrySet()) {\n+                if (Regex.simpleMatch(name, entry.getKey())) {\n+                    results.put(entry.getKey(), entry.getValue());\n                 }\n-            } else if (allTemplates.containsKey(name)) {\n-                results.put(name, allTemplates.get(name));\n             }\n+        } else if (allTemplates.containsKey(name)) {\n+            results.put(name, allTemplates.get(name));", "originalCommit": "986def0f21c916cd25372f5e5f1d9b4b2195b11c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f86999d8424602cf088ba9544026410f7e5561f9", "url": "https://github.com/elastic/elasticsearch/commit/f86999d8424602cf088ba9544026410f7e5561f9", "message": "Throw exception when resource is not found", "committedDate": "2020-04-03T20:39:05Z", "type": "commit"}, {"oid": "8f03b2eef0589aca50a36d5b6743a49a7ec9219e", "url": "https://github.com/elastic/elasticsearch/commit/8f03b2eef0589aca50a36d5b6743a49a7ec9219e", "message": "Merge branch 'master' into itv2-only-get-single-item", "committedDate": "2020-04-03T20:59:50Z", "type": "commit"}, {"oid": "0f717d93b2a155948b5f7c564f0af9f87ab2a606", "url": "https://github.com/elastic/elasticsearch/commit/0f717d93b2a155948b5f7c564f0af9f87ab2a606", "message": "Merge branch 'master' into itv2-only-get-single-item", "committedDate": "2020-04-07T04:04:33Z", "type": "commit"}]}