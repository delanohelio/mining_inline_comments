{"pr_number": 65331, "pr_title": "{S,E}QL: Fix optimization of `NotEquals` in conjunctions", "pr_createdAt": "2020-11-20T21:18:37Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65331", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNjI1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r528626251", "bodyText": "I'd add a simple numeric test in x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java to replicate and check the fix, as well as more accurately inspect the translation.\nIn that respect, not sure if this particular test would still be needed, but if you decide to keep it, I'd also add a comment on the condition that the value of negatedText fulfils as it's not obvious.\nAlso, the \"Bug\" in the title is not explanatory: either rename the test or add a reference.", "author": "bpintea", "createdAt": "2020-11-23T11:10:24Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "diffHunk": "@@ -2338,4 +2338,12 @@ public void testInInRangeValues() {\n         PhysicalPlan p = testContext.optimizeAndPlan(\"SELECT long FROM test WHERE long IN (1, 2, 3, \" + Long.MAX_VALUE + \", 5, 6, 7)\");\n         assertEquals(EsQueryExec.class, p.getClass());\n     }\n+    \n+    public void testCombineBinaryComparisonsBugKeyword() {", "originalCommit": "4629af6732aec5c5e86f3e7d87a34f3dbb86fe9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MzMxMw==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529583313", "bodyText": "Thanks for the comment. Cleaned up the draft, added additional test cases that were discovered by randomized tests (will add randomized tests in separate PR), added an integration test for this particular bug.", "author": "palesz", "createdAt": "2020-11-24T14:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNjI1MQ=="}], "type": "inlineReview"}, {"oid": "bb92e96d47a7b42939b60481caa794600039bc0f", "url": "https://github.com/elastic/elasticsearch/commit/bb92e96d47a7b42939b60481caa794600039bc0f", "message": "{S,E}QL: Fix incorrect folding of negations\n\n* Add missing `semanticEquals()` check to the CombineBinaryComparisons optimizer rule\n* Add single unit test that checks the reported bug\n\nMissing so far:\n* Additional tests covering additional types\n* Potentially randomized testing", "committedDate": "2020-11-24T01:58:57Z", "type": "commit"}, {"oid": "252ef12440898312eb09ece9362e377e3a8f9ba6", "url": "https://github.com/elastic/elasticsearch/commit/252ef12440898312eb09ece9362e377e3a8f9ba6", "message": "Cleanup and additional tests\n\n* Moved the tests cases to OptimizerRulesTests\n* Added additional test cases discovered by randomized tests", "committedDate": "2020-11-24T14:19:54Z", "type": "commit"}, {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "url": "https://github.com/elastic/elasticsearch/commit/7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "message": "Merge remote-tracking branch 'origin/master' into fix/65322", "committedDate": "2020-11-24T14:20:15Z", "type": "commit"}, {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "url": "https://github.com/elastic/elasticsearch/commit/7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "message": "Merge remote-tracking branch 'origin/master' into fix/65322", "committedDate": "2020-11-24T14:20:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MjkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529582938", "bodyText": "Use the method in TestUtils.", "author": "costin", "createdAt": "2020-11-24T14:24:04Z", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -135,7 +137,11 @@ private static FieldAttribute getFieldAttribute() {\n     }\n \n     private static FieldAttribute getFieldAttribute(String name) {\n-        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", INTEGER, emptyMap(), true));\n+        return getFieldAttribute(name, INTEGER);\n+    }\n+\n+    private static FieldAttribute getFieldAttribute(String name, DataType dataType) {\n+        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", dataType, emptyMap(), true));\n     }", "originalCommit": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cc2f5562a00914cafc64b38a237d117b0042cea8", "url": "https://github.com/elastic/elasticsearch/commit/cc2f5562a00914cafc64b38a237d117b0042cea8", "message": "Using method in TestUtils", "committedDate": "2020-11-24T14:25:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MzgyMA==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529583820", "bodyText": "Better naming - doubleOne, doubleTwo - oneDouble, anotherDouble, etc..", "author": "costin", "createdAt": "2020-11-24T14:25:13Z", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -1015,7 +1021,32 @@ public void testRangesOverlappingNoLowerBoundary() {\n         Expression exp = rule.rule(or);\n         assertEquals(r2, exp);\n     }\n+    \n+    public void testBinaryComparisonAndOutOfRangeNotEqualsDifferentFields() {\n+        FieldAttribute fDouble = getFieldAttribute(\"double\", DOUBLE);\n+        FieldAttribute fDouble2 = getFieldAttribute(\"double2\", DOUBLE);\n+        FieldAttribute fInteger = getFieldAttribute(\"int\", INTEGER);\n+        FieldAttribute fDatetime = getFieldAttribute(\"datetime\", INTEGER);\n+        FieldAttribute fKeyword = getFieldAttribute(\"keyword\", KEYWORD);\n+        FieldAttribute fKeyword2 = getFieldAttribute(\"keyword2\", KEYWORD);\n+        ZoneId zoneId = randomZone();", "originalCommit": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4NDQ1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529584457", "bodyText": "Extract the list outside the for.\nAlso use the methods in TestUtils to increase readability.", "author": "costin", "createdAt": "2020-11-24T14:26:01Z", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -1015,7 +1021,32 @@ public void testRangesOverlappingNoLowerBoundary() {\n         Expression exp = rule.rule(or);\n         assertEquals(r2, exp);\n     }\n+    \n+    public void testBinaryComparisonAndOutOfRangeNotEqualsDifferentFields() {\n+        FieldAttribute fDouble = getFieldAttribute(\"double\", DOUBLE);\n+        FieldAttribute fDouble2 = getFieldAttribute(\"double2\", DOUBLE);\n+        FieldAttribute fInteger = getFieldAttribute(\"int\", INTEGER);\n+        FieldAttribute fDatetime = getFieldAttribute(\"datetime\", INTEGER);\n+        FieldAttribute fKeyword = getFieldAttribute(\"keyword\", KEYWORD);\n+        FieldAttribute fKeyword2 = getFieldAttribute(\"keyword2\", KEYWORD);\n+        ZoneId zoneId = randomZone();\n \n+        for (And and : Arrays.asList(\n+            // double > 10 AND integer != -10\n+            new And(EMPTY, new GreaterThan(EMPTY, fDouble, L(10), zoneId), new NotEquals(EMPTY, fInteger, L(-10), zoneId)),\n+            // keyword > '5' AND keyword2 != '48'\n+            new And(EMPTY, new GreaterThan(EMPTY, fKeyword, L(\"5\"), zoneId), new NotEquals(EMPTY, fKeyword2, L(\"48\"), zoneId)),\n+            // keyword != '2021' AND datetime <= '2020-12-04T17:48:22.954240Z'\n+            new And(EMPTY, new NotEquals(EMPTY, fKeyword, L(\"2021\"), zoneId), \n+                new LessThanOrEqual(EMPTY, fDatetime, L(\"2020-12-04T17:48:22.954240Z\"), zoneId)),\n+            // double > 10.1 AND double2 != -10.1\n+            new And(EMPTY, new GreaterThan(EMPTY, fDouble, L(10.1d), zoneId), new NotEquals(EMPTY, fDouble2, L(-10.1d), zoneId))\n+        )) {", "originalCommit": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7631a28c9d1960955891c0a033a2347fb7a3176a", "url": "https://github.com/elastic/elasticsearch/commit/7631a28c9d1960955891c0a033a2347fb7a3176a", "message": "Cleanup", "committedDate": "2020-11-24T14:36:35Z", "type": "commit"}, {"oid": "d6b31bcde88072d1bc3523b4f403f21eca0177c3", "url": "https://github.com/elastic/elasticsearch/commit/d6b31bcde88072d1bc3523b4f403f21eca0177c3", "message": "Merge remote-tracking branch 'origin/master' into fix/65322", "committedDate": "2020-11-24T15:35:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MTM1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529651357", "bodyText": "Use TestUtils.fieldAttribute()", "author": "costin", "createdAt": "2020-11-24T15:39:40Z", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -140,7 +143,11 @@ private static FieldAttribute getFieldAttribute() {\n     }\n \n     private static FieldAttribute getFieldAttribute(String name) {\n-        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", INTEGER, emptyMap(), true));\n+        return getFieldAttribute(name, INTEGER);\n+    }\n+\n+    private static FieldAttribute getFieldAttribute(String name, DataType dataType) {", "originalCommit": "d6b31bcde88072d1bc3523b4f403f21eca0177c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f7bd1b81c31a850c7394e19bc72bcdb2d9b2f332", "url": "https://github.com/elastic/elasticsearch/commit/f7bd1b81c31a850c7394e19bc72bcdb2d9b2f332", "message": "merge fix", "committedDate": "2020-11-24T15:45:18Z", "type": "commit"}]}