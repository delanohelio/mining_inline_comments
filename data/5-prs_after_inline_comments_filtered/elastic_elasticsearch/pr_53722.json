{"pr_number": 53722, "pr_title": "Deprecate all variants of a ParseField with no replacement", "pr_createdAt": "2020-03-18T12:33:44Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53722", "timeline": [{"oid": "152dd9cfa4ac1fc8d69a2755e61bc7df7b652633", "url": "https://github.com/elastic/elasticsearch/commit/152dd9cfa4ac1fc8d69a2755e61bc7df7b652633", "message": "Make it possible to deprecate all variants of a ParseField with no replacement", "committedDate": "2020-03-18T12:28:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0Nzk2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53722#discussion_r394347966", "bodyText": "Would it be simpler to add something like:\nif (fullyDeprecated) {\n  deprecationHandler.usedDeprecatedField(fieldName);\n  return true;\n}\n\nabove this if statement?", "author": "nik9000", "createdAt": "2020-03-18T13:33:09Z", "path": "libs/x-content/src/main/java/org/elasticsearch/common/ParseField.java", "diffHunk": "@@ -108,15 +118,17 @@ public boolean match(String fieldName, DeprecationHandler deprecationHandler) {\n         Objects.requireNonNull(fieldName, \"fieldName cannot be null\");\n         // if this parse field has not been completely deprecated then try to\n         // match the preferred name\n-        if (allReplacedWith == null && fieldName.equals(name)) {\n+        if (fullyDeprecated == false && allReplacedWith == null && fieldName.equals(name)) {", "originalCommit": "152dd9cfa4ac1fc8d69a2755e61bc7df7b652633", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MTI0NA==", "url": "https://github.com/elastic/elasticsearch/pull/53722#discussion_r394351244", "bodyText": "We still need to check that one of the possible names matches so it's not quite as simple as that, unfortunately", "author": "romseygeek", "createdAt": "2020-03-18T13:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0Nzk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2OTI5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53722#discussion_r394369296", "bodyText": "Fair enough.", "author": "nik9000", "createdAt": "2020-03-18T14:03:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0Nzk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0ODA3NA==", "url": "https://github.com/elastic/elasticsearch/pull/53722#discussion_r394348074", "bodyText": "\ud83d\udc4d", "author": "nik9000", "createdAt": "2020-03-18T13:33:18Z", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/DeprecationHandler.java", "diffHunk": "@@ -41,6 +41,32 @@ public void usedDeprecatedName(String usedName, String modernName) {\n             throw new UnsupportedOperationException(\"deprecated fields not supported here but got [\"\n                 + usedName + \"] which has been replaced with [\" + modernName + \"]\");\n         }\n+\n+        @Override\n+        public void usedDeprecatedField(String usedName) {\n+            throw new UnsupportedOperationException(\"deprecated fields not supported here but got [\"\n+                + usedName + \"] which has been deprecated entirely\");\n+        }\n+    };\n+\n+    /**\n+     * Ignores all deprecations\n+     */\n+    DeprecationHandler IGNORE_DEPRECATIONS = new DeprecationHandler() {", "originalCommit": "152dd9cfa4ac1fc8d69a2755e61bc7df7b652633", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}