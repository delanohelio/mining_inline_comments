{"pr_number": 53730, "pr_title": "Save a little space in agg tree", "pr_createdAt": "2020-03-18T14:09:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53730", "timeline": [{"oid": "8552939d6971b2db945e81e21e81d8e6d7dad813", "url": "https://github.com/elastic/elasticsearch/commit/8552939d6971b2db945e81e21e81d8e6d7dad813", "message": "Save a little space in agg tree\n\nThis drop the \"top level\" pipeline aggregators from the aggregation\nresult tree which should save a little memory and a few serialization\nbytes. Perhaps more imporantly, this provides a mechanism by which we\ncan remove *all* pipelines from the aggregation result tree. This will\nsave quite a bit of space when pipelines are deep in the tree.\n\nSadly, doing this isn't simple because of backwards compatibility. Nodes\nbefore 7.7.0 *need* those pipelines. We provide them by setting passing\na `Supplier<PipelineTree>` into the root of the aggregation tree that we\nonly call if we need to serialize to a version before 7.7.0.\n\nThis solution works for cross cluster search because we always reduce\nthe aggregations in each remote cluster and then forward them back to\nthe coordinating node. Its quite possible that the coordinating node\nneeds the pipeline (say it is version 7.1.0) and the gateway node in the\nremote cluster doesn't (version 7.7.0). In that case the data nodes\nwon't send the pipeline aggregations back to the gateway node.\nCritically, the gateway node *will* send the pipeline aggregations back\nto the coordinating node. This is all managed with that\n`Supplier<PipelineTree>`, but *how* it is managed is a bit tricky.", "committedDate": "2020-03-18T14:06:31Z", "type": "commit"}, {"oid": "4c9db0249736d4395093dacbcf2623b963653672", "url": "https://github.com/elastic/elasticsearch/commit/4c9db0249736d4395093dacbcf2623b963653672", "message": "replace nocommit", "committedDate": "2020-03-18T14:10:26Z", "type": "commit"}, {"oid": "5b36280eee679d9ebb2e0a99276cabd0ed8c0bda", "url": "https://github.com/elastic/elasticsearch/commit/5b36280eee679d9ebb2e0a99276cabd0ed8c0bda", "message": "Test CCS", "committedDate": "2020-03-18T18:44:52Z", "type": "commit"}, {"oid": "bd890bc5e6037be0164fd5dccf8ca30e98959dac", "url": "https://github.com/elastic/elasticsearch/commit/bd890bc5e6037be0164fd5dccf8ca30e98959dac", "message": "Merge branch 'master' into pipeline_drop_serialization", "committedDate": "2020-03-18T20:01:41Z", "type": "commit"}, {"oid": "aa33bbe71707264a450e987826e99cd76a672dd8", "url": "https://github.com/elastic/elasticsearch/commit/aa33bbe71707264a450e987826e99cd76a672dd8", "message": "Merge branch 'master' into pipeline_drop_serialization", "committedDate": "2020-03-19T11:56:37Z", "type": "commit"}, {"oid": "b9f4cda693655193d7b60e4bf176902ec7ebb161", "url": "https://github.com/elastic/elasticsearch/commit/b9f4cda693655193d7b60e4bf176902ec7ebb161", "message": "Merge branch 'master' into pipeline_drop_serialization", "committedDate": "2020-03-19T13:16:14Z", "type": "commit"}, {"oid": "1562e76cda04565e8b8caedc585d54205c4d762f", "url": "https://github.com/elastic/elasticsearch/commit/1562e76cda04565e8b8caedc585d54205c4d762f", "message": "Merge branch 'master' into pipeline_drop_serialization", "committedDate": "2020-03-23T20:06:22Z", "type": "commit"}, {"oid": "cff7a673c19fd9f723d87896d844b58604b1452f", "url": "https://github.com/elastic/elasticsearch/commit/cff7a673c19fd9f723d87896d844b58604b1452f", "message": "Boo", "committedDate": "2020-03-23T21:20:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyMDUzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r396720535", "bodyText": "Looks like the comment trails off without finishing it's thought :)", "author": "polyfractal", "createdAt": "2020-03-23T19:57:36Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java", "diffHunk": "@@ -54,35 +59,56 @@\n         }\n     };\n \n-    private final List<SiblingPipelineAggregator> topLevelPipelineAggregators;\n+    /**\n+     * The way to build a tree of pipeline aggregators. Used only for\n+     * serialization backwards compatibility.\n+     */\n+    private final Supplier<PipelineAggregator.PipelineTree> pipelineTreeForBwcSerialization;\n \n     /**\n      * Constructs a new aggregation.\n      */\n     public InternalAggregations(List<InternalAggregation> aggregations) {\n         super(aggregations);\n-        this.topLevelPipelineAggregators = Collections.emptyList();\n+        this.pipelineTreeForBwcSerialization = null;\n     }\n \n     /**\n-     * Constructs a new aggregation providing its {@link InternalAggregation}s and {@link SiblingPipelineAggregator}s\n+     * Constructs a node in the aggregation tree.\n+     * @param pipelineTreeSource must be null inside the tree or after final reduction. Should reference the\n+     *                           search request otherwise so we can properly serialize the response to\n+     *                           versions of Elasticsearch that require the pipelines to be serialized.\n      */\n-    public InternalAggregations(List<InternalAggregation> aggregations, List<SiblingPipelineAggregator> topLevelPipelineAggregators) {\n+    public InternalAggregations(List<InternalAggregation> aggregations, Supplier<PipelineAggregator.PipelineTree> pipelineTreeSource) {\n         super(aggregations);\n-        this.topLevelPipelineAggregators = Objects.requireNonNull(topLevelPipelineAggregators);\n+        this.pipelineTreeForBwcSerialization = pipelineTreeSource;\n     }\n \n     public InternalAggregations(StreamInput in) throws IOException {\n         super(in.readList(stream -> in.readNamedWriteable(InternalAggregation.class)));\n-        this.topLevelPipelineAggregators = in.readList(\n-            stream -> (SiblingPipelineAggregator)in.readNamedWriteable(PipelineAggregator.class));\n+        if (in.getVersion().before(Version.V_8_0_0)) { // TODO switch to 7.7.0 before merging\n+            in.readNamedWriteableList(PipelineAggregator.class); \n+        }\n+        /*\n+         * Setting the pipeline tree source to null is here is correct but\n+         * only because we don't immediately pass the InternalAggregations\n+         * off to another node. Instead, we always reduce together with\n+         * many aggregations and that always adds the ", "originalCommit": "b9f4cda693655193d7b60e4bf176902ec7ebb161", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0NzMzNA==", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r397347334", "bodyText": "Thanks! I do that somet", "author": "nik9000", "createdAt": "2020-03-24T17:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyMDUzNQ=="}], "type": "inlineReview"}, {"oid": "f335863fd32cad3a8b1a5554d0167dd8cb212481", "url": "https://github.com/elastic/elasticsearch/commit/f335863fd32cad3a8b1a5554d0167dd8cb212481", "message": "Merge branch 'master' into pipeline_drop_serialization", "committedDate": "2020-03-24T17:46:17Z", "type": "commit"}, {"oid": "feb194c96af2d736de2fbbec6450304661114e95", "url": "https://github.com/elastic/elasticsearch/commit/feb194c96af2d736de2fbbec6450304661114e95", "message": "Update", "committedDate": "2020-03-24T18:56:20Z", "type": "commit"}, {"oid": "12dae79a6dbddcfb4cf587c3979e84bc7f2f970b", "url": "https://github.com/elastic/elasticsearch/commit/12dae79a6dbddcfb4cf587c3979e84bc7f2f970b", "message": "Switch version", "committedDate": "2020-03-25T10:43:23Z", "type": "commit"}]}