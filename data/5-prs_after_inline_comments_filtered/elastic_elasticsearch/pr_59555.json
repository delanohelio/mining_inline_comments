{"pr_number": 59555, "pr_title": "Deprecate camel case date format", "pr_createdAt": "2020-07-14T16:48:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59555", "timeline": [{"oid": "0ce441be71b8176f32d383930ff252a9b0d0aaaa", "url": "https://github.com/elastic/elasticsearch/commit/0ce441be71b8176f32d383930ff252a9b0d0aaaa", "message": "Deprecate camel case date format\n\nCamel case date formats are deprecated and snake case should be used\ninstead. An enmu FormatNames is introduced to keep pattern names for\nboth joda and java.time in one place", "committedDate": "2020-07-14T16:45:47Z", "type": "commit"}, {"oid": "35d5e644ed220d0341388fec7e394f4a3ba762c4", "url": "https://github.com/elastic/elasticsearch/commit/35d5e644ed220d0341388fec7e394f4a3ba762c4", "message": "compile fix", "committedDate": "2020-07-15T05:46:46Z", "type": "commit"}, {"oid": "ca9cba6411531de48eb7ff56f78a8847497f7a13", "url": "https://github.com/elastic/elasticsearch/commit/ca9cba6411531de48eb7ff56f78a8847497f7a13", "message": "guard instead of side effect", "committedDate": "2020-07-15T08:06:17Z", "type": "commit"}, {"oid": "6916349483b3f7f4ad869db07b725b01fce88e27", "url": "https://github.com/elastic/elasticsearch/commit/6916349483b3f7f4ad869db07b725b01fce88e27", "message": "rename", "committedDate": "2020-07-15T08:08:44Z", "type": "commit"}, {"oid": "210132ad24806b85ab06b3ab8e53aa260719cc4d", "url": "https://github.com/elastic/elasticsearch/commit/210132ad24806b85ab06b3ab8e53aa260719cc4d", "message": "Merge branch 'master' into v8/deprecate_camel_case_date_format", "committedDate": "2020-07-16T06:40:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465392925", "bodyText": "@pgomulka The renaming of this to week_year seems inconsistent with the use of weekyear in other formats\nWEEK_YEAR_WEEK(\"weekyearWeek\", \"weekyear_week\"),\nWEEKYEAR_WEEK_DAY(\"weekyearWeekDay\", \"weekyear_week_day\"),\nand\nSTRICT_WEEKYEAR(\"strictWeekyear\", \"strict_weekyear\"),\nSTRICT_WEEKYEAR_WEEK(\"strictWeekyearWeek\", \"strict_weekyear_week\"),\nSTRICT_WEEKYEAR_WEEK_DAY(\"strictWeekyearWeekDay\", \"strict_weekyear_week_day\"),", "author": "russcam", "createdAt": "2020-08-04T23:53:02Z", "path": "server/src/main/java/org/elasticsearch/common/time/FormatNames.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.time;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.util.LazyInitializable;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public enum FormatNames {\n+    ISO8601(null, \"iso8601\"),\n+    BASIC_DATE(\"basicDate\", \"basic_date\"),\n+    BASIC_DATE_TIME(\"basicDateTime\", \"basic_date_time\"),\n+    BASIC_DATE_TIME_NO_MILLIS(\"basicDateTimeNoMillis\", \"basic_date_time_no_millis\"),\n+    BASIC_ORDINAL_DATE(\"basicOrdinalDate\", \"basic_ordinal_date\"),\n+    BASIC_ORDINAL_DATE_TIME(\"basicOrdinalDateTime\", \"basic_ordinal_date_time\"),\n+    BASIC_ORDINAL_DATE_TIME_NO_MILLIS(\"basicOrdinalDateTimeNoMillis\", \"basic_ordinal_date_time_no_millis\"),\n+    BASIC_TIME(\"basicTime\", \"basic_time\"),\n+    BASIC_TIME_NO_MILLIS(\"basicTimeNoMillis\", \"basic_time_no_millis\"),\n+    BASIC_T_TIME(\"basicTTime\", \"basic_t_time\"),\n+    BASIC_T_TIME_NO_MILLIS(\"basicTTimeNoMillis\", \"basic_t_time_no_millis\"),\n+    BASIC_WEEK_DATE(\"basicWeekDate\", \"basic_week_date\"),\n+    BASIC_WEEK_DATE_TIME(\"basicWeekDateTime\", \"basic_week_date_time\"),\n+    BASIC_WEEK_DATE_TIME_NO_MILLIS(\"basicWeekDateTimeNoMillis\", \"basic_week_date_time_no_millis\"),\n+    DATE(null, \"date\"),\n+    DATE_HOUR(\"dateHour\", \"date_hour\"),\n+    DATE_HOUR_MINUTE(\"dateHourMinute\", \"date_hour_minute\"),\n+    DATE_HOUR_MINUTE_SECOND(\"dateHourMinuteSecond\", \"date_hour_minute_second\"),\n+    DATE_HOUR_MINUTE_SECOND_FRACTION(\"dateHourMinuteSecondFraction\", \"date_hour_minute_second_fraction\"),\n+    DATE_HOUR_MINUTE_SECOND_MILLIS(\"dateHourMinuteSecondMillis\", \"date_hour_minute_second_millis\"),\n+    DATE_OPTIONAL_TIME(\"dateOptionalTime\", \"date_optional_time\"),\n+    DATE_TIME(\"dateTime\", \"date_time\"),\n+    DATE_TIME_NO_MILLIS(\"dateTimeNoMillis\", \"date_time_no_millis\"),\n+    HOUR(null, \"hour\"),\n+    HOUR_MINUTE(\"hourMinute\", \"hour_minute\"),\n+    HOUR_MINUTE_SECOND(\"hourMinuteSecond\", \"hour_minute_second\"),\n+    HOUR_MINUTE_SECOND_FRACTION(\"hourMinuteSecondFraction\", \"hour_minute_second_fraction\"),\n+    HOUR_MINUTE_SECOND_MILLIS(\"hourMinuteSecondMillis\", \"hour_minute_second_millis\"),\n+    ORDINAL_DATE(\"ordinalDate\", \"ordinal_date\"),\n+    ORDINAL_DATE_TIME(\"ordinalDateTime\", \"ordinal_date_time\"),\n+    ORDINAL_DATE_TIME_NO_MILLIS(\"ordinalDateTimeNoMillis\", \"ordinal_date_time_no_millis\"),\n+    TIME(null, \"time\"),\n+    TIME_NO_MILLIS(\"timeNoMillis\", \"time_no_millis\"),\n+    T_TIME(\"tTime\", \"t_time\"),\n+    T_TIME_NO_MILLIS(\"tTimeNoMillis\", \"t_time_no_millis\"),\n+    WEEK_DATE(\"weekDate\", \"week_date\"),\n+    WEEK_DATE_TIME(\"weekDateTime\", \"week_date_time\"),\n+    WEEK_DATE_TIME_NO_MILLIS(\"weekDateTimeNoMillis\", \"week_date_time_no_millis\"),\n+    WEEK_YEAR(\"weekyear\", \"week_year\"),", "originalCommit": "210132ad24806b85ab06b3ab8e53aa260719cc4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwMDMyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465400329", "bodyText": "To be clear, there isn't any rename in this PR. There is only bringing java formats inline with the already existing joda formats, which have this:\n} else if (\"weekyear\".equals(input) || \"week_year\".equals(input)) {\n\nI agree thought we should stick with weekyear, as that was not camelCase to begin with.", "author": "rjernst", "createdAt": "2020-08-05T00:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTg2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465405864", "bodyText": "Apologies, I don't think I was clear in my comment; I was referring to the enum ctor snakeCaseName parameter argument rather than the enum constant name (although the constant name WEEK_YEAR does look inconsistent). I came here because we have a failing test in the .NET client: elastic/elasticsearch-net#4920. It's related to #60044; thinking about it now, I should have opened it there I think \ud83d\ude04", "author": "russcam", "createdAt": "2020-08-05T00:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ=="}], "type": "inlineReview"}]}