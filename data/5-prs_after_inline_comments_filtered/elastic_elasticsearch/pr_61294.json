{"pr_number": 61294, "pr_title": "Add constant folding as an optimization phase", "pr_createdAt": "2020-08-18T18:31:54Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61294", "timeline": [{"oid": "700585dc6e2a8024cb778e5c7aa048939a55b7fd", "url": "https://github.com/elastic/elasticsearch/commit/700585dc6e2a8024cb778e5c7aa048939a55b7fd", "message": "add constant folding as an optimization phase", "committedDate": "2020-08-18T18:25:52Z", "type": "commit"}, {"oid": "6ac71bd1dc8b9d060463329b8b9edaff5f06a50d", "url": "https://github.com/elastic/elasticsearch/commit/6ac71bd1dc8b9d060463329b8b9edaff5f06a50d", "message": "Merge branch 'master' into constopti", "committedDate": "2020-08-18T18:33:45Z", "type": "commit"}, {"oid": "7771740fe01be20450bd6a5475ddd070225b37d2", "url": "https://github.com/elastic/elasticsearch/commit/7771740fe01be20450bd6a5475ddd070225b37d2", "message": "Merge branch 'master' into constopti", "committedDate": "2020-08-19T16:18:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIxNzAyNg==", "url": "https://github.com/elastic/elasticsearch/pull/61294#discussion_r473217026", "bodyText": "Brief explanation of all the seemingly trivial overrides here, because they take expressions.\nTwo sentences or so.", "author": "stu-elastic", "createdAt": "2020-08-19T17:51:37Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultConstantFoldingOptimizationPhase.java", "diffHunk": "@@ -0,0 +1,824 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.phase;\n+\n+import org.elasticsearch.painless.AnalyzerCaster;\n+import org.elasticsearch.painless.Operation;\n+import org.elasticsearch.painless.ir.BinaryMathNode;\n+import org.elasticsearch.painless.ir.BinaryNode;\n+import org.elasticsearch.painless.ir.BooleanNode;\n+import org.elasticsearch.painless.ir.CastNode;\n+import org.elasticsearch.painless.ir.ComparisonNode;\n+import org.elasticsearch.painless.ir.ConditionalNode;\n+import org.elasticsearch.painless.ir.ConstantNode;\n+import org.elasticsearch.painless.ir.DeclarationNode;\n+import org.elasticsearch.painless.ir.DoWhileLoopNode;\n+import org.elasticsearch.painless.ir.DupNode;\n+import org.elasticsearch.painless.ir.ElvisNode;\n+import org.elasticsearch.painless.ir.ExpressionNode;\n+import org.elasticsearch.painless.ir.FlipArrayIndexNode;\n+import org.elasticsearch.painless.ir.FlipCollectionIndexNode;\n+import org.elasticsearch.painless.ir.FlipDefIndexNode;\n+import org.elasticsearch.painless.ir.ForEachSubArrayNode;\n+import org.elasticsearch.painless.ir.ForEachSubIterableNode;\n+import org.elasticsearch.painless.ir.ForLoopNode;\n+import org.elasticsearch.painless.ir.IfElseNode;\n+import org.elasticsearch.painless.ir.IfNode;\n+import org.elasticsearch.painless.ir.InstanceofNode;\n+import org.elasticsearch.painless.ir.InvokeCallDefNode;\n+import org.elasticsearch.painless.ir.InvokeCallMemberNode;\n+import org.elasticsearch.painless.ir.InvokeCallNode;\n+import org.elasticsearch.painless.ir.ListInitializationNode;\n+import org.elasticsearch.painless.ir.MapInitializationNode;\n+import org.elasticsearch.painless.ir.NewArrayNode;\n+import org.elasticsearch.painless.ir.NewObjectNode;\n+import org.elasticsearch.painless.ir.NullNode;\n+import org.elasticsearch.painless.ir.NullSafeSubNode;\n+import org.elasticsearch.painless.ir.ReturnNode;\n+import org.elasticsearch.painless.ir.StatementExpressionNode;\n+import org.elasticsearch.painless.ir.StoreBraceDefNode;\n+import org.elasticsearch.painless.ir.StoreBraceNode;\n+import org.elasticsearch.painless.ir.StoreDotDefNode;\n+import org.elasticsearch.painless.ir.StoreDotNode;\n+import org.elasticsearch.painless.ir.StoreDotShortcutNode;\n+import org.elasticsearch.painless.ir.StoreFieldMemberNode;\n+import org.elasticsearch.painless.ir.StoreListShortcutNode;\n+import org.elasticsearch.painless.ir.StoreMapShortcutNode;\n+import org.elasticsearch.painless.ir.StoreVariableNode;\n+import org.elasticsearch.painless.ir.StringConcatenationNode;\n+import org.elasticsearch.painless.ir.ThrowNode;\n+import org.elasticsearch.painless.ir.UnaryMathNode;\n+import org.elasticsearch.painless.ir.WhileLoopNode;\n+import org.elasticsearch.painless.lookup.PainlessLookupUtility;\n+\n+import java.util.function.Consumer;\n+\n+import static org.elasticsearch.painless.Operation.NE;\n+\n+public class DefaultConstantFoldingOptimizationPhase extends IRTreeBaseVisitor<Consumer<ExpressionNode>> {\n+", "originalCommit": "7771740fe01be20450bd6a5475ddd070225b37d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyMjczMA==", "url": "https://github.com/elastic/elasticsearch/pull/61294#discussion_r474022730", "bodyText": "Done.", "author": "jdconrad", "createdAt": "2020-08-20T14:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIxNzAyNg=="}], "type": "inlineReview"}, {"oid": "4edc5562e29bb5ed39b57621cf85e9df6cad2d18", "url": "https://github.com/elastic/elasticsearch/commit/4edc5562e29bb5ed39b57621cf85e9df6cad2d18", "message": "add a couple of doc sentences", "committedDate": "2020-08-20T14:24:04Z", "type": "commit"}, {"oid": "2f7b8a0c8ebdc823379a779ab8444faab3c2a471", "url": "https://github.com/elastic/elasticsearch/commit/2f7b8a0c8ebdc823379a779ab8444faab3c2a471", "message": "add tests for constant folding", "committedDate": "2020-08-20T16:17:32Z", "type": "commit"}]}