{"pr_number": 55797, "pr_title": "[ML] Do not fail DFA task when it's stopped whilst reindexing", "pr_createdAt": "2020-04-27T11:04:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55797", "timeline": [{"oid": "a3fe99baf975fbb2a71db1c42faeee4e603f4ff4", "url": "https://github.com/elastic/elasticsearch/commit/a3fe99baf975fbb2a71db1c42faeee4e603f4ff4", "message": "[ML] Do not fail DFA task when it's stopped whilst reindexing\n\nAdding to #55659, we missed another way we could set the task to\nfailed due to task cancellation. CI revealed that we might also\nget a `SearchPhaseExecutionException` whose cause is a\n`TaskCancelledException`. That exception is not wrapped so\nunwrapping it will not return the underlying `TaskCancelledException`.\nThus to be complete in catching this, we also need to check the\nerror's cause.\n\nCloses #55068", "committedDate": "2020-04-27T10:58:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyMDE2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/55797#discussion_r415720166", "bodyText": "static", "author": "przemekwitek", "createdAt": "2020-04-27T11:07:47Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -294,6 +294,10 @@ private void reindexDataframeAndStartAnalysis(DataFrameAnalyticsTask task, DataF\n                 new GetIndexRequest().indices(config.getDest().getIndex()), destIndexListener);\n     }\n \n+    private boolean isTaskCancelledException(Exception error) {", "originalCommit": "a3fe99baf975fbb2a71db1c42faeee4e603f4ff4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNDMxMg==", "url": "https://github.com/elastic/elasticsearch/pull/55797#discussion_r415724312", "bodyText": "I wonder if it's also worth unwrapping the cause?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return ExceptionsHelper.unwrapCause(error) instanceof TaskCancelledException || error.getCause() instanceof TaskCancelledException;\n          \n          \n            \n                    return ExceptionsHelper.unwrapCause(error) instanceof TaskCancelledException || ExceptionsHelper.unwrapCause(error.getCause()) instanceof TaskCancelledException;\n          \n      \n    \n    \n  \n\nWhether this is worth it or not depending on whether the nested exception could be a remote transport exception, or whether only the outermost exception can be.  If you don't know the answer it's probably better to add the extra unwrap call.", "author": "droberts195", "createdAt": "2020-04-27T11:14:50Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -294,6 +294,10 @@ private void reindexDataframeAndStartAnalysis(DataFrameAnalyticsTask task, DataF\n                 new GetIndexRequest().indices(config.getDest().getIndex()), destIndexListener);\n     }\n \n+    private boolean isTaskCancelledException(Exception error) {\n+        return ExceptionsHelper.unwrapCause(error) instanceof TaskCancelledException || error.getCause() instanceof TaskCancelledException;", "originalCommit": "a3fe99baf975fbb2a71db1c42faeee4e603f4ff4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55797#discussion_r415726981", "bodyText": "Good point. I'll do that.", "author": "dimitris-athanasiou", "createdAt": "2020-04-27T11:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNDMxMg=="}], "type": "inlineReview"}, {"oid": "aecabcf992e78e378699da3109b88a2018892974", "url": "https://github.com/elastic/elasticsearch/commit/aecabcf992e78e378699da3109b88a2018892974", "message": "Make method static", "committedDate": "2020-04-27T11:18:36Z", "type": "commit"}, {"oid": "705adeb8aa9adf57c43efad0cc3e53bc66c6527e", "url": "https://github.com/elastic/elasticsearch/commit/705adeb8aa9adf57c43efad0cc3e53bc66c6527e", "message": "Also unwrap cause", "committedDate": "2020-04-27T11:19:38Z", "type": "commit"}]}