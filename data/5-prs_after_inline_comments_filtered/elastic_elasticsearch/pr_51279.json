{"pr_number": 51279, "pr_title": "Exclude nested documents in LuceneChangesSnapshot", "pr_createdAt": "2020-01-22T02:40:17Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51279", "timeline": [{"oid": "7cf9b1f3edbf43afc19025dc064f143699764934", "url": "https://github.com/elastic/elasticsearch/commit/7cf9b1f3edbf43afc19025dc064f143699764934", "message": "Exclude nested documents in LuceneChangesSnapshot", "committedDate": "2020-01-22T02:31:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzOTQwMg==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369439402", "bodyText": "This comment looks in need of adjustment. Maybe it deserves a Javadoc comment to say it doesn't work with child docs too.", "author": "DaveCTurner", "createdAt": "2020-01-22T09:08:04Z", "path": "server/src/main/java/org/elasticsearch/index/engine/CombinedDocValues.java", "diffHunk": "@@ -55,19 +56,18 @@ long docVersion(int segmentDocId) throws IOException {\n     long docSeqNo(int segmentDocId) throws IOException {\n         assert seqNoDV.docID() < segmentDocId;\n         if (seqNoDV.advanceExact(segmentDocId) == false) {\n+            assert false : \"DocValues for field [\" + SeqNoFieldMapper.NAME + \"] is not found\";\n             throw new IllegalStateException(\"DocValues for field [\" + SeqNoFieldMapper.NAME + \"] is not found\");\n         }\n         return seqNoDV.longValue();\n     }\n \n     long docPrimaryTerm(int segmentDocId) throws IOException {\n-        if (primaryTermDV == null) {\n-            return -1L;\n-        }\n         assert primaryTermDV.docID() < segmentDocId;\n         // Use -1 for docs which don't have primary term. The caller considers those docs as nested docs.", "originalCommit": "7cf9b1f3edbf43afc19025dc064f143699764934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxNzU3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369617571", "bodyText": "Fixed in 5b7c5b5.", "author": "dnhatn", "createdAt": "2020-01-22T15:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzOTQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MDk1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369480951", "bodyText": "Can you add a comment saying that this skips nested docs?", "author": "ywelsch", "createdAt": "2020-01-22T10:30:44Z", "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -2731,7 +2734,11 @@ private boolean assertMaxSeqNoOfUpdatesIsAdvanced(Term id, long seqNo, boolean a\n     private void restoreVersionMapAndCheckpointTracker(DirectoryReader directoryReader) throws IOException {\n         final IndexSearcher searcher = new IndexSearcher(directoryReader);\n         searcher.setQueryCache(null);\n-        final Query query = LongPoint.newRangeQuery(SeqNoFieldMapper.NAME, getPersistedLocalCheckpoint() + 1, Long.MAX_VALUE);\n+        final Query query = new BooleanQuery.Builder()\n+            .add(LongPoint.newRangeQuery(\n+                SeqNoFieldMapper.NAME, getPersistedLocalCheckpoint() + 1, Long.MAX_VALUE), BooleanClause.Occur.MUST)\n+            .add(new DocValuesFieldExistsQuery(SeqNoFieldMapper.PRIMARY_TERM_NAME), BooleanClause.Occur.MUST)", "originalCommit": "7cf9b1f3edbf43afc19025dc064f143699764934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzMzQyMA==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369533420", "bodyText": "Can you use Queries.newNonNestedFilter() so that we can track the usage more easily ?", "author": "jimczi", "createdAt": "2020-01-22T12:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MDk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxNzcxOA==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369617718", "bodyText": "Adjusted in bd0771a.", "author": "dnhatn", "createdAt": "2020-01-22T15:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MDk1MQ=="}], "type": "inlineReview"}, {"oid": "08cac5b3348e7b3d102a803a59cc1427c495cdda", "url": "https://github.com/elastic/elasticsearch/commit/08cac5b3348e7b3d102a803a59cc1427c495cdda", "message": "Merge branch 'master' into nested-docs", "committedDate": "2020-01-22T13:57:31Z", "type": "commit"}, {"oid": "5b7c5b5820b6d2182cc8f3fe0e6838e68e4163ca", "url": "https://github.com/elastic/elasticsearch/commit/5b7c5b5820b6d2182cc8f3fe0e6838e68e4163ca", "message": "remove outdated comment", "committedDate": "2020-01-22T14:26:20Z", "type": "commit"}, {"oid": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "url": "https://github.com/elastic/elasticsearch/commit/bd0771ac782e6eca7953a9fc4b31a869a740755a", "message": "Use Queries.newNonNestedFilter", "committedDate": "2020-01-22T14:26:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjkzMA==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369622930", "bodyText": "what is the point of doubling the exception with an assertion?", "author": "jpountz", "createdAt": "2020-01-22T15:20:14Z", "path": "server/src/main/java/org/elasticsearch/index/engine/CombinedDocValues.java", "diffHunk": "@@ -47,6 +47,7 @@\n     long docVersion(int segmentDocId) throws IOException {\n         assert versionDV.docID() < segmentDocId;\n         if (versionDV.advanceExact(segmentDocId) == false) {\n+            assert false : \"DocValues for field [\" + VersionFieldMapper.NAME + \"] is not found\";", "originalCommit": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0MDY1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369640651", "bodyText": "We prefer to bring a node down in tests but not in production when this invariant does not hold.  We use this approach in other places, for example, \n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/index/engine/ReadOnlyEngine.java\n    \n    \n        Lines 276 to 277\n      in\n      6e2f7b4\n    \n    \n    \n    \n\n        \n          \n           assert false : \"this should not be called\"; \n        \n\n        \n          \n           throw new UnsupportedOperationException(\"indexing is not supported on a read-only engine\"); \n        \n    \n  \n\n.", "author": "dnhatn", "createdAt": "2020-01-22T15:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjkzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0ODQzNA==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369648434", "bodyText": "Thanks for explaining, it makes sense.", "author": "jpountz", "createdAt": "2020-01-22T16:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNjA2NA==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369626064", "bodyText": "same question here", "author": "jpountz", "createdAt": "2020-01-22T15:25:08Z", "path": "server/src/main/java/org/elasticsearch/index/engine/CombinedDocValues.java", "diffHunk": "@@ -55,19 +56,18 @@ long docVersion(int segmentDocId) throws IOException {\n     long docSeqNo(int segmentDocId) throws IOException {\n         assert seqNoDV.docID() < segmentDocId;\n         if (seqNoDV.advanceExact(segmentDocId) == false) {\n+            assert false : \"DocValues for field [\" + SeqNoFieldMapper.NAME + \"] is not found\";", "originalCommit": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNjQyMw==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369626423", "bodyText": "and here", "author": "jpountz", "createdAt": "2020-01-22T15:25:41Z", "path": "server/src/main/java/org/elasticsearch/index/engine/CombinedDocValues.java", "diffHunk": "@@ -55,19 +56,18 @@ long docVersion(int segmentDocId) throws IOException {\n     long docSeqNo(int segmentDocId) throws IOException {\n         assert seqNoDV.docID() < segmentDocId;\n         if (seqNoDV.advanceExact(segmentDocId) == false) {\n+            assert false : \"DocValues for field [\" + SeqNoFieldMapper.NAME + \"] is not found\";\n             throw new IllegalStateException(\"DocValues for field [\" + SeqNoFieldMapper.NAME + \"] is not found\");\n         }\n         return seqNoDV.longValue();\n     }\n \n     long docPrimaryTerm(int segmentDocId) throws IOException {\n-        if (primaryTermDV == null) {\n-            return -1L;\n-        }\n+        // We exclude non-root nested documents when querying changes, every returned document must have primary term.\n         assert primaryTermDV.docID() < segmentDocId;\n-        // Use -1 for docs which don't have primary term. The caller considers those docs as nested docs.\n         if (primaryTermDV.advanceExact(segmentDocId) == false) {\n-            return -1;\n+            assert false : \"DocValues for field [\" + SeqNoFieldMapper.PRIMARY_TERM_NAME + \"] is not found\";", "originalCommit": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNzczNw==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369627737", "bodyText": "Lucene requires queries to be rewritten before creating a weight. This particular boolean query is fine because it rewrites to itself, but it'd be more future-proof to call rewrite().\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Weight weight = searcher.createWeight(query, ScoreMode.COMPLETE_NO_SCORES, 1.0f);\n          \n          \n            \n                     final Query rewrittenQuery = searcher.rewrite(query);\n          \n          \n            \n                     final Weight weight = searcher.createWeight(rewrittenQuery, ScoreMode.COMPLETE_NO_SCORES, 1.0f);", "author": "jpountz", "createdAt": "2020-01-22T15:27:41Z", "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -2731,7 +2734,11 @@ private boolean assertMaxSeqNoOfUpdatesIsAdvanced(Term id, long seqNo, boolean a\n     private void restoreVersionMapAndCheckpointTracker(DirectoryReader directoryReader) throws IOException {\n         final IndexSearcher searcher = new IndexSearcher(directoryReader);\n         searcher.setQueryCache(null);\n-        final Query query = LongPoint.newRangeQuery(SeqNoFieldMapper.NAME, getPersistedLocalCheckpoint() + 1, Long.MAX_VALUE);\n+        final Query query = new BooleanQuery.Builder()\n+            .add(LongPoint.newRangeQuery(\n+                    SeqNoFieldMapper.NAME, getPersistedLocalCheckpoint() + 1, Long.MAX_VALUE), BooleanClause.Occur.MUST)\n+            .add(Queries.newNonNestedFilter(), BooleanClause.Occur.MUST) // exclude non-root nested documents\n+            .build();\n         final Weight weight = searcher.createWeight(query, ScoreMode.COMPLETE_NO_SCORES, 1.0f);", "originalCommit": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0MDk4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369640983", "bodyText": "Yes, I pushed 8c37fb0.", "author": "dnhatn", "createdAt": "2020-01-22T15:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNzczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzMDY1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51279#discussion_r369630651", "bodyText": "in case you wonder: no need to explicitly rewrite here, this is implicitly done by searchAfter which is a high-level API of IndexSearcher unlike createWeight", "author": "jpountz", "createdAt": "2020-01-22T15:32:11Z", "path": "server/src/main/java/org/elasticsearch/index/engine/LuceneChangesSnapshot.java", "diffHunk": "@@ -210,7 +213,10 @@ private void fillParallelArray(ScoreDoc[] scoreDocs, ParallelArray parallelArray\n     }\n \n     private TopDocs searchOperations(ScoreDoc after) throws IOException {\n-        final Query rangeQuery = LongPoint.newRangeQuery(SeqNoFieldMapper.NAME, Math.max(fromSeqNo, lastSeenSeqNo), toSeqNo);\n+        final Query rangeQuery = new BooleanQuery.Builder()\n+            .add(LongPoint.newRangeQuery(SeqNoFieldMapper.NAME, Math.max(fromSeqNo, lastSeenSeqNo), toSeqNo), BooleanClause.Occur.MUST)\n+            .add(Queries.newNonNestedFilter(), BooleanClause.Occur.MUST) // exclude non-root nested documents\n+            .build();\n         final Sort sortedBySeqNo = new Sort(new SortField(SeqNoFieldMapper.NAME, SortField.Type.LONG));\n         return indexSearcher.searchAfter(after, rangeQuery, searchBatchSize, sortedBySeqNo);", "originalCommit": "bd0771ac782e6eca7953a9fc4b31a869a740755a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8c37fb02817e06c78add9c3b7d8ca8f0e472f82a", "url": "https://github.com/elastic/elasticsearch/commit/8c37fb02817e06c78add9c3b7d8ca8f0e472f82a", "message": "rewrite", "committedDate": "2020-01-22T15:45:18Z", "type": "commit"}]}