{"pr_number": 66023, "pr_title": "Do not restore autoscaling policy from snapshots", "pr_createdAt": "2020-12-08T13:13:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66023", "timeline": [{"oid": "2b5ac26efb629225972ec32c8e93a1cf0231d62f", "url": "https://github.com/elastic/elasticsearch/commit/2b5ac26efb629225972ec32c8e93a1cf0231d62f", "message": "Initial working version", "committedDate": "2020-12-08T13:08:53Z", "type": "commit"}, {"oid": "00b1c40dbbda75219b04d3fb11cc3c154ee25baf", "url": "https://github.com/elastic/elasticsearch/commit/00b1c40dbbda75219b04d3fb11cc3c154ee25baf", "message": "spotless", "committedDate": "2020-12-08T13:26:04Z", "type": "commit"}, {"oid": "eeeca94ccdf8c691cf39c412483635fb83e855c5", "url": "https://github.com/elastic/elasticsearch/commit/eeeca94ccdf8c691cf39c412483635fb83e855c5", "message": "more spotless", "committedDate": "2020-12-08T13:31:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538395373", "bodyText": "I wonder if we should just skip the operatorPrivilegesEnabled check. It is fine to not restore autoscaling policies for now and we can revisit once we have the proper framework around operator privileges and restore in general.", "author": "henningandersen", "createdAt": "2020-12-08T13:53:26Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -454,7 +459,8 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.customs() != null) {\n                                 for (ObjectObjectCursor<String, Metadata.Custom> cursor : metadata.customs()) {\n                                     if (RepositoriesMetadata.TYPE.equals(cursor.key) == false\n-                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false) {\n+                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false\n+                                            && (operatorPrivilegesEnabled == false || \"autoscaling\".equals(cursor.key) == false)) {", "originalCommit": "eeeca94ccdf8c691cf39c412483635fb83e855c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgyMjAzMg==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538822032", "bodyText": "Removing the check makes both the logic and code dependency simpler. Another practical advantage is that Cloud probably will not enable opereator privileges straight away after 7.11 release. Therefore removing this check makes sure the restore behavioiur of autoscaling policy stay the same before and after operator privileges get enabled in Cloud. Having a consistent behaviour is one of the motivations for this work to be included in 7.11. So it seems to make sense. But it would be different than what we have agreed during the meeting. @colings86 Could you please verify whether removing this check is desirable?", "author": "ywangd", "createdAt": "2020-12-08T21:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAyOTUyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r539029525", "bodyText": "But it would be different than what we have agreed during the meeting\n\nI believe we discussed that approach at the meeting and I came out of the meeting with the impression that this was the direction we would take (to just disable restore for autoscaling).", "author": "henningandersen", "createdAt": "2020-12-09T05:53:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE1MDIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r539150228", "bodyText": "I'm fine with changing this so we never restore autoscaling policies regardless of whether operator privileges are enabled. At least for this first version", "author": "colings86", "createdAt": "2020-12-09T09:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIwNDg1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r539204857", "bodyText": "Thanks both. I updated the code to drop the operator privileges check.", "author": "ywangd", "createdAt": "2020-12-09T10:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5ODIyNg==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538398226", "bodyText": "Rather than switch on the \"autoscaling\" key I would prefer to add a marker interface \"NotRestorableCustomMetadata\", implemented by AutoscalingMetadata and use instanceof to omit it instead.", "author": "henningandersen", "createdAt": "2020-12-08T13:55:42Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -454,7 +459,8 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.customs() != null) {\n                                 for (ObjectObjectCursor<String, Metadata.Custom> cursor : metadata.customs()) {\n                                     if (RepositoriesMetadata.TYPE.equals(cursor.key) == false\n-                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false) {\n+                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false\n+                                            && (operatorPrivilegesEnabled == false || \"autoscaling\".equals(cursor.key) == false)) {", "originalCommit": "eeeca94ccdf8c691cf39c412483635fb83e855c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgyNjE3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538826173", "bodyText": "Updated. Thanks!", "author": "ywangd", "createdAt": "2020-12-08T21:37:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5ODIyNg=="}], "type": "inlineReview"}, {"oid": "475dbc1ea639050bd6e68f5d78165b05473bf3fa", "url": "https://github.com/elastic/elasticsearch/commit/475dbc1ea639050bd6e68f5d78165b05473bf3fa", "message": "address feedback", "committedDate": "2020-12-08T21:34:59Z", "type": "commit"}, {"oid": "7a6dbd8966090313495f52e3f125e4277c93a9c3", "url": "https://github.com/elastic/elasticsearch/commit/7a6dbd8966090313495f52e3f125e4277c93a9c3", "message": "Merge remote-tracking branch 'origin/master' into do-not-restore-autoscaling-policy", "committedDate": "2020-12-09T10:39:00Z", "type": "commit"}, {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "url": "https://github.com/elastic/elasticsearch/commit/1aedcfb91136bd772a7ac88f0e8d2105043d5621", "message": "address feedback", "committedDate": "2020-12-09T10:51:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDUyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540214529", "bodyText": "nit: why not just:\nRestStatus status = createSnapshotResponse.status();", "author": "henningandersen", "createdAt": "2020-12-10T14:31:35Z", "path": "x-pack/plugin/autoscaling/src/internalClusterTest/java/org/elasticsearch/xpack/autoscaling/AutoscalingSnapshotsIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling;\n+\n+import org.elasticsearch.ResourceNotFoundException;\n+import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotResponse;\n+import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotResponse;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.xpack.autoscaling.action.DeleteAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.GetAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.PutAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.policy.AutoscalingPolicy;\n+import org.junit.Before;\n+\n+import java.nio.file.Path;\n+\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.elasticsearch.xpack.autoscaling.AutoscalingTestCase.randomAutoscalingPolicy;\n+import static org.hamcrest.Matchers.containsString;\n+\n+public class AutoscalingSnapshotsIT extends AutoscalingIntegTestCase {\n+\n+    public static final String REPO = \"repo\";\n+    public static final String SNAPSHOT = \"snap\";\n+\n+    @Before\n+    public void setup() throws Exception {\n+        Path location = randomRepoPath();\n+        logger.info(\"--> creating repository [{}] [{}]\", REPO, \"fs\");\n+        assertAcked(clusterAdmin().preparePutRepository(REPO).setType(\"fs\").setSettings(Settings.builder().put(\"location\", location)));\n+    }\n+\n+    public void testAutoscalingPolicyWillNotBeRestored() {\n+        final Client client = client();\n+\n+        final AutoscalingPolicy policy = randomAutoscalingPolicy();\n+        final PutAutoscalingPolicyAction.Request request = new PutAutoscalingPolicyAction.Request(\n+            policy.name(),\n+            policy.roles(),\n+            policy.deciders()\n+        );\n+        assertAcked(client.execute(PutAutoscalingPolicyAction.INSTANCE, request).actionGet());\n+\n+        CreateSnapshotResponse createSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareCreateSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setIncludeGlobalState(true)\n+            .get();\n+\n+        RestStatus status = createSnapshotResponse.getSnapshotInfo().status();", "originalCommit": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNjU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540216560", "bodyText": "I think we should extend the test to also have the case where a policy does exist when restoring to check that it survives the restore. To protect us from \"restore-global-state\" clearing everything during restore. Could be just randomly doing that or the delete case.", "author": "henningandersen", "createdAt": "2020-12-10T14:34:11Z", "path": "x-pack/plugin/autoscaling/src/internalClusterTest/java/org/elasticsearch/xpack/autoscaling/AutoscalingSnapshotsIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling;\n+\n+import org.elasticsearch.ResourceNotFoundException;\n+import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotResponse;\n+import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotResponse;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.xpack.autoscaling.action.DeleteAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.GetAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.PutAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.policy.AutoscalingPolicy;\n+import org.junit.Before;\n+\n+import java.nio.file.Path;\n+\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.elasticsearch.xpack.autoscaling.AutoscalingTestCase.randomAutoscalingPolicy;\n+import static org.hamcrest.Matchers.containsString;\n+\n+public class AutoscalingSnapshotsIT extends AutoscalingIntegTestCase {\n+\n+    public static final String REPO = \"repo\";\n+    public static final String SNAPSHOT = \"snap\";\n+\n+    @Before\n+    public void setup() throws Exception {\n+        Path location = randomRepoPath();\n+        logger.info(\"--> creating repository [{}] [{}]\", REPO, \"fs\");\n+        assertAcked(clusterAdmin().preparePutRepository(REPO).setType(\"fs\").setSettings(Settings.builder().put(\"location\", location)));\n+    }\n+\n+    public void testAutoscalingPolicyWillNotBeRestored() {\n+        final Client client = client();\n+\n+        final AutoscalingPolicy policy = randomAutoscalingPolicy();\n+        final PutAutoscalingPolicyAction.Request request = new PutAutoscalingPolicyAction.Request(\n+            policy.name(),\n+            policy.roles(),\n+            policy.deciders()\n+        );\n+        assertAcked(client.execute(PutAutoscalingPolicyAction.INSTANCE, request).actionGet());\n+\n+        CreateSnapshotResponse createSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareCreateSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setIncludeGlobalState(true)\n+            .get();\n+\n+        RestStatus status = createSnapshotResponse.getSnapshotInfo().status();\n+        assertEquals(RestStatus.OK, status);\n+\n+        final DeleteAutoscalingPolicyAction.Request deleteRequest = new DeleteAutoscalingPolicyAction.Request(policy.name());\n+        assertAcked(client().execute(DeleteAutoscalingPolicyAction.INSTANCE, deleteRequest).actionGet());\n+\n+        RestoreSnapshotResponse restoreSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareRestoreSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setRestoreGlobalState(true)\n+            .get();\n+        assertEquals(RestStatus.OK, restoreSnapshotResponse.status());\n+\n+        final GetAutoscalingPolicyAction.Request getRequest = new GetAutoscalingPolicyAction.Request(policy.name());", "originalCommit": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5NjY5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540596699", "bodyText": "Good point. I have expanded the test to:\n\nRandomly deleting or mutating the existing policy after snapshot is taken\nAdd another policy after snapshot is taken\n\nThen assert things stay the same after restore.", "author": "ywangd", "createdAt": "2020-12-11T00:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNjU2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxODY4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540218689", "bodyText": "I think we should just remove this and the associated build file changes etc. from this PR? Once  the real framework for avoiding to restore autoscaling policies on operator privilege enabled setups goes in, this might look different anyway.", "author": "henningandersen", "createdAt": "2020-12-10T14:36:52Z", "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +99,86 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+", "originalCommit": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5OTIyMA==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540599220", "bodyText": "Agreed and all unrelated changes removed.\nA bit more context: I thought about deleting these changes in last commit. But I got a bit paranoid and was trying to assert that operator privileges do not interfere with the restore behaviour. Looking back now, this thinking was an artefact of how this PR evolved, which started with the assumption that operator privileges would impact the behaviour.  If it had started purely from the autoscaling side, I don't think I would add anything related to operator privileges. In short, it's the right move to delete these unrelated code.", "author": "ywangd", "createdAt": "2020-12-11T00:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxODY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxOTMzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540219335", "bodyText": "This also looks unrelated to at least the PR description, perhaps move to separate PR?", "author": "henningandersen", "createdAt": "2020-12-10T14:37:40Z", "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -46,17 +51,13 @@ public void testNonOperatorSuperuserWillFailToCallOperatorOnlyApiWhenOperatorPri\n \n     public void testOperatorUserWillSucceedToCallOperatorOnlyApi() throws IOException {\n         final Request postVotingConfigExclusionsRequest = new Request(\"POST\", \"_cluster/voting_config_exclusions?node_names=foo\");\n-        final String authHeader = \"Basic \"\n-            + Base64.getEncoder().encodeToString(\"test_operator:x-pack-test-password\".getBytes(StandardCharsets.UTF_8));\n-        postVotingConfigExclusionsRequest.setOptions(RequestOptions.DEFAULT.toBuilder().addHeader(\"Authorization\", authHeader));\n+        postVotingConfigExclusionsRequest.setOptions(RequestOptions.DEFAULT.toBuilder().addHeader(\"Authorization\", OPERATOR_AUTH_HEADER));", "originalCommit": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5OTM3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540599372", "bodyText": "Removed. See also above.", "author": "ywangd", "createdAt": "2020-12-11T00:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxOTMzNQ=="}], "type": "inlineReview"}, {"oid": "ef1c63674c6f9e7d75a0dd6d1e1ad744260a0d55", "url": "https://github.com/elastic/elasticsearch/commit/ef1c63674c6f9e7d75a0dd6d1e1ad744260a0d55", "message": "Merge remote-tracking branch 'origin/master' into do-not-restore-autoscaling-policy", "committedDate": "2020-12-10T23:22:50Z", "type": "commit"}, {"oid": "85e61ae681f28dc3f5f4df89e3487dba41684e8f", "url": "https://github.com/elastic/elasticsearch/commit/85e61ae681f28dc3f5f4df89e3487dba41684e8f", "message": "Address feedback", "committedDate": "2020-12-11T00:08:13Z", "type": "commit"}, {"oid": "b7b4c23c75b16b8ee28f0185edbd91fe42c89d75", "url": "https://github.com/elastic/elasticsearch/commit/b7b4c23c75b16b8ee28f0185edbd91fe42c89d75", "message": "revert more irrelevant changes from earlier commits", "committedDate": "2020-12-11T00:15:01Z", "type": "commit"}]}