{"pr_number": 61927, "pr_title": "Check for runtime field loops in queries", "pr_createdAt": "2020-09-03T15:06:35Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61927", "timeline": [{"oid": "c39360adba1bf94fa9aaec438f93ad91b23b1abd", "url": "https://github.com/elastic/elasticsearch/commit/c39360adba1bf94fa9aaec438f93ad91b23b1abd", "message": "Check for runtime field loops in queries\n\nWe were checking for loops in queries before, but we had an \"off by one\"\nerror where we wouldn't notice the \"top level\" runtime field when\ndetecting a loop. So the error message would be wrong.\n\nI also caught a few bugs with query generation caused by missing\n`@Override` annotations and fixed a few of them. There is a bug with\n`regexp` queries with match options that I'm not fixing in this PR but\nwill get to later.\n\nRelates to #59332", "committedDate": "2020-09-03T15:03:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MTQyNA==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r483051424", "bodyText": "I pulled this function into the superclass because it the \"for query\" version of it is tricky. We could probably avoid the type parameter if we really wanted to by being a bit more tricky, but I'm not sure it is worth it.", "author": "nik9000", "createdAt": "2020-09-03T15:07:36Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -61,6 +71,26 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    /**", "originalCommit": "c39360adba1bf94fa9aaec438f93ad91b23b1abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MTY3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r483051671", "bodyText": "Missing this was a bug that causes regexes not to work at all!", "author": "nik9000", "createdAt": "2020-09-03T15:07:53Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -102,38 +133,47 @@ public Query fuzzyQuery(\n         throw new IllegalArgumentException(unsupported(\"fuzzy\", \"keyword and text\"));\n     }\n \n+    @Override\n     public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n         throw new IllegalArgumentException(unsupported(\"prefix\", \"keyword, text and wildcard\"));\n     }\n \n+    @Override\n     public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n         throw new IllegalArgumentException(unsupported(\"wildcard\", \"keyword, text and wildcard\"));\n     }\n \n+    @Override\n     public Query regexpQuery(\n         String value,\n-        int flags,\n+        int syntaxFlags,\n+        int matchFlags,", "originalCommit": "c39360adba1bf94fa9aaec438f93ad91b23b1abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjIzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r483052231", "bodyText": "This was a bug!", "author": "nik9000", "createdAt": "2020-09-03T15:08:42Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptIpMappedFieldType.java", "diffHunk": "@@ -119,14 +109,18 @@ public Query rangeQuery(\n     public Query termQuery(Object value, QueryShardContext context) {\n         checkAllowExpensiveQueries(context);\n         if (value instanceof InetAddress) {\n-            return InetAddressPoint.newExactQuery(name(), (InetAddress) value);\n+            return inetAddressQuery((InetAddress) value, context);", "originalCommit": "c39360adba1bf94fa9aaec438f93ad91b23b1abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3Mzk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488473977", "bodyText": "should we push this separately?", "author": "javanna", "createdAt": "2020-09-15T08:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxODE2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488818161", "bodyText": "I'm ok pushing it as part of this because this is ready.", "author": "nik9000", "createdAt": "2020-09-15T16:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjIzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r483052435", "bodyText": "I'd like to leave this for later.", "author": "nik9000", "createdAt": "2020-09-03T15:09:02Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptKeywordMappedFieldType.java", "diffHunk": "@@ -127,32 +117,37 @@ public Query rangeQuery(\n     }\n \n     @Override\n-    public Query regexpQuery(String value, int flags, int maxDeterminizedStates, RewriteMethod method, QueryShardContext context) {\n+    public Query regexpQuery(\n+        String value,\n+        int syntaxFlags,\n+        int matchFlags,\n+        int maxDeterminizedStates,\n+        RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n         checkAllowExpensiveQueries(context);\n-        return new StringScriptFieldRegexpQuery(script, leafFactory(context.lookup()), name(), value, flags, maxDeterminizedStates);\n+        if (matchFlags != 0) {", "originalCommit": "c39360adba1bf94fa9aaec438f93ad91b23b1abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NTE3OA==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488475178", "bodyText": "I am no longer sure what is left to do here. Do we need an issue for it? Didn't you push the regex changes separately?", "author": "javanna", "createdAt": "2020-09-15T08:15:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxODY0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488818649", "bodyText": "@markharwood is working on a change that'll take the matchFlags into account.", "author": "nik9000", "createdAt": "2020-09-15T16:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMTg2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488821867", "bodyText": "I'm not sure why this isn't a noop - I thought I pushed this exact change separately.", "author": "nik9000", "createdAt": "2020-09-15T17:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMjEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488822134", "bodyText": "Ah, not it is a noop.", "author": "nik9000", "createdAt": "2020-09-15T17:01:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjQzNQ=="}], "type": "inlineReview"}, {"oid": "0716b27f5ee3dc8572f0d34ca5092c9a93b45f70", "url": "https://github.com/elastic/elasticsearch/commit/0716b27f5ee3dc8572f0d34ca5092c9a93b45f70", "message": "Merge branch 'master' into runtime_fields_loop_in_query", "committedDate": "2020-09-03T15:39:57Z", "type": "commit"}, {"oid": "9ce71746f1bea55d9f8206b2d1cd3fb4cc620b9a", "url": "https://github.com/elastic/elasticsearch/commit/9ce71746f1bea55d9f8206b2d1cd3fb4cc620b9a", "message": "Merge branch 'master' into runtime_fields_loop_in_query", "committedDate": "2020-09-04T14:45:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNDUyNw==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r485724527", "bodyText": "I've seen this popup in this and some other PR, can we merge this fix separately?", "author": "javanna", "createdAt": "2020-09-09T15:58:45Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -102,38 +133,47 @@ public Query fuzzyQuery(\n         throw new IllegalArgumentException(unsupported(\"fuzzy\", \"keyword and text\"));\n     }\n \n+    @Override\n     public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n         throw new IllegalArgumentException(unsupported(\"prefix\", \"keyword, text and wildcard\"));\n     }\n \n+    @Override\n     public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n         throw new IllegalArgumentException(unsupported(\"wildcard\", \"keyword, text and wildcard\"));\n     }\n \n+    @Override\n     public Query regexpQuery(\n         String value,\n-        int flags,\n+        int syntaxFlags,\n+        int matchFlags,\n         int maxDeterminizedStates,\n-        MultiTermQuery.RewriteMethod method,\n+        RewriteMethod method,\n         QueryShardContext context\n     ) {\n         throw new IllegalArgumentException(unsupported(\"regexp\", \"keyword and text\"));\n     }\n \n+    @Override\n     public abstract Query existsQuery(QueryShardContext context);\n \n+    @Override\n     public Query phraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n         throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n     }\n \n+    @Override\n     public Query multiPhraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n         throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n     }\n \n+    @Override\n     public Query phrasePrefixQuery(TokenStream stream, int slop, int maxExpansions) throws IOException {\n         throw new IllegalArgumentException(unsupported(\"phrase prefix\", \"text\"));\n     }\n \n+    @Override", "originalCommit": "0716b27f5ee3dc8572f0d34ca5092c9a93b45f70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYzOTY3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r486639671", "bodyText": "I've pushed a fix for this to master and 7.x. I'll merge that into this branch now.", "author": "nik9000", "createdAt": "2020-09-10T21:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNDUyNw=="}], "type": "inlineReview"}, {"oid": "72c1b8b03074f188e1e98d5da04501e6d90c880a", "url": "https://github.com/elastic/elasticsearch/commit/72c1b8b03074f188e1e98d5da04501e6d90c880a", "message": "Merge branch 'master' into runtime_fields_loop_in_query", "committedDate": "2020-09-10T21:49:04Z", "type": "commit"}, {"oid": "f780a42b36f5bf07e4a89722cbc28dfd2e15f588", "url": "https://github.com/elastic/elasticsearch/commit/f780a42b36f5bf07e4a89722cbc28dfd2e15f588", "message": "Compile", "committedDate": "2020-09-14T13:09:47Z", "type": "commit"}, {"oid": "4bc988b8cbb383f910f98512ae224183bed98903", "url": "https://github.com/elastic/elasticsearch/commit/4bc988b8cbb383f910f98512ae224183bed98903", "message": "Prettier", "committedDate": "2020-09-14T13:12:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwMDM3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r487900373", "bodyText": "This is something I bumped into while working on this. Just had the old name left over.", "author": "nik9000", "createdAt": "2020-09-14T13:11:56Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -149,7 +179,7 @@ public SpanQuery spanPrefixQuery(String value, SpanMultiTermQueryWrapper.SpanRew\n     }\n \n     private String unsupported(String query, String supported) {\n-        String thisField = \"[\" + name() + \"] which is of type [script] with runtime_type [\" + runtimeType() + \"]\";\n+        String thisField = \"[\" + name() + \"] which is of type [runtime] with runtime_type [\" + runtimeType() + \"]\";", "originalCommit": "f780a42b36f5bf07e4a89722cbc28dfd2e15f588", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3MzM0NA==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r488473344", "bodyText": "use the constant, then renaming is much easier.", "author": "javanna", "createdAt": "2020-09-15T08:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwMDM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwMDkxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/61927#discussion_r487900919", "bodyText": "This is the other half of the \"old name\" bug I fixed way above.", "author": "nik9000", "createdAt": "2020-09-14T13:12:49Z", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractNonTextScriptMappedFieldTypeTestCase.java", "diffHunk": "@@ -43,7 +43,7 @@ private void assertQueryOnlyOnTextAndKeyword(String queryName, ThrowingRunnable\n             equalTo(\n                 \"Can only use \"\n                     + queryName\n-                    + \" queries on keyword and text fields - not on [test] which is of type [script] with runtime_type [\"", "originalCommit": "f780a42b36f5bf07e4a89722cbc28dfd2e15f588", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b66a16dcdadc0fb580881301ad3055d349f916a7", "url": "https://github.com/elastic/elasticsearch/commit/b66a16dcdadc0fb580881301ad3055d349f916a7", "message": "Merge branch 'master' into runtime_fields_loop_in_query", "committedDate": "2020-09-14T13:49:18Z", "type": "commit"}, {"oid": "45d124b7f70bcea52fc5a5d2888328237565db5d", "url": "https://github.com/elastic/elasticsearch/commit/45d124b7f70bcea52fc5a5d2888328237565db5d", "message": "iter", "committedDate": "2020-09-15T17:01:46Z", "type": "commit"}, {"oid": "bef47e22477a9def3d13353f7533279ee31b897a", "url": "https://github.com/elastic/elasticsearch/commit/bef47e22477a9def3d13353f7533279ee31b897a", "message": "Merge branch 'master' into runtime_fields_loop_in_query", "committedDate": "2020-09-15T18:16:04Z", "type": "commit"}]}