{"pr_number": 53802, "pr_title": "EQL: Extract query folder tests definitions into resources", "pr_createdAt": "2020-03-19T14:27:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53802", "timeline": [{"oid": "2ffa9cf2eed43eaf309b3b3ea978411080f89f6c", "url": "https://github.com/elastic/elasticsearch/commit/2ffa9cf2eed43eaf309b3b3ea978411080f89f6c", "message": "EQL: Extract query folder tests definitions into resources", "committedDate": "2020-03-19T14:38:30Z", "type": "forcePushed"}, {"oid": "fed316d3558084ee0be06c80ba70cd386c133fd3", "url": "https://github.com/elastic/elasticsearch/commit/fed316d3558084ee0be06c80ba70cd386c133fd3", "message": "EQL: Extract query folder tests definitions into resources", "committedDate": "2020-03-19T18:53:00Z", "type": "commit"}, {"oid": "fed316d3558084ee0be06c80ba70cd386c133fd3", "url": "https://github.com/elastic/elasticsearch/commit/fed316d3558084ee0be06c80ba70cd386c133fd3", "message": "EQL: Extract query folder tests definitions into resources", "committedDate": "2020-03-19T18:53:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0OTg5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53802#discussion_r397349899", "bodyText": "This test was skipped during externalization. Discovered that during backporting - I'm working on fixing it in master and 7.x", "author": "costin", "createdAt": "2020-03-24T17:51:53Z", "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/planner/QueryFolderOkTests.java", "diffHunk": "@@ -7,72 +7,19 @@\n package org.elasticsearch.xpack.eql.planner;\n \n import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;\n-\n+import org.elasticsearch.common.Strings;\n import org.elasticsearch.xpack.eql.plan.physical.EsQueryExec;\n import org.elasticsearch.xpack.eql.plan.physical.PhysicalPlan;\n \n-import java.util.Arrays;\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n \n import static org.elasticsearch.xpack.ql.type.DataTypes.KEYWORD;\n import static org.hamcrest.Matchers.containsString;\n \n public class QueryFolderOkTests extends AbstractQueryFolderTestCase {\n-    private static Object[][] specs = {\n-            {\"basic\", \"process where true\", null},\n-            {\"singleNumericFilterEquals\", \"process where serial_event_id = 1\", \"\\\"term\\\":{\\\"serial_event_id\\\":{\\\"value\\\":1\"},\n-            {\"singleNumericFilterLess\", \"process where serial_event_id < 4\",\n-                    \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":null,\\\"to\\\":4,\\\"include_lower\\\":false,\\\"include_upper\\\":false\"\n-            },\n-            {\"singleNumericFilterLessSymmetry\", \"process where 4 > serial_event_id\",\n-                    \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":null,\\\"to\\\":4,\\\"include_lower\\\":false,\\\"include_upper\\\":false\"\n-            },\n-            {\"singleNumericFilterLessEquals\", \"process where serial_event_id <= 4\",\n-                    \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":null,\\\"to\\\":4,\\\"include_lower\\\":false,\\\"include_upper\\\":true\"\n-            },\n-            {\"singleNumericFilterGreater\", \"process where serial_event_id > 4\",\n-                    \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":4,\\\"to\\\":null,\\\"include_lower\\\":false,\\\"include_upper\\\":false\"\n-            },\n-            {\"singleNumericFilterGreaterEquals\", \"process where serial_event_id >= 4\",\n-                    \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":4,\\\"to\\\":null,\\\"include_lower\\\":true,\\\"include_upper\\\":false\"\n-            },\n-            {\"mixedTypeFilter\", \"process where process_name == \\\"notepad.exe\\\" or (serial_event_id < 4.5 and serial_event_id >= 3.1)\",\n-                    new Object[]{\n-                            \"\\\"term\\\":{\\\"process_name\\\":{\\\"value\\\":\\\"notepad.exe\\\"\",\n-                            \"\\\"range\\\":{\\\"serial_event_id\\\":{\\\"from\\\":3.1,\\\"to\\\":4.5,\\\"include_lower\\\":true,\\\"include_upper\\\":false\"\n-                    }\n-            },\n-            {\"notFilter\", \"process where not (exit_code > -1)\",\n-                    \"\\\"range\\\":{\\\"exit_code\\\":{\\\"from\\\":null,\\\"to\\\":-1,\\\"include_lower\\\":false,\\\"include_upper\\\":true\"\n-            },\n-            {\"inFilter\", \"process where process_name in (\\\"python.exe\\\", \\\"SMSS.exe\\\", \\\"explorer.exe\\\")\",\n-                    new Object[]{\n-                            \"\\\"term\\\":{\\\"process_name\\\":{\\\"value\\\":\\\"python.exe\\\"\",\n-                            \"\\\"term\\\":{\\\"process_name\\\":{\\\"value\\\":\\\"SMSS.exe\\\"\",\n-                            \"\\\"term\\\":{\\\"process_name\\\":{\\\"value\\\":\\\"explorer.exe\\\"\",\n-                    }\n-            },\n-            {\"equalsAndInFilter\", \"process where process_path == \\\"*\\\\\\\\red_ttp\\\\\\\\wininit.*\\\" and opcode in (0,1,2,3)\",\n-                    new Object[]{\n-                            \"\\\"wildcard\\\":{\\\"process_path\\\":{\\\"wildcard\\\":\\\"*\\\\\\\\\\\\\\\\red_ttp\\\\\\\\\\\\\\\\wininit.*\\\"\",\n-                            \"\\\"term\\\":{\\\"opcode\\\":{\\\"value\\\":0\",\n-                            \"\\\"term\\\":{\\\"opcode\\\":{\\\"value\\\":1\",\n-                            \"\\\"term\\\":{\\\"opcode\\\":{\\\"value\\\":2\",\n-                            \"\\\"term\\\":{\\\"opcode\\\":{\\\"value\\\":3\",\n-                    }\n-            },\n-            {\"substringFunction\", \"process where substring(file_name, -4) == '.exe'\",", "originalCommit": "fed316d3558084ee0be06c80ba70cd386c133fd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}