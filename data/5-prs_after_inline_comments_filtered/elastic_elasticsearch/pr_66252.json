{"pr_number": 66252, "pr_title": "SQL: Enable adding missing equals to bool fields as filters", "pr_createdAt": "2020-12-14T13:29:03Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66252", "timeline": [{"oid": "b39016fd9e10f3926f7a963dc9c3ea5980897b9a", "url": "https://github.com/elastic/elasticsearch/commit/b39016fd9e10f3926f7a963dc9c3ea5980897b9a", "message": "Enable the AddMissingEqualsToBoolField rule in SQL\n\nThis will enable QL's AnalyzerRules.AddMissingEqualsToBoolField to SQL's\nanalyzer as well.", "committedDate": "2020-12-14T13:24:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUxOTQ4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66252#discussion_r542519486", "bodyText": "The rule could check whether the Filter is resolved before applying the equality.", "author": "costin", "createdAt": "2020-12-14T16:25:30Z", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/analyzer/AnalyzerRules.java", "diffHunk": "@@ -39,7 +40,7 @@ protected LogicalPlan rule(Filter filter) {\n         }\n \n         private Expression replaceRawBoolFieldWithEquals(Expression e) {\n-            if (e instanceof FieldAttribute) {\n+            if (e instanceof FieldAttribute && e.dataType() == BOOLEAN) {", "originalCommit": "b39016fd9e10f3926f7a963dc9c3ea5980897b9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUyNDczMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66252#discussion_r542524731", "bodyText": "Ah, right. Thanks, fixed.", "author": "bpintea", "createdAt": "2020-12-14T16:31:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUxOTQ4Ng=="}], "type": "inlineReview"}, {"oid": "a5a6189a7702d8e7a43ed46de84c6ca4fe81a5dc", "url": "https://github.com/elastic/elasticsearch/commit/a5a6189a7702d8e7a43ed46de84c6ca4fe81a5dc", "message": "Fix: check type resolution before type's val\n\nMake sure a fields's type is available before checking it's value.", "committedDate": "2020-12-14T16:29:13Z", "type": "commit"}, {"oid": "6b2a6ee7ec45bf91d7b545610e9a7961265f2a06", "url": "https://github.com/elastic/elasticsearch/commit/6b2a6ee7ec45bf91d7b545610e9a7961265f2a06", "message": "Rework the way resolution is checked\n\nCheck on filter's resolution part of the rule() method, before any other\nchange is applied.", "committedDate": "2020-12-14T18:20:59Z", "type": "commit"}, {"oid": "fcd726b93228a9a15f141b12268c3f9e56e8fac8", "url": "https://github.com/elastic/elasticsearch/commit/fcd726b93228a9a15f141b12268c3f9e56e8fac8", "message": "Merge branch 'master' into enh/add_missing_eq_to_bool", "committedDate": "2020-12-15T09:32:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5OTI2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66252#discussion_r543199266", "bodyText": "Maybe I'm missing some context, but what happens to nested expressions like: WHERE a > 1 and (bool or b < 2) or (c = 3 and bool), could we have a test for that as well?", "author": "matriv", "createdAt": "2020-12-15T09:52:41Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "diffHunk": "@@ -2459,4 +2461,33 @@ public void testReplaceSumWithStats() {\n             assertThat(eqe.queryContainer().toString().replaceAll(\"\\\\s+\", \"\"), containsString(\"{\\\"stats\\\":{\\\"field\\\":\\\"int\\\"}}\"));\n         }\n     }\n+\n+    public void testAddMissingEqualsToBoolField() {\n+        LogicalPlan p = plan(\"SELECT bool FROM test WHERE bool\");", "originalCommit": "fcd726b93228a9a15f141b12268c3f9e56e8fac8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIxMTkwOA==", "url": "https://github.com/elastic/elasticsearch/pull/66252#discussion_r543211908", "bodyText": "They'd be eval'd to a BOOLEAN type, so nothing would happen: the AddMissingEqualsToBoolField() wouldn't change the expression (since its root node type wouldn't be a FieldAttribute) and the verifier check would let it pass (since it's a bool type). Basically most of the tests we have look to these two newly added checks similar to your example, but I could still add one if you think it'd help.", "author": "bpintea", "createdAt": "2020-12-15T10:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5OTI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1ODIwMw==", "url": "https://github.com/elastic/elasticsearch/pull/66252#discussion_r543358203", "bodyText": "@matriv, I've added a slightly extended version of your test (and updated my first eval of the case above).", "author": "bpintea", "createdAt": "2020-12-15T13:53:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5OTI2Ng=="}], "type": "inlineReview"}, {"oid": "5f24d3239095002e97b061f384f8db0490af8564", "url": "https://github.com/elastic/elasticsearch/commit/5f24d3239095002e97b061f384f8db0490af8564", "message": "Add test with nested bool\n\nAdd one SQL test with nested \"free-floating\" bool that got assigned a\ntrue literal.", "committedDate": "2020-12-15T13:28:21Z", "type": "commit"}, {"oid": "28f79e44bfd1dd2c0504c9c9ede846eb93619df9", "url": "https://github.com/elastic/elasticsearch/commit/28f79e44bfd1dd2c0504c9c9ede846eb93619df9", "message": "Merge branch 'enh/add_missing_eq_to_bool' of github.com:bpintea/elasticsearch into enh/add_missing_eq_to_bool", "committedDate": "2020-12-15T13:29:37Z", "type": "commit"}, {"oid": "1b4c6ddbf5628b3338839aa7c0a9d567c576e2b5", "url": "https://github.com/elastic/elasticsearch/commit/1b4c6ddbf5628b3338839aa7c0a9d567c576e2b5", "message": "Merge branch 'master' into enh/add_missing_eq_to_bool", "committedDate": "2020-12-15T13:31:22Z", "type": "commit"}, {"oid": "076d526edca56c44ba1a95cf81e06424732a25f4", "url": "https://github.com/elastic/elasticsearch/commit/076d526edca56c44ba1a95cf81e06424732a25f4", "message": "Style fix\n\n- minor style fix.", "committedDate": "2020-12-15T13:43:25Z", "type": "commit"}]}