{"pr_number": 1110, "pr_title": "Fix items with sword tool tag not instantly breaking bamboo", "pr_createdAt": "2020-10-05T20:23:17Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1110", "timeline": [{"oid": "e29ed412f0da0f2b61215e6c5b6e78209bbc3a62", "url": "https://github.com/FabricMC/fabric/commit/e29ed412f0da0f2b61215e6c5b6e78209bbc3a62", "message": "Fix items with sword tool tag not instantly breaking bamboo", "committedDate": "2020-10-05T19:34:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjY0Ng==", "url": "https://github.com/FabricMC/fabric/pull/1110#discussion_r499906646", "bodyText": "I'd suggest using an instanceof @Redirect here instead of this @Inject that effectively overwrites the method.", "author": "Technici4n", "createdAt": "2020-10-05T22:28:42Z", "path": "fabric-tool-attribute-api-v1/src/main/java/net/fabricmc/fabric/mixin/tool/attribute/BambooBlockMixin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.tool.attribute;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BambooBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockView;\n+\n+import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n+\n+@Mixin(BambooBlock.class)\n+public abstract class BambooBlockMixin {\n+\t@Inject(at = @At(\"HEAD\"), method = \"calcBlockBreakingDelta\", cancellable = true)\n+\tprivate void onCalcBlockBreakingDelta(BlockState state, PlayerEntity player, BlockView world, BlockPos pos, CallbackInfoReturnable<Float> info) {\n+\t\tif (FabricToolTags.SWORDS.contains(player.getMainHandStack().getItem())) {\n+\t\t\tinfo.setReturnValue(1.0F);", "originalCommit": "e29ed412f0da0f2b61215e6c5b6e78209bbc3a62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NjMxMw==", "url": "https://github.com/FabricMC/fabric/pull/1110#discussion_r500596313", "bodyText": "If it was an unconditional cancel I'd agree that it's effectively an overwrite, but conditional cancels seem to be used all over the place in FabricAPI already?", "author": "Virtuoel", "createdAt": "2020-10-06T21:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzI5Nw==", "url": "https://github.com/FabricMC/fabric/pull/1110#discussion_r500597297", "bodyText": "As you wish, I'm just a random reviewer. It feels cleaner to me because all you really want to do is replace that instanceof, and that is exactly what @Redirect does.", "author": "Technici4n", "createdAt": "2020-10-06T21:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzI4Nw==", "url": "https://github.com/FabricMC/fabric/pull/1110#discussion_r499907287", "bodyText": "Same comment here.", "author": "Technici4n", "createdAt": "2020-10-05T22:30:26Z", "path": "fabric-tool-attribute-api-v1/src/main/java/net/fabricmc/fabric/mixin/tool/attribute/BambooSaplingBlockMixin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.tool.attribute;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BambooSaplingBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockView;\n+\n+import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n+\n+@Mixin(BambooSaplingBlock.class)\n+public abstract class BambooSaplingBlockMixin {\n+\t@Inject(at = @At(\"HEAD\"), method = \"calcBlockBreakingDelta\", cancellable = true)\n+\tprivate void onCalcBlockBreakingDelta(BlockState state, PlayerEntity player, BlockView world, BlockPos pos, CallbackInfoReturnable<Float> info) {\n+\t\tif (FabricToolTags.SWORDS.contains(player.getMainHandStack().getItem())) {\n+\t\t\tinfo.setReturnValue(1.0F);", "originalCommit": "e29ed412f0da0f2b61215e6c5b6e78209bbc3a62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MTYwNw==", "url": "https://github.com/FabricMC/fabric/pull/1110#discussion_r504991607", "bodyText": "Please add a description of why the injects exist here just so future maintainers know the purpose for the mixin existing.", "author": "i509VCB", "createdAt": "2020-10-14T21:47:08Z", "path": "fabric-tool-attribute-api-v1/src/main/java/net/fabricmc/fabric/mixin/tool/attribute/BambooBlockMixin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.tool.attribute;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BambooBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockView;\n+\n+import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n+\n+@Mixin(BambooBlock.class)\n+public abstract class BambooBlockMixin {\n+\t@Inject(at = @At(\"HEAD\"), method = \"calcBlockBreakingDelta\", cancellable = true)\n+\tprivate void onCalcBlockBreakingDelta(BlockState state, PlayerEntity player, BlockView world, BlockPos pos, CallbackInfoReturnable<Float> info) {\n+\t\tif (FabricToolTags.SWORDS.contains(player.getMainHandStack().getItem())) {", "originalCommit": "e29ed412f0da0f2b61215e6c5b6e78209bbc3a62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "481850d3763c31fae88f3c54d4730301d838d337", "url": "https://github.com/FabricMC/fabric/commit/481850d3763c31fae88f3c54d4730301d838d337", "message": "Consolidate mixins", "committedDate": "2020-11-02T15:35:12Z", "type": "commit"}, {"oid": "3d65781cc18c1a0587f6c7c3397f21d8ac71ca9b", "url": "https://github.com/FabricMC/fabric/commit/3d65781cc18c1a0587f6c7c3397f21d8ac71ca9b", "message": "Add Javadoc to injection", "committedDate": "2020-11-02T15:41:55Z", "type": "commit"}]}