{"pr_number": 539, "pr_title": "Migrate commands to v1", "pr_createdAt": "2020-03-19T03:32:15Z", "pr_url": "https://github.com/FabricMC/fabric/pull/539", "timeline": [{"oid": "4f2d98c26a0eb465529a06dbda2927dd600a2720", "url": "https://github.com/FabricMC/fabric/commit/4f2d98c26a0eb465529a06dbda2927dd600a2720", "message": "Migrate commands to v1", "committedDate": "2020-03-19T03:28:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3NDUzOA==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r394774538", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> ((dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}));\n          \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t});", "author": "liach", "createdAt": "2020-03-19T03:42:26Z", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> ((dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t}));", "originalCommit": "4f2d98c26a0eb465529a06dbda2927dd600a2720", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ae3a810bbade682649675f268f1f1e5b6671599", "url": "https://github.com/FabricMC/fabric/commit/7ae3a810bbade682649675f268f1f1e5b6671599", "message": "Update fabric-commands-v1/src/main/resources/fabric.mod.json\n\nCo-Authored-By: liach <7806504+liach@users.noreply.github.com>", "committedDate": "2020-03-22T06:19:59Z", "type": "commit"}, {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e", "url": "https://github.com/FabricMC/fabric/commit/a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e", "message": "Update fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java\n\nCo-Authored-By: liach <7806504+liach@users.noreply.github.com>", "committedDate": "2020-03-22T06:20:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r397953097", "bodyText": "Very minor, but I feel like these parameters should be in the opposite order since dispatcher will always be used while dedicated is secondary.", "author": "JamiesWhiteShirt", "createdAt": "2020-03-25T15:37:19Z", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t});\n+\n+\t/**\n+\t * Called when the server is registering commands.\n+\t *\n+\t * @param dedicated whether the server this command is being registered on is a dedicated server.\n+\t * @param dispatcher the command dispatcher to register commands to.\n+\t */\n+\tvoid register(boolean dedicated, CommandDispatcher<ServerCommandSource> dispatcher);", "originalCommit": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2ODQ2Mg==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r397968462", "bodyText": "shouldn't hurt as this method is not called by mods but rather implemented by mods.", "author": "liach", "createdAt": "2020-03-25T15:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MjY5Ng==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399352696", "bodyText": "It is still being implemented by the mods, including the signature. I have a minor preference towards Jamies' suggestion.", "author": "sfPlayer1", "createdAt": "2020-03-27T15:34:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399350358", "bodyText": "Please add a brief example, it may use [...] but should suffice to get an idea how to use this as an experienced Java dev without the wiki or digging deeply into the code.", "author": "sfPlayer1", "createdAt": "2020-03-27T15:31:39Z", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "originalCommit": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MzA0MA==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399353040", "bodyText": "@sfPlayer1 Mind elaborate how it is like? like {@code CommandRegistrationCallback.EVENT.register((dedicated, dispatcher) -> SomeCommand.register(distpacher))}?", "author": "liach", "createdAt": "2020-03-27T15:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1ODA4Mw==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399358083", "bodyText": "IMO it'd be nice to also outline the MC classes a bit, i.e. include something like LiteralArgumentBuilder.literal(\"somecmd\").executes(context -> [...])", "author": "sfPlayer1", "createdAt": "2020-03-27T15:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MTM3NQ==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399371375", "bodyText": "I think CommandManager.literal/argument would be better than the pure Brigadier ones because those often run into some issues with generics.\nEdit: Oh, that's what i5 went with anyway.", "author": "Juuxel", "createdAt": "2020-03-27T16:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjY1Nw==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399372657", "bodyText": "lol I guess I predicted what you were looking for.\nWell I did author the command wiki page so I have some experience with this", "author": "i509VCB", "createdAt": "2020-03-27T16:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}], "type": "inlineReview"}, {"oid": "b9a44d6e96f15b9a94fba307a8113dd32bb280d1", "url": "https://github.com/FabricMC/fabric/commit/b9a44d6e96f15b9a94fba307a8113dd32bb280d1", "message": "commands -> command and improved javadoc.", "committedDate": "2020-03-27T16:00:50Z", "type": "commit"}, {"oid": "1d8b34d9a717f8db8e5bf6bc9249a92514e91d5e", "url": "https://github.com/FabricMC/fabric/commit/1d8b34d9a717f8db8e5bf6bc9249a92514e91d5e", "message": "Fix the stragglers", "committedDate": "2020-03-27T16:19:16Z", "type": "commit"}, {"oid": "9e87410a7303c3c5eb71e66ff44e980799367d1a", "url": "https://github.com/FabricMC/fabric/commit/9e87410a7303c3c5eb71e66ff44e980799367d1a", "message": "swap dedicated and dispatcher params", "committedDate": "2020-03-27T16:45:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNzQxMQ==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399407411", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dispatcher, dedicated) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dispatcher, dedicated);\n          \n      \n    \n    \n  \n\nFixed lambda parameter names.", "author": "Juuxel", "createdAt": "2020-03-27T16:55:57Z", "path": "fabric-command-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ *\n+ * <p>To register some commands, you would register an event listener and implement the callback.\n+ *\n+ * <pre><code>\n+ * CommandRegistrationCallback.EVENT.register((dispatcher, dedicated) -> {\n+ *     // For example, this command is only registered on an integrated server\n+ *     if (!dedicated) dispatcher.register(CommandManager.literal(\"integrated_command\").executes(context -> {...}));\n+ * })};\n+ * </code></pre>\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);", "originalCommit": "9e87410a7303c3c5eb71e66ff44e980799367d1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "199d8e2f151c10a5a33dd8b235e5e4650d7eb096", "url": "https://github.com/FabricMC/fabric/commit/199d8e2f151c10a5a33dd8b235e5e4650d7eb096", "message": "Update fabric-command-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java\r\n\r\nWhoops forgot that one\n\nCo-Authored-By: Juuxel <6596629+Juuxel@users.noreply.github.com>", "committedDate": "2020-03-27T16:57:23Z", "type": "commit"}, {"oid": "a3c0f71645583117ac105fc4f4ffa331a559ec20", "url": "https://github.com/FabricMC/fabric/commit/a3c0f71645583117ac105fc4f4ffa331a559ec20", "message": "module name order has been restored.", "committedDate": "2020-04-08T04:35:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NzQzOQ==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r412667439", "bodyText": "Hmm, unrelated, but is it possible to use like <code class=\"java\"> for highlights when we get custom css stylesheets", "author": "liach", "createdAt": "2020-04-22T04:49:58Z", "path": "fabric-command-api-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ *\n+ * <p>To register some commands, you would register an event listener and implement the callback.\n+ *\n+ * <pre><code>", "originalCommit": "a3c0f71645583117ac105fc4f4ffa331a559ec20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2ODM4Ng==", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r412668386", "bodyText": "Hmm, I assume this is for docs.\nMaybe make an issue about it?", "author": "i509VCB", "createdAt": "2020-04-22T04:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NzQzOQ=="}], "type": "inlineReview"}]}