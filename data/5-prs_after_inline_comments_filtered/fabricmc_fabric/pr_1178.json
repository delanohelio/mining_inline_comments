{"pr_number": 1178, "pr_title": "Provide replacement for ModelAppender that allows loading non-blockstate paths", "pr_createdAt": "2020-11-23T01:18:28Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1178", "timeline": [{"oid": "270d1af25330112093db1cff2bfd4200f6863965", "url": "https://github.com/FabricMC/fabric/commit/270d1af25330112093db1cff2bfd4200f6863965", "message": "Extend ModelAppender to allow loading non-blockstate paths", "committedDate": "2020-11-23T01:10:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQzNjA4OQ==", "url": "https://github.com/FabricMC/fabric/pull/1178#discussion_r528436089", "bodyText": "this bothers me in that lambdas still default to the older/deprecated method. Should I just make a new interface for this and have the old interface extend it?", "author": "williewillus", "createdAt": "2020-11-23T01:19:11Z", "path": "fabric-models-v0/src/main/java/net/fabricmc/fabric/api/client/model/ModelAppender.java", "diffHunk": "@@ -20,8 +20,26 @@\n \n import net.minecraft.client.util.ModelIdentifier;\n import net.minecraft.resource.ResourceManager;\n+import net.minecraft.util.Identifier;\n \n @FunctionalInterface\n public interface ModelAppender {\n+\t/**\n+\t * Provides an opportunity inform the game that you would like it to load and bake a model,\n+\t * even if that model is not used by any blocks or items.\n+\t * @param out Accepts paths to be loaded. Arguments that are {@link ModelIdentifier} will be\n+\t *            loaded through the blockstate JSON system or, if the variant is {@code inventory}, the item model folder.\n+\t *            Otherwise, the argument is directly loaded as a JSON.\n+\t *            For example, <pre>new Identifier(\"mymod\", \"foo/bar\")</pre> will request loading of the file\n+\t *            <pre>/assets/mymod/models/foo/bar.json</pre>\n+\t */\n+\tdefault void appendAllIdentifiers(ResourceManager manager, Consumer<Identifier> out) {", "originalCommit": "270d1af25330112093db1cff2bfd4200f6863965", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQzNzkzNw==", "url": "https://github.com/FabricMC/fabric/pull/1178#discussion_r528437937", "bodyText": "I believe that may be the best option. I am not going to call myself a master at using json models but within the api structure that would make the most sense since it would allow any old implementations which just move over to the new interface and change the generic to continue working.", "author": "i509VCB", "createdAt": "2020-11-23T01:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQzNjA4OQ=="}], "type": "inlineReview"}, {"oid": "9dfdf6e501bc13a6b19450abc57a508bf160661b", "url": "https://github.com/FabricMC/fabric/commit/9dfdf6e501bc13a6b19450abc57a508bf160661b", "message": "Use a new interface instead of adding to the old one", "committedDate": "2020-11-24T04:17:14Z", "type": "commit"}, {"oid": "3a500ca5967becf23d53ca567026e56594b631d3", "url": "https://github.com/FabricMC/fabric/commit/3a500ca5967becf23d53ca567026e56594b631d3", "message": "Merge branch '1.16' of github.com:FabricMC/Fabric into modelapp", "committedDate": "2020-12-27T05:41:49Z", "type": "commit"}, {"oid": "d9bde2cf026bc050a02015c1375ccb9b12e08de5", "url": "https://github.com/FabricMC/fabric/commit/d9bde2cf026bc050a02015c1375ccb9b12e08de5", "message": "Rename new interface", "committedDate": "2020-12-27T05:55:40Z", "type": "commit"}]}