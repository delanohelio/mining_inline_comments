{"pr_number": 2893, "pr_title": "Modify standard jar exploded mode to not maintain original directory structure when adding dependencies to container.", "pr_createdAt": "2020-11-13T20:58:35Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2893", "timeline": [{"oid": "333f8e5385f8de8e182862ea21082c77a4b6f80e", "url": "https://github.com/GoogleContainerTools/jib/commit/333f8e5385f8de8e182862ea21082c77a4b6f80e", "message": "don't maintain original dependency structure when adding to container", "committedDate": "2020-11-13T20:24:45Z", "type": "commit"}, {"oid": "25fc7f729a61dc696f7b45c085988b27c12c0e21", "url": "https://github.com/GoogleContainerTools/jib/commit/25fc7f729a61dc696f7b45c085988b27c12c0e21", "message": "use small jar for test", "committedDate": "2020-11-13T20:40:28Z", "type": "commit"}, {"oid": "797ab5e1cef4022b62b23c049c89532edb3318df", "url": "https://github.com/GoogleContainerTools/jib/commit/797ab5e1cef4022b62b23c049c89532edb3318df", "message": "validate classpath", "committedDate": "2020-11-13T20:56:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTE1NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523235155", "bodyText": "It's okay to put everything into the try block, especially in tests.", "author": "chanseokoh", "createdAt": "2020-11-13T21:13:15Z", "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -64,11 +68,20 @@ public void testErrorLogging_directoryGiven() throws URISyntaxException {\n \n   @Test\n   public void testJar_toDocker() throws IOException, InterruptedException, URISyntaxException {\n-    Path jarFile = Paths.get(Resources.getResource(\"simpleJar.jar\").toURI());\n+    Path jarPath = Paths.get(Resources.getResource(\"jarTest/jarWithCp.jar\").toURI());\n     Integer exitCode =\n         new CommandLine(new JibCli())\n-            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarPath.toString());\n     String output = new Command(\"docker\", \"run\", \"--rm\", \"jib-cli-image\").run();\n+    String classPath = null;\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {", "originalCommit": "797ab5e1cef4022b62b23c049c89532edb3318df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NjM5NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524366394", "bodyText": "nit: String classpath = jarFile....\nAlso in the following test.", "author": "chanseokoh", "createdAt": "2020-11-16T15:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTE1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTUxOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523235519", "bodyText": "No need for splitting. I think it can be assertThat(classPath).isEqualTo(\"dependency1.jar;directory/dependency2.jar\"), even without checking not null.\nAnd just double-check that the main in simplJar does use classes in both dependency1.jar and dependency2.jar.", "author": "chanseokoh", "createdAt": "2020-11-13T21:14:12Z", "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -64,11 +68,20 @@ public void testErrorLogging_directoryGiven() throws URISyntaxException {\n \n   @Test\n   public void testJar_toDocker() throws IOException, InterruptedException, URISyntaxException {\n-    Path jarFile = Paths.get(Resources.getResource(\"simpleJar.jar\").toURI());\n+    Path jarPath = Paths.get(Resources.getResource(\"jarTest/jarWithCp.jar\").toURI());\n     Integer exitCode =\n         new CommandLine(new JibCli())\n-            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarPath.toString());\n     String output = new Command(\"docker\", \"run\", \"--rm\", \"jib-cli-image\").run();\n+    String classPath = null;\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      classPath = jarFile.getManifest().getMainAttributes().getValue(Attributes.Name.CLASS_PATH);\n+    }\n+\n+    // Validate classpath before checking output\n+    assertThat(classPath).isNotNull();\n+    List<String> dependencies = Splitter.onPattern(\"\\\\s+\").splitToList(classPath.trim());", "originalCommit": "797ab5e1cef4022b62b23c049c89532edb3318df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTg3Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523235877", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                standardJar.getParent().resolve(Paths.get(\"dependency1\")),\n          \n          \n            \n                                standardJar.getParent().resolve(\"dependency1\"),", "author": "chanseokoh", "createdAt": "2020-11-13T21:15:01Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarFilesTest.java", "diffHunk": "@@ -67,7 +67,8 @@ public void testToJibContainerBuilder_basicInfo()\n         .isEqualTo(\n             FileEntriesLayer.builder()\n                 .addEntry(\n-                    Paths.get(\"dependency1\"), AbsoluteUnixPath.get(\"/app/dependencies/dependency1\"))\n+                    standardJar.getParent().resolve(Paths.get(\"dependency1\")),", "originalCommit": "797ab5e1cef4022b62b23c049c89532edb3318df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3NDU1OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523874558", "bodyText": "Done.", "author": "mpeddada1", "createdAt": "2020-11-16T02:57:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTg3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjEyMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523236123", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .resolve(RelativeUnixPath.get(\"dependencies\"))\n          \n          \n            \n                                    .resolve(\"dependencies\")\n          \n      \n    \n    \n  \n\nand the one above tool.", "author": "chanseokoh", "createdAt": "2020-11-13T21:15:36Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarModeProcessor.java", "diffHunk": "@@ -123,7 +127,10 @@ static JarType determineJarType(Path jarPath) throws IOException {\n         snapshotDependencies.forEach(\n             path ->\n                 snapshotDependenciesLayerBuilder.addEntry(\n-                    path, APP_ROOT.resolve(RelativeUnixPath.get(\"dependencies\")).resolve(path)));\n+                    jarParent.resolve(path),\n+                    APP_ROOT\n+                        .resolve(RelativeUnixPath.get(\"dependencies\"))", "originalCommit": "797ab5e1cef4022b62b23c049c89532edb3318df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTg2Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523239862", "bodyText": "I just realized one thing we are missing. Remember this output? A lot of people will try Jib CLI on a standard JAR without having dependency JARs at all or in right relative locations, and they will just see java.nio.file.NoSuchFileException: some.jar. And they may falsely think Jib CLI is bugged by failing to load its dependency. I think it's very important to check the existence of dependency JARs locally before we delegate to jib-core, and throw an exception (IllegalStateException?) with a detailed message that some dependency JARs of the user app don't exist locally. Doesn't have to be in this PR, but we should not forget this.", "author": "chanseokoh", "createdAt": "2020-11-13T21:23:59Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarModeProcessor.java", "diffHunk": "@@ -108,13 +108,17 @@ static JarType determineJarType(Path jarPath) throws IOException {\n               .collect(Collectors.toList());\n       List<Path> snapshotDependencies =\n           allDependencies.stream().filter(isSnapshot).map(Paths::get).collect(Collectors.toList());\n+      Path jarParent = jarPath.getParent() == null ? Paths.get(\"\") : jarPath.getParent();\n       if (!nonSnapshotDependencies.isEmpty()) {\n         FileEntriesLayer.Builder nonSnapshotDependenciesLayerBuilder =\n             FileEntriesLayer.builder().setName(DEPENDENCIES);\n         nonSnapshotDependencies.forEach(\n             path ->\n                 nonSnapshotDependenciesLayerBuilder.addEntry(\n-                    path, APP_ROOT.resolve(RelativeUnixPath.get(\"dependencies\")).resolve(path)));\n+                    jarParent.resolve(path),", "originalCommit": "797ab5e1cef4022b62b23c049c89532edb3318df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3MTgwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r523871800", "bodyText": "That is a great point! And I agree, checking this earlier + returning a meaningful error message are both super important.", "author": "mpeddada1", "createdAt": "2020-11-16T02:53:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTg2Mg=="}], "type": "inlineReview"}, {"oid": "c39801c2b082fadcd911631c9acb53f9571b2a8d", "url": "https://github.com/GoogleContainerTools/jib/commit/c39801c2b082fadcd911631c9acb53f9571b2a8d", "message": "Throw exception if dependency is not under same parent directory as JAR and cleanup up method to create layers for exploded jar", "committedDate": "2020-11-16T02:41:45Z", "type": "commit"}, {"oid": "3b2be76279e04ce2902c054135b69ee4943ebc7a", "url": "https://github.com/GoogleContainerTools/jib/commit/3b2be76279e04ce2902c054135b69ee4943ebc7a", "message": "small format change in JarFiles test", "committedDate": "2020-11-16T02:58:13Z", "type": "commit"}, {"oid": "d3b23a630c148780fa011cae74109a3bd40cd619", "url": "https://github.com/GoogleContainerTools/jib/commit/d3b23a630c148780fa011cae74109a3bd40cd619", "message": "Formatting tests", "committedDate": "2020-11-16T03:01:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NzM2MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524367361", "bodyText": "Q: why contains? Are there other dependencies?", "author": "chanseokoh", "createdAt": "2020-11-16T15:46:56Z", "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -64,13 +66,36 @@ public void testErrorLogging_directoryGiven() throws URISyntaxException {\n \n   @Test\n   public void testJar_toDocker() throws IOException, InterruptedException, URISyntaxException {\n-    Path jarFile = Paths.get(Resources.getResource(\"simpleJar.jar\").toURI());\n+    Path jarPath = Paths.get(Resources.getResource(\"jarTest/jarWithCp.jar\").toURI());\n     Integer exitCode =\n         new CommandLine(new JibCli())\n-            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarPath.toString());\n     String output = new Command(\"docker\", \"run\", \"--rm\", \"jib-cli-image\").run();\n+    String classPath = null;\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      classPath = jarFile.getManifest().getMainAttributes().getValue(Attributes.Name.CLASS_PATH);\n \n-    assertThat(exitCode).isEqualTo(0);\n-    assertThat(output).isEqualTo(\"Hello World\");\n+      assertThat(classPath).contains(\"dependency1.jar directory/dependency2.jar\");", "originalCommit": "d3b23a630c148780fa011cae74109a3bd40cd619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQwNjM5MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524406391", "bodyText": "Oops, my bad", "author": "mpeddada1", "createdAt": "2020-11-16T16:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NzM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MDI2MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524370261", "bodyText": "if (!Files.exist(jarParent.resolve(depPath)))", "author": "chanseokoh", "createdAt": "2020-11-16T15:50:38Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarModeProcessor.java", "diffHunk": "@@ -173,6 +174,21 @@ static JarType determineJarType(Path jarPath) throws IOException {\n     }\n   }\n \n+  private static void addDependency(\n+      FileEntriesLayer.Builder layerbuilder,\n+      Path depPath,\n+      Path jarParent,\n+      AbsoluteUnixPath pathOnContainer) {\n+    File depFile = new File(jarParent.resolve(depPath).toString());\n+    if (!depFile.exists()) {", "originalCommit": "d3b23a630c148780fa011cae74109a3bd40cd619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQwNjQ4OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524406489", "bodyText": "Done.", "author": "mpeddada1", "createdAt": "2020-11-16T16:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MDI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MzYyNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524373626", "bodyText": "Maybe pass in pathOnContainer is because it's computable here with APP_ROOT.resolve(\"dependencies\").resolve(depPath.getFileName())?", "author": "chanseokoh", "createdAt": "2020-11-16T15:54:29Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarModeProcessor.java", "diffHunk": "@@ -173,6 +174,21 @@ static JarType determineJarType(Path jarPath) throws IOException {\n     }\n   }\n \n+  private static void addDependency(\n+      FileEntriesLayer.Builder layerbuilder,\n+      Path depPath,\n+      Path jarParent,\n+      AbsoluteUnixPath pathOnContainer) {", "originalCommit": "d3b23a630c148780fa011cae74109a3bd40cd619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQwOTM1Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524409352", "bodyText": "Hm I was planning on reusing this helper in #2888, since packaged mode requires a different path on the container. I could directly compute it in here and refactor this method in the next PR if it doesn't make sense in the current context though?", "author": "mpeddada1", "createdAt": "2020-11-16T16:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MzYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQxNDE3Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524414172", "bodyText": "Ah, right. That's OK then.", "author": "chanseokoh", "createdAt": "2020-11-16T16:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MzYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4MDc0Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524380746", "bodyText": "I think this will cause confusion when a dependency is nested. It reads like such a dependency should be in the same parent directory. How about something like\n\"Dependency required by the JAR (as specified in 'Class-Path:' in the JAR manifest) doesn't exist: <full path of jarParent.resolve(depPath)>\"\n? And then we can also pass the full path instead of two argument (depPath and jarParent) to the method. WDYT?", "author": "chanseokoh", "createdAt": "2020-11-16T16:03:39Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarModeProcessor.java", "diffHunk": "@@ -173,6 +174,21 @@ static JarType determineJarType(Path jarPath) throws IOException {\n     }\n   }\n \n+  private static void addDependency(\n+      FileEntriesLayer.Builder layerbuilder,\n+      Path depPath,\n+      Path jarParent,\n+      AbsoluteUnixPath pathOnContainer) {\n+    File depFile = new File(jarParent.resolve(depPath).toString());\n+    if (!depFile.exists()) {\n+      throw new IllegalArgumentException(\n+          String.format(\n+              \"Dependency: %s needs to be in the same parent directory as the JAR.\",\n+              depPath.toString()));", "originalCommit": "d3b23a630c148780fa011cae74109a3bd40cd619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQwNzQ4MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2893#discussion_r524407480", "bodyText": "Oh yeah, that can be really confusing. Passing in the full dependency path is a good idea.", "author": "mpeddada1", "createdAt": "2020-11-16T16:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4MDc0Ng=="}], "type": "inlineReview"}, {"oid": "ac1f17c1cb424ff0a3d5caca898b9bd61046bd38", "url": "https://github.com/GoogleContainerTools/jib/commit/ac1f17c1cb424ff0a3d5caca898b9bd61046bd38", "message": "improve error messaging and format tests", "committedDate": "2020-11-16T16:37:39Z", "type": "commit"}, {"oid": "83a8f68ff2c73d3f84e5e44109c2588d0579259d", "url": "https://github.com/GoogleContainerTools/jib/commit/83a8f68ff2c73d3f84e5e44109c2588d0579259d", "message": "rename test", "committedDate": "2020-11-17T21:31:47Z", "type": "commit"}]}