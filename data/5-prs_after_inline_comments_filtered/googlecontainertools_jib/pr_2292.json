{"pr_number": 2292, "pr_title": "Allow users to configure skaffold data exported from jib to skaffold", "pr_createdAt": "2020-02-12T20:50:47Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2292", "timeline": [{"oid": "2a54dc3a64cbac7b65f738379f8d23e81c02aa02", "url": "https://github.com/GoogleContainerTools/jib/commit/2a54dc3a64cbac7b65f738379f8d23e81c02aa02", "message": "Allow gradle users to configure skaffold data", "committedDate": "2020-02-12T21:29:26Z", "type": "forcePushed"}, {"oid": "f4fa3fead7651c8e4f86164575df204bae19b921", "url": "https://github.com/GoogleContainerTools/jib/commit/f4fa3fead7651c8e4f86164575df204bae19b921", "message": "Allow gradle users to configure skaffold data", "committedDate": "2020-02-12T22:03:44Z", "type": "forcePushed"}, {"oid": "8224c604aa6689ad4d33b14bb3c2c9ada38d6c0e", "url": "https://github.com/GoogleContainerTools/jib/commit/8224c604aa6689ad4d33b14bb3c2c9ada38d6c0e", "message": "add some basic tests", "committedDate": "2020-02-12T22:28:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTMwMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339303", "bodyText": "Does this comment apply when we use Path?", "author": "briandealwis", "createdAt": "2020-02-17T19:26:39Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldSyncParameters {\n+  private final Project project;\n+\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldSyncParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * Get the excludes directive for sync functionality in skaffold.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getExcludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "originalCommit": "3fa279a0bac5f3972d6b0376695df63b03a6552a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyMzg1MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380423850", "bodyText": "Oh yeah this comment was about inputs, copy pasta \ud83d\ude1e  Needs to be removed.", "author": "loosebazooka", "createdAt": "2020-02-18T02:09:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTUwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339500", "bodyText": "Does this apply with Path too? (I don't see any String?)", "author": "briandealwis", "createdAt": "2020-02-17T19:27:23Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {\n+\n+  private final Project project;\n+\n+  private Set<Path> buildIncludes = Collections.emptySet();\n+  private Set<Path> includes = Collections.emptySet();\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldWatchParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getBuildIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return buildIncludes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setBuildIncludes(Object paths) {\n+    this.buildIncludes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "originalCommit": "3fa279a0bac5f3972d6b0376695df63b03a6552a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTY2MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339660", "bodyText": "Does this apply to Path too?  I don't see a String?", "author": "briandealwis", "createdAt": "2020-02-17T19:27:55Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {\n+\n+  private final Project project;\n+\n+  private Set<Path> buildIncludes = Collections.emptySet();\n+  private Set<Path> includes = Collections.emptySet();\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldWatchParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getBuildIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return buildIncludes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setBuildIncludes(Object paths) {\n+    this.buildIncludes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return includes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setIncludes(Object paths) {\n+    this.includes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to exclude from skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getExcludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "originalCommit": "3fa279a0bac5f3972d6b0376695df63b03a6552a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3MTkxNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380771916", "bodyText": "Javadoc", "author": "TadCordle", "createdAt": "2020-02-18T16:06:44Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldParameters.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import com.google.common.base.Preconditions;\n+import javax.inject.Inject;\n+import org.gradle.api.Action;\n+import org.gradle.api.Project;\n+import org.gradle.api.model.ObjectFactory;\n+import org.gradle.api.tasks.Nested;\n+\n+public class SkaffoldParameters {", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3MzkxMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380773911", "bodyText": "Javadoc", "author": "TadCordle", "createdAt": "2020-02-18T16:09:32Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldSyncParameters {", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3NTUxMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380775510", "bodyText": "Javadoc", "author": "TadCordle", "createdAt": "2020-02-18T16:11:56Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380823339", "bodyText": "Is this a debug print or is it actually needed?", "author": "TadCordle", "createdAt": "2020-02-18T17:28:30Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -207,6 +216,8 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     }\n \n     try {\n+      System.out.println(", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3Mjg3MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380872870", "bodyText": "This should've broken the tests... weird.", "author": "loosebazooka", "createdAt": "2020-02-18T19:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzM1Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380873352", "bodyText": "oh maven tests are different than gradle ones... nvm.", "author": "loosebazooka", "createdAt": "2020-02-18T19:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNjY2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380826669", "bodyText": "Javadoc, probably for the inner classes too.", "author": "TadCordle", "createdAt": "2020-02-18T17:34:28Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+public class SkaffoldConfiguration {", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzOTUxMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380839511", "bodyText": "Q: Why not just new HashSet<>()?", "author": "TadCordle", "createdAt": "2020-02-18T17:58:14Z", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +216,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))\n             .forEach(syncMap::addGenerated);\n       } else { // this is a direct layer\n         layer\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))\n             .forEach(syncMap::addDirect);\n       }\n     }\n     return syncMap.getJsonString();\n   }\n \n+  /** Expand directories to files (excludes directory paths). */\n+  static Set<Path> getAllFiles(Set<Path> paths) throws IOException {\n+    Set<Path> expanded = Sets.newHashSet();", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0MjIxNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380842217", "bodyText": "This should work.\n          skaffold.sync(sync -> sync.setExcludes(fakeProject.files(\"sync1\", \"sync2\")));", "author": "chanseokoh", "createdAt": "2020-02-18T18:03:35Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -240,6 +242,38 @@ public void testOutputFiles() {\n         testJibExtension.getOutputPaths().getTarPath());\n   }\n \n+  @Test\n+  public void testSkaffold() {\n+    testJibExtension.skaffold(\n+        skaffold -> {\n+          skaffold.sync(\n+              sync -> {", "originalCommit": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380910730", "bodyText": "I think we can delete this field. It's not being used, since we parse this explicitly in FilesMojoV2.", "author": "chanseokoh", "createdAt": "2020-02-18T20:15:15Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "originalCommit": "b27be3fdbaf8947816287d24268090559ef4f9d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyMTQ4MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380921480", "bodyText": "I went back and forth on that, I think this helps define the structure. Even though we're parsing it manually in Xpp3Dom parser, and never delegate to maven to populate this.", "author": "loosebazooka", "createdAt": "2020-02-18T20:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyMzEyMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380923122", "bodyText": "I really wish we could just do this using our own annotation processor at compile time though.", "author": "loosebazooka", "createdAt": "2020-02-18T20:42:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyNDUzMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380924532", "bodyText": "Yeah, leaving this is OK.\nI remember the reason that we parse this manually in FilesMojoV2 is about running a goal only at root vs. in every sub-module?", "author": "chanseokoh", "createdAt": "2020-02-18T20:45:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyNTg0Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380925843", "bodyText": "Correct, aggregator =  true Mojos cannot populate a parameter for a single module.", "author": "loosebazooka", "createdAt": "2020-02-18T20:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382243102", "bodyText": "So where do includes come in?", "author": "briandealwis", "createdAt": "2020-02-20T20:35:25Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "diffHunk": "@@ -77,7 +77,10 @@ public void listFilesAndTargets() {\n \n       try {\n         String syncMapJson =\n-            PluginConfigurationProcessor.getSkaffoldSyncMap(configuration, projectProperties);\n+            PluginConfigurationProcessor.getSkaffoldSyncMap(\n+                configuration,\n+                projectProperties,\n+                jibExtension.getSkaffold().getSync().getExcludes());", "originalCommit": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0Mzg0NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382243844", "bodyText": "Nm, I forgot the distinction between sync and watch", "author": "briandealwis", "createdAt": "2020-02-20T20:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NjIzMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382246233", "bodyText": "like when are they useful?\nfor user configured modifications\nsome resource -> [user-task] -> output -> [jib-build] -> container\nnormally jib would just watch output, but in reality it should watch some resource,\nso user includes some resource, excludes output", "author": "loosebazooka", "createdAt": "2020-02-20T20:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NjQ1OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382246458", "bodyText": "There is maybe someway to intelligently do this? like decide if output was an actual output to some other task, but I think it's not straightforward.", "author": "loosebazooka", "createdAt": "2020-02-20T20:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382247408", "bodyText": "Hmm, I'm wondering if this works with paths where the project ancestry has symlinks.", "author": "briandealwis", "createdAt": "2020-02-20T20:45:06Z", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +215,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))", "originalCommit": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1MjY4OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382252688", "bodyText": "interesting... I'll check it out.", "author": "loosebazooka", "createdAt": "2020-02-20T20:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NTY3OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382255679", "bodyText": "might have to isSameFile it?", "author": "loosebazooka", "createdAt": "2020-02-20T21:00:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTYzNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382259636", "bodyText": "Ok both ok since they seem to expand the project path.", "author": "briandealwis", "createdAt": "2020-02-20T21:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}], "type": "inlineReview"}, {"oid": "4b7ff2b66845866ddca7970bab62c67727144dcb", "url": "https://github.com/GoogleContainerTools/jib/commit/4b7ff2b66845866ddca7970bab62c67727144dcb", "message": "update docs", "committedDate": "2020-02-20T22:08:00Z", "type": "forcePushed"}, {"oid": "1664f96063025c51545d077bd56c61c8f6ecd576", "url": "https://github.com/GoogleContainerTools/jib/commit/1664f96063025c51545d077bd56c61c8f6ecd576", "message": "Allow gradle users to configure skaffold data", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "d41081c656c344e8c1661e502f4ecdf59bbfa678", "url": "https://github.com/GoogleContainerTools/jib/commit/d41081c656c344e8c1661e502f4ecdf59bbfa678", "message": "add some basic tests", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "ae2d998c002b04b23f49bc8101a4d5aff0b819cb", "url": "https://github.com/GoogleContainerTools/jib/commit/ae2d998c002b04b23f49bc8101a4d5aff0b819cb", "message": "formatting", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "b4878d61623aab066e4d76c29029eac5e384066e", "url": "https://github.com/GoogleContainerTools/jib/commit/b4878d61623aab066e4d76c29029eac5e384066e", "message": "more tests + maven configs", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "4e803e757d30ca8b29c942ccd907d11231a6642c", "url": "https://github.com/GoogleContainerTools/jib/commit/4e803e757d30ca8b29c942ccd907d11231a6642c", "message": "windows file paths", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "aafd63aafde54d65fe702ab350aa93488560d26d", "url": "https://github.com/GoogleContainerTools/jib/commit/aafd63aafde54d65fe702ab350aa93488560d26d", "message": "More testing", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "0f634d0242bbb12ed45a4fe798b5b7a69af2d5a5", "url": "https://github.com/GoogleContainerTools/jib/commit/0f634d0242bbb12ed45a4fe798b5b7a69af2d5a5", "message": "Remove unnecessary comment", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "14edff9ff9d0c6a40c3f35c8dfe97042cc0a68ca", "url": "https://github.com/GoogleContainerTools/jib/commit/14edff9ff9d0c6a40c3f35c8dfe97042cc0a68ca", "message": "fixes", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "3e1339415732240d4086b29a290056d5572264d4", "url": "https://github.com/GoogleContainerTools/jib/commit/3e1339415732240d4086b29a290056d5572264d4", "message": "formatting and comments", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "29f21b9aba5ae5a65ea35bcab00953ee76a2b5ec", "url": "https://github.com/GoogleContainerTools/jib/commit/29f21b9aba5ae5a65ea35bcab00953ee76a2b5ec", "message": "update docs", "committedDate": "2020-02-20T22:40:51Z", "type": "commit"}, {"oid": "6227754f2f2c4eff68e8ce69f7af2b6a7eb344c6", "url": "https://github.com/GoogleContainerTools/jib/commit/6227754f2f2c4eff68e8ce69f7af2b6a7eb344c6", "message": "rebase with master and update checkstyle errors", "committedDate": "2020-02-20T22:42:49Z", "type": "commit"}, {"oid": "6227754f2f2c4eff68e8ce69f7af2b6a7eb344c6", "url": "https://github.com/GoogleContainerTools/jib/commit/6227754f2f2c4eff68e8ce69f7af2b6a7eb344c6", "message": "rebase with master and update checkstyle errors", "committedDate": "2020-02-20T22:42:49Z", "type": "forcePushed"}, {"oid": "cac13c5d9dd8044b3de3138fe211c90783e43569", "url": "https://github.com/GoogleContainerTools/jib/commit/cac13c5d9dd8044b3de3138fe211c90783e43569", "message": "revert changes from readme", "committedDate": "2020-02-20T22:53:38Z", "type": "commit"}, {"oid": "d4a6ed8d5a52b1b9512f506db9f6eac6b565dada", "url": "https://github.com/GoogleContainerTools/jib/commit/d4a6ed8d5a52b1b9512f506db9f6eac6b565dada", "message": "wording", "committedDate": "2020-02-20T22:57:42Z", "type": "commit"}, {"oid": "0dc1b8d352444ec8ea5380043fb39043d265e539", "url": "https://github.com/GoogleContainerTools/jib/commit/0dc1b8d352444ec8ea5380043fb39043d265e539", "message": "Update jib-maven-plugin/CHANGELOG.md\n\nCo-Authored-By: Tad Cordle <tcordle@google.com>", "committedDate": "2020-02-21T16:23:20Z", "type": "commit"}, {"oid": "98e5098f7526cdcba045eecd811669d7baaf207c", "url": "https://github.com/GoogleContainerTools/jib/commit/98e5098f7526cdcba045eecd811669d7baaf207c", "message": "Update jib-gradle-plugin/CHANGELOG.md\n\nCo-Authored-By: Tad Cordle <tcordle@google.com>", "committedDate": "2020-02-21T16:23:28Z", "type": "commit"}]}