{"pr_number": 2381, "pr_title": "Correctly parse ImageReference with both tag and digest", "pr_createdAt": "2020-04-02T17:00:22Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2381", "timeline": [{"oid": "1564136ef0bc6769020180e96a63c8f221950646", "url": "https://github.com/GoogleContainerTools/jib/commit/1564136ef0bc6769020180e96a63c8f221950646", "message": "Correctly parse ImageReference with both tag and digest", "committedDate": "2020-04-02T16:55:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402534574", "bodyText": "I think the purpose of this method is to ensure :latest is added. I don't think toString() will add :latest.", "author": "chanseokoh", "createdAt": "2020-04-02T18:45:43Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -346,6 +387,10 @@ public String toString() {\n    * @return the image reference in Docker-readable format, without hiding the tag\n    */\n   public String toStringWithTag() {\n+    // Insert tag before digest\n+    if (!Strings.isNullOrEmpty(digest)) {\n+      return toString();", "originalCommit": "1564136ef0bc6769020180e96a63c8f221950646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MTIwNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402541206", "bodyText": "I'll have to check how it's used in the rest of the codebase, but this is used for the offline mode cache directory structure. So if we add \"latest\" here, people may need to repopulate their cache.", "author": "TadCordle", "createdAt": "2020-04-02T18:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0OTk2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402549969", "bodyText": "Ugh, the offline manifest caching! So we want this to be more like toStringWithTagOrDigest() where a digest takes precedence, right? The naming is a bit unfortunate. toStringWithTag doesn't make sense and is confusing. Should we just create a new method? I wish we could create an internal-only method for the offline caching.", "author": "chanseokoh", "createdAt": "2020-04-02T19:11:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4OTEzOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402589138", "bodyText": "Maybe I'll deprecate this and copy it into a method with a new name. I'm not sure about toStringWithTagOrDigest() though. Is there a word that covers both tag and digest? Maybe toStringWithIdentifier() or something along those lines?", "author": "TadCordle", "createdAt": "2020-04-02T20:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0Mzg1OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r403043858", "bodyText": "Whether or not we deprecate this method, I think this method should be updated to fulfill the documented contract so that it returns registry/repository:latest@sha256... when both a tag and a digest are given. Given the name toStringWithTag(), returning registry/repository@sha256... doesn't look right to me.\nI'm struggling with the name for the new method too. I don't think there's a good name to cover both tag and digest. This grammar description may be worth checking, although I don't know where the description came from. At least toStringWithQualifier sounds better than \"identifier\".\nAnyways, maybe we should mark the new method as \"internal\"\u2013the purpose is too specific to our use-case. @loosebazooka had some discussions around how we could add internal methods to our public API, but we couldn't find a good solution. The best I could do was to document it.", "author": "chanseokoh", "createdAt": "2020-04-03T14:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NDg5Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r403054896", "bodyText": "Given the name toStringWithTag(), returning registry/repository@sha256... doesn't look right to me.\n\nThe problem is that this was what the old behavior was, regardless of whether or not the naming was correct, since we were treating digests as tags. Is it more important to preserve old behavior in this case or change the behavior to better match the name?", "author": "TadCordle", "createdAt": "2020-04-03T14:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI1MzA4NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r403253085", "bodyText": "For preserving the old behavior, we can create a new method, as we have been discussing? In other words, it's basically like we don't touch toStringWithTag() but change the name to something else.\nAnd I think it was really a mistake that we treated digest as \"tag.\" Really, this isn't right. A tag is a tag. Looks like it's about time to make things correct, as we enable both tag and digest. I see a sentence like \"uses a SHA-256 digest as its tag\" or \"When the tag is a digest\" and in Javadocs. They don't make sense. The method isTagDigest doesn't make sense either, so I feel like we should deprecate (rename) it. Given that we will now treat tag and digest differently in the constructor, which surfaces our mishandling of these elements, I think it is important to have consistency and correctness.\nWDYT?", "author": "chanseokoh", "createdAt": "2020-04-03T19:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1NzgyMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404257822", "bodyText": "Ok, I think given jib-core still isn't GA, we can just rename the method now instead of having to deprecate.", "author": "TadCordle", "createdAt": "2020-04-06T17:17:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNDU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNTM2MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402535361", "bodyText": "I know digest is of Optional, but is this different from digest.equals(otherImageReference.digest)?", "author": "chanseokoh", "createdAt": "2020-04-02T18:47:09Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -360,11 +405,12 @@ public boolean equals(Object other) {\n     ImageReference otherImageReference = (ImageReference) other;\n     return registry.equals(otherImageReference.registry)\n         && repository.equals(otherImageReference.repository)\n-        && tag.equals(otherImageReference.tag);\n+        && tag.equals(otherImageReference.tag)\n+        && Objects.equals(digest, otherImageReference.digest);", "originalCommit": "1564136ef0bc6769020180e96a63c8f221950646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MTU2OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r402541568", "bodyText": "digest is a @Nullable string, so Objects.equals is used here to avoid NPE", "author": "TadCordle", "createdAt": "2020-04-02T18:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNTM2MQ=="}], "type": "inlineReview"}, {"oid": "b45f03c8663bb228320dd9632f69f6e76487e98d", "url": "https://github.com/GoogleContainerTools/jib/commit/b45f03c8663bb228320dd9632f69f6e76487e98d", "message": "Comments and tentative method rename", "committedDate": "2020-04-02T20:40:15Z", "type": "commit"}, {"oid": "7636641ec50195b638633c441451b3d428a3b4e4", "url": "https://github.com/GoogleContainerTools/jib/commit/7636641ec50195b638633c441451b3d428a3b4e4", "message": "Rename", "committedDate": "2020-04-06T17:17:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQzNzAyOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404437029", "bodyText": "I think we should call this qualifier, considering the new constructor that accepts both tag and digest. I am OK with tagOrDigest too. And the doc could be \"the image tag, digest, or null to use the default tag latest\". We can then remove the part \"If tag is a valid digest string...\". I really think we should not call a digest \"tag\".", "author": "chanseokoh", "createdAt": "2020-04-06T22:56:00Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -157,22 +151,42 @@ public static ImageReference parse(String reference) throws InvalidImageReferenc\n    *\n    * @param registry the image registry, or {@code null} to use the default registry (Docker Hub)\n    * @param repository the image repository\n-   * @param tag the image tag, or {@code null} to use the default tag ({@code latest})\n+   * @param tag the image tag, or {@code null} to use the default tag ({@code latest}). If {@code", "originalCommit": "7636641ec50195b638633c441451b3d428a3b4e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQzOTg1OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404439859", "bodyText": "I actually think we can call of(registry, repository, tag, digest) here and get rid of some if checks in this method, as parse() and of() duplicate some logic. But let's not touch this method anymore in this PR to be on the safe side.", "author": "chanseokoh", "createdAt": "2020-04-06T23:03:38Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -137,18 +138,11 @@ public static ImageReference parse(String reference) throws InvalidImageReferenc\n       repository = LIBRARY_REPOSITORY_PREFIX + repository;\n     }\n \n-    if (!Strings.isNullOrEmpty(tag)) {\n-      if (!Strings.isNullOrEmpty(digest)) {\n-        // Cannot have matched both tag and digest.\n-        throw new InvalidImageReferenceException(reference);\n-      }\n-    } else if (!Strings.isNullOrEmpty(digest)) {\n-      tag = digest;\n-    } else {\n+    if (Strings.isNullOrEmpty(tag)) {\n       tag = DEFAULT_TAG;\n     }\n \n-    return new ImageReference(registry, repository, tag);\n+    return new ImageReference(registry, repository, tag, digest);", "originalCommit": "7636641ec50195b638633c441451b3d428a3b4e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MTAyOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404441028", "bodyText": "Remove this comment.\nBTW, I think it is correct that this method prints both a (non-default) tag and a digest.", "author": "chanseokoh", "createdAt": "2020-04-06T23:06:44Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -334,18 +360,27 @@ public String toString() {\n     // Use tag if not the default tag.\n     if (!DEFAULT_TAG.equals(tag)) {\n       // Append with \"@tag\" instead of \":tag\" if tag is a digest", "originalCommit": "7636641ec50195b638633c441451b3d428a3b4e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404442398", "bodyText": "Hmm... so if both a digest and a non-default tag are given, now toStringWithQualifier() will print both. Are we good with that?", "author": "chanseokoh", "createdAt": "2020-04-06T23:10:39Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java", "diffHunk": "@@ -334,18 +360,27 @@ public String toString() {\n     // Use tag if not the default tag.\n     if (!DEFAULT_TAG.equals(tag)) {\n       // Append with \"@tag\" instead of \":tag\" if tag is a digest\n-      referenceString.append(isTagDigest() ? '@' : ':').append(tag);\n+      referenceString.append(':').append(tag);\n+    }\n+\n+    if (!Strings.isNullOrEmpty(digest)) {\n+      referenceString.append('@').append(digest);\n     }\n \n     return referenceString.toString();\n   }\n \n   /**\n-   * Stringifies the {@link ImageReference}, without hiding the tag.\n+   * Stringifies the {@link ImageReference}, including the default tag if no tag or digest is set.\n    *\n-   * @return the image reference in Docker-readable format, without hiding the tag\n+   * @return the image reference in Docker-readable format, including the default tag if no tag or\n+   *     digest is set.\n    */\n-  public String toStringWithTag() {\n+  public String toStringWithQualifier() {\n+    // Insert tag before digest\n+    if (!Strings.isNullOrEmpty(digest)) {", "originalCommit": "7636641ec50195b638633c441451b3d428a3b4e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5NDAzMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404894031", "bodyText": "Yes, I think this is correct.", "author": "TadCordle", "createdAt": "2020-04-07T15:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxMjQ3NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404912475", "bodyText": "Just confirming: if so (e.g., returning image:sometag@sha256...), isn't it more natural for this method to consistently return image:latest@sha256... when the tag is latest? Currently, it returns image@sha256.... But if the intention is to make it return at least a tag or a digest, I can live with that. However, it's hard to predict the behavior just by reading the Javadoc.", "author": "chanseokoh", "createdAt": "2020-04-07T15:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkyMzU5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404923599", "bodyText": "Yes, this is intended. Maybe always returning a tag would be more consistent, but again this is used in offline mode and we don't want to start returning image:latest@sha256 or people will need to repopulate the cache.\nimage:sometag@sha256 wasn't possible before this PR, so in this case we could go either way. Maybe digest should just take precedence over tag instead of returning both?", "author": "TadCordle", "createdAt": "2020-04-07T15:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MTk3OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404951978", "bodyText": "Maybe digest should just take precedence over tag instead of returning both?\n\nI actually liked this. That is, this method appends a digest (image@sha256) if (and only if) it's set; otherwise, it appends a tag, including latest.\nThat said, I just realized some issue with our assumption with latest. It is indeed true that latest is assumed when no tag or digest is given. And so tar, we were okay, as it was not possible to have a digest and a tag at the same time. But what if the user simply referred to a base image only by a digest? In many cases, on an actual repository, the manifest would not be attached a latest tag. The question is then, would it make sense for toString() to append an unwarranted :latest that is possibly incorrect in practice? Perhaps if a digest is given but not a tag, we shouldn't assume the tag is latest?", "author": "chanseokoh", "createdAt": "2020-04-07T16:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NzE5Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404957197", "bodyText": "In that case should tag be null if a digest is set? Seems like it will need more changes outside of this method.", "author": "TadCordle", "createdAt": "2020-04-07T16:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NzE3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404997174", "bodyText": "Agreed. I'm more convinced that latest is the default value only when nothing is given. When a digest is given, it doesn't make sense to add latest.", "author": "chanseokoh", "createdAt": "2020-04-07T17:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5OTUxNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r404999515", "bodyText": "Ok. Do you think we should make tag null when the digest is set in this PR, or wait for a followup? I'm not yet sure how many extra changes making tag nullable might involve.", "author": "TadCordle", "createdAt": "2020-04-07T17:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNjY2NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r405006665", "bodyText": "If you are committed to fix all these in a quick succession, I am fine with a follow-up. At least it should be fixed before we can make a new release. Do you think this PR is ready for merging?", "author": "chanseokoh", "createdAt": "2020-04-07T18:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNzYxMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r405007613", "bodyText": "I haven't checked this yet, but other than that, yeah I think it's ready.", "author": "TadCordle", "createdAt": "2020-04-07T18:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMzkwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2381#discussion_r405013900", "bodyText": "Alright. I think checking that also depends on how we assume latest, so we can check it in a follow-up.", "author": "chanseokoh", "createdAt": "2020-04-07T18:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MjM5OA=="}], "type": "inlineReview"}, {"oid": "853bad7583d9df905985810a89ac48becc89a35b", "url": "https://github.com/GoogleContainerTools/jib/commit/853bad7583d9df905985810a89ac48becc89a35b", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into i1481-imagereference-tag-digest", "committedDate": "2020-04-07T15:12:15Z", "type": "commit"}, {"oid": "91614c2d958ef79b2fe30220aa2c424076e00978", "url": "https://github.com/GoogleContainerTools/jib/commit/91614c2d958ef79b2fe30220aa2c424076e00978", "message": "Feedback", "committedDate": "2020-04-07T15:26:34Z", "type": "commit"}, {"oid": "f294908c4fcd71144a84114b3221da684dcf8960", "url": "https://github.com/GoogleContainerTools/jib/commit/f294908c4fcd71144a84114b3221da684dcf8960", "message": "Give digest priority in toStringWithQualifier", "committedDate": "2020-04-07T17:41:15Z", "type": "commit"}]}