{"pr_number": 2641, "pr_title": "Single Platform Specification Support", "pr_createdAt": "2020-07-29T16:51:55Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2641", "timeline": [{"oid": "fe24c0aa3c728e444cf3ebe4f747405b3d230828", "url": "https://github.com/GoogleContainerTools/jib/commit/fe24c0aa3c728e444cf3ebe4f747405b3d230828", "message": "Make Jib support a single platform specification", "committedDate": "2020-07-29T16:50:16Z", "type": "commit"}, {"oid": "678b28fa9d02f7b702da4bf9138408a48b36c504", "url": "https://github.com/GoogleContainerTools/jib/commit/678b28fa9d02f7b702da4bf9138408a48b36c504", "message": "Adding Test for one-platform build", "committedDate": "2020-07-29T18:45:04Z", "type": "commit"}, {"oid": "1aaa437a4c1471af8ecd04c1e432aca4ea35196c", "url": "https://github.com/GoogleContainerTools/jib/commit/1aaa437a4c1471af8ecd04c1e432aca4ea35196c", "message": "Style Fix", "committedDate": "2020-07-29T18:48:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjUwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2641#discussion_r462522501", "bodyText": "Generally you should limit the scope of try { } catch for this type of exception-checking tests, because theoretically other code (e.g., ImageConfiguration.build()) may also throw UnsupportedOperationException. We are checking the exception message which is very specific, but in the worst case, it's possible that a test becomes useless to catch a bug if the test doesn't check the message or the message is very generic.\n      ImageConfiguration imageConfiguration =\n          ImageConfiguration.builder(ImageReference.parse(\"base/image\")).build();\n      JibContainerBuilder containerBuilder = new JibContainerBuilder(imageConfiguration, spyBuildContextBuilder)\n          .setPlatforms(\n              ImmutableSet.of(\n                  new Platform(\"testArchitecture\", \"testOS\"),\n                  new Platform(\"testArchitecture1\", \"testOS2\")))\n    Containerizer containerizer = ...\n    try {\n          containerBuilder.containerize(containerizer);\nand I guess new Platform(\"arch1\", \"os1\"), new Platform(\"arch2\", \"os2\") could save a few lines (which isn't important at all but I think it's an easy way to save some of the expensive screen-estate).", "author": "chanseokoh", "createdAt": "2020-07-29T19:04:42Z", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/JibContainerBuilderTest.java", "diffHunk": "@@ -362,4 +363,23 @@ public void setApplyContainerBuildPlan()\n     Assert.assertEquals(\n         ImmutableSet.of(new Platform(\"testArchitecture\", \"testOS\")), convertedPlan.getPlatforms());\n   }\n+\n+  @Test\n+  public void testContainerize_multiPlatformsList()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, InterruptedException,\n+          RegistryException, IOException, ExecutionException {\n+    try {\n+      ImageConfiguration imageConfiguration =\n+          ImageConfiguration.builder(ImageReference.parse(\"base/image\")).build();\n+      new JibContainerBuilder(imageConfiguration, spyBuildContextBuilder)\n+          .setPlatforms(\n+              ImmutableSet.of(\n+                  new Platform(\"testArchitecture\", \"testOS\"),\n+                  new Platform(\"testArchitecture1\", \"testOS2\")))\n+          .containerize(Containerizer.to(RegistryImage.named(\"target/image\")));", "originalCommit": "1aaa437a4c1471af8ecd04c1e432aca4ea35196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NzI1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2641#discussion_r462547257", "bodyText": "Good Catch", "author": "louismurerwa", "createdAt": "2020-07-29T19:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjUwMQ=="}], "type": "inlineReview"}, {"oid": "50157bbd874564a7db2cbe14b5c87579847659f9", "url": "https://github.com/GoogleContainerTools/jib/commit/50157bbd874564a7db2cbe14b5c87579847659f9", "message": "Fix Testing", "committedDate": "2020-07-29T19:51:14Z", "type": "commit"}]}