{"pr_number": 458, "pr_title": "Map Json string to Object instead of HashMap", "pr_createdAt": "2020-06-23T16:59:09Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/458", "timeline": [{"oid": "6157ccac5ecc706739b1d0ce1fb69141bee9013c", "url": "https://github.com/HubSpot/jinjava/commit/6157ccac5ecc706739b1d0ce1fb69141bee9013c", "message": "Map Json string to JsonNode instead of HashMap", "committedDate": "2020-06-23T16:48:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMzE4OQ==", "url": "https://github.com/HubSpot/jinjava/pull/458#discussion_r444403189", "bodyText": "I think a better option for these tests is to render a jinjava template directly. See https://github.com/HubSpot/jinjava/blob/master/src/test/java/com/hubspot/jinjava/lib/filter/MinusTimeFilterTest.java#L37 as an example. That way we can make sure the API from Jinjava perspective is the same: for example: {% set obj = test|fromjson %} {{ obj.property }}", "author": "mattcoley", "createdAt": "2020-06-23T17:51:02Z", "path": "src/test/java/com/hubspot/jinjava/lib/filter/FromJsonFilterTest.java", "diffHunk": "@@ -46,21 +48,73 @@ public void itFailsWhenParameterIsNotString() {\n     filter.filter(nestedJson, interpreter);\n   }\n \n+  @Test\n+  public void itReadsEmptyJsonObjectString() {\n+    JsonNode node = (JsonNode) filter.filter(EMPTY_JSON_OBJECT, interpreter);\n+    assertThat(node.elements().hasNext()).isEqualTo(false);\n+  }\n+\n+  @Test\n+  public void itReadsStringAsObject() {\n+    JsonNode node = (JsonNode) filter.filter(NESTED_JSON, interpreter);\n+\n+    checkNestedJson(node);\n+  }\n+\n   @Test\n   public void itReadsSafeStringAsObject() {\n     SafeString nestedJson = new SafeString(NESTED_JSON);\n-    HashMap<String, Object> node = (HashMap<String, Object>) filter.filter(\n-      nestedJson,\n-      interpreter\n-    );\n-    checkedNestJson(node);\n+    JsonNode node = (JsonNode) filter.filter(nestedJson, interpreter);\n+\n+    checkNestedJson(node);\n   }\n \n-  private void checkedNestJson(HashMap<String, Object> node) {\n-    assertThat(node.get(\"first\")).isEqualTo(Arrays.asList(1, 2, 3));\n+  @Test\n+  public void itReadsEmptyJsonArrayString() {", "originalCommit": "6157ccac5ecc706739b1d0ce1fb69141bee9013c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d7a628a54b84b6cb6ef53b31fa9fcd863683a3bc", "url": "https://github.com/HubSpot/jinjava/commit/d7a628a54b84b6cb6ef53b31fa9fcd863683a3bc", "message": "Map Json string to Object instead of JsonNode, rewrite tests", "committedDate": "2020-06-23T20:40:48Z", "type": "commit"}, {"oid": "266e7700c00a7104c9c84b0f26ae20f015bf68bc", "url": "https://github.com/HubSpot/jinjava/commit/266e7700c00a7104c9c84b0f26ae20f015bf68bc", "message": "Trigger", "committedDate": "2020-06-25T14:26:40Z", "type": "commit"}, {"oid": "5a7713018a58e459af8458c47303de9f17fc1323", "url": "https://github.com/HubSpot/jinjava/commit/5a7713018a58e459af8458c47303de9f17fc1323", "message": "Travis: wait for maven", "committedDate": "2020-06-25T16:35:46Z", "type": "commit"}]}