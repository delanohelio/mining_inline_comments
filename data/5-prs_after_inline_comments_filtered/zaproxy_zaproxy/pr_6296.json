{"pr_number": 6296, "pr_title": "Add auth header define in envvars", "pr_createdAt": "2020-11-13T16:41:46Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/6296", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MTUzNg==", "url": "https://github.com/zaproxy/zaproxy/pull/6296#discussion_r523971536", "bodyText": "or empty?", "author": "thc202", "createdAt": "2020-11-16T08:36:23Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/authentication/HttpSenderAuthHeaderListener.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.authentication;\n+\n+import org.parosproxy.paros.network.HttpHeader;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.parosproxy.paros.network.HttpSender;\n+import org.zaproxy.zap.network.HttpSenderListener;\n+\n+class HttpSenderAuthHeaderListener implements HttpSenderListener {\n+\n+    private final String authHeaderValue;\n+    private final String authHeader;\n+    private final String authHeaderSite;\n+\n+    public HttpSenderAuthHeaderListener() {\n+        authHeaderValue = System.getenv(\"ZAP_AUTH_HEADER_VALUE\");\n+        String authHeaderVar = System.getenv(\"ZAP_AUTH_HEADER\");\n+        if (authHeaderVar == null) {", "originalCommit": "d886e8a7d5625e4dd9e599cbe54311daacc76515", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbbd668a3a8abcf9f5279e6f0b0350002cb45c6c", "url": "https://github.com/zaproxy/zaproxy/commit/dbbd668a3a8abcf9f5279e6f0b0350002cb45c6c", "message": "Add auth header define in envvars\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-11-16T12:21:40Z", "type": "forcePushed"}, {"oid": "2556e722a3d9146519ab3fde0282f1ff40ffa96e", "url": "https://github.com/zaproxy/zaproxy/commit/2556e722a3d9146519ab3fde0282f1ff40ffa96e", "message": "Add auth header define in envvars\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-11-16T12:48:50Z", "type": "commit"}, {"oid": "2556e722a3d9146519ab3fde0282f1ff40ffa96e", "url": "https://github.com/zaproxy/zaproxy/commit/2556e722a3d9146519ab3fde0282f1ff40ffa96e", "message": "Add auth header define in envvars\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-11-16T12:48:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDkzMg==", "url": "https://github.com/zaproxy/zaproxy/pull/6296#discussion_r524390932", "bodyText": "Wow, I was not aware we could pass functions as parameters, that's so cool!", "author": "ricekot", "createdAt": "2020-11-16T16:17:25Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/authentication/HttpSenderAuthHeaderListener.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.authentication;\n+\n+import java.util.function.Function;\n+import org.parosproxy.paros.network.HttpHeader;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.parosproxy.paros.network.HttpSender;\n+import org.zaproxy.zap.network.HttpSenderListener;\n+\n+class HttpSenderAuthHeaderListener implements HttpSenderListener {\n+\n+    public static final String ZAP_AUTH_HEADER_VALUE = \"ZAP_AUTH_HEADER_VALUE\";\n+    public static final String ZAP_AUTH_HEADER = \"ZAP_AUTH_HEADER\";\n+    public static final String ZAP_AUTH_HEADER_SITE = \"ZAP_AUTH_HEADER_SITE\";\n+\n+    private final String authHeaderValue;\n+    private final String authHeader;\n+    private final String authHeaderSite;\n+\n+    public HttpSenderAuthHeaderListener(Function<String, String> propertyProvider) {", "originalCommit": "2556e722a3d9146519ab3fde0282f1ff40ffa96e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}