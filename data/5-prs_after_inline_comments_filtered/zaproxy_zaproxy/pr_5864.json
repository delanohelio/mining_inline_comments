{"pr_number": 5864, "pr_title": "Add buttons to select the file types ignored on Break", "pr_createdAt": "2020-02-14T11:30:05Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/5864", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk1MDMzNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r381950335", "bodyText": "These are no longer needed?", "author": "thc202", "createdAt": "2020-02-20T11:47:58Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointManagementInterface.java", "diffHunk": "@@ -30,6 +30,12 @@\n \n     boolean isBreakAll();\n \n+    boolean isBreakOnJavaScript();", "originalCommit": "9275f6984f88cbfefa63b549352da3697f529f45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIwNjQyNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r383206425", "bodyText": "They aren't needed anymore. Should I remover them? What about The API ?", "author": "DiogoMRSilva", "createdAt": "2020-02-24T11:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk1MDMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3MzQ2OA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r416573468", "bodyText": "You mean the ZAP API? I'd expect the respective implementations to provide endpoints to add/remove the ignored rules.", "author": "thc202", "createdAt": "2020-04-28T12:31:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk1MDMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MjAyMQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442742021", "bodyText": "Should be removed, not actually used.", "author": "thc202", "createdAt": "2020-06-19T09:47:11Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanel.java", "diffHunk": "@@ -96,6 +97,8 @@\n      */\n     private int currentButtonMode;\n \n+    private boolean showButtonsState = false;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MjI1Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442742256", "bodyText": "We should add these as an internal API for now.", "author": "thc202", "createdAt": "2020-06-19T09:47:38Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanel.java", "diffHunk": "@@ -509,6 +512,24 @@ public void setButtonMode(int mode) {\n         responseBreakButtons.setButtonMode(mode);\n     }\n \n+    public void setShowIgnoreFilesButtons(boolean showButtons) {", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0ODQ0Mg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443148442", "bodyText": "It needs to be at least protected because it is used in ExtensionBreak", "author": "DiogoMRSilva", "createdAt": "2020-06-20T17:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MjI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MjMxNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r447542315", "bodyText": "Better with package though.", "author": "thc202", "createdAt": "2020-06-30T09:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MjI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MTE2Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442751166", "bodyText": "We should be consistent with naming, either Js or JavaScript (former?).", "author": "thc202", "createdAt": "2020-06-19T10:05:34Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanel.java", "diffHunk": "@@ -521,11 +542,19 @@ public void setButtonMode(int mode) {\n         private final JToggleButton requestButton;\n         private final JToggleButton responseButton;\n         private final JToggleButton allButton;\n+        private final JToggleButton brkOnJsButton;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyODQxNw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443128417", "bodyText": "I think that JavaScript Is better. I will rename the one with Js", "author": "DiogoMRSilva", "createdAt": "2020-06-20T12:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MTE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MTIzNg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442751236", "bodyText": "Css", "author": "thc202", "createdAt": "2020-06-19T10:05:41Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanel.java", "diffHunk": "@@ -521,11 +542,19 @@ public void setButtonMode(int mode) {\n         private final JToggleButton requestButton;\n         private final JToggleButton responseButton;\n         private final JToggleButton allButton;\n+        private final JToggleButton brkOnJsButton;\n+        private final JToggleButton brkOnCSSAndFontsButton;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzIxNg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442753216", "bodyText": "Might worth adding a separator before this one and before the scope button, as they have opposite behaviour.", "author": "thc202", "createdAt": "2020-06-19T10:09:53Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanel.java", "diffHunk": "@@ -541,6 +570,10 @@ public BreakButtonsUI(String name, BreakPanelToolbarFactory breakToolbarFactory)\n             toolBar.add(breakToolbarFactory.getBtnContinue());\n             toolBar.add(breakToolbarFactory.getBtnDrop());\n             toolBar.add(breakToolbarFactory.getBtnBreakPoint());\n+            toolBar.add(brkOnJsButton);", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyOTM2NA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443129364", "bodyText": "Yes it makes sense", "author": "DiogoMRSilva", "createdAt": "2020-06-20T13:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzQ1MQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442753451", "bodyText": "This should be replaced with the use of the existing option (BreakpointsParam#isInScopeOnly()), otherwise we might end up with conflicting/misleading state, one set to break and the other unset.", "author": "thc202", "createdAt": "2020-06-19T10:10:25Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -56,18 +62,34 @@\n     private BreakResponsesButtonAction breakResponsesButtonAction;\n     private BreakAllButtonAction breakAllButtonAction;\n \n+    private SetBreakOnJavaScriptAction setBreakOnJavaScriptAction;\n+    private SetBreakOnCSSAndFontsAction setBreakOnCSSAndFontsAction;\n+    private SetBreakOnMultimediaAction setBreakOnMultimediaAction;\n+    private SetBreakOnlyOnScopeAction setOnlyBreakOnScopeAction;\n+\n     private boolean cont = false;\n     private boolean step = false;\n     private boolean stepping = false;\n     private boolean drop = false;\n     private boolean isBreakRequest = false;\n     private boolean isBreakResponse = false;\n     private boolean isBreakAll = false;\n+    private boolean isBreakOnJavaScript = true;\n+    private boolean isBreakOnCSSAndFonts = true;\n+    private boolean isBreakOnMultimedia = true;\n+    private boolean isOnlyBreakOnScope = false;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NDQyMQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443244421", "bodyText": "ok. Should I also add isBreakOnJavaScript, isBreakOnCSSAndFonts and isBreakOnMultimedia to the  breakpointsParams, or I should only remove the isOnlyBreakOnScope?\nI didn't want to persist these options between session, maybe the inScopeOnly param should be removed from the BreakpointsParam instead.", "author": "DiogoMRSilva", "createdAt": "2020-06-21T18:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzQ1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MjI3Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r447542276", "bodyText": "I don't think they need to be persisted, so fine leaving them here.\n\nmaybe the inScopeOnly param should be removed from the BreakpointsParam instead.\n\nThere are other scope related options (e.g. passive scan just in scope) that are persisted, it would be better to preserve the current behaviour.", "author": "thc202", "createdAt": "2020-06-30T09:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzYyMw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442753623", "bodyText": "private", "author": "thc202", "createdAt": "2020-06-19T10:10:50Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -56,18 +62,34 @@\n     private BreakResponsesButtonAction breakResponsesButtonAction;\n     private BreakAllButtonAction breakAllButtonAction;\n \n+    private SetBreakOnJavaScriptAction setBreakOnJavaScriptAction;\n+    private SetBreakOnCSSAndFontsAction setBreakOnCSSAndFontsAction;\n+    private SetBreakOnMultimediaAction setBreakOnMultimediaAction;\n+    private SetBreakOnlyOnScopeAction setOnlyBreakOnScopeAction;\n+\n     private boolean cont = false;\n     private boolean step = false;\n     private boolean stepping = false;\n     private boolean drop = false;\n     private boolean isBreakRequest = false;\n     private boolean isBreakResponse = false;\n     private boolean isBreakAll = false;\n+    private boolean isBreakOnJavaScript = true;\n+    private boolean isBreakOnCSSAndFonts = true;\n+    private boolean isBreakOnMultimedia = true;\n+    private boolean isOnlyBreakOnScope = false;\n \n     private BreakPanel breakPanel = null;\n \n     private BreakpointsParam breakpointsParams;\n     private int mode = 0;\n+    private boolean showButtonsState = false;\n+\n+    private List<BreakpointMessageInterface> ignoreRulesEnable;\n+    HttpBreakpointMessage ignoreJavascriptBreakpointMessage;\n+    HttpBreakpointMessage ignoreCSSAndFontsBreakpointMessage;\n+    HttpBreakpointMessage ignoreMultimediaBreakpointMessage;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzY3Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442753677", "bodyText": "This should not be needed, per previous comment about the existing option.", "author": "thc202", "createdAt": "2020-06-19T10:10:57Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -56,18 +62,34 @@\n     private BreakResponsesButtonAction breakResponsesButtonAction;\n     private BreakAllButtonAction breakAllButtonAction;\n \n+    private SetBreakOnJavaScriptAction setBreakOnJavaScriptAction;\n+    private SetBreakOnCSSAndFontsAction setBreakOnCSSAndFontsAction;\n+    private SetBreakOnMultimediaAction setBreakOnMultimediaAction;\n+    private SetBreakOnlyOnScopeAction setOnlyBreakOnScopeAction;\n+\n     private boolean cont = false;\n     private boolean step = false;\n     private boolean stepping = false;\n     private boolean drop = false;\n     private boolean isBreakRequest = false;\n     private boolean isBreakResponse = false;\n     private boolean isBreakAll = false;\n+    private boolean isBreakOnJavaScript = true;\n+    private boolean isBreakOnCSSAndFonts = true;\n+    private boolean isBreakOnMultimedia = true;\n+    private boolean isOnlyBreakOnScope = false;\n \n     private BreakPanel breakPanel = null;\n \n     private BreakpointsParam breakpointsParams;\n     private int mode = 0;\n+    private boolean showButtonsState = false;\n+\n+    private List<BreakpointMessageInterface> ignoreRulesEnable;\n+    HttpBreakpointMessage ignoreJavascriptBreakpointMessage;\n+    HttpBreakpointMessage ignoreCSSAndFontsBreakpointMessage;\n+    HttpBreakpointMessage ignoreMultimediaBreakpointMessage;\n+    HttpBreakpointOutOfScope ignoreMessageNotInScope;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzkyOQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442753929", "bodyText": "!showButtons", "author": "thc202", "createdAt": "2020-06-19T10:11:29Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -446,6 +633,24 @@ public void setButtonMode(int mode) {\n         this.mode = mode;\n     }\n \n+    public void setShowIgnoreFilesButtons(boolean showButtons) {\n+        this.showButtonsState = showButtons;\n+\n+        if (showButtons == false) {", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NDczMw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442754733", "bodyText": "These should not be needed.", "author": "thc202", "createdAt": "2020-06-19T10:13:09Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -469,6 +674,10 @@ public void actionPerformed(ActionEvent e) {\n             setBreakAll(false);\n             setBreakRequest(false);\n             setBreakResponse(false);\n+            setBreakOnJavaScript(isBreakOnJavaScript);\n+            setBreakOnCSSAndFonts(isBreakOnCSSAndFonts);\n+            setBreakOnMultimedia(isBreakOnMultimedia);\n+            setOnlyBreakOnScope(isOnlyBreakOnScope);", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NDkzMg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442754932", "bodyText": "Revert, not used/needed.", "author": "thc202", "createdAt": "2020-06-19T10:13:33Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointMessageHandler2.java", "diffHunk": "@@ -32,10 +32,14 @@\n \n     protected static final Object SEMAPHORE = new Object();\n \n+    private static final String HTTP_TYPE = \"HTTP\";", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NTgzNg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442755836", "bodyText": "Extract a variable for the row.", "author": "thc202", "createdAt": "2020-06-19T10:15:26Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsOptionsPanel.java", "diffHunk": "@@ -70,12 +75,42 @@ public BreakpointsOptionsPanel() {\n         panel.add(\n                 getCheckBoxAlwaysOnTop(),\n                 LayoutHelper.getGBC(0, 2, 2, 1.0, new Insets(2, 2, 2, 2)));\n+        panel.add(\n+                getCheckBoxShowIgnoreFilesButtons(),\n+                LayoutHelper.getGBC(0, 3, 2, 1.0, new Insets(2, 2, 2, 2)));", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjA3Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442756077", "bodyText": "Add before buttonMode?", "author": "thc202", "createdAt": "2020-06-19T10:15:54Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsOptionsPanel.java", "diffHunk": "@@ -50,7 +51,11 @@\n     private JCheckBox checkBoxConfirmDropMessage = null;\n     private JCheckBox checkBoxAlwaysOnTop = null;\n     private JCheckBox checkBoxInScopeOnly = null;\n+    private JCheckBox checkBoxShowIgnoreFilesButtons = null;\n     private JComboBox<String> buttonMode = null;\n+    private ZapTextField javascriptUrlRegexField = null;\n+    private ZapTextField cssAndFontsUrlRegexField = null;\n+    private ZapTextField multimediaUrlRegexField = null;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTE2NQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443145165", "bodyText": "I can change it. Why do you suggest that?", "author": "DiogoMRSilva", "createdAt": "2020-06-20T17:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzODM4OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r447538389", "bodyText": "Keep them in order they are shown/used.", "author": "thc202", "createdAt": "2020-06-30T09:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjYyNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442756625", "bodyText": "Should call discardAllEdits() after setting each value.", "author": "thc202", "createdAt": "2020-06-19T10:17:10Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsOptionsPanel.java", "diffHunk": "@@ -131,7 +197,11 @@ public void initParam(Object obj) {\n         // Note param.alwaysOnTop will be null if the user hasn't specified a preference yet\n         getCheckBoxAlwaysOnTop().setSelected(param.getAlwaysOnTop() != Boolean.FALSE);\n         getCheckBoxInScopeOnly().setSelected(param.isInScopeOnly());\n+        getCheckBoxShowIgnoreFilesButtons().setSelected(param.getIsToShowIgnoreFilesButtons());\n         getButtonMode().setSelectedIndex(param.getButtonMode() - 1);\n+        getJavascriptUrlRegexField().setText(param.getJavascriptUrlRegex());\n+        getCssAndFontsUrlRegexField().setText(param.getCssAndFontsUrlRegex());\n+        getMultimediaUrlRegexField().setText(param.getMultimediaUrlRegex());", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTM1NA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443145354", "bodyText": "Done. Can you explain why?", "author": "DiogoMRSilva", "createdAt": "2020-06-20T17:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzODY5OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r447538699", "bodyText": "Memory (discard edits no longer needed) and usability (restore to clean state).", "author": "thc202", "createdAt": "2020-06-30T09:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1Njc2NA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442756764", "bodyText": "Typo in multimedia (same in the default constant).", "author": "thc202", "createdAt": "2020-06-19T10:17:26Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsParam.java", "diffHunk": "@@ -44,13 +44,27 @@\n     private static final String PARAM_UI_BUTTON_MODE = PARAM_BASE_KEY + \".buttonMode\";\n     private static final String PARAM_BRK_ALWAYS_ON_TOP = PARAM_BASE_KEY + \".alwaysOnTop\";\n     private static final String PARAM_BRK_IN_SCOPE_ONLY = PARAM_BASE_KEY + \".inScopeOnly\";\n+    private static final String SHOW_IGNORE_FILES_BUTTONS =\n+            PARAM_BASE_KEY + \".ShowIgnoreFilesButtons\";\n+    private static final String JAVASCRIPT_URL_REGEX = PARAM_BASE_KEY + \".jsUrlRegex\";\n+    private static final String CSS_AND_FONTS_URL_REGEX = PARAM_BASE_KEY + \".cssAndFontsUrlRegex\";\n+    private static final String MULTIMIDIA_URL_REGEX = PARAM_BASE_KEY + \".multimediaUrlRegex\";", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NzY1MA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442757650", "bodyText": "Start with lower case.\nTechnically this is no longer just about ignore files, scope button is included.", "author": "thc202", "createdAt": "2020-06-19T10:19:10Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsParam.java", "diffHunk": "@@ -44,13 +44,27 @@\n     private static final String PARAM_UI_BUTTON_MODE = PARAM_BASE_KEY + \".buttonMode\";\n     private static final String PARAM_BRK_ALWAYS_ON_TOP = PARAM_BASE_KEY + \".alwaysOnTop\";\n     private static final String PARAM_BRK_IN_SCOPE_ONLY = PARAM_BASE_KEY + \".inScopeOnly\";\n+    private static final String SHOW_IGNORE_FILES_BUTTONS =\n+            PARAM_BASE_KEY + \".ShowIgnoreFilesButtons\";", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1ODAwMQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442758001", "bodyText": "isShow...", "author": "thc202", "createdAt": "2020-06-19T10:19:53Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsParam.java", "diffHunk": "@@ -125,4 +143,40 @@ public void setInScopeOnly(boolean inScopeOnly) {\n         this.inScopeOnly = inScopeOnly;\n         getConfig().setProperty(PARAM_BRK_IN_SCOPE_ONLY, inScopeOnly);\n     }\n+\n+    public boolean getIsToShowIgnoreFilesButtons() {", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1ODI3Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442758277", "bodyText": "These should be removed.", "author": "thc202", "createdAt": "2020-06-19T10:20:29Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/impl/http/HttpBreakpointManagementDaemonImpl.java", "diffHunk": "@@ -29,6 +29,9 @@\n \n     private boolean breakRequest;\n     private boolean breakResponse;\n+    private boolean breakOnJavaScript;\n+    private boolean breakOnCSSAndFonts;\n+    private boolean breakOnMultimedia;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2NDY5OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442764699", "bodyText": "Should be removed, not actually used.", "author": "thc202", "createdAt": "2020-06-19T10:35:16Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -56,18 +62,34 @@\n     private BreakResponsesButtonAction breakResponsesButtonAction;\n     private BreakAllButtonAction breakAllButtonAction;\n \n+    private SetBreakOnJavaScriptAction setBreakOnJavaScriptAction;\n+    private SetBreakOnCSSAndFontsAction setBreakOnCSSAndFontsAction;\n+    private SetBreakOnMultimediaAction setBreakOnMultimediaAction;\n+    private SetBreakOnlyOnScopeAction setOnlyBreakOnScopeAction;\n+\n     private boolean cont = false;\n     private boolean step = false;\n     private boolean stepping = false;\n     private boolean drop = false;\n     private boolean isBreakRequest = false;\n     private boolean isBreakResponse = false;\n     private boolean isBreakAll = false;\n+    private boolean isBreakOnJavaScript = true;\n+    private boolean isBreakOnCSSAndFonts = true;\n+    private boolean isBreakOnMultimedia = true;\n+    private boolean isOnlyBreakOnScope = false;\n \n     private BreakPanel breakPanel = null;\n \n     private BreakpointsParam breakpointsParams;\n     private int mode = 0;\n+    private boolean showButtonsState = false;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2NTE1Mg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442765152", "bodyText": "Not needed, the state of these buttons does not need to be reset.", "author": "thc202", "createdAt": "2020-06-19T10:36:20Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -403,6 +582,14 @@ public void reset() {\n             toggleBreakAll();\n         }\n \n+        setBreakOnJavaScript(isBreakOnJavaScript);\n+\n+        setBreakOnCSSAndFonts(isBreakOnCSSAndFonts);\n+\n+        setBreakOnMultimedia(isBreakOnMultimedia);\n+\n+        setOnlyBreakOnScope(isOnlyBreakOnScope);\n+", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2NzY2Mw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442767663", "bodyText": "Should not be needed.", "author": "thc202", "createdAt": "2020-06-19T10:42:13Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -151,6 +214,22 @@ public boolean isBreakAll() {\n         return isBreakAll;\n     }\n \n+    public boolean isBreakOnJavaScript() {\n+        return isBreakOnJavaScript;\n+    }\n+\n+    public boolean isBreakOnCSSAndFonts() {\n+        return isBreakOnCSSAndFonts;\n+    }\n+\n+    public boolean isBreakOnMultimedia() {\n+        return isBreakOnMultimedia;\n+    }\n+\n+    public boolean isOnlyBreakOnScope() {\n+        return isOnlyBreakOnScope;\n+    }", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2OTUwNw==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r442769507", "bodyText": "I wonder if this one would be better in the Display panel, this is closely related to \"Show break buttons\", we can then disable this if the option is set to \"Only in the toolbar\".", "author": "thc202", "createdAt": "2020-06-19T10:46:38Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsOptionsPanel.java", "diffHunk": "@@ -50,7 +51,11 @@\n     private JCheckBox checkBoxConfirmDropMessage = null;\n     private JCheckBox checkBoxAlwaysOnTop = null;\n     private JCheckBox checkBoxInScopeOnly = null;\n+    private JCheckBox checkBoxShowIgnoreFilesButtons = null;", "originalCommit": "b4d6ce697d2fa8ade13791a326a004b31b087b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTgxOA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r443145818", "bodyText": "I don't agree. I think that if the user only wants the break buttons on the toolbar it doesn't imply that he doesn't want to have the filter buttons on the break tab.", "author": "DiogoMRSilva", "createdAt": "2020-06-20T17:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2OTUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA1OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r447540059", "bodyText": "When \"Only in the toolbar\" is selected no button is shown in the Break tab.", "author": "thc202", "createdAt": "2020-06-30T09:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2OTUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTcyOA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r449165728", "bodyText": "Now when the  \"Only in the toolbar\" mode is on I deselect the option in the breakpoint options params.", "author": "DiogoMRSilva", "createdAt": "2020-07-02T17:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2OTUwNw=="}], "type": "inlineReview"}, {"oid": "8fe41960d8ee9a0a42db50803fd8fa204b45018b", "url": "https://github.com/zaproxy/zaproxy/commit/8fe41960d8ee9a0a42db50803fd8fa204b45018b", "message": "add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-11-14T16:47:13Z", "type": "forcePushed"}, {"oid": "effb504292179dc668f3dbb2acc78a19f5518221", "url": "https://github.com/zaproxy/zaproxy/commit/effb504292179dc668f3dbb2acc78a19f5518221", "message": "add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-11-14T18:44:33Z", "type": "forcePushed"}, {"oid": "5af2723c0146f69e36b14c40f0a7d7c70d9e6845", "url": "https://github.com/zaproxy/zaproxy/commit/5af2723c0146f69e36b14c40f0a7d7c70d9e6845", "message": "add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-11-14T19:18:33Z", "type": "forcePushed"}, {"oid": "011a71fb1c3e052c920738cf93a969602bbdac1a", "url": "https://github.com/zaproxy/zaproxy/commit/011a71fb1c3e052c920738cf93a969602bbdac1a", "message": "add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-11-14T23:01:00Z", "type": "forcePushed"}, {"oid": "00046b382ab56166f2702793fd4c5dd510faf1e3", "url": "https://github.com/zaproxy/zaproxy/commit/00046b382ab56166f2702793fd4c5dd510faf1e3", "message": "Improved break buttons text and options text\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-12-01T12:17:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyODQxMQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r537428411", "bodyText": "Better with an enum.", "author": "thc202", "createdAt": "2020-12-07T11:21:19Z", "path": "zap/src/main/java/org/parosproxy/paros/extension/option/OptionsViewPanel.java", "diffHunk": "@@ -94,6 +95,10 @@\n     // ISO Standards compliant format\n     private static final String TIME_STAMP_FORMAT_ISO8601 = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n \n+    public static final int TOOL_BAR_ONLY_INDEX = 0;", "originalCommit": "db86bcf3cf468ee7bfa34e0766cf566f15e368e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0ODM4OA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r537848388", "bodyText": "I need it to be an int to compare it with the index\nif (brkPanelViewSelect.getSelectedIndex() == TOOL_BAR_ONLY_INDEX) {\n     options.getParamSet(BreakpointsParam.class).setShowIgnoreFilesButtons(false);\n}\nShould I change it and add an extra dataStructure to make the translation from enum to int? I think it would make it worst.", "author": "DiogoMRSilva", "createdAt": "2020-12-07T21:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1NjYyMg==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r538156622", "bodyText": "The enum values can have the corresponding index.", "author": "thc202", "createdAt": "2020-12-08T09:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE5NDgwOA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r538194808", "bodyText": "Thx, I believe that now I did what you were asking.", "author": "DiogoMRSilva", "createdAt": "2020-12-08T09:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyODQxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQzMDYxMA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r537430610", "bodyText": "0 \u2192 3", "author": "thc202", "createdAt": "2020-12-07T11:25:02Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakPanelToolbarFactory.java", "diffHunk": "@@ -95,8 +111,46 @@ public BreakPanelToolbarFactory(BreakpointsParam breakpointsParams, BreakPanel b\n         breakResponsesButtonAction = new BreakResponsesButtonAction();\n         breakAllButtonAction = new BreakAllButtonAction();\n \n+        setBreakOnJavaScriptAction = new SetBreakOnJavaScriptAction();\n+        setBreakOnCssAndFontsAction = new SetBreakOnCssAndFontsAction();\n+        setBreakOnMultimediaAction = new SetBreakOnMultimediaAction();\n+        setOnlyBreakOnScopeAction = new SetBreakOnlyOnScopeAction();\n+\n         this.breakpointsParams = breakpointsParams;\n         this.breakPanel = breakPanel;\n+\n+        this.ignoreRulesEnable = new ArrayList<>(0);", "originalCommit": "db86bcf3cf468ee7bfa34e0766cf566f15e368e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQzMDY2OA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r537430668", "bodyText": "isShow...", "author": "thc202", "createdAt": "2020-12-07T11:25:08Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/brk/BreakpointsParam.java", "diffHunk": "@@ -125,4 +143,40 @@ public void setInScopeOnly(boolean inScopeOnly) {\n         this.inScopeOnly = inScopeOnly;\n         getConfig().setProperty(PARAM_BRK_IN_SCOPE_ONLY, inScopeOnly);\n     }\n+\n+    public boolean getIsShowIgnoreFilesButtons() {", "originalCommit": "db86bcf3cf468ee7bfa34e0766cf566f15e368e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQzMTkyNA==", "url": "https://github.com/zaproxy/zaproxy/pull/5864#discussion_r537431924", "bodyText": "List<BreakpointMessageInterface> ignoreRules = Arrays.asList(skipBreakpoint);", "author": "thc202", "createdAt": "2020-12-07T11:27:13Z", "path": "zap/src/test/java/org/zaproxy/zap/extension/brk/BreakpointMessageHandler2UnitTest.java", "diffHunk": "@@ -63,6 +66,69 @@ void shouldBeBreakpointIfMessageForceIntercept(boolean request, boolean onlyIfIn\n         assertThat(breakpoint, is(equalTo(true)));\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(strings = {\"true\", \"false\"})\n+    void shouldNotBeBreakpointIfIgnoreRuleMatch(boolean request) {\n+        // Given\n+        Message message = mock(Message.class);\n+        given(message.isInScope()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakRequest()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakResponse()).willReturn(true);\n+\n+        BreakpointMessageInterface skipBreakpoint = mock(BreakpointMessageInterface.class);\n+        given(skipBreakpoint.isEnabled()).willReturn(true);\n+        given(skipBreakpoint.match(message, request, false)).willReturn(true);\n+        List<BreakpointMessageInterface> x = new ArrayList<>();\n+        x.add(skipBreakpoint);\n+        breakpointMessageHandler.setEnabledIgnoreRules(x);\n+        // When\n+        boolean breakpoint = breakpointMessageHandler.isBreakpoint(message, request, false);\n+        // Then\n+        assertThat(breakpoint, is(equalTo(false)));\n+    }\n+\n+    @ParameterizedTest\n+    @ValueSource(strings = {\"true\", \"false\"})\n+    void shouldBeBreakpointIfIgnoreRulesDoNotMatch(boolean request) {\n+        // Given\n+        Message message = mock(Message.class);\n+        given(message.isInScope()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakRequest()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakResponse()).willReturn(true);\n+\n+        BreakpointMessageInterface skipBreakpoint = mock(BreakpointMessageInterface.class);\n+        given(skipBreakpoint.isEnabled()).willReturn(true);\n+        given(skipBreakpoint.match(message, request, false)).willReturn(false);\n+        List<BreakpointMessageInterface> x = new ArrayList<>();\n+        x.add(skipBreakpoint);\n+        breakpointMessageHandler.setEnabledIgnoreRules(x);\n+        // When\n+        boolean breakpoint = breakpointMessageHandler.isBreakpoint(message, request, false);\n+        // Then\n+        assertThat(breakpoint, is(equalTo(true)));\n+    }\n+\n+    @ParameterizedTest\n+    @ValueSource(strings = {\"true\", \"false\"})\n+    void shouldBeBreakpointIfIgnoreRulesMatchButNotEnable(boolean request) {\n+        // Given\n+        Message message = mock(Message.class);\n+        given(message.isInScope()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakRequest()).willReturn(true);\n+        given(breakpointManagementInterface.isBreakResponse()).willReturn(true);\n+\n+        BreakpointMessageInterface skipBreakpoint = mock(BreakpointMessageInterface.class);\n+        given(skipBreakpoint.isEnabled()).willReturn(false);\n+        given(skipBreakpoint.match(message, request, false)).willReturn(true);\n+        List<BreakpointMessageInterface> x = new ArrayList<>();\n+        x.add(skipBreakpoint);", "originalCommit": "db86bcf3cf468ee7bfa34e0766cf566f15e368e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "18386d92db024a0b1abd34fdafb36980766f7909", "url": "https://github.com/zaproxy/zaproxy/commit/18386d92db024a0b1abd34fdafb36980766f7909", "message": "Handle requested changes\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-12-08T09:44:07Z", "type": "forcePushed"}, {"oid": "fbcf72321e73e5ae1592ccd0847a501f24d6beb9", "url": "https://github.com/zaproxy/zaproxy/commit/fbcf72321e73e5ae1592ccd0847a501f24d6beb9", "message": "Add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-12-08T09:48:45Z", "type": "commit"}, {"oid": "fbcf72321e73e5ae1592ccd0847a501f24d6beb9", "url": "https://github.com/zaproxy/zaproxy/commit/fbcf72321e73e5ae1592ccd0847a501f24d6beb9", "message": "Add buttons in break panel to select types of requests intercepted\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>", "committedDate": "2020-12-08T09:48:45Z", "type": "forcePushed"}]}