{"pr_number": 1814, "pr_title": "HIVE-15820: comment at the head of beeline -e", "pr_createdAt": "2020-12-25T03:04:20Z", "pr_url": "https://github.com/apache/hive/pull/1814", "timeline": [{"oid": "f244a9d7f668c8ae41ab0891bb97e3e7db8ea217", "url": "https://github.com/apache/hive/commit/f244a9d7f668c8ae41ab0891bb97e3e7db8ea217", "message": "HIVE-15820: comment at the head of beeline -e", "committedDate": "2020-12-25T02:34:00Z", "type": "commit"}, {"oid": "3db4a0debe9b305e484e710be11c04c710a9d565", "url": "https://github.com/apache/hive/commit/3db4a0debe9b305e484e710be11c04c710a9d565", "message": "HIVE-15820: comment at the head of beeline -e", "committedDate": "2021-01-04T05:56:45Z", "type": "commit"}, {"oid": "a8782b75245a47b6370af971ef3809d4d71f1005", "url": "https://github.com/apache/hive/commit/a8782b75245a47b6370af971ef3809d4d71f1005", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820", "committedDate": "2021-01-04T06:00:02Z", "type": "commit"}, {"oid": "ba936b17eb53d6b6b27d1bf20ab5098869827214", "url": "https://github.com/apache/hive/commit/ba936b17eb53d6b6b27d1bf20ab5098869827214", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820", "committedDate": "2021-01-05T03:23:33Z", "type": "commit"}, {"oid": "fad9d58123d213dea45bff2100b03e809464cff0", "url": "https://github.com/apache/hive/commit/fad9d58123d213dea45bff2100b03e809464cff0", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820", "committedDate": "2021-01-05T03:36:51Z", "type": "commit"}, {"oid": "3e5cff241653a734a1f9dd36f9e08b3d3fff064a", "url": "https://github.com/apache/hive/commit/3e5cff241653a734a1f9dd36f9e08b3d3fff064a", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820", "committedDate": "2021-01-05T05:31:53Z", "type": "commit"}, {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c", "url": "https://github.com/apache/hive/commit/5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820", "committedDate": "2021-01-05T05:32:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA==", "url": "https://github.com/apache/hive/pull/1814#discussion_r552640050", "bodyText": "Could you please add a test scenario where a multiline query strings has comments in between fragments of query? just as an example\n\"select col1,\n--partitioned year column\nyear,\n--partitioned month column\nmonth,\n--partitioned date column\ndate\nfrom test_table\nwhere\n--for a particular user\nusername = 'foo';\"\nshould return something equivalent to\n\"select col1, year, month, date from test_table where username = 'foo';\"", "author": "nrg4878", "createdAt": "2021-01-06T14:03:26Z", "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "diffHunk": "@@ -30,21 +30,35 @@\n \n   @Test\n   public void testLinesEndingWithComments() {\n-    int[] escape = {-1};\n-    assertEquals(\"show tables;\", removeComments(\"show tables;\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\",escape));\n-    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\",escape));\n-    assertEquals(\"show\", removeComments(\"show --tables; -------comments\",escape));\n-    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\",escape));\n-    assertEquals(\"\", removeComments(\"-- show tables; -------comments\",escape));\n+    assertEquals(\"show tables;\", removeComments(\"show tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"show --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"-- show tables; -------comments\"));\n \n-    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\",escape));\n-    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\",escape));\n-    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\",escape));\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\"));\n+\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"--comments\\ns--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"--comments\\n-- show tables; -------comments\"));\n+\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"--comments\\n\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"--comments\\n\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"--comments\\n\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"--comments\\n'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"--comments\\n'\\\"show --comments tables\\\"' --comments\"));", "originalCommit": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MTkxNQ==", "url": "https://github.com/apache/hive/pull/1814#discussion_r553051915", "bodyText": "Thanks for having a look! I added your example. It contains both separate comment lines and inline comment.", "author": "ujc714", "createdAt": "2021-01-07T01:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA=="}], "type": "inlineReview"}, {"oid": "2c104caa7a5ca5217e8c1f187716193282c010e4", "url": "https://github.com/apache/hive/commit/2c104caa7a5ca5217e8c1f187716193282c010e4", "message": "HIVE-15820: comment at the head of beeline -e", "committedDate": "2021-01-06T22:14:59Z", "type": "commit"}]}