{"pr_number": 1782, "pr_title": "HIVE-24434: Filter out materialized views for rewriting if plan pattern is not allowed", "pr_createdAt": "2020-12-15T10:57:45Z", "pr_url": "https://github.com/apache/hive/pull/1782", "timeline": [{"oid": "4762427b245b6dbd866560804915f077227937fd", "url": "https://github.com/apache/hive/commit/4762427b245b6dbd866560804915f077227937fd", "message": "add licence header", "committedDate": "2020-12-15T16:11:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAyNTMwOA==", "url": "https://github.com/apache/hive/pull/1782#discussion_r548025308", "bodyText": "nit. Import to avoid using fully-qualified class name here?", "author": "jcamachor", "createdAt": "2020-12-23T15:54:35Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "diffHunk": "@@ -1831,7 +1832,8 @@ public RelOptMaterialization getMaterializedViewForRebuild(String dbName, String\n \n   private List<RelOptMaterialization> getValidMaterializedViews(List<Table> materializedViewTables,\n       List<String> tablesUsed, boolean forceMVContentsUpToDate, boolean expandGroupingSets,\n-      HiveTxnManager txnMgr) throws HiveException {\n+      HiveTxnManager txnMgr, EnumSet<org.apache.hadoop.hive.ql.metadata.Materialization.RewriteAlgorithm> scope)", "originalCommit": "4762427b245b6dbd866560804915f077227937fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNzA3NA==", "url": "https://github.com/apache/hive/pull/1782#discussion_r551107074", "bodyText": "We already have a Materialization class so renamed this one to HiveRelOptMaterialization which fixed this.", "author": "kasakrisz", "createdAt": "2021-01-04T03:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAyNTMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyNjg3MA==", "url": "https://github.com/apache/hive/pull/1782#discussion_r548226870", "bodyText": "Should this class extend RelOptMaterialization rather than wrapping it? I think it would make sense since we may extend it with other properties in the future and may be convenient to be accessible anywhere in Calcite code.", "author": "jcamachor", "createdAt": "2020-12-23T20:50:56Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Materialization.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hive.ql.metadata;\n+\n+import org.apache.calcite.plan.RelOptMaterialization;\n+\n+import java.util.EnumSet;\n+\n+import static org.apache.commons.collections.CollectionUtils.intersection;\n+\n+/**\n+ * Wrapper class of {@link RelOptMaterialization} and corresponding flags.\n+ */\n+public class Materialization {", "originalCommit": "4762427b245b6dbd866560804915f077227937fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNjgzNw==", "url": "https://github.com/apache/hive/pull/1782#discussion_r551106837", "bodyText": "Changed this to extend RelOptMaterialization.", "author": "kasakrisz", "createdAt": "2021-01-04T03:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyNjg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIzNTQxMw==", "url": "https://github.com/apache/hive/pull/1782#discussion_r548235413", "bodyText": "nit. null -> Null", "author": "jcamachor", "createdAt": "2020-12-23T21:03:25Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/CBOPlan.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hive.ql.parse;\n+\n+import org.apache.calcite.rel.RelNode;\n+\n+/**\n+ * Wrapper of Calcite plan.\n+ */\n+public class CBOPlan {\n+  private final RelNode plan;\n+  private final String invalidAutomaticRewritingMaterializationReason;\n+\n+  public CBOPlan(RelNode plan, String invalidAutomaticRewritingMaterializationReason) {\n+    this.plan = plan;\n+    this.invalidAutomaticRewritingMaterializationReason = invalidAutomaticRewritingMaterializationReason;\n+  }\n+\n+  /**\n+   * Root node of plan.\n+   * @return Root {@link RelNode}\n+   */\n+  public RelNode getPlan() {\n+    return plan;\n+  }\n+\n+  /**\n+   * Returns an error message if this plan can not be a definition of a Materialized view which is an input of\n+   * Calcite based materialized view query rewrite.\n+   * null or empty string otherwise.", "originalCommit": "4762427b245b6dbd866560804915f077227937fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNjY3Nw==", "url": "https://github.com/apache/hive/pull/1782#discussion_r551106677", "bodyText": "fixed", "author": "kasakrisz", "createdAt": "2021-01-04T03:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIzNTQxMw=="}], "type": "inlineReview"}, {"oid": "46ad10fcf2bb698c5b1cf298767c2bd74d3f1f13", "url": "https://github.com/apache/hive/commit/46ad10fcf2bb698c5b1cf298767c2bd74d3f1f13", "message": "HIVE-24434: Filter out materialized views for rewriting if plan pattern is not allowed", "committedDate": "2021-01-04T02:41:43Z", "type": "commit"}, {"oid": "b42752936e3b909dad43c693f914fec97f4d8808", "url": "https://github.com/apache/hive/commit/b42752936e3b909dad43c693f914fec97f4d8808", "message": "add licence header", "committedDate": "2021-01-04T02:41:43Z", "type": "commit"}, {"oid": "d4936c2b3b4c59429a4aa9975fb863ad4ef1e662", "url": "https://github.com/apache/hive/commit/d4936c2b3b4c59429a4aa9975fb863ad4ef1e662", "message": "instead of wrap extend RelOptMaterialization", "committedDate": "2021-01-04T03:45:26Z", "type": "commit"}, {"oid": "df5bdac13b37ab1439ceaebe0961462a5da51aa6", "url": "https://github.com/apache/hive/commit/df5bdac13b37ab1439ceaebe0961462a5da51aa6", "message": "fix comment", "committedDate": "2021-01-04T03:47:58Z", "type": "commit"}, {"oid": "df5bdac13b37ab1439ceaebe0961462a5da51aa6", "url": "https://github.com/apache/hive/commit/df5bdac13b37ab1439ceaebe0961462a5da51aa6", "message": "fix comment", "committedDate": "2021-01-04T03:47:58Z", "type": "forcePushed"}]}