{"pr_number": 1052, "pr_title": "HIVE-23592: Routine makeIntPair is Not Correct", "pr_createdAt": "2020-06-02T14:10:44Z", "pr_url": "https://github.com/apache/hive/pull/1052", "timeline": [{"oid": "594116f1ef20fe6b8a23e43e77c521c2021f4ecc", "url": "https://github.com/apache/hive/commit/594116f1ef20fe6b8a23e43e77c521c2021f4ecc", "message": "HIVE-23592: Routine makeIntPair is Not Correct", "committedDate": "2020-06-02T14:09:35Z", "type": "commit"}, {"oid": "d60b68ffa9323c784a646a97306e5de7af67bcda", "url": "https://github.com/apache/hive/commit/d60b68ffa9323c784a646a97306e5de7af67bcda", "message": "Add one more common unit test", "committedDate": "2020-06-15T20:32:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NTQ1Mw==", "url": "https://github.com/apache/hive/pull/1052#discussion_r440255453", "bodyText": "Please add some more tests with \"everyday\" positive and negative numbers, the current tests prove only that it works fine fo the extreme values.", "author": "miklosgergely", "createdAt": "2020-06-15T15:22:00Z", "path": "common/src/test/org/apache/hadoop/hive/common/TestNumberUtils.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hive.common;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test suite for the {@link NumberUtils} class.\n+ */\n+public class TestNumberUtils {\n+\n+  @Test\n+  public void testMinLong() {\n+    final long pair = NumberUtils.makeIntPair(Integer.MIN_VALUE, Integer.MIN_VALUE);\n+    Assert.assertEquals(Integer.MIN_VALUE, NumberUtils.getFirstInt(pair));\n+    Assert.assertEquals(Integer.MIN_VALUE, NumberUtils.getSecondInt(pair));\n+  }\n+\n+  @Test\n+  public void testMaxLong() {\n+    final long pair = NumberUtils.makeIntPair(Integer.MAX_VALUE, Integer.MAX_VALUE);\n+    Assert.assertEquals(Integer.MAX_VALUE, NumberUtils.getFirstInt(pair));\n+    Assert.assertEquals(Integer.MAX_VALUE, NumberUtils.getSecondInt(pair));\n+  }\n+\n+  @Test\n+  public void testZeroLong() {\n+    final long pair = NumberUtils.makeIntPair(0, 0);\n+    Assert.assertEquals(0, NumberUtils.getFirstInt(pair));\n+    Assert.assertEquals(0, NumberUtils.getSecondInt(pair));\n+  }\n+", "originalCommit": "594116f1ef20fe6b8a23e43e77c521c2021f4ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}