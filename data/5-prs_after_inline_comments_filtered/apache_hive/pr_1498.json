{"pr_number": 1498, "pr_title": "HIVE-24162: Query based compaction looses bloom filter", "pr_createdAt": "2020-09-14T16:51:21Z", "pr_url": "https://github.com/apache/hive/pull/1498", "timeline": [{"oid": "46f241c02147de2c2275ee443ceb03023bc77484", "url": "https://github.com/apache/hive/commit/46f241c02147de2c2275ee443ceb03023bc77484", "message": "HIVE-24162: Query based compaction looses bloom filter", "committedDate": "2020-09-14T22:18:21Z", "type": "commit"}, {"oid": "46f241c02147de2c2275ee443ceb03023bc77484", "url": "https://github.com/apache/hive/commit/46f241c02147de2c2275ee443ceb03023bc77484", "message": "HIVE-24162: Query based compaction looses bloom filter", "committedDate": "2020-09-14T22:18:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MTUxMg==", "url": "https://github.com/apache/hive/pull/1498#discussion_r488761512", "bodyText": "Nit: Just an \"else\" works", "author": "klcopp", "createdAt": "2020-09-15T15:30:33Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/txn/compactor/CompactionQueryBuilder.java", "diffHunk": "@@ -543,18 +543,26 @@ private void addTblProperties(StringBuilder query, int bucketingVersion) {\n     if (crud && minor && isBucketed) {\n       tblProperties.put(\"bucketing_version\", String.valueOf(bucketingVersion));\n     }\n-    if (insertOnly && sourceTab != null) { // to avoid NPEs, skip this part if sourceTab is null\n-      // Exclude all standard table properties.\n-      Set<String> excludes = getHiveMetastoreConstants();\n-      excludes.addAll(StatsSetupConst.TABLE_PARAMS_STATS_KEYS);\n-      for (Map.Entry<String, String> e : sourceTab.getParameters().entrySet()) {\n-        if (e.getValue() == null) {\n-          continue;\n+    if (sourceTab != null) { // to avoid NPEs, skip this part if sourceTab is null\n+      if (insertOnly) {\n+        // Exclude all standard table properties.\n+        Set<String> excludes = getHiveMetastoreConstants();\n+        excludes.addAll(StatsSetupConst.TABLE_PARAMS_STATS_KEYS);\n+        for (Map.Entry<String, String> e : sourceTab.getParameters().entrySet()) {\n+          if (e.getValue() == null) {\n+            continue;\n+          }\n+          if (excludes.contains(e.getKey())) {\n+            continue;\n+          }\n+          tblProperties.put(e.getKey(), HiveStringUtils.escapeHiveCommand(e.getValue()));\n         }\n-        if (excludes.contains(e.getKey())) {\n-          continue;\n+      } else if (crud) {", "originalCommit": "46f241c02147de2c2275ee443ceb03023bc77484", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MjY4Mg==", "url": "https://github.com/apache/hive/pull/1498#discussion_r488762682", "bodyText": "Nit: maybe add a param for additional tblproperties instead of a boolean, for easier reading and more flexibility", "author": "klcopp", "createdAt": "2020-09-15T15:32:08Z", "path": "itests/hive-unit/src/test/java/org/apache/hadoop/hive/ql/txn/compactor/CompactorOnTezTest.java", "diffHunk": "@@ -144,11 +149,11 @@ void createMmTable(String tblName, boolean isPartitioned, boolean isBucketed, St\n \n     void createMmTable(String dbName, String tblName, boolean isPartitioned, boolean isBucketed, String fileFormat)\n         throws Exception {\n-      createTable(dbName, tblName, isPartitioned, isBucketed, true, fileFormat);\n+      createTable(dbName, tblName, isPartitioned, isBucketed, true, fileFormat, false);\n     }\n \n     private void createTable(String dbName, String tblName, boolean isPartitioned, boolean isBucketed,\n-        boolean insertOnly, String fileFormat) throws Exception {\n+        boolean insertOnly, String fileFormat, boolean addBloomFilter) throws Exception {", "originalCommit": "46f241c02147de2c2275ee443ceb03023bc77484", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NDAwMA==", "url": "https://github.com/apache/hive/pull/1498#discussion_r488764000", "bodyText": "Just thinking, are there more properties that need to be included in the compacted file, besides orc properties? Maybe not...", "author": "klcopp", "createdAt": "2020-09-15T15:33:59Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/txn/compactor/CompactionQueryBuilder.java", "diffHunk": "@@ -543,18 +543,26 @@ private void addTblProperties(StringBuilder query, int bucketingVersion) {\n     if (crud && minor && isBucketed) {\n       tblProperties.put(\"bucketing_version\", String.valueOf(bucketingVersion));\n     }\n-    if (insertOnly && sourceTab != null) { // to avoid NPEs, skip this part if sourceTab is null\n-      // Exclude all standard table properties.\n-      Set<String> excludes = getHiveMetastoreConstants();\n-      excludes.addAll(StatsSetupConst.TABLE_PARAMS_STATS_KEYS);\n-      for (Map.Entry<String, String> e : sourceTab.getParameters().entrySet()) {\n-        if (e.getValue() == null) {\n-          continue;\n+    if (sourceTab != null) { // to avoid NPEs, skip this part if sourceTab is null\n+      if (insertOnly) {\n+        // Exclude all standard table properties.\n+        Set<String> excludes = getHiveMetastoreConstants();\n+        excludes.addAll(StatsSetupConst.TABLE_PARAMS_STATS_KEYS);\n+        for (Map.Entry<String, String> e : sourceTab.getParameters().entrySet()) {\n+          if (e.getValue() == null) {\n+            continue;\n+          }\n+          if (excludes.contains(e.getKey())) {\n+            continue;\n+          }\n+          tblProperties.put(e.getKey(), HiveStringUtils.escapeHiveCommand(e.getValue()));\n         }\n-        if (excludes.contains(e.getKey())) {\n-          continue;\n+      } else if (crud) {\n+        for (Map.Entry<String, String> e : sourceTab.getParameters().entrySet()) {\n+          if (e.getKey().startsWith(\"orc.\")) {", "originalCommit": "46f241c02147de2c2275ee443ceb03023bc77484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMzk1MQ==", "url": "https://github.com/apache/hive/pull/1498#discussion_r489203951", "bodyText": "Well the tblproperties will not get overwritten in the original table, so only the properties matter, that influence the compacted file itself. I think orc properties should cover those.", "author": "pvargacl", "createdAt": "2020-09-16T06:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NDAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzMjE4Nw==", "url": "https://github.com/apache/hive/pull/1498#discussion_r489232187", "bodyText": "Makes sense!", "author": "klcopp", "createdAt": "2020-09-16T07:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NDAwMA=="}], "type": "inlineReview"}, {"oid": "9565fb9f5b29dd4b301f38ba8c13276ccf2a2f44", "url": "https://github.com/apache/hive/commit/9565fb9f5b29dd4b301f38ba8c13276ccf2a2f44", "message": "fix review comments", "committedDate": "2020-09-16T07:02:38Z", "type": "commit"}]}