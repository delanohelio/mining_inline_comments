{"pr_number": 851, "pr_title": "Support LIMIT, OFFSET in new engine", "pr_createdAt": "2020-11-24T02:52:35Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851", "timeline": [{"oid": "6ab0aa92d4c5649f07d565179302124e9144b722", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6ab0aa92d4c5649f07d565179302124e9144b722", "message": "support limit and offset", "committedDate": "2020-11-24T02:50:36Z", "type": "commit"}, {"oid": "2581dd8efc5b96b49f132f3235cd7b7055ed7d2e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2581dd8efc5b96b49f132f3235cd7b7055ed7d2e", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset\n\n# Conflicts:\n#\tcore/src/test/java/com/amazon/opendistroforelasticsearch/sql/planner/DefaultImplementorTest.java\n#\telasticsearch/src/test/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/executor/ElasticsearchExecutionProtectorTest.java", "committedDate": "2020-11-24T20:11:01Z", "type": "commit"}, {"oid": "091619ed93df748506a789e175609d62449129be", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/091619ed93df748506a789e175609d62449129be", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset", "committedDate": "2020-11-24T21:15:10Z", "type": "commit"}, {"oid": "18d2bb583dbfab5f247a310ed4fc990f503f0857", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/18d2bb583dbfab5f247a310ed4fc990f503f0857", "message": "ignored some test cases", "committedDate": "2020-11-24T22:13:43Z", "type": "commit"}, {"oid": "d698db4e8bd1745733638042bb12b9854016cc01", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d698db4e8bd1745733638042bb12b9854016cc01", "message": "added merge rules", "committedDate": "2020-11-25T02:57:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ2Nzg2Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r530467867", "bodyText": "The orignal definition of getTable is get Table from storage engine by name, the size paramater doesn't make sense in here.", "author": "penghuo", "createdAt": "2020-11-25T15:42:33Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/storage/StorageEngine.java", "diffHunk": "@@ -23,5 +23,5 @@\n   /**\n    * Get {@link Table} from storage engine.\n    */\n-  Table getTable(String name);\n+  Table getTable(String name, Integer size);", "originalCommit": "18d2bb583dbfab5f247a310ed4fc990f503f0857", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3NTgyMQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r530475821", "bodyText": "Does it need to be the reduce operation which take all the rows from downstream at open stage?", "author": "penghuo", "createdAt": "2020-11-25T15:53:06Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/LimitOperator.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.planner.physical;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Iterators;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+\n+@RequiredArgsConstructor\n+@Getter\n+@ToString\n+@EqualsAndHashCode\n+public class LimitOperator extends PhysicalPlan {\n+  private final PhysicalPlan input;\n+  private final Integer limit;\n+  private final Integer offset;\n+  private Iterator<ExprValue> iterator;\n+\n+  @Override\n+  public void open() {\n+    super.open();\n+\n+    List<ExprValue> results = new LinkedList<>();\n+    while (input.hasNext()) {\n+      results.add(input.next());\n+    }\n+    iterator = Iterators.limit(offset(results.iterator(), offset), limit);", "originalCommit": "18d2bb583dbfab5f247a310ed4fc990f503f0857", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NjAzOQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r530576039", "bodyText": "Changed to only block the rows out of the offset-limit window", "author": "chloe-zh", "createdAt": "2020-11-25T18:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3NTgyMQ=="}], "type": "inlineReview"}, {"oid": "bf73d2aaf7c7d497785ac47e656748d2a2e642a5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bf73d2aaf7c7d497785ac47e656748d2a2e642a5", "message": "test", "committedDate": "2020-11-25T17:47:24Z", "type": "commit"}, {"oid": "ab6e80f55487fa371c371b340dce0bcb0f93bc1b", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ab6e80f55487fa371c371b340dce0bcb0f93bc1b", "message": "address comment", "committedDate": "2020-11-25T18:10:00Z", "type": "commit"}, {"oid": "5ab02e48f11357e4588fc96e18ae08d0de57ca5d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5ab02e48f11357e4588fc96e18ae08d0de57ca5d", "message": "+ issue 441", "committedDate": "2020-11-25T18:23:32Z", "type": "commit"}, {"oid": "6ace67a4d6021c26c64c155bd23bcdca96de7eb6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6ace67a4d6021c26c64c155bd23bcdca96de7eb6", "message": "added doc", "committedDate": "2020-11-25T18:35:28Z", "type": "commit"}, {"oid": "f6bdfa0aba6698e7e1332ba1bcc0dfb1229057f0", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f6bdfa0aba6698e7e1332ba1bcc0dfb1229057f0", "message": "Merge branch 'limit-optimize' into limit-offset", "committedDate": "2020-11-25T19:14:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3MjIwMA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r530572200", "bodyText": "Please check back once my JDBC formatter PR merged: #854. With this formatter, new engine response would be same as before which may avoid this issue.", "author": "dai-chen", "createdAt": "2020-11-25T18:30:55Z", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/legacy/PrettyFormatResponseIT.java", "diffHunk": "@@ -290,6 +290,7 @@ public void groupByMultipleFields() throws IOException {\n     assertContainsData(getDataRows(response), fields);\n   }\n \n+  @Ignore(\"Skip this test due to inconsistency in total hits\")", "originalCommit": "18d2bb583dbfab5f247a310ed4fc990f503f0857", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce6bd6f5e86d41c499ecd9e95b01b163ffdd2568", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ce6bd6f5e86d41c499ecd9e95b01b163ffdd2568", "message": "added rule to push limit under sort", "committedDate": "2020-11-25T22:36:31Z", "type": "commit"}, {"oid": "977d14cef816ade851883a11ee75a3c150a5f4c6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/977d14cef816ade851883a11ee75a3c150a5f4c6", "message": "added test", "committedDate": "2020-11-26T05:26:04Z", "type": "commit"}, {"oid": "c8d0cc7a6161e1a0a5fcbab72638dc54852717f1", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c8d0cc7a6161e1a0a5fcbab72638dc54852717f1", "message": "removed redundant lines", "committedDate": "2020-11-26T05:48:45Z", "type": "commit"}, {"oid": "94d170f07ed52c45e2ffb59c22e9f628bb6da62c", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/94d170f07ed52c45e2ffb59c22e9f628bb6da62c", "message": "added a note in manual", "committedDate": "2020-11-26T06:01:58Z", "type": "commit"}, {"oid": "77f64944fb246dd89b825fd3dd642a7be6c5a027", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/77f64944fb246dd89b825fd3dd642a7be6c5a027", "message": "set query size limit to 10000 in integration test for new engine", "committedDate": "2020-11-26T06:39:04Z", "type": "commit"}, {"oid": "a26332548a78515e2bcb9bf92b1749b81f2ec785", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a26332548a78515e2bcb9bf92b1749b81f2ec785", "message": "set query size limit back to 200", "committedDate": "2020-11-27T19:44:29Z", "type": "commit"}, {"oid": "a3cc15b6c8fe54fa99eef2b4d06d4acd8929de27", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a3cc15b6c8fe54fa99eef2b4d06d4acd8929de27", "message": "update", "committedDate": "2020-11-27T20:19:09Z", "type": "commit"}, {"oid": "29e7fd684993dbf262560b821cb9f416558cfcba", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/29e7fd684993dbf262560b821cb9f416558cfcba", "message": "update", "committedDate": "2020-12-01T20:08:00Z", "type": "commit"}, {"oid": "e9fcb3b57efc553369ef322ae8323772f9f49391", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e9fcb3b57efc553369ef322ae8323772f9f49391", "message": "update", "committedDate": "2020-12-01T22:45:51Z", "type": "commit"}, {"oid": "3a5f4fd2f4fe871d23f4270c8abfbd692b8d3f30", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3a5f4fd2f4fe871d23f4270c8abfbd692b8d3f30", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset", "committedDate": "2020-12-01T22:46:02Z", "type": "commit"}, {"oid": "e294164d39259d21466151b6f3fab07978445e17", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e294164d39259d21466151b6f3fab07978445e17", "message": "update", "committedDate": "2020-12-01T23:04:44Z", "type": "commit"}, {"oid": "b3210068b960e4f27e5a899de73024f32406927f", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b3210068b960e4f27e5a899de73024f32406927f", "message": "update", "committedDate": "2020-12-01T23:32:20Z", "type": "commit"}, {"oid": "c294b42196b83063d753232dca95dd27b35ab2ef", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c294b42196b83063d753232dca95dd27b35ab2ef", "message": "update", "committedDate": "2020-12-02T04:08:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NjczNA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534396734", "bodyText": "could you add the reason why it is ignored?", "author": "penghuo", "createdAt": "2020-12-02T18:40:19Z", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/legacy/TypeInformationIT.java", "diffHunk": "@@ -65,6 +67,7 @@ public void testPiReturnsDouble() {\n   /*\n   stringOperators\n    */\n+  @Ignore", "originalCommit": "c294b42196b83063d753232dca95dd27b35ab2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NzE5NQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534397195", "bodyText": "doc?", "author": "penghuo", "createdAt": "2020-12-02T18:41:02Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/LimitOperator.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.planner.physical;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+\n+@RequiredArgsConstructor\n+@Getter\n+@ToString\n+@EqualsAndHashCode\n+public class LimitOperator extends PhysicalPlan {", "originalCommit": "c294b42196b83063d753232dca95dd27b35ab2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5ODQ4NA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534398484", "bodyText": "The input operator hasn't been opened?", "author": "penghuo", "createdAt": "2020-12-02T18:43:13Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/LimitOperator.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.planner.physical;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+\n+@RequiredArgsConstructor\n+@Getter\n+@ToString\n+@EqualsAndHashCode\n+public class LimitOperator extends PhysicalPlan {\n+  private final PhysicalPlan input;\n+  private final Integer limit;\n+  private final Integer offset;\n+  private Integer count = 0;\n+\n+  @Override\n+  public void open() {", "originalCommit": "c294b42196b83063d753232dca95dd27b35ab2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwNjg1Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534406856", "bodyText": "why the limit can't been push down?", "author": "penghuo", "createdAt": "2020-12-02T18:56:19Z", "path": "elasticsearch/src/test/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/storage/ElasticsearchIndexTest.java", "diffHunk": "@@ -341,4 +345,72 @@ void shouldImplIndexScanWithSort() {\n     assertTrue(plan instanceof ProjectOperator);\n     assertTrue(((ProjectOperator) plan).getInput() instanceof ElasticsearchIndexScan);\n   }\n+\n+  @Test\n+  void shouldImplIndexScanWithLimit() {\n+    when(settings.getSettingValue(Settings.Key.QUERY_SIZE_LIMIT)).thenReturn(200);\n+\n+    ReferenceExpression field = ref(\"name\", STRING);\n+    NamedExpression named = named(\"n\", field);\n+\n+    String indexName = \"test\";\n+    ElasticsearchIndex index = new ElasticsearchIndex(client, settings, indexName);\n+    PhysicalPlan plan = index.implement(\n+        project(\n+            indexScan(\n+                indexName,\n+                1, 1\n+            ),\n+            named));\n+\n+    assertTrue(plan instanceof ProjectOperator);\n+    assertTrue(((ProjectOperator) plan).getInput() instanceof ElasticsearchIndexScan);\n+  }\n+\n+  @Test\n+  void shouldImplIndexScanWithSortAndLimit() {\n+    when(settings.getSettingValue(Settings.Key.QUERY_SIZE_LIMIT)).thenReturn(200);\n+\n+    ReferenceExpression field = ref(\"name\", STRING);\n+    NamedExpression named = named(\"n\", field);\n+    Expression sortExpr = ref(\"name\", STRING);\n+\n+    String indexName = \"test\";\n+    ElasticsearchIndex index = new ElasticsearchIndex(client, settings, indexName);\n+    PhysicalPlan plan = index.implement(\n+        project(\n+            indexScan(\n+                indexName,\n+                sortExpr,\n+                1, 1\n+            ),\n+            named));\n+\n+    assertTrue(plan instanceof ProjectOperator);\n+    assertTrue(((ProjectOperator) plan).getInput() instanceof ElasticsearchIndexScan);\n+  }\n+\n+  @Test\n+  void shouldNotPushDownLimitFarFromRelationButUpdateScanSize() {", "originalCommit": "c294b42196b83063d753232dca95dd27b35ab2ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyODI2MA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534528260", "bodyText": "it's for the case when sort is not pushed down", "author": "chloe-zh", "createdAt": "2020-12-02T22:35:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwNjg1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODA5Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r534408092", "bodyText": "This rule may be effect by limit push down. e.g. agg -> limit -> relation. with current rules,\n\nagg -> IndexScan\nIndexAggScan, which is unexpected.", "author": "penghuo", "createdAt": "2020-12-02T18:58:22Z", "path": "elasticsearch/src/main/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/planner/logical/ElasticsearchLogicalPlanOptimizerFactory.java", "diffHunk": "@@ -41,6 +43,8 @@ public static LogicalPlanOptimizer create() {\n         new MergeAggAndIndexScan(),", "originalCommit": "c294b42196b83063d753232dca95dd27b35ab2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0226b39ea00065de5228f1b4115435a5ec52fa50", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0226b39ea00065de5228f1b4115435a5ec52fa50", "message": "address comments", "committedDate": "2020-12-02T21:16:11Z", "type": "commit"}, {"oid": "103531f1eb2d5c91db646829895c3eb54cd3135a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/103531f1eb2d5c91db646829895c3eb54cd3135a", "message": "set default query size limit for integration tests to 10000", "committedDate": "2020-12-02T22:34:12Z", "type": "commit"}, {"oid": "8f1e80d92f2ffb52ed7590fea9ec637314d1fa65", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8f1e80d92f2ffb52ed7590fea9ec637314d1fa65", "message": "added java doc for LimitOperator", "committedDate": "2020-12-02T23:20:22Z", "type": "commit"}, {"oid": "c6fd47762d7d77cbc030d57d38d0775d337b829e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c6fd47762d7d77cbc030d57d38d0775d337b829e", "message": "update", "committedDate": "2020-12-08T00:12:15Z", "type": "commit"}, {"oid": "9ce50ca7ffb2c66ae6cbf3f98cca429336998d87", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9ce50ca7ffb2c66ae6cbf3f98cca429336998d87", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset\n\n# Conflicts:\n#\telasticsearch/src/main/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/planner/logical/ElasticsearchLogicalPlanOptimizerFactory.java\n#\telasticsearch/src/test/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/planner/logical/ElasticsearchLogicOptimizerTest.java", "committedDate": "2020-12-08T00:16:29Z", "type": "commit"}, {"oid": "4a044b7afbb74a5fc19d33cab432b73d7a603781", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4a044b7afbb74a5fc19d33cab432b73d7a603781", "message": "address comments", "committedDate": "2020-12-08T02:13:16Z", "type": "commit"}, {"oid": "bd63cb5e7d1e01e49628b6b934f0dff9b333a51f", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bd63cb5e7d1e01e49628b6b934f0dff9b333a51f", "message": "added doc", "committedDate": "2020-12-09T02:40:56Z", "type": "commit"}, {"oid": "4375198313a18b6cc7c6bae39a334d55b8a34b59", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4375198313a18b6cc7c6bae39a334d55b8a34b59", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset\n\n# Conflicts:\n#\tinteg-test/src/test/resources/correctness/queries/select.txt", "committedDate": "2020-12-09T02:43:25Z", "type": "commit"}, {"oid": "0eaae98f6ba13e9a95daf8dc1faa2ec59824bdbb", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0eaae98f6ba13e9a95daf8dc1faa2ec59824bdbb", "message": "update", "committedDate": "2020-12-12T01:03:14Z", "type": "commit"}, {"oid": "56e217d068c1c8a1116eea958655f48ce69201ac", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/56e217d068c1c8a1116eea958655f48ce69201ac", "message": "Merge remote-tracking branch 'upstream/develop' into limit-offset\n\n# Conflicts:\n#\tinteg-test/src/test/resources/correctness/queries/select.txt\n#\tinteg-test/src/test/resources/correctness/queries/subquries.txt\n#\tsql/src/test/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/AstBuilderTest.java", "committedDate": "2020-12-12T01:05:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI3MDYxNg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r541270616", "bodyText": "The second argument should be an \"integer\"?", "author": "dai-chen", "createdAt": "2020-12-11T20:45:27Z", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/legacy/SQLIntegTestCase.java", "diffHunk": "@@ -77,6 +78,8 @@\n \n   public static final String PERSISTENT = \"persistent\";\n   public static final String TRANSIENT = \"transient\";\n+  public static final Integer DEFAULT_QUERY_SIZE_LIMIT =\n+      Integer.parseInt(System.getProperty(\"defaultQuerySizeLimit\", \"false\"));", "originalCommit": "4375198313a18b6cc7c6bae39a334d55b8a34b59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3MDQ4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r541470486", "bodyText": "changed to 200", "author": "chloe-zh", "createdAt": "2020-12-12T01:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI3MDYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NTAxMQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r541465011", "bodyText": "move to ElasticsearchLogicalIndexScan?", "author": "penghuo", "createdAt": "2020-12-12T01:12:38Z", "path": "elasticsearch/src/main/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/planner/logical/rule/MergeAggAndIndexScan.java", "diffHunk": "@@ -64,4 +65,8 @@ public LogicalPlan apply(LogicalAggregation aggregation,\n         .groupByList(aggregation.getGroupByList())\n         .build();\n   }\n+\n+  private boolean hasLimitInIndexScan(ElasticsearchLogicalIndexScan indexScan) {", "originalCommit": "56e217d068c1c8a1116eea958655f48ce69201ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3MDUxOQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r541470519", "bodyText": "done", "author": "chloe-zh", "createdAt": "2020-12-12T01:39:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NTAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NzMzMg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/851#discussion_r541467332", "bodyText": "Btw, so no Limit operator created if LIMIT clause absent in query. In this case what's the size in DSL generated? I recall we wanted to create a Limit operator with a default value here anyway?", "author": "dai-chen", "createdAt": "2020-12-12T01:23:24Z", "path": "sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/AstBuilder.java", "diffHunk": "@@ -111,7 +112,16 @@ public UnresolvedPlan visitQuerySpecification(QuerySpecificationContext queryCon\n       return project.attach(emptyValue);\n     }\n \n-    UnresolvedPlan result = project.attach(visit(queryContext.fromClause()));\n+    // If limit (and offset) keyword exists:\n+    // Add Limit node, plan structure becomes:\n+    // Project -> Limit -> visit(fromClause)\n+    // Else:\n+    // Project -> visit(fromClause)\n+    UnresolvedPlan from = visit(queryContext.fromClause());\n+    if (queryContext.limitClause() != null) {", "originalCommit": "56e217d068c1c8a1116eea958655f48ce69201ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c6ff44bc2b36427f561eaafc008d2fe6e8dd4aba", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c6ff44bc2b36427f561eaafc008d2fe6e8dd4aba", "message": "update", "committedDate": "2020-12-12T01:38:16Z", "type": "commit"}]}