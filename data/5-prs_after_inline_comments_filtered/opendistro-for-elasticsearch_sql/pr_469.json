{"pr_number": 469, "pr_title": "Implement get index mapping in ES storage engine", "pr_createdAt": "2020-05-15T20:13:31Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/469", "timeline": [{"oid": "15359aea8edcb37cc7afceabb5d84efa56064e47", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/15359aea8edcb37cc7afceabb5d84efa56064e47", "message": "Add elasticsearch storage implementation", "committedDate": "2020-05-13T20:27:03Z", "type": "commit"}, {"oid": "3246707ec5b4589be217976aa7ad49a160cc1b11", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3246707ec5b4589be217976aa7ad49a160cc1b11", "message": "Add elasticsearch storage implementation", "committedDate": "2020-05-13T22:06:37Z", "type": "commit"}, {"oid": "1e81e2fa1d616d6fbdbd79c1af8af8c0665c8b77", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1e81e2fa1d616d6fbdbd79c1af8af8c0665c8b77", "message": "Add more test cases for better coverage", "committedDate": "2020-05-14T18:14:33Z", "type": "commit"}, {"oid": "55ef633dbf58f9bedaa8c6a09e723a671463b3bf", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/55ef633dbf58f9bedaa8c6a09e723a671463b3bf", "message": "Exclude security access from test coverage verification", "committedDate": "2020-05-14T18:41:48Z", "type": "commit"}, {"oid": "361b5da06a597c9235f7aa0dd6024ac46fbbf7c3", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/361b5da06a597c9235f7aa0dd6024ac46fbbf7c3", "message": "Add more ES type for test", "committedDate": "2020-05-15T18:35:15Z", "type": "commit"}, {"oid": "8d1981061814cb6eceeadb7665ff4bbbc20130a2", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8d1981061814cb6eceeadb7665ff4bbbc20130a2", "message": "Refactor and more JavaDocs", "committedDate": "2020-05-15T18:59:08Z", "type": "commit"}, {"oid": "cf6bff1ee7067fae53cd067472f2b4fffb7030c5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cf6bff1ee7067fae53cd067472f2b4fffb7030c5", "message": "Add toString for es domain class", "committedDate": "2020-05-15T21:53:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NzAzMw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/469#discussion_r426087033", "bodyText": "The null value should be filtered out.", "author": "penghuo", "createdAt": "2020-05-15T23:27:39Z", "path": "elasticsearch/src/main/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/mapping/IndexMapping.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.elasticsearch.mapping;\n+\n+import com.google.common.collect.ImmutableMap;\n+import lombok.ToString;\n+import org.elasticsearch.cluster.metadata.MappingMetaData;\n+\n+import java.util.Map;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import static java.util.Collections.emptyMap;\n+\n+/**\n+ * Elasticsearch index mapping. Because there is no specific behavior for different field types,\n+ * string is used to represent field types.\n+ */\n+@ToString\n+public class IndexMapping {\n+\n+    /**\n+     * Field mappings from field name to field type in Elasticsearch date type system.\n+     */\n+    private final Map<String, String> fieldMappings;\n+\n+    public IndexMapping(Map<String, String> fieldMappings) {\n+        this.fieldMappings = fieldMappings;\n+    }\n+\n+    public IndexMapping(MappingMetaData metaData) {\n+        this.fieldMappings = flatMappings(metaData.getSourceAsMap());\n+    }\n+\n+    /**\n+     * How many fields in the index (after flatten)\n+     * @return  field size\n+     */\n+    public int size() {\n+        return fieldMappings.size();\n+    }\n+\n+    /**\n+     * Return field type by its name.\n+     * @param fieldName     field name\n+     * @return              field type in string\n+     */\n+    public String getFieldType(String fieldName) {\n+        return fieldMappings.get(fieldName);\n+    }\n+\n+    /**\n+     * Get all field types and transform raw string type to expected type.\n+     * @param transform     transform function to transform field type in string to another type\n+     * @param <Type>        expected field type class\n+     * @return              mapping from field name to field type\n+     */\n+    public <Type> Map<String, Type> getAllFieldTypes(Function<String, Type> transform) {\n+        return fieldMappings.entrySet().\n+                             stream().\n+                             collect(Collectors.toMap(\n+                                 Map.Entry::getKey,\n+                                 e -> transform.apply(e.getValue())", "originalCommit": "cf6bff1ee7067fae53cd067472f2b4fffb7030c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NDU2Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/469#discussion_r426754566", "bodyText": "Thanks. Double checked there is only null value in Elasticsearch so we should be good. https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-data-types.html", "author": "dai-chen", "createdAt": "2020-05-18T16:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NzAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NzMzOQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/469#discussion_r426087339", "bodyText": "Is it possible to return null value? or we accept null value as return value?", "author": "penghuo", "createdAt": "2020-05-15T23:28:47Z", "path": "elasticsearch/src/main/java/com/amazon/opendistroforelasticsearch/sql/elasticsearch/mapping/IndexMapping.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.elasticsearch.mapping;\n+\n+import com.google.common.collect.ImmutableMap;\n+import lombok.ToString;\n+import org.elasticsearch.cluster.metadata.MappingMetaData;\n+\n+import java.util.Map;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import static java.util.Collections.emptyMap;\n+\n+/**\n+ * Elasticsearch index mapping. Because there is no specific behavior for different field types,\n+ * string is used to represent field types.\n+ */\n+@ToString\n+public class IndexMapping {\n+\n+    /**\n+     * Field mappings from field name to field type in Elasticsearch date type system.\n+     */\n+    private final Map<String, String> fieldMappings;\n+\n+    public IndexMapping(Map<String, String> fieldMappings) {\n+        this.fieldMappings = fieldMappings;\n+    }\n+\n+    public IndexMapping(MappingMetaData metaData) {\n+        this.fieldMappings = flatMappings(metaData.getSourceAsMap());\n+    }\n+\n+    /**\n+     * How many fields in the index (after flatten)\n+     * @return  field size\n+     */\n+    public int size() {\n+        return fieldMappings.size();\n+    }\n+\n+    /**\n+     * Return field type by its name.\n+     * @param fieldName     field name\n+     * @return              field type in string\n+     */\n+    public String getFieldType(String fieldName) {", "originalCommit": "cf6bff1ee7067fae53cd067472f2b4fffb7030c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5MzYxMQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/469#discussion_r426093611", "bodyText": "Yeah, it is. For now this is used in UT. Will add an existential check method or refactor it to return Optional if in use in future.", "author": "dai-chen", "createdAt": "2020-05-16T00:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NzMzOQ=="}], "type": "inlineReview"}, {"oid": "8ad3a3d9569a70edefdae67531bb97a6fbdc1612", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8ad3a3d9569a70edefdae67531bb97a6fbdc1612", "message": "Remove useless jacoco dir exclude", "committedDate": "2020-05-15T23:59:03Z", "type": "commit"}, {"oid": "5a66dd10f1d8d3188720ef0e67cedf32ba777639", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5a66dd10f1d8d3188720ef0e67cedf32ba777639", "message": "Add JavaDoc and UT for non exist field case", "committedDate": "2020-05-18T15:30:03Z", "type": "commit"}]}