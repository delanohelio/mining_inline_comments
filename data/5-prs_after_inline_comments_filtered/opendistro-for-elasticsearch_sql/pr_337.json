{"pr_number": 337, "pr_title": "Fix JDBC response for delete query", "pr_createdAt": "2020-01-08T23:13:57Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337", "timeline": [{"oid": "b1469030bf2da1736d9bbcc224eca18ef4386733", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b1469030bf2da1736d9bbcc224eca18ef4386733", "message": "Fix JDBC response for Delete queries", "committedDate": "2020-01-08T23:05:40Z", "type": "commit"}, {"oid": "3634d25f555d6a7a448b4c55a5896f32e6a338d3", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3634d25f555d6a7a448b4c55a5896f32e6a338d3", "message": "Add integration tests", "committedDate": "2020-01-08T23:06:59Z", "type": "commit"}, {"oid": "47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "message": "Merge branch 'master' into improve-delete", "committedDate": "2020-01-08T23:08:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5Njc4MA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364496780", "bodyText": "What if the data type is not LONG? Do we need to retrieve the data type from the schema rather than hard coding?", "author": "chloe-zh", "createdAt": "2020-01-08T23:35:52Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/DeleteResultSet.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.domain.Delete;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.index.reindex.BulkByScrollResponse;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeleteResultSet extends ResultSet {\n+    private Delete query;\n+    private Object queryResult;\n+\n+    private static final String DELETED = \"deleted_rows\";\n+\n+    public DeleteResultSet(Client client, Delete query, Object queryResult) {\n+        this.client = client;\n+        this.query = query;\n+        this.queryResult = queryResult;\n+        this.schema = new Schema(loadColumns());\n+        this.dataRows = new DataRows(loadRows());\n+    }\n+\n+    private List<Schema.Column> loadColumns() {\n+        return Collections.singletonList(new Schema.Column(DELETED, null, Schema.Type.LONG));", "originalCommit": "47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5OTkxOA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364499918", "bodyText": "It will always be being long. We can change this if there is a breaking change for future ODFE release.", "author": "abbashus", "createdAt": "2020-01-08T23:47:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5Njc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNDkwMw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364504903", "bodyText": "Should assertion for total and size be equalTo(totalHits)? And any reason not to use total or size as deleted rows directly?", "author": "dai-chen", "createdAt": "2020-01-09T00:07:49Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/DeleteIT.java", "diffHunk": "@@ -77,12 +68,76 @@ public void deleteWithConditionTest() throws IOException, InterruptedException {\n         // To prevent flakiness, the minimum value of 2000 msec works fine.\n         Thread.sleep(2000);\n \n-        selectQuery = String.format(\n-            Locale.ROOT,\n-            \"SELECT * FROM %s/phrase\",\n+        selectQuery = StringUtils.format(\"SELECT * FROM %s/phrase\", TestsConstants.TEST_INDEX_PHRASE);\n+\n+        response = executeRequest(makeRequest(selectQuery));\n+        assertThat(getTotalHits(response), equalTo(5));\n+    }\n+\n+    @Test\n+    public void deleteAllWithJdbcFormat() throws IOException, InterruptedException {\n+        String selectQuery = StringUtils.format(\"SELECT * FROM %s/account\", TestsConstants.TEST_INDEX_ACCOUNT);\n+        JSONObject response = executeRequest(makeRequest(selectQuery));\n+        int totalHits = getTotalHits(response);\n+\n+        String deleteQuery = StringUtils.format(\"DELETE FROM %s/account\", TestsConstants.TEST_INDEX_ACCOUNT);\n+\n+        response = new JSONObject(executeQuery(deleteQuery, \"jdbc\"));\n+        System.out.println(response);\n+        assertThat(response.query(\"/schema/0/name\"), equalTo(\"deleted_rows\"));\n+        assertThat(response.query(\"/schema/0/type\"), equalTo(\"long\"));\n+        assertThat(response.query(\"/datarows/0/0\"), equalTo(totalHits));\n+        assertThat(response.query(\"/total\"), equalTo(1));\n+        assertThat(response.query(\"/status\"), equalTo(200));\n+        assertThat(response.query(\"/size\"), equalTo(1));", "originalCommit": "47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNzM0OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364507349", "bodyText": "Yes, we could do it. I made my changes based on the solution proposed #131 .  Based on your recommendation should the response look like the following:\n{\n  \"schema\": [],\n  \"total\": <number of deleted rows> ,\n  \"datarows\": [],\n  \"size\": <number of deleted rows> >,\n  \"status\": 200\n}\n\nShould we get rid of schema and datarows altogether?", "author": "abbashus", "createdAt": "2020-01-09T00:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxNDg3NQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364514875", "bodyText": "Yeah, maybe. Or just leave them empty if any issue.", "author": "dai-chen", "createdAt": "2020-01-09T00:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NTIyOA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364885228", "bodyText": "I realized , we need the schema with deleted_rows column, because when converting to csv we don't emit the total and size values. Since we plan to derive the csv output directly from the common representation (currently used for jdbc format), in absence of deleted_rows column , the csv output would be empty.", "author": "abbashus", "createdAt": "2020-01-09T18:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5MTQzMw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364891433", "bodyText": "Sure, let's follow your current format. Thanks!", "author": "dai-chen", "createdAt": "2020-01-09T18:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNDkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNjk4Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364506983", "bodyText": "Probably not necessary for this data class. But it would be better to add a UT for test coverage.", "author": "dai-chen", "createdAt": "2020-01-09T00:16:15Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/DeleteResultSet.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.domain.Delete;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.index.reindex.BulkByScrollResponse;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeleteResultSet extends ResultSet {", "originalCommit": "47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNzU0MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364507541", "bodyText": "Sure, will add unit tests.", "author": "abbashus", "createdAt": "2020-01-09T00:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNjk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxNDU3Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364514572", "bodyText": "Thanks!", "author": "dai-chen", "createdAt": "2020-01-09T00:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNjk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4MTc4Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r365481782", "bodyText": "Added unit tests.", "author": "abbashus", "createdAt": "2020-01-11T00:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNjk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2NTQ4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364865486", "bodyText": "Perhaps not necessary- but I think it could be beneficial to add 1-2 more variety of queries to test with", "author": "davidcui1225", "createdAt": "2020-01-09T17:22:27Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/DeleteIT.java", "diffHunk": "@@ -77,12 +68,76 @@ public void deleteWithConditionTest() throws IOException, InterruptedException {\n         // To prevent flakiness, the minimum value of 2000 msec works fine.\n         Thread.sleep(2000);\n \n-        selectQuery = String.format(\n-            Locale.ROOT,\n-            \"SELECT * FROM %s/phrase\",\n+        selectQuery = StringUtils.format(\"SELECT * FROM %s/phrase\", TestsConstants.TEST_INDEX_PHRASE);\n+\n+        response = executeRequest(makeRequest(selectQuery));\n+        assertThat(getTotalHits(response), equalTo(5));\n+    }\n+\n+    @Test\n+    public void deleteAllWithJdbcFormat() throws IOException, InterruptedException {\n+        String selectQuery = StringUtils.format(\"SELECT * FROM %s/account\", TestsConstants.TEST_INDEX_ACCOUNT);\n+        JSONObject response = executeRequest(makeRequest(selectQuery));\n+        int totalHits = getTotalHits(response);\n+\n+        String deleteQuery = StringUtils.format(\"DELETE FROM %s/account\", TestsConstants.TEST_INDEX_ACCOUNT);\n+\n+        response = new JSONObject(executeQuery(deleteQuery, \"jdbc\"));\n+        System.out.println(response);\n+        assertThat(response.query(\"/schema/0/name\"), equalTo(\"deleted_rows\"));\n+        assertThat(response.query(\"/schema/0/type\"), equalTo(\"long\"));\n+        assertThat(response.query(\"/datarows/0/0\"), equalTo(totalHits));\n+        assertThat(response.query(\"/total\"), equalTo(1));\n+        assertThat(response.query(\"/status\"), equalTo(200));\n+        assertThat(response.query(\"/size\"), equalTo(1));\n+\n+        // The documents are not deleted immediately, causing the next search call to return all results.\n+        // To prevent flakiness, the minimum value of 2000 msec works fine.\n+        Thread.sleep(2000);\n+\n+        response = executeRequest(makeRequest(selectQuery));\n+        assertThat(getTotalHits(response), equalTo(0));\n+\n+        // Multiple invocation of delete query should return deleted == 0\n+        response = new JSONObject(executeQuery(deleteQuery, \"jdbc\"));\n+        assertThat(response.query(\"/datarows/0/0\"), equalTo(0));\n+    }\n+\n+    @Test", "originalCommit": "47fc33aa570e5e54f1e0c4a1ec2d512a2def240a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3OTY0Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/337#discussion_r364879643", "bodyText": "Can you provide examples of what you kind of variety you are expecting.", "author": "abbashus", "createdAt": "2020-01-09T17:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2NTQ4Ng=="}], "type": "inlineReview"}, {"oid": "98d64794a1f174a8d917bc794af8c7c73ddcb15c", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/98d64794a1f174a8d917bc794af8c7c73ddcb15c", "message": "Add unit tests", "committedDate": "2020-01-10T23:40:52Z", "type": "commit"}, {"oid": "fdbe3777d387250837ce983728ee33d18aee1a7a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fdbe3777d387250837ce983728ee33d18aee1a7a", "message": "Remove un-needed comment", "committedDate": "2020-01-10T23:52:31Z", "type": "commit"}, {"oid": "8d1755ef30feaf888261edef4e0fac8e00f2613b", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8d1755ef30feaf888261edef4e0fac8e00f2613b", "message": "Merge branch 'master' into improve-delete", "committedDate": "2020-01-13T19:40:51Z", "type": "commit"}]}