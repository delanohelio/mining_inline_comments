{"pr_number": 1182, "pr_title": "UMM Upgrade", "pr_createdAt": "2020-03-03T18:17:13Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1182", "timeline": [{"oid": "89c5a766363052ced2b1988f31d0ace682767bf7", "url": "https://github.com/rsksmart/rskj/commit/89c5a766363052ced2b1988f31d0ace682767bf7", "message": "ummRoot field creation in BlockToMineBuilder", "committedDate": "2020-03-03T19:11:38Z", "type": "forcePushed"}, {"oid": "5a00a5301084516e3a4f8db218b220ae7fcd9941", "url": "https://github.com/rsksmart/rskj/commit/5a00a5301084516e3a4f8db218b220ae7fcd9941", "message": "ummRoot field creation in BlockToMineBuilder", "committedDate": "2020-03-03T19:27:01Z", "type": "forcePushed"}, {"oid": "8c07b2d311ffce94fb8d21e920d4603622cc9b64", "url": "https://github.com/rsksmart/rskj/commit/8c07b2d311ffce94fb8d21e920d4603622cc9b64", "message": "ummRoot field creation in BlockToMineBuilder", "committedDate": "2020-03-06T14:01:28Z", "type": "forcePushed"}, {"oid": "97bb60c4b4f9c15dbbb4e7a4dae292146a70b2da", "url": "https://github.com/rsksmart/rskj/commit/97bb60c4b4f9c15dbbb4e7a4dae292146a70b2da", "message": "Try making BlockFactory::decodeHeader a bit more flexible by avoiding checks for exact sizes", "committedDate": "2020-03-10T18:48:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MTIwNQ==", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391141205", "bodyText": "This method should not be called when ummRoot.length ==0. It's better to throw an exception in that case.", "author": "SergioDemianLerner", "createdAt": "2020-03-11T17:29:01Z", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -496,6 +514,20 @@ public String getShortHashForMergedMining() {\n         return hashForMergedMining;\n     }\n \n+    private byte[] getHashRootForMergedMining(byte[] leftHash) {\n+        if ((ummRoot.length != UMM_LEAVES_LENGTH) && (ummRoot.length != 0)){", "originalCommit": "97bb60c4b4f9c15dbbb4e7a4dae292146a70b2da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYzMDUxMg==", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391630512", "bodyText": "This message will get old really fast. Change the message so it prints the exact amount of elements the header must have depending on if UMM is activated or not.", "author": "joaquinlpereyra-iov", "createdAt": "2020-03-12T13:46:13Z", "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "diffHunk": "@@ -186,14 +179,32 @@ private BlockHeader decodeHeader(RLPList rlpHeader, boolean sealed) {\n         byte[] minimumGasPriceBytes = rlpHeader.get(14).getRLPData();\n         Coin minimumGasPrice = RLP.parseSignedCoinNonNullZero(minimumGasPriceBytes);\n \n+        if (!canBeDecoded(rlpHeader, blockNumber)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"A block header must have 16/17 elements or 19/20 including merged-mining fields but it had %d\",\n+                    rlpHeader.size()\n+            ));", "originalCommit": "9a45a9ea7081156b2447529ed489fbf81614e820", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYzNjA0Nw==", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391636047", "bodyText": "Can we avoid using r++? It will only cause confusion at some point, at some point someone will believe that it does get(r + 1);r += 1 and it instead does get(r); r += 1", "author": "joaquinlpereyra-iov", "createdAt": "2020-03-12T13:54:40Z", "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "diffHunk": "@@ -186,14 +179,32 @@ private BlockHeader decodeHeader(RLPList rlpHeader, boolean sealed) {\n         byte[] minimumGasPriceBytes = rlpHeader.get(14).getRLPData();\n         Coin minimumGasPrice = RLP.parseSignedCoinNonNullZero(minimumGasPriceBytes);\n \n+        if (!canBeDecoded(rlpHeader, blockNumber)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"A block header must have 16/17 elements or 19/20 including merged-mining fields but it had %d\",\n+                    rlpHeader.size()\n+            ));\n+        }\n+\n         int r = 15;\n \n+        boolean isUmm = activationConfig.isActive(ConsensusRule.RSKIPUMM, blockNumber);\n+\n+        boolean includeUncleCount = isUmm ||\n+            // sizes prior to UMM activation\n+            rlpHeader.size() == (RLP_HEADER_SIZE-1) || rlpHeader.size() == (RLP_HEADER_SIZE_WITH_MERGED_MINING-1);\n+\n         int uncleCount = 0;\n-        if (rlpHeader.size() == RLP_HEADER_SIZE || rlpHeader.size() == RLP_HEADER_SIZE_WITH_MERGED_MINING) {\n+        if (includeUncleCount) {\n             byte[] ucBytes = rlpHeader.get(r++).getRLPData();\n             uncleCount = parseBigInteger(ucBytes).intValueExact();\n         }\n \n+        byte[] ummRoot = null;\n+        if (isUmm) {\n+            ummRoot = rlpHeader.get(r++).getRLPRawData();", "originalCommit": "9a45a9ea7081156b2447529ed489fbf81614e820", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0MzAyOA==", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391643028", "bodyText": "Should this be the condition an not isActive(umm)? For example, getPendingState always create a null ummRoot, even after activation... If coded this way, we will have two kind of blocks inside the node, some which encode to something with ummroots, and some which dont... is this intended? Sounds like it will complicate things at some point.", "author": "joaquinlpereyra-iov", "createdAt": "2020-03-12T14:04:48Z", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -349,6 +353,10 @@ public Coin getMinimumGasPrice() {\n         byte[] uncleCount = RLP.encodeBigInteger(BigInteger.valueOf(this.uncleCount));\n         fieldToEncodeList.add(uncleCount);\n \n+        if (this.ummRoot != null) {", "originalCommit": "9a45a9ea7081156b2447529ed489fbf81614e820", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0Mzg3Nw==", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391643877", "bodyText": "Same comments as above, shouldn't all blocks be UMM Blocks after the activation?", "author": "joaquinlpereyra-iov", "createdAt": "2020-03-12T14:06:05Z", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -477,9 +485,19 @@ public String getShortHashForMergedMining() {\n         return HashUtil.shortHash(getHashForMergedMining());\n     }\n \n+    public boolean isUMMBlock() {", "originalCommit": "9a45a9ea7081156b2447529ed489fbf81614e820", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "970c548001ccf72da78ad792dd64c679e24c49ab", "url": "https://github.com/rsksmart/rskj/commit/970c548001ccf72da78ad792dd64c679e24c49ab", "message": "Remove unnecesary ummRoot.length!=0 check since it was already done outside the invoked method", "committedDate": "2020-03-12T18:25:16Z", "type": "forcePushed"}, {"oid": "6d7ebe1ba7c49e8969ea041de9b10b8d06269a33", "url": "https://github.com/rsksmart/rskj/commit/6d7ebe1ba7c49e8969ea041de9b10b8d06269a33", "message": "Introduce ummRoot field to BlockHeader and implement new hashForMergedMining computation method", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "47149a817c8371b588a4656b1dc76e8387695cdd", "url": "https://github.com/rsksmart/rskj/commit/47149a817c8371b588a4656b1dc76e8387695cdd", "message": "Include ummRoot field to BlockHeader RLP encoding", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "b24cbd468cabc48a13ca1abc8a3349435552575c", "url": "https://github.com/rsksmart/rskj/commit/b24cbd468cabc48a13ca1abc8a3349435552575c", "message": "ummRoot field creation in BlockToMineBuilder", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "a042173633b0a66ec06bac402375a7650204b403", "url": "https://github.com/rsksmart/rskj/commit/a042173633b0a66ec06bac402375a7650204b403", "message": "Allow ummRoot to take null values in order to differentiate blocks between pre and post umm activation. Those before umm activation will have null ummRoot, while those after take an empty byte array as value", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "e2ba82767c738c486af52b91a45baf8307946e52", "url": "https://github.com/rsksmart/rskj/commit/e2ba82767c738c486af52b91a45baf8307946e52", "message": "Truncate hashForMergedMining to a 20 byte array (UMM_LEAVE_LENGTH) before calculating the new hashForMergedMining by creating a merkle tree with the umm root", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "73d1d9d674d7e315216f8b018d797d41ff3c9c75", "url": "https://github.com/rsksmart/rskj/commit/73d1d9d674d7e315216f8b018d797d41ff3c9c75", "message": "Try making BlockFactory::decodeHeader a bit more flexible by avoiding checks for exact sizes", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "52fca5c5fa2bdd2a715022a8c5efad9982486b27", "url": "https://github.com/rsksmart/rskj/commit/52fca5c5fa2bdd2a715022a8c5efad9982486b27", "message": "Remove unnecesary ummRoot.length!=0 check since it was already done outside the invoked method", "committedDate": "2020-03-13T15:58:26Z", "type": "commit"}, {"oid": "52fca5c5fa2bdd2a715022a8c5efad9982486b27", "url": "https://github.com/rsksmart/rskj/commit/52fca5c5fa2bdd2a715022a8c5efad9982486b27", "message": "Remove unnecesary ummRoot.length!=0 check since it was already done outside the invoked method", "committedDate": "2020-03-13T15:58:26Z", "type": "forcePushed"}]}