{"pr_number": 1258, "pr_title": "Implementation of Recovery Signature with Native Library", "pr_createdAt": "2020-06-18T14:07:26Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1258", "timeline": [{"oid": "8acdca1ed311fe5cceed7f3612cb97a0aaaf444a", "url": "https://github.com/rsksmart/rskj/commit/8acdca1ed311fe5cceed7f3612cb97a0aaaf444a", "message": "Implement Native as a RSKIP feature", "committedDate": "2020-08-11T19:19:35Z", "type": "forcePushed"}, {"oid": "a2f3641b098ae567f3d03859860fe2e169ed8369", "url": "https://github.com/rsksmart/rskj/commit/a2f3641b098ae567f3d03859860fe2e169ed8369", "message": "Implement Native as a RSKIP feature", "committedDate": "2020-08-11T19:38:00Z", "type": "forcePushed"}, {"oid": "0e2267639c71af710592d01a81453fe0262f38a1", "url": "https://github.com/rsksmart/rskj/commit/0e2267639c71af710592d01a81453fe0262f38a1", "message": "Implement Native as a RSKIP feature", "committedDate": "2020-08-13T17:57:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQwODczOA==", "url": "https://github.com/rsksmart/rskj/pull/1258#discussion_r479408738", "bodyText": "synchronized seems off here", "author": "nicops", "createdAt": "2020-08-28T16:23:52Z", "path": "rskj-core/src/main/java/co/rsk/remasc/RemascTransaction.java", "diffHunk": "@@ -73,7 +74,7 @@ public long transactionCost(Constants constants, ActivationConfig.ForBlock activ\n     }\n \n     @Override\n-    public RskAddress getSender() {\n+    public synchronized RskAddress getSender(ActivationConfig.ForBlock activations, SignatureCache signatureCache) {", "originalCommit": "16bed9721d142d0a57237d80b8ea9a360368f808", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NzQzMA==", "url": "https://github.com/rsksmart/rskj/pull/1258#discussion_r479477430", "bodyText": "It's definitely off for me too. In both remasc and normal transactions", "author": "donequis", "createdAt": "2020-08-28T18:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQwODczOA=="}], "type": "inlineReview"}, {"oid": "f4fdad042ae356224e6f2e0c241e9a9857ef8ce4", "url": "https://github.com/rsksmart/rskj/commit/f4fdad042ae356224e6f2e0c241e9a9857ef8ce4", "message": "reverting changes, and preparing for Native support of PoI", "committedDate": "2020-09-11T19:26:27Z", "type": "forcePushed"}, {"oid": "e1f05ec7c692a28a4eb20ca82f623ae705cd09f1", "url": "https://github.com/rsksmart/rskj/commit/e1f05ec7c692a28a4eb20ca82f623ae705cd09f1", "message": "reverting changes, and preparing for Native support of PoI", "committedDate": "2020-09-11T19:34:52Z", "type": "forcePushed"}, {"oid": "78ba338f9042077b5d074b5acc14f3285250dcd3", "url": "https://github.com/rsksmart/rskj/commit/78ba338f9042077b5d074b5acc14f3285250dcd3", "message": "reverting changes, and preparing for Native support of PoI", "committedDate": "2020-09-11T19:45:10Z", "type": "forcePushed"}, {"oid": "e362eb1acc4cb4f136aa0d62d3d38ca622fd0930", "url": "https://github.com/rsksmart/rskj/commit/e362eb1acc4cb4f136aa0d62d3d38ca622fd0930", "message": "new version of native-1.2.0", "committedDate": "2020-10-08T13:03:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk1OTM4OA==", "url": "https://github.com/rsksmart/rskj/pull/1258#discussion_r510959388", "bodyText": "This method is ugly when r and s are longer than 32 bytes. If we prepend garbage before the real r and s values, those bytes will be ignored. This does not happen with the BC implementation.\nThere's no immediate issue with that because the Transaction class does an extra validation on the r and s components, but those are not the only places where the recover from signature is used, causing some ugly cases there.\nI think that we should fail quickly here. If r or s are too big.", "author": "donequis", "createdAt": "2020-10-23T15:21:44Z", "path": "rskj-core/src/main/java/org/ethereum/crypto/signature/Secp256k1ServiceNative.java", "diffHunk": "@@ -19,10 +19,88 @@\n \n package org.ethereum.crypto.signature;\n \n+import org.bitcoin.NativeSecp256k1;\n+import org.bitcoin.NativeSecp256k1Exception;\n+import org.ethereum.crypto.ECKey;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.Nullable;\n+\n+import static java.lang.System.arraycopy;\n+\n /**\n  * Implementation of SignatureService with Native library.\n- * TODO: once integrated native implementation, should implement all methods.\n  */\n public class Secp256k1ServiceNative extends Secp256k1ServiceBC {\n \n+    private static final Logger logger = LoggerFactory.getLogger(Secp256k1ServiceNative.class);\n+    private static final byte[] ZERO_PUB = {0};\n+\n+    @Nullable\n+    @Override\n+    public ECKey recoverFromSignature(int recId, ECDSASignature sig, byte[] messageHash, boolean compressed) {\n+        check(recId >= 0, \"recId must be positive\");\n+        check(sig.getR().signum() >= 0, \"r must be positive\");\n+        check(sig.getS().signum() >= 0, \"s must be positive\");\n+        check(messageHash != null, \"messageHash must not be null\");\n+        byte[] pbKey;\n+        try {\n+            byte[] sigBytes = concatenate(sig);\n+            logger.trace(\"Recovering key from signature: comporessed[{}] - recId[{}] - sig[{}] - msgHash[{}].\", compressed, recId, sigBytes, messageHash);\n+            try {\n+                pbKey = NativeSecp256k1.ecdsaRecover(sigBytes, messageHash, recId, compressed);\n+            } catch (NativeSecp256k1Exception e) {\n+                if (NativeSecp256k1.isInfinity(sigBytes, messageHash, recId)) {\n+                    return ECKey.fromPublicOnly(ZERO_PUB);\n+                }\n+                throw e;\n+            }\n+        } catch (Exception e) {\n+            logger.error(\"Couldnt recover key from signature.\", e);\n+            return null;\n+        }\n+        return ECKey.fromPublicOnly(pbKey);\n+    }\n+\n+    /**\n+     * Returns a (r.length + s.length) bytes array long\n+     *\n+     * Note: we take 32 bytes from \"r\" and 32 bytes from \"s\".\n+     *\n+     * @param sig {r,s}\n+     * @return r + s (64 length byte array)\n+     */\n+    byte[] concatenate(ECDSASignature sig) {", "originalCommit": "1261187901cc452b35032d861288bf89c934d850", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk5NjM2Mw==", "url": "https://github.com/rsksmart/rskj/pull/1258#discussion_r522996363", "bodyText": "fixed.", "author": "patogallaiovlabs", "createdAt": "2020-11-13T14:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk1OTM4OA=="}], "type": "inlineReview"}, {"oid": "fd0d587e28c8f7342f765c36fdbca18d24bc12b2", "url": "https://github.com/rsksmart/rskj/commit/fd0d587e28c8f7342f765c36fdbca18d24bc12b2", "message": "add test for address when PoI", "committedDate": "2020-10-29T16:09:45Z", "type": "forcePushed"}, {"oid": "271737447b25037f8edf1bbc9023024a90a5550d", "url": "https://github.com/rsksmart/rskj/commit/271737447b25037f8edf1bbc9023024a90a5550d", "message": "Native implementation - 1st approach", "committedDate": "2020-11-13T14:04:35Z", "type": "commit"}, {"oid": "bd48e99ad668808386dabf2d4433d5ad7ec4d6e8", "url": "https://github.com/rsksmart/rskj/commit/bd48e99ad668808386dabf2d4433d5ad7ec4d6e8", "message": "first approach implementing Native sec256k1", "committedDate": "2020-11-13T14:04:36Z", "type": "commit"}, {"oid": "e5f8469e91b80621889fd17d47253ba1e14caf67", "url": "https://github.com/rsksmart/rskj/commit/e5f8469e91b80621889fd17d47253ba1e14caf67", "message": "Fix Point at Infinity issue. Remove Verify from Native implementation(not working properly). Add Unit Testing for border cases.", "committedDate": "2020-11-13T14:04:36Z", "type": "commit"}, {"oid": "99ff2751e08d38788408f4645b54534125a52217", "url": "https://github.com/rsksmart/rskj/commit/99ff2751e08d38788408f4645b54534125a52217", "message": "fix initialization of singleton", "committedDate": "2020-11-13T14:04:36Z", "type": "commit"}, {"oid": "b1ce6e7fce6f01b424d0039117f4c07d9bc64490", "url": "https://github.com/rsksmart/rskj/commit/b1ce6e7fce6f01b424d0039117f4c07d9bc64490", "message": "Skip Native tests when library is not available", "committedDate": "2020-11-13T14:04:36Z", "type": "commit"}, {"oid": "7ca648d3782b29134914bc9583c2b07cd166aaad", "url": "https://github.com/rsksmart/rskj/commit/7ca648d3782b29134914bc9583c2b07cd166aaad", "message": "fix lgtm\n\nfix dep native\n\nupdate native sha\n\nfix sonar\n\nPR comments (Vlad and Pame)", "committedDate": "2020-11-13T14:05:36Z", "type": "commit"}, {"oid": "86a25033a949e3b7f292696483e764d6b2d86020", "url": "https://github.com/rsksmart/rskj/commit/86a25033a949e3b7f292696483e764d6b2d86020", "message": "reverting changes, and preparing for Native support of PoI", "committedDate": "2020-11-13T14:06:07Z", "type": "commit"}, {"oid": "2d669e02a1ed7a49b97cf7d48aecd5893722aad0", "url": "https://github.com/rsksmart/rskj/commit/2d669e02a1ed7a49b97cf7d48aecd5893722aad0", "message": "Integrating new version of native library with PoI", "committedDate": "2020-11-13T14:06:39Z", "type": "commit"}, {"oid": "c5d8918d8c118455fd9135c6d96c431a8b3abb19", "url": "https://github.com/rsksmart/rskj/commit/c5d8918d8c118455fd9135c6d96c431a8b3abb19", "message": "default to native", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "e65025e535cefe496f0b9fa054fb62ec3e6842a6", "url": "https://github.com/rsksmart/rskj/commit/e65025e535cefe496f0b9fa054fb62ec3e6842a6", "message": "signature tests", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "9188165494722880669ee56af4ca842111d4da10", "url": "https://github.com/rsksmart/rskj/commit/9188165494722880669ee56af4ca842111d4da10", "message": "improve concatenate method", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "acdcfe8f30c01c6feb35a52f17af5d465bacf340", "url": "https://github.com/rsksmart/rskj/commit/acdcfe8f30c01c6feb35a52f17af5d465bacf340", "message": "make static call, to improve JVM call", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "7a9207ae3ff5bdda85b4453f3665d5638d4201da", "url": "https://github.com/rsksmart/rskj/commit/7a9207ae3ff5bdda85b4453f3665d5638d4201da", "message": "Consider corner case, when we could receive garbage apart from valid bytes, as R/S in signature.", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "615bb832ccfe955d32e91a1237afdb2481053262", "url": "https://github.com/rsksmart/rskj/commit/615bb832ccfe955d32e91a1237afdb2481053262", "message": "fix test", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "4f53c614e0dc1661db45e3600ceba27c7848818e", "url": "https://github.com/rsksmart/rskj/commit/4f53c614e0dc1661db45e3600ceba27c7848818e", "message": "add test for address when PoI", "committedDate": "2020-11-13T14:07:42Z", "type": "commit"}, {"oid": "4f53c614e0dc1661db45e3600ceba27c7848818e", "url": "https://github.com/rsksmart/rskj/commit/4f53c614e0dc1661db45e3600ceba27c7848818e", "message": "add test for address when PoI", "committedDate": "2020-11-13T14:07:42Z", "type": "forcePushed"}]}