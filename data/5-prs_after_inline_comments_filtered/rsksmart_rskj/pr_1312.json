{"pr_number": 1312, "pr_title": "Make num of account slots for pending txs configurable", "pr_createdAt": "2020-09-15T10:01:05Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1312", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NjUxOQ==", "url": "https://github.com/rsksmart/rskj/pull/1312#discussion_r488946519", "bodyText": "When testing i would like to know what happens in the border cases, for instance:\n\nnonce = config -1 / config / config +1 / 0 / high", "author": "patogallaiovlabs", "createdAt": "2020-09-15T20:15:13Z", "path": "rskj-core/src/test/java/co/rsk/net/handler/txvalidator/TxValidatorNonceRangeValidatorTest.java", "diffHunk": "@@ -29,32 +29,51 @@\n public class TxValidatorNonceRangeValidatorTest {\n \n     @Test\n-    public void nonceInRange() {\n+    public void oneSlotRange() {\n         Transaction tx1 = Mockito.mock(Transaction.class);\n         Transaction tx2 = Mockito.mock(Transaction.class);\n+        Transaction tx3 = Mockito.mock(Transaction.class);\n         AccountState as = Mockito.mock(AccountState.class);\n \n         Mockito.when(tx1.getNonceAsInteger()).thenReturn(BigInteger.valueOf(0));\n-        Mockito.when(tx2.getNonceAsInteger()).thenReturn(BigInteger.valueOf(3));\n-        Mockito.when(as.getNonce()).thenReturn(BigInteger.valueOf(0));\n+        Mockito.when(tx2.getNonceAsInteger()).thenReturn(BigInteger.valueOf(1));\n+        Mockito.when(tx3.getNonceAsInteger()).thenReturn(BigInteger.valueOf(2));\n+        Mockito.when(as.getNonce()).thenReturn(BigInteger.valueOf(1));\n \n-        TxValidatorNonceRangeValidator tvnrv = new TxValidatorNonceRangeValidator();\n-        Assert.assertTrue(tvnrv.validate(tx1, as, null, null, Long.MAX_VALUE, false).transactionIsValid());\n+        TxValidatorNonceRangeValidator tvnrv = new TxValidatorNonceRangeValidator(1);\n+        Assert.assertFalse(tvnrv.validate(tx1, as, null, null, Long.MAX_VALUE, false).transactionIsValid());\n         Assert.assertTrue(tvnrv.validate(tx2, as, null, null, Long.MAX_VALUE, false).transactionIsValid());\n+        Assert.assertFalse(tvnrv.validate(tx3, as, null, null, Long.MAX_VALUE, false).transactionIsValid());\n     }\n \n     @Test\n-    public void nonceOutOfRange() {\n+    public void fiveSlotsRange() {", "originalCommit": "41bb3d2df2caea4dfaff215152f742314fdbe08a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE4NDc3Mw==", "url": "https://github.com/rsksmart/rskj/pull/1312#discussion_r489184773", "bodyText": "I guess these cases are covered in the oneSlotRange and fiveSlotsRange tests. Or did I miss something?\n\nwhen accountSlots == 1 and account nonce == 1 and tx nonce is [0, 1, 2]\nwhen  accountSlots == 5 and account nonce == 1 and tx nonce is [0, 1, 5, 6]", "author": "Vovchyk", "createdAt": "2020-09-16T06:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NjUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5NzQ3OQ==", "url": "https://github.com/rsksmart/rskj/pull/1312#discussion_r489497479", "bodyText": "Ok, i see. The only one left is the 2nd case then, when nonce is 4, right?", "author": "patogallaiovlabs", "createdAt": "2020-09-16T14:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NjUxOQ=="}], "type": "inlineReview"}, {"oid": "b84d2f41855e441969994385a9cd23c58d3f7434", "url": "https://github.com/rsksmart/rskj/commit/b84d2f41855e441969994385a9cd23c58d3f7434", "message": "Updated unit tests", "committedDate": "2020-09-22T17:46:57Z", "type": "forcePushed"}, {"oid": "20f80aab5d50b1a8e0a811f59223291c80713df1", "url": "https://github.com/rsksmart/rskj/commit/20f80aab5d50b1a8e0a811f59223291c80713df1", "message": "Updated unit tests", "committedDate": "2020-09-24T14:28:06Z", "type": "forcePushed"}, {"oid": "1f53dad22f7996749bd5af6959a1551a6e016453", "url": "https://github.com/rsksmart/rskj/commit/1f53dad22f7996749bd5af6959a1551a6e016453", "message": "Made num of account slots for pending txs configurable", "committedDate": "2020-09-25T13:50:51Z", "type": "commit"}, {"oid": "1f9c5420ae671b1df515686ab6309ae48d687768", "url": "https://github.com/rsksmart/rskj/commit/1f9c5420ae671b1df515686ab6309ae48d687768", "message": "Updated unit tests", "committedDate": "2020-09-25T13:50:51Z", "type": "commit"}, {"oid": "1f9c5420ae671b1df515686ab6309ae48d687768", "url": "https://github.com/rsksmart/rskj/commit/1f9c5420ae671b1df515686ab6309ae48d687768", "message": "Updated unit tests", "committedDate": "2020-09-25T13:50:51Z", "type": "forcePushed"}]}