{"pr_number": 1257, "pr_title": "Message Handler to Support multiple messages from different Light Peers", "pr_createdAt": "2020-06-18T13:26:14Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1257", "timeline": [{"oid": "786453113a772c816633865083d67c681521fd8f", "url": "https://github.com/rsksmart/rskj/commit/786453113a772c816633865083d67c681521fd8f", "message": "init development", "committedDate": "2020-06-18T13:31:05Z", "type": "commit"}, {"oid": "9c8073707fb820a9566ee0345a57a622e89ed7e5", "url": "https://github.com/rsksmart/rskj/commit/9c8073707fb820a9566ee0345a57a622e89ed7e5", "message": "add implemented light message handler", "committedDate": "2020-06-18T13:31:07Z", "type": "commit"}, {"oid": "95798f8cc169e9970514a08626cb37e93a2a6612", "url": "https://github.com/rsksmart/rskj/commit/95798f8cc169e9970514a08626cb37e93a2a6612", "message": "init queue", "committedDate": "2020-06-18T13:31:07Z", "type": "commit"}, {"oid": "935394a58ddc2d6068ff7b755e155b86a8f54153", "url": "https://github.com/rsksmart/rskj/commit/935394a58ddc2d6068ff7b755e155b86a8f54153", "message": "added service", "committedDate": "2020-06-18T13:33:41Z", "type": "commit"}, {"oid": "908d694663e83ccab7f3ac732a94ae75de83c993", "url": "https://github.com/rsksmart/rskj/commit/908d694663e83ccab7f3ac732a94ae75de83c993", "message": "fixed some tests and fifo queue", "committedDate": "2020-06-18T13:34:41Z", "type": "commit"}, {"oid": "0edd3bc72ad7344dd4c3d1cd0478aa1f630c9c43", "url": "https://github.com/rsksmart/rskj/commit/0edd3bc72ad7344dd4c3d1cd0478aa1f630c9c43", "message": "fix old tests, start new ones", "committedDate": "2020-06-18T13:37:09Z", "type": "commit"}, {"oid": "7b521257c9fbd01e78735122cf18aa755456a46f", "url": "https://github.com/rsksmart/rskj/commit/7b521257c9fbd01e78735122cf18aa755456a46f", "message": "some tests", "committedDate": "2020-06-18T13:37:12Z", "type": "commit"}, {"oid": "712884f6f104f1081bfc1e203c3cea479ee57908", "url": "https://github.com/rsksmart/rskj/commit/712884f6f104f1081bfc1e203c3cea479ee57908", "message": "added test and refactor", "committedDate": "2020-06-18T13:37:12Z", "type": "commit"}, {"oid": "1a79c13596d8d45debe91128e4177be14df4c479", "url": "https://github.com/rsksmart/rskj/commit/1a79c13596d8d45debe91128e4177be14df4c479", "message": "added headers, a test, and methods in testutils", "committedDate": "2020-06-18T13:37:12Z", "type": "commit"}, {"oid": "3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "url": "https://github.com/rsksmart/rskj/commit/3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "message": "refactor", "committedDate": "2020-06-18T13:37:12Z", "type": "commit"}, {"oid": "3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "url": "https://github.com/rsksmart/rskj/commit/3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "message": "refactor", "committedDate": "2020-06-18T13:37:12Z", "type": "forcePushed"}, {"oid": "c844cb8f17ac4535303f7b3491e0419dabfc9956", "url": "https://github.com/rsksmart/rskj/commit/c844cb8f17ac4535303f7b3491e0419dabfc9956", "message": "fixed failing tests and remove failing test due to new functionality", "committedDate": "2020-06-18T13:48:30Z", "type": "commit"}, {"oid": "274757ed96de49d4211eac202dbdaa0f783f831e", "url": "https://github.com/rsksmart/rskj/commit/274757ed96de49d4211eac202dbdaa0f783f831e", "message": "sonar issues, now with await :D", "committedDate": "2020-06-18T14:10:59Z", "type": "commit"}, {"oid": "e4d311527a0fe15c9a028948d119ec16bd8cf3fc", "url": "https://github.com/rsksmart/rskj/commit/e4d311527a0fe15c9a028948d119ec16bd8cf3fc", "message": "changed lightpeer name in some places", "committedDate": "2020-06-18T18:19:55Z", "type": "commit"}, {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3", "url": "https://github.com/rsksmart/rskj/commit/4c1682fb5f55173ff2d472990f7a623feba930c3", "message": "fix test coverage in some changed places", "committedDate": "2020-06-19T13:41:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMjkyNA==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443722924", "bodyText": "Why do the max amount of blocks is eleven?", "author": "julianlen", "createdAt": "2020-06-22T17:40:11Z", "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;\n+\n+    public LightMessageHandler(LightProcessor lightProcessor, LightSyncProcessor lightSyncProcessor) {\n+        this.lightProcessor = lightProcessor;\n+        this.lightSyncProcessor = lightSyncProcessor;\n+        this.queue = new ArrayBlockingQueue<>(11);", "originalCommit": "4c1682fb5f55173ff2d472990f7a623feba930c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMDY3NQ==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r444230675", "bodyText": "Left at 11. Comment added on how it can be increased", "author": "smcsicardi", "createdAt": "2020-06-23T13:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMjkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNTA0NQ==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443725045", "bodyText": "Is it just for me? postMessage sounds me a bit confusing, I understand 'postMessage' like \"send message\". A name as \"store message\" could fit better?", "author": "julianlen", "createdAt": "2020-06-22T17:44:16Z", "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;\n+\n+    public LightMessageHandler(LightProcessor lightProcessor, LightSyncProcessor lightSyncProcessor) {\n+        this.lightProcessor = lightProcessor;\n+        this.lightSyncProcessor = lightSyncProcessor;\n+        this.queue = new ArrayBlockingQueue<>(11);\n+    }\n+\n+    public void processMessage(LightPeer lightPeer, LightClientMessage message,\n+                               ChannelHandlerContext ctx, LightClientHandler lightClientHandler) {\n+        LightClientMessageVisitor visitor = new LightClientMessageVisitor(lightPeer, lightProcessor, lightSyncProcessor, ctx, lightClientHandler);\n+        message.accept(visitor);\n+    }\n+\n+    public void postMessage(LightPeer lightPeer, LightClientMessage message, ChannelHandlerContext ctx,", "originalCommit": "4c1682fb5f55173ff2d472990f7a623feba930c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIxMDkzMw==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r444210933", "bodyText": "Changed to \"enqueueMessage\" in order to better explain the method, because it does just that :P", "author": "smcsicardi", "createdAt": "2020-06-23T13:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNTA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMzUxMQ==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443733511", "bodyText": "By default, the stopped variable is false?", "author": "julianlen", "createdAt": "2020-06-22T17:59:30Z", "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;", "originalCommit": "4c1682fb5f55173ff2d472990f7a623feba930c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2MDQzMQ==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443760431", "bodyText": "yes, but I should add it just in case", "author": "smcsicardi", "createdAt": "2020-06-22T18:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMzUxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc1NTY0Mg==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443755642", "bodyText": "Ok, we should implement a peer handler before accepting messages from more than one peer, we are not doing anything to peers with bad behavior.", "author": "julianlen", "createdAt": "2020-06-22T18:42:39Z", "path": "rskj-core/src/test/java/co/rsk/net/light/LightSyncProcessorTest.java", "diffHunk": "@@ -141,29 +141,12 @@ public void processStatusMessageAndShouldAskForAndReceiveBlockHeaderCorrectly()\n \n         BlockHeadersMessage blockHeadersMessage = new BlockHeadersMessage(requestId, bHs);\n \n-        lightClientHandler.channelRead0(ctx, blockHeadersMessage);\n+        lightMessageHandler.processMessage(lightPeer, blockHeadersMessage, ctx, lightClientHandler);\n \n         assertEquals(1, lightPeer.getBlocks().size());\n         assertEquals(bHs, lightPeer.getBlocks());\n     }\n \n-    @Test", "originalCommit": "4c1682fb5f55173ff2d472990f7a623feba930c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2NDExMA==", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443764110", "bodyText": "This is a mistake on my part, this should not be removed, it relates to a constant I wrongly changed", "author": "smcsicardi", "createdAt": "2020-06-22T18:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc1NTY0Mg=="}], "type": "inlineReview"}, {"oid": "22e63cdefad4d4c8e1ffc57275c4609264ea0632", "url": "https://github.com/rsksmart/rskj/commit/22e63cdefad4d4c8e1ffc57275c4609264ea0632", "message": "PR changes", "committedDate": "2020-06-23T13:19:33Z", "type": "commit"}]}