{"pr_number": 1368, "pr_title": "Modify the signature and the way the derivationHash is saved.", "pr_createdAt": "2020-11-19T12:52:47Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1368", "timeline": [{"oid": "6c6ed051b272a892ef4f308c78d8fae40792fd46", "url": "https://github.com/rsksmart/rskj/commit/6c6ed051b272a892ef4f308c78d8fae40792fd46", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-19T14:42:34Z", "type": "forcePushed"}, {"oid": "b2dd2285386bff119c79dc34d30db672a7e09dec", "url": "https://github.com/rsksmart/rskj/commit/b2dd2285386bff119c79dc34d30db672a7e09dec", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T15:00:33Z", "type": "forcePushed"}, {"oid": "07923203f235a29facd47c609f6844eab5eb825f", "url": "https://github.com/rsksmart/rskj/commit/07923203f235a29facd47c609f6844eab5eb825f", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T15:29:44Z", "type": "forcePushed"}, {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6", "url": "https://github.com/rsksmart/rskj/commit/46ff7bbaa57dc7482488e33b9510f0681b48aba6", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T16:01:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0NDkxOQ==", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529744919", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Sha256Hash rskTxHash = PegTestUtils.createHash(2);\n          \n          \n            \n                    Sha256Hash btcTxHash = PegTestUtils.createHash(2);", "author": "josedahlquist", "createdAt": "2020-11-24T17:16:56Z", "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2154,13 +2154,16 @@ public void saveCoinBaseInformation_after_RSKIP143() throws IOException {\n     public void isFastBridgeFederationDerivationHashUsed_afterRSKIP176_returnTrue() {\n         Repository repository = mock(Repository.class);\n \n-        Sha256Hash hash = Sha256Hash.ZERO_HASH;\n+        Sha256Hash derivationHash = PegTestUtils.createHash(1);\n+        Sha256Hash rskTxHash = PegTestUtils.createHash(2);", "originalCommit": "46ff7bbaa57dc7482488e33b9510f0681b48aba6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0NTY1Mg==", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529745652", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullrskTxHash_notSaved() throws IOException {\n          \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_null_derivationHash_notSaved() throws IOException {", "author": "josedahlquist", "createdAt": "2020-11-24T17:18:04Z", "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2281,24 +2297,72 @@ public void saveDerivationArgumentsScriptHash_afterRSKIP176_Ok() throws IOExcept\n                 activations\n         );\n \n-        provider.markFastBridgeFederationDerivationHashAsUsed(hash);\n+        provider.markFastBridgeFederationDerivationHashAsUsed(rskTxHash, derivationHash);\n \n         provider.save();\n \n         verify(repository, times(1)).addStorageBytes(\n                 PrecompiledContracts.BRIDGE_ADDR,\n-                DataWord.fromLongString(\"fastBridgeScriptHash-\" + hash.toString()),\n+                DataWord.fromLongString(\"fastBridgeHashUsedInBtcTx-\" + rskTxHash.toString() + derivationHash.toString()),\n                 new byte[]{FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE_TEST}\n         );\n         verifyNoMoreInteractions(repository);\n     }\n \n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {\n+        Repository repository = mock(Repository.class);\n+\n+        Sha256Hash derivationHash = PegTestUtils.createHash(1);\n+        Sha256Hash rskTxHash = null;\n+\n+        ActivationConfig.ForBlock activations = mock(ActivationConfig.ForBlock.class);\n+        when(activations.isActive(ConsensusRule.RSKIP176)).thenReturn(true);\n+\n+        BridgeStorageProvider provider = new BridgeStorageProvider(\n+                repository,\n+                PrecompiledContracts.BRIDGE_ADDR,\n+                config.getNetworkConstants().getBridgeConstants(),\n+                activations\n+        );\n+\n+        provider.markFastBridgeFederationDerivationHashAsUsed(rskTxHash, derivationHash);\n+\n+        provider.save();\n+        \n+        verifyZeroInteractions(repository);\n+    }\n+\n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullrskTxHash_notSaved() throws IOException {", "originalCommit": "46ff7bbaa57dc7482488e33b9510f0681b48aba6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b313289d9532c3e715c93e4a9049338c89f0b87", "url": "https://github.com/rsksmart/rskj/commit/1b313289d9532c3e715c93e4a9049338c89f0b87", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T17:32:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NDEzMA==", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529774130", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {\n          \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_null_derivationHash_notSaved() throws IOException {", "author": "josedahlquist", "createdAt": "2020-11-24T18:01:48Z", "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2281,24 +2297,48 @@ public void saveDerivationArgumentsScriptHash_afterRSKIP176_Ok() throws IOExcept\n                 activations\n         );\n \n-        provider.markFastBridgeFederationDerivationHashAsUsed(hash);\n+        provider.markFastBridgeFederationDerivationHashAsUsed(btcTxHash, derivationHash);\n \n         provider.save();\n \n         verify(repository, times(1)).addStorageBytes(\n                 PrecompiledContracts.BRIDGE_ADDR,\n-                DataWord.fromLongString(\"fastBridgeScriptHash-\" + hash.toString()),\n+                DataWord.fromLongString(\"fastBridgeHashUsedInBtcTx-\" + btcTxHash.toString() + derivationHash.toString()),\n                 new byte[]{FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE_TEST}\n         );\n         verifyNoMoreInteractions(repository);\n     }\n \n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {", "originalCommit": "1b313289d9532c3e715c93e4a9049338c89f0b87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "11bb3eff491a419b294d21f45c0a9161cd856865", "url": "https://github.com/rsksmart/rskj/commit/11bb3eff491a419b294d21f45c0a9161cd856865", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T18:08:15Z", "type": "commit"}, {"oid": "11bb3eff491a419b294d21f45c0a9161cd856865", "url": "https://github.com/rsksmart/rskj/commit/11bb3eff491a419b294d21f45c0a9161cd856865", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "committedDate": "2020-11-24T18:08:15Z", "type": "forcePushed"}]}