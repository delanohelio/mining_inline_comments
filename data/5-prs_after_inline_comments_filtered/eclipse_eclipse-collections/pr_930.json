{"pr_number": 930, "pr_title": "Optimize implementations of aggregateBy in Bags to use forEachWithOcc\u2026", "pr_createdAt": "2020-06-30T19:47:08Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/930", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3NzQ2Mw==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r447977463", "bodyText": "Hi @prathasirisha, you could move this for loop into a method on the NonMutatingAggregationProcedure class.", "author": "donraab", "createdAt": "2020-06-30T21:03:20Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,14 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "originalCommit": "2038e7ff5ec57d90b5cc92936035af591205ee15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MzcwNg==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448043706", "bodyText": "Moved it to NonMutatingAggregationProcedure", "author": "prathasirisha", "createdAt": "2020-07-01T00:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3NzQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3ODA3NA==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r447978074", "bodyText": "You could reuse the method you move to NonMutatingAggregationProcedure.", "author": "donraab", "createdAt": "2020-06-30T21:04:28Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +304,14 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        Procedure<T> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "originalCommit": "2038e7ff5ec57d90b5cc92936035af591205ee15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MzgwNQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448043805", "bodyText": "Reused the method from NonMutatingAggregationProcedure", "author": "prathasirisha", "createdAt": "2020-07-01T00:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3ODA3NA=="}], "type": "inlineReview"}, {"oid": "6f82d4fe8ce46e4b23d7531e5446d3766382fc28", "url": "https://github.com/eclipse/eclipse-collections/commit/6f82d4fe8ce46e4b23d7531e5446d3766382fc28", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-06-30T23:59:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2MTQ5Nw==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448061497", "bodyText": "Hi @prathasirisha, if you switch the parameters you can use a method reference to call this.", "author": "donraab", "createdAt": "2020-07-01T01:09:31Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(int occurrences, T each)", "originalCommit": "6f82d4fe8ce46e4b23d7531e5446d3766382fc28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3MzY1OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448073659", "bodyText": "Yup, done!", "author": "prathasirisha", "createdAt": "2020-07-01T01:59:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2MTQ5Nw=="}], "type": "inlineReview"}, {"oid": "8c1afa870797976b7c96694da01a9d39f114926d", "url": "https://github.com/eclipse/eclipse-collections/commit/8c1afa870797976b7c96694da01a9d39f114926d", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-01T01:57:07Z", "type": "forcePushed"}, {"oid": "36a04361dc022868767de532a037f8f36aefe144", "url": "https://github.com/eclipse/eclipse-collections/commit/36a04361dc022868767de532a037f8f36aefe144", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-01T01:58:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448077791", "bodyText": "Hi @prathasirisha, I'm struggling on this name as well. On the one hand this name matches the parameters exactly. But I wonder if it would be better to name this repeatForOccurrences. @nikhilnanivadekar @motlin opinions?", "author": "donraab", "createdAt": "2020-07-01T02:15:38Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(T each, int occurrences)", "originalCommit": "36a04361dc022868767de532a037f8f36aefe144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMTkxMQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448711911", "bodyText": "if @nikhilnanivadekar and @motlin are not in disagreement then let's go with repeatForOccurrences", "author": "donraab", "createdAt": "2020-07-02T02:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzg5NQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448077895", "bodyText": "I would shorten the variable name to procedure.", "author": "donraab", "createdAt": "2020-07-01T02:16:02Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +303,8 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "originalCommit": "36a04361dc022868767de532a037f8f36aefe144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxNDA2MQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448714061", "bodyText": "Done", "author": "prathasirisha", "createdAt": "2020-07-02T02:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3ODAxMg==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448078012", "bodyText": "I would shorten the variable name to procedure.", "author": "donraab", "createdAt": "2020-07-01T02:16:30Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,8 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "originalCommit": "36a04361dc022868767de532a037f8f36aefe144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxNDAyOA==", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448714028", "bodyText": "Done.", "author": "prathasirisha", "createdAt": "2020-07-02T02:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3ODAxMg=="}], "type": "inlineReview"}, {"oid": "9a131cfd57d25ea47f13e0716943223488e7bb04", "url": "https://github.com/eclipse/eclipse-collections/commit/9a131cfd57d25ea47f13e0716943223488e7bb04", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-02T02:24:03Z", "type": "forcePushed"}, {"oid": "89d0ec657e17c543d8a8ada45aa026b66aeaf7cf", "url": "https://github.com/eclipse/eclipse-collections/commit/89d0ec657e17c543d8a8ada45aa026b66aeaf7cf", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-02T02:29:05Z", "type": "forcePushed"}, {"oid": "fd748572dd4297de42a94f05a315eaf7302a385e", "url": "https://github.com/eclipse/eclipse-collections/commit/fd748572dd4297de42a94f05a315eaf7302a385e", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-02T03:23:46Z", "type": "forcePushed"}, {"oid": "518e8e5e1590a9695110f5f6bcb9e10ed986cbd8", "url": "https://github.com/eclipse/eclipse-collections/commit/518e8e5e1590a9695110f5f6bcb9e10ed986cbd8", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-02T03:41:29Z", "type": "commit"}, {"oid": "518e8e5e1590a9695110f5f6bcb9e10ed986cbd8", "url": "https://github.com/eclipse/eclipse-collections/commit/518e8e5e1590a9695110f5f6bcb9e10ed986cbd8", "message": "Optimize implementations of aggregateBy in Bags to use forEachWithOccurrences.Closes #449\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-07-02T03:41:29Z", "type": "forcePushed"}]}