{"pr_number": 2081, "pr_title": "Add DataValues to the BlockEntities where they belong. [API-8]", "pr_createdAt": "2020-01-14T02:29:57Z", "pr_url": "https://github.com/SpongePowered/SpongeAPI/pull/2081", "timeline": [{"oid": "69892430a9eee80d49cabe782e7327bdad26132c", "url": "https://github.com/SpongePowered/SpongeAPI/commit/69892430a9eee80d49cabe782e7327bdad26132c", "message": "Put all the BlockEntity values in the BlockEntities.", "committedDate": "2020-01-15T04:50:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NjQyNQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r366696425", "bodyText": "Just author will do", "author": "Zidane", "createdAt": "2020-01-15T05:00:51Z", "path": "src/main/java/org/spongepowered/api/block/entity/StructureBlock.java", "diffHunk": "@@ -34,4 +43,88 @@\n  */\n public interface StructureBlock extends BlockEntity {\n \n+    /**\n+     * {@link Keys#STRUCTURE_MODE}\n+     * @return The structure mode of this structure block.\n+     */\n+    default Value.Mutable<StructureMode> mode() {\n+        return this.requireValue(Keys.STRUCTURE_MODE).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_POWERED}\n+     * @return Whether this structure block is powered.\n+     */\n+    default Value.Mutable<Boolean> powered() {\n+        return this.requireValue(Keys.STRUCTURE_POWERED).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_SHOW_BOUNDING_BOX}\n+     *\n+     * <p>In vanilla, this is only visible to {@link Player}s whose\n+     * {@link GameMode} is {@link GameModes#CREATIVE} or\n+     * {@link GameModes#SPECTATOR}.</p>\n+     *\n+     * @return Whether the bounding box should be visible.\n+     */\n+    default Value.Mutable<Boolean> showBoundingBox() {\n+        return this.requireValue(Keys.STRUCTURE_SHOW_BOUNDING_BOX).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_SHOW_AIR}\n+     * @return Whether the air within the structure should be visible.\n+     */\n+    default Value.Mutable<Boolean> showAir() {\n+        return this.requireValue(Keys.STRUCTURE_SHOW_AIR).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_IGNORE_ENTITIES}\n+     * @return Whether this structure block should ignore entities.\n+     */\n+    default Value.Mutable<Boolean> ignoreEntities() {\n+        return this.requireValue(Keys.STRUCTURE_IGNORE_ENTITIES).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_SIZE}\n+     * @return The size of the structure.\n+     */\n+    default Value.Mutable<Vector3i> size() {\n+        return this.requireValue(Keys.STRUCTURE_SIZE).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_POSITION}\n+     * @return The position of the structure.\n+     */\n+    default Value.Mutable<Vector3i> position() {\n+        return this.requireValue(Keys.STRUCTURE_POSITION).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_SEED}\n+     * @return The seed of the structure to be generated.\n+     */\n+    default Value.Mutable<Long> seed() {\n+        return this.requireValue(Keys.STRUCTURE_SEED).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_INTEGRITY}\n+     * @return The integrity of the structure.\n+     */\n+    default Value.Mutable<Double> integrity() {\n+        return this.requireValue(Keys.STRUCTURE_INTEGRITY).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#STRUCTURE_AUTHOR}\n+     * @return The author of the structure loaded by the structure block.\n+     */\n+    default Optional<Value.Mutable<String>> structureAuthor() {", "originalCommit": "69892430a9eee80d49cabe782e7327bdad26132c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b3aee3f29ac1f5144283a858523152da2d86113", "url": "https://github.com/SpongePowered/SpongeAPI/commit/1b3aee3f29ac1f5144283a858523152da2d86113", "message": "Put all the BlockEntity values in the BlockEntities and rename PlayerHead -> Skull to match the vanilla BlockEntity impl and make representedPlayer Optional.", "committedDate": "2020-01-17T03:23:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDk0OA==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r368190948", "bodyText": "Discord comment:\nBanner and enchantment table only need to extend NameableBlockEntity because of inheritance", "author": "i509VCB", "createdAt": "2020-01-18T00:48:50Z", "path": "src/main/java/org/spongepowered/api/block/entity/Banner.java", "diffHunk": "@@ -33,7 +33,7 @@\n /**\n  * Represents a Banner {@link BlockEntity}.\n  */\n-public interface Banner extends BlockEntity {\n+public interface Banner extends BlockEntity, NameableBlockEntity {", "originalCommit": "1b3aee3f29ac1f5144283a858523152da2d86113", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71e7597ac5c4caf9a960e1e4d81546a03ed60e62", "url": "https://github.com/SpongePowered/SpongeAPI/commit/71e7597ac5c4caf9a960e1e4d81546a03ed60e62", "message": "Put all the BlockEntity values in the BlockEntities and rename PlayerHead -> Skull to match the vanilla BlockEntity impl and make representedPlayer Optional.", "committedDate": "2020-01-18T02:15:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwODMwMA==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r368208300", "bodyText": "mode\nRename ComparatorType to ComparatorMode", "author": "Zidane", "createdAt": "2020-01-18T05:44:43Z", "path": "src/main/java/org/spongepowered/api/block/entity/Comparator.java", "diffHunk": "@@ -24,9 +24,20 @@\n  */\n package org.spongepowered.api.block.entity;\n \n+import org.spongepowered.api.data.Keys;\n+import org.spongepowered.api.data.type.ComparatorType;\n+import org.spongepowered.api.data.value.Value;\n+\n /**\n  * Represents a Redstone Comparator.\n  */\n public interface Comparator extends BlockEntity {\n \n+    /**\n+     * {@link Keys#COMPARATOR_TYPE}\n+     * @return The type of the Comparator.\n+     */\n+    default Value.Mutable<ComparatorType> type() {", "originalCommit": "71e7597ac5c4caf9a960e1e4d81546a03ed60e62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwODMyNw==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r368208327", "bodyText": "Rename to gameProfile\nRename key to GAME_PROFILE", "author": "Zidane", "createdAt": "2020-01-18T05:45:30Z", "path": "src/main/java/org/spongepowered/api/block/entity/Skull.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.block.entity;\n+\n+import org.spongepowered.api.block.BlockTypes;\n+import org.spongepowered.api.data.Keys;\n+import org.spongepowered.api.data.value.Value;\n+import org.spongepowered.api.profile.GameProfile;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Represents a head/skull from an entity.\n+ */\n+public interface Skull extends BlockEntity {\n+\n+    /**\n+     * {@link Keys#REPRESENTED_PLAYER}\n+     *\n+     * <p>Gets the current represented player {@link GameProfile} for this\n+     * {@link Skull}.</p>\n+     *\n+     * <p>This value is only present when the Skull is bound to a\n+     * {@link BlockTypes#PLAYER_HEAD} or\n+     * {@link BlockTypes#PLAYER_WALL_HEAD}.</p>\n+     *\n+     * @return The current represented player value\n+     */\n+    default Optional<Value.Mutable<GameProfile>> representedPlayer() {", "originalCommit": "71e7597ac5c4caf9a960e1e4d81546a03ed60e62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c00c402d62a7649784619e18dad9a1d8a35c6638", "url": "https://github.com/SpongePowered/SpongeAPI/commit/c00c402d62a7649784619e18dad9a1d8a35c6638", "message": "Put all the BlockEntity values in the BlockEntities and rename PlayerHead -> Skull to match the vanilla BlockEntity impl and make representedPlayer Optional.", "committedDate": "2020-01-19T07:51:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwNzY4NQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r368807685", "bodyText": "Note that this is somewhat of a misnomer. The TileEntity is only going to exist while the piston is extending or retracting. It'd be better to explain that while a Piston can be sticky or normal, the Piston as a BlockEntity instance is serving only to produce \"movement\" of the blocks being pushed (I know this because I've had to work around these sort of changes in the world with the enhanced tracker).", "author": "gabizou", "createdAt": "2020-01-21T04:33:55Z", "path": "src/main/java/org/spongepowered/api/block/entity/Piston.java", "diffHunk": "@@ -33,4 +37,19 @@\n  */\n public interface Piston extends BlockEntity {\n \n+    /**\n+     * {@link Keys#PISTON_TYPE}\n+     * @return The type of this piston.\n+     */\n+    default Value.Mutable<PistonType> type() {\n+        return this.requireValue(Keys.PISTON_TYPE).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#EXTENDED}\n+     * @return Whether this piston is extended.", "originalCommit": "c00c402d62a7649784619e18dad9a1d8a35c6638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE2NDg5NQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r369164895", "bodyText": "So what I've thought from that statement is the piston type doesn't really apply in this case. A look at the wiki for the data structure does show an extended value (which we have)  and I don't really see a is sticky attribute. So remove that value from the block entity? (of course the piston block type would still accept that key)", "author": "i509VCB", "createdAt": "2020-01-21T18:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwNzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg4MjUwNw==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2081#discussion_r369882507", "bodyText": "Ive removed the PistonType from the block entity and added a data value for getting the state which the piston block entity represents.", "author": "i509VCB", "createdAt": "2020-01-23T00:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwNzY4NQ=="}], "type": "inlineReview"}, {"oid": "a26230b788984c3e247323687914853a5ed1abee", "url": "https://github.com/SpongePowered/SpongeAPI/commit/a26230b788984c3e247323687914853a5ed1abee", "message": "Put all the BlockEntity values in the BlockEntities and rename PlayerHead -> Skull to match the vanilla BlockEntity impl and make representedPlayer Optional.", "committedDate": "2020-01-23T00:43:38Z", "type": "commit"}, {"oid": "a26230b788984c3e247323687914853a5ed1abee", "url": "https://github.com/SpongePowered/SpongeAPI/commit/a26230b788984c3e247323687914853a5ed1abee", "message": "Put all the BlockEntity values in the BlockEntities and rename PlayerHead -> Skull to match the vanilla BlockEntity impl and make representedPlayer Optional.", "committedDate": "2020-01-23T00:43:38Z", "type": "forcePushed"}]}