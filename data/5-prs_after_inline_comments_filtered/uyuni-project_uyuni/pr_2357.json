{"pr_number": 2357, "pr_title": "WIP: Refactoring", "pr_createdAt": "2020-06-25T12:06:48Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2357", "timeline": [{"oid": "30f112bc205819253293f977ab605f24c6a9e2a8", "url": "https://github.com/uyuni-project/uyuni/commit/30f112bc205819253293f977ab605f24c6a9e2a8", "message": "initialize instances in SchedulerKernel", "committedDate": "2020-06-25T12:49:34Z", "type": "forcePushed"}, {"oid": "fb62a8b1d20b85d5ddca1712bc27d61c6ef9367b", "url": "https://github.com/uyuni-project/uyuni/commit/fb62a8b1d20b85d5ddca1712bc27d61c6ef9367b", "message": "better description for GlobalInstanceHolder", "committedDate": "2020-07-06T09:55:29Z", "type": "forcePushed"}, {"oid": "685374ed1f5a26689d8afc47efdd1e806b8d53d1", "url": "https://github.com/uyuni-project/uyuni/commit/685374ed1f5a26689d8afc47efdd1e806b8d53d1", "message": "use systemEntitlementManager instead of global", "committedDate": "2020-07-07T13:42:34Z", "type": "forcePushed"}, {"oid": "b3eb34fdf0f64c50f9abbed261e3a4f5befff831", "url": "https://github.com/uyuni-project/uyuni/commit/b3eb34fdf0f64c50f9abbed261e3a4f5befff831", "message": "use GlobalInstanceHolder in jsp", "committedDate": "2020-07-08T11:27:19Z", "type": "forcePushed"}, {"oid": "7c41e3bd9c36fc1c25d91fd27a1b6d5bf282bc9b", "url": "https://github.com/uyuni-project/uyuni/commit/7c41e3bd9c36fc1c25d91fd27a1b6d5bf282bc9b", "message": "use GlobalInstanceHolder in jsp", "committedDate": "2020-07-08T12:33:39Z", "type": "forcePushed"}, {"oid": "0250c77ea9def19e9d8404b2d98fa20520003c73", "url": "https://github.com/uyuni-project/uyuni/commit/0250c77ea9def19e9d8404b2d98fa20520003c73", "message": "remove prefix", "committedDate": "2020-07-08T14:54:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5OTYwNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452799606", "bodyText": "What's the rationale behind getting, for example ServerGroupManager instance from GlobalInstanceHolder but creating new instance for ClusterManager.", "author": "admd", "createdAt": "2020-07-10T12:00:52Z", "path": "java/code/src/com/redhat/rhn/common/security/acl/test/AccessTest.java", "diffHunk": "@@ -51,16 +57,22 @@\n public class AccessTest extends BaseTestCaseWithUser {\n \n     private Acl acl;\n+    private final SaltService saltService = new SaltService();\n+    private final SystemQuery systemQuery = saltService;\n+    private final SaltApi saltApi = saltService;\n+    private final ServerGroupManager serverGroupManager = GlobalInstanceHolder.SERVER_GROUP_MANAGER;\n+    private final FormulaManager formulaManager = new FormulaManager(saltApi);\n+    private final ClusterManager clusterManager = new ClusterManager(saltApi, systemQuery, serverGroupManager, formulaManager);\n ", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1MDE0Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453550146", "bodyText": "No specific reason. There is a lot of test code and a lot of things that can be simplified there so i mainly focused on non test code first and left test code to mostly automatic refactoring to speed up the process.", "author": "lucidd", "createdAt": "2020-07-13T10:23:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5OTYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1MTY2NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452851664", "bodyText": "Unrelated to this PR's theme but because we are touching the line, maybe we just remove this useless cast and change the errataCounts to Map.", "author": "admd", "createdAt": "2020-07-10T13:42:49Z", "path": "java/code/src/com/redhat/rhn/frontend/action/groups/GroupDetailAction.java", "diffHunk": "@@ -48,7 +51,7 @@ public ActionForward execute(ActionMapping mapping, ActionForm form,\n         User user = rctx.getCurrentUser();\n         ManagedServerGroup sg = rctx.lookupAndBindServerGroup();\n         HashMap errataCounts =\n-                (HashMap) ServerGroupManager.getInstance().errataCounts(user, sg);\n+                (HashMap) serverGroupManager.errataCounts(user, sg);\n         long minionCount = MinionServerUtils.filterSaltMinions(sg.getServers()).count();", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1Nzc2NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452857764", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        GlobalInstanceHolder.SYSTEM_ENTITLEMENT_MANAGER.setBaseEntitlement(s, base);\n          \n          \n            \n                        systemEntitlementManager.setBaseEntitlement(s, base);", "author": "admd", "createdAt": "2020-07-10T13:53:03Z", "path": "java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java", "diffHunk": "@@ -145,7 +146,7 @@ private boolean processSubmission(HttpServletRequest request,\n         Entitlement base = EntitlementManager.getByName(selectedEnt);\n         log.debug(\"base: \" + base);\n         if (base != null) {\n-            SystemEntitlementManager.INSTANCE.setBaseEntitlement(s, base);\n+            GlobalInstanceHolder.SYSTEM_ENTITLEMENT_MANAGER.setBaseEntitlement(s, base);", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkxMDY5Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452910692", "bodyText": "I know we are not doing pure functional programming but it seems weird to have this side effect of registering handlers in a getter and on top of that every time. Can we do it better?", "author": "admd", "createdAt": "2020-07-10T15:20:34Z", "path": "java/code/src/com/redhat/rhn/common/security/acl/AclFactory.java", "diffHunk": "@@ -54,14 +46,15 @@ public static AclFactory getInstance() {\n      */\n     public Acl getAcl(String mixinsIn) {\n         Acl aclObj = new Acl();\n-        Access access = new Access();\n         aclObj.registerHandler(access);\n \n         // Add the mixin handlers as well.\n         if (mixinsIn != null) {\n             String[] mixin = StringUtils.split(mixinsIn, \",\");\n             for (int i = 0; i < mixin.length; i++) {\n-                aclObj.registerHandler(StringUtils.trim(mixin[i]));\n+                if (!mixin[i].equals(Access.class.getName())) {", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1NjA0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453556040", "bodyText": "yeah the method name is a bit weird. There is also a todo comment at the top of this class about implementing cashing. I think this would be a good topic for another refactoring while also getting rid of the use of reflection here.", "author": "lucidd", "createdAt": "2020-07-13T10:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkxMDY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkxNTQxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452915410", "bodyText": "I expect that we will be moving all the *Manager classes used in this class to the constructor as well and will modify the needed static methods from them. Do we have a strategy here that we will follow or will it be just Adhoc like we did it here for ClusterManager?\nOn a side note: One thing that looks odd or not so good is passing null in the constructor of Access at so many places in Test*  just to satisfy the signature.", "author": "admd", "createdAt": "2020-07-10T15:28:39Z", "path": "java/code/src/com/redhat/rhn/common/security/acl/Access.java", "diffHunk": "@@ -51,12 +51,14 @@\n public class Access extends BaseHandler {\n \n     protected static final Logger LOG = Logger.getLogger(Access.class);\n+    private final ClusterManager clusterManager;\n \n     /**\n      * Constructor for Access object\n+     * @param clusterManagerIn\n      */\n-    public Access() {\n-        super();\n+    public Access(ClusterManager clusterManagerIn) {", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2NzQ1Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453567457", "bodyText": "I expect that we will be moving all the *Manager classes used in this class to the constructor as well and will modify the needed static methods from them.\nDo we have a strategy here that we will follow or will it be just Adhoc like we did it here for ClusterManager?\n\nYes that the plan. The current goal was still on removing all global references to SaltService/SystemQuery/SaltApi.\nSo the strategy is use is to go top down and refactor everything needed to get rid of a particular global reference and try to mostly ignore anything else.\n\nOn a side note: One thing that looks odd or not so good is passing null in the constructor of Access at so many places in Test* just to satisfy the signature.\n\nI know. i think i will fix that now. I just did that to safe time because its obvious that ClusterManager is rarely even used by Access.", "author": "lucidd", "createdAt": "2020-07-13T10:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkxNTQxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNDEwNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452924105", "bodyText": "Nitpick: maybe return the result directly.", "author": "admd", "createdAt": "2020-07-10T15:44:19Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/formula/FormulaHandler.java", "diffHunk": "@@ -210,8 +210,8 @@ public int setFormulasOfServer(User loggedInUser, Integer systemId,\n      * @xmlrpc.returntype struct with saved formula data\n      */\n     public Map<String, Object> getSystemFormulaData(User loggedInUser, Integer systemId, String formulaName) {\n-        FormulaManager manager = FormulaManager.getInstance();\n-        Map<String, Object> savedData = manager.getSystemFormulaData(loggedInUser, formulaName, systemId.longValue());\n+        Map<String, Object> savedData = formulaManager\n+                .getSystemFormulaData(loggedInUser, formulaName, systemId.longValue());", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNzQ1Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452937452", "bodyText": "Nitpick: If we are using it only once, maybe inline it and directly use GlobalInstanceHolder.SERVER_GROUP_MANAGER", "author": "admd", "createdAt": "2020-07-10T16:08:36Z", "path": "java/code/src/com/redhat/rhn/manager/org/MigrationManager.java", "diffHunk": "@@ -130,11 +133,10 @@ public static void removeOrgRelationships(User user, Server server) {\n         SystemManager.unsubscribeServerFromChannel(server, server.getBaseChannel());\n \n         // Remove from all system groups:\n-        ServerGroupManager manager = ServerGroupManager.getInstance();\n         for (ManagedServerGroup group : server.getManagedGroups()) {\n             List<Server> tempList = new LinkedList<Server>();\n             tempList.add(server);\n-            manager.removeServers(group, tempList);\n+            SERVER_GROUP_MANAGER.removeServers(group, tempList);", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4MjM4Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453682383", "bodyText": "I did this as an in between step since those classes should also be refactored at some point. The other reason was to keep references to GlobalInstanceHolder.* to a minimum so the find usage dialog in intellij is easier to work with.", "author": "lucidd", "createdAt": "2020-07-13T14:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNzQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzODAwMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452938003", "bodyText": "Same as above...directly use GlobalInstanceHolder.SERVER_GROUP_MANAGER", "author": "admd", "createdAt": "2020-07-10T16:09:41Z", "path": "java/code/src/com/redhat/rhn/manager/recurringactions/RecurringActionManager.java", "diffHunk": "@@ -157,13 +159,12 @@ private static OrgRecurringAction createOrgRecurringAction(long orgId, User user\n      * @return list of group recurring actions\n      */\n     public static List<GroupRecurringAction> listGroupRecurringActions(long groupId, User user) {\n-        ServerGroupManager groupManager = ServerGroupManager.getInstance();\n         if (!user.hasRole(RoleFactory.SYSTEM_GROUP_ADMIN)) {\n             throw new PermissionException(String.format(\"User does not have access to group id %d\", groupId));\n         }\n         try {\n             /* Check if user has permission to access the group */\n-            groupManager.lookup(groupId, user);\n+            SERVER_GROUP_MANAGER.lookup(groupId, user);", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzODgzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452938830", "bodyText": "same as above", "author": "admd", "createdAt": "2020-07-10T16:11:12Z", "path": "java/code/src/com/redhat/rhn/manager/user/UserManager.java", "diffHunk": "@@ -922,7 +925,7 @@ public static DataResult usersInSet(User user, String label, PageControl pc) {\n     public static boolean canAdministerSystemGroup(User user, ManagedServerGroup group) {\n         return (user != null &&\n                 group != null &&\n-                ServerGroupManager.getInstance().canAccess(user, group) &&\n+                SERVER_GROUP_MANAGER.canAccess(user, group) &&", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTQzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452941430", "bodyText": "This looks funny :)", "author": "admd", "createdAt": "2020-07-10T16:16:19Z", "path": "java/code/src/com/redhat/rhn/taskomatic/task/sshpush/test/SSHPushWorkerSaltTest.java", "diffHunk": "@@ -240,7 +247,7 @@ public void testSystemIsRebooting() throws Exception {\n             }\n         };\n \n-        SSHPushWorkerSalt worker = successWorker(systemQuery);\n+        SSHPushWorkerSalt worker = successWorker(saltService, saltService);", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4MzMzMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453683332", "bodyText": "yeah it weird until we split the implementation of SystemQuery and SaltApi so they are not implemented by the same class.", "author": "lucidd", "createdAt": "2020-07-13T14:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMTUyMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452901522", "bodyText": "This will change the method logic. Before every time we call this method a new instance of Access was created, now the same instance is shared across all method invocations. Will this logic change  impact something on the code?\nSince Access class doesn't have any private fields I'm not expecting problems", "author": "rjmateus", "createdAt": "2020-07-10T15:05:02Z", "path": "java/code/src/com/redhat/rhn/common/security/acl/AclFactory.java", "diffHunk": "@@ -54,14 +46,15 @@ public static AclFactory getInstance() {\n      */\n     public Acl getAcl(String mixinsIn) {\n         Acl aclObj = new Acl();\n-        Access access = new Access();", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5NTU5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453595599", "bodyText": "yeah that was my though too. Its not much different structure wise then all the other Manager/Utils classes.", "author": "lucidd", "createdAt": "2020-07-13T11:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMTUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5NDE4OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452994188", "bodyText": "Since GlobalInstanceHolder.SERVER_GROUP_MANAGER is static and the class field sgm is not passed as contructor argument, should sgm variable changed to static and avoid get it again in this method?", "author": "rjmateus", "createdAt": "2020-07-10T18:04:25Z", "path": "java/code/src/com/redhat/rhn/frontend/action/token/groups/AddGroupsAction.java", "diffHunk": "@@ -95,7 +97,7 @@ public ActionForward handleDispatch(ListSessionSetHelper helper,\n      * @param groups list of server groups\n      */\n     static void setupAccessMap(RequestContext context, List<ManagedServerGroup> groups) {\n-        ServerGroupManager sgm = ServerGroupManager.getInstance();\n+        ServerGroupManager sgm = GlobalInstanceHolder.SERVER_GROUP_MANAGER;", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNjI0Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453606247", "bodyText": "Yeah i was thinking about that. But i think setupAccessMap is the problem. It makes it so one action class is used like a utility class by another one which seems arbitrary. It would be better to move this method into a Utility class at some point but i left it out of this PR.", "author": "lucidd", "createdAt": "2020-07-13T12:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5NDE4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5ODM1NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r452998354", "bodyText": "since is static, var name should be upcase?", "author": "rjmateus", "createdAt": "2020-07-10T18:13:17Z", "path": "java/code/src/com/redhat/rhn/manager/acl/AclManager.java", "diffHunk": "@@ -30,6 +31,8 @@\n  */\n public class AclManager {\n \n+    private static AclFactory aclFactory = GlobalInstanceHolder.ACL_FACTORY;", "originalCommit": "0250c77ea9def19e9d8404b2d98fa20520003c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzc2Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453607763", "bodyText": "yeah kind of. I forgot the final here so checkstyle did not tell me. Will fix it \ud83d\udc4d", "author": "lucidd", "createdAt": "2020-07-13T12:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5ODM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzNDc4MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453534780", "bodyText": "I was wondering here: even if you keep an instance of ServerGroupManager above (private serverGroupManager), why are you using GlobalInstanceHolder.SERVER_GROUP_MANAGER and assign it to another variable? Couldn't you just use the above instance?", "author": "renner", "createdAt": "2020-07-13T09:56:57Z", "path": "java/code/src/com/redhat/rhn/domain/server/test/ServerFactoryTest.java", "diffHunk": "@@ -254,7 +273,7 @@ public void testServerGroups() throws Exception {\n \n         Collection servers = new ArrayList();\n         servers.add(server);\n-        ServerGroupManager manager = ServerGroupManager.getInstance();\n+        ServerGroupManager manager = GlobalInstanceHolder.SERVER_GROUP_MANAGER;", "originalCommit": "d02b8e5b3364e71084c7603f6449fc01270c5333", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYxNDE3OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2357#discussion_r453614178", "bodyText": "Yeah you are right. ServerGroupManager in tests is mostly just automatic refactoring and i have not gone over all cases and checked if they could be simplified more. I will check those now since it came up multiple times in this review already.", "author": "lucidd", "createdAt": "2020-07-13T12:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzNDc4MA=="}], "type": "inlineReview"}, {"oid": "ba5c1da139d975de7a1359803f3dda118ee78da5", "url": "https://github.com/uyuni-project/uyuni/commit/ba5c1da139d975de7a1359803f3dda118ee78da5", "message": "add comment to clarify unused field", "committedDate": "2020-07-13T14:29:16Z", "type": "forcePushed"}, {"oid": "0ce389f1ac225f778565947014ccf18bed8cc24d", "url": "https://github.com/uyuni-project/uyuni/commit/0ce389f1ac225f778565947014ccf18bed8cc24d", "message": "replace SaltService instances in tests with mocked implementations", "committedDate": "2020-07-16T15:18:48Z", "type": "forcePushed"}, {"oid": "65d786d1d9d5f87232215cf86010e1d59a565deb", "url": "https://github.com/uyuni-project/uyuni/commit/65d786d1d9d5f87232215cf86010e1d59a565deb", "message": "replace SaltService instances in tests with mocked implementations", "committedDate": "2020-07-16T16:02:08Z", "type": "forcePushed"}, {"oid": "9419e2953d348f51371742493a48d268a30fbac9", "url": "https://github.com/uyuni-project/uyuni/commit/9419e2953d348f51371742493a48d268a30fbac9", "message": "replace SaltService instances in tests with mocked implementations", "committedDate": "2020-07-17T08:41:31Z", "type": "forcePushed"}, {"oid": "191f0e2614f446eb6402026eb5cbbecb09bd5d65", "url": "https://github.com/uyuni-project/uyuni/commit/191f0e2614f446eb6402026eb5cbbecb09bd5d65", "message": "parameterize FormulaManager", "committedDate": "2020-07-31T11:21:01Z", "type": "commit"}, {"oid": "936d1a826b53c7320d20cd0e04a851fb56174f97", "url": "https://github.com/uyuni-project/uyuni/commit/936d1a826b53c7320d20cd0e04a851fb56174f97", "message": "parameterize SaltUtils", "committedDate": "2020-07-31T11:21:04Z", "type": "commit"}, {"oid": "1210eed944a14ef9cf712ce75c123a286b60deff", "url": "https://github.com/uyuni-project/uyuni/commit/1210eed944a14ef9cf712ce75c123a286b60deff", "message": "refactor SaltServerActionService", "committedDate": "2020-07-31T11:24:37Z", "type": "commit"}, {"oid": "70837d10d2cc7326f4cf2460c6c334bb7dde6f90", "url": "https://github.com/uyuni-project/uyuni/commit/70837d10d2cc7326f4cf2460c6c334bb7dde6f90", "message": "refactor ClusterManager", "committedDate": "2020-07-31T11:24:38Z", "type": "commit"}, {"oid": "8369b822160248005297e2210bc4343f0f087040", "url": "https://github.com/uyuni-project/uyuni/commit/8369b822160248005297e2210bc4343f0f087040", "message": "initialize instances in SchedulerKernel", "committedDate": "2020-07-31T11:24:39Z", "type": "commit"}, {"oid": "2f7e41128f9fedd76531487f140ef9164fc0a0eb", "url": "https://github.com/uyuni-project/uyuni/commit/2f7e41128f9fedd76531487f140ef9164fc0a0eb", "message": "refactor minionActionUtils", "committedDate": "2020-07-31T11:25:27Z", "type": "commit"}, {"oid": "06fd83066c3eda799a74506af900bcaf3be1b191", "url": "https://github.com/uyuni-project/uyuni/commit/06fd83066c3eda799a74506af900bcaf3be1b191", "message": "remove SaltUtils.INSTANCE", "committedDate": "2020-07-31T11:25:28Z", "type": "commit"}, {"oid": "657113ffc269006f57fb9a248433cb58bc3b2892", "url": "https://github.com/uyuni-project/uyuni/commit/657113ffc269006f57fb9a248433cb58bc3b2892", "message": "remove SaltUtils default constructor", "committedDate": "2020-07-31T11:25:29Z", "type": "commit"}, {"oid": "c4234b77fb60eb2c995dee0e7bff780541a44036", "url": "https://github.com/uyuni-project/uyuni/commit/c4234b77fb60eb2c995dee0e7bff780541a44036", "message": "fix test", "committedDate": "2020-07-31T11:25:29Z", "type": "commit"}, {"oid": "2227bd53bb0adb4cb96b0598edcfafc3fedcb773", "url": "https://github.com/uyuni-project/uyuni/commit/2227bd53bb0adb4cb96b0598edcfafc3fedcb773", "message": "pass clustermanager as parameter to SaltServerActionService", "committedDate": "2020-07-31T11:25:30Z", "type": "commit"}, {"oid": "629ec6bea9753a62fe410c059f133e72c15aa0bc", "url": "https://github.com/uyuni-project/uyuni/commit/629ec6bea9753a62fe410c059f133e72c15aa0bc", "message": "refactor Access", "committedDate": "2020-07-31T11:25:30Z", "type": "commit"}, {"oid": "61776320bdbd8c07d47455e0c03cc607d698cc40", "url": "https://github.com/uyuni-project/uyuni/commit/61776320bdbd8c07d47455e0c03cc607d698cc40", "message": "refactor ACLFactory", "committedDate": "2020-07-31T11:25:30Z", "type": "commit"}, {"oid": "754d03d50f4d37381673098b2d8ddc15ac432475", "url": "https://github.com/uyuni-project/uyuni/commit/754d03d50f4d37381673098b2d8ddc15ac432475", "message": "refactor MenuTree", "committedDate": "2020-07-31T11:25:31Z", "type": "commit"}, {"oid": "92eda3a03c45820e105a0a3e68137a68e39a54d0", "url": "https://github.com/uyuni-project/uyuni/commit/92eda3a03c45820e105a0a3e68137a68e39a54d0", "message": "refactor RenderUtils", "committedDate": "2020-07-31T11:25:31Z", "type": "commit"}, {"oid": "bb431ad0d4277e4c0c3cc491be7f79446ed3c9c9", "url": "https://github.com/uyuni-project/uyuni/commit/bb431ad0d4277e4c0c3cc491be7f79446ed3c9c9", "message": "initialize instances in RhnServletListener", "committedDate": "2020-07-31T11:25:31Z", "type": "commit"}, {"oid": "1a10d5664130cad0e4b4c804558fcbdd357e726d", "url": "https://github.com/uyuni-project/uyuni/commit/1a10d5664130cad0e4b4c804558fcbdd357e726d", "message": "remove ClusterManager.instance", "committedDate": "2020-07-31T11:25:32Z", "type": "commit"}, {"oid": "b6dd760abdc8cb19fe166532ade101cdf95563e6", "url": "https://github.com/uyuni-project/uyuni/commit/b6dd760abdc8cb19fe166532ade101cdf95563e6", "message": "Consolidate instances into GlobalInstanceHolder", "committedDate": "2020-07-31T11:25:32Z", "type": "commit"}, {"oid": "fa247cd787242eeb9001654bc355159a602b66c1", "url": "https://github.com/uyuni-project/uyuni/commit/fa247cd787242eeb9001654bc355159a602b66c1", "message": "Remove FormulaManager.getInstance", "committedDate": "2020-07-31T11:25:33Z", "type": "commit"}, {"oid": "d47334016a42bf687e509d541863ce4e02d22e1c", "url": "https://github.com/uyuni-project/uyuni/commit/d47334016a42bf687e509d541863ce4e02d22e1c", "message": "reference more instances from GlobalInstanceHolder", "committedDate": "2020-07-31T11:25:33Z", "type": "commit"}, {"oid": "a73ff7f5500adf2381c263feeae5c584878fe8dd", "url": "https://github.com/uyuni-project/uyuni/commit/a73ff7f5500adf2381c263feeae5c584878fe8dd", "message": "remove RegularMinionBootstrapper.getInstance", "committedDate": "2020-07-31T11:25:33Z", "type": "commit"}, {"oid": "23386319edea7378c82695d5a1e40c3618e7fff3", "url": "https://github.com/uyuni-project/uyuni/commit/23386319edea7378c82695d5a1e40c3618e7fff3", "message": "remove SSHMinionBootstrapper.getInstance", "committedDate": "2020-07-31T11:25:34Z", "type": "commit"}, {"oid": "c452d864a5f298c0f8b12c0158260521ecfafbce", "url": "https://github.com/uyuni-project/uyuni/commit/c452d864a5f298c0f8b12c0158260521ecfafbce", "message": "remove SystemEntitlementManager.INSTANCE", "committedDate": "2020-07-31T11:26:17Z", "type": "commit"}, {"oid": "d0e690e9abfded2b66002f8c3da887a282c2872b", "url": "https://github.com/uyuni-project/uyuni/commit/d0e690e9abfded2b66002f8c3da887a282c2872b", "message": "better description for GlobalInstanceHolder", "committedDate": "2020-07-31T11:26:19Z", "type": "commit"}, {"oid": "359e0ea6d371a1368a9e0c83dc2634aa0f36475a", "url": "https://github.com/uyuni-project/uyuni/commit/359e0ea6d371a1368a9e0c83dc2634aa0f36475a", "message": "Fix test", "committedDate": "2020-07-31T11:26:19Z", "type": "commit"}, {"oid": "997a05d411cd00ca28a5f7290e538d2952151650", "url": "https://github.com/uyuni-project/uyuni/commit/997a05d411cd00ca28a5f7290e538d2952151650", "message": "Fix checkstyle", "committedDate": "2020-07-31T11:26:20Z", "type": "commit"}, {"oid": "97658035b4d26e3a1bdf8eb60935876b3deb4c5d", "url": "https://github.com/uyuni-project/uyuni/commit/97658035b4d26e3a1bdf8eb60935876b3deb4c5d", "message": "use GlobalInstanceHolder.SYSTEM_ENTITLEMENT_MANAGER", "committedDate": "2020-07-31T11:26:20Z", "type": "commit"}, {"oid": "79f2600e5a6109fe631b377b263110feba9f4076", "url": "https://github.com/uyuni-project/uyuni/commit/79f2600e5a6109fe631b377b263110feba9f4076", "message": "refactor SaltKeyUtils", "committedDate": "2020-07-31T11:26:20Z", "type": "commit"}, {"oid": "a93719ac9dfeb999a18b90398500907ef6ebecd5", "url": "https://github.com/uyuni-project/uyuni/commit/a93719ac9dfeb999a18b90398500907ef6ebecd5", "message": "add SaltKeyHandler to HandlerFactory", "committedDate": "2020-07-31T11:26:21Z", "type": "commit"}, {"oid": "5ca28dd86d9d231626451d0c68986487e80166bf", "url": "https://github.com/uyuni-project/uyuni/commit/5ca28dd86d9d231626451d0c68986487e80166bf", "message": "refactor ServerGroupManager and related classes", "committedDate": "2020-07-31T11:26:21Z", "type": "commit"}, {"oid": "3036c219da0aff530696f82ca15041ca1e4a1569", "url": "https://github.com/uyuni-project/uyuni/commit/3036c219da0aff530696f82ca15041ca1e4a1569", "message": "use systemEntitlementManager instead of global", "committedDate": "2020-07-31T11:26:22Z", "type": "commit"}, {"oid": "06596f1b7cb7f0dd37634c0f122fa130d2fb1cab", "url": "https://github.com/uyuni-project/uyuni/commit/06596f1b7cb7f0dd37634c0f122fa130d2fb1cab", "message": "use GlobalInstanceHolder in jsp", "committedDate": "2020-07-31T11:26:22Z", "type": "commit"}, {"oid": "f7b8d1fb60f70ec73bed7fd644ff69dd4347d08b", "url": "https://github.com/uyuni-project/uyuni/commit/f7b8d1fb60f70ec73bed7fd644ff69dd4347d08b", "message": "remove prefix", "committedDate": "2020-07-31T11:26:23Z", "type": "commit"}, {"oid": "8003ef20a047d9096a4c08d44f200aa54351ffea", "url": "https://github.com/uyuni-project/uyuni/commit/8003ef20a047d9096a4c08d44f200aa54351ffea", "message": "use systemEntitlementManager instead of global\n\nCo-authored-by: Abid Mehmood <amehmood@suse.de>", "committedDate": "2020-07-31T11:26:23Z", "type": "commit"}, {"oid": "508759ccaae3a9c44c587756d5d45787e0c2ce68", "url": "https://github.com/uyuni-project/uyuni/commit/508759ccaae3a9c44c587756d5d45787e0c2ce68", "message": "remove useless intermediate variable", "committedDate": "2020-07-31T11:26:23Z", "type": "commit"}, {"oid": "99a43157cc70e0f0280dc4ea5d921e431047cf5e", "url": "https://github.com/uyuni-project/uyuni/commit/99a43157cc70e0f0280dc4ea5d921e431047cf5e", "message": "make aclFactory final", "committedDate": "2020-07-31T11:26:24Z", "type": "commit"}, {"oid": "397a7cbef39cd3303f194e2b19c5bf140ca8203a", "url": "https://github.com/uyuni-project/uyuni/commit/397a7cbef39cd3303f194e2b19c5bf140ca8203a", "message": "remove GlobalInstanceHolder.SERVER_GROUP_MANAGER references from tests", "committedDate": "2020-07-31T11:26:24Z", "type": "commit"}, {"oid": "75159264727076477484e0b4b0ce814b8f32943f", "url": "https://github.com/uyuni-project/uyuni/commit/75159264727076477484e0b4b0ce814b8f32943f", "message": "add comment to clarify unused field", "committedDate": "2020-07-31T11:26:25Z", "type": "commit"}, {"oid": "ba76211ace43da1103a2ac10e2c84f4cb3efe537", "url": "https://github.com/uyuni-project/uyuni/commit/ba76211ace43da1103a2ac10e2c84f4cb3efe537", "message": "don't pass null to Access constructor in tests", "committedDate": "2020-07-31T11:26:25Z", "type": "commit"}, {"oid": "2d57e05d739ee90f64ba49cba2bb8b5551e3f175", "url": "https://github.com/uyuni-project/uyuni/commit/2d57e05d739ee90f64ba49cba2bb8b5551e3f175", "message": "replace GlobalInstanceHolder.SYSTEM_ENTITLEMENT_MANAGER with new instance", "committedDate": "2020-07-31T11:26:55Z", "type": "commit"}, {"oid": "05dc2a37fbcbc5970f8abbeab5688ab96f2be082", "url": "https://github.com/uyuni-project/uyuni/commit/05dc2a37fbcbc5970f8abbeab5688ab96f2be082", "message": "replace GlobalInstanceHolder.SYSTEM_QUERY with new instance", "committedDate": "2020-07-31T11:26:57Z", "type": "commit"}, {"oid": "90ca071c496ab34bf73c9bd2473c91309c643430", "url": "https://github.com/uyuni-project/uyuni/commit/90ca071c496ab34bf73c9bd2473c91309c643430", "message": "replace SaltService instances in tests with mocked implementations", "committedDate": "2020-07-31T11:26:57Z", "type": "commit"}, {"oid": "90ca071c496ab34bf73c9bd2473c91309c643430", "url": "https://github.com/uyuni-project/uyuni/commit/90ca071c496ab34bf73c9bd2473c91309c643430", "message": "replace SaltService instances in tests with mocked implementations", "committedDate": "2020-07-31T11:26:57Z", "type": "forcePushed"}]}