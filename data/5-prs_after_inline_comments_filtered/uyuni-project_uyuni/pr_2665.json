{"pr_number": 2665, "pr_title": "Virt boot using ISO and Cobbler", "pr_createdAt": "2020-09-28T14:58:30Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2665", "timeline": [{"oid": "1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "url": "https://github.com/uyuni-project/uyuni/commit/1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-09-30T14:47:41Z", "type": "forcePushed"}, {"oid": "e2e47968c733b8c3978c17200c0173bce90106d2", "url": "https://github.com/uyuni-project/uyuni/commit/e2e47968c733b8c3978c17200c0173bce90106d2", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-01T13:01:18Z", "type": "forcePushed"}, {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "url": "https://github.com/uyuni-project/uyuni/commit/f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-01T14:57:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMDM1OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500310358", "bodyText": "I wonder if we should make these names more general as they are now also used for installing a new instance.\nBut maybe not in this PR.", "author": "mcalmer", "createdAt": "2020-10-06T14:05:12Z", "path": "java/code/src/com/suse/manager/webui/services/SaltServerActionService.java", "diffHunk": "@@ -1715,12 +1731,26 @@ else if (state.equals(\"rebooted\") && ((VirtualizationRebootGuestAction)action).i\n         KickstartableTree tree = KickstartFactory.lookupKickstartTreeByLabel(nameParts.get(0),\n                 OrgFactory.lookupById(Long.valueOf(nameParts.get(1))));\n         tree.createOrUpdateSaltFS();\n-        String kOpts = buildKernelOptions(system, profile, dist, host);\n-        Map<String, Object> pillar = new HashMap<>();\n+        String kOpts = buildKernelOptions(system, profile, dist, kickstartHost);\n+        Map<String, String> pillar = new HashMap<>();\n         pillar.put(\"uyuni-reinstall-kernel\", saltFSKernel);\n         pillar.put(\"uyuni-reinstall-initrd\", saltFSInitrd);\n         pillar.put(\"uyuni-reinstall-kopts\", kOpts);\n+\n+        return pillar;", "originalCommit": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NTU4OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r510085588", "bodyText": "it's a quick thing to do. Will add it to this PR", "author": "cbosdo", "createdAt": "2020-10-22T11:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMDM1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMzkzMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500413931", "bodyText": "i'm not really sure about this the methods in here seem to only serve this one purpose and its kind of an ugly implementation detail that we have to do this anyway. My suggestion would be to move the tracking into the\nLibvirtEngineDomainLifecycleMessageAction.", "author": "lucidd", "createdAt": "2020-10-06T15:57:00Z", "path": "java/code/src/com/suse/manager/virtualization/VirtualMachineRestarterSalt.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.virtualization;\n+\n+import com.suse.manager.webui.services.iface.VirtManager;\n+import com.suse.manager.webui.services.iface.VirtualMachineRestarter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Salt implementation for the VM restart handler\n+ */\n+public class VirtualMachineRestarterSalt implements VirtualMachineRestarter {", "originalCommit": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg2NDU4NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500864584", "bodyText": "I was unsure of where to put it... I'll try it this way.", "author": "cbosdo", "createdAt": "2020-10-07T09:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMzkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Njg3OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500856878", "bodyText": "you can just lock use the ArrayList object as lock and don't need a separate object.", "author": "lucidd", "createdAt": "2020-10-07T09:09:28Z", "path": "java/code/src/com/suse/manager/virtualization/VirtualMachineRestarterSalt.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.virtualization;\n+\n+import com.suse.manager.webui.services.iface.VirtManager;\n+import com.suse.manager.webui.services.iface.VirtualMachineRestarter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Salt implementation for the VM restart handler\n+ */\n+public class VirtualMachineRestarterSalt implements VirtualMachineRestarter {\n+\n+    private static VirtualMachineRestarterSalt instance;\n+\n+    private final VirtManager virtManager;\n+    private final Object lock = new Object();", "originalCommit": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg2MTQ0Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500861447", "bodyText": "Indeed, will change that", "author": "cbosdo", "createdAt": "2020-10-07T09:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Njg3OA=="}], "type": "inlineReview"}, {"oid": "60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "url": "https://github.com/uyuni-project/uyuni/commit/60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-07T15:19:49Z", "type": "forcePushed"}, {"oid": "8fe24ef697491f4bbabe807907c0952b2aac5a52", "url": "https://github.com/uyuni-project/uyuni/commit/8fe24ef697491f4bbabe807907c0952b2aac5a52", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-08T07:11:18Z", "type": "forcePushed"}, {"oid": "fc7516f409b3c6537110c50bf2a54cc7e057fa6f", "url": "https://github.com/uyuni-project/uyuni/commit/fc7516f409b3c6537110c50bf2a54cc7e057fa6f", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-09T13:21:19Z", "type": "forcePushed"}, {"oid": "551ec325c83b0acdef828a21fb4a0e72608c9342", "url": "https://github.com/uyuni-project/uyuni/commit/551ec325c83b0acdef828a21fb4a0e72608c9342", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-16T07:08:18Z", "type": "forcePushed"}, {"oid": "4344eecc4850ad58d3f5146ef5218417230d3cfe", "url": "https://github.com/uyuni-project/uyuni/commit/4344eecc4850ad58d3f5146ef5218417230d3cfe", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-19T13:31:58Z", "type": "forcePushed"}, {"oid": "9fa7f6fa68d518ec0bcc6e485362ba5194210252", "url": "https://github.com/uyuni-project/uyuni/commit/9fa7f6fa68d518ec0bcc6e485362ba5194210252", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-19T14:32:35Z", "type": "forcePushed"}, {"oid": "4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "url": "https://github.com/uyuni-project/uyuni/commit/4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-19T15:21:04Z", "type": "forcePushed"}, {"oid": "dfa3f09f073239840386a3410631a43dcbee9043", "url": "https://github.com/uyuni-project/uyuni/commit/dfa3f09f073239840386a3410631a43dcbee9043", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-19T16:24:19Z", "type": "forcePushed"}, {"oid": "98c66da1a514a2d3159c22cb635bd367b7ad35e9", "url": "https://github.com/uyuni-project/uyuni/commit/98c66da1a514a2d3159c22cb635bd367b7ad35e9", "message": "Better VM changes notifications in VirtualInstanceManager\n\nSo far VM refresh events where sent only when the plan was applied in\nVirtualInstanceManager. Send the refresh event in the functions actually\nadding / deleting / updating the VM in the database.", "committedDate": "2020-10-22T14:27:18Z", "type": "forcePushed"}, {"oid": "34b03d8c7a09f08d8461cd761932cbcbccce6121", "url": "https://github.com/uyuni-project/uyuni/commit/34b03d8c7a09f08d8461cd761932cbcbccce6121", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-22T14:34:28Z", "type": "forcePushed"}, {"oid": "95e21563fa7d72295df816dd004d6ba0efe16607", "url": "https://github.com/uyuni-project/uyuni/commit/95e21563fa7d72295df816dd004d6ba0efe16607", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-22T15:21:12Z", "type": "forcePushed"}, {"oid": "5ecd66d5d9065e73d3d2520cc9a8612917ca1136", "url": "https://github.com/uyuni-project/uyuni/commit/5ecd66d5d9065e73d3d2520cc9a8612917ca1136", "message": "Allow creating cobbler system profiles without an associated action\n\nWhen provisioning a virtual machine on a Salt minion, there will be no\nkickstart action associated with the CobblerVirtualSystemCommand object.\n\nIn such a case we don't need to set the VM hardware settings in the\nprofile since that will be handled by a Salt state rather than by the\ncobbler/koan pair.", "committedDate": "2020-10-22T16:36:09Z", "type": "commit"}, {"oid": "351ae7c853a4ff957e13343db6a6b4008ca365fc", "url": "https://github.com/uyuni-project/uyuni/commit/351ae7c853a4ff957e13343db6a6b4008ca365fc", "message": "Extract reusable code from SaltServerActionService.autoinstallInitAction", "committedDate": "2020-10-22T16:36:09Z", "type": "commit"}, {"oid": "d93d40132845f60b5560ea1dd43e4c2330a896c1", "url": "https://github.com/uyuni-project/uyuni/commit/d93d40132845f60b5560ea1dd43e4c2330a896c1", "message": "Allow backend to create VM using cobbler on Salt minions\n\nEnhance the VirtualizationCreateGuestAction to handle the creation of\nVMs using a cobbler profile.\n\nAlso improve the Salt state to force the VM to stop at the first reboot\nin order to avoid running the automated installation for ever.\n\nNote: this commit requires Salt minion to have the on_reboot parameter\non the virt.running state.", "committedDate": "2020-10-22T16:36:48Z", "type": "commit"}, {"oid": "ff6a9d2e5f2ba66ce28908607a0beac190e04b92", "url": "https://github.com/uyuni-project/uyuni/commit/ff6a9d2e5f2ba66ce28908607a0beac190e04b92", "message": "Enhance VM creation UI to boot using a cobbler profile", "committedDate": "2020-10-22T16:37:04Z", "type": "commit"}, {"oid": "4e3465bf93f9326ce05b0e41933065a12bb89dc6", "url": "https://github.com/uyuni-project/uyuni/commit/4e3465bf93f9326ce05b0e41933065a12bb89dc6", "message": "Guess VM boot devices\n\nIn order to boot from a CDROM ISO or using PXE, guess the boot devices order to set on the VM", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "c33fa5061179433ba0ff8d2434b10b2433869ce0", "url": "https://github.com/uyuni-project/uyuni/commit/c33fa5061179433ba0ff8d2434b10b2433869ce0", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again.", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "f572cb92524ca612be0374cfe7e2270dccc8e0a4", "url": "https://github.com/uyuni-project/uyuni/commit/f572cb92524ca612be0374cfe7e2270dccc8e0a4", "message": "testsuite: handle unknown twopence nodes in get_system_name", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "4e22d506bc2fea4f31e960f8fe77dc0f65dc4612", "url": "https://github.com/uyuni-project/uyuni/commit/4e22d506bc2fea4f31e960f8fe77dc0f65dc4612", "message": "testsuite: fix compute_list_to_leave_running os_version tests", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "e9822ab63caaf8a50177a7395621c7962e1ebf38", "url": "https://github.com/uyuni-project/uyuni/commit/e9822ab63caaf8a50177a7395621c7962e1ebf38", "message": "testsuite: add step to deselect a product", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "877288070e1f36b7b2ae343b9db93bd2b22c64a6", "url": "https://github.com/uyuni-project/uyuni/commit/877288070e1f36b7b2ae343b9db93bd2b22c64a6", "message": "testsuite: fix graphical console tests\n\nThe graphical console tests were inverted, and thus not testing the\nfeature itself.", "committedDate": "2020-10-22T16:37:05Z", "type": "commit"}, {"oid": "9a9595065d8440f6ee8d3e00fe9c8e8c9dc341fb", "url": "https://github.com/uyuni-project/uyuni/commit/9a9595065d8440f6ee8d3e00fe9c8e8c9dc341fb", "message": "remove non-virt related feature from virtualization run_set", "committedDate": "2020-10-22T16:37:06Z", "type": "commit"}, {"oid": "e6c20bdf6158016b9c92c41f0abde27a203045a7", "url": "https://github.com/uyuni-project/uyuni/commit/e6c20bdf6158016b9c92c41f0abde27a203045a7", "message": "testsuite: add step entering text with newlines in text area\n\nIn order to be able to set a text in a field with a new line character,\nwe need to use Javascript. Since this is normally only done in text\nareas, add a text area related step for this. This also avoids\npotentially breaking the other uses of the existing step.", "committedDate": "2020-10-22T16:37:06Z", "type": "commit"}, {"oid": "561845118815451fda43677f205e1219706c13ac", "url": "https://github.com/uyuni-project/uyuni/commit/561845118815451fda43677f205e1219706c13ac", "message": "testsuite: add @long_test flag", "committedDate": "2020-10-22T16:37:06Z", "type": "commit"}, {"oid": "b9774cf5d723f54d41931dbbcc46991ca1f151b7", "url": "https://github.com/uyuni-project/uyuni/commit/b9774cf5d723f54d41931dbbcc46991ca1f151b7", "message": "testsuite: reposync the sle 15-sp2 minimal products\n\nIn order to test the provisioning of VMs which will use the TFTP image\ninstalled on the server, we need the basesystem and manager tool repos\nmatching this OS version to be synced.", "committedDate": "2020-10-22T16:37:06Z", "type": "commit"}, {"oid": "a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "url": "https://github.com/uyuni-project/uyuni/commit/a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-22T16:37:06Z", "type": "commit"}, {"oid": "a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "url": "https://github.com/uyuni-project/uyuni/commit/a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "message": "testsuite: test VM provisioning on salt", "committedDate": "2020-10-22T16:37:06Z", "type": "forcePushed"}]}