{"pr_number": 2262, "pr_title": "Validate CLM projects on build/promote with XMLRPC", "pr_createdAt": "2020-05-27T18:05:00Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2262", "timeline": [{"oid": "9c2330efa313dd7ab12e55066433ff836c8bc733", "url": "https://github.com/uyuni-project/uyuni/commit/9c2330efa313dd7ab12e55066433ff836c8bc733", "message": "Validate CLM projects on build/promote with XMLRPC", "committedDate": "2020-05-27T18:06:38Z", "type": "forcePushed"}, {"oid": "a19afba4608a6284b989f79583a0fd817f997f21", "url": "https://github.com/uyuni-project/uyuni/commit/a19afba4608a6284b989f79583a0fd817f997f21", "message": "Validate CLM projects on build/promote with XMLRPC", "committedDate": "2020-05-27T18:09:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjAyMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r431352020", "bodyText": "We have 2020 :-)", "author": "mcalmer", "createdAt": "2020-05-27T18:22:27Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/ContentValidationFaultException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "originalCommit": "a19afba4608a6284b989f79583a0fd817f997f21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyNTc4OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r431425789", "bodyText": "Fixed \ud83e\udd26 \ud83e\udd23", "author": "cbbayburt", "createdAt": "2020-05-27T20:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMjc2MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433812760", "bodyText": "Nit: typo in comment (promote).", "author": "hustodemon", "createdAt": "2020-06-02T11:42:40Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -825,6 +861,11 @@ public int buildProject(User loggedInUser, String projectLabel, String message)\n      */\n     public int promoteProject(User loggedInUser, String projectLabel, String envLabel) {\n         ensureOrgAdmin(loggedInUser);\n+\n+        // Validate the project for build", "originalCommit": "430e2c0b2fcd8db11d9b155443ac907218418630", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzU5NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433813595", "bodyText": "Is there a reason for not using lookupProject that is already present in this class? It also throws EntityNotExistsFaultException already.", "author": "hustodemon", "createdAt": "2020-06-02T11:44:23Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)", "originalCommit": "430e2c0b2fcd8db11d9b155443ac907218418630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0NDQ5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433844499", "bodyText": "Not at all. I guess I just overlooked it. Good catch!", "author": "cbbayburt", "createdAt": "2020-06-02T12:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMTQzOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433831439", "bodyText": "In the UI we seem to also have a project validator that consists of ModularSourceValidator and ModularDependencyValidator. Could some portion (at least the list of used validators) of the validator initialization be extracted to a common place, so that next time we want to add a validator, we just change it on one place?", "author": "hustodemon", "createdAt": "2020-06-02T12:18:28Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)\n+            throws EntityNotExistsFaultException {\n+        return ContentManager.lookupProject(projectLabel, loggedInUser)\n+                .orElseThrow(() -> new EntityNotExistsFaultException(new EntityNotExistsException(projectLabel)));\n+    }\n+\n+    /**\n+     * Validates a content project for build/promote\n+     *\n+     * The validation fails only in case of an error. Info and warning messages are ignored since the build/promote\n+     * operation can still be performed.\n+     *\n+     * @param project the {@link ContentProject} instance\n+     * @throws ContentValidationFaultException when validation fails with messages\n+     */\n+    private void validateContentProject(ContentProject project) throws ContentValidationFaultException {\n+        ContentProjectValidator projectValidator = new ContentProjectValidator(project,\n+                Arrays.asList(\n+                    new ModularSourcesValidator(),\n+                    new ModularDependencyValidator(contentManager.getModulemdApi())\n+                ));", "originalCommit": "430e2c0b2fcd8db11d9b155443ac907218418630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0NDg3Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433844877", "bodyText": "I'll use another constructor that adds all validators by default", "author": "cbbayburt", "createdAt": "2020-06-02T12:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMTQzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNDgxOA==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433834818", "bodyText": "I'd prefer, if we slap the user on the hand (e.g. with IllegalArgumentsException), propagate it to the XMLRPC API and there re-throw some fault. This way, they will really know that they did something forbidden. If you think this is a bad idea, let me know and we can talk about it :)", "author": "hustodemon", "createdAt": "2020-06-02T12:24:55Z", "path": "java/code/src/com/redhat/rhn/manager/contentmgmt/ContentManager.java", "diffHunk": "@@ -455,6 +455,12 @@ public ContentFilter createFilter(String name, ContentFilter.Rule rule, ContentF\n         lookupFilterByNameAndOrg(name, user).ifPresent(cp -> {\n             throw new EntityExistsException(cp);\n         });\n+\n+        if (ContentFilter.EntityType.MODULE.equals(entityType)) {\n+            // Rules are not applicable for module filters\n+            // Set the rule to ALLOW for all module filters to avoid confusion when listing with XMLRPC\n+            rule = ContentFilter.Rule.ALLOW;", "originalCommit": "430e2c0b2fcd8db11d9b155443ac907218418630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2NDQ3Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r434064472", "bodyText": "Done. Now it enforces ALLOW consistently everywhere.", "author": "cbbayburt", "createdAt": "2020-06-02T17:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNDgxOA=="}], "type": "inlineReview"}, {"oid": "a668644f96a70aa22f5099aa5fb38de37e5ec85e", "url": "https://github.com/uyuni-project/uyuni/commit/a668644f96a70aa22f5099aa5fb38de37e5ec85e", "message": "fixup! Validate CLM projects on build/promote with XMLRPC\n\nEnforce 'allow' rule for appstream filters", "committedDate": "2020-06-02T17:40:53Z", "type": "forcePushed"}, {"oid": "5d58fe34c94ff543948bb0b6ed6b59b9df48b24b", "url": "https://github.com/uyuni-project/uyuni/commit/5d58fe34c94ff543948bb0b6ed6b59b9df48b24b", "message": "fixup! Validate CLM projects on build/promote with XMLRPC\n\nEnforce 'allow' rule for appstream filters", "committedDate": "2020-06-02T17:52:53Z", "type": "forcePushed"}, {"oid": "96bd126a6ac0367f4e9b53c4b56fc288a3822694", "url": "https://github.com/uyuni-project/uyuni/commit/96bd126a6ac0367f4e9b53c4b56fc288a3822694", "message": "Validate CLM projects on build/promote with XMLRPC", "committedDate": "2020-06-03T10:22:12Z", "type": "commit"}, {"oid": "96bd126a6ac0367f4e9b53c4b56fc288a3822694", "url": "https://github.com/uyuni-project/uyuni/commit/96bd126a6ac0367f4e9b53c4b56fc288a3822694", "message": "Validate CLM projects on build/promote with XMLRPC", "committedDate": "2020-06-03T10:22:12Z", "type": "forcePushed"}]}