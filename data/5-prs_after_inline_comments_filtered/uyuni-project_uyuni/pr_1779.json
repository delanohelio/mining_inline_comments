{"pr_number": 1779, "pr_title": "Exclude base products from PAYG (Pay-As-You-Go) instances when feeding the subscription matcher", "pr_createdAt": "2020-01-10T13:13:04Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/1779", "timeline": [{"oid": "e757c02c7a970e4be5baa58239ea266fb59c016b", "url": "https://github.com/uyuni-project/uyuni/commit/e757c02c7a970e4be5baa58239ea266fb59c016b", "message": "Update changelog for spacewalk-java", "committedDate": "2020-01-10T13:13:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365703329", "bodyText": "Hmm, We need to check if a PAYG subscription really obsolete all subscriptions.\nI could imagin that we do not need a SLES subscription, but what about a SUSE Manager Lifecycle Subscription?\n@joesusecom ?", "author": "mcalmer", "createdAt": "2020-01-13T09:24:19Z", "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -181,6 +182,7 @@ public MatcherJsonIO() {\n     private static Set<Long> getVirtualGuests(Server system) {\n         return system.getGuests().stream()\n             .filter(vi -> vi.getGuestSystem() != null)\n+            .filter(vi -> !vi.getPayg())", "originalCommit": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM0MzQ0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r367343440", "bodyText": "CC @hustodemon @moio\nI talked to @BLandorff and this is a problem. None of the Payg instances has SUSE Manager Lifecycle Subscription included. If we would just remove them from the list we would do something wrong.\nI think we should list the system, but without \"product ids\". When we prepare the Json for the matcher we just add the Lifecycle product ids.\nCould this work?", "author": "mcalmer", "createdAt": "2020-01-16T10:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMzNTk1Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371335956", "bodyText": "I've pushed the changes needed here.", "author": "meaksh", "createdAt": "2020-01-27T16:14:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc4NzY5MQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365787691", "bodyText": "Nit: this null-check could be avoided if you used a primitive boolean attribute on L42 (not the boxed Boolean).", "author": "hustodemon", "createdAt": "2020-01-13T12:53:48Z", "path": "java/code/src/com/redhat/rhn/domain/server/VirtualInstance.java", "diffHunk": "@@ -100,6 +101,26 @@ public void setConfirmed(Long isConfirmed) {\n         confirmed = isConfirmed;\n     }\n \n+    /**\n+     *\n+     * @return payg\n+     */\n+    public Boolean getPayg() {\n+        if (payg == null) {", "originalCommit": "0c19baa5bc6fb14ac4ce2fa61e634ed7b0b1bcb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDgyNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365800825", "bodyText": "This method is called for each guest on a salt-based virtualization host, when the virtualization beacon fires. Doesn't this \"truncate\" payg flags  of all hosts to false?", "author": "hustodemon", "createdAt": "2020-01-13T13:24:40Z", "path": "java/code/src/com/redhat/rhn/manager/system/VirtualInstanceManager.java", "diffHunk": "@@ -317,6 +374,27 @@ public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,\n     public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,", "originalCommit": "0c19baa5bc6fb14ac4ce2fa61e634ed7b0b1bcb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0NDMzOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371344339", "bodyText": "The PAYG attribute could only be true for Public Cloud instances (which can be PAYG or BYOS).\nIn case of a private cloud, all instances should be BYOS, therefore payg is set to false.", "author": "meaksh", "createdAt": "2020-01-27T16:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDgyNQ=="}], "type": "inlineReview"}, {"oid": "6bb8e6ef166d6d347b71acc3deeacc82e0c6bff3", "url": "https://github.com/uyuni-project/uyuni/commit/6bb8e6ef166d6d347b71acc3deeacc82e0c6bff3", "message": "Adapt jUnit test to take care of entitlements", "committedDate": "2020-01-27T14:15:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1ODYzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372258630", "bodyText": "Nitpick:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setPayg(boolean isPAYG) {\n          \n          \n            \n                public void setPayg(boolean paygIn) {", "author": "moio", "createdAt": "2020-01-29T09:00:40Z", "path": "java/code/src/com/redhat/rhn/domain/server/Server.java", "diffHunk": "@@ -2132,4 +2133,20 @@ public void setFqdns(Set<ServerFQDN> fqdnsIn) {\n     public boolean doesOsSupportsMonitoring() {\n         return false;\n     }\n+\n+    /**\n+     *\n+     * @return payg\n+     */\n+    public boolean isPayg() {\n+        return payg;\n+    }\n+\n+    /**\n+     *\n+     * @param isPAYG boolean\n+     */\n+    public void setPayg(boolean isPAYG) {", "originalCommit": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372259472", "bodyText": "@hustodemon this means that those systems will get no product rather than free products from the matcher's POV. Are you explicitly OK with that?", "author": "moio", "createdAt": "2020-01-29T09:02:32Z", "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -350,7 +351,7 @@ public String generateMatcherInput(boolean includeSelf, String arch, boolean sel\n \n         // add SUSE Manager entitlements\n         return concat(\n-                products.stream().map(SUSEProduct::getProductId),\n+                server.isPayg() ? Stream.empty() : products.stream().map(SUSEProduct::getProductId),", "originalCommit": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjE2OA==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372282168", "bodyText": "We had a discussion the other day together with @mcalmer and @hustodemon, and the conclusion was: for PAYG instances we only want to report the \"SUMA Lifecycle\" subscription and also the \"Monitoring\" one if that's the case. We're excluding all base installed products.", "author": "meaksh", "createdAt": "2020-01-29T09:49:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NTk0Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r373985942", "bodyText": "Exactly, only the manager-related subscriptions (lifecycle + monitoring). That should be the goal.", "author": "hustodemon", "createdAt": "2020-02-03T09:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTcwMw==", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372259703", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "author": "moio", "createdAt": "2020-01-29T09:03:05Z", "path": "java/code/src/com/suse/manager/reactor/hardware/HardwareMapper.java", "diffHunk": "@@ -533,6 +533,14 @@ private boolean isVirtualGuest(String virtTypeLowerCase, String virtSubtype) {\n         return false;\n     }\n \n+    /**\n+     * Map PAYG information for the server to the database.\n+     *", "originalCommit": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90e4a6e7f49986f631af067aba16ba98f55e2f65", "url": "https://github.com/uyuni-project/uyuni/commit/90e4a6e7f49986f631af067aba16ba98f55e2f65", "message": "Clean up code and use standard names for parameters\n\nCo-Authored-By: Silvio Moioli <moio@suse.com>", "committedDate": "2020-01-29T10:07:47Z", "type": "forcePushed"}, {"oid": "852b2a04a05b9c6cc673c4bd4edeb0b848374d91", "url": "https://github.com/uyuni-project/uyuni/commit/852b2a04a05b9c6cc673c4bd4edeb0b848374d91", "message": "Clean up code and use standard names for parameters\n\nCo-Authored-By: Silvio Moioli <moio@suse.com>", "committedDate": "2020-01-29T10:08:20Z", "type": "forcePushed"}, {"oid": "856bba194110e0c522830715acdb226181008923", "url": "https://github.com/uyuni-project/uyuni/commit/856bba194110e0c522830715acdb226181008923", "message": "Set custom 'is_payg_instance' grain when instance is PAYG", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "2a3bd4ba9ba5a5e7b0977b6870c2d5bfe6129637", "url": "https://github.com/uyuni-project/uyuni/commit/2a3bd4ba9ba5a5e7b0977b6870c2d5bfe6129637", "message": "Update changelog for susemanager-sls", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "8441a4ec67924be2c3400316096d8a2b9c6bb300", "url": "https://github.com/uyuni-project/uyuni/commit/8441a4ec67924be2c3400316096d8a2b9c6bb300", "message": "Set payg attribute when doing Hardware refresh", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "32b790372ff8c7513e886c5acf85bdabac1fdd0b", "url": "https://github.com/uyuni-project/uyuni/commit/32b790372ff8c7513e886c5acf85bdabac1fdd0b", "message": "Preserve 'payg' attribute when refreshing virtual instances", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "d0331f1fc98f52a8d138588fbab3e95268f9b0f9", "url": "https://github.com/uyuni-project/uyuni/commit/d0331f1fc98f52a8d138588fbab3e95268f9b0f9", "message": "Exclude PAYG instances when feeding the subscription matcher", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "ba7e3bc064fe2d872d41e2be4068da09157e5573", "url": "https://github.com/uyuni-project/uyuni/commit/ba7e3bc064fe2d872d41e2be4068da09157e5573", "message": "Fix VirtualInstance.getPayg to take care of possible NULL values", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "15c9a563741ef4958d2d10afb7939852cee17ccd", "url": "https://github.com/uyuni-project/uyuni/commit/15c9a563741ef4958d2d10afb7939852cee17ccd", "message": "Remove tabs and use spaces", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "5f90140d6de35d04f277e7babc8146d5cc92f92d", "url": "https://github.com/uyuni-project/uyuni/commit/5f90140d6de35d04f277e7babc8146d5cc92f92d", "message": "Add payg to rhnVirtualInstance DB schema", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "dd92f9bb6aedb548a9313adcfc512d7bd39eb62a", "url": "https://github.com/uyuni-project/uyuni/commit/dd92f9bb6aedb548a9313adcfc512d7bd39eb62a", "message": "Update changelog for susemanager-schema", "committedDate": "2020-02-02T07:21:18Z", "type": "commit"}, {"oid": "ff4317a82a00073278b708f15998bb24a2801c73", "url": "https://github.com/uyuni-project/uyuni/commit/ff4317a82a00073278b708f15998bb24a2801c73", "message": "Update changelog for spacewalk-java", "committedDate": "2020-02-02T07:21:47Z", "type": "commit"}, {"oid": "7febc3bcde25772f90fa73a1a6dc9c843ba2080f", "url": "https://github.com/uyuni-project/uyuni/commit/7febc3bcde25772f90fa73a1a6dc9c843ba2080f", "message": "Fix broken schema migration file", "committedDate": "2020-02-02T07:21:47Z", "type": "commit"}, {"oid": "ee72b95d8ef363d38e642a98bf6e7a3ea9eaf307", "url": "https://github.com/uyuni-project/uyuni/commit/ee72b95d8ef363d38e642a98bf6e7a3ea9eaf307", "message": "Do not exclude systems without virtual instance", "committedDate": "2020-02-02T07:21:47Z", "type": "commit"}, {"oid": "da78916a7d1ef92adc53c916a582ab452b2391b2", "url": "https://github.com/uyuni-project/uyuni/commit/da78916a7d1ef92adc53c916a582ab452b2391b2", "message": "jUnit: check that PAYG instances are not passed to the MatcherJson", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "dbdc53d52d7498b9f31b2bfb9e46f11f309f7b68", "url": "https://github.com/uyuni-project/uyuni/commit/dbdc53d52d7498b9f31b2bfb9e46f11f309f7b68", "message": "Use CHAR(1) instead BOOLEAN as DB column type", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "e64440ef8df2d12b5bcd2b29889155eb7105086c", "url": "https://github.com/uyuni-project/uyuni/commit/e64440ef8df2d12b5bcd2b29889155eb7105086c", "message": "Use primitive boolean for VirtualInstance payg attribute", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "29481bb4a101626d1c2d737373c5700f439559dc", "url": "https://github.com/uyuni-project/uyuni/commit/29481bb4a101626d1c2d737373c5700f439559dc", "message": "Only exclude products for PAYG instances and not the entitlements", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "80ebad7d7243cf059be44a1dd648243cb57fb5c2", "url": "https://github.com/uyuni-project/uyuni/commit/80ebad7d7243cf059be44a1dd648243cb57fb5c2", "message": "Adapt jUnit test to take care of entitlements", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "fa891b6d44a3bda1c59512515c93bbd5e41947d1", "url": "https://github.com/uyuni-project/uyuni/commit/fa891b6d44a3bda1c59512515c93bbd5e41947d1", "message": "Set payg as NOT NULL attribute in the database", "committedDate": "2020-02-02T07:21:48Z", "type": "commit"}, {"oid": "555930f154c588583b894a8b2e16f46358823d98", "url": "https://github.com/uyuni-project/uyuni/commit/555930f154c588583b894a8b2e16f46358823d98", "message": "Fix changelog entry for spacewalk-java", "committedDate": "2020-02-02T07:22:01Z", "type": "commit"}, {"oid": "7c359fb7c030465e646321e1dff7d548f29b0c00", "url": "https://github.com/uyuni-project/uyuni/commit/7c359fb7c030465e646321e1dff7d548f29b0c00", "message": "Move payg attribute to rhnServer", "committedDate": "2020-02-02T07:22:01Z", "type": "commit"}, {"oid": "47f58f17d7093dcd4e780cf58178c7951b12cb17", "url": "https://github.com/uyuni-project/uyuni/commit/47f58f17d7093dcd4e780cf58178c7951b12cb17", "message": "Fix changelog entry for susemanager-schema", "committedDate": "2020-02-02T07:22:02Z", "type": "commit"}, {"oid": "f8478bb733f3b0e310e78634ed97d8d741dce8f9", "url": "https://github.com/uyuni-project/uyuni/commit/f8478bb733f3b0e310e78634ed97d8d741dce8f9", "message": "Fix lint issues", "committedDate": "2020-02-02T07:22:02Z", "type": "commit"}, {"oid": "8b3ebd70117226907a32b5249fd43537b118a29b", "url": "https://github.com/uyuni-project/uyuni/commit/8b3ebd70117226907a32b5249fd43537b118a29b", "message": "Clean up code and use standard names for parameters\n\nCo-Authored-By: Silvio Moioli <moio@suse.com>", "committedDate": "2020-02-02T07:22:02Z", "type": "commit"}, {"oid": "c90818ec4f08d03633656434e771f55d8bc5eacc", "url": "https://github.com/uyuni-project/uyuni/commit/c90818ec4f08d03633656434e771f55d8bc5eacc", "message": "Fix java lint issues", "committedDate": "2020-02-02T07:22:02Z", "type": "commit"}, {"oid": "c90818ec4f08d03633656434e771f55d8bc5eacc", "url": "https://github.com/uyuni-project/uyuni/commit/c90818ec4f08d03633656434e771f55d8bc5eacc", "message": "Fix java lint issues", "committedDate": "2020-02-02T07:22:02Z", "type": "forcePushed"}]}