{"pr_number": 2451, "pr_title": "Maintenance Windows fix assigning schedules to systems", "pr_createdAt": "2020-07-27T14:12:27Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2451", "timeline": [{"oid": "30d35a459a326a76a16db3336bd8e8b248c78b43", "url": "https://github.com/uyuni-project/uyuni/commit/30d35a459a326a76a16db3336bd8e8b248c78b43", "message": "Move maintenance window related code to the end of the function\n\nIf `Fail` is selected as the reschedule strategy and there is actions\ninside of the maintenance windows of selected schedule, changing the\nschedule fails and a db rollback occurs.\nThis rollback also affect querying the `BaseEntitlement` of the system\nwhich causes an internal server error.\nMoving the maintenance window related code to the end of the\n`processSubmission` call ensures that the rollback occurs after any\nother db interactions.\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-27T12:13:52Z", "type": "commit"}, {"oid": "26e9f44d93fb134708a1a7b7f7ca96d163311d62", "url": "https://github.com/uyuni-project/uyuni/commit/26e9f44d93fb134708a1a7b7f7ca96d163311d62", "message": "Don't fail rescheduling if list of affected actions is empty\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-27T13:15:58Z", "type": "commit"}, {"oid": "dd35cbc037c7aa4f1d5f8fc4d9c0b44a37f75c0a", "url": "https://github.com/uyuni-project/uyuni/commit/dd35cbc037c7aa4f1d5f8fc4d9c0b44a37f75c0a", "message": "Set default strategy to `Fail` if none is given\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-27T13:31:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMjE2OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460922168", "bodyText": "I renamed this one to be consistent with CancelRescheduleStrategy", "author": "parlt91", "createdAt": "2020-07-27T14:16:01Z", "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "diffHunk": "@@ -32,9 +32,15 @@\n     private static final Logger LOG = Logger.getLogger(CancelRescheduleStrategy.class);\n \n     @Override\n-    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionServer,\n+    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionsServers,", "originalCommit": "0e1acff4ebe446b26bf4f824ed29f26a0da97242", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d", "url": "https://github.com/uyuni-project/uyuni/commit/5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d", "message": "Correctly pass error message from backend\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-27T14:26:59Z", "type": "commit"}, {"oid": "5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d", "url": "https://github.com/uyuni-project/uyuni/commit/5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d", "message": "Correctly pass error message from backend\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-27T14:26:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDk5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460960999", "bodyText": "Would it be possible to test this case in a unit test?", "author": "mcalmer", "createdAt": "2020-07-27T15:07:57Z", "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "diffHunk": "@@ -32,9 +32,15 @@\n     private static final Logger LOG = Logger.getLogger(CancelRescheduleStrategy.class);\n \n     @Override\n-    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionServer,\n+    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionsServers,\n             MaintenanceSchedule schedule) throws RescheduleException {\n \n+        if (actionsServers.isEmpty()) {\n+            RescheduleResult result = new RescheduleResult(getType().getLabel(), schedule.getName(), actionsServers);\n+            result.setSuccess(true);\n+            return  result;\n+        }\n+", "originalCommit": "5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDg1Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460980853", "bodyText": "You're right. I think it should be possible. I'll investigate and add one if so.", "author": "parlt91", "createdAt": "2020-07-27T15:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDk5OQ=="}], "type": "inlineReview"}, {"oid": "7165d75b88e4b74e60723e3079668cdab8c7d57a", "url": "https://github.com/uyuni-project/uyuni/commit/7165d75b88e4b74e60723e3079668cdab8c7d57a", "message": "Adapt test to assign schedules to systems to use actual data\n\nUsing the 'FAIL' strategy:\nMaintenance window affected actions scheduled outside a maintenance\nwindow should cause the reschedule to fail.\nActions scheduled inside should allow assigning the schedule.\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-28T08:48:41Z", "type": "commit"}, {"oid": "7165d75b88e4b74e60723e3079668cdab8c7d57a", "url": "https://github.com/uyuni-project/uyuni/commit/7165d75b88e4b74e60723e3079668cdab8c7d57a", "message": "Adapt test to assign schedules to systems to use actual data\n\nUsing the 'FAIL' strategy:\nMaintenance window affected actions scheduled outside a maintenance\nwindow should cause the reschedule to fail.\nActions scheduled inside should allow assigning the schedule.\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-28T08:48:41Z", "type": "forcePushed"}, {"oid": "61c95a9fef1dac059ad936cb6d0bf58a9bea915c", "url": "https://github.com/uyuni-project/uyuni/commit/61c95a9fef1dac059ad936cb6d0bf58a9bea915c", "message": "Set earliest to first maintenanceWindow item instead of Time.now()\n\nOnly if the system has a maintenance schedule assigned.\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>", "committedDate": "2020-07-28T09:37:31Z", "type": "commit"}]}