{"pr_number": 10209, "pr_title": "HttpPostRequestDecoder: retain instead of copy when first buf is last", "pr_createdAt": "2020-04-24T08:19:04Z", "pr_url": "https://github.com/netty/netty/pull/10209", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4ODkzMg==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414388932", "bodyText": "@fabienrenaud let's use buf.retainedSlice()", "author": "normanmaurer", "createdAt": "2020-04-24T08:22:22Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retain() : buf.copy();", "originalCommit": "7760d9b1e0db6c99e44fd146883dfcb7b8419205", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5NTkzNA==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414395934", "bodyText": "right...\ndone!", "author": "fabienrenaud", "createdAt": "2020-04-24T08:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4ODkzMg=="}], "type": "inlineReview"}, {"oid": "837f8ed8a4bfc52bf645526b346da0004e092e47", "url": "https://github.com/netty/netty/commit/837f8ed8a4bfc52bf645526b346da0004e092e47", "message": "HttpPostRequestDecoder: retain instead of copy when first buf is last\n\nMotivations\n-----------\nThere is no need to copy the \"offered\" ByteBuf in HttpPostRequestDecoder\nwhen the first HttpContent ByteBuf is also the last (LastHttpContent) as\nthe full content can immediately be decoded. No extra bookeeping needed.\n\nModifications\n-------------\nHttpPostMultipartRequestDecoder\n - Retain the first ByteBuf when it is both the first HttpContent offered\nto the decoder and is also LastHttpContent.\n - Retain slices of the final buffers values\n\nResults\n-------\nByteBufs of FullHttpMessage decoded by HttpPostRequestDecoder are no longer\nunnecessarily copied. Attributes are extracted as retained slices when\nthe content is multi-part. Non-multi-part content continues to return\nUnpooled buffers.\n\nPartially addresses issue #10200", "committedDate": "2020-04-24T08:33:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjMyMg==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414452322", "bodyText": "@fabienrenaud Can you add a comment that its only fine to not copy here as we will never call undecodedChunk.writeBytes(...) later on ?", "author": "normanmaurer", "createdAt": "2020-04-24T10:00:21Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "originalCommit": "837f8ed8a4bfc52bf645526b346da0004e092e47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNjIyNg==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414606226", "bodyText": "added", "author": "fabienrenaud", "createdAt": "2020-04-24T14:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ0Nw==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414452447", "bodyText": "same comment as above", "author": "normanmaurer", "createdAt": "2020-04-24T10:00:31Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoder.java", "diffHunk": "@@ -280,18 +280,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostStandardRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "originalCommit": "837f8ed8a4bfc52bf645526b346da0004e092e47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNjMwMA==", "url": "https://github.com/netty/netty/pull/10209#discussion_r414606300", "bodyText": "added", "author": "fabienrenaud", "createdAt": "2020-04-24T14:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ0Nw=="}], "type": "inlineReview"}, {"oid": "a59f1ebfae2e994efe4857518db6e6fd82a3cbd8", "url": "https://github.com/netty/netty/commit/a59f1ebfae2e994efe4857518db6e6fd82a3cbd8", "message": "HttpPostRequestDecoder: retain instead of copy when first buf is last\n\nMotivations\n-----------\nThere is no need to copy the \"offered\" ByteBuf in HttpPostRequestDecoder\nwhen the first HttpContent ByteBuf is also the last (LastHttpContent) as\nthe full content can immediately be decoded. No extra bookeeping needed.\n\nModifications\n-------------\nHttpPostMultipartRequestDecoder\n - Retain the first ByteBuf when it is both the first HttpContent offered\nto the decoder and is also LastHttpContent.\n - Retain slices of the final buffers values\n\nResults\n-------\nByteBufs of FullHttpMessage decoded by HttpPostRequestDecoder are no longer\nunnecessarily copied. Attributes are extracted as retained slices when\nthe content is multi-part. Non-multi-part content continues to return\nUnpooled buffers.\n\nPartially addresses issue #10200", "committedDate": "2020-04-24T14:10:25Z", "type": "forcePushed"}, {"oid": "80ffc5d139675d6c36282cd5ef8345281550fbf1", "url": "https://github.com/netty/netty/commit/80ffc5d139675d6c36282cd5ef8345281550fbf1", "message": "HttpPostStandardRequestDecoder: custom URL decoder to minimize ByteBuf copies", "committedDate": "2020-04-25T18:42:40Z", "type": "forcePushed"}, {"oid": "420069ff3d6d26e5f6282bb184bd05dac74643e9", "url": "https://github.com/netty/netty/commit/420069ff3d6d26e5f6282bb184bd05dac74643e9", "message": "HttpPostStandardRequestDecoder: custom URL decoder to minimize ByteBuf copies", "committedDate": "2020-04-27T16:23:43Z", "type": "forcePushed"}, {"oid": "a6d8dc1dfac627dddb3b13577865de40f5dc00a2", "url": "https://github.com/netty/netty/commit/a6d8dc1dfac627dddb3b13577865de40f5dc00a2", "message": "HttpPostRequestDecoder: retain instead of copy when first buf is last\n\nMotivations\n-----------\nThere is no need to copy the \"offered\" ByteBuf in HttpPostRequestDecoder\nwhen the first HttpContent ByteBuf is also the last (LastHttpContent) as\nthe full content can immediately be decoded. No extra bookeeping needed.\n\nModifications\n-------------\nHttpPostMultipartRequestDecoder\n - Retain the first ByteBuf when it is both the first HttpContent offered\nto the decoder and is also LastHttpContent.\n - Retain slices of the final buffers values\n\nResults\n-------\nByteBufs of FullHttpMessage decoded by HttpPostRequestDecoder are no longer\nunnecessarily copied. Attributes are extracted as retained slices when\nthe content is multi-part. Non-multi-part content continues to return\nUnpooled buffers.\n\nPartially addresses issue #10200", "committedDate": "2020-04-27T17:00:16Z", "type": "commit"}, {"oid": "33c742305af8643612f93ec48c1f80580dc5ebd7", "url": "https://github.com/netty/netty/commit/33c742305af8643612f93ec48c1f80580dc5ebd7", "message": "HttpPostStandardRequestDecoder: custom URL decoder to minimize ByteBuf copies", "committedDate": "2020-04-27T17:00:16Z", "type": "commit"}, {"oid": "33c742305af8643612f93ec48c1f80580dc5ebd7", "url": "https://github.com/netty/netty/commit/33c742305af8643612f93ec48c1f80580dc5ebd7", "message": "HttpPostStandardRequestDecoder: custom URL decoder to minimize ByteBuf copies", "committedDate": "2020-04-27T17:00:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ==", "url": "https://github.com/netty/netty/pull/10209#discussion_r416037701", "bodyText": "@fabienrenaud why this change ?", "author": "normanmaurer", "createdAt": "2020-04-27T18:10:33Z", "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java", "diffHunk": "@@ -747,7 +769,7 @@ public void testNotLeakHeapBufferWhenWrapIllegalArgumentException() {\n     }\n \n     private static void testNotLeakWhenWrapIllegalArgumentException(ByteBuf buf) {\n-        buf.writeCharSequence(\"==\", CharsetUtil.US_ASCII);\n+        buf.writeCharSequence(\"a=b&foo=%22bar%22&==\", CharsetUtil.US_ASCII);", "originalCommit": "33c742305af8643612f93ec48c1f80580dc5ebd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA0NzkwMw==", "url": "https://github.com/netty/netty/pull/10209#discussion_r416047903", "bodyText": "the previous sequence was failing decoding immediately (on the first character).\nthe new sequence causes the decoder to create a few new/sliced ByteBufs before failing the decoding of the last entry ==.\nin other words, the check now increases the chance of catching a leak caused by failing to decode the Nth element instead of just the first one.", "author": "fabienrenaud", "createdAt": "2020-04-27T18:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM5OTI4MA==", "url": "https://github.com/netty/netty/pull/10209#discussion_r416399280", "bodyText": "got it... thanks", "author": "normanmaurer", "createdAt": "2020-04-28T07:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ=="}], "type": "inlineReview"}]}