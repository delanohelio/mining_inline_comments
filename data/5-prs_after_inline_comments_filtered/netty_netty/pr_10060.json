{"pr_number": 10060, "pr_title": "Add test cases for ImmediateExecutor.", "pr_createdAt": "2020-02-25T13:09:30Z", "pr_url": "https://github.com/netty/netty/pull/10060", "timeline": [{"oid": "b99bef662b50faaa969e8c2415924b293a017cb0", "url": "https://github.com/netty/netty/commit/b99bef662b50faaa969e8c2415924b293a017cb0", "message": "Add test cases for ImmediateExecutor.", "committedDate": "2020-02-25T13:02:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3MjUyMQ==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383872521", "bodyText": "nit: 2020", "author": "normanmaurer", "createdAt": "2020-02-25T13:19:39Z", "path": "common/src/test/java/io/netty/util/concurrent/ImmediateExecutorTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2014 The Netty Project", "originalCommit": "b99bef662b50faaa969e8c2415924b293a017cb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3Mjk3NQ==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383872975", "bodyText": "add // NOOP or use the following syntax:\nnew Runnable() { }", "author": "normanmaurer", "createdAt": "2020-02-25T13:20:30Z", "path": "common/src/test/java/io/netty/util/concurrent/ImmediateExecutorTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2014 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package io.netty.util.concurrent;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.FutureTask;\n+\n+import org.junit.Test;\n+\n+public class ImmediateExecutorTest {\n+\n+    @Test(expected = NullPointerException.class)\n+    public void testExecuteNullRunnable() {\n+        ImmediateExecutor.INSTANCE.execute(null);\n+    }\n+\n+    @Test\n+    public void testExecuteNonNullRunnable() throws Exception {\n+        FutureTask<Void> task = new FutureTask<Void>(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+", "originalCommit": "b99bef662b50faaa969e8c2415924b293a017cb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5NTk5NQ==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383895995", "bodyText": "got it.", "author": "seedeed", "createdAt": "2020-02-25T14:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3Mjk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5NzIyOQ==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383897229", "bodyText": "got it.", "author": "seedeed", "createdAt": "2020-02-25T14:03:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3Mjk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3MzE0MA==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383873140", "bodyText": "assertNull(task.get())", "author": "normanmaurer", "createdAt": "2020-02-25T13:20:52Z", "path": "common/src/test/java/io/netty/util/concurrent/ImmediateExecutorTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2014 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package io.netty.util.concurrent;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.FutureTask;\n+\n+import org.junit.Test;\n+\n+public class ImmediateExecutorTest {\n+\n+    @Test(expected = NullPointerException.class)\n+    public void testExecuteNullRunnable() {\n+        ImmediateExecutor.INSTANCE.execute(null);\n+    }\n+\n+    @Test\n+    public void testExecuteNonNullRunnable() throws Exception {\n+        FutureTask<Void> task = new FutureTask<Void>(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+\n+            }\n+\n+        }, null);\n+        ImmediateExecutor.INSTANCE.execute(task);\n+        assertTrue(task.isDone());\n+        assertFalse(task.isCancelled());\n+        assertTrue(task.get() == null);", "originalCommit": "b99bef662b50faaa969e8c2415924b293a017cb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5NzEwNg==", "url": "https://github.com/netty/netty/pull/10060#discussion_r383897106", "bodyText": "got it", "author": "seedeed", "createdAt": "2020-02-25T14:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg3MzE0MA=="}], "type": "inlineReview"}, {"oid": "027615281388867c324b571fa033c80bafe7e389", "url": "https://github.com/netty/netty/commit/027615281388867c324b571fa033c80bafe7e389", "message": "Add test cases for ImmediateExecutor.", "committedDate": "2020-02-25T13:56:15Z", "type": "commit"}, {"oid": "236efae208cde7be9d3a0b892c17ccb954ca84f1", "url": "https://github.com/netty/netty/commit/236efae208cde7be9d3a0b892c17ccb954ca84f1", "message": "fix style problems.", "committedDate": "2020-02-26T04:29:40Z", "type": "commit"}]}