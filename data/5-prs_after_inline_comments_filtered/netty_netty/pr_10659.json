{"pr_number": 10659, "pr_title": "Fix #10614 by making UnorderedTPEExecutor.scheduleAtFixedRate run tasks more than once", "pr_createdAt": "2020-10-08T14:11:08Z", "pr_url": "https://github.com/netty/netty/pull/10659", "timeline": [{"oid": "97ba2de7a0672d7d38e41a37da9ee3b7be4a4264", "url": "https://github.com/netty/netty/commit/97ba2de7a0672d7d38e41a37da9ee3b7be4a4264", "message": "Fix #10614 by making UnorderedTPEExecutor.scheduleAtFixedRate run tasks more than once\n\nMotivation:\nAll scheduled executors should behave in accordance to their API.\nThe bug here is that scheduled tasks were not run more than once because we executed the runnables directly, instead of through the provided runnable future.\n\nModification:\nWe now run tasks through the provided future, so that when each run completes, the internal state of the task is reset and the ScheduledThreadPoolExecutor is informed of the completion.\nThis allows the executor to prepare the next run.\n\nResult:\nThe UnorderedThreadPoolEventExecutor is now able to run scheduled tasks more than once.\nWhich is what one would expect from the API.", "committedDate": "2020-10-08T14:27:40Z", "type": "commit"}, {"oid": "97ba2de7a0672d7d38e41a37da9ee3b7be4a4264", "url": "https://github.com/netty/netty/commit/97ba2de7a0672d7d38e41a37da9ee3b7be4a4264", "message": "Fix #10614 by making UnorderedTPEExecutor.scheduleAtFixedRate run tasks more than once\n\nMotivation:\nAll scheduled executors should behave in accordance to their API.\nThe bug here is that scheduled tasks were not run more than once because we executed the runnables directly, instead of through the provided runnable future.\n\nModification:\nWe now run tasks through the provided future, so that when each run completes, the internal state of the task is reset and the ScheduledThreadPoolExecutor is informed of the completion.\nThis allows the executor to prepare the next run.\n\nResult:\nThe UnorderedThreadPoolEventExecutor is now able to run scheduled tasks more than once.\nWhich is what one would expect from the API.", "committedDate": "2020-10-08T14:27:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1NDg5Ng==", "url": "https://github.com/netty/netty/pull/10659#discussion_r502754896", "bodyText": "After this unblocks we should cancel the scheduled task via future.cancel(). Also we should shutdown the executor.", "author": "normanmaurer", "createdAt": "2020-10-10T06:42:04Z", "path": "common/src/test/java/io/netty/util/concurrent/UnorderedThreadPoolEventExecutorTest.java", "diffHunk": "@@ -54,4 +55,17 @@ public void operationComplete(Future<Object> future) throws Exception {\n             executor.shutdownGracefully();\n         }\n     }\n+\n+    @Test(timeout = 10000)\n+    public void scheduledAtFixedRateMustRunTaskRepeatedly() throws InterruptedException {\n+        UnorderedThreadPoolEventExecutor executor = new UnorderedThreadPoolEventExecutor(1);\n+        final CountDownLatch latch = new CountDownLatch(3);\n+        executor.scheduleAtFixedRate(new Runnable() {\n+            @Override\n+            public void run() {\n+                latch.countDown();\n+            }\n+        }, 1, 1, TimeUnit.MILLISECONDS);\n+        latch.await();", "originalCommit": "97ba2de7a0672d7d38e41a37da9ee3b7be4a4264", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDI3MQ==", "url": "https://github.com/netty/netty/pull/10659#discussion_r503250271", "bodyText": "nit: shutdownGracefully() ?", "author": "normanmaurer", "createdAt": "2020-10-12T12:07:30Z", "path": "common/src/test/java/io/netty/util/concurrent/UnorderedThreadPoolEventExecutorTest.java", "diffHunk": "@@ -54,4 +55,22 @@ public void operationComplete(Future<Object> future) throws Exception {\n             executor.shutdownGracefully();\n         }\n     }\n+\n+    @Test(timeout = 10000)\n+    public void scheduledAtFixedRateMustRunTaskRepeatedly() throws InterruptedException {\n+        UnorderedThreadPoolEventExecutor executor = new UnorderedThreadPoolEventExecutor(1);\n+        final CountDownLatch latch = new CountDownLatch(3);\n+        Future<?> future = executor.scheduleAtFixedRate(new Runnable() {\n+            @Override\n+            public void run() {\n+                latch.countDown();\n+            }\n+        }, 1, 1, TimeUnit.MILLISECONDS);\n+        try {\n+            latch.await();\n+        } finally {\n+            future.cancel(true);\n+            executor.shutdown();", "originalCommit": "aa7f663b8e0f588fe4d27906754d029d5e50e54f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MTU5OQ==", "url": "https://github.com/netty/netty/pull/10659#discussion_r503251599", "bodyText": "Alright, done.", "author": "chrisvest", "createdAt": "2020-10-12T12:10:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDI3MQ=="}], "type": "inlineReview"}, {"oid": "e360e10fa0733e0159f1017042ac7e8c62a8cd96", "url": "https://github.com/netty/netty/commit/e360e10fa0733e0159f1017042ac7e8c62a8cd96", "message": "Address review comments", "committedDate": "2020-10-12T12:08:31Z", "type": "commit"}, {"oid": "e360e10fa0733e0159f1017042ac7e8c62a8cd96", "url": "https://github.com/netty/netty/commit/e360e10fa0733e0159f1017042ac7e8c62a8cd96", "message": "Address review comments", "committedDate": "2020-10-12T12:08:31Z", "type": "forcePushed"}, {"oid": "5129b5687d1d9a690c5f8adfd811f67c4d681c76", "url": "https://github.com/netty/netty/commit/5129b5687d1d9a690c5f8adfd811f67c4d681c76", "message": "Make a flaky test more debuggable", "committedDate": "2020-10-12T13:22:28Z", "type": "commit"}]}