{"pr_number": 10643, "pr_title": "Enable HTTP header validation in HttpServerUpgradeHandler", "pr_createdAt": "2020-10-06T12:11:30Z", "pr_url": "https://github.com/netty/netty/pull/10643", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2NTM1NA==", "url": "https://github.com/netty/netty/pull/10643#discussion_r500265354", "bodyText": "How about adding a constructor with boolean and set the default value to true for enabling Header verification? It'll give the user ability to turn off Header verification if needed.", "author": "hyperxpro", "createdAt": "2020-10-06T13:14:31Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpServerUpgradeHandler.java", "diffHunk": "@@ -353,8 +353,7 @@ private boolean upgrade(final ChannelHandlerContext ctx, final FullHttpRequest r\n      * Creates the 101 Switching Protocols response message.\n      */\n     private static FullHttpResponse createUpgradeResponse(CharSequence upgradeProtocol) {\n-        DefaultFullHttpResponse res = new DefaultFullHttpResponse(HTTP_1_1, SWITCHING_PROTOCOLS,\n-                Unpooled.EMPTY_BUFFER, false);\n+        DefaultFullHttpResponse res = new DefaultFullHttpResponse(HTTP_1_1, SWITCHING_PROTOCOLS, Unpooled.EMPTY_BUFFER);", "originalCommit": "8c0fd7485a91059ae88d0dfcc3b48a67095b1303", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI3NDc4OA==", "url": "https://github.com/netty/netty/pull/10643#discussion_r500274788", "bodyText": "Sure, if it's okay to introduce a new API in the 4.1, then I can add a new constructor for HttpServerUpgradeHandler.", "author": "artem-smotrakov", "createdAt": "2020-10-06T13:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2NTM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI3Njc0Nw==", "url": "https://github.com/netty/netty/pull/10643#discussion_r500276747", "bodyText": "It's fine to add new API. Add 2 constructors actually. 1 will be default constructor (empty) which will set Boolean value to true and 1 constructor will allow to set Boolean value.", "author": "hyperxpro", "createdAt": "2020-10-06T13:29:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2NTM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MDkyNA==", "url": "https://github.com/netty/netty/pull/10643#discussion_r500280924", "bodyText": "I think one should be enough since the class already has a few constructors. They will enable the validation by default. The new one will allow a user to turn the validation off.", "author": "artem-smotrakov", "createdAt": "2020-10-06T13:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2NTM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MzA1Ng==", "url": "https://github.com/netty/netty/pull/10643#discussion_r500283056", "bodyText": "Yeah, alright. My bad, I didn't saw other constructors.", "author": "hyperxpro", "createdAt": "2020-10-06T13:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2NTM1NA=="}], "type": "inlineReview"}, {"oid": "ecb45dc452481cab8d09871633ee3a008caf5a0b", "url": "https://github.com/netty/netty/commit/ecb45dc452481cab8d09871633ee3a008caf5a0b", "message": "Enable header valication in HttpServerUpgradeHandler\n\nMotivation:\n\nHttpServerUpgradeHandler takes a list of protocols from an incoming\nrequest and uses them for building a response.\nAlthough the class does some validation while parsing the list,\nit then disables HTTP header validation when it builds a responst.\nThe disabled validation may potentially allow\nHTTP response splitting attacks.\n\nModifications:\n\n- Enabled HTTP header validation in HttpServerUpgradeHandler\n  as a defense-in-depth measure to prevent possible\n  HTTP response splitting attacks.\n- Added a new constructor that allows disabling the validation.\n\nResult:\n\nHttpServerUpgradeHandler validates incoming protocols\nbefore including them into a response.\nThat should prevent possible HTTP response splitting attacks.", "committedDate": "2020-10-26T12:45:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyODEwMg==", "url": "https://github.com/netty/netty/pull/10643#discussion_r512228102", "bodyText": "nit: please add that this is for the response.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param validateHeaders validate the header names and values\n          \n          \n            \n                 * @param validateHeaders validate the header names and values of the upgrade response.", "author": "normanmaurer", "createdAt": "2020-10-26T19:52:29Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpServerUpgradeHandler.java", "diffHunk": "@@ -199,10 +200,25 @@ public HttpServerUpgradeHandler(SourceCodec sourceCodec, UpgradeCodecFactory upg\n      */\n     public HttpServerUpgradeHandler(\n             SourceCodec sourceCodec, UpgradeCodecFactory upgradeCodecFactory, int maxContentLength) {\n+        this(sourceCodec, upgradeCodecFactory, maxContentLength, true);\n+    }\n+\n+    /**\n+     * Constructs the upgrader with the supported codecs.\n+     *\n+     * @param sourceCodec the codec that is being used initially\n+     * @param upgradeCodecFactory the factory that creates a new upgrade codec\n+     *                            for one of the requested upgrade protocols\n+     * @param maxContentLength the maximum length of the content of an upgrade request\n+     * @param validateHeaders validate the header names and values", "originalCommit": "ecb45dc452481cab8d09871633ee3a008caf5a0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3NjQ3MQ==", "url": "https://github.com/netty/netty/pull/10643#discussion_r512476471", "bodyText": "No problem, updated.", "author": "artem-smotrakov", "createdAt": "2020-10-27T07:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyODEwMg=="}], "type": "inlineReview"}, {"oid": "11724f28304a9dc8916dfb8d194edf531c916fd5", "url": "https://github.com/netty/netty/commit/11724f28304a9dc8916dfb8d194edf531c916fd5", "message": "Enable header valication in HttpServerUpgradeHandler\n\nMotivation:\n\nHttpServerUpgradeHandler takes a list of protocols from an incoming\nrequest and uses them for building a response.\nAlthough the class does some validation while parsing the list,\nit then disables HTTP header validation when it builds a responst.\nThe disabled validation may potentially allow\nHTTP response splitting attacks.\n\nModifications:\n\n- Enabled HTTP header validation in HttpServerUpgradeHandler\n  as a defense-in-depth measure to prevent possible\n  HTTP response splitting attacks.\n- Added a new constructor that allows disabling the validation.\n\nResult:\n\nHttpServerUpgradeHandler validates incoming protocols\nbefore including them into a response.\nThat should prevent possible HTTP response splitting attacks.", "committedDate": "2020-10-27T07:51:23Z", "type": "commit"}, {"oid": "11724f28304a9dc8916dfb8d194edf531c916fd5", "url": "https://github.com/netty/netty/commit/11724f28304a9dc8916dfb8d194edf531c916fd5", "message": "Enable header valication in HttpServerUpgradeHandler\n\nMotivation:\n\nHttpServerUpgradeHandler takes a list of protocols from an incoming\nrequest and uses them for building a response.\nAlthough the class does some validation while parsing the list,\nit then disables HTTP header validation when it builds a responst.\nThe disabled validation may potentially allow\nHTTP response splitting attacks.\n\nModifications:\n\n- Enabled HTTP header validation in HttpServerUpgradeHandler\n  as a defense-in-depth measure to prevent possible\n  HTTP response splitting attacks.\n- Added a new constructor that allows disabling the validation.\n\nResult:\n\nHttpServerUpgradeHandler validates incoming protocols\nbefore including them into a response.\nThat should prevent possible HTTP response splitting attacks.", "committedDate": "2020-10-27T07:51:23Z", "type": "forcePushed"}]}