{"pr_number": 10747, "pr_title": "Fix explicitly little-endian accessors in SwappedByteBuf", "pr_createdAt": "2020-10-28T21:29:12Z", "pr_url": "https://github.com/netty/netty/pull/10747", "timeline": [{"oid": "fa90c59581da3525e3ca02c579f6447c757aeed0", "url": "https://github.com/netty/netty/commit/fa90c59581da3525e3ca02c579f6447c757aeed0", "message": "Fix explicitly little-endian accessors in SwappedByteBuf\n\nMotivation:\nSome buffers implement ByteBuf#order(order) by wrapping themselves in a SwappedByteBuf.\nThe SwappedByteBuf is then responsible for swapping the byte order on accesses.\nThe explicitly little-endian accessor methods, however, should not be swapped to big-endian, but instead remain explicitly little-endian.\n\nModification:\nThe SwappedByteBuf was passing through calls to e.g. writeIntLE, to the big-endian equivalent, e.g. writeInt.\nThis has been changed so that these calls delegate to their explicitly little-endian counterpart.\n\nResult:\nThis makes all buffers that make use of SwappedByteBuf for their endian-ness configuration, consistent with all the buffers that use other implementation strategies.\nIn the end, all buffers now behave exactly the same, when using their explicitly little-endian accessor methods.", "committedDate": "2020-10-28T21:27:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTA4OQ==", "url": "https://github.com/netty/netty/pull/10747#discussion_r514051089", "bodyText": "Don't you think the method name is too long?", "author": "hyperxpro", "createdAt": "2020-10-29T07:27:21Z", "path": "buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java", "diffHunk": "@@ -4939,4 +4939,63 @@ public void testEnsureWritableIntegerOverflow() {\n             buffer.release();\n         }\n     }\n+\n+    @Test\n+    public void testEndiannessIndexOf() {\n+        buffer.clear();\n+        final int v = 0x02030201;\n+        buffer.writeIntLE(v);\n+        buffer.writeByte(0x01);\n+\n+        assertEquals(-1, buffer.indexOf(1, 4, (byte) 1));\n+        assertEquals(-1, buffer.indexOf(4, 1, (byte) 1));\n+        assertEquals(1, buffer.indexOf(1, 4, (byte) 2));\n+        assertEquals(3, buffer.indexOf(4, 1, (byte) 2));\n+    }\n+\n+    @Test\n+    public void explicitLittleEndianReadMethodsMustAlwaysUseLittleEndianByteOrder() {", "originalCommit": "fa90c59581da3525e3ca02c579f6447c757aeed0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTY0MA==", "url": "https://github.com/netty/netty/pull/10747#discussion_r514051640", "bodyText": "fine as it is... its a test after all and the method name at least describes what it tests.", "author": "normanmaurer", "createdAt": "2020-10-29T07:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MjA5OA==", "url": "https://github.com/netty/netty/pull/10747#discussion_r514052098", "bodyText": "Alright.", "author": "hyperxpro", "createdAt": "2020-10-29T07:29:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1NTIyMg==", "url": "https://github.com/netty/netty/pull/10747#discussion_r514055222", "bodyText": "It's good to give tests names that describe what's being verified. This helps long-term test maintainability, because a common problem there is figuring out what an old but newly failing test was intended to verify.", "author": "chrisvest", "createdAt": "2020-10-29T07:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTA4OQ=="}], "type": "inlineReview"}, {"oid": "bfcd609b1c2feb3956eec7a16d2c5f95a64fa6c0", "url": "https://github.com/netty/netty/commit/bfcd609b1c2feb3956eec7a16d2c5f95a64fa6c0", "message": "Adjust ByteBufUtil to expect explicitly little-endian accessors to always be little-endian", "committedDate": "2020-10-29T07:34:07Z", "type": "commit"}]}