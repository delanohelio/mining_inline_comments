{"pr_number": 1099, "pr_title": "Handles special case when a destination is both queue and topic", "pr_createdAt": "2020-02-24T13:33:33Z", "pr_url": "https://github.com/openzipkin/brave/pull/1099", "timeline": [{"oid": "61c33acec763542bc8a69241e7fccf0ab3f3ccb7", "url": "https://github.com/openzipkin/brave/commit/61c33acec763542bc8a69241e7fccf0ab3f3ccb7", "message": "Handles special case when a destination is both queue and topic", "committedDate": "2020-02-24T13:33:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTg2NQ==", "url": "https://github.com/openzipkin/brave/pull/1099#discussion_r383629865", "bodyText": "Perhaps need to link to the issue here or provide a bit more background. The JMS APIs are generally sketchy, but the javadoc doesn't seem to indicate this name would ever return null.", "author": "anuraaga", "createdAt": "2020-02-25T02:42:31Z", "path": "instrumentation/jms/src/main/java/brave/jms/MessageParser.java", "diffHunk": "@@ -36,16 +36,35 @@\n   }\n \n   @Nullable static String channelKind(@Nullable Destination destination) {\n-    if (destination instanceof Queue) return \"queue\";\n-    if (destination instanceof Topic) return \"topic\";\n-    return null;\n+    if (destination == null) return null;\n+    return isQueue(destination) ? \"queue\" : \"topic\";\n+  }\n+\n+  /**\n+   * Handles special case of a destination being both a Queue and a Topic by checking if the\n+   * {@linkplain Queue#getQueueName() queue name} is readable.", "originalCommit": "61c33acec763542bc8a69241e7fccf0ab3f3ccb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzMjkzMA==", "url": "https://github.com/openzipkin/brave/pull/1099#discussion_r383632930", "bodyText": "we check null anyway, especially as everything can throw JMSException and we coerce those to null. Our bug was one place where we didn't: this line is more about fallback behavior than null.\nThis era of library design didn't have clarifying annotations or docs on null as a matter of course. This matter is compounded by TCKs not being open source either.. I don't think it would help to assume non-null on JMS properties with or without this change.\nI could add a comment about the example of something implementing both, but I'd hesitate to use this as a why something can return null as generally they can become null and don't want people mistakenly thinking null is an edge case.\nwdyt?", "author": "codefromthecrypt", "createdAt": "2020-02-25T02:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzNzkwNw==", "url": "https://github.com/openzipkin/brave/pull/1099#discussion_r383637907", "bodyText": "#1100 hoping this topic doesn't eat our afternoon", "author": "codefromthecrypt", "createdAt": "2020-02-25T03:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzNDAwNg==", "url": "https://github.com/openzipkin/brave/pull/1099#discussion_r383634006", "bodyText": "@anuraaga ex we catch this. we had to recently add these catches everywhere because implementations are free to throw for dumb reasons.", "author": "codefromthecrypt", "createdAt": "2020-02-25T02:59:28Z", "path": "instrumentation/jms/src/main/java/brave/jms/MessageParser.java", "diffHunk": "@@ -36,16 +36,35 @@\n   }\n \n   @Nullable static String channelKind(@Nullable Destination destination) {\n-    if (destination instanceof Queue) return \"queue\";\n-    if (destination instanceof Topic) return \"topic\";\n-    return null;\n+    if (destination == null) return null;\n+    return isQueue(destination) ? \"queue\" : \"topic\";\n+  }\n+\n+  /**\n+   * Handles special case of a destination being both a Queue and a Topic by checking if the\n+   * {@linkplain Queue#getQueueName() queue name} is readable.\n+   */\n+  static boolean isQueue(@Nullable Destination destination) {\n+    boolean isQueue = destination instanceof Queue;\n+    boolean isTopic = destination instanceof Topic;\n+    if (isQueue && isTopic) {\n+      try {\n+        isQueue = ((Queue) destination).getQueueName() != null;\n+      } catch (Throwable t) {\n+        propagateIfFatal(t);\n+        log(t, \"error getting destination name from {0}\", destination, null);", "originalCommit": "61c33acec763542bc8a69241e7fccf0ab3f3ccb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}