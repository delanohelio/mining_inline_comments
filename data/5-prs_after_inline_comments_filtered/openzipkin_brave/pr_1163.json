{"pr_number": 1163, "pr_title": "Replaces \"carrier\" with \"request\"", "pr_createdAt": "2020-04-19T09:06:04Z", "pr_url": "https://github.com/openzipkin/brave/pull/1163", "timeline": [{"oid": "e35ace5ecf335a53c062b54f202520897eaf3a53", "url": "https://github.com/openzipkin/brave/commit/e35ace5ecf335a53c062b54f202520897eaf3a53", "message": "Replaces \"carrier\" with \"request\"\n\nWe prematurely adopted the confusing term \"carrier\" when trying to work\nwith OpenTracing years ago. This removes that term for request\neverywhere. This does not break any api, as the only thing besides\nparameter renames are test methods.\n\nThis is in preparation of a future Brave 6 world where ideally no one\nwill ever need to be confused about what \"carrier\" is, only for us to\nsay \"an awkward word for request\".", "committedDate": "2020-04-19T09:03:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1Nzk1OA==", "url": "https://github.com/openzipkin/brave/pull/1163#discussion_r410857958", "bodyText": "we aren't currently using this, but we will need this for secondary sampling. This was what I was changing and realized.. wow, we should really stop using so many weird terms!", "author": "codefromthecrypt", "createdAt": "2020-04-19T09:09:50Z", "path": "brave/src/main/java/brave/internal/baggage/BaggageHandler.java", "diffHunk": "@@ -70,22 +70,22 @@\n   @Nullable S updateState(S state, BaggageField field, @Nullable String value);\n \n   /**\n-   * Extracts any state from a remote value received by {@link Propagation.Getter#get(Object,\n+   * Extracts any state from a request value received by {@link Propagation.Getter#get(Object,\n    * Object)}.\n    *\n-   * <p>Ex. When the state is a simple string, this will just use the remote value directly.\n+   * <p>Ex. When the state is a simple string, this will just use the request value directly.\n    * {@linkplain #isDynamic() Dynamic values} will need to perform some decoding, such as splitting\n    * on comma and equals.\n    */\n-  @Nullable S fromRemoteValue(String remoteValue);\n+  @Nullable S fromRequestValue(Object request, String value);", "originalCommit": "e35ace5ecf335a53c062b54f202520897eaf3a53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}