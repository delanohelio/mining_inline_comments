{"pr_number": 1281, "pr_title": "Have StrictScopeDecorator also detect leaked to GC scopes.", "pr_createdAt": "2020-11-23T09:01:12Z", "pr_url": "https://github.com/openzipkin/brave/pull/1281", "timeline": [{"oid": "80417649568793233e43988ad89fe8779dd7265d", "url": "https://github.com/openzipkin/brave/commit/80417649568793233e43988ad89fe8779dd7265d", "message": "Have StrictScopeDecorator also detect leaked to GC scopes.", "committedDate": "2020-11-23T09:00:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU5MDM5NA==", "url": "https://github.com/openzipkin/brave/pull/1281#discussion_r528590394", "bodyText": "I might suggest having the WeakConcurrentMap type be an inner class vs leaking it in the signature\nIf you have more time, bonus points to see if upstream works now (including shading it). I think raphael changed it to allow our features to work.", "author": "codefromthecrypt", "createdAt": "2020-11-23T10:07:56Z", "path": "brave/src/main/java/brave/propagation/StrictScopeDecorator.java", "diffHunk": "@@ -40,13 +40,11 @@\n  * }</pre>\n  */\n // Closeable so things like Spring will automatically execute it on shutdown and expose leaks!\n-public final class StrictScopeDecorator implements ScopeDecorator, Closeable {\n+public final class StrictScopeDecorator extends WeakConcurrentMap<Scope, CallerStackTrace> implements ScopeDecorator, Closeable {", "originalCommit": "80417649568793233e43988ad89fe8779dd7265d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5NjE5MA==", "url": "https://github.com/openzipkin/brave/pull/1281#discussion_r529096190", "bodyText": "what I meant here was a package-private inner static class like ScopeToCallerStackTrace extends WeakConcurrentMap. That would allow you to call methods you wanted exposed. It is another ref, but StrictScopeDecorator is a singleton, so shouldn't matter. The class will be slightly larger, that's it!", "author": "codefromthecrypt", "createdAt": "2020-11-24T01:05:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU5MDM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2ODExNg==", "url": "https://github.com/openzipkin/brave/pull/1281#discussion_r529168116", "bodyText": "Yup good call, changed to an inner class. Looks like the changes for the upstream library haven't been released yet so after that we can try cleaning up.", "author": "anuraaga", "createdAt": "2020-11-24T02:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU5MDM5NA=="}], "type": "inlineReview"}, {"oid": "9595ab1048f2a364b1d9d0dea5c396c9265ab598", "url": "https://github.com/openzipkin/brave/commit/9595ab1048f2a364b1d9d0dea5c396c9265ab598", "message": "Don't extend WeakConcurrentMap in public type.", "committedDate": "2020-11-24T02:54:25Z", "type": "commit"}, {"oid": "3b573a127723bb96502472c49aeb97ddc962fb0b", "url": "https://github.com/openzipkin/brave/commit/3b573a127723bb96502472c49aeb97ddc962fb0b", "message": "Revert drift", "committedDate": "2020-11-24T02:55:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2ODQxNA==", "url": "https://github.com/openzipkin/brave/pull/1281#discussion_r529168414", "bodyText": "Added an iterator method to match upstream (instead of my previous approach of the protected field which stopped being feasible)", "author": "anuraaga", "createdAt": "2020-11-24T02:56:20Z", "path": "brave/src/main/java/brave/internal/collect/WeakConcurrentMap.java", "diffHunk": "@@ -66,6 +69,12 @@\n     return target.remove(key);\n   }\n \n+  /** Iterates over the entries in this map. */\n+  @Override\n+  public Iterator<Map.Entry<K, V>> iterator() {", "originalCommit": "3b573a127723bb96502472c49aeb97ddc962fb0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ee21d8d430c37d6e01407a51cfd571c104a33cc", "url": "https://github.com/openzipkin/brave/commit/6ee21d8d430c37d6e01407a51cfd571c104a33cc", "message": "Iterable now", "committedDate": "2020-11-24T03:01:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MDU0Ng==", "url": "https://github.com/openzipkin/brave/pull/1281#discussion_r529170546", "bodyText": "Assertion changed from ObjectAssert to ListAssert. Other ways to fix\n\nDon't implement Iterable in WeakConcurrentMap\nStop extending WeakConcurrentMap in PendingSpans\n\nCould do now or in the future when integrating upstream's library in.", "author": "anuraaga", "createdAt": "2020-11-24T03:02:53Z", "path": "brave/src/test/java/brave/TracingTest.java", "diffHunk": "@@ -112,7 +112,7 @@\n \n   @Test public void spanHandler_loggingByDefault() {\n     try (Tracing tracing = Tracing.newBuilder().build()) {\n-      assertThat(tracing.tracer().pendingSpans).extracting(\"spanHandler.delegate\")\n+      assertThat((Object) tracing.tracer().pendingSpans).extracting(\"spanHandler.delegate\")", "originalCommit": "6ee21d8d430c37d6e01407a51cfd571c104a33cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d66454dc1ea7a7884e68094ace2f0eed34710b80", "url": "https://github.com/openzipkin/brave/commit/d66454dc1ea7a7884e68094ace2f0eed34710b80", "message": "foo", "committedDate": "2020-11-24T03:05:59Z", "type": "commit"}]}