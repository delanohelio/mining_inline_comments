{"pr_number": 1253, "pr_title": "Bumps library versions to latest", "pr_createdAt": "2020-09-15T04:56:10Z", "pr_url": "https://github.com/openzipkin/brave/pull/1253", "timeline": [{"oid": "d6866e1924733a6675eefa9c764215e7780d3e13", "url": "https://github.com/openzipkin/brave/commit/d6866e1924733a6675eefa9c764215e7780d3e13", "message": "Bumps library versions to latest", "committedDate": "2020-09-15T04:55:47Z", "type": "commit"}, {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37", "url": "https://github.com/openzipkin/brave/commit/8dc07ba393786e491b02a1122d080e0556f03f37", "message": "avoid leaking suddenly recent mongo admin commands", "committedDate": "2020-09-15T07:22:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NDk1OA==", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488444958", "bodyText": "assertj got weird and leaked data which I didn't feel like hunting down. This is a classloader test", "author": "codefromthecrypt", "createdAt": "2020-09-15T07:25:46Z", "path": "brave-tests/src/main/java/brave/test/propagation/PropagationTest.java", "diffHunk": "@@ -180,8 +180,9 @@ public MapEntry() {\n       Map<Object, String> map = new LinkedHashMap<>();\n       injector.inject(ctx, map);\n \n-      assertThat(extractor.extract(map).context())", "originalCommit": "8dc07ba393786e491b02a1122d080e0556f03f37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTIzMQ==", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488445231", "bodyText": "assertj's recursive can't tell the difference between two exceptions with the same value state anymore", "author": "codefromthecrypt", "createdAt": "2020-09-15T07:26:13Z", "path": "brave/src/test/java/brave/handler/MutableSpanTest.java", "diffHunk": "@@ -578,7 +579,7 @@\n         MutableSpan other = otherConstructor.get();\n         assertThat(span).isNotSameAs(other); // sanity\n         assertNeitherEqualNorShareHashCode(span, other);\n-        assertThat(span).usingRecursiveComparison().isNotEqualTo(other); // double check our impl\n+        assertThat(Objects.deepEquals(span, other)).isFalse(); // double check our impl", "originalCommit": "8dc07ba393786e491b02a1122d080e0556f03f37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTY5Mw==", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488445693", "bodyText": "typical maintenance and without this we can't really trace kafka 2.6 as it won't completely implement the interface", "author": "codefromthecrypt", "createdAt": "2020-09-15T07:26:53Z", "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/TracingConsumer.java", "diffHunk": "@@ -313,6 +313,11 @@ public ConsumerGroupMetadata groupMetadata() {\n     return delegate.groupMetadata();\n   }\n \n+  // Do not use @Override annotation to avoid compatibility issue version < 2.6\n+  public void enforceRebalance() {\n+    delegate.enforceRebalance();", "originalCommit": "8dc07ba393786e491b02a1122d080e0556f03f37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NjQxMw==", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488446413", "bodyText": "super strange that in a patch \"admin\" database commands suddenly show up. Due to order of things, we would only see \"endSessions\"! This explicitly gets rid of this similar to p6spy until/unless someone asks for full admin coverage and in that case end w/o start probably is undesirable.", "author": "codefromthecrypt", "createdAt": "2020-09-15T07:28:11Z", "path": "instrumentation/mongodb/src/main/java/brave/mongodb/TraceMongoCommandListener.java", "diffHunk": "@@ -61,11 +61,13 @@\n    * all callbacks happen on the same thread.\n    */\n   @Override public void commandStarted(CommandStartedEvent event) {\n+    String databaseName = event.getDatabaseName();\n+    if (\"admin\".equals(databaseName)) return; // don't trace commands like \"endSessions\"", "originalCommit": "8dc07ba393786e491b02a1122d080e0556f03f37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NjY5Nw==", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488446697", "bodyText": "same as our zipkin image, inlined and also lets us skip docker if we want.", "author": "codefromthecrypt", "createdAt": "2020-09-15T07:28:41Z", "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbit.java", "diffHunk": "@@ -61,14 +67,41 @@\n   static final String TEST_QUEUE_BATCH = \"test-queue-1\";\n   static final Exchange exchange_batch = topicExchange(\"test-exchange-1\").durable(true).build();\n   static final Queue queue_batch = new Queue(TEST_QUEUE_BATCH);\n-  static final Binding binding_batch = bind(queue_batch).to(exchange_batch).with(\"test.binding.1\").noargs();\n+  static final Binding binding_batch =\n+    bind(queue_batch).to(exchange_batch).with(\"test.binding.1\").noargs();\n+\n+  static final String IMAGE = \"rabbitmq:3.8-management-alpine\";\n+  static final int RABBIT_PORT = 5672;\n+\n+  static final class RabbitMQContainer extends GenericContainer<RabbitMQContainer> {", "originalCommit": "8dc07ba393786e491b02a1122d080e0556f03f37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}