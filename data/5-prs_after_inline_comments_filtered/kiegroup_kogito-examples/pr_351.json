{"pr_number": 351, "pr_title": "KOGITO-3211 Introducting CI example with Kogito SW, Knative and Camel", "pr_createdAt": "2020-09-02T21:08:42Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/351", "timeline": [{"oid": "1189e917bb3adec11111298ceaf78809423e6df8", "url": "https://github.com/kiegroup/kogito-examples/commit/1189e917bb3adec11111298ceaf78809423e6df8", "message": "[KOGITO-3211] - Introducting CI example with Kogito SW, Knative and Camel-K\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-08T14:42:16Z", "type": "forcePushed"}, {"oid": "d3ef8fcb51d93a3b70b8245e6623c18d2552a456", "url": "https://github.com/kiegroup/kogito-examples/commit/d3ef8fcb51d93a3b70b8245e6623c18d2552a456", "message": "Fixing SW workflow, adding headers and manually set jbpm props\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-21T21:37:27Z", "type": "forcePushed"}, {"oid": "50a101ed5767a544fa7621277deb7f24d16a09d2", "url": "https://github.com/kiegroup/kogito-examples/commit/50a101ed5767a544fa7621277deb7f24d16a09d2", "message": "fixing Istio routing with smee\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-23T15:16:27Z", "type": "forcePushed"}, {"oid": "e02535c703a80c373c9cc5bd9c52c4e7c741e48d", "url": "https://github.com/kiegroup/kogito-examples/commit/e02535c703a80c373c9cc5bd9c52c4e7c741e48d", "message": "Reviewing SW workflow, unit tests for github service calls\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-24T21:08:20Z", "type": "forcePushed"}, {"oid": "46ae4a310a94a8f258e59c45d9122a303ab2f0a3", "url": "https://github.com/kiegroup/kogito-examples/commit/46ae4a310a94a8f258e59c45d9122a303ab2f0a3", "message": "[KOGITO-3211] - Introducting CI example with Kogito SW, Knative and Camel\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-25T20:06:00Z", "type": "forcePushed"}, {"oid": "0f7ceb961291d87fcd7bc97c158d2e2f9ccbc5f8", "url": "https://github.com/kiegroup/kogito-examples/commit/0f7ceb961291d87fcd7bc97c158d2e2f9ccbc5f8", "message": "Documentation and infra deployment for Notification service\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-09-30T21:31:30Z", "type": "forcePushed"}, {"oid": "0769ab3dbf85b18fa4ab8c2fd772763f265f42cc", "url": "https://github.com/kiegroup/kogito-examples/commit/0769ab3dbf85b18fa4ab8c2fd772763f265f42cc", "message": "Adding SW deployment on Kubernetes\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-01T21:14:56Z", "type": "forcePushed"}, {"oid": "426cac31766c4a03af8d9ac9a7d72e19fac2b68d", "url": "https://github.com/kiegroup/kogito-examples/commit/426cac31766c4a03af8d9ac9a7d72e19fac2b68d", "message": "[KOGITO-3211] - Introducting CI example with Kogito SW, Knative and Camel\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-02T20:30:23Z", "type": "commit"}, {"oid": "426cac31766c4a03af8d9ac9a7d72e19fac2b68d", "url": "https://github.com/kiegroup/kogito-examples/commit/426cac31766c4a03af8d9ac9a7d72e19fac2b68d", "message": "[KOGITO-3211] - Introducting CI example with Kogito SW, Knative and Camel\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-02T20:30:23Z", "type": "forcePushed"}, {"oid": "5404b1fde0ae36eb81091605f44a1f65ee76c9c0", "url": "https://github.com/kiegroup/kogito-examples/commit/5404b1fde0ae36eb81091605f44a1f65ee76c9c0", "message": "Fixing gitignore for virtual service patch\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-06T13:02:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzNDAwNw==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r500334007", "bodyText": "I think this doesn't work in native mode. Is this example supposed to run in native mode?", "author": "danielezonca", "createdAt": "2020-10-06T14:29:14Z", "path": "serverless-workflow-github-showcase/github-service/src/main/java/org/kogito/examples/sw/github/service/TokenProvider.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kogito.examples.sw.github.service;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.security.Key;\n+import java.security.KeyFactory;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.PrivateKey;\n+import java.security.spec.InvalidKeySpecException;\n+import java.security.spec.PKCS8EncodedKeySpec;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import com.google.common.io.Files;\n+import io.jsonwebtoken.JwtBuilder;\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import io.quarkus.cache.CacheResult;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.kohsuke.github.GHAppInstallation;\n+import org.kohsuke.github.GHPermissionType;\n+import org.kohsuke.github.GitHub;\n+import org.kohsuke.github.GitHubBuilder;\n+\n+/**\n+ * Provides the installation token to interact with the GitHub API via GitHub App Installation\n+ *\n+ * @see <a href=\"https://github-api.kohsuke.org/githubappjwtauth.html\">GitHub App Authentication via JWT token</a>\n+ */\n+@ApplicationScoped\n+public class TokenProvider {\n+\n+    private static final int expirationMillis = 600000;\n+    private static final int cacheExpirationMillis = 300000;\n+\n+    @ConfigProperty(name = \"org.kogito.examples.sw.github.service.app_id\")\n+    String appId;\n+\n+    @ConfigProperty(name = \"org.kogito.examples.sw.github.service.key\")\n+    String privateKeyPath;\n+\n+    @ConfigProperty(name = \"org.kogito.examples.sw.github.service.installation_id\")\n+    Long installationId;\n+\n+    public TokenProvider() {\n+\n+    }\n+\n+    private PrivateKey getPrivateKey() throws IOException, NoSuchAlgorithmException, InvalidKeySpecException {\n+        byte[] keyBytes = Files.toByteArray(new File(privateKeyPath));", "originalCommit": "5404b1fde0ae36eb81091605f44a1f65ee76c9c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA3MzEwOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r501073108", "bodyText": "Would be nice to work on native, I'll give it a try, build the image and update the docs. The problem is the dependency from io.jsonwebtoken, not sure if it's compatible :*", "author": "ricardozanini", "createdAt": "2020-10-07T14:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzNDAwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MjU1OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r501162559", "bodyText": "I just ran some tests, and the problem of targeting native for this particular service is the GitHub client library we're using. I won't spend to much time looking into this, maybe in the future.", "author": "ricardozanini", "createdAt": "2020-10-07T16:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzNDAwNw=="}], "type": "inlineReview"}, {"oid": "90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "url": "https://github.com/kiegroup/kogito-examples/commit/90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "message": "Incorporating round 1 of reviews\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-07T16:53:07Z", "type": "commit"}, {"oid": "0c45131bcf387df6e2fac52d6176caf8d6a6dfbb", "url": "https://github.com/kiegroup/kogito-examples/commit/0c45131bcf387df6e2fac52d6176caf8d6a6dfbb", "message": "incorporating Tristan comments\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-19T17:57:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzNTMzNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r507935335", "bodyText": "for generic exceptions is recommended use final Exception.", "author": "spolti", "createdAt": "2020-10-19T17:40:09Z", "path": "serverless-workflow-github-showcase/github-service/src/main/java/org/kogito/examples/sw/github/service/GitHubResource.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kogito.examples.sw.github.service;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+@Path(\"/repo\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+public class GitHubResource {\n+\n+    @Inject\n+    GitHubWrapperService gitHubService;\n+\n+    @POST\n+    @Path(\"/{user}/{name}/pr/{number}/labels\")\n+    public Response addLabels(@PathParam(\"user\") String user,\n+                              @PathParam(\"name\") String repoName,\n+                              @PathParam(\"number\") Integer prNumber,\n+                              List<String> labels) {\n+        try {\n+            gitHubService.addLabels(user, repoName, prNumber, labels);\n+            return Response.ok().build();\n+        } catch (Exception e) {", "originalCommit": "90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzNTU3Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r507935573", "bodyText": "docs?", "author": "spolti", "createdAt": "2020-10-19T17:40:22Z", "path": "serverless-workflow-github-showcase/github-service/src/main/java/org/kogito/examples/sw/github/service/GitHubWrapperService.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kogito.examples.sw.github.service;\n+\n+import java.util.List;\n+\n+public interface GitHubWrapperService {\n+\n+    void addLabels(String user, String repository, int issueId, List<String> labels) throws Exception;", "originalCommit": "90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzODExNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r507938115", "bodyText": "as there's no compatibility with native mode, maybe remove it?", "author": "spolti", "createdAt": "2020-10-19T17:42:35Z", "path": "serverless-workflow-github-showcase/github-service/src/test/java/org/kogito/examples/sw/github/service/NativeGitHubResourceIT.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kogito.examples.sw.github.service;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+\n+@NativeImageTest\n+public class NativeGitHubResourceIT extends GitHubResourceTest {\n+    // will run the same tests\n+}", "originalCommit": "90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzMzM3Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r508033376", "bodyText": "if a error happens, who will thrown or print it to user?", "author": "spolti", "createdAt": "2020-10-19T20:12:01Z", "path": "serverless-workflow-github-showcase/notification-service/src/main/java/org/kogito/examples/sw/notification/service/NotificationResource.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kogito.examples.sw.notification.service;\n+\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.cloudevents.CloudEvent;\n+import org.apache.camel.ProducerTemplate;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+@Path(\"\")\n+@ApplicationScoped\n+public class NotificationResource {\n+    \n+    @Inject\n+    ObjectMapper mapper;\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @ConfigProperty(name = \"org.kogito.examples.sw.notification.slack.channel\")\n+    String channel;\n+\n+    @ConfigProperty(name = \"org.kogito.examples.sw.notification.slack.incoming\")\n+    String webHookUrl;\n+\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    @Path(\"/plain\")\n+    public Response createSlackMessage(String message) {\n+        producerTemplate.requestBody(\"slack:#\" + channel + \"?webhookUrl=\" + webHookUrl, message);", "originalCommit": "90fb1e5bcb8c4cfd981199ccabbe06196c9dd487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3NTkyMQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/351#discussion_r508575921", "bodyText": "It will print in the notification service logs", "author": "ricardozanini", "createdAt": "2020-10-20T14:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzMzM3Ng=="}], "type": "inlineReview"}, {"oid": "8f62a4b05be439eb1bdba249c032616874692ace", "url": "https://github.com/kiegroup/kogito-examples/commit/8f62a4b05be439eb1bdba249c032616874692ace", "message": "incorporating Spolti and Edoardo comments\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-20T14:55:29Z", "type": "commit"}, {"oid": "140e3c160ffb7389d6a9d90eb1a9c274469de2bc", "url": "https://github.com/kiegroup/kogito-examples/commit/140e3c160ffb7389d6a9d90eb1a9c274469de2bc", "message": "updating to operator 0.16.0\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-10-20T21:14:53Z", "type": "commit"}]}