{"pr_number": 277, "pr_title": "KOGITO-2158: Review and fix kogito examples using persistence profile", "pr_createdAt": "2020-06-16T11:41:58Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/277", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NjQ5MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440786490", "bodyText": "I created this abstraction because if the PR is approved, I'm planning to follow the same approach for Kafka. So, Kafka would reuse the same mechanism to enable/disable the container.", "author": "Sgitario", "createdAt": "2020-06-16T11:43:03Z", "path": "common-example-utils/src/main/java/org/kie/kogito/testcontainers/ConditionalGenericContainer.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers;\n+\n+import java.util.Optional;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Container to be run if and only if it was enabled.\n+ */\n+public abstract class ConditionalGenericContainer<SELF extends GenericContainer<SELF>> extends GenericContainer<SELF> {", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4ODA0Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440788047", "bodyText": "I changed the sasl-mechanism to \"PLAIN\" as some tests were failing using DIGEST (a missing property probably). I guess using \"PLAIN\" should be fine.", "author": "Sgitario", "createdAt": "2020-06-16T11:46:20Z", "path": "process-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -15,46 +15,32 @@\n  */\n package org.acme.deals;\n \n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n import java.util.Map;\n \n-import io.restassured.RestAssured;\n-import io.restassured.http.ContentType;\n-import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.kie.kogito.persistence.InfinispanContainer;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.web.server.LocalServerPort;\n-import org.testcontainers.containers.FixedHostPortGenericContainer;\n import org.testcontainers.containers.GenericContainer;\n-import org.testcontainers.containers.wait.strategy.Wait;\n import org.testcontainers.junit.jupiter.Container;\n import org.testcontainers.junit.jupiter.Testcontainers;\n \n-import static io.restassured.RestAssured.given;\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.notNullValue;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n \n @Testcontainers\n-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, properties = {\n-        \"infinispan.remote.use-auth=true\",\n-        \"infinispan.remote.auth-username=admin\",\n-        \"infinispan.remote.auth-password=admin\",\n-        \"infinispan.remote.sasl-mechanism=DIGEST-MD5\"", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTg3Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440789876", "bodyText": "I see that this is using TABs, that's why this format issue. Should I reformat the whole file? (I will result in much more changes...)", "author": "Sgitario", "createdAt": "2020-06-16T11:50:00Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/PersonsRestTest.java", "diffHunk": "@@ -32,22 +32,30 @@\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.kie.kogito.Model;\n import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.persistence.InfinispanContainer;\n import org.kie.kogito.process.Process;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.web.server.LocalServerPort;\n import org.springframework.test.annotation.DirtiesContext;\n import org.springframework.test.annotation.DirtiesContext.ClassMode;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n \n import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n \n+@Testcontainers\n @SuppressWarnings(\"rawtypes\")\n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class PersonsRestTest {\n \t\n+    @Container\n+    public static GenericContainer<?> INFINISPAN = new InfinispanContainer().enableIfTestCategoryIs(\"persistence\");\n+", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTk1Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440789952", "bodyText": "I see that this is using TABs, that's why this format issue. Should I reformat the whole file? (I will result in much more changes...)", "author": "Sgitario", "createdAt": "2020-06-16T11:50:09Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -42,12 +43,19 @@\n import org.springframework.test.annotation.DirtiesContext;\n import org.springframework.test.annotation.DirtiesContext.ClassMode;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n \n+@Testcontainers\n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class OrdersProcessTest {\n \n+    @Container\n+    public static GenericContainer<?> INFINISPAN = new InfinispanContainer().enableIfTestCategoryIs(\"persistence\");\n+", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NjEyMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441246122", "bodyText": "fine as is, probably is best to do a new PR with just the reformat after merging this.", "author": "cristianonicolai", "createdAt": "2020-06-17T02:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTk1Mg=="}], "type": "inlineReview"}, {"oid": "ad75e278c470d2eec08eaa7d8cb13e5a54169faa", "url": "https://github.com/kiegroup/kogito-examples/commit/ad75e278c470d2eec08eaa7d8cb13e5a54169faa", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T06:19:42Z", "type": "forcePushed"}, {"oid": "85dcc49e2e95ae4efd03f3a41f20c8505106a422", "url": "https://github.com/kiegroup/kogito-examples/commit/85dcc49e2e95ae4efd03f3a41f20c8505106a422", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T06:20:14Z", "type": "forcePushed"}, {"oid": "004a1602b4afe31df03fdbef582679098fb9e9b1", "url": "https://github.com/kiegroup/kogito-examples/commit/004a1602b4afe31df03fdbef582679098fb9e9b1", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T07:09:55Z", "type": "forcePushed"}, {"oid": "eb879d091d7826b5420e100e7ce0459e5859eb8d", "url": "https://github.com/kiegroup/kogito-examples/commit/eb879d091d7826b5420e100e7ce0459e5859eb8d", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T09:01:10Z", "type": "commit"}, {"oid": "eb879d091d7826b5420e100e7ce0459e5859eb8d", "url": "https://github.com/kiegroup/kogito-examples/commit/eb879d091d7826b5420e100e7ce0459e5859eb8d", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T09:01:10Z", "type": "forcePushed"}]}