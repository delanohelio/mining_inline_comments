{"pr_number": 11235, "pr_title": "[BEAM-9618] Pull bundle descriptors.", "pr_createdAt": "2020-03-26T07:26:08Z", "pr_url": "https://github.com/apache/beam/pull/11235", "timeline": [{"oid": "cebab89aa6221ea4e981baec6eebf610b172dbb6", "url": "https://github.com/apache/beam/commit/cebab89aa6221ea4e981baec6eebf610b172dbb6", "message": "DO NOT MERGE test ignoring registration", "committedDate": "2020-03-26T23:28:04Z", "type": "forcePushed"}, {"oid": "590a6698303040c99781c37dfaf2f38993ae8f3f", "url": "https://github.com/apache/beam/commit/590a6698303040c99781c37dfaf2f38993ae8f3f", "message": "DO NOT MERGE test ignoring registration", "committedDate": "2020-04-01T08:15:35Z", "type": "forcePushed"}, {"oid": "6620c70ed996b50a63fa7268b7d5e98906d09608", "url": "https://github.com/apache/beam/commit/6620c70ed996b50a63fa7268b7d5e98906d09608", "message": "DO NOT MERGE test ignoring registration", "committedDate": "2020-04-01T09:27:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MzI0OQ==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401943249", "bodyText": "Since this is a new method, we should force all users to supply it.", "author": "lukecwik", "createdAt": "2020-04-01T22:18:58Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(\n+      BeamFnApi.GetProcessBundleDescriptorRequest request,\n+      StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver) {\n+    final String workerId = headerAccessor.getSdkWorkerId();\n+    if (Strings.isNullOrEmpty(workerId)) {\n+      // TODO(BEAM-4149): Enforce proper worker id.\n+      LOG.warn(\"No worker_id header provided in getProcessBundleDescriptor request\");", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NTU1Mw==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401945553", "bodyText": "Please return the NOT_FOUND status error if the process bundle descriptor is null.", "author": "lukecwik", "createdAt": "2020-04-01T22:24:31Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(\n+      BeamFnApi.GetProcessBundleDescriptorRequest request,\n+      StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver) {\n+    final String workerId = headerAccessor.getSdkWorkerId();\n+    if (Strings.isNullOrEmpty(workerId)) {\n+      // TODO(BEAM-4149): Enforce proper worker id.\n+      LOG.warn(\"No worker_id header provided in getProcessBundleDescriptor request\");\n+    }\n+\n+    LOG.info(\"getProcessBundleDescriptor request with id {}\", workerId);\n+\n+    FnApiControlClient client;\n+    synchronized (lock) {\n+      client = vendedClients.get(workerId);\n+    }\n+    LOG.warn(\"getProcessBundleDescriptor client {}\", client);\n+    LOG.warn(\"getProcessBundleDescriptor id {}\", request.getProcessBundleDescriptorId());\n+    LOG.warn(\n+        \"getProcessBundleDescriptor result {}\",\n+        client.getProcessBundleDescriptor(request.getProcessBundleDescriptorId()));\n+    responseObserver.onNext(\n+        client.getProcessBundleDescriptor(request.getProcessBundleDescriptorId()));", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NjIxMA==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401946210", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOG.info(\"getProcessBundleDescriptor request with id {}\", workerId);\n          \n          \n            \n                LOG.info(\"getProcessBundleDescriptor: descriptor {} worker id {}\", request.getProcessBundleDescriptorId(), workerId);", "author": "lukecwik", "createdAt": "2020-04-01T22:26:02Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(\n+      BeamFnApi.GetProcessBundleDescriptorRequest request,\n+      StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver) {\n+    final String workerId = headerAccessor.getSdkWorkerId();\n+    if (Strings.isNullOrEmpty(workerId)) {\n+      // TODO(BEAM-4149): Enforce proper worker id.\n+      LOG.warn(\"No worker_id header provided in getProcessBundleDescriptor request\");\n+    }\n+\n+    LOG.info(\"getProcessBundleDescriptor request with id {}\", workerId);", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NjI2MQ==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401946261", "bodyText": "Did you intend to keep all these logs?", "author": "lukecwik", "createdAt": "2020-04-01T22:26:11Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(\n+      BeamFnApi.GetProcessBundleDescriptorRequest request,\n+      StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver) {\n+    final String workerId = headerAccessor.getSdkWorkerId();\n+    if (Strings.isNullOrEmpty(workerId)) {\n+      // TODO(BEAM-4149): Enforce proper worker id.\n+      LOG.warn(\"No worker_id header provided in getProcessBundleDescriptor request\");\n+    }\n+\n+    LOG.info(\"getProcessBundleDescriptor request with id {}\", workerId);\n+\n+    FnApiControlClient client;\n+    synchronized (lock) {\n+      client = vendedClients.get(workerId);\n+    }\n+    LOG.warn(\"getProcessBundleDescriptor client {}\", client);\n+    LOG.warn(\"getProcessBundleDescriptor id {}\", request.getProcessBundleDescriptorId());\n+    LOG.warn(\n+        \"getProcessBundleDescriptor result {}\",\n+        client.getProcessBundleDescriptor(request.getProcessBundleDescriptorId()));", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NjY0Ng==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401946646", "bodyText": "We should check that we are not closed.", "author": "lukecwik", "createdAt": "2020-04-01T22:27:09Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(\n+      BeamFnApi.GetProcessBundleDescriptorRequest request,\n+      StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver) {\n+    final String workerId = headerAccessor.getSdkWorkerId();\n+    if (Strings.isNullOrEmpty(workerId)) {", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1MjYwOQ==", "url": "https://github.com/apache/beam/pull/11235#discussion_r401952609", "bodyText": "Please add failure tests to FnApiControlClientPoolService for NOT_FOUND and missing worker id.", "author": "lukecwik", "createdAt": "2020-04-01T22:42:52Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolService.java", "diffHunk": "@@ -105,12 +105,38 @@ public static FnApiControlClientPoolService offeringClientsToPool(\n     return newClient.asResponseObserver();\n   }\n \n+  @Override\n+  public void getProcessBundleDescriptor(", "originalCommit": "3b986380e56cc58a29264bb2e37cef7d415b6528", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0MTc0Nw==", "url": "https://github.com/apache/beam/pull/11235#discussion_r404241747", "bodyText": "Validate the \"not found\" shows up in the status message and/or status code to ensure that we got the right StatusException", "author": "lukecwik", "createdAt": "2020-04-06T16:52:25Z", "path": "runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientPoolServiceTest.java", "diffHunk": "@@ -120,4 +121,16 @@ public void onCompleted() {\n     latch.await();\n     assertThat(sawComplete.get(), is(true));\n   }\n+\n+  @Test\n+  public void testUnknownBundle() throws Exception {\n+    BeamFnApi.GetProcessBundleDescriptorRequest request =\n+        BeamFnApi.GetProcessBundleDescriptorRequest.newBuilder()\n+            .setProcessBundleDescriptorId(\"missing\")\n+            .build();\n+    StreamObserver<BeamFnApi.ProcessBundleDescriptor> responseObserver = mock(StreamObserver.class);\n+    controlService.getProcessBundleDescriptor(request, responseObserver);\n+\n+    verify(responseObserver).onError(any(StatusException.class));", "originalCommit": "71dbda7bc3b2c82c35bef75789b80ff64702723f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0MjA0Nw==", "url": "https://github.com/apache/beam/pull/11235#discussion_r404242047", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testRegisterNundle() {\n          \n          \n            \n              public void testRegisterBundle() {", "author": "lukecwik", "createdAt": "2020-04-06T16:52:52Z", "path": "runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/FnApiControlClientTest.java", "diffHunk": "@@ -175,4 +179,23 @@ public void testOnCloseMultipleListener() throws Exception {\n     verify(mockConsumer1).accept(client);\n     verify(mockConsumer2).accept(client);\n   }\n+\n+  @Test\n+  public void testRegisterNundle() {", "originalCommit": "71dbda7bc3b2c82c35bef75789b80ff64702723f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1cb79b83712b8244a18935fe714cb04fbb2a4d34", "url": "https://github.com/apache/beam/commit/1cb79b83712b8244a18935fe714cb04fbb2a4d34", "message": "[BEAM-9618] Add protocol for requesting process bundle descriptors.", "committedDate": "2020-04-06T17:45:42Z", "type": "commit"}, {"oid": "fe5f6698155bdab45d5eab40dc1a439882717b28", "url": "https://github.com/apache/beam/commit/fe5f6698155bdab45d5eab40dc1a439882717b28", "message": "[BEAM-9618] Update Python to support process bundle descriptor fetching.", "committedDate": "2020-04-06T17:46:07Z", "type": "commit"}, {"oid": "1c7f83deabdf655185f9bfaed7a75938ff8552d2", "url": "https://github.com/apache/beam/commit/1c7f83deabdf655185f9bfaed7a75938ff8552d2", "message": "[BEAM-9618] Java FnApiClient support for process bundle descriptor pulling.", "committedDate": "2020-04-06T17:46:26Z", "type": "commit"}, {"oid": "1c7f83deabdf655185f9bfaed7a75938ff8552d2", "url": "https://github.com/apache/beam/commit/1c7f83deabdf655185f9bfaed7a75938ff8552d2", "message": "[BEAM-9618] Java FnApiClient support for process bundle descriptor pulling.", "committedDate": "2020-04-06T17:46:26Z", "type": "forcePushed"}, {"oid": "48fb2e67da03951069aa2c5960185ce740acb644", "url": "https://github.com/apache/beam/commit/48fb2e67da03951069aa2c5960185ce740acb644", "message": "Typo fix.", "committedDate": "2020-04-06T18:53:59Z", "type": "commit"}]}