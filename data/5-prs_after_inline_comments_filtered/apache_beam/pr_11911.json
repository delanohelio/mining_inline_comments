{"pr_number": 11911, "pr_title": "[BEAM-10186] Sends an empty response to the runner instead of failing", "pr_createdAt": "2020-06-03T19:49:07Z", "pr_url": "https://github.com/apache/beam/pull/11911", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r439210538", "bodyText": "Do we only care about IllegalStateException  here? It seems like other exceptions might also be thrown.", "author": "boyuanzz", "createdAt": "2020-06-12T05:14:38Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/control/BeamFnControlClient.java", "diffHunk": "@@ -159,6 +159,16 @@ public void processInstructionRequests(Executor executor)\n             } catch (Error e) {\n               sendErrorResponse(e);\n               throw e;\n+            } catch (IllegalStateException e) {", "originalCommit": "fcbcf9e3cf00a4a940ada058634f0a500d6c1fd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MzYyNA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r442563624", "bodyText": "Instead of adding this try catch, we should update the handler to not throw the exception in the first place.\nHere: \n  \n    \n      beam/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/control/ProcessBundleHandler.java\n    \n    \n         Line 378\n      in\n      bca893e\n    \n    \n    \n    \n\n        \n          \n           public BeamFnApi.InstructionResponse.Builder trySplit(BeamFnApi.InstructionRequest request) { \n        \n    \n  \n\n\nHere: \n  \n    \n      beam/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/control/ProcessBundleHandler.java\n    \n    \n         Line 344\n      in\n      bca893e\n    \n    \n    \n    \n\n        \n          \n           if (bundleProcessor == null) { \n        \n    \n  \n\n\nWe should add a simple unit test that covers this as well.", "author": "lukecwik", "createdAt": "2020-06-19T00:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2NjUzOQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r442566539", "bodyText": "I don't think that will resolve the issue of runner waiting for a response here and timing out (with a bad error in the case of Dataflow).\nHow about catching all exceptions here and sending a error response to the runner set here: https://github.com/apache/beam/blob/master/model/fn-execution/src/main/proto/beam_fn_api.proto#L129\n?", "author": "chamikaramj", "createdAt": "2020-06-19T00:15:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2ODA5MQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r442568091", "bodyText": "Nvm, we already do it here: https://github.com/apache/beam/blob/master/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/control/BeamFnControlClient.java#L182\nI'm looking more closely at this now. Sorry about the delay.", "author": "chamikaramj", "createdAt": "2020-06-19T00:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2OTMzOA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r442969338", "bodyText": "I would suggest sending back an empty successful response instead of throwing an error. Empty progress/split responses are no-ops from the runners side.", "author": "lukecwik", "createdAt": "2020-06-19T17:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2OTc2OA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r442969768", "bodyText": "It took me forever to get to this PR so I wouldn't worry about the delay.", "author": "lukecwik", "createdAt": "2020-06-19T17:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MTkzNQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r443091935", "bodyText": "Updated to send an empty successful response instead of failing. Also added unit tests.", "author": "chamikaramj", "createdAt": "2020-06-20T02:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMDUzOA=="}], "type": "inlineReview"}, {"oid": "c14f537e1997a3978dae8ffd80589f5e80a56c3b", "url": "https://github.com/apache/beam/commit/c14f537e1997a3978dae8ffd80589f5e80a56c3b", "message": "Sends an empty response to the runner instead of failing for split/progress requests received before the bundle.", "committedDate": "2020-06-20T01:54:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MTgxOQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r444541819", "bodyText": "validate the contents of the response", "author": "lukecwik", "createdAt": "2020-06-23T22:24:01Z", "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/control/ProcessBundleHandlerTest.java", "diffHunk": "@@ -260,6 +260,46 @@ BundleProcessor get(\n     }\n   }\n \n+  @Test\n+  public void testTrySplitBeforeBundleDoesNotFail() {\n+    ProcessBundleHandler handler =\n+        new ProcessBundleHandler(\n+            PipelineOptionsFactory.create(),\n+            null,\n+            beamFnDataClient,\n+            null /* beamFnStateClient */,\n+            null /* finalizeBundleHandler */,\n+            ImmutableMap.of(),\n+            new BundleProcessorCache());\n+\n+    handler.trySplit(", "originalCommit": "c14f537e1997a3978dae8ffd80589f5e80a56c3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1NjQ5MA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r445156490", "bodyText": "Done.", "author": "chamikaramj", "createdAt": "2020-06-24T20:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MTgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MTg0NQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r444541845", "bodyText": "validate the contents of the response", "author": "lukecwik", "createdAt": "2020-06-23T22:24:04Z", "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/control/ProcessBundleHandlerTest.java", "diffHunk": "@@ -260,6 +260,46 @@ BundleProcessor get(\n     }\n   }\n \n+  @Test\n+  public void testTrySplitBeforeBundleDoesNotFail() {\n+    ProcessBundleHandler handler =\n+        new ProcessBundleHandler(\n+            PipelineOptionsFactory.create(),\n+            null,\n+            beamFnDataClient,\n+            null /* beamFnStateClient */,\n+            null /* finalizeBundleHandler */,\n+            ImmutableMap.of(),\n+            new BundleProcessorCache());\n+\n+    handler.trySplit(\n+        BeamFnApi.InstructionRequest.newBuilder()\n+            .setInstructionId(\"999L\")\n+            .setProcessBundleSplit(\n+                BeamFnApi.ProcessBundleSplitRequest.newBuilder().setInstructionId(\"unknown-id\"))\n+            .build());\n+  }\n+\n+  @Test\n+  public void testProgressBeforeBundleDoesNotFail() throws Exception {\n+    ProcessBundleHandler handler =\n+        new ProcessBundleHandler(\n+            PipelineOptionsFactory.create(),\n+            null,\n+            beamFnDataClient,\n+            null /* beamFnStateClient */,\n+            null /* finalizeBundleHandler */,\n+            ImmutableMap.of(),\n+            new BundleProcessorCache());\n+\n+    handler.progress(", "originalCommit": "c14f537e1997a3978dae8ffd80589f5e80a56c3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1NjE4MQ==", "url": "https://github.com/apache/beam/pull/11911#discussion_r445156181", "bodyText": "Done.", "author": "chamikaramj", "createdAt": "2020-06-24T20:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MTg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0Mjg1Mw==", "url": "https://github.com/apache/beam/pull/11911#discussion_r444542853", "bodyText": "nit, you could remove the level of nesting by using a guard statement (here and below):\nif (bundleProcessor == null) {\n  return BeamFnApi.InstructionResponse.newBuilder().setProcessBundleProgress(BeamFnApi.ProcessBundleProgressResponse.getDefaultInstance());\n}", "author": "lukecwik", "createdAt": "2020-06-23T22:27:00Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/control/ProcessBundleHandler.java", "diffHunk": "@@ -341,53 +341,52 @@ private void createRunnerAndConsumersForPTransformRecursively(\n       throws Exception {\n     BundleProcessor bundleProcessor =\n         bundleProcessorCache.find(request.getProcessBundleProgress().getInstructionId());\n-    if (bundleProcessor == null) {", "originalCommit": "c14f537e1997a3978dae8ffd80589f5e80a56c3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1NTI2MA==", "url": "https://github.com/apache/beam/pull/11911#discussion_r445155260", "bodyText": "Done.", "author": "chamikaramj", "createdAt": "2020-06-24T20:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0Mjg1Mw=="}], "type": "inlineReview"}, {"oid": "8608f113c0858f332bed87efb0efddc7405fb28f", "url": "https://github.com/apache/beam/commit/8608f113c0858f332bed87efb0efddc7405fb28f", "message": "Sends an empty response to the runner instead of failing for split/progress requests received before the bundle.", "committedDate": "2020-06-24T20:36:51Z", "type": "forcePushed"}, {"oid": "d05a43bda07a5106e246c98a51768e60e6db1c7a", "url": "https://github.com/apache/beam/commit/d05a43bda07a5106e246c98a51768e60e6db1c7a", "message": "Sends an empty response to the runner instead of failing for split/progress requests received before the bundle.", "committedDate": "2020-06-24T20:38:27Z", "type": "commit"}, {"oid": "d05a43bda07a5106e246c98a51768e60e6db1c7a", "url": "https://github.com/apache/beam/commit/d05a43bda07a5106e246c98a51768e60e6db1c7a", "message": "Sends an empty response to the runner instead of failing for split/progress requests received before the bundle.", "committedDate": "2020-06-24T20:38:27Z", "type": "forcePushed"}]}