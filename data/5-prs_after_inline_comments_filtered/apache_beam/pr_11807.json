{"pr_number": 11807, "pr_title": "[BEAM-9363] Support TUMBLE aggregation", "pr_createdAt": "2020-05-25T06:56:54Z", "pr_url": "https://github.com/apache/beam/pull/11807", "timeline": [{"oid": "11796f3d6fd5dab6f910658edaa57f8a05a3c713", "url": "https://github.com/apache/beam/commit/11796f3d6fd5dab6f910658edaa57f8a05a3c713", "message": "[BEAM-9363] Support TUMBLE aggregation.", "committedDate": "2020-05-25T06:54:44Z", "type": "commit"}, {"oid": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "url": "https://github.com/apache/beam/commit/efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "message": "fixup! fix style issues.", "committedDate": "2020-05-25T06:58:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4MTYyMQ==", "url": "https://github.com/apache/beam/pull/11807#discussion_r431481621", "bodyText": "Nit: count_start should be field_count.", "author": "robinyqiu", "createdAt": "2020-05-27T22:36:43Z", "path": "sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java", "diffHunk": "@@ -4780,6 +4780,31 @@ public void testTumbleAsTVF() {\n     pipeline.run().waitUntilFinish(Duration.standardMinutes(PIPELINE_EXECUTION_WAITTIME_MINUTES));\n   }\n \n+  @Test\n+  public void testTVFTumbleAggregation() {\n+    String sql =\n+        \"SELECT COUNT(*) as field_count, \"\n+            + \"window_start \"\n+            + \"FROM TUMBLE((select * from KeyValue), descriptor(ts), 'INTERVAL 1 SECOND') \"\n+            + \"GROUP BY window_start\";\n+    ZetaSQLQueryPlanner zetaSQLQueryPlanner = new ZetaSQLQueryPlanner(config);\n+    BeamRelNode beamRelNode = zetaSQLQueryPlanner.convertToBeamRel(sql);\n+\n+    PCollection<Row> stream = BeamSqlRelUtils.toPCollection(pipeline, beamRelNode);\n+\n+    final Schema schema =\n+        Schema.builder().addInt64Field(\"count_start\").addDateTimeField(\"window_start\").build();", "originalCommit": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDYxMw==", "url": "https://github.com/apache/beam/pull/11807#discussion_r431484613", "bodyText": "Why not just return upstream.apply(...)?", "author": "robinyqiu", "createdAt": "2020-05-27T22:45:08Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamTableFunctionScanRel.java", "diffHunk": "@@ -99,14 +102,32 @@ public TableFunctionScan copy(\n       RexInputRef wmCol = (RexInputRef) call.getOperands().get(1);\n       PCollection<Row> upstream = input.get(0);\n       Schema outputSchema = CalciteUtils.toSchema(getRowType());\n-      return upstream\n-          .apply(\n-              ParDo.of(\n-                  new FixedWindowDoFn(\n-                      FixedWindows.of(durationParameter(call.getOperands().get(2))),\n-                      wmCol.getIndex(),\n-                      outputSchema)))\n-          .setRowSchema(outputSchema);\n+      FixedWindows windowFn = FixedWindows.of(durationParameter(call.getOperands().get(2)));\n+      PCollection<Row> streamWithWindowMetadata =\n+          upstream\n+              .apply(ParDo.of(new FixedWindowDoFn(windowFn, wmCol.getIndex(), outputSchema)))\n+              .setRowSchema(outputSchema);\n+\n+      PCollection<Row> windowedStream =\n+          assignTimestampsAndWindow(\n+              streamWithWindowMetadata, wmCol.getIndex(), (WindowFn) windowFn);\n+\n+      return windowedStream;\n+    }\n+\n+    /** Extract timestamps from the windowFieldIndex, then window into windowFns. */\n+    private PCollection<Row> assignTimestampsAndWindow(\n+        PCollection<Row> upstream, int windowFieldIndex, WindowFn<Row, IntervalWindow> windowFn) {\n+      PCollection<Row> windowedStream;\n+      windowedStream =\n+          upstream", "originalCommit": "efc76268e696c4a4dccba469b8e4d53e5e1b93a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4Njg0MQ==", "url": "https://github.com/apache/beam/pull/11807#discussion_r431486841", "bodyText": "Not a big deal. Just want to use the name windowedStream to improve readability. E.g. readers know it's returning a windowed PCollection.", "author": "amaliujia", "createdAt": "2020-05-27T22:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDYxMw=="}], "type": "inlineReview"}, {"oid": "511c411fb6bfc2b5bc405f26dd04058a85488c0b", "url": "https://github.com/apache/beam/commit/511c411fb6bfc2b5bc405f26dd04058a85488c0b", "message": "fixup! address comments.", "committedDate": "2020-05-28T00:33:07Z", "type": "commit"}]}