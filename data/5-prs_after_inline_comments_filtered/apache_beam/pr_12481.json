{"pr_number": 12481, "pr_title": "[BEAM-10571] Use schemas in ExternalConfigurationPayload", "pr_createdAt": "2020-08-06T16:30:44Z", "pr_url": "https://github.com/apache/beam/pull/12481", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NjY4Mw==", "url": "https://github.com/apache/beam/pull/12481#discussion_r466586683", "bodyText": "So this is a design decision?\nthis configRow is a Row with a String field and the payload is already a string/byte array. At least in this case it seems that without a scheme that payload can still be constructed back to a Row.\nThe schema looks right in general when payload is not a string/byte array", "author": "amaliujia", "createdAt": "2020-08-06T17:53:37Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/ValidateRunnerXlangTest.java", "diffHunk": "@@ -222,14 +228,21 @@ public void partitionTest() {\n   }\n \n   private byte[] toStringPayloadBytes(String data) throws IOException {\n+    Row configRow =\n+        Row.withSchema(Schema.of(Field.of(\"data\", FieldType.STRING)))\n+            .withFieldValue(\"data\", data)\n+            .build();\n+\n+    ByteString.Output outputStream = ByteString.newOutput();\n+    try {\n+      RowCoder.of(configRow.getSchema()).encode(configRow, outputStream);\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n     ExternalTransforms.ExternalConfigurationPayload payload =\n         ExternalTransforms.ExternalConfigurationPayload.newBuilder()\n-            .putConfiguration(\n-                \"data\",\n-                ExternalTransforms.ConfigValue.newBuilder()\n-                    .addCoderUrn(\"beam:coder:string_utf8:v1\")\n-                    .setPayload(ByteString.copyFrom(encodeString(data)))\n-                    .build())\n+            .setSchema(SchemaTranslation.schemaToProto(configRow.getSchema(), false))\n+            .setPayload(outputStream.toByteString())", "originalCommit": "b8936db44dff1e889365fd3c676160af24f91f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MjYzMw==", "url": "https://github.com/apache/beam/pull/12481#discussion_r466592633", "bodyText": "This is just mirroring what was there before, which used the old ExternalConfigurationPayload to encode a single field \"data\" with the string_utf8 coder. The equivalent with the new version  of ExternalConfigurationPayload is to encode a single field \"data\" with type STRING.", "author": "TheNeuralBit", "createdAt": "2020-08-06T18:03:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NjY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxNDYzMA==", "url": "https://github.com/apache/beam/pull/12481#discussion_r466614630", "bodyText": "Got it. Thanks for clarification.", "author": "amaliujia", "createdAt": "2020-08-06T18:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NjY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1Njc4MQ==", "url": "https://github.com/apache/beam/pull/12481#discussion_r467556781", "bodyText": "Comment should be updated (no byte arrays anymore).", "author": "mxm", "createdAt": "2020-08-09T08:55:38Z", "path": "sdks/java/io/kafka/src/main/java/org/apache/beam/sdk/io/kafka/KafkaIO.java", "diffHunk": "@@ -1452,12 +1446,12 @@ public void populateDisplayData(DisplayData.Builder builder) {\n       public static class Configuration {\n \n         // All byte arrays are UTF-8 encoded strings\n-        private Iterable<KV<String, String>> producerConfig;\n+        private Map<String, String> producerConfig;\n         private String topic;\n         private String keySerializer;\n         private String valueSerializer;", "originalCommit": "bee80c8d67734e21f83d46ca01819e482ca8e6cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8cc5690169d4556b61998d9e8b9e058a6bfdbed", "url": "https://github.com/apache/beam/commit/f8cc5690169d4556b61998d9e8b9e058a6bfdbed", "message": "Update external_transforms.proto to use schemas, implement in Python and Java", "committedDate": "2020-08-11T17:05:01Z", "type": "commit"}, {"oid": "ad3508bde0ed8aeb962ed7c904df14c28401f0e8", "url": "https://github.com/apache/beam/commit/ad3508bde0ed8aeb962ed7c904df14c28401f0e8", "message": "Use map in xlang KafkaIO, Update KafkaIOExternalTest", "committedDate": "2020-08-11T17:07:13Z", "type": "commit"}, {"oid": "ea938aa821e8a151bb78812a810e4e02ce1b2bd4", "url": "https://github.com/apache/beam/commit/ea938aa821e8a151bb78812a810e4e02ce1b2bd4", "message": "Update PubsubIOExternalTest", "committedDate": "2020-08-11T17:07:17Z", "type": "commit"}, {"oid": "cd42df4cdb5d9943b2fa624d32b9eca81b63e5cd", "url": "https://github.com/apache/beam/commit/cd42df4cdb5d9943b2fa624d32b9eca81b63e5cd", "message": "Update XVR", "committedDate": "2020-08-11T17:07:17Z", "type": "commit"}, {"oid": "f4e190d6ecba7e0f5a77e44290dec8d00f59d239", "url": "https://github.com/apache/beam/commit/f4e190d6ecba7e0f5a77e44290dec8d00f59d239", "message": "spotless", "committedDate": "2020-08-11T17:07:17Z", "type": "commit"}, {"oid": "e911490463e19084d0d065dc51b975a5643a1f63", "url": "https://github.com/apache/beam/commit/e911490463e19084d0d065dc51b975a5643a1f63", "message": "spotbugs", "committedDate": "2020-08-11T17:07:17Z", "type": "commit"}, {"oid": "bbab9e26abf05852932b0021d352829f543ebeb4", "url": "https://github.com/apache/beam/commit/bbab9e26abf05852932b0021d352829f543ebeb4", "message": "Remove byte array comments", "committedDate": "2020-08-11T17:08:56Z", "type": "commit"}, {"oid": "bbab9e26abf05852932b0021d352829f543ebeb4", "url": "https://github.com/apache/beam/commit/bbab9e26abf05852932b0021d352829f543ebeb4", "message": "Remove byte array comments", "committedDate": "2020-08-11T17:08:56Z", "type": "forcePushed"}]}