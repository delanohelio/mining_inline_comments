{"pr_number": 13055, "pr_title": "[BEAM-11006] BigQuery failsafe function", "pr_createdAt": "2020-10-09T01:53:16Z", "pr_url": "https://github.com/apache/beam/pull/13055", "timeline": [{"oid": "09be190a4cfc103789a3e7736a45424a293b2733", "url": "https://github.com/apache/beam/commit/09be190a4cfc103789a3e7736a45424a293b2733", "message": "Adding a Failsafe format function to BigQuery streaming writes", "committedDate": "2020-10-09T00:44:48Z", "type": "commit"}, {"oid": "ee524a23261bcee1f1f02a0480dd0f21e41f4152", "url": "https://github.com/apache/beam/commit/ee524a23261bcee1f1f02a0480dd0f21e41f4152", "message": "[BEAM-11006] Adding a Failsafe format function to BigQuery streaming writes", "committedDate": "2020-10-09T01:06:24Z", "type": "commit"}, {"oid": "620c391d79531d154e2a22d17cd47efc9fd2c5d1", "url": "https://github.com/apache/beam/commit/620c391d79531d154e2a22d17cd47efc9fd2c5d1", "message": "make FailsafeValueInSingleWindow public", "committedDate": "2020-10-09T17:36:53Z", "type": "commit"}, {"oid": "21e55f2a9ce8a19102f3f3d8a6a175622a7cacac", "url": "https://github.com/apache/beam/commit/21e55f2a9ce8a19102f3f3d8a6a175622a7cacac", "message": "missed failsafe", "committedDate": "2020-10-09T17:50:12Z", "type": "commit"}, {"oid": "93a95c064c4dfc156886ed90465d97318d44e6a6", "url": "https://github.com/apache/beam/commit/93a95c064c4dfc156886ed90465d97318d44e6a6", "message": "match BigQueryIO row writer T", "committedDate": "2020-10-09T18:02:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQ1NA==", "url": "https://github.com/apache/beam/pull/13055#discussion_r502683454", "bodyText": "Does this have to write TableRows? Why not also have the option to return the user type itself? (perhaps it's a lot of trouble to implement given the existing types?)\nWhat are some examples where users may want to recover a different tablerow than the one that was sent to BQ?", "author": "pabloem", "createdAt": "2020-10-09T21:42:39Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -2002,6 +2006,11 @@ static String getExtractDestinationUri(String extractDestinationDir) {\n       return toBuilder().setFormatFunction(formatFunction).build();\n     }\n \n+    /** Formats the user's type into a {@link TableRow} to be written to an error collector. */\n+     public Write<T> withFailsafeFormatFunction(SerializableFunction<T, TableRow> formatFunction) {", "originalCommit": "93a95c064c4dfc156886ed90465d97318d44e6a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcwMTgwNg==", "url": "https://github.com/apache/beam/pull/13055#discussion_r502701806", "bodyText": "Currently the design is for the ErrorContainer to return TableRow's (or BigQueryError).  My worry is that it wouldn't be backwards compatible to make this generic, though I agree it would be more valuable.\nI think this question is important and is my only big open question around this design", "author": "dhercher", "createdAt": "2020-10-09T22:45:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MDg1MA==", "url": "https://github.com/apache/beam/pull/13055#discussion_r503560850", "bodyText": "I've been looking into this feature and it will require a number of additional changes.  IMO it makes more sense to merge this first feature, then add a second issue / PR for the dynamic typing as it appears to be a relatively complex addon", "author": "dhercher", "createdAt": "2020-10-12T22:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNg==", "url": "https://github.com/apache/beam/pull/13055#discussion_r502683616", "bodyText": "yum yum? : ) remove?", "author": "pabloem", "createdAt": "2020-10-09T21:43:22Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/RowWriterFactory.java", "diffHunk": "@@ -40,23 +40,35 @@ private RowWriterFactory() {}\n       String tempFilePrefix, DestinationT destination) throws Exception;\n \n   static <ElementT, DestinationT> RowWriterFactory<ElementT, DestinationT> tableRows(\n-      SerializableFunction<ElementT, TableRow> toRow) {\n-    return new TableRowWriterFactory<ElementT, DestinationT>(toRow);\n+      SerializableFunction<ElementT, TableRow> toRow,\n+      SerializableFunction<ElementT, TableRow> toFailsafeRow) {\n+    return new TableRowWriterFactory<ElementT, DestinationT>(toRow, toFailsafeRow);\n   }\n \n   static final class TableRowWriterFactory<ElementT, DestinationT>\n       extends RowWriterFactory<ElementT, DestinationT> {\n \n     private final SerializableFunction<ElementT, TableRow> toRow;\n+    private final SerializableFunction<ElementT, TableRow> toFailsafeRow;\n \n-    private TableRowWriterFactory(SerializableFunction<ElementT, TableRow> toRow) {\n+    private TableRowWriterFactory(\n+        SerializableFunction<ElementT, TableRow> toRow,\n+        SerializableFunction<ElementT, TableRow> toFailsafeRow) {\n       this.toRow = toRow;\n+      this.toFailsafeRow = toFailsafeRow; // TODO yummy", "originalCommit": "93a95c064c4dfc156886ed90465d97318d44e6a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyMDA0NQ==", "url": "https://github.com/apache/beam/pull/13055#discussion_r502720045", "bodyText": "haha, removed", "author": "dhercher", "createdAt": "2020-10-10T00:19:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNg=="}], "type": "inlineReview"}, {"oid": "93fe82d61908eb7fc38398155e5b86398947fc35", "url": "https://github.com/apache/beam/commit/93fe82d61908eb7fc38398155e5b86398947fc35", "message": "clean extra PrepareWrite", "committedDate": "2020-10-09T23:18:20Z", "type": "commit"}, {"oid": "a480a0f863ced2483f5c25cf1555930e2505c21e", "url": "https://github.com/apache/beam/commit/a480a0f863ced2483f5c25cf1555930e2505c21e", "message": "linting cleanup", "committedDate": "2020-10-09T23:29:07Z", "type": "commit"}, {"oid": "1729945c2e0f395c586a0a40314dc83878a991b0", "url": "https://github.com/apache/beam/commit/1729945c2e0f395c586a0a40314dc83878a991b0", "message": "object already defined", "committedDate": "2020-10-09T23:32:37Z", "type": "commit"}, {"oid": "2a911c9fdefedc33b8c5e160898b350e7dfd7116", "url": "https://github.com/apache/beam/commit/2a911c9fdefedc33b8c5e160898b350e7dfd7116", "message": "linting", "committedDate": "2020-10-09T23:33:57Z", "type": "commit"}, {"oid": "94bd4b4c724c0ebcf7af0ee300ed495e89d4f0f4", "url": "https://github.com/apache/beam/commit/94bd4b4c724c0ebcf7af0ee300ed495e89d4f0f4", "message": "fixing testing to match new falsafe logic", "committedDate": "2020-10-09T23:46:27Z", "type": "commit"}, {"oid": "a7d5b4cc9252feb5bc5e1faf9ecc7d3bb4e3012e", "url": "https://github.com/apache/beam/commit/a7d5b4cc9252feb5bc5e1faf9ecc7d3bb4e3012e", "message": "cleaninng tests to use failsafe logic", "committedDate": "2020-10-10T00:17:06Z", "type": "commit"}, {"oid": "602aa1c23eb0dd13cf91ab6617eb42ae536189ff", "url": "https://github.com/apache/beam/commit/602aa1c23eb0dd13cf91ab6617eb42ae536189ff", "message": "remove todo", "committedDate": "2020-10-10T00:18:54Z", "type": "commit"}, {"oid": "1e78d0d07bab6c0f973c744adbae20a4338ae687", "url": "https://github.com/apache/beam/commit/1e78d0d07bab6c0f973c744adbae20a4338ae687", "message": "use proper Failsafe value object", "committedDate": "2020-10-12T01:40:57Z", "type": "commit"}, {"oid": "c826345cdd25d38594dda2187972465de4c70ceb", "url": "https://github.com/apache/beam/commit/c826345cdd25d38594dda2187972465de4c70ceb", "message": "lintng", "committedDate": "2020-10-12T01:42:13Z", "type": "commit"}, {"oid": "61ab71e5b46222a0d9e9adbfd143e958a5396fb2", "url": "https://github.com/apache/beam/commit/61ab71e5b46222a0d9e9adbfd143e958a5396fb2", "message": "format FailsafeValueInSingleWindow", "committedDate": "2020-10-12T01:54:11Z", "type": "commit"}, {"oid": "4b78c646024263ed40805a1613c561403ff5abb1", "url": "https://github.com/apache/beam/commit/4b78c646024263ed40805a1613c561403ff5abb1", "message": "fix test to validate on correct expected values", "committedDate": "2020-10-12T02:07:58Z", "type": "commit"}, {"oid": "c40237b506659c55437692d3c8475ef908364ab5", "url": "https://github.com/apache/beam/commit/c40237b506659c55437692d3c8475ef908364ab5", "message": "implement coder logic for failsafe element", "committedDate": "2020-10-12T19:40:39Z", "type": "commit"}, {"oid": "73dbf5fcc57bf0b8eafc8e7d35b4c92850bbb511", "url": "https://github.com/apache/beam/commit/73dbf5fcc57bf0b8eafc8e7d35b4c92850bbb511", "message": "clean up todo", "committedDate": "2020-10-12T19:41:12Z", "type": "commit"}, {"oid": "450fbc45fb8c73a02f01d169f1a5a3c5e67c524e", "url": "https://github.com/apache/beam/commit/450fbc45fb8c73a02f01d169f1a5a3c5e67c524e", "message": "cleanup todo", "committedDate": "2020-10-12T19:42:42Z", "type": "commit"}, {"oid": "9d7bfe4a0921b24406539993071e33dd55b30b89", "url": "https://github.com/apache/beam/commit/9d7bfe4a0921b24406539993071e33dd55b30b89", "message": "spotless", "committedDate": "2020-10-12T22:12:54Z", "type": "commit"}, {"oid": "f2c861dedf7c0e7187e9766efa193c43e4db6108", "url": "https://github.com/apache/beam/commit/f2c861dedf7c0e7187e9766efa193c43e4db6108", "message": "spotless", "committedDate": "2020-10-12T22:52:33Z", "type": "commit"}, {"oid": "0adba74435c2d5952d4068312de1b7249ede49c3", "url": "https://github.com/apache/beam/commit/0adba74435c2d5952d4068312de1b7249ede49c3", "message": "adding failsafevalueinsinglewindow testing", "committedDate": "2020-10-12T23:02:06Z", "type": "commit"}, {"oid": "5a38d25dea4218e7ca37a8ea553e1da4a9c272dc", "url": "https://github.com/apache/beam/commit/5a38d25dea4218e7ca37a8ea553e1da4a9c272dc", "message": "adding tests for failsafe", "committedDate": "2020-10-13T00:11:39Z", "type": "commit"}, {"oid": "f931fd65f154c55bc91afbf66ed6aabeba8de340", "url": "https://github.com/apache/beam/commit/f931fd65f154c55bc91afbf66ed6aabeba8de340", "message": "removing final todo, will add feature in separate PR/issue", "committedDate": "2020-10-13T00:55:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NDExOA==", "url": "https://github.com/apache/beam/pull/13055#discussion_r506654118", "bodyText": "Just one change request:\n\nPerhaps can we rename this to something that doesn't assume this fail-safe keyword is known by users? Perhaps withFailedInsertFormatFunction?\nAnd can you add some detail to the Javadoc so users will understand what this does?\n\nThanks", "author": "pabloem", "createdAt": "2020-10-16T18:31:17Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryIO.java", "diffHunk": "@@ -2002,6 +2007,11 @@ static String getExtractDestinationUri(String extractDestinationDir) {\n       return toBuilder().setFormatFunction(formatFunction).build();\n     }\n \n+    /** Formats the user's type into a {@link TableRow} to be written to an error collector. */\n+    public Write<T> withFailsafeFormatFunction(SerializableFunction<T, TableRow> formatFunction) {", "originalCommit": "f931fd65f154c55bc91afbf66ed6aabeba8de340", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNTYxMw==", "url": "https://github.com/apache/beam/pull/13055#discussion_r506715613", "bodyText": "Sounds good, renaming it to\nwithFormatRecordOnFailureFunction\nAnd adding more in the Javadoc", "author": "dhercher", "createdAt": "2020-10-16T20:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NDExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0NTM4Mg==", "url": "https://github.com/apache/beam/pull/13055#discussion_r506745382", "bodyText": "Done", "author": "dhercher", "createdAt": "2020-10-16T22:20:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NDExOA=="}], "type": "inlineReview"}, {"oid": "6eb5bcc1872e774a669ebfaec542ecd802118556", "url": "https://github.com/apache/beam/commit/6eb5bcc1872e774a669ebfaec542ecd802118556", "message": "change name to FormatRecordOnFailureFunction", "committedDate": "2020-10-16T21:15:13Z", "type": "commit"}, {"oid": "ebd93a2c8c302189b9f21c91a2c61a71fcafb1ad", "url": "https://github.com/apache/beam/commit/ebd93a2c8c302189b9f21c91a2c61a71fcafb1ad", "message": "linting", "committedDate": "2020-10-16T21:22:55Z", "type": "commit"}, {"oid": "eae31de6656a3a7f787d4b41d4a598017b319d55", "url": "https://github.com/apache/beam/commit/eae31de6656a3a7f787d4b41d4a598017b319d55", "message": "linting", "committedDate": "2020-10-16T21:28:35Z", "type": "commit"}]}