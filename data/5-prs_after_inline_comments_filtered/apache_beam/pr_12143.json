{"pr_number": 12143, "pr_title": "[BEAM-10291] Adding full thread dump upon lull detection for Dataflow\u2026", "pr_createdAt": "2020-07-01T00:42:55Z", "pr_url": "https://github.com/apache/beam/pull/12143", "timeline": [{"oid": "9b001d3efb4620e181a1078b457c4017ce32d7b4", "url": "https://github.com/apache/beam/commit/9b001d3efb4620e181a1078b457c4017ce32d7b4", "message": "[BEAM-10291] Adding full thread dump upon lull detection for Dataflow Java worker", "committedDate": "2020-07-01T00:40:35Z", "type": "commit"}, {"oid": "42e0d7a202689c3b306b7aa6dcb498abd1b1790d", "url": "https://github.com/apache/beam/commit/42e0d7a202689c3b306b7aa6dcb498abd1b1790d", "message": "lint", "committedDate": "2020-07-01T15:49:37Z", "type": "commit"}, {"oid": "ca7221e7be61a86e6070837db9ba3afdcbce2ca9", "url": "https://github.com/apache/beam/commit/ca7221e7be61a86e6070837db9ba3afdcbce2ca9", "message": "added more tests", "committedDate": "2020-07-01T17:25:56Z", "type": "commit"}, {"oid": "64875cc0ac6dfeaba752ed8fdf6200e9e3ad69ac", "url": "https://github.com/apache/beam/commit/64875cc0ac6dfeaba752ed8fdf6200e9e3ad69ac", "message": "lint", "committedDate": "2020-07-01T17:33:51Z", "type": "commit"}, {"oid": "f5f1eb236a27d4c76feb59078240b99547b65e3e", "url": "https://github.com/apache/beam/commit/f5f1eb236a27d4c76feb59078240b99547b65e3e", "message": "lint", "committedDate": "2020-07-01T17:35:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3ODk5OA==", "url": "https://github.com/apache/beam/pull/12143#discussion_r451078998", "bodyText": "Instead, add Clock to the constructor above (lines 188-200), make the clock member final, and pass Clock.SYSTEM in the constructor without it?", "author": "pabloem", "createdAt": "2020-07-07T19:00:46Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/DataflowOperationContext.java", "diffHunk": "@@ -194,6 +200,18 @@ public DataflowExecutionState(\n       this.metricsContainer = metricsContainer;\n     }\n \n+    public DataflowExecutionState(\n+        NameContext nameContext,\n+        String stateName,\n+        @Nullable String requestingStepName,\n+        @Nullable Integer inputIndex,\n+        @Nullable MetricsContainer metricsContainer,\n+        ProfileScope profileScope,\n+        Clock clock) {\n+      this(nameContext, stateName, requestingStepName, inputIndex, metricsContainer, profileScope);\n+      this.clock = clock;\n+    }", "originalCommit": "f5f1eb236a27d4c76feb59078240b99547b65e3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MjQ2OA==", "url": "https://github.com/apache/beam/pull/12143#discussion_r451082468", "bodyText": "This means that a full thread dump will happen the very first time a lull is logged. Lulls are not that unusual, right? We want full thread dumps for pipelines that are truly stuck, not for pipelines that are experiencing a slow stage.\nPerhaps we should use the millis argument from reportLull, and only report when millis passes 20 minutes?", "author": "pabloem", "createdAt": "2020-07-07T19:07:35Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/DataflowOperationContext.java", "diffHunk": "@@ -264,7 +276,49 @@ public void reportLull(Thread trackedThread, long millis) {\n       logRecord.setLoggerName(DataflowOperationContext.LOG.getName());\n \n       // Publish directly in the context of this specific ExecutionState.\n-      DataflowWorkerLoggingInitializer.getLoggingHandler().publish(this, logRecord);\n+      DataflowWorkerLoggingHandler dataflowLoggingHandler =\n+          DataflowWorkerLoggingInitializer.getLoggingHandler();\n+      dataflowLoggingHandler.publish(this, logRecord);\n+\n+      if (shouldLogFullThreadDump()) {\n+        Map<Thread, StackTraceElement[]> threadSet = Thread.getAllStackTraces();\n+        for (Map.Entry<Thread, StackTraceElement[]> entry : threadSet.entrySet()) {\n+          Thread thread = entry.getKey();\n+          StackTraceElement[] stackTrace = entry.getValue();\n+          StringBuilder message = new StringBuilder();\n+          message.append(thread.toString()).append(\":\\n\");\n+          message.append(getStackTraceForLullMessage(stackTrace));\n+          logRecord = new LogRecord(Level.INFO, message.toString());\n+          logRecord.setLoggerName(DataflowOperationContext.LOG.getName());\n+          dataflowLoggingHandler.publish(this, logRecord);\n+        }\n+      }\n+    }\n+\n+    // A full thread dump is performed at most once every 20 minutes.\n+    private static final long LOG_LULL_FULL_THREAD_DUMP_MS = 20 * 60 * 1000;\n+\n+    // Last time when a full thread dump was performed.\n+    private long lastFullThreadDumpMillis = 0;\n+\n+    private boolean shouldLogFullThreadDump() {", "originalCommit": "f5f1eb236a27d4c76feb59078240b99547b65e3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY0NDkzMg==", "url": "https://github.com/apache/beam/pull/12143#discussion_r451644932", "bodyText": "Thanks! Makes sense. Done. PTAL.", "author": "davidyan74", "createdAt": "2020-07-08T15:45:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MjQ2OA=="}], "type": "inlineReview"}, {"oid": "4f630afc5de93f6e141aa1be77b554aba4ba63e3", "url": "https://github.com/apache/beam/commit/4f630afc5de93f6e141aa1be77b554aba4ba63e3", "message": "Only perform full thread dump when the lull duration is more than 20 minutes.", "committedDate": "2020-07-08T15:44:50Z", "type": "commit"}, {"oid": "43cc8ecb8abd12a369dc586fe6dbf70f9b1cb99e", "url": "https://github.com/apache/beam/commit/43cc8ecb8abd12a369dc586fe6dbf70f9b1cb99e", "message": "Minor constructor change", "committedDate": "2020-07-08T16:53:44Z", "type": "commit"}, {"oid": "a4b5fa2d8bd983276483b9b36d4063930f533af7", "url": "https://github.com/apache/beam/commit/a4b5fa2d8bd983276483b9b36d4063930f533af7", "message": "spotless", "committedDate": "2020-07-08T16:56:41Z", "type": "commit"}]}