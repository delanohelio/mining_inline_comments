{"pr_number": 12764, "pr_title": "[BEAM-10009] Add beam:logical_type:micros_instant:v1", "pr_createdAt": "2020-09-02T23:12:27Z", "pr_url": "https://github.com/apache/beam/pull/12764", "timeline": [{"oid": "715b50a0b6f89a4636c92dcfb22071aace8694a9", "url": "https://github.com/apache/beam/commit/715b50a0b6f89a4636c92dcfb22071aace8694a9", "message": "Add MicrosInstant.java", "committedDate": "2020-09-02T22:47:28Z", "type": "commit"}, {"oid": "cf50e19967ad9d3794db3643de3643ac3f26c66e", "url": "https://github.com/apache/beam/commit/cf50e19967ad9d3794db3643de3643ac3f26c66e", "message": "Java: add support for micros_instant in portability", "committedDate": "2020-09-02T22:47:28Z", "type": "commit"}, {"oid": "48922ea618afc4780b085f657439ece2ebb08e7b", "url": "https://github.com/apache/beam/commit/48922ea618afc4780b085f657439ece2ebb08e7b", "message": "LogicalType support in python schema translation and RowCoder", "committedDate": "2020-09-02T23:03:26Z", "type": "commit"}, {"oid": "d988d37449a097cadcc2197fe96e569431070c41", "url": "https://github.com/apache/beam/commit/d988d37449a097cadcc2197fe96e569431070c41", "message": "Add support for micros_instant in Python", "committedDate": "2020-09-02T23:03:26Z", "type": "commit"}, {"oid": "b348f0147310c51d3fa4d66cc878cd56b01e812b", "url": "https://github.com/apache/beam/commit/b348f0147310c51d3fa4d66cc878cd56b01e812b", "message": "Add integration test for micros_instant", "committedDate": "2020-09-02T23:03:26Z", "type": "commit"}, {"oid": "422eb0f6ed41f46d1e6192b9b3b85ace9593b67c", "url": "https://github.com/apache/beam/commit/422eb0f6ed41f46d1e6192b9b3b85ace9593b67c", "message": "CommonCoderTest.java: Add support for parsing logical types", "committedDate": "2020-09-02T23:03:26Z", "type": "commit"}, {"oid": "25618a6fc13673dfe80d680a97521c80de5b212e", "url": "https://github.com/apache/beam/commit/25618a6fc13673dfe80d680a97521c80de5b212e", "message": "standard_coders_test.py: add support for parsing rows and logical types", "committedDate": "2020-09-02T23:03:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NzM5MA==", "url": "https://github.com/apache/beam/pull/12764#discussion_r483157390", "bodyText": "I see other logical types handle null input in this function and toInputType() as well. Should we also add it here?", "author": "robinyqiu", "createdAt": "2020-09-03T17:56:38Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/logicaltypes/MicrosInstant.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.schemas.logicaltypes;\n+\n+import java.time.Instant;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.beam.sdk.values.Row;\n+\n+/**\n+ * A timestamp represented as microseconds since the epoch.\n+ *\n+ * <p>WARNING: This logical type exists solely for interoperability with other type systems such as\n+ * SQL and other Beam SDKs. It should never be used in a native Java context where the {@code\n+ * java.time.Instant} instances it describes may have higher than microsecond precision. Ignoring\n+ * this will likely result in an {@code AssertionError} at pipeline execution time.\n+ *\n+ * <p>For a more faithful logical type to use with {@code java.time.Instant}, see {@link\n+ * NanosInstant}.\n+ */\n+public class MicrosInstant implements Schema.LogicalType<Instant, Row> {\n+  public static final String IDENTIFIER = \"beam:logical_type:micros_instant:v1\";\n+  private final Schema schema;\n+\n+  public MicrosInstant() {\n+    this.schema = Schema.builder().addInt64Field(\"seconds\").addInt32Field(\"micros\").build();\n+  }\n+\n+  @Override\n+  public Row toBaseType(Instant input) {", "originalCommit": "25618a6fc13673dfe80d680a97521c80de5b212e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxMzQ1MA==", "url": "https://github.com/apache/beam/pull/12764#discussion_r483313450", "bodyText": "That's a good question.. I don't think we have an answer for it documented anywhere. I think we should probably handle null checking outside of toBaseType and toInputType, so that we only do it when the type is marked nullable.", "author": "TheNeuralBit", "createdAt": "2020-09-03T23:58:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1Nzg3OQ==", "url": "https://github.com/apache/beam/pull/12764#discussion_r483157879", "bodyText": "I think this can be a constant. We don't need to initialize it in constructor.", "author": "robinyqiu", "createdAt": "2020-09-03T17:57:31Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/logicaltypes/MicrosInstant.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.schemas.logicaltypes;\n+\n+import java.time.Instant;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.beam.sdk.values.Row;\n+\n+/**\n+ * A timestamp represented as microseconds since the epoch.\n+ *\n+ * <p>WARNING: This logical type exists solely for interoperability with other type systems such as\n+ * SQL and other Beam SDKs. It should never be used in a native Java context where the {@code\n+ * java.time.Instant} instances it describes may have higher than microsecond precision. Ignoring\n+ * this will likely result in an {@code AssertionError} at pipeline execution time.\n+ *\n+ * <p>For a more faithful logical type to use with {@code java.time.Instant}, see {@link\n+ * NanosInstant}.\n+ */\n+public class MicrosInstant implements Schema.LogicalType<Instant, Row> {\n+  public static final String IDENTIFIER = \"beam:logical_type:micros_instant:v1\";\n+  private final Schema schema;", "originalCommit": "25618a6fc13673dfe80d680a97521c80de5b212e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcwOTE2NQ==", "url": "https://github.com/apache/beam/pull/12764#discussion_r486709165", "bodyText": "There's an issue with Dataflow deserializing the logical type if the Schema is static, see BEAM-9113. There should probably be a follow-up to fix that though.. I'll file a jira and add a TODO here and in NanosInstant.", "author": "TheNeuralBit", "createdAt": "2020-09-11T00:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1Nzg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0ODc3Nw==", "url": "https://github.com/apache/beam/pull/12764#discussion_r487248777", "bodyText": "I see. Thanks!", "author": "robinyqiu", "createdAt": "2020-09-11T19:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1Nzg3OQ=="}], "type": "inlineReview"}, {"oid": "ba055370686bb34375a6f23c18cdcd5dd2ab26d0", "url": "https://github.com/apache/beam/commit/ba055370686bb34375a6f23c18cdcd5dd2ab26d0", "message": "Add BEAM-10878 TODOs", "committedDate": "2020-09-11T00:56:23Z", "type": "commit"}, {"oid": "fcd88acb10eea9c37089e79d001a6bf925179e6a", "url": "https://github.com/apache/beam/commit/fcd88acb10eea9c37089e79d001a6bf925179e6a", "message": "fix typos", "committedDate": "2020-09-11T00:56:33Z", "type": "commit"}]}