{"pr_number": 11314, "pr_title": "[BEAM-9562] Send Timers over Data Channel as Elements", "pr_createdAt": "2020-04-04T06:02:23Z", "pr_url": "https://github.com/apache/beam/pull/11314", "timeline": [{"oid": "5c1db9bf0737d3d6b528ca7f69d738b32dd6b3d3", "url": "https://github.com/apache/beam/commit/5c1db9bf0737d3d6b528ca7f69d738b32dd6b3d3", "message": "Python sdk/runner harness processes timer over data_channel", "committedDate": "2020-04-08T19:37:14Z", "type": "forcePushed"}, {"oid": "e046783b3c0f91ff7295f5fac7098d87404fc9e2", "url": "https://github.com/apache/beam/commit/e046783b3c0f91ff7295f5fac7098d87404fc9e2", "message": "Python sdk/runner harness processes timer over data_channel", "committedDate": "2020-04-08T20:13:04Z", "type": "forcePushed"}, {"oid": "3ff8c3eb28944cbe7c757fdbae49947b57c3774f", "url": "https://github.com/apache/beam/commit/3ff8c3eb28944cbe7c757fdbae49947b57c3774f", "message": "Python sdk/runner harness processes timer over data_channel", "committedDate": "2020-04-08T20:18:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMzkxNg==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405823916", "bodyText": "This test is testStateCallsFailIfNoStateApiServiceDescriptorSpecified. Is there value in a testTimerCallsFailIfNoTimerApiServiceDescriptorSpecified to exercise the new \"Timers are unsupported because ...\" exception?", "author": "TheNeuralBit", "createdAt": "2020-04-08T21:24:14Z", "path": "sdks/java/harness/src/test/java/org/apache/beam/fn/harness/control/ProcessBundleHandlerTest.java", "diffHunk": "@@ -914,6 +923,7 @@ public Object createRunnerForPTransform(\n                       PipelineOptions pipelineOptions,\n                       BeamFnDataClient beamFnDataClient,\n                       BeamFnStateClient beamFnStateClient,\n+                      BeamFnTimerClient beamFnTimerClient,\n                       String pTransformId,\n                       PTransform pTransform,\n                       Supplier<String> processBundleInstructionId,", "originalCommit": "a2a716455edb8d1a80ae4d302a79b19ef6053484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MzI2NA==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405873264", "bodyText": "for completeness yes", "author": "lukecwik", "createdAt": "2020-04-08T23:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMzkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMTkyMA==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405831920", "bodyText": "Just curious: did we not have this check before, and just failed when attempting to cast to KVCoder  (in the removed block from translate above)?", "author": "TheNeuralBit", "createdAt": "2020-04-08T21:41:29Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/ParDoTranslation.java", "diffHunk": "@@ -257,6 +230,19 @@ public static ParDoPayload translateParDo(\n       restrictionCoderId = \"\";\n     }\n \n+    Coder<BoundedWindow> windowCoder =\n+        (Coder<BoundedWindow>) mainInput.getWindowingStrategy().getWindowFn().windowCoder();\n+    Coder<?> keyCoder;\n+    if (signature.usesState() || signature.usesTimers()) {\n+      checkArgument(\n+          mainInput.getCoder() instanceof KvCoder,\n+          \"DoFn's that use state or timers must have an input PCollection with a KvCoder but received %s\",\n+          mainInput.getCoder());", "originalCommit": "a2a716455edb8d1a80ae4d302a79b19ef6053484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MDUzOQ==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405870539", "bodyText": "It was being covered by validation in DoFnSignatures but it is being repeated here for defense in depth reasons.", "author": "lukecwik", "createdAt": "2020-04-08T23:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMTkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NTY5Ng==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405855696", "bodyText": "Isn't the timer API service descriptor different from the data API service descriptor? Does that need to be plumbed through SdkHarnessRegistry and used here instead of the data API descriptor? (same question below and in streaming worker)", "author": "TheNeuralBit", "createdAt": "2020-04-08T22:40:57Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/BatchDataflowWorker.java", "diffHunk": "@@ -238,9 +238,14 @@ protected BatchDataflowWorker(\n         sdkFusedStage =\n             pipeline == null\n                 ? RegisterNodeFunction.withoutPipeline(\n-                    idGenerator, sdkHarnessRegistry.beamFnStateApiServiceDescriptor())\n+                    idGenerator,\n+                    sdkHarnessRegistry.beamFnStateApiServiceDescriptor(),\n+                    sdkHarnessRegistry.beamFnDataApiServiceDescriptor())", "originalCommit": "9cae48c6c036f45274beb60b10a6a7850941dc6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MDg4Mg==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405870882", "bodyText": "They both use the Data API so no. All were saying here is that we will re-use the same gRPC channel for both timers and data.", "author": "lukecwik", "createdAt": "2020-04-08T23:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NTY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MDIxNQ==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405890215", "bodyText": "I see. So we only have a separate timer_api_service_descriptor in the protos so that a runner has the option to make it separate, but it doesn't need to be separate?", "author": "TheNeuralBit", "createdAt": "2020-04-09T00:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NTY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwNzUwNA==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405907504", "bodyText": "That is correct.", "author": "lukecwik", "createdAt": "2020-04-09T01:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NTY5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MjYzNQ==", "url": "https://github.com/apache/beam/pull/11314#discussion_r405892635", "bodyText": "timerApiServiceDescriptor isn't used? Should it be stored and written to the ProcessBundleDescrioptor?", "author": "TheNeuralBit", "createdAt": "2020-04-09T00:38:41Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/graph/RegisterNodeFunction.java", "diffHunk": "@@ -134,14 +136,18 @@ public static RegisterNodeFunction forPipeline(\n    * harnesses, then this method should be removed.\n    */\n   public static RegisterNodeFunction withoutPipeline(\n-      IdGenerator idGenerator, Endpoints.ApiServiceDescriptor stateApiServiceDescriptor) {\n-    return new RegisterNodeFunction(null, idGenerator, stateApiServiceDescriptor);\n+      IdGenerator idGenerator,\n+      Endpoints.ApiServiceDescriptor stateApiServiceDescriptor,\n+      Endpoints.ApiServiceDescriptor timerApiServiceDescriptor) {\n+    return new RegisterNodeFunction(\n+        null, idGenerator, stateApiServiceDescriptor, timerApiServiceDescriptor);\n   }\n \n   private RegisterNodeFunction(\n       @Nullable RunnerApi.Pipeline pipeline,\n       IdGenerator idGenerator,\n-      Endpoints.ApiServiceDescriptor stateApiServiceDescriptor) {\n+      Endpoints.ApiServiceDescriptor stateApiServiceDescriptor,\n+      Endpoints.ApiServiceDescriptor timerApiServiceDescriptor) {", "originalCommit": "9cae48c6c036f45274beb60b10a6a7850941dc6c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c1e830b25c27a3b6f58eafe3ded48e7386108a2", "url": "https://github.com/apache/beam/commit/0c1e830b25c27a3b6f58eafe3ded48e7386108a2", "message": "[BEAM-9562, BEAM-6274] Fix-up timers to use Elements.Timer proto in data channel in Beam Java and Python", "committedDate": "2020-04-09T22:43:19Z", "type": "forcePushed"}, {"oid": "8db19a4645b8588ce9e046637b7619815169bdb1", "url": "https://github.com/apache/beam/commit/8db19a4645b8588ce9e046637b7619815169bdb1", "message": "[BEAM-9562, BEAM-6274] Fix-up timers to use Elements.Timer proto in data channel in Beam Java and Python", "committedDate": "2020-04-09T22:49:56Z", "type": "commit"}, {"oid": "8db19a4645b8588ce9e046637b7619815169bdb1", "url": "https://github.com/apache/beam/commit/8db19a4645b8588ce9e046637b7619815169bdb1", "message": "[BEAM-9562, BEAM-6274] Fix-up timers to use Elements.Timer proto in data channel in Beam Java and Python", "committedDate": "2020-04-09T22:49:56Z", "type": "forcePushed"}]}