{"pr_number": 13221, "pr_title": "[BEAM-11144] Fix trigger prefetching so that the correct trigger index", "pr_createdAt": "2020-10-29T15:05:06Z", "pr_url": "https://github.com/apache/beam/pull/13221", "timeline": [{"oid": "33d8068cb773947bb4ace84e853d2aa2ead70904", "url": "https://github.com/apache/beam/commit/33d8068cb773947bb4ace84e853d2aa2ead70904", "message": "[BEAM-11144] Fix trigger prefetching so that the correct trigger index\nis used for the state namespace.\n\nPreviously prefetching was fetching non-existent state, possibly adding\nunnecessary fetches as well as neglecting to prefetch actual state used.\n\nAnother way to accomplish this would be to change the TriggerStateMachine\nprefetch methods to take a TriggerContext instead of a raw state accessor.\nThis would allow for TriggerStateMachine to get the correct state for\nsubtriggers.  That seems more inline with how the nonprefetch methods work\nhowever that is a public interface change.", "committedDate": "2020-10-29T15:11:56Z", "type": "forcePushed"}, {"oid": "8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "url": "https://github.com/apache/beam/commit/8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "message": "[BEAM-11144] Fix trigger prefetching so that the correct trigger index\nis used for the state namespace.\n\nPreviously prefetching was fetching non-existent state, possibly adding\nunnecessary fetches as well as neglecting to prefetch actual state used.\n\nThe prefetch methods are made abstract on TriggerStateMachine and changed\nto take a PrefetchContext which has enough information to fetch the correct\nstate namespaces for subtriggers.", "committedDate": "2020-11-03T11:09:25Z", "type": "commit"}, {"oid": "8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "url": "https://github.com/apache/beam/commit/8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "message": "[BEAM-11144] Fix trigger prefetching so that the correct trigger index\nis used for the state namespace.\n\nPreviously prefetching was fetching non-existent state, possibly adding\nunnecessary fetches as well as neglecting to prefetch actual state used.\n\nThe prefetch methods are made abstract on TriggerStateMachine and changed\nto take a PrefetchContext which has enough information to fetch the correct\nstate namespaces for subtriggers.", "committedDate": "2020-11-03T11:09:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NDg5Mg==", "url": "https://github.com/apache/beam/pull/13221#discussion_r516894892", "bodyText": "This was one of the cases where I was thinking it only made sense to prefetch the active subtrigger. Of course, I was missing the whole point that you can't know which one that is until you do a fetch. So maybe my whole idea was foolish.", "author": "kennknowles", "createdAt": "2020-11-03T19:08:54Z", "path": "runners/core-java/src/main/java/org/apache/beam/runners/core/triggers/AfterEachStateMachine.java", "diffHunk": "@@ -48,6 +48,13 @@ private AfterEachStateMachine(List<TriggerStateMachine> subTriggers) {\n     checkArgument(subTriggers.size() > 1);\n   }\n \n+  @Override\n+  public void prefetchOnElement(PrefetchContext c) {\n+    for (ExecutableTriggerStateMachine subTrigger : c.trigger().subTriggers()) {", "originalCommit": "8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxMzU0OA==", "url": "https://github.com/apache/beam/pull/13221#discussion_r516913548", "bodyText": "Yeah when I embarked on this I was thinking also it might be possible to do better but it didn't pan out.\nOne idea I had was adding a isCached() method on the state objects that would indicate if the value was local (cached, in-memory, etc) and didn't require a fetch.  In such cases we could trim the trigger state to prefetch by looking at the closed triggers.  However if everything we actually needed was local, we've only called readLater on something we never actually read and thus never issue a fetch anyway.  And if we do have to issue a fetch for anything, fetching an additional unused tag to it is likely not much more overhead.", "author": "scwhittle", "createdAt": "2020-11-03T19:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NDg5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NjgxMw==", "url": "https://github.com/apache/beam/pull/13221#discussion_r516896813", "bodyText": "This was the other one. Same problem with my thinking.", "author": "kennknowles", "createdAt": "2020-11-03T19:12:07Z", "path": "runners/core-java/src/main/java/org/apache/beam/runners/core/triggers/AfterWatermarkStateMachine.java", "diffHunk": "@@ -91,6 +91,13 @@ public AfterWatermarkEarlyAndLate withLateFirings(TriggerStateMachine lateTrigge\n       return new AfterWatermarkEarlyAndLate(earlyTrigger, lateTrigger);\n     }\n \n+    @Override\n+    public void prefetchOnElement(PrefetchContext c) {\n+      for (ExecutableTriggerStateMachine subTrigger : c.trigger().subTriggers()) {", "originalCommit": "8e093b5f5203caa1b754ec19e5341fb3a13d2cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}