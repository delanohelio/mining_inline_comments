{"pr_number": 11670, "pr_title": "[BEAM-9001, BEAM-6327] Ensure that all transforms (except for required runner implemented transforms) have an environment id.", "pr_createdAt": "2020-05-11T22:54:08Z", "pr_url": "https://github.com/apache/beam/pull/11670", "timeline": [{"oid": "3fbbb9e99e17cb11aeeaf77956aaac07fee17fdf", "url": "https://github.com/apache/beam/commit/3fbbb9e99e17cb11aeeaf77956aaac07fee17fdf", "message": "[BEAM-9001, BEAM-6327] Ensure that all transforms (except for required runner implemented transforms) have an environment id.", "committedDate": "2020-05-11T22:53:19Z", "type": "commit"}, {"oid": "58a470914dd88617962b65138d6d88fa897075bf", "url": "https://github.com/apache/beam/commit/58a470914dd88617962b65138d6d88fa897075bf", "message": "fixup! Fix native transform expander to not reinsert deleted transforms.", "committedDate": "2020-05-12T04:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0ODk1OQ==", "url": "https://github.com/apache/beam/pull/11670#discussion_r423948959", "bodyText": "What does \"Trivial\" mean here? Are there \"Native\" transforms that are not \"Trivial\"?", "author": "ibzib", "createdAt": "2020-05-12T18:34:21Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/graph/TrivialNativeTransformExpander.java", "diffHunk": "@@ -23,47 +23,51 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO(BEAM-6327): Remove the need for this.\n-\n-/** PipelineTrimmer removes subcomponents of native transforms that shouldn't be fused. */\n-public class PipelineTrimmer {\n-  private static final Logger LOG = LoggerFactory.getLogger(PipelineTrimmer.class);\n+/**\n+ * TrivialNativeTransformExpander is used to replace transforms with known URNs with their native", "originalCommit": "58a470914dd88617962b65138d6d88fa897075bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxNjE0MQ==", "url": "https://github.com/apache/beam/pull/11670#discussion_r424016141", "bodyText": "Not currently but the \"trivial\" is to imply that you don't need anything other then payload on the transform itself and that you don't need to inspect the transform or any of its children when constructing the native transform.", "author": "lukecwik", "createdAt": "2020-05-12T20:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0ODk1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxNjQ0Nw==", "url": "https://github.com/apache/beam/pull/11670#discussion_r424016447", "bodyText": "The \"trivial\" is meant to apply to the expander part.", "author": "lukecwik", "createdAt": "2020-05-12T20:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0ODk1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1OTY5MA==", "url": "https://github.com/apache/beam/pull/11670#discussion_r424559690", "bodyText": "Probably we should expand the comment here to describe why this is needed.", "author": "chamikaramj", "createdAt": "2020-05-13T16:09:58Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/graph/TrivialNativeTransformExpander.java", "diffHunk": "@@ -23,47 +23,51 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO(BEAM-6327): Remove the need for this.\n-\n-/** PipelineTrimmer removes subcomponents of native transforms that shouldn't be fused. */\n-public class PipelineTrimmer {\n-  private static final Logger LOG = LoggerFactory.getLogger(PipelineTrimmer.class);\n+/**\n+ * TrivialNativeTransformExpander is used to replace transforms with known URNs with their native\n+ * equivalent.\n+ */\n+public class TrivialNativeTransformExpander {\n+  private static final Logger LOG = LoggerFactory.getLogger(TrivialNativeTransformExpander.class);\n \n   /**\n-   * Remove subcomponents of native transforms that shouldn't be fused.\n+   * Replaces transforms with the known URN with a native equivalent stripping the environment and\n+   * removing any sub-transforms from the returned pipeline.\n    *\n    * @param pipeline the pipeline to be trimmed\n    * @param knownUrns set of URNs for the runner's native transforms\n    * @return the trimmed pipeline\n    */\n-  public static Pipeline trim(Pipeline pipeline, Set<String> knownUrns) {\n+  public static Pipeline forKnownUrns(Pipeline pipeline, Set<String> knownUrns) {\n     return makeKnownUrnsPrimitives(pipeline, knownUrns);\n   }\n \n   private static RunnerApi.Pipeline makeKnownUrnsPrimitives(\n       RunnerApi.Pipeline pipeline, Set<String> knownUrns) {\n     RunnerApi.Pipeline.Builder trimmedPipeline = pipeline.toBuilder();\n     for (String ptransformId : pipeline.getComponents().getTransformsMap().keySet()) {\n-      if (knownUrns.contains(\n-          pipeline.getComponents().getTransformsOrThrow(ptransformId).getSpec().getUrn())) {\n-        LOG.debug(\"Removing descendants of known PTransform {}\" + ptransformId);\n+      // Skip over previously removed transforms from the original pipeline.", "originalCommit": "58a470914dd88617962b65138d6d88fa897075bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU2NzY4Mg==", "url": "https://github.com/apache/beam/pull/11670#discussion_r424567682", "bodyText": "Done", "author": "lukecwik", "createdAt": "2020-05-13T16:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1OTY5MA=="}], "type": "inlineReview"}, {"oid": "bb9a55b702a237fc3f0f531f0ea70c43689d474e", "url": "https://github.com/apache/beam/commit/bb9a55b702a237fc3f0f531f0ea70c43689d474e", "message": "fixup! Address chamikara's PR comments", "committedDate": "2020-05-13T16:48:05Z", "type": "commit"}]}