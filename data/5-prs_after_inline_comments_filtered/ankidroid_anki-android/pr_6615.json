{"pr_number": 6615, "pr_title": "S tasks", "pr_createdAt": "2020-07-04T20:20:07Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6615", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzczNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449803737", "bodyText": "if we're potentially dealing with threading and you're worried (below in the patch) about copy before read because of synchronization, why not actually synchronize like so?\nhttps://stackoverflow.com/a/11360516/9910298", "author": "mikehardy", "createdAt": "2020-07-04T20:36:04Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -119,6 +119,10 @@\n      * A reference to the application context to use to fetch the current Collection object.\n      */\n     private Context mContext;\n+    /**\n+     * Tasks which are running or waiting to run.\n+     * */\n+    private static List<CollectionTask> sTasks = new ArrayList<>();", "originalCommit": "05640b8a65f65af5a043caff4abb9a4997fe3471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzk0Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449803946", "bodyText": "Because I do not know synchronization at all and tried to copy what was done in other part of the code to deal with list which may change during loop", "author": "Arthur-Milchior", "createdAt": "2020-07-04T20:39:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwNDYzMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449804633", "bodyText": "Yeah, the other areas didn't have multiple removes though with a static list, they had transient lists that we just \"clobbered\" with new collections. This one is persistent with multi-access and iteration so I think it merits the upgrade to synchronization even that means performance overhead normally", "author": "mikehardy", "createdAt": "2020-07-04T20:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwNDczOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449804739", "bodyText": "The link I posted has the full implementation change by the way - just a different way of creating the list, and a synchronized keyword before the iteration", "author": "mikehardy", "createdAt": "2020-07-04T20:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzgxNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449803815", "bodyText": "Should probably change the name to cancelAllTasksOfType then it's obvious and forces the quick (but needed) inspection of callers to make sure they cope with (or maybe already expect) this behavior\nSeems like a reasonable assumption though, I'm positive on the idea", "author": "mikehardy", "createdAt": "2020-07-04T20:37:22Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -206,10 +210,15 @@ public static void cancelTask() {\n     }\n \n \n+    /** Cancel all tasks of type taskType*/\n     public static void cancelTask(TASK_TYPE taskType) {", "originalCommit": "05640b8a65f65af5a043caff4abb9a4997fe3471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwNDE1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449804154", "bodyText": "I currently hate this idea, because I think 3 or 4 of my commits uses cancelTask, and I'll have to rebase them all in this case.\nI'll still do it, because that makes a lot of sense anyway", "author": "Arthur-Milchior", "createdAt": "2020-07-04T20:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMzgxNQ=="}], "type": "inlineReview"}, {"oid": "1bd43b4cd71c303013e9e03543213345c53e4cb8", "url": "https://github.com/ankidroid/Anki-Android/commit/1bd43b4cd71c303013e9e03543213345c53e4cb8", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-04T22:28:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMDYwMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449810602", "bodyText": "After all the synchronized discussion, it orphaned this comment - the comment no longer applies :-)", "author": "mikehardy", "createdAt": "2020-07-04T22:33:19Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -206,10 +210,16 @@ public static void cancelTask() {\n     }\n \n \n-    public static void cancelTask(TASK_TYPE taskType) {\n-        // cancel the current task only if it's of type taskType\n-        if (sLatestInstance != null && sLatestInstance.mType == taskType) {\n-            cancelTask();\n+    /** Cancel all tasks of type taskType*/\n+    public static void cancelAllTasks(TASK_TYPE taskType) {\n+        // Copying list to array, because cancelled task may be\n+        // removed from list.", "originalCommit": "1bd43b4cd71c303013e9e03543213345c53e4cb8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMDkwNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449810904", "bodyText": "Removed", "author": "Arthur-Milchior", "createdAt": "2020-07-04T22:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMDYwMg=="}], "type": "inlineReview"}, {"oid": "f5e0d1887c600fd0338bdf47ddd1becfa60c09cf", "url": "https://github.com/ankidroid/Anki-Android/commit/f5e0d1887c600fd0338bdf47ddd1becfa60c09cf", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-04T22:38:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMTA2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449811069", "bodyText": "The closer I look at it the more little things I see, sorry. But, cancelTask(TASK_TYPE) used to delegate to cancelTask, which just silently eats all Exceptions. Now you are cancelling the task directly so it's missing all this safety code:\n        try {\n            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n                sLatestInstance.cancel(true);\n                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n            }\n        } catch (Exception e) {\n            return;\n        }\n\nthe finished check\nthe logging that it's being cancelled\nthe exception catch", "author": "mikehardy", "createdAt": "2020-07-04T22:40:57Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -206,10 +210,14 @@ public static void cancelTask() {\n     }\n \n \n-    public static void cancelTask(TASK_TYPE taskType) {\n-        // cancel the current task only if it's of type taskType\n-        if (sLatestInstance != null && sLatestInstance.mType == taskType) {\n-            cancelTask();\n+    /** Cancel all tasks of type taskType*/\n+    public static void cancelAllTasks(TASK_TYPE taskType) {\n+        synchronized (sTasks) {\n+            for (CollectionTask task: sTasks) {\n+                if (task.mType == taskType) {\n+                    task.cancel(true);", "originalCommit": "f5e0d1887c600fd0338bdf47ddd1becfa60c09cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMjQ3NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449812475", "bodyText": "I added a \"safeCancel\" which cancel the object, and call it from cancelTask and cancelAllTasks", "author": "Arthur-Milchior", "createdAt": "2020-07-04T23:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMTA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMTE4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449811184", "bodyText": "This one is actually not cancelAllTasks as the implementation did not change, it is just cancelCurrentTask() semantically, unless you want to delegate to the new \"cancelAllTasks\" idea by doing this:\nif (sLatestInstance != null) {\n  cancelAllTasks(sLatestInstance.mType);\n}", "author": "mikehardy", "createdAt": "2020-07-04T22:42:53Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -193,7 +197,7 @@ public static boolean waitToFinish(Integer timeout) {\n     }\n \n \n-    public static void cancelTask() {\n+    public static void cancelAllTasks() {", "originalCommit": "f5e0d1887c600fd0338bdf47ddd1becfa60c09cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMjQ1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449812452", "bodyText": "My bad. I didn't know automated replace didn't look at signature", "author": "Arthur-Milchior", "createdAt": "2020-07-04T23:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMTE4NA=="}], "type": "inlineReview"}, {"oid": "8911b61727fa6ccfe378d27995ccfa6341b1fa27", "url": "https://github.com/ankidroid/Anki-Android/commit/8911b61727fa6ccfe378d27995ccfa6341b1fa27", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-04T23:05:48Z", "type": "forcePushed"}, {"oid": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "url": "https://github.com/ankidroid/Anki-Android/commit/ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-04T23:08:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814146", "bodyText": "This exception at the very least needs logging, what does it mean?", "author": "david-allison-1", "createdAt": "2020-07-04T23:39:01Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +196,38 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task */\n+    public void safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                cancel(true);\n+                Timber.i(\"Cancelled task %s\", mType);\n             }\n         } catch (Exception e) {\n+            sTasks.remove(this);", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNTcxOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449815718", "bodyText": "This exception is exactly the same as the one from cancelTask. There is nothing knew here. That is surprising, because if you remove the try catch, there is no warning.\nhttps://developer.android.com/reference/android/os/AsyncTask#cancel(boolean) does not seems to indicate that cancelling may throw anything. getStatus just return a member.  I guess it could just be removed then.", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjU1OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816558", "bodyText": "This exception is exactly the same as the one from cancelTask. There is nothing knew here. That is surprising, because if you remove the try catch, there is no warning.\nhttps://developer.android.com/reference/android/os/AsyncTask#cancel(boolean) does not seems to indicate that cancelling may throw anything. getStatus just return a member. I guess it could just be removed then.", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzAzNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817036", "bodyText": "Can throw SecurityException", "author": "david-allison-1", "createdAt": "2020-07-05T00:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzgyMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817823", "bodyText": "It would be nice if you can make a PR with a comment, so that future reader know about SecurityException", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzgzOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817839", "bodyText": "I currently can't do it, because I've no idea how and why it would be the case", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTQ2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821469", "bodyText": "AsyncTask.cancel() calls FutureTask.cancel() which calls Thread.interrupt() if the parameter is true which can throw \"if the current thread cannot modify this thread\"", "author": "david-allison-1", "createdAt": "2020-07-05T01:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTc3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821773", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T02:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDE0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814397", "bodyText": "Can you move this to a finally. .remove(object) returns a boolean, so can handle double removal.", "author": "david-allison-1", "createdAt": "2020-07-04T23:43:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +196,38 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task */\n+    public void safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                cancel(true);\n+                Timber.i(\"Cancelled task %s\", mType);\n             }\n         } catch (Exception e) {\n+            sTasks.remove(this);", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNTczNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449815735", "bodyText": "I can (assuming we keep the try/catch)", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjY4NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816685", "bodyText": "try... finally is also usable without a catch", "author": "david-allison-1", "createdAt": "2020-07-05T00:25:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzE2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817165", "bodyText": "My point was: if we don't do a try/catch here, then there is no reason to do a finally. Indeed, assume there is no try/catch\nEither an exception is thrown, and in this case the program crash, and the finally is useless. No point is removing an element from the list when the program halts\nOr there is no exception, and just adding the \"remove\" at the end of the method (as I did) is sufficient", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:33:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzMxNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817314", "bodyText": "Iron rule of anki code: do not every remove a catch(Exception) unless you are willing to read acralyzer crash reports for at least a month afterwards and fix the bugs\nIn other words, do not remove that catch :-), I would assume some time in the last 10+ years it was put there on purpose", "author": "mikehardy", "createdAt": "2020-07-05T00:35:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzc1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817752", "bodyText": "I am not willing. I removed the commit removing try/catch and added a finally here", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDM5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814651", "bodyText": "Could you rename either this, or the non-static cancelTask.", "author": "david-allison-1", "createdAt": "2020-07-04T23:48:16Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +196,38 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task */\n+    public void safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                cancel(true);\n+                Timber.i(\"Cancelled task %s\", mType);\n             }\n         } catch (Exception e) {\n+            sTasks.remove(this);\n             return;\n         }\n+\n+    }\n+\n+\n+    /** cancel the current task safely. */\n+    public static void cancelTask() {\n+        CollectionTask latestInstance = sLatestInstance;\n+        if (latestInstance != null) {", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNTc1NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449815755", "bodyText": "\"this\" being \"cancelTask\" or \"latestInstance\" ?\nIf you have any name to give me, I'll gladly rename it", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjcyMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816723", "bodyText": "cancelCurrentlyExecutingTask", "author": "david-allison-1", "createdAt": "2020-07-05T00:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzA2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817065", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814654", "bodyText": "This is O(n^2) [triangular numbers] worst case - removal will shift all elements down by 1 starting at index 0.\nI don't think it matters, but it'd be best to add a comment stating that there's room for improvement here.", "author": "david-allison-1", "createdAt": "2020-07-04T23:48:22Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +196,38 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task */\n+    public void safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                cancel(true);\n+                Timber.i(\"Cancelled task %s\", mType);\n             }\n         } catch (Exception e) {\n+            sTasks.remove(this);\n             return;\n         }\n+\n+    }\n+\n+\n+    /** cancel the current task safely. */\n+    public static void cancelTask() {\n+        CollectionTask latestInstance = sLatestInstance;\n+        if (latestInstance != null) {\n+            latestInstance.safeCancel();\n+        };\n     }\n \n \n-    public static void cancelTask(TASK_TYPE taskType) {\n-        // cancel the current task only if it's of type taskType\n-        if (sLatestInstance != null && sLatestInstance.mType == taskType) {\n-            cancelTask();\n+    /** Cancel all tasks of type taskType*/\n+    public static void cancelAllTasks(TASK_TYPE taskType) {\n+        synchronized (sTasks) {\n+            for (CollectionTask task: sTasks) {", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjAxMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816011", "bodyText": "I'll move to a LinkedList. Removal is constant time, and on second thought, if cancelAllTasks does the removal itself, it ensures cancel is not called twice on the same element.", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjc3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816776", "bodyText": "I don't think it's worth it other than adding a note - Linked Lists are typically slower than arrays, although asymptotically faster.", "author": "david-allison-1", "createdAt": "2020-07-05T00:26:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzA5MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817090", "bodyText": "Do you want me to revert this change ?", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDY1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDc2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814769", "bodyText": "For readability, extract this switch to a method, rather than assigning ret here.", "author": "david-allison-1", "createdAt": "2020-07-04T23:50:29Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -255,126 +275,165 @@ protected TaskData doInBackground(TaskData... params) {\n         // Skip the task if the collection cannot be opened\n         if (mType != TASK_TYPE.REPAIR_DECK && CollectionHelper.getInstance().getColSafe(mContext) == null) {\n             Timber.e(\"CollectionTask CollectionTask %s as Collection could not be opened\", mType);\n+            sTasks.remove(this);\n             return null;\n         }\n         // Actually execute the task now that we are at the front of the queue.\n+        TaskData ret = null;\n         switch (mType) {\n             case LOAD_DECK_COUNTS:\n-                return doInBackgroundLoadDeckCounts();\n+                ret = doInBackgroundLoadDeckCounts();", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjA3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816073", "bodyText": "Useless if everything is in a big try{}finally{}\nActually, the commit adding \"ret =\" will be removed if you confirm that it is what you were asking", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjkwOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816908", "bodyText": "You can do both - the method's probably too big already,", "author": "david-allison-1", "createdAt": "2020-07-05T00:29:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDg0Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449814843", "bodyText": "Is there any way that this can be converted to a finally block?", "author": "david-allison-1", "createdAt": "2020-07-04T23:51:47Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -240,6 +259,7 @@ protected TaskData doInBackground(TaskData... params) {\n                 Thread.currentThread().interrupt();\n                 // We have been interrupted, return immediately.\n                 Timber.d(e, \"interrupted while waiting for previous task: %s\", mPreviousTask.mType);\n+                sTasks.remove(this);", "originalCommit": "ccef733b9d7b0ea0b1f8c2cc8133bf6cc061fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjAzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816032", "bodyText": "You mean: put the whole method in try{}, and the remove in a finally ?\nI guess it can be done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNjg5OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449816899", "bodyText": "Would it make sense to you to do so, or do you feel it'd be harder to read and reason about?", "author": "david-allison-1", "createdAt": "2020-07-05T00:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzAwNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817004", "bodyText": "I did it another way. A method which does the actual work, and a method which simply call the former method, remove the task, and return the element from the former method. I find it less ugly than the try/finally, even if not perfect", "author": "Arthur-Milchior", "createdAt": "2020-07-05T00:30:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDg0Mw=="}], "type": "inlineReview"}, {"oid": "b63e05f425789990845f14b6013d9d66c83fa5b2", "url": "https://github.com/ankidroid/Anki-Android/commit/b63e05f425789990845f14b6013d9d66c83fa5b2", "message": "NF: remove useless try/catch", "committedDate": "2020-07-05T00:21:27Z", "type": "forcePushed"}, {"oid": "e636dbfbf35e544c239164e2ba911940f34204d5", "url": "https://github.com/ankidroid/Anki-Android/commit/e636dbfbf35e544c239164e2ba911940f34204d5", "message": "NF: remove useless try/catch", "committedDate": "2020-07-05T00:26:10Z", "type": "forcePushed"}, {"oid": "423422388c7d80de74f1088196d646a8550a687c", "url": "https://github.com/ankidroid/Anki-Android/commit/423422388c7d80de74f1088196d646a8550a687c", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-05T00:26:40Z", "type": "forcePushed"}, {"oid": "073834e3bfaaa9181ee714f01fb49f3484eb27e4", "url": "https://github.com/ankidroid/Anki-Android/commit/073834e3bfaaa9181ee714f01fb49f3484eb27e4", "message": "NF: rename cancelTask to cancelAllTasks", "committedDate": "2020-07-05T00:28:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzMyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817329", "bodyText": "Let's go back to the original list. This is unnecessarily complex", "author": "david-allison-1", "createdAt": "2020-07-05T00:36:00Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +198,36 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n-        try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n-            }\n-        } catch (Exception e) {\n-            return;\n+    /** Cancel the current task */\n+    public void safeCancel() {\n+        if (getStatus() != AsyncTask.Status.FINISHED) {\n+            cancel(true);\n+            Timber.i(\"Cancelled task %s\", mType);\n         }\n+        sTasks.remove(this);\n     }\n \n \n-    public static void cancelTask(TASK_TYPE taskType) {\n-        // cancel the current task only if it's of type taskType\n-        if (sLatestInstance != null && sLatestInstance.mType == taskType) {\n-            cancelTask();\n+    /** cancel the current task safely. */\n+    public static void cancelCurrentlyExecutingTask() {\n+        CollectionTask latestInstance = sLatestInstance;\n+        if (latestInstance != null) {\n+            latestInstance.safeCancel();\n+        };\n+    }\n+\n+\n+    /** Cancel all tasks of type taskType*/\n+    public static void cancelAllTasks(TASK_TYPE taskType) {\n+        synchronized (sTasks) {\n+            Iterator<CollectionTask> taskIterator = sTasks.iterator();", "originalCommit": "3a1fd54f5cbd4ce7dd0bab15edf175b70d933b7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTYzNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821635", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T01:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzQyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817429", "bodyText": "Could we switch this to try...finally, also allows us to return without a ret", "author": "david-allison-1", "createdAt": "2020-07-05T00:38:25Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -223,12 +241,19 @@ public CollectionTask(TASK_TYPE type, Listener listener, CollectionTask previous\n         mType = type;\n         mListener = listener;\n         mPreviousTask = previousTask;\n+        sTasks.add(this);\n     }\n \n \n     // This method and those that are called here are executed in a new thread\n     @Override\n     protected TaskData doInBackground(TaskData... params) {\n+        TaskData ret = actualDoInBackground(params);\n+        sTasks.remove(this);", "originalCommit": "3a1fd54f5cbd4ce7dd0bab15edf175b70d933b7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxOTU2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449819561", "bodyText": "Okay", "author": "Arthur-Milchior", "createdAt": "2020-07-05T01:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzQyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzg3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817873", "bodyText": "This will duplicate many log lines if the same task appears more than once. Maybe move to the caller, and return a boolean and count the number of instances.", "author": "david-allison-1", "createdAt": "2020-07-05T00:46:26Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +198,36 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n-        try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n-            }\n-        } catch (Exception e) {\n-            return;\n+    /** Cancel the current task */\n+    public void safeCancel() {\n+        if (getStatus() != AsyncTask.Status.FINISHED) {\n+            cancel(true);\n+            Timber.i(\"Cancelled task %s\", mType);", "originalCommit": "3a1fd54f5cbd4ce7dd0bab15edf175b70d933b7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxOTU2Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449819567", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T01:16:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzg3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzg4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449817884", "bodyText": "can we also switch back to try...catch...finally", "author": "david-allison-1", "createdAt": "2020-07-05T00:46:41Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +198,36 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n-        try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n-            }\n-        } catch (Exception e) {\n-            return;\n+    /** Cancel the current task */\n+    public void safeCancel() {\n+        if (getStatus() != AsyncTask.Status.FINISHED) {\n+            cancel(true);\n+            Timber.i(\"Cancelled task %s\", mType);\n         }\n+        sTasks.remove(this);", "originalCommit": "3a1fd54f5cbd4ce7dd0bab15edf175b70d933b7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxOTU2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449819569", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T01:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNzg4NA=="}], "type": "inlineReview"}, {"oid": "d577f3f787d1d5481962dabed7db832ec020b37d", "url": "https://github.com/ankidroid/Anki-Android/commit/d577f3f787d1d5481962dabed7db832ec020b37d", "message": "NF: cancelTask to cancelCurrentlyExecutingTask\n\nAs requested by David", "committedDate": "2020-07-05T01:15:33Z", "type": "forcePushed"}, {"oid": "22595c5ff499cab6103ce1eadd812e84468d43e6", "url": "https://github.com/ankidroid/Anki-Android/commit/22595c5ff499cab6103ce1eadd812e84468d43e6", "message": "NF: cancelTask to cancelCurrentlyExecutingTask\n\nAs requested by David", "committedDate": "2020-07-05T01:16:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTU0MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821540", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Timber.d(\"Catched exception \" + e);\n          \n          \n            \n                        Timber.w(e, \"Exception cancelling task\");", "author": "david-allison-1", "createdAt": "2020-07-05T01:55:31Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +198,47 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task.\n+     * @return whether cancelling did occur.*/\n+    public boolean safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                return cancel(true);\n             }\n         } catch (Exception e) {\n-            return;\n+            Timber.d(\"Catched exception \" + e);", "originalCommit": "22595c5ff499cab6103ce1eadd812e84468d43e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTkxMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821910", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T02:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTU5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821594", "bodyText": "nit, implementer's choice: Maybe invert this if", "author": "david-allison-1", "createdAt": "2020-07-05T01:56:24Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -192,24 +198,47 @@ public static boolean waitToFinish(Integer timeout) {\n         }\n     }\n \n-\n-    public static void cancelTask() {\n-        //cancel the current task\n+    /** Cancel the current task.\n+     * @return whether cancelling did occur.*/\n+    public boolean safeCancel() {\n         try {\n-            if ((sLatestInstance != null) && (sLatestInstance.getStatus() != AsyncTask.Status.FINISHED)) {\n-                sLatestInstance.cancel(true);\n-                Timber.i(\"Cancelled task %s\", sLatestInstance.mType);\n+            if (getStatus() != AsyncTask.Status.FINISHED) {\n+                return cancel(true);\n             }\n         } catch (Exception e) {\n-            return;\n+            Timber.d(\"Catched exception \" + e);\n+        } finally {\n+            sTasks.remove(this);\n         }\n+        return false;\n     }\n \n \n-    public static void cancelTask(TASK_TYPE taskType) {\n-        // cancel the current task only if it's of type taskType\n-        if (sLatestInstance != null && sLatestInstance.mType == taskType) {\n-            cancelTask();\n+    /** Cancel the current task only if it's of type taskType */\n+    public static void cancelCurrentlyExecutingTask() {\n+        CollectionTask latestInstance = sLatestInstance;\n+        if (latestInstance != null) {\n+            if (latestInstance.safeCancel()) {\n+                Timber.i(\"Cancelled task %s\", latestInstance.mType);\n+            }\n+        };\n+    }\n+\n+\n+    /** Cancel all tasks of type taskType*/\n+    public static void cancelAllTasks(TASK_TYPE taskType) {\n+        int count = 0;\n+        synchronized (sTasks) {\n+            for (CollectionTask task: sTasks) {\n+                if (task.mType == taskType) {", "originalCommit": "22595c5ff499cab6103ce1eadd812e84468d43e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTkxMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821911", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-05T02:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTY4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821681", "bodyText": "Probably best to extract the method - we're so far down that we've lost context of why we do this.", "author": "david-allison-1", "createdAt": "2020-07-05T01:58:06Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -223,158 +252,163 @@ public CollectionTask(TASK_TYPE type, Listener listener, CollectionTask previous\n         mType = type;\n         mListener = listener;\n         mPreviousTask = previousTask;\n+        sTasks.add(this);\n     }\n \n \n     // This method and those that are called here are executed in a new thread\n     @Override\n     protected TaskData doInBackground(TaskData... params) {\n-        super.doInBackground(params);\n-        // Wait for previous thread (if any) to finish before continuing\n-        if (mPreviousTask != null && mPreviousTask.getStatus() != AsyncTask.Status.FINISHED) {\n-            Timber.d(\"Waiting for %s to finish before starting %s\", mPreviousTask.mType, mType);\n-            try {\n-                mPreviousTask.get();\n-                Timber.d(\"Finished waiting for %s to finish. Status= %s\", mPreviousTask.mType, mPreviousTask.getStatus());\n-            } catch (InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-                // We have been interrupted, return immediately.\n-                Timber.d(e, \"interrupted while waiting for previous task: %s\", mPreviousTask.mType);\n-                return null;\n-            } catch (ExecutionException e) {\n-                // Ignore failures in the previous task.\n-                Timber.e(e, \"previously running task failed with exception: %s\", mPreviousTask.mType);\n-            } catch (CancellationException e) {\n-                // Ignore cancellation of previous task\n-                Timber.d(e, \"previously running task was cancelled: %s\", mPreviousTask.mType);\n+        try {\n+            super.doInBackground(params);\n+            // Wait for previous thread (if any) to finish before continuing\n+            if (mPreviousTask != null && mPreviousTask.getStatus() != AsyncTask.Status.FINISHED) {\n+                Timber.d(\"Waiting for %s to finish before starting %s\", mPreviousTask.mType, mType);\n+                try {\n+                    mPreviousTask.get();\n+                    Timber.d(\"Finished waiting for %s to finish. Status= %s\", mPreviousTask.mType, mPreviousTask.getStatus());\n+                } catch (InterruptedException e) {\n+                    Thread.currentThread().interrupt();\n+                    // We have been interrupted, return immediately.\n+                    Timber.d(e, \"interrupted while waiting for previous task: %s\", mPreviousTask.mType);\n+                    return null;\n+                } catch (ExecutionException e) {\n+                    // Ignore failures in the previous task.\n+                    Timber.e(e, \"previously running task failed with exception: %s\", mPreviousTask.mType);\n+                } catch (CancellationException e) {\n+                    // Ignore cancellation of previous task\n+                    Timber.d(e, \"previously running task was cancelled: %s\", mPreviousTask.mType);\n+                }\n             }\n-        }\n-        sLatestInstance = this;\n-        mContext = AnkiDroidApp.getInstance().getApplicationContext();\n+            sLatestInstance = this;\n+            mContext = AnkiDroidApp.getInstance().getApplicationContext();\n \n-        // Skip the task if the collection cannot be opened\n-        if (mType != TASK_TYPE.REPAIR_DECK && CollectionHelper.getInstance().getColSafe(mContext) == null) {\n-            Timber.e(\"CollectionTask CollectionTask %s as Collection could not be opened\", mType);\n-            return null;\n-        }\n-        // Actually execute the task now that we are at the front of the queue.\n-        switch (mType) {\n-            case LOAD_DECK_COUNTS:\n-                return doInBackgroundLoadDeckCounts();\n+            // Skip the task if the collection cannot be opened\n+            if (mType != TASK_TYPE.REPAIR_DECK && CollectionHelper.getInstance().getColSafe(mContext) == null) {\n+                Timber.e(\"CollectionTask CollectionTask %s as Collection could not be opened\", mType);\n+                return null;\n+            }\n+            // Actually execute the task now that we are at the front of the queue.\n+            switch (mType) {\n+                case LOAD_DECK_COUNTS:\n+                    return doInBackgroundLoadDeckCounts();\n \n-            case SAVE_COLLECTION:\n-                doInBackgroundSaveCollection();\n-                break;\n+                case SAVE_COLLECTION:\n+                    doInBackgroundSaveCollection();\n+                    break;\n \n-            case ANSWER_CARD:\n-                return doInBackgroundAnswerCard(params);\n+                case ANSWER_CARD:\n+                    return doInBackgroundAnswerCard(params);\n \n-            case ADD_NOTE:\n-                return doInBackgroundAddNote(params);\n+                case ADD_NOTE:\n+                    return doInBackgroundAddNote(params);\n \n-            case UPDATE_NOTE:\n-                return doInBackgroundUpdateNote(params);\n+                case UPDATE_NOTE:\n+                    return doInBackgroundUpdateNote(params);\n \n-            case UPDATE_NOTES_MULTI:\n-                return doInBackgroundUpdateNotes(params);\n+                case UPDATE_NOTES_MULTI:\n+                    return doInBackgroundUpdateNotes(params);\n \n-            case UNDO:\n-                return doInBackgroundUndo();\n+                case UNDO:\n+                    return doInBackgroundUndo();\n \n-            case SEARCH_CARDS:\n-                return doInBackgroundSearchCards(params);\n+                case SEARCH_CARDS:\n+                    return doInBackgroundSearchCards(params);\n \n-            case DISMISS:\n-                return doInBackgroundDismissNote(params);\n+                case DISMISS:\n+                    return doInBackgroundDismissNote(params);\n \n-            case DISMISS_MULTI:\n-                return doInBackgroundDismissNotes(params);\n+                case DISMISS_MULTI:\n+                    return doInBackgroundDismissNotes(params);\n \n-            case CHECK_DATABASE:\n-                return doInBackgroundCheckDatabase();\n+                case CHECK_DATABASE:\n+                    return doInBackgroundCheckDatabase();\n \n-            case REPAIR_DECK:\n-                return doInBackgroundRepairDeck();\n+                case REPAIR_DECK:\n+                    return doInBackgroundRepairDeck();\n \n-            case UPDATE_VALUES_FROM_DECK:\n-                return doInBackgroundUpdateValuesFromDeck(params);\n+                case UPDATE_VALUES_FROM_DECK:\n+                    return doInBackgroundUpdateValuesFromDeck(params);\n \n-            case DELETE_DECK:\n-                return doInBackgroundDeleteDeck(params);\n+                case DELETE_DECK:\n+                    return doInBackgroundDeleteDeck(params);\n \n-            case REBUILD_CRAM:\n-                return doInBackgroundRebuildCram();\n+                case REBUILD_CRAM:\n+                    return doInBackgroundRebuildCram();\n \n-            case EMPTY_CRAM:\n-                return doInBackgroundEmptyCram();\n+                case EMPTY_CRAM:\n+                    return doInBackgroundEmptyCram();\n \n-            case IMPORT:\n-                return doInBackgroundImportAdd(params);\n+                case IMPORT:\n+                    return doInBackgroundImportAdd(params);\n \n-            case IMPORT_REPLACE:\n-                return doInBackgroundImportReplace(params);\n+                case IMPORT_REPLACE:\n+                    return doInBackgroundImportReplace(params);\n \n-            case EXPORT_APKG:\n-                return doInBackgroundExportApkg(params);\n+                case EXPORT_APKG:\n+                    return doInBackgroundExportApkg(params);\n \n-            case REORDER:\n-                return doInBackgroundReorder(params);\n+                case REORDER:\n+                    return doInBackgroundReorder(params);\n \n-            case CONF_CHANGE:\n-                return doInBackgroundConfChange(params);\n+                case CONF_CHANGE:\n+                    return doInBackgroundConfChange(params);\n \n-            case CONF_RESET:\n-                return doInBackgroundConfReset(params);\n+                case CONF_RESET:\n+                    return doInBackgroundConfReset(params);\n \n-            case CONF_REMOVE:\n-                return doInBackgroundConfRemove(params);\n+                case CONF_REMOVE:\n+                    return doInBackgroundConfRemove(params);\n \n-            case CONF_SET_SUBDECKS:\n-                return doInBackgroundConfSetSubdecks(params);\n+                case CONF_SET_SUBDECKS:\n+                    return doInBackgroundConfSetSubdecks(params);\n \n-            case RENDER_BROWSER_QA:\n-                return doInBackgroundRenderBrowserQA(params);\n+                case RENDER_BROWSER_QA:\n+                    return doInBackgroundRenderBrowserQA(params);\n \n-            case CHECK_MEDIA:\n-                return doInBackgroundCheckMedia();\n+                case CHECK_MEDIA:\n+                    return doInBackgroundCheckMedia();\n \n-            case ADD_TEMPLATE:\n-                return doInBackgroundAddTemplate(params);\n+                case ADD_TEMPLATE:\n+                    return doInBackgroundAddTemplate(params);\n \n-            case REMOVE_TEMPLATE:\n-                return doInBackgroundRemoveTemplate(params);\n+                case REMOVE_TEMPLATE:\n+                    return doInBackgroundRemoveTemplate(params);\n \n-            case COUNT_MODELS:\n-                return doInBackgroundCountModels();\n+                case COUNT_MODELS:\n+                    return doInBackgroundCountModels();\n \n-            case DELETE_MODEL:\n-                return  doInBackGroundDeleteModel(params);\n+                case DELETE_MODEL:\n+                    return doInBackGroundDeleteModel(params);\n \n-            case DELETE_FIELD:\n-                return doInBackGroundDeleteField(params);\n+                case DELETE_FIELD:\n+                    return doInBackGroundDeleteField(params);\n \n-            case REPOSITION_FIELD:\n-                return doInBackGroundRepositionField(params);\n+                case REPOSITION_FIELD:\n+                    return doInBackGroundRepositionField(params);\n \n-            case ADD_FIELD:\n-                return doInBackGroundAddField(params);\n+                case ADD_FIELD:\n+                    return doInBackGroundAddField(params);\n \n-            case CHANGE_SORT_FIELD:\n-                return doInBackgroundChangeSortField(params);\n+                case CHANGE_SORT_FIELD:\n+                    return doInBackgroundChangeSortField(params);\n \n-            case SAVE_MODEL:\n-                return doInBackgroundSaveModel(params);\n+                case SAVE_MODEL:\n+                    return doInBackgroundSaveModel(params);\n \n-            case FIND_EMPTY_CARDS:\n-                return doInBackGroundFindEmptyCards(params);\n+                case FIND_EMPTY_CARDS:\n+                    return doInBackGroundFindEmptyCards(params);\n \n-            case CHECK_CARD_SELECTION:\n-                return doInBackgroundCheckCardSelection(params);\n+                case CHECK_CARD_SELECTION:\n+                    return doInBackgroundCheckCardSelection(params);\n \n-            default:\n-                Timber.e(\"unknown task type: %s\", mType);\n+                default:\n+                    Timber.e(\"unknown task type: %s\", mType);\n+            }\n+            return null;\n+        } finally {\n+            sTasks.remove(this);", "originalCommit": "22595c5ff499cab6103ce1eadd812e84468d43e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTkzMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6615#discussion_r449821931", "bodyText": "And this will help a lot merging, by avoiding so many space change\u00a0!", "author": "Arthur-Milchior", "createdAt": "2020-07-05T02:03:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMTY4MQ=="}], "type": "inlineReview"}, {"oid": "440c93200c278f82aceece62d1f979d93f43da2d", "url": "https://github.com/ankidroid/Anki-Android/commit/440c93200c278f82aceece62d1f979d93f43da2d", "message": "NF: split doInBackground split in two", "committedDate": "2020-07-05T02:05:18Z", "type": "commit"}, {"oid": "df97f32c87d8cf4aeb761e99e149a5de833a597c", "url": "https://github.com/ankidroid/Anki-Android/commit/df97f32c87d8cf4aeb761e99e149a5de833a597c", "message": "NF: sTasks\n\nA list of tasks that are expected to run, now or later", "committedDate": "2020-07-05T02:07:35Z", "type": "commit"}, {"oid": "e394db03081110fc4a2f24842a0f94c5f2dce905", "url": "https://github.com/ankidroid/Anki-Android/commit/e394db03081110fc4a2f24842a0f94c5f2dce905", "message": "NF: Move comments to javadoc", "committedDate": "2020-07-05T02:07:36Z", "type": "commit"}, {"oid": "0e75c92f762345f5f433332ee41e4b6e8cb000ad", "url": "https://github.com/ankidroid/Anki-Android/commit/0e75c92f762345f5f433332ee41e4b6e8cb000ad", "message": "NF: assign to local variable to avoid concurrent chnage", "committedDate": "2020-07-05T02:07:36Z", "type": "commit"}, {"oid": "2a86b9d07a6b76aea6b0828e76b6d4f9ceb81068", "url": "https://github.com/ankidroid/Anki-Android/commit/2a86b9d07a6b76aea6b0828e76b6d4f9ceb81068", "message": "NF: safeCancel, allow to cancel task", "committedDate": "2020-07-05T02:07:36Z", "type": "commit"}, {"oid": "1e889606b066ecacd092d461d0cf47d734b780e2", "url": "https://github.com/ankidroid/Anki-Android/commit/1e889606b066ecacd092d461d0cf47d734b780e2", "message": "NF: cancelTask to cancelCurrentlyExecutingTask\n\nAs requested by David", "committedDate": "2020-07-05T02:07:36Z", "type": "forcePushed"}, {"oid": "0c2f392fc9d59492e5955b09ac912c24a61022b6", "url": "https://github.com/ankidroid/Anki-Android/commit/0c2f392fc9d59492e5955b09ac912c24a61022b6", "message": "cancelTask(type) cancel all tasks of given type\n\nThere is only a few call to this method, and I can never see a good\nreason to cancel a task only if it is running. In all case, if the\ntask type is cancelled, it is because it is not useful anymore", "committedDate": "2020-07-05T02:30:47Z", "type": "commit"}, {"oid": "fa0e28c48a181c9d7de0c2dbabda10a447c38905", "url": "https://github.com/ankidroid/Anki-Android/commit/fa0e28c48a181c9d7de0c2dbabda10a447c38905", "message": "NF: cancelTask to cancelCurrentlyExecutingTask\n\nAs requested by David", "committedDate": "2020-07-05T02:30:48Z", "type": "commit"}, {"oid": "fa0e28c48a181c9d7de0c2dbabda10a447c38905", "url": "https://github.com/ankidroid/Anki-Android/commit/fa0e28c48a181c9d7de0c2dbabda10a447c38905", "message": "NF: cancelTask to cancelCurrentlyExecutingTask\n\nAs requested by David", "committedDate": "2020-07-05T02:30:48Z", "type": "forcePushed"}]}