{"pr_number": 13249, "pr_title": "[FLINK-14087][datastream] Clone the StreamPartitioner to avoid being shared at runtime.", "pr_createdAt": "2020-08-26T09:22:27Z", "pr_url": "https://github.com/apache/flink/pull/13249", "timeline": [{"oid": "8163b648a532556d5dcac7a13628fd2ac0843b79", "url": "https://github.com/apache/flink/commit/8163b648a532556d5dcac7a13628fd2ac0843b79", "message": "[FLINK-14087][datastream] Clone the StreamPartitioner to avoid being shared at runtime.", "committedDate": "2020-08-26T09:44:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIwNjcwNg==", "url": "https://github.com/apache/flink/pull/13249#discussion_r477206706", "bodyText": "shall we name it DataStreamWithSharedPartitionNodeITCase ? I think it is an it test and should be executed with other IT tests.", "author": "dawidwys", "createdAt": "2020-08-26T10:44:03Z", "path": "flink-tests/src/test/java/org/apache/flink/test/streaming/api/datastream/DataStreamWithSharePartitionNodeTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.test.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.functions.Partitioner;\n+import org.apache.flink.runtime.testutils.MiniClusterResourceConfiguration;\n+import org.apache.flink.streaming.api.datastream.DataStream;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.streaming.api.functions.sink.RichSinkFunction;\n+import org.apache.flink.test.util.MiniClusterWithClientResource;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * This tests verifies the data could be partitioned correctly\n+ * if multiple consumers are connected to the same partitioner\n+ * node.\n+ */\n+public class DataStreamWithSharePartitionNodeTest {", "originalCommit": "8163b648a532556d5dcac7a13628fd2ac0843b79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MTE3OA==", "url": "https://github.com/apache/flink/pull/13249#discussion_r477261178", "bodyText": "Also agree with that this should be an ITCase instead, I renamed the test accordingly.", "author": "gaoyunhaii", "createdAt": "2020-08-26T12:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIwNjcwNg=="}], "type": "inlineReview"}, {"oid": "4eae231a2cd3edbb2ba34f7bef983f64a4c4fefa", "url": "https://github.com/apache/flink/commit/4eae231a2cd3edbb2ba34f7bef983f64a4c4fefa", "message": "[FLINK-14087][datastream] Clone the StreamPartitioner to avoid being shared at runtime.", "committedDate": "2020-08-27T07:42:15Z", "type": "forcePushed"}, {"oid": "07e11ae0c700a4172a854ae4fd108b483bde6003", "url": "https://github.com/apache/flink/commit/07e11ae0c700a4172a854ae4fd108b483bde6003", "message": "[FLINK-14087][datastream] Clone the StreamPartitioner to avoid being shared at runtime.", "committedDate": "2020-08-28T03:30:24Z", "type": "commit"}, {"oid": "07e11ae0c700a4172a854ae4fd108b483bde6003", "url": "https://github.com/apache/flink/commit/07e11ae0c700a4172a854ae4fd108b483bde6003", "message": "[FLINK-14087][datastream] Clone the StreamPartitioner to avoid being shared at runtime.", "committedDate": "2020-08-28T03:30:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzMTU2Mg==", "url": "https://github.com/apache/flink/pull/13249#discussion_r481031562", "bodyText": "In my opinion we should clone the partitioner before configuring it. I think the configure can theoretically initialize some state that is not serializable.", "author": "dawidwys", "createdAt": "2020-09-01T10:16:48Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -1180,6 +1181,14 @@ public final CloseableRegistry getCancelables() {\n \t\t\t}\n \t\t}\n \n+\t\t// Clones the partition to avoid multiple stream edges sharing the same stream partitioner,\n+\t\t// like the case of https://issues.apache.org/jira/browse/FLINK-14087.\n+\t\ttry {\n+\t\t\toutputPartitioner = InstantiationUtil.clone(outputPartitioner, Thread.currentThread().getContextClassLoader());", "originalCommit": "07e11ae0c700a4172a854ae4fd108b483bde6003", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyNTY3Mw==", "url": "https://github.com/apache/flink/pull/13249#discussion_r481325673", "bodyText": "Very thanks! I agree with you that we should clone the partitioner before configuration.", "author": "gaoyunhaii", "createdAt": "2020-09-01T17:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzMTU2Mg=="}], "type": "inlineReview"}, {"oid": "dac56bd078915f2b86835cf5e8cdba3233ee834f", "url": "https://github.com/apache/flink/commit/dac56bd078915f2b86835cf5e8cdba3233ee834f", "message": "Clone the stream partitioner before configuration", "committedDate": "2020-09-01T17:49:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyODczNg==", "url": "https://github.com/apache/flink/pull/13249#discussion_r481928736", "bodyText": "I am really sorry for yet another comment, but I've spotted it only now.\nHow about we use the environment.getUserClassLoader() instead of Thread.currentThread().getContextClassLoader()? I think it is safer that way.", "author": "dawidwys", "createdAt": "2020-09-02T09:22:34Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -1160,14 +1160,25 @@ public final CloseableRegistry getCancelables() {\n \t\treturn recordWriters;\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n \tprivate static <OUT> RecordWriter<SerializationDelegate<StreamRecord<OUT>>> createRecordWriter(\n \t\t\tStreamEdge edge,\n \t\t\tint outputIndex,\n \t\t\tEnvironment environment,\n \t\t\tString taskName,\n \t\t\tlong bufferTimeout) {\n-\t\t@SuppressWarnings(\"unchecked\")\n-\t\tStreamPartitioner<OUT> outputPartitioner = (StreamPartitioner<OUT>) edge.getPartitioner();\n+\n+\t\tStreamPartitioner<OUT> outputPartitioner = null;\n+\n+\t\t// Clones the partition to avoid multiple stream edges sharing the same stream partitioner,\n+\t\t// like the case of https://issues.apache.org/jira/browse/FLINK-14087.\n+\t\ttry {\n+\t\t\toutputPartitioner = InstantiationUtil.clone(\n+\t\t\t\t(StreamPartitioner<OUT>) edge.getPartitioner(),\n+\t\t\t\tThread.currentThread().getContextClassLoader());", "originalCommit": "dac56bd078915f2b86835cf5e8cdba3233ee834f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NzUzMA==", "url": "https://github.com/apache/flink/pull/13249#discussion_r482747530", "bodyText": "Very thanks Dawid! I also think that it would be much better that we get the user classloader in a more deterministic way. I have updated the PR.", "author": "gaoyunhaii", "createdAt": "2020-09-03T07:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyODczNg=="}], "type": "inlineReview"}, {"oid": "89525a7780799d6acf2227b229e357c26fc353e2", "url": "https://github.com/apache/flink/commit/89525a7780799d6acf2227b229e357c26fc353e2", "message": "Get the classloader from the environment", "committedDate": "2020-09-03T06:57:52Z", "type": "commit"}]}