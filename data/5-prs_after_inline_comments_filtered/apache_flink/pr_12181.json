{"pr_number": 12181, "pr_title": "[FLINK-17645][runtime] Reset SafetyNetCloseableRegistry#REAPER_THREAD if it fails to start", "pr_createdAt": "2020-05-15T15:49:31Z", "pr_url": "https://github.com/apache/flink/pull/12181", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MDg5Ng==", "url": "https://github.com/apache/flink/pull/12181#discussion_r426350896", "bodyText": "Mockito is not recommended for Flink tests.\nAn alternative is to introduce a new constructor SafetyNetCloseableRegistry(CloseableReaperThread) and a test class which overrides CloseableReaperThread.", "author": "zhuzhurk", "createdAt": "2020-05-18T03:20:36Z", "path": "flink-core/src/test/java/org/apache/flink/core/fs/SafetyNetCloseableRegistryTest.java", "diffHunk": "@@ -27,18 +27,31 @@\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.util.concurrent.atomic.AtomicInteger;\n \n+import static org.powermock.api.mockito.PowerMockito.doNothing;\n+import static org.powermock.api.mockito.PowerMockito.doThrow;\n+import static org.powermock.api.mockito.PowerMockito.whenNew;\n+\n /**\n  * Tests for the {@link SafetyNetCloseableRegistry}.\n  */\n+@RunWith(PowerMockRunner.class)", "originalCommit": "a7df4077fb5715e0a9ce097b773f49a197eb27dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTg1MQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r426375851", "bodyText": "Thanks for reivew, @zhuzhurk . I will considier your comment. But CloseableReaperThread  is final class and can't be inherited, I will change this for override.", "author": "wanglijie95", "createdAt": "2020-05-18T05:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MDg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1ODUxMA==", "url": "https://github.com/apache/flink/pull/12181#discussion_r426358510", "bodyText": "I think this line is not needed. It can be tracked via git log.", "author": "zhuzhurk", "createdAt": "2020-05-18T04:01:33Z", "path": "flink-core/src/test/java/org/apache/flink/core/fs/SafetyNetCloseableRegistryTest.java", "diffHunk": "@@ -198,4 +211,27 @@ public void testReaperThreadSpawnAndStop() throws Exception {\n \t\t}\n \t\tAssert.assertFalse(SafetyNetCloseableRegistry.isReaperThreadRunning());\n \t}\n+\n+\t/**\n+\t * Test for FLINK-17645.", "originalCommit": "a7df4077fb5715e0a9ce097b773f49a197eb27dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTU5MQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r426389591", "bodyText": "I got it. I will delete this line.", "author": "wanglijie95", "createdAt": "2020-05-18T06:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1ODUxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxMDkyNQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427010925", "bodyText": "We should avoid duplicating the codes.\nBelow is a possible way to make it.\n\tSafetyNetCloseableRegistry() {\n\t\tthis(() -> new CloseableReaperThread());\n\t}\n\n\t@VisibleForTesting\n\tSafetyNetCloseableRegistry(Supplier<CloseableReaperThread> reaperThreadSupplier) {\n\t\tsuper(new IdentityHashMap<>());\n\n\t\tsynchronized (REAPER_THREAD_LOCK) {\n\t\t\tif (0 == GLOBAL_SAFETY_NET_REGISTRY_COUNT) {\n\t\t\t\tPreconditions.checkState(null == REAPER_THREAD);\n\t\t\t\ttry {\n\t\t\t\t\tREAPER_THREAD = reaperThreadSupplier.get();\n\t\t\t\t\tREAPER_THREAD.start();\n\t\t\t\t} catch (Throwable throwable) {\n\t\t\t\t\tREAPER_THREAD = null;\n\t\t\t\t\tthrow throwable;\n\t\t\t\t}\n\t\t\t}\n\t\t\t++GLOBAL_SAFETY_NET_REGISTRY_COUNT;\n\t\t}\n\t}", "author": "zhuzhurk", "createdAt": "2020-05-19T03:35:59Z", "path": "flink-core/src/main/java/org/apache/flink/core/fs/SafetyNetCloseableRegistry.java", "diffHunk": "@@ -73,8 +73,34 @@\n \t\tsynchronized (REAPER_THREAD_LOCK) {\n \t\t\tif (0 == GLOBAL_SAFETY_NET_REGISTRY_COUNT) {\n \t\t\t\tPreconditions.checkState(null == REAPER_THREAD);\n-\t\t\t\tREAPER_THREAD = new CloseableReaperThread();\n-\t\t\t\tREAPER_THREAD.start();\n+\t\t\t\ttry {\n+\t\t\t\t\tREAPER_THREAD = new CloseableReaperThread();\n+\t\t\t\t\tREAPER_THREAD.start();\n+\t\t\t\t} catch (Throwable throwable) {\n+\t\t\t\t\t// thread create or start error.\n+\t\t\t\t\tREAPER_THREAD = null;\n+\t\t\t\t\tthrow throwable;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t++GLOBAL_SAFETY_NET_REGISTRY_COUNT;\n+\t\t}\n+\t}\n+\n+\t@VisibleForTesting\n+\tSafetyNetCloseableRegistry(CloseableReaperThread reaperThread) {", "originalCommit": "757a2307f027acba2aca26f7f5ec6f9639ce9079", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxMjk0OA==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427012948", "bodyText": "Why adding a new constructor here?\nIf you are blocked by the existing private constructor, you can just change it to protected.", "author": "zhuzhurk", "createdAt": "2020-05-19T03:43:13Z", "path": "flink-core/src/main/java/org/apache/flink/core/fs/SafetyNetCloseableRegistry.java", "diffHunk": "@@ -186,6 +212,15 @@ private CloseableReaperThread() {\n \t\t\tthis.running = true;\n \t\t}\n \n+\t\t@VisibleForTesting\n+\t\tCloseableReaperThread(String name) {", "originalCommit": "757a2307f027acba2aca26f7f5ec6f9639ce9079", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxNTM1Nw==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427015357", "bodyText": "OK, I will change it to protected.", "author": "wanglijie95", "createdAt": "2020-05-19T03:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxMjk0OA=="}], "type": "inlineReview"}, {"oid": "37dbf5a71db743b3aaef83538be71bc5bd1a7415", "url": "https://github.com/apache/flink/commit/37dbf5a71db743b3aaef83538be71bc5bd1a7415", "message": "Fix comment.", "committedDate": "2020-05-19T09:18:26Z", "type": "forcePushed"}, {"oid": "0bf2aa2f54e22e76fed071e3c614139d4d187fc4", "url": "https://github.com/apache/flink/commit/0bf2aa2f54e22e76fed071e3c614139d4d187fc4", "message": "Fix comment.", "committedDate": "2020-05-19T13:26:30Z", "type": "forcePushed"}, {"oid": "bd9add8e480455265ca95b863601f6608918b334", "url": "https://github.com/apache/flink/commit/bd9add8e480455265ca95b863601f6608918b334", "message": "Fix comment.", "committedDate": "2020-05-20T04:23:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MjQ0MA==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427792440", "bodyText": "can be private", "author": "zhuzhurk", "createdAt": "2020-05-20T07:20:13Z", "path": "flink-core/src/test/java/org/apache/flink/core/fs/SafetyNetCloseableRegistryTest.java", "diffHunk": "@@ -198,4 +198,29 @@ public void testReaperThreadSpawnAndStop() throws Exception {\n \t\t}\n \t\tAssert.assertFalse(SafetyNetCloseableRegistry.isReaperThreadRunning());\n \t}\n+\n+\t/**\n+\t * Test whether failure to start thread in {@link SafetyNetCloseableRegistry}\n+\t * constructor can lead to failure of subsequent state check.\n+\t */\n+\t@Test\n+\tpublic void testReaperThreadStartFailed() throws Exception {\n+\n+\t\ttry {\n+\t\t\tnew SafetyNetCloseableRegistry(() -> new OutOfMemoryReaperThread());\n+\t\t} catch (java.lang.OutOfMemoryError error) {\n+\t\t}\n+\n+\t\t// the OOM error will not lead to failure of subsequent constructor call.\n+\t\tSafetyNetCloseableRegistry closeableRegistry = new SafetyNetCloseableRegistry();\n+\t\tcloseableRegistry.close();\n+\t}\n+\n+\tstatic class OutOfMemoryReaperThread extends SafetyNetCloseableRegistry.CloseableReaperThread {", "originalCommit": "bd9add8e480455265ca95b863601f6608918b334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgzODY1MQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427838651", "bodyText": "done.", "author": "wanglijie95", "createdAt": "2020-05-20T08:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MjQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NDMzOQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427794339", "bodyText": "We can add isReaperThreadRunning checks after the failed creation and the succeeded creation.\nThis helps to verify that a reaper thread is really created and running.", "author": "zhuzhurk", "createdAt": "2020-05-20T07:24:00Z", "path": "flink-core/src/test/java/org/apache/flink/core/fs/SafetyNetCloseableRegistryTest.java", "diffHunk": "@@ -198,4 +198,29 @@ public void testReaperThreadSpawnAndStop() throws Exception {\n \t\t}\n \t\tAssert.assertFalse(SafetyNetCloseableRegistry.isReaperThreadRunning());\n \t}\n+\n+\t/**\n+\t * Test whether failure to start thread in {@link SafetyNetCloseableRegistry}\n+\t * constructor can lead to failure of subsequent state check.\n+\t */\n+\t@Test\n+\tpublic void testReaperThreadStartFailed() throws Exception {\n+\n+\t\ttry {\n+\t\t\tnew SafetyNetCloseableRegistry(() -> new OutOfMemoryReaperThread());\n+\t\t} catch (java.lang.OutOfMemoryError error) {\n+\t\t}\n+", "originalCommit": "bd9add8e480455265ca95b863601f6608918b334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgzMTIwNQ==", "url": "https://github.com/apache/flink/pull/12181#discussion_r427831205", "bodyText": "OK, I will add the check.", "author": "wanglijie95", "createdAt": "2020-05-20T08:28:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NDMzOQ=="}], "type": "inlineReview"}, {"oid": "fbefe16eb3f7769b6daf6cfe1fa26b7a0f7130a8", "url": "https://github.com/apache/flink/commit/fbefe16eb3f7769b6daf6cfe1fa26b7a0f7130a8", "message": "[FLINK-17645][runtime] Reset SafetyNetCloseableRegistry#REAPER_THREAD if it fails to start", "committedDate": "2020-05-20T09:02:37Z", "type": "commit"}, {"oid": "fbefe16eb3f7769b6daf6cfe1fa26b7a0f7130a8", "url": "https://github.com/apache/flink/commit/fbefe16eb3f7769b6daf6cfe1fa26b7a0f7130a8", "message": "[FLINK-17645][runtime] Reset SafetyNetCloseableRegistry#REAPER_THREAD if it fails to start", "committedDate": "2020-05-20T09:02:37Z", "type": "forcePushed"}]}