{"pr_number": 13097, "pr_title": "[FLINK-18864][python] Support key_by() operation for Python DataStrea\u2026", "pr_createdAt": "2020-08-10T03:02:54Z", "pr_url": "https://github.com/apache/flink/pull/13097", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcxMDk2NQ==", "url": "https://github.com/apache/flink/pull/13097#discussion_r467710965", "bodyText": "The key can be other types if key_by with type information. For example, ds.key_by(MyKeySelector(), Types.INT())", "author": "hequn8128", "createdAt": "2020-08-10T06:37:33Z", "path": "flink-python/src/main/java/org/apache/flink/datastream/runtime/functions/python/PickledKeySelector.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.datastream.runtime.functions.python;\n+\n+import org.apache.flink.api.java.functions.KeySelector;\n+import org.apache.flink.types.Row;\n+\n+import net.razorvine.pickle.Unpickler;\n+\n+/**\n+ * PickledKeySelector is responsible for extracting the first filed of the input row as key.\n+ * The input row is generated by python DataStream map function in the format of (key_selector.get_key(value), value)\n+ * tuple2.\n+ */\n+public class PickledKeySelector implements KeySelector<Row, Object> {\n+\n+\tprivate Unpickler unpickler = null;\n+\n+\t@Override\n+\tpublic Object getKey(Row value) throws Exception {\n+\n+\t\tif (this.unpickler == null) {\n+\t\t\tunpickler = new Unpickler();\n+\t\t}\n+\n+\t\tObject key = value.getField(0);\n+\t\tif (key instanceof byte[]) {", "originalCommit": "52e8670eef5651d09ad0defeb1a8729aa7c589ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcxMjQwMA==", "url": "https://github.com/apache/flink/pull/13097#discussion_r467712400", "bodyText": "Use java annotation to describe Java class(e.g., PickledKeySelector, DataStream).", "author": "hequn8128", "createdAt": "2020-08-10T06:41:58Z", "path": "flink-python/src/main/java/org/apache/flink/datastream/runtime/functions/python/PickledKeySelector.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.datastream.runtime.functions.python;\n+\n+import org.apache.flink.api.java.functions.KeySelector;\n+import org.apache.flink.types.Row;\n+\n+import net.razorvine.pickle.Unpickler;\n+\n+/**\n+ * PickledKeySelector is responsible for extracting the first filed of the input row as key.", "originalCommit": "52e8670eef5651d09ad0defeb1a8729aa7c589ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "051cb0425e5a4e644abc4033cbe319a91a69cebd", "url": "https://github.com/apache/flink/commit/051cb0425e5a4e644abc4033cbe319a91a69cebd", "message": "[FLINK-18864][python] Support key_by() operation for Python DataStream API.", "committedDate": "2020-08-10T10:55:47Z", "type": "commit"}, {"oid": "fd88969eaa2c0dd3894566a4f1e2637e724a609d", "url": "https://github.com/apache/flink/commit/fd88969eaa2c0dd3894566a4f1e2637e724a609d", "message": "- fix PickledKeySelector to support user specified key type, clean key_by tests.", "committedDate": "2020-08-10T10:56:58Z", "type": "commit"}, {"oid": "545155322175ba49ef9973ccad13f93f0b57e2a0", "url": "https://github.com/apache/flink/commit/545155322175ba49ef9973ccad13f93f0b57e2a0", "message": "- resolve review issues.", "committedDate": "2020-08-10T10:56:58Z", "type": "commit"}, {"oid": "03a8bdd5a1f59e18ea58fafefacddd76c50a09be", "url": "https://github.com/apache/flink/commit/03a8bdd5a1f59e18ea58fafefacddd76c50a09be", "message": "- rebase master branch", "committedDate": "2020-08-10T11:18:42Z", "type": "commit"}, {"oid": "03a8bdd5a1f59e18ea58fafefacddd76c50a09be", "url": "https://github.com/apache/flink/commit/03a8bdd5a1f59e18ea58fafefacddd76c50a09be", "message": "- rebase master branch", "committedDate": "2020-08-10T11:18:42Z", "type": "forcePushed"}, {"oid": "eb8c81fd06223acfd43bf5b3f4778ba32e8b4ade", "url": "https://github.com/apache/flink/commit/eb8c81fd06223acfd43bf5b3f4778ba32e8b4ade", "message": "[FLINK-18864][python] Simplified test for key_by.", "committedDate": "2020-08-10T13:03:54Z", "type": "commit"}]}