{"pr_number": 12826, "pr_title": "[FLINK-18419] Create catalog in TableEnvironment using user classloader ", "pr_createdAt": "2020-07-06T07:47:51Z", "pr_url": "https://github.com/apache/flink/pull/12826", "timeline": [{"oid": "798f9afd0b13ece3aeb718fb29eb6731ae27ca62", "url": "https://github.com/apache/flink/commit/798f9afd0b13ece3aeb718fb29eb6731ae27ca62", "message": "[hotfix] Extend ClassLoaderUtils with a way to add resources", "committedDate": "2020-07-03T14:16:49Z", "type": "commit"}, {"oid": "de2d51a6b9b75f343b7d21b4bc0aaa1a842b26b1", "url": "https://github.com/apache/flink/commit/de2d51a6b9b75f343b7d21b4bc0aaa1a842b26b1", "message": "[FLINK-18419] Make user ClassLoader available in TableEnvironment", "committedDate": "2020-07-03T14:30:34Z", "type": "commit"}, {"oid": "0691185bcfe408b32b0f61a2bb2313c04c69b0e2", "url": "https://github.com/apache/flink/commit/0691185bcfe408b32b0f61a2bb2313c04c69b0e2", "message": "[FLINK-18419] Create catalog in TableEnvironment using user ClassLoader", "committedDate": "2020-07-03T14:31:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452103391", "bodyText": "This case can run successfully even without the commit [FLINK-18419] Create catalog in TableEnvironment using user ClassLoader. Because TemporaryClassLoaderContext.of method sets the user classloader to the current thread, and TableFactoryService#discoverFactories method will use the classloader in the current thread to find factories.", "author": "godfreyhe", "createdAt": "2020-07-09T09:56:48Z", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/catalog/CatalogITCase.java", "diffHunk": "@@ -61,9 +70,54 @@ public void testDropCatalog() {\n \t\tassertFalse(tableEnv.getCatalog(name).isPresent());\n \t}\n \n+\t@Test\n+\tpublic void testCreateCatalogFromUserClassLoader() throws Exception {\n+\t\tfinal String className = \"UserCatalogFactory\";\n+\t\tURLClassLoader classLoader = ClassLoaderUtils.withRoot(temporaryFolder.newFolder())\n+\t\t\t.addResource(\"META-INF/services/org.apache.flink.table.factories.TableFactory\", \"UserCatalogFactory\")\n+\t\t\t.addClass(\n+\t\t\t\tclassName,\n+\t\t\t\t\"import org.apache.flink.table.catalog.GenericInMemoryCatalog;\\n\" +\n+\t\t\t\t\t\"import org.apache.flink.table.factories.CatalogFactory;\\n\" +\n+\t\t\t\t\t\"import java.util.Collections;\\n\" +\n+\t\t\t\t\t\"import org.apache.flink.table.catalog.Catalog;\\n\" +\n+\t\t\t\t\t\"import java.util.HashMap;\\n\" +\n+\t\t\t\t\t\"import java.util.List;\\n\" +\n+\t\t\t\t\t\"import java.util.Map;\\n\" +\n+\t\t\t\t\t\"\\tpublic class UserCatalogFactory implements CatalogFactory {\\n\" +\n+\t\t\t\t\t\"\\t\\t@Override\\n\" +\n+\t\t\t\t\t\"\\t\\tpublic Catalog createCatalog(\\n\" +\n+\t\t\t\t\t\"\\t\\t\\t\\tString name,\\n\" +\n+\t\t\t\t\t\"\\t\\t\\t\\tMap<String, String> properties) {\\n\" +\n+\t\t\t\t\t\"\\t\\t\\treturn new GenericInMemoryCatalog(name);\\n\" +\n+\t\t\t\t\t\"\\t\\t}\\n\" +\n+\t\t\t\t\t\"\\n\" +\n+\t\t\t\t\t\"\\t\\t@Override\\n\" +\n+\t\t\t\t\t\"\\t\\tpublic Map<String, String> requiredContext() {\\n\" +\n+\t\t\t\t\t\"\\t\\t\\tHashMap<String, String> hashMap = new HashMap<>();\\n\" +\n+\t\t\t\t\t\"\\t\\t\\thashMap.put(\\\"type\\\", \\\"userCatalog\\\");\\n\" +\n+\t\t\t\t\t\"\\t\\t\\treturn hashMap;\\n\" +\n+\t\t\t\t\t\"\\t\\t}\\n\" +\n+\t\t\t\t\t\"\\n\" +\n+\t\t\t\t\t\"\\t\\t@Override\\n\" +\n+\t\t\t\t\t\"\\t\\tpublic List<String> supportedProperties() {\\n\" +\n+\t\t\t\t\t\"\\t\\t\\treturn Collections.emptyList();\\n\" +\n+\t\t\t\t\t\"\\t\\t}\\n\" +\n+\t\t\t\t\t\"\\t}\"\n+\t\t\t).build();\n+\n+\t\ttry (TemporaryClassLoaderContext context = TemporaryClassLoaderContext.of(classLoader)) {", "originalCommit": "0691185bcfe408b32b0f61a2bb2313c04c69b0e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwNjk2Nw==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452106967", "bodyText": "I don't think so. The problem is the line in SqlToOperationConverter:557.\n\t\tfinal CatalogFactory factory =\n\t\t\tTableFactoryService.find(CatalogFactory.class, properties, this.getClass().getClassLoader());\n\nIt is using the class classloader, not the context classloader. I could've just changed that to use the context classloader, but I found it wrong that the catalog is instantiated in SqlToOperationConverter. Moreover it would not use the classloader provided in EnvironmentSettings in the future.", "author": "dawidwys", "createdAt": "2020-07-09T10:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMDQ2Ng==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452120466", "bodyText": "I can reproduce the exception after reverting the fixing changes.", "author": "wuchong", "createdAt": "2020-07-09T10:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMTMwNA==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452121304", "bodyText": "you are right.SqlToOperationConverter:557 is the root cause. I find the test case does not covert the full change path (not the whole commit), such as I remove the line in TableEnvironmentImpl#1052,\nfinal CatalogFactory factory = TableFactoryService.find(\n\t\t\t\tCatalogFactory.class,\n\t\t\t\tproperties);\n\nThe test case can also run successfully. Do we need build StreamExecutionEnvironmentImpl with user classloader directly to verify the change.", "author": "godfreyhe", "createdAt": "2020-07-09T10:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2MTIwNg==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452161206", "bodyText": "I see your point. Nevertheless your approach would not test a different code path. That the context classloader is used. This behaviour is important from the sql-client perspective.\nI lean slightly towards the current approach, as it uses only the user facing APIs. It tests what is expected in sql-client. Imo, a test that the classloader from EnvironmentSettings is used should be part of https://issues.apache.org/jira/browse/FLINK-15635\nWDYT?", "author": "dawidwys", "createdAt": "2020-07-09T11:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyNDUyMQ==", "url": "https://github.com/apache/flink/pull/12826#discussion_r452224521", "bodyText": "ok, let FLINK-15635 fully support this feature", "author": "godfreyhe", "createdAt": "2020-07-09T13:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMzM5MQ=="}], "type": "inlineReview"}]}