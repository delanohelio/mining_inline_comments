{"pr_number": 13694, "pr_title": "[FLINK-19720][table-api] Introduce new Providers and parallelism API", "pr_createdAt": "2020-10-20T03:14:53Z", "pr_url": "https://github.com/apache/flink/pull/13694", "timeline": [{"oid": "b0cb483b595e87bc1c44ca8c34fd2e6e6cd2ae0c", "url": "https://github.com/apache/flink/commit/b0cb483b595e87bc1c44ca8c34fd2e6e6cd2ae0c", "message": "[FLINK-19720][table-api] Introduce DataStream and Source Providers", "committedDate": "2020-10-20T03:01:42Z", "type": "commit"}, {"oid": "c92d927517014392d271509620f48ad81a1ffc5e", "url": "https://github.com/apache/flink/commit/c92d927517014392d271509620f48ad81a1ffc5e", "message": "Add parallelism", "committedDate": "2020-10-20T03:15:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5MzgxNg==", "url": "https://github.com/apache/flink/pull/13694#discussion_r508193816", "bodyText": "\"Defines the user specified parallelism for the sink.\" ?", "author": "wuchong", "createdAt": "2020-10-20T03:54:28Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "diffHunk": "@@ -73,6 +73,12 @@\n \t\t\t\"Uniquely identifies the connector of a dynamic table that is used for accessing data in \" +\n \t\t\t\"an external system. Its value is used during table source and table sink discovery.\");\n \n+\tpublic static final ConfigOption<Integer> SINK_PARALLELISM = ConfigOptions\n+\t\t\t.key(\"sink.parallelism\")\n+\t\t\t.intType()\n+\t\t\t.noDefaultValue()\n+\t\t\t.withDescription(\"Defines the user specified sink parallelism.\");", "originalCommit": "c92d927517014392d271509620f48ad81a1ffc5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5NDgxNw==", "url": "https://github.com/apache/flink/pull/13694#discussion_r508194817", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Now only works on {@code SinkFunctionProvider} and {@code OutputFormatProvider}.\n          \n          \n            \n             * \n          \n          \n            \n             * <p>Note: currently, it only supports to work with {@code SinkFunctionProvider} and {@code OutputFormatProvider}.", "author": "wuchong", "createdAt": "2020-10-20T03:58:24Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/ParallelismProvider.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.connector;\n+\n+import org.apache.flink.annotation.PublicEvolving;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Parallelism provider for connector providers.\n+ * Now only works on {@code SinkFunctionProvider} and {@code OutputFormatProvider}.", "originalCommit": "c92d927517014392d271509620f48ad81a1ffc5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "495d486e659d1e46bd6ca00c07b775102e0afab4", "url": "https://github.com/apache/flink/commit/495d486e659d1e46bd6ca00c07b775102e0afab4", "message": "Update flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/ParallelismProvider.java\n\nCo-authored-by: Jark Wu <imjark@gmail.com>", "committedDate": "2020-10-20T06:01:41Z", "type": "commit"}, {"oid": "74d6d03e5a7e19911d4c9d8465c9328458171c82", "url": "https://github.com/apache/flink/commit/74d6d03e5a7e19911d4c9d8465c9328458171c82", "message": "Address comment", "committedDate": "2020-10-20T06:05:06Z", "type": "commit"}, {"oid": "b27370c0eb53a5f4b0799763b57bd73f79b1e386", "url": "https://github.com/apache/flink/commit/b27370c0eb53a5f4b0799763b57bd73f79b1e386", "message": "checkstyle", "committedDate": "2020-10-20T06:05:49Z", "type": "commit"}, {"oid": "32dd70d47f901c7ce393852a890518b06bbb236b", "url": "https://github.com/apache/flink/commit/32dd70d47f901c7ce393852a890518b06bbb236b", "message": "checkstyle", "committedDate": "2020-10-20T08:03:34Z", "type": "commit"}, {"oid": "f31b6312ad11aa10b773528bda15c0ca9460c0d4", "url": "https://github.com/apache/flink/commit/f31b6312ad11aa10b773528bda15c0ca9460c0d4", "message": "Feedback from Timo", "committedDate": "2020-10-23T08:42:50Z", "type": "commit"}, {"oid": "8274ea7a5b5e122844b2635aab700f1f9d6d1a09", "url": "https://github.com/apache/flink/commit/8274ea7a5b5e122844b2635aab700f1f9d6d1a09", "message": "Make DataStreamSinkProvider returns DataStreamSink<?>", "committedDate": "2020-10-23T09:01:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc2ODIzMA==", "url": "https://github.com/apache/flink/pull/13694#discussion_r510768230", "bodyText": "+1 for this. This makes the responsibility of this interface more clear.", "author": "wuchong", "createdAt": "2020-10-23T09:49:16Z", "path": "flink-table/flink-table-api-java-bridge/src/main/java/org/apache/flink/table/connector/sink/DataStreamSinkProvider.java", "diffHunk": "@@ -24,16 +24,16 @@\n import org.apache.flink.table.data.RowData;\n \n /**\n- * Provider to consume a {@link DataStream} as a runtime implementation for\n- * {@link DynamicTableSink}.\n+ * Provider that consumes a Java {@link DataStream} as a runtime implementation for {@link DynamicTableSink}.\n  *\n- * <p>NOTE: This is only for advanced connector developers.\n+ * <p>Note: This provider is only meant for advanced connector developers. Usually, a sink should consist\n+ * of a single entity expressed via {@link OutputFormatProvider} or {@link SinkFunctionProvider}.", "originalCommit": "f31b6312ad11aa10b773528bda15c0ca9460c0d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}