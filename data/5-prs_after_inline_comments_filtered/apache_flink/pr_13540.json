{"pr_number": 13540, "pr_title": "[FLINK-19344] Fix DispatcherResourceCleanupTest race condition", "pr_createdAt": "2020-10-05T08:14:05Z", "pr_url": "https://github.com/apache/flink/pull/13540", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzMDc5Nw==", "url": "https://github.com/apache/flink/pull/13540#discussion_r499630797", "bodyText": "I would suggest to use a OneShotLatch.", "author": "tillrohrmann", "createdAt": "2020-10-05T14:15:06Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/TestingJobManagerRunner.java", "diffHunk": "@@ -39,6 +39,8 @@\n \n \tprivate final CompletableFuture<ArchivedExecutionGraph> resultFuture;\n \n+\tprivate final CompletableFuture<Void> closeAsyncCalledFuture = new CompletableFuture<>();", "originalCommit": "6650579aa244c53d76237be84b861224c451b4ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA==", "url": "https://github.com/apache/flink/pull/13540#discussion_r499636870", "bodyText": "I don't fully understand why this additional synchronization step is necessary. If I am not mistaken, then testingJobManagerRunner.completeResultFutureExceptionally won't trigger Dispatcher.jobNotFinished directly but at least it will enqueue the RunAsync message which will run this task into the mailbox of the Dispatcher. dispatcherGateway.submitJob should do the same just that the submit message is enqueued after the RunAsync message.\nCould you show me an execution order in which the submitJob RPC call is executed before the handleAsync (https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/Dispatcher.java#L374)?\nCould you reproduce the problem locally?", "author": "tillrohrmann", "createdAt": "2020-10-05T14:23:21Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherResourceCleanupTest.java", "diffHunk": "@@ -350,6 +350,10 @@ public void testJobSubmissionUnderSameJobId() throws Exception {\n \t\tfinal TestingJobManagerRunner testingJobManagerRunner = jobManagerRunnerFactory.takeCreatedJobManagerRunner();\n \t\ttestingJobManagerRunner.completeResultFutureExceptionally(new JobNotFinishedException(jobId));\n \n+\t\t// wait until termination JobManagerRunner closeAsync has been called.\n+\t\t// this is necessary to avoid race conditions with completion of the 1st job and the submission of the 2nd job (DuplicateJobSubmissionException).\n+\t\ttestingJobManagerRunner.getCloseAsyncCalledFuture().get();\n+", "originalCommit": "6650579aa244c53d76237be84b861224c451b4ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0MDYxMA==", "url": "https://github.com/apache/flink/pull/13540#discussion_r499640610", "bodyText": "I agree that relying on the fact that the testing main thread will enqueue the handleAsync payload before the submitJob is not a safe assumption. Hence, the fix should be fine. Still I would like to understand what exactly is going wrong here.", "author": "tillrohrmann", "createdAt": "2020-10-05T14:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwMDU5NA==", "url": "https://github.com/apache/flink/pull/13540#discussion_r500200594", "bodyText": "Thanks a lot for your review.\nThe DuplicateJobSubmissionException exception is thrown, because the same job is already in the  runningJobs list.\nI believe there is a race condition between the main thread executing the test and the dispatcher main thread:\n(dispatcher thread) As soon as the TestingJobManagerRunner has been created, it is offered to a queue in the TestingJobManagerRunnerFactory. The (main test thread) is waiting on the queue. The next step for this thread will be updating the DispatcherJob's status, and setting up a forward of the result future from the jobManagerRunner.\n(main test thread) the TestingJobManagerRunner is available now, so the thread can continue. The thread uses the TestingJobManagerRunner to complete the result future. The result future will be forwarded in DispatcherJob. However, if (dispatcher thread) is not fast enough in registering the forward, the main thread might manage to submit the 2nd job before (dispatcher thread) forwards the completion.\nI can reproduce the problem locally by introducing a sleep for 10 milliseconds after offering the TestingJobManagerRunner in the TestingJobManagerRunnerFactory. This will guarantee that the result forward setup is always happening too late.\nIn my opinion this test instability is purely an issue of the test, not the Dispatcher implementation.", "author": "rmetzger", "createdAt": "2020-10-06T11:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI3NTgxNg==", "url": "https://github.com/apache/flink/pull/13540#discussion_r500275816", "bodyText": "Thanks for the clarification @rmetzger. I believe that your analysis is correct.", "author": "tillrohrmann", "createdAt": "2020-10-06T13:28:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA=="}], "type": "inlineReview"}, {"oid": "7cee7879a71c349715ea5ab714c9c21dc46d211c", "url": "https://github.com/apache/flink/commit/7cee7879a71c349715ea5ab714c9c21dc46d211c", "message": "[FLINK-19344] Fix dispatcher cleanup test race condition", "committedDate": "2020-10-06T15:15:25Z", "type": "commit"}, {"oid": "8842d1927613cdcd09f4e6c671c9cb1dc671269e", "url": "https://github.com/apache/flink/commit/8842d1927613cdcd09f4e6c671c9cb1dc671269e", "message": "address PR comments: use OneShotLatch", "committedDate": "2020-10-06T15:20:18Z", "type": "commit"}, {"oid": "8842d1927613cdcd09f4e6c671c9cb1dc671269e", "url": "https://github.com/apache/flink/commit/8842d1927613cdcd09f4e6c671c9cb1dc671269e", "message": "address PR comments: use OneShotLatch", "committedDate": "2020-10-06T15:20:18Z", "type": "forcePushed"}]}