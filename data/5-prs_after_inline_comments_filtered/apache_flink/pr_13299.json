{"pr_number": 13299, "pr_title": "[FLINK-19072][table-planner] Import Temporal Table join rule for Stream", "pr_createdAt": "2020-09-01T12:54:12Z", "pr_url": "https://github.com/apache/flink/pull/13299", "timeline": [{"oid": "2ed16425d7018bbb39be1edd6519fcb99cb45000", "url": "https://github.com/apache/flink/commit/2ed16425d7018bbb39be1edd6519fcb99cb45000", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition", "committedDate": "2020-09-01T15:33:24Z", "type": "forcePushed"}, {"oid": "ade459ff295c6994b7d6d377674e02d668faee71", "url": "https://github.com/apache/flink/commit/ade459ff295c6994b7d6d377674e02d668faee71", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition", "committedDate": "2020-09-02T06:57:23Z", "type": "forcePushed"}, {"oid": "8928b195cdec50dee6df1e364df250c9283d0af7", "url": "https://github.com/apache/flink/commit/8928b195cdec50dee6df1e364df250c9283d0af7", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition", "committedDate": "2020-09-23T13:38:20Z", "type": "forcePushed"}, {"oid": "1b5a16ff124bb762352c8f31305ea3d3fcf4b694", "url": "https://github.com/apache/flink/commit/1b5a16ff124bb762352c8f31305ea3d3fcf4b694", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition for stream", "committedDate": "2020-09-28T08:53:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MzAxMw==", "url": "https://github.com/apache/flink/pull/13299#discussion_r495893013", "bodyText": "LegacyTemporalProcessTimeJoinOperator and TemporalProcessTimeJoinOperator is almost same, can we reuse them ?", "author": "godfreyhe", "createdAt": "2020-09-28T12:15:31Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/join/temporal/LegacyTemporalProcessTimeJoinOperator.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.join.temporal;\n+\n+import org.apache.flink.api.common.functions.util.FunctionUtils;\n+import org.apache.flink.api.common.state.ValueState;\n+import org.apache.flink.api.common.state.ValueStateDescriptor;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.runtime.state.VoidNamespace;\n+import org.apache.flink.streaming.api.operators.InternalTimer;\n+import org.apache.flink.streaming.api.operators.TimestampedCollector;\n+import org.apache.flink.streaming.api.watermark.Watermark;\n+import org.apache.flink.streaming.runtime.streamrecord.StreamRecord;\n+import org.apache.flink.table.data.JoinedRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.util.RowDataUtil;\n+import org.apache.flink.table.runtime.generated.GeneratedJoinCondition;\n+import org.apache.flink.table.runtime.generated.JoinCondition;\n+import org.apache.flink.table.runtime.typeutils.InternalTypeInfo;\n+\n+/**\n+ * The operator to temporal join a stream on processing time.\n+ */\n+public class LegacyTemporalProcessTimeJoinOperator", "originalCommit": "61ab18c9e4012d0c65d64c2456af0900577b90db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MzExNQ==", "url": "https://github.com/apache/flink/pull/13299#discussion_r495893115", "bodyText": "ditto", "author": "godfreyhe", "createdAt": "2020-09-28T12:15:44Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/join/temporal/LegacyTemporalRowTimeJoinOperator.java", "diffHunk": "@@ -0,0 +1,404 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.join.temporal;\n+\n+import org.apache.flink.api.common.state.MapState;\n+import org.apache.flink.api.common.state.MapStateDescriptor;\n+import org.apache.flink.api.common.state.ValueState;\n+import org.apache.flink.api.common.state.ValueStateDescriptor;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.runtime.state.VoidNamespace;\n+import org.apache.flink.runtime.state.VoidNamespaceSerializer;\n+import org.apache.flink.streaming.api.operators.InternalTimer;\n+import org.apache.flink.streaming.api.operators.InternalTimerService;\n+import org.apache.flink.streaming.api.operators.TimestampedCollector;\n+import org.apache.flink.streaming.runtime.streamrecord.StreamRecord;\n+import org.apache.flink.table.data.JoinedRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.util.RowDataUtil;\n+import org.apache.flink.table.runtime.generated.GeneratedJoinCondition;\n+import org.apache.flink.table.runtime.generated.JoinCondition;\n+import org.apache.flink.table.runtime.typeutils.InternalTypeInfo;\n+import org.apache.flink.types.RowKind;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * This operator works by keeping on the state collection of probe and build records to process\n+ * on next watermark. The idea is that between watermarks we are collecting those elements\n+ * and once we are sure that there will be no updates we emit the correct result and clean up the\n+ * state.\n+ *\n+ * <p>Cleaning up the state drops all of the \"old\" values from the probe side, where \"old\" is defined\n+ * as older then the current watermark. Build side is also cleaned up in the similar fashion,\n+ * however we always keep at least one record - the latest one - even if it's past the last\n+ * watermark.\n+ *\n+ * <p>One more trick is how the emitting results and cleaning up is triggered. It is achieved\n+ * by registering timers for the keys. We could register a timer for every probe and build\n+ * side element's event time (when watermark exceeds this timer, that's when we are emitting and/or\n+ * cleaning up the state). However this would cause huge number of registered timers. For example\n+ * with following evenTimes of probe records accumulated: {1, 2, 5, 8, 9}, if we\n+ * had received Watermark(10), it would trigger 5 separate timers for the same key. To avoid that\n+ * we always keep only one single registered timer for any given key, registered for the minimal\n+ * value. Upon triggering it, we process all records with event times older then or equal to\n+ * currentWatermark.\n+ */\n+public class LegacyTemporalRowTimeJoinOperator", "originalCommit": "61ab18c9e4012d0c65d64c2456af0900577b90db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0e40b37f7993240764dce3280c9c59d5b0b6e75", "url": "https://github.com/apache/flink/commit/b0e40b37f7993240764dce3280c9c59d5b0b6e75", "message": "add tests", "committedDate": "2020-10-14T10:37:15Z", "type": "forcePushed"}, {"oid": "e7f001da22368aed31002c28199b4f97d2a2b63b", "url": "https://github.com/apache/flink/commit/e7f001da22368aed31002c28199b4f97d2a2b63b", "message": "add more tests", "committedDate": "2020-10-14T16:22:09Z", "type": "forcePushed"}, {"oid": "9027c8cf3a5619d28f2d1c1a0076a37a4ca9b15d", "url": "https://github.com/apache/flink/commit/9027c8cf3a5619d28f2d1c1a0076a37a4ca9b15d", "message": "add more tests(changelogmode tests)", "committedDate": "2020-10-15T02:08:45Z", "type": "forcePushed"}, {"oid": "55acd8f52fd5df5316efd04068754cdeca4d612f", "url": "https://github.com/apache/flink/commit/55acd8f52fd5df5316efd04068754cdeca4d612f", "message": "add more tests(changelogmode tests)", "committedDate": "2020-10-15T02:46:23Z", "type": "forcePushed"}, {"oid": "bb79e997201a60f34a935ee41905bbbb3969d6e8", "url": "https://github.com/apache/flink/commit/bb79e997201a60f34a935ee41905bbbb3969d6e8", "message": "[FLINK-19072][table-planner] Import Temporal Table join rule for stream", "committedDate": "2020-10-15T13:48:37Z", "type": "commit"}, {"oid": "a4175b42f65fec599c2821e33bce595b07cd8083", "url": "https://github.com/apache/flink/commit/a4175b42f65fec599c2821e33bce595b07cd8083", "message": "[FLINK-19073][table-planner] Imporve streamExecTemporalJoinRule for stream", "committedDate": "2020-10-15T13:49:08Z", "type": "commit"}, {"oid": "b8a59c245c0a51245ff397591222a26a473135ea", "url": "https://github.com/apache/flink/commit/b8a59c245c0a51245ff397591222a26a473135ea", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition for stream", "committedDate": "2020-10-15T13:50:07Z", "type": "commit"}, {"oid": "b8a59c245c0a51245ff397591222a26a473135ea", "url": "https://github.com/apache/flink/commit/b8a59c245c0a51245ff397591222a26a473135ea", "message": "[FLINK-19076][table-planner] Import rule to deal Temporal Join condition for stream", "committedDate": "2020-10-15T13:50:07Z", "type": "forcePushed"}]}