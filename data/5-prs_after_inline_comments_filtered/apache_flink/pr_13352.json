{"pr_number": 13352, "pr_title": "[FLINK-19092][sql-parser] Parse comment on computed column failed", "pr_createdAt": "2020-09-08T09:51:51Z", "pr_url": "https://github.com/apache/flink/pull/13352", "timeline": [{"oid": "d06dbcd04a611f3adfa2812668a13195f65237fd", "url": "https://github.com/apache/flink/commit/d06dbcd04a611f3adfa2812668a13195f65237fd", "message": "[FLINK-19092][sql-parser] Parse comment on computed column failed", "committedDate": "2020-09-08T09:37:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3MDIwOA==", "url": "https://github.com/apache/flink/pull/13352#discussion_r484870208", "bodyText": "Can we merge this class into SqlTableColumn ? Just like what we do in schema TableColumn.", "author": "danny0405", "createdAt": "2020-09-08T12:16:54Z", "path": "flink-table/flink-sql-parser/src/main/java/org/apache/flink/sql/parser/ddl/SqlTableComputedColumn.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.sql.parser.ddl;\n+\n+import org.apache.calcite.sql.SqlCall;\n+import org.apache.calcite.sql.SqlCharStringLiteral;\n+import org.apache.calcite.sql.SqlKind;\n+import org.apache.calcite.sql.SqlNode;\n+import org.apache.calcite.sql.SqlOperator;\n+import org.apache.calcite.sql.SqlSpecialOperator;\n+import org.apache.calcite.sql.SqlWriter;\n+import org.apache.calcite.sql.parser.SqlParserPos;\n+import org.apache.calcite.util.ImmutableNullableList;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+/**\n+ * Table computed column of a CREATE TABLE DDL.\n+ */\n+public class SqlTableComputedColumn extends SqlCall {\n+\tprivate static final SqlSpecialOperator OPERATOR =\n+\t\tnew SqlSpecialOperator(\"COLUMN_DECL\", SqlKind.COLUMN_DECL);\n+\n+\tprivate SqlNode identifier;\n+\tprivate SqlNode expr;\n+\tprivate SqlCharStringLiteral comment;\n+\n+\tpublic SqlTableComputedColumn(SqlNode identifier, SqlNode expr, @Nullable SqlCharStringLiteral comment, SqlParserPos pos) {\n+\t\tsuper(pos);\n+\t\tthis.identifier = requireNonNull(identifier, \"Column identifier should not be null\");\n+\t\tthis.expr = requireNonNull(expr, \"Column expression should not be null\");\n+\t\tthis.comment = comment;\n+\t}\n+", "originalCommit": "d06dbcd04a611f3adfa2812668a13195f65237fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MTkxNA==", "url": "https://github.com/apache/flink/pull/13352#discussion_r485651914", "bodyText": "@danny0405 Yes, I have already merged SqlTableComputedColumn into SqlTableColumn. Please review this pull request again.", "author": "SteNicholas", "createdAt": "2020-09-09T14:22:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3MDIwOA=="}], "type": "inlineReview"}, {"oid": "800d23e1a95bee277aa2dce51c0625901fae92ca", "url": "https://github.com/apache/flink/commit/800d23e1a95bee277aa2dce51c0625901fae92ca", "message": "[FLINK-19092][sql-parser] Parse comment on computed column failed", "committedDate": "2020-09-09T14:12:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0NDgxNA==", "url": "https://github.com/apache/flink/pull/13352#discussion_r486044814", "bodyText": "Can be isGenerated to be synced with TableColumn\nreturn expr != null; is enough", "author": "danny0405", "createdAt": "2020-09-10T03:44:05Z", "path": "flink-table/flink-sql-parser/src/main/java/org/apache/flink/sql/parser/ddl/SqlTableColumn.java", "diffHunk": "@@ -65,34 +67,55 @@ public SqlTableColumn(SqlIdentifier name,\n \t\tthis.comment = comment;\n \t}\n \n+\tpublic SqlTableColumn(SqlIdentifier name,\n+\t\t\tSqlNode expr,\n+\t\t\t@Nullable SqlCharStringLiteral comment,\n+\t\t\tSqlParserPos pos) {\n+\t\tsuper(pos);\n+\t\tthis.name = requireNonNull(name, \"Column name should not be null\");\n+\t\tthis.expr = requireNonNull(expr, \"Column expression should not be null\");\n+\t\tthis.comment = comment;\n+\t}\n+\n \t@Override\n \tpublic SqlOperator getOperator() {\n \t\treturn OPERATOR;\n \t}\n \n \t@Override\n \tpublic List<SqlNode> getOperandList() {\n-\t\treturn ImmutableNullableList.of(name, type, comment);\n+\t\treturn isComputed() ?\n+\t\t\tImmutableNullableList.of(name, expr, comment) :\n+\t\t\tImmutableNullableList.of(name, type, comment);\n \t}\n \n \t@Override\n \tpublic void unparse(SqlWriter writer, int leftPrec, int rightPrec) {\n \t\tthis.name.unparse(writer, leftPrec, rightPrec);\n-\t\twriter.print(\" \");\n-\t\tthis.type.unparse(writer, leftPrec, rightPrec);\n-\t\tif (!this.type.getNullable()) {\n-\t\t\t// Default is nullable.\n-\t\t\twriter.keyword(\"NOT NULL\");\n-\t\t}\n-\t\tif (this.constraint != null) {\n-\t\t\tthis.constraint.unparse(writer, leftPrec, rightPrec);\n+\t\tif (isComputed()) {\n+\t\t\twriter.keyword(\"AS\");\n+\t\t\tthis.expr.unparse(writer, leftPrec, rightPrec);\n+\t\t} else {\n+\t\t\twriter.print(\" \");\n+\t\t\tthis.type.unparse(writer, leftPrec, rightPrec);\n+\t\t\tif (!this.type.getNullable()) {\n+\t\t\t\t// Default is nullable.\n+\t\t\t\twriter.keyword(\"NOT NULL\");\n+\t\t\t}\n+\t\t\tif (this.constraint != null) {\n+\t\t\t\tthis.constraint.unparse(writer, leftPrec, rightPrec);\n+\t\t\t}\n \t\t}\n \t\tif (this.comment != null) {\n \t\t\twriter.print(\" COMMENT \");\n \t\t\tthis.comment.unparse(writer, leftPrec, rightPrec);\n \t\t}\n \t}\n \n+\tpublic boolean isComputed() {\n+\t\treturn type == null && expr != null;\n+\t}", "originalCommit": "800d23e1a95bee277aa2dce51c0625901fae92ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d9345a586435c7b1efb8aa8ffe210d659bd01c3b", "url": "https://github.com/apache/flink/commit/d9345a586435c7b1efb8aa8ffe210d659bd01c3b", "message": "[FLINK-19092][sql-parser] Parse comment on computed column failed", "committedDate": "2020-09-10T07:13:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2MTg1MQ==", "url": "https://github.com/apache/flink/pull/13352#discussion_r486161851", "bodyText": "Better to return Optional<SqlNode> to keep consistent with other nullable methods.", "author": "wuchong", "createdAt": "2020-09-10T08:32:25Z", "path": "flink-table/flink-sql-parser/src/main/java/org/apache/flink/sql/parser/ddl/SqlTableColumn.java", "diffHunk": "@@ -109,6 +137,14 @@ public void setType(SqlDataTypeSpec type) {\n \t\tthis.type = type;\n \t}\n \n+\tpublic SqlNode getExpr() {", "originalCommit": "d9345a586435c7b1efb8aa8ffe210d659bd01c3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2MTk3MQ==", "url": "https://github.com/apache/flink/pull/13352#discussion_r486161971", "bodyText": "This is never used?", "author": "wuchong", "createdAt": "2020-09-10T08:32:35Z", "path": "flink-table/flink-sql-parser/src/main/java/org/apache/flink/sql/parser/ddl/SqlTableColumn.java", "diffHunk": "@@ -109,6 +137,14 @@ public void setType(SqlDataTypeSpec type) {\n \t\tthis.type = type;\n \t}\n \n+\tpublic SqlNode getExpr() {\n+\t\treturn expr;\n+\t}\n+\n+\tpublic void setExpr(SqlNode expr) {", "originalCommit": "d9345a586435c7b1efb8aa8ffe210d659bd01c3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7074c013502a3b3d966e102bfdbc164cb3ba6ef1", "url": "https://github.com/apache/flink/commit/7074c013502a3b3d966e102bfdbc164cb3ba6ef1", "message": "[FLINK-19092][sql-parser] Parse comment on computed column failed", "committedDate": "2020-09-10T09:43:38Z", "type": "commit"}]}