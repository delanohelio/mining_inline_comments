{"pr_number": 11012, "pr_title": "[FLINK-15858][hive] Store generic table schema as properties", "pr_createdAt": "2020-02-04T06:57:31Z", "pr_url": "https://github.com/apache/flink/pull/11012", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTgzNw==", "url": "https://github.com/apache/flink/pull/11012#discussion_r374505837", "bodyText": "For compatibility issue, should throw exception now.", "author": "JingsongLi", "createdAt": "2020-02-04T07:16:18Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -587,57 +599,67 @@ protected static Table instantiateHiveTable(ObjectPath tablePath, CatalogBaseTab\n \t\t// When creating a table, A hive table needs explicitly have a key is_generic = false\n \t\t// otherwise, this is a generic table if 1) the key is missing 2) is_generic = true\n \t\t// this is opposite to reading a table and instantiating a CatalogTable. See instantiateCatalogTable()\n+\t\tboolean isGeneric;\n \t\tif (!properties.containsKey(CatalogConfig.IS_GENERIC)) {\n-\t\t\t// must be a generic catalog\n+\t\t\t// must be a generic table\n+\t\t\tisGeneric = true;\n \t\t\tproperties.put(CatalogConfig.IS_GENERIC, String.valueOf(true));\n-\t\t\tproperties = maskFlinkProperties(properties);\n \t\t} else {\n-\t\t\tboolean isGeneric = Boolean.valueOf(properties.get(CatalogConfig.IS_GENERIC));\n-\n-\t\t\tif (isGeneric) {\n-\t\t\t\tproperties = maskFlinkProperties(properties);\n-\t\t\t}\n+\t\t\tisGeneric = Boolean.parseBoolean(properties.get(CatalogConfig.IS_GENERIC));\n \t\t}\n \n-\t\t// Table properties\n-\t\thiveTable.setParameters(properties);\n-\n \t\t// Hive table's StorageDescriptor\n \t\tStorageDescriptor sd = hiveTable.getSd();\n \t\tsetStorageFormat(sd, properties);\n \n-\t\tList<FieldSchema> allColumns = HiveTableUtil.createHiveColumns(table.getSchema());\n-\n-\t\t// Table columns and partition keys\n-\t\tif (table instanceof CatalogTableImpl) {\n-\t\t\tCatalogTable catalogTable = (CatalogTableImpl) table;\n-\n-\t\t\tif (catalogTable.isPartitioned()) {\n-\t\t\t\tint partitionKeySize = catalogTable.getPartitionKeys().size();\n-\t\t\t\tList<FieldSchema> regularColumns = allColumns.subList(0, allColumns.size() - partitionKeySize);\n-\t\t\t\tList<FieldSchema> partitionColumns = allColumns.subList(allColumns.size() - partitionKeySize, allColumns.size());\n+\t\tif (isGeneric) {\n+\t\t\tDescriptorProperties tableSchemaProps = new DescriptorProperties(true);\n+\t\t\ttableSchemaProps.putTableSchema(HiveCatalogConfig.GENERIC_TABLE_SCHEMA_PREFIX, table.getSchema());\n+\t\t\tproperties.putAll(tableSchemaProps.asMap());\n+\n+\t\t\tif (table instanceof CatalogTableImpl) {\n+\t\t\t\tList<String> partColNames = ((CatalogTableImpl) table).getPartitionKeys();\n+\t\t\t\tif (!partColNames.isEmpty()) {\n+\t\t\t\t\tproperties.put(HiveCatalogConfig.GENERIC_PART_COL_NAMES, String.join(\",\", partColNames));", "originalCommit": "df658c89289171ef60b8939090fd53982ce46061", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUxMjk5NQ==", "url": "https://github.com/apache/flink/pull/11012#discussion_r374512995", "bodyText": "We don't need support partition for generic table. And this serialization maybe not right.\nWe should wait #10059", "author": "JingsongLi", "createdAt": "2020-02-04T07:39:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0NTY5Ng==", "url": "https://github.com/apache/flink/pull/11012#discussion_r374545696", "bodyText": "OK I'll create another JIRA to track that.", "author": "lirui-apache", "createdAt": "2020-02-04T09:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNjE2Mw==", "url": "https://github.com/apache/flink/pull/11012#discussion_r374506163", "bodyText": "consistent with CatalogConfig.FLINK_PROPERTY_PREFIX?", "author": "JingsongLi", "createdAt": "2020-02-04T07:17:23Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalogConfig.java", "diffHunk": "@@ -32,4 +32,9 @@\n \n \t// Partition related configs\n \tpublic static final String PARTITION_LOCATION = \"partition.location\";\n+\n+\t// config prefix for the table schema of a generic table\n+\tpublic static final String GENERIC_TABLE_SCHEMA_PREFIX = \"generic.table.schema\";", "originalCommit": "df658c89289171ef60b8939090fd53982ce46061", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUxMDUxMQ==", "url": "https://github.com/apache/flink/pull/11012#discussion_r374510511", "bodyText": "CatalogConfig.FLINK_PROPERTY_PREFIX will be added to all the Flink properties. So we'll have sth like flink.generic.table.schema.0... and flink.generic.table.schema.1... in the final table properties.", "author": "lirui-apache", "createdAt": "2020-02-04T07:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNjE2Mw=="}], "type": "inlineReview"}, {"oid": "28e964e959d71315532e7f9ce57034e3f736d9f4", "url": "https://github.com/apache/flink/commit/28e964e959d71315532e7f9ce57034e3f736d9f4", "message": "[FLINK-15858][hive] Store generic table schema as properties", "committedDate": "2020-02-05T01:31:51Z", "type": "commit"}, {"oid": "0d8b959225a2e800689e829c88b406ae357e2732", "url": "https://github.com/apache/flink/commit/0d8b959225a2e800689e829c88b406ae357e2732", "message": "don't support generic partitioned table in HiveCatalog", "committedDate": "2020-02-05T01:31:51Z", "type": "commit"}, {"oid": "a0a903f95212da071f39bba248900ce6e1b3f3a2", "url": "https://github.com/apache/flink/commit/a0a903f95212da071f39bba248900ce6e1b3f3a2", "message": "update UT and doc", "committedDate": "2020-02-05T02:38:39Z", "type": "commit"}, {"oid": "a0a903f95212da071f39bba248900ce6e1b3f3a2", "url": "https://github.com/apache/flink/commit/a0a903f95212da071f39bba248900ce6e1b3f3a2", "message": "update UT and doc", "committedDate": "2020-02-05T02:38:39Z", "type": "forcePushed"}, {"oid": "b04ce5c7f696686449f706ee475347cd9d5280e5", "url": "https://github.com/apache/flink/commit/b04ce5c7f696686449f706ee475347cd9d5280e5", "message": "add IT case", "committedDate": "2020-02-05T03:49:05Z", "type": "commit"}]}