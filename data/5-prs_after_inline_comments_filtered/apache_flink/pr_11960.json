{"pr_number": 11960, "pr_title": "[FLINK-12717][python] Add windows support for PyFlink", "pr_createdAt": "2020-04-30T11:37:20Z", "pr_url": "https://github.com/apache/flink/pull/11960", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxNjMwMQ==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420516301", "bodyText": "What's the purpose of this change", "author": "dianfu", "createdAt": "2020-05-06T02:41:07Z", "path": "flink-python/src/main/java/org/apache/flink/streaming/api/operators/python/AbstractPythonFunctionOperator.java", "diffHunk": "@@ -159,7 +159,14 @@ public void open() throws Exception {\n \t@Override\n \tpublic void close() throws Exception {\n \t\ttry {\n-\t\t\tinvokeFinishBundle();\n+\t\t\ttry {", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxODM0Mw==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420518343", "bodyText": "Why this program cannot depend on other dependencies?\nOperatingSystem.isWindows() cannot also be used?", "author": "dianfu", "createdAt": "2020-05-06T02:50:27Z", "path": "flink-python/src/main/java/org/apache/flink/python/util/ResourceUtil.java", "diffHunk": "@@ -29,10 +29,17 @@\n  */\n public class ResourceUtil {\n \n-\tpublic static final String PYFLINK_UDF_RUNNER = \"pyflink-udf-runner.sh\";\n+\tpublic static final String PYFLINK_UDF_RUNNER_SH = \"pyflink-udf-runner.sh\";\n+\tpublic static final String PYFLINK_UDF_RUNNER_BAT = \"pyflink-udf-runner.bat\";\n \n \tpublic static File extractUdfRunner(String tmpdir) throws IOException, InterruptedException {\n-\t\tFile file = new File(tmpdir, PYFLINK_UDF_RUNNER);\n+\t\tFile file;\n+\t\t// This program can not depend any other dependencies, so we check the operating system without any utils.", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxOTgzNg==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420519836", "bodyText": "why we need to print the log from boot log?", "author": "dianfu", "createdAt": "2020-05-06T02:56:57Z", "path": "flink-python/src/main/java/org/apache/flink/python/env/ProcessPythonEnvironmentManager.java", "diffHunk": "@@ -127,20 +130,36 @@ public void open() throws Exception {\n \t}\n \n \t@Override\n-\tpublic void close() {\n-\t\tFileUtils.deleteDirectoryQuietly(new File(baseDirectory));\n-\t\tif (shutdownHook != null) {\n-\t\t\tShutdownHookUtil.removeShutdownHook(\n-\t\t\t\tshutdownHook, ProcessPythonEnvironmentManager.class.getSimpleName(), LOG);\n-\t\t\tshutdownHook = null;\n+\tpublic void close() throws Exception {\n+\t\ttry {\n+\t\t\tint i = 0;\n+\t\t\twhile (i < CHECK_TIMEOUT / CHECK_INTERVAL) {\n+\t\t\t\ttry {\n+\t\t\t\t\ti++;\n+\t\t\t\t\tFileUtils.deleteDirectory(new File(baseDirectory));\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tif (i == CHECK_TIMEOUT / CHECK_INTERVAL) {\n+\t\t\t\t\t\tLOG.error(\"Clean the temporary directory of Python UDF worker failed.\", t);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tThread.sleep(CHECK_INTERVAL);\n+\t\t\t}\n+\t\t} finally {\n+\t\t\tif (shutdownHook != null) {\n+\t\t\t\tShutdownHookUtil.removeShutdownHook(\n+\t\t\t\t\tshutdownHook, ProcessPythonEnvironmentManager.class.getSimpleName(), LOG);\n+\t\t\t\tshutdownHook = null;\n+\t\t\t}\n+\t\t\tLOG.info(\"Python environment manager is closing. Now print the content of boot log:\\n\" + getBootLog());", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNTU3OA==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420525578", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\twhile (i < CHECK_TIMEOUT / CHECK_INTERVAL) {\n          \n          \n            \n            \t\t\tint retries = 0;\n          \n          \n            \n            \t\t\twhile (true) {\n          \n          \n            \n            \t\t\t    try {\n          \n          \n            \n            \t\t\t       FileUtils.deleteDirectory(new File(baseDirectory));\n          \n          \n            \n            \t\t\t       break;\n          \n          \n            \n            \t\t\t    } catch (Throwable t) {\n          \n          \n            \n            \t\t\t       retries++;\n          \n          \n            \n            \t\t\t       if (retries <= CHECK_TIMEOUT / CHECK_INTERVAL) {\n          \n          \n            \n            \t\t\t         LOG.warning(\"Failed to delete the working directory {} of the Python UDF worker. Retrying...\", baseDirectory, t);\n          \n          \n            \n            \t\t\t       } else {\n          \n          \n            \n            \t\t\t          LOG.warning(\"Failed to delete the working directory {} of the Python UDF worker.\", baseDirectory, t);\n          \n          \n            \n            \t\t\t          break;\n          \n          \n            \n            \t\t\t       }\n          \n          \n            \n            \t\t\t    }\n          \n          \n            \n            \t\t\t}", "author": "dianfu", "createdAt": "2020-05-06T03:25:32Z", "path": "flink-python/src/main/java/org/apache/flink/python/env/ProcessPythonEnvironmentManager.java", "diffHunk": "@@ -127,20 +130,36 @@ public void open() throws Exception {\n \t}\n \n \t@Override\n-\tpublic void close() {\n-\t\tFileUtils.deleteDirectoryQuietly(new File(baseDirectory));\n-\t\tif (shutdownHook != null) {\n-\t\t\tShutdownHookUtil.removeShutdownHook(\n-\t\t\t\tshutdownHook, ProcessPythonEnvironmentManager.class.getSimpleName(), LOG);\n-\t\t\tshutdownHook = null;\n+\tpublic void close() throws Exception {\n+\t\ttry {\n+\t\t\tint i = 0;\n+\t\t\twhile (i < CHECK_TIMEOUT / CHECK_INTERVAL) {", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjAzOA==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420526038", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString pythonWorkerCommand = String.join(File.separator, baseDirectory, runnerScript.getName());\n          \n          \n            \n            \t\tString pythonWorkerCommand = runnerScript.getPath();\n          \n      \n    \n    \n  \n\nBesides, the variable pythonWorkerCommand could be removed.", "author": "dianfu", "createdAt": "2020-05-06T03:27:47Z", "path": "flink-python/src/main/java/org/apache/flink/python/env/ProcessPythonEnvironmentManager.java", "diffHunk": "@@ -127,20 +130,36 @@ public void open() throws Exception {\n \t}\n \n \t@Override\n-\tpublic void close() {\n-\t\tFileUtils.deleteDirectoryQuietly(new File(baseDirectory));\n-\t\tif (shutdownHook != null) {\n-\t\t\tShutdownHookUtil.removeShutdownHook(\n-\t\t\t\tshutdownHook, ProcessPythonEnvironmentManager.class.getSimpleName(), LOG);\n-\t\t\tshutdownHook = null;\n+\tpublic void close() throws Exception {\n+\t\ttry {\n+\t\t\tint i = 0;\n+\t\t\twhile (i < CHECK_TIMEOUT / CHECK_INTERVAL) {\n+\t\t\t\ttry {\n+\t\t\t\t\ti++;\n+\t\t\t\t\tFileUtils.deleteDirectory(new File(baseDirectory));\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tif (i == CHECK_TIMEOUT / CHECK_INTERVAL) {\n+\t\t\t\t\t\tLOG.error(\"Clean the temporary directory of Python UDF worker failed.\", t);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tThread.sleep(CHECK_INTERVAL);\n+\t\t\t}\n+\t\t} finally {\n+\t\t\tif (shutdownHook != null) {\n+\t\t\t\tShutdownHookUtil.removeShutdownHook(\n+\t\t\t\t\tshutdownHook, ProcessPythonEnvironmentManager.class.getSimpleName(), LOG);\n+\t\t\t\tshutdownHook = null;\n+\t\t\t}\n+\t\t\tLOG.info(\"Python environment manager is closing. Now print the content of boot log:\\n\" + getBootLog());\n \t\t}\n \t}\n \n \t@Override\n \tpublic RunnerApi.Environment createEnvironment() throws IOException, InterruptedException {\n \t\tMap<String, String> env = constructEnvironmentVariables();\n-\t\tResourceUtil.extractUdfRunner(baseDirectory);\n-\t\tString pythonWorkerCommand = String.join(File.separator, baseDirectory, \"pyflink-udf-runner.sh\");\n+\t\tFile runnerScript = ResourceUtil.extractUdfRunner(baseDirectory);\n+\t\tString pythonWorkerCommand = String.join(File.separator, baseDirectory, runnerScript.getName());", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjMzNg==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420526336", "bodyText": "this method is not used", "author": "dianfu", "createdAt": "2020-05-06T03:29:13Z", "path": "flink-python/src/main/java/org/apache/flink/python/env/ProcessPythonEnvironmentManager.java", "diffHunk": "@@ -288,6 +307,10 @@ private void constructRequirementsDirectory(Map<String, String> env) throws IOEx\n \t\t}\n \t}\n \n+\tprivate String getKillWorkerScriptPath() {", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjg5OQ==", "url": "https://github.com/apache/flink/pull/11960#discussion_r420526899", "bodyText": "I'm not sure why this doesn't work in windows?", "author": "dianfu", "createdAt": "2020-05-06T03:31:42Z", "path": "flink-python/src/main/java/org/apache/flink/client/python/PythonGatewayServer.java", "diffHunk": "@@ -71,15 +75,42 @@ public static void main(String[] args) throws IOException, ExecutionException, I\n \t\t}\n \n \t\ttry {\n-\t\t\t// Exit on EOF or broken pipe.  This ensures that the server dies\n-\t\t\t// if its parent program dies.\n-\t\t\twhile (System.in.read() != -1) {", "originalCommit": "a283855e4c5042bec925a05e15727ab2db71bd1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwMzM1MQ==", "url": "https://github.com/apache/flink/pull/11960#discussion_r421203351", "bodyText": "In windows, the System.in.read() always returns -1 and returns immediately.", "author": "WeiZhong94", "createdAt": "2020-05-07T02:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjg5OQ=="}], "type": "inlineReview"}, {"oid": "6c9c6d4f1ad70f5911f3e58461b8fb3be975df85", "url": "https://github.com/apache/flink/commit/6c9c6d4f1ad70f5911f3e58461b8fb3be975df85", "message": "[FLINK-12717][python] Support running PyFlink on Windows", "committedDate": "2020-05-07T02:28:55Z", "type": "commit"}, {"oid": "6c9c6d4f1ad70f5911f3e58461b8fb3be975df85", "url": "https://github.com/apache/flink/commit/6c9c6d4f1ad70f5911f3e58461b8fb3be975df85", "message": "[FLINK-12717][python] Support running PyFlink on Windows", "committedDate": "2020-05-07T02:28:55Z", "type": "forcePushed"}, {"oid": "50a650b6352ffcbdfb920158a5f21b984a734e18", "url": "https://github.com/apache/flink/commit/50a650b6352ffcbdfb920158a5f21b984a734e18", "message": "address comments and fix test failure", "committedDate": "2020-05-07T06:39:40Z", "type": "commit"}]}