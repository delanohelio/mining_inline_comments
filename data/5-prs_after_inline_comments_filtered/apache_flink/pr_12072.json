{"pr_number": 12072, "pr_title": "[FLINK-17315][tests/checkpointing] Reenabling UnalignedCheckpointITCase.", "pr_createdAt": "2020-05-11T07:15:08Z", "pr_url": "https://github.com/apache/flink/pull/12072", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg1NDc1Mg==", "url": "https://github.com/apache/flink/pull/12072#discussion_r422854752", "bodyText": "I guess the reason of not using Optional.flatMap was IOException thrown from RecordDeserializer.getUnconsumedBuffer.\nThe root cause of that IOException is DataOutputSerializer wrapping with it OOMs and RuntimeExceptions.\nSince the resulting IOException is never recovered or analyzed and originally it's RuntimeException I'd consider wrap IOException and use flatMap.", "author": "rkhachatryan", "createdAt": "2020-05-11T08:00:29Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInput.java", "diffHunk": "@@ -210,12 +210,15 @@ public int getInputIndex() {\n \t\t\tfinal InputChannel channel = checkpointedInputGate.getChannel(channelIndex);\n \n \t\t\t// Assumption for retrieving buffers = one concurrent checkpoint\n-\t\t\trecordDeserializers[channelIndex].getUnconsumedBuffer().ifPresent(buffer ->\n-\t\t\t\tchannelStateWriter.addInputData(\n-\t\t\t\t\tcheckpointId,\n-\t\t\t\t\tchannel.getChannelInfo(),\n-\t\t\t\t\tChannelStateWriter.SEQUENCE_NUMBER_UNKNOWN,\n-\t\t\t\t\tbuffer));\n+\t\t\tRecordDeserializer<?> deserializer = recordDeserializers[channelIndex];\n+\t\t\tif (deserializer != null) {", "originalCommit": "9046a584b295d9b431dd0b34a86dbdac89603365", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NjQ3OQ==", "url": "https://github.com/apache/flink/pull/12072#discussion_r422886479", "bodyText": "Yes, I'm not a big fan of using IOExceptions everywhere, especially for unrecoverable issues. So your suggestion makes lots of sense.\nBut I'd also like to avoid larger refactorings right now (and DataOutputSerializer is used at various places), when it can be easily avoided as above. I'm assuming the quest for a more functional style takes a long time with the current exception handling as is.", "author": "AHeise", "createdAt": "2020-05-11T08:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg1NDc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg1ODg4Mg==", "url": "https://github.com/apache/flink/pull/12072#discussion_r422858882", "bodyText": "1 -> numInputChannels ?", "author": "rkhachatryan", "createdAt": "2020-05-11T08:08:02Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java", "diffHunk": "@@ -106,6 +111,45 @@ public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n \t\tassertEquals(0, output.getNumberOfEmittedRecords());\n \t}\n \n+\t@Test\n+\tpublic void testSnapshotAfterEndOfPartition() throws Exception {\n+\t\tVerifyRecordsDataOutput<Long> output = new VerifyRecordsDataOutput<>();\n+\t\tLongSerializer inSerializer = LongSerializer.INSTANCE;\n+\t\tint numInputChannels = 1;\n+\t\tStreamTestSingleInputGate<Long> inputGate = new StreamTestSingleInputGate<>(numInputChannels, 0, inSerializer, 1024);\n+\t\tTestRecordDeserializer[] deserializers = IntStream.range(0, numInputChannels)\n+\t\t\t.mapToObj(index -> new TestRecordDeserializer(ioManager.getSpillingDirectoriesPaths()))\n+\t\t\t.toArray(TestRecordDeserializer[]::new);\n+\t\tStreamTaskNetworkInput<Long> input = new StreamTaskNetworkInput<>(\n+\t\t\tnew CheckpointedInputGate(\n+\t\t\t\tinputGate.getInputGate(),\n+\t\t\t\tnew CheckpointBarrierUnaligner(\n+\t\t\t\t\tnew int[] { 1 },", "originalCommit": "9046a584b295d9b431dd0b34a86dbdac89603365", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2MDQ1Mg==", "url": "https://github.com/apache/flink/pull/12072#discussion_r422860452", "bodyText": "Extracting 0 to channelId would make the test a bit more readable.", "author": "rkhachatryan", "createdAt": "2020-05-11T08:10:49Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java", "diffHunk": "@@ -106,6 +111,45 @@ public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n \t\tassertEquals(0, output.getNumberOfEmittedRecords());\n \t}\n \n+\t@Test\n+\tpublic void testSnapshotAfterEndOfPartition() throws Exception {\n+\t\tVerifyRecordsDataOutput<Long> output = new VerifyRecordsDataOutput<>();\n+\t\tLongSerializer inSerializer = LongSerializer.INSTANCE;\n+\t\tint numInputChannels = 1;\n+\t\tStreamTestSingleInputGate<Long> inputGate = new StreamTestSingleInputGate<>(numInputChannels, 0, inSerializer, 1024);\n+\t\tTestRecordDeserializer[] deserializers = IntStream.range(0, numInputChannels)\n+\t\t\t.mapToObj(index -> new TestRecordDeserializer(ioManager.getSpillingDirectoriesPaths()))\n+\t\t\t.toArray(TestRecordDeserializer[]::new);\n+\t\tStreamTaskNetworkInput<Long> input = new StreamTaskNetworkInput<>(\n+\t\t\tnew CheckpointedInputGate(\n+\t\t\t\tinputGate.getInputGate(),\n+\t\t\t\tnew CheckpointBarrierUnaligner(\n+\t\t\t\t\tnew int[] { 1 },\n+\t\t\t\t\tChannelStateWriter.NO_OP,\n+\t\t\t\t\t\"test\",\n+\t\t\t\t\tnew DummyCheckpointInvokable())),\n+\t\t\tinSerializer,\n+\t\t\tnew StatusWatermarkValve(1, output),\n+\t\t\t0,\n+\t\t\tdeserializers);\n+\n+\t\tinputGate.sendEvent(new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation()), 0);\n+\t\tinputGate.sendElement(new StreamRecord<>(42L), 0);\n+\n+\t\tassertHasNextElement(input, output);\n+\t\tassertHasNextElement(input, output);\n+\t\tassertEquals(1, output.getNumberOfEmittedRecords());\n+\n+\t\t// send EndOfPartitionEvent and ensure that deserializer has been released\n+\t\tinputGate.sendEvent(EndOfPartitionEvent.INSTANCE, 0);\n+\t\tinput.emitNext(output);\n+\t\tassertNull(deserializers[0]);", "originalCommit": "9046a584b295d9b431dd0b34a86dbdac89603365", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0bc3e6e2b8ceb77a3ba502e7d98d3897f83d9010", "url": "https://github.com/apache/flink/commit/0bc3e6e2b8ceb77a3ba502e7d98d3897f83d9010", "message": "[FLINK-17580][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T08:46:37Z", "type": "forcePushed"}, {"oid": "207a8efb19186f84bb74d997710ad4517938c6e1", "url": "https://github.com/apache/flink/commit/207a8efb19186f84bb74d997710ad4517938c6e1", "message": "[FLINK-17315][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T11:07:01Z", "type": "forcePushed"}, {"oid": "cb2913d57c189cf8c7879237dc0bc14ec1011950", "url": "https://github.com/apache/flink/commit/cb2913d57c189cf8c7879237dc0bc14ec1011950", "message": "[FLINK-17315][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T16:17:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4MDAxOQ==", "url": "https://github.com/apache/flink/pull/12072#discussion_r423180019", "bodyText": "remove this code and add a //TODO: use readView.notifyPriorityEvent for local channels comment?", "author": "pnowojski", "createdAt": "2020-05-11T16:53:31Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "diffHunk": "@@ -127,10 +127,10 @@ public void readRecoveredState(ChannelStateReader stateReader) throws IOExceptio\n \t@Override\n \tpublic boolean add(BufferConsumer bufferConsumer, boolean isPriorityEvent) throws IOException {\n \t\tif (isPriorityEvent) {\n-\t\t\tif (readView != null && readView.notifyPriorityEvent(bufferConsumer)) {\n-\t\t\t\tbufferConsumer.close();\n-\t\t\t\treturn true;\n-\t\t\t}\n+//\t\t\tif (readView != null && readView.notifyPriorityEvent(bufferConsumer)) {\n+//\t\t\t\tbufferConsumer.close();\n+//\t\t\t\treturn true;\n+//\t\t\t}", "originalCommit": "a1a282fb5a3b1b8c63e0b087d0a29068d8f22096", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4MTY4MQ==", "url": "https://github.com/apache/flink/pull/12072#discussion_r423181681", "bodyText": "&& buffer.isBuffer()?", "author": "pnowojski", "createdAt": "2020-05-11T16:56:04Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalInputChannel.java", "diffHunk": "@@ -196,9 +208,17 @@ public void run() {\n \t\t\t}\n \t\t}\n \n-\t\tnumBytesIn.inc(next.buffer().getSize());\n+\t\tBuffer buffer = next.buffer();\n+\t\tCheckpointBarrier notifyReceivedBarrier = parseCheckpointBarrierOrNull(buffer);\n+\t\tif (notifyReceivedBarrier != null) {\n+\t\t\treceivedCheckpointId = notifyReceivedBarrier.getId();\n+\t\t} else if (receivedCheckpointId < lastRequestedCheckpointId) {", "originalCommit": "8d42f2dd006e6c7344453c35bcc8d0422e0fb3ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjkxNA==", "url": "https://github.com/apache/flink/pull/12072#discussion_r423262914", "bodyText": "Oh darn; how the hell did that slip through :/", "author": "AHeise", "createdAt": "2020-05-11T19:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4MTY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4NTg3OA==", "url": "https://github.com/apache/flink/pull/12072#discussion_r423185878", "bodyText": "add maybe one more buffer and some events, like EndOfPartitionEvent at the end?", "author": "pnowojski", "createdAt": "2020-05-11T17:02:34Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/LocalInputChannelTest.java", "diffHunk": "@@ -448,6 +455,36 @@ public void testUnblockReleasedChannel() throws Exception {\n \t\tlocalChannel.resumeConsumption();\n \t}\n \n+\t@Test\n+\tpublic void testCheckpointingInflightData() throws Exception {\n+\t\tSingleInputGate inputGate = new SingleInputGateBuilder().build();\n+\t\tList<Buffer> receivedBuffers = new ArrayList<>();\n+\t\tinputGate.registerBufferReceivedListener(new BufferReceivedListener() {\n+\t\t\t@Override\n+\t\t\tpublic void notifyBufferReceived(Buffer buffer, InputChannelInfo channelInfo) {\n+\t\t\t\treceivedBuffers.add(buffer);\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void notifyBarrierReceived(CheckpointBarrier barrier, InputChannelInfo channelInfo) {}\n+\t\t});\n+\n+\t\tResultSubpartitionView subpartitionView = createResultSubpartitionView(true);", "originalCommit": "8d42f2dd006e6c7344453c35bcc8d0422e0fb3ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9c989d03884bb761d97b85a225d968c9e4e0afc7", "url": "https://github.com/apache/flink/commit/9c989d03884bb761d97b85a225d968c9e4e0afc7", "message": "[FLINK-17315][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T18:48:25Z", "type": "forcePushed"}, {"oid": "bab8d2812b99d7b689286dfdb67d48e2fd0dbbbf", "url": "https://github.com/apache/flink/commit/bab8d2812b99d7b689286dfdb67d48e2fd0dbbbf", "message": "[FLINK-17315][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T19:07:06Z", "type": "forcePushed"}, {"oid": "ce38f1b465f6bc4f57a1e182eed7e777b5ba7b6a", "url": "https://github.com/apache/flink/commit/ce38f1b465f6bc4f57a1e182eed7e777b5ba7b6a", "message": "[FLINK-17315][tests] Reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-11T19:17:37Z", "type": "forcePushed"}, {"oid": "4bf63a72c743ccf420334c0d717d034e7d788dfa", "url": "https://github.com/apache/flink/commit/4bf63a72c743ccf420334c0d717d034e7d788dfa", "message": "[FLINK-17315][tests] Fix and reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-12T06:10:42Z", "type": "forcePushed"}, {"oid": "aea00a5910b7696d262d84cf3e4220e96514f63f", "url": "https://github.com/apache/flink/commit/aea00a5910b7696d262d84cf3e4220e96514f63f", "message": "[FLINK-17315][tests] Fix and reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-12T06:17:02Z", "type": "forcePushed"}, {"oid": "8be9463f81810d66a76da070195c0f7bf42d95c9", "url": "https://github.com/apache/flink/commit/8be9463f81810d66a76da070195c0f7bf42d95c9", "message": "[FLINK-17315][tests] Fix and reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-12T07:46:53Z", "type": "forcePushed"}, {"oid": "b58b724bc83fd6ba7aea0e48084f1685c4a34f8a", "url": "https://github.com/apache/flink/commit/b58b724bc83fd6ba7aea0e48084f1685c4a34f8a", "message": "[FLINK-17315][checkpointing] Fix NPE in unaligned checkpoint after EndOfPartition events\n\nReleased deserializers cause NPE in StreamTaskNetworkInput#prepareSnapshot.", "committedDate": "2020-05-12T10:51:28Z", "type": "commit"}, {"oid": "4fcc22e2accb51664aacf29960015ffac55733fb", "url": "https://github.com/apache/flink/commit/4fcc22e2accb51664aacf29960015ffac55733fb", "message": "[FLINK-17315][checkpointing] Disable priority event listener\n\nPriority event listener currently does not snapshot any buffers and causes additional synchronization points. We should re-enable/re-evaluate this concept once a proper threading model has been established on input side.", "committedDate": "2020-05-12T10:51:29Z", "type": "commit"}, {"oid": "c624f9723d35d684427f342ef94530fafea266f5", "url": "https://github.com/apache/flink/commit/c624f9723d35d684427f342ef94530fafea266f5", "message": "[FLINK-17315][checkpointing] LocalInputChannel also checkpoints in-flight data.\n\nWhen a downstream tasks starts snapshotting input before the upstream task finished snapshotting output, it may happen that a buffer is neither snapshotted upstream or downstream. This commit replicates the logic of RemoteInputChannel to also store these buffers.", "committedDate": "2020-05-12T10:52:22Z", "type": "commit"}, {"oid": "196222c9db55288ec5db0d6a3e5d5549dc03f749", "url": "https://github.com/apache/flink/commit/196222c9db55288ec5db0d6a3e5d5549dc03f749", "message": "[FLINK-17315][checkpointing] Fixed SpillingAdaptiveSpanningRecordDeserializer#getUnconsumedBuffer.", "committedDate": "2020-05-12T10:52:24Z", "type": "commit"}, {"oid": "b6ee02310d860bf05bae59b40c403185da41fe00", "url": "https://github.com/apache/flink/commit/b6ee02310d860bf05bae59b40c403185da41fe00", "message": "[FLINK-17315][checkpointing] Only adding buffers to inflight data of PipelinedSubpartition.", "committedDate": "2020-05-12T10:52:24Z", "type": "commit"}, {"oid": "00813d8e2346dd390237e3215198d977c1e29066", "url": "https://github.com/apache/flink/commit/00813d8e2346dd390237e3215198d977c1e29066", "message": "[FLINK-17315][tests] Fix and reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-12T10:52:24Z", "type": "commit"}, {"oid": "00813d8e2346dd390237e3215198d977c1e29066", "url": "https://github.com/apache/flink/commit/00813d8e2346dd390237e3215198d977c1e29066", "message": "[FLINK-17315][tests] Fix and reenable UnalignedCheckpointITCase.", "committedDate": "2020-05-12T10:52:24Z", "type": "forcePushed"}]}