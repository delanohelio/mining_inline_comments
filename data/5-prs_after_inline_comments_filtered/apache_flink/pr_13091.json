{"pr_number": 13091, "pr_title": "[FLINK-18856][checkpointing] Don't ignore minPauseBetweenCheckpoints", "pr_createdAt": "2020-08-08T16:27:08Z", "pr_url": "https://github.com/apache/flink/pull/13091", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU0NDI3Mg==", "url": "https://github.com/apache/flink/pull/13091#discussion_r467544272", "bodyText": "@rkhachatryan thanks for the fix.\nAfter this change, the behavior is equal to 1.10 and would respect the min-pause setting now.\nI'm wandering do we need to make the lastCheckpointCompletionRelativeTime and pendingCheckpoints.size  volatile.", "author": "klion26", "createdAt": "2020-08-09T06:40:06Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java", "diffHunk": "@@ -318,6 +318,7 @@ public CheckpointCoordinator(\n \t\t\tthis.clock,\n \t\t\tthis.minPauseBetweenCheckpoints,\n \t\t\tthis.pendingCheckpoints::size,\n+\t\t\t() -> this.lastCheckpointCompletionRelativeTime,", "originalCommit": "6339ff6f9b1acdb6f7cd163c9f866f77fd65c708", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYzMTEyMA==", "url": "https://github.com/apache/flink/pull/13091#discussion_r467631120", "bodyText": "Thanks for reviewing @klion26.\nvolatile seems unnecessary because (both) values are written and read under the same lock.", "author": "rkhachatryan", "createdAt": "2020-08-09T21:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU0NDI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzMjczNQ==", "url": "https://github.com/apache/flink/pull/13091#discussion_r467832735", "bodyText": "Those suppliers/consumers are making this class harder to follow and I think they are showing some deeper design problem - too tight coupling between CheckpointCoordinator/CheckpointRequestDecider.\nIn particular, it looks like adding Supplier<Long> completionTimeSupplier reveals quite weird concurrency contract between those two. Both are using the same lock object, and they are cross accessing the CheckpointCoordinator#lastCheckpointCompletionRelativeTime field from within the lock CheckpointRequestDecider#lock for read access and CheckpointCoordinator#lock for the write access.\nWhat about making CheckpointRequestDecider a non thread safe class, remove the CheckpointRequestDecider#lock and just relay on the caller (CheckpointCoordinator) to either access CheckpointRequestDecider from a single thread or provide thread safety. For now CheckpointCoordinator would be acquiring CheckpointCoordinator#lock before calling CheckpointRequestDecider, while after completing threading model refactor, the CheckpointCoordinator#lock would be simply removed, without a need to modify CheckpointRequestDecider?", "author": "pnowojski", "createdAt": "2020-08-10T11:09:39Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDecider.java", "diffHunk": "@@ -55,20 +55,23 @@\n \t@GuardedBy(\"lock\")\n \tprivate final NavigableSet<CheckpointTriggerRequest> queuedRequests = new TreeSet<>(checkpointTriggerRequestsComparator());\n \tprivate final int maxQueuedRequests;\n+\tprivate final Supplier<Long> completionTimeSupplier;\n \n \tCheckpointRequestDecider(\n \t\t\tint maxConcurrentCheckpointAttempts,\n \t\t\tConsumer<Long> rescheduleTrigger,\n \t\t\tClock clock,\n \t\t\tlong minPauseBetweenCheckpoints,\n \t\t\tSupplier<Integer> pendingCheckpointsSizeSupplier,\n+\t\t\tSupplier<Long> completionTimeSupplier,", "originalCommit": "5c5cc7ba30a61db136551bd956c079e7fb5d3ad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1MzYyNg==", "url": "https://github.com/apache/flink/pull/13091#discussion_r467853626", "bodyText": "I agree that the current design has these two issues:\n\nUnnecessary complex\nUnclear synchronization semantics\n\nTo deal with both of them I proposed to use actor-based approach.\nOTH, the proposed change of \"making CheckpointRequestDecider a non thread safe class\":\n\nreplaces Suppliers with arguments, but doesn't remove the complexity\nmoves synchronization to another class, but doesn't remove it (we'll need to synchronize more sections in CheckpointCoordinator)\n\nI like these changes, but not in the context of the upcoming refactoring (even if not actor-based - I tried to follow the original sync logic when extracting CheckpointRequestDecider, so changing it now can make the refactoring more difficult).\nBesides that, the fix should be backported to 1.11, so I'd prefer a smaller changeset.", "author": "rkhachatryan", "createdAt": "2020-08-10T11:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzMjczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2ODY4NQ==", "url": "https://github.com/apache/flink/pull/13091#discussion_r469268685", "bodyText": "As clarified offline, the proposal was not \"remove existing suppliers\" but \"not to add a new one\"; which is indeed a smaller changeset.\nI've updated the PR, please take a look @pnowojski .", "author": "rkhachatryan", "createdAt": "2020-08-12T13:42:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzMjczNQ=="}], "type": "inlineReview"}, {"oid": "8beb140d8d3fad1c07816ebcc90b7ac17b73edfb", "url": "https://github.com/apache/flink/commit/8beb140d8d3fad1c07816ebcc90b7ac17b73edfb", "message": "[FLINK-18856][checkpointing] Synchronize access to CheckpointCoordinator.lastCheckpointCompletionRelativeTime", "committedDate": "2020-08-12T13:35:09Z", "type": "commit"}, {"oid": "85fbcfce4d26b31d9a55931e36e877d27b5009fd", "url": "https://github.com/apache/flink/commit/85fbcfce4d26b31d9a55931e36e877d27b5009fd", "message": "[hotfix][test] Fix formatting in CheckpointRequestDeciderTest", "committedDate": "2020-08-12T13:35:13Z", "type": "commit"}, {"oid": "3373a315374003a67dc8c2a32e3bdb7aadc80d8d", "url": "https://github.com/apache/flink/commit/3373a315374003a67dc8c2a32e3bdb7aadc80d8d", "message": "[hotfix][docs] Add javadoc to CheckpointRequestDecider", "committedDate": "2020-08-12T13:37:05Z", "type": "commit"}, {"oid": "3373a315374003a67dc8c2a32e3bdb7aadc80d8d", "url": "https://github.com/apache/flink/commit/3373a315374003a67dc8c2a32e3bdb7aadc80d8d", "message": "[hotfix][docs] Add javadoc to CheckpointRequestDecider", "committedDate": "2020-08-12T13:37:05Z", "type": "forcePushed"}]}