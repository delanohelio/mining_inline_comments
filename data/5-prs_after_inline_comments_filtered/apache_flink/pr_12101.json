{"pr_number": 12101, "pr_title": "[FLINK-17350][task] StreamTask should always fail immediately on failures in synchronous part of a checkpoint", "pr_createdAt": "2020-05-12T14:57:57Z", "pr_url": "https://github.com/apache/flink/pull/12101", "timeline": [{"oid": "4b9d045efa47e8b69c58a517153756d57abb9941", "url": "https://github.com/apache/flink/commit/4b9d045efa47e8b69c58a517153756d57abb9941", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket.", "committedDate": "2020-05-12T15:00:55Z", "type": "forcePushed"}, {"oid": "5865cd7c4170d741d1d6f9e41b792b7388e7c305", "url": "https://github.com/apache/flink/commit/5865cd7c4170d741d1d6f9e41b792b7388e7c305", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket.", "committedDate": "2020-05-13T13:50:05Z", "type": "forcePushed"}, {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b", "url": "https://github.com/apache/flink/commit/e0d50525387d232af7cf0d79fe51dbc39757aa6b", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket.", "committedDate": "2020-05-13T14:03:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyODY5OA==", "url": "https://github.com/apache/flink/pull/12101#discussion_r426128698", "bodyText": "nit: same line?", "author": "AHeise", "createdAt": "2020-05-16T07:33:38Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/TaskCheckpointingBehaviourTest.java", "diffHunk": "@@ -141,13 +141,18 @@ public void testBlockingNonInterruptibleCheckpoint() throws Exception {\n \t\tassertNull(task.getFailureCause());\n \t}\n \n-\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend) throws Exception{\n-\n+\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend, boolean expectFailure) throws Exception {\n \t\tTestDeclinedCheckpointResponder checkpointResponder = new TestDeclinedCheckpointResponder();\n+\t\tTask task = createTask(new FilterOperator(), backend, checkpointResponder);\n+\t\tif (expectFailure) {\n+\t\t\trunTaskExpectFailure(task);\n+\t\t}\n+\t\telse {", "originalCommit": "e0d50525387d232af7cf0d79fe51dbc39757aa6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyOTAyOA==", "url": "https://github.com/apache/flink/pull/12101#discussion_r426129028", "bodyText": "It feels as if the test logic is hidden in this method from the actual test case perspective.\nCan we instead of expectFailure pass this::runTaskExpectFailure and this::runTaskExpectCheckpointDeclined? (probably BiConsumer?)\nOr maybe inline this method altogether. I see the value rather limited.\nLast option is to use Roman's pattern in ChannelStateWriterImplTest\n    @Test\n\tpublic void testDeclineOnCheckpointErrorInAsyncPart() throws Exception {\n       runWithResponder((task, checkpointResponder) -> runTaskExpectCheckpointDeclined(task, checkpointResponder));\n\t}", "author": "AHeise", "createdAt": "2020-05-16T07:39:06Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/TaskCheckpointingBehaviourTest.java", "diffHunk": "@@ -141,13 +141,18 @@ public void testBlockingNonInterruptibleCheckpoint() throws Exception {\n \t\tassertNull(task.getFailureCause());\n \t}\n \n-\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend) throws Exception{\n-\n+\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend, boolean expectFailure) throws Exception {", "originalCommit": "e0d50525387d232af7cf0d79fe51dbc39757aa6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMDA0OQ==", "url": "https://github.com/apache/flink/pull/12101#discussion_r426130049", "bodyText": "I don't like the reliance on passing consumers everywhere, it makes code a spaghetti, when you have to traverse sometimes long call stacks to actually find out what your method is actually doing.\nBut indeed, inlining is better option to passing the parameter.", "author": "pnowojski", "createdAt": "2020-05-16T07:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyOTAyOA=="}], "type": "inlineReview"}, {"oid": "a2cd3daceca16ae841119d94a24328b4af37dcd8", "url": "https://github.com/apache/flink/commit/a2cd3daceca16ae841119d94a24328b4af37dcd8", "message": "[FLINK-17350][task][hotfix] Simplify checkpoint exception handling\n\nCheckpoint exceptions do not need to report failures via Environment#failExternally\nsince Mailbox can properly handle exceptions in the mails (by shutting down the\ntask)", "committedDate": "2020-05-16T08:01:29Z", "type": "commit"}, {"oid": "17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "url": "https://github.com/apache/flink/commit/17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket.", "committedDate": "2020-05-16T08:01:29Z", "type": "commit"}, {"oid": "17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "url": "https://github.com/apache/flink/commit/17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket.", "committedDate": "2020-05-16T08:01:29Z", "type": "forcePushed"}]}