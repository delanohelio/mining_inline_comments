{"pr_number": 12186, "pr_title": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators", "pr_createdAt": "2020-05-15T20:51:42Z", "pr_url": "https://github.com/apache/flink/pull/12186", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzU0NQ==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426117545", "bodyText": "I wonder if we shouldn't throw some exception?", "author": "pnowojski", "createdAt": "2020-05-16T04:36:24Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -174,7 +174,9 @@ public void notifyCheckpointComplete(long checkpointId, OperatorChain<?, ?> oper\n \t\t\tLOG.debug(\"Notification of complete checkpoint for task {}\", taskName);\n \n \t\t\tfor (StreamOperatorWrapper<?, ?> operatorWrapper : operatorChain.getAllOperators(true)) {\n-\t\t\t\toperatorWrapper.getStreamOperator().notifyCheckpointComplete(checkpointId);\n+\t\t\t\tif (!operatorWrapper.isClosed()) {", "originalCommit": "a3129c8853f1b9af6ceb3a1f8749a70a7dc2f9f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzI4Ng==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426127286", "bodyText": "It depends on what we are trying to achieve. Assume that we have a chain source -> map -> sink and source and map have been closed already. Wouldn't it be nice to still commit stuff in sink?", "author": "AHeise", "createdAt": "2020-05-16T07:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzU2OA==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426127568", "bodyText": "If one operator is closed in the chain, doesn't it mean all of them are closed?", "author": "pnowojski", "createdAt": "2020-05-16T07:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyOTE5NA==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426129194", "bodyText": "Not with the wrapper. It closes them one after another from head to tail with mails. That's why the notify can sneak in in the first place.\nOnly when one operator is closed completed, the next operator in line is closed.", "author": "AHeise", "createdAt": "2020-05-16T07:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzY1OA==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426117658", "bodyText": "ditto about exception or letting checkpoint coordinator know, that this checkpoint was declined. Otherwise, aren't we risking a situation where this checkpoint will complete, despite this operator not participating in it?\nAlso it might be better to move this if check much higher, somewhere to the top of checkpointState method?", "author": "pnowojski", "createdAt": "2020-05-16T04:38:07Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -279,16 +281,18 @@ private void takeSnapshotSync(\n \n \t\ttry {\n \t\t\tfor (StreamOperatorWrapper<?, ?> operatorWrapper : operatorChain.getAllOperators(true)) {\n-\t\t\t\toperatorSnapshotsInProgress.put(\n-\t\t\t\t\toperatorWrapper.getStreamOperator().getOperatorID(),\n-\t\t\t\t\tbuildOperatorSnapshotFutures(\n-\t\t\t\t\t\tcheckpointMetaData,\n-\t\t\t\t\t\tcheckpointOptions,\n-\t\t\t\t\t\toperatorChain,\n-\t\t\t\t\t\toperatorWrapper.getStreamOperator(),\n-\t\t\t\t\t\tisCanceled,\n-\t\t\t\t\t\tchannelStateWriteResult,\n-\t\t\t\t\t\tstorage));\n+\t\t\t\tif (!operatorWrapper.isClosed()) {", "originalCommit": "a3129c8853f1b9af6ceb3a1f8749a70a7dc2f9f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzM0Ng==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426127346", "bodyText": "Here I guess you are right, inconsistent checkpoint does not make any sense.", "author": "AHeise", "createdAt": "2020-05-16T07:10:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyODEwMQ==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426128101", "bodyText": "But we have to be careful with the implementation here. I think we can not simply throw an exception, as after fixing https://issues.apache.org/jira/browse/FLINK-17350 (my PR pending review), exceptions thrown from here would fail the task immediately.\nOn the other hand, letting this task continue running (even if it's closing?), we could repeat some mistakes from FLINK-17350.\nBut as there was no exception in any of the operators, I think it might be fine to just cancel this checkpoint, clean it up and decline it (inform CheckpointCoordinator that it has failed).\nAnother complication might be, how is this suppose to work with stop with savepoint? I hope isClosed() couldn't happen in that scenario, since failures while stopping with savepoint might be irrecoverable.", "author": "pnowojski", "createdAt": "2020-05-16T07:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNzY1OA=="}], "type": "inlineReview"}, {"oid": "25f5493bb635b3876ef629cdfb87b3d7a6aa8fff", "url": "https://github.com/apache/flink/commit/25f5493bb635b3876ef629cdfb87b3d7a6aa8fff", "message": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators.\n\nThrough StreamOperatorWrapper an operator may already be closed while the StreamTask is still running. Notification might be relayed in that time from the task to the closed operator causing issues on operators reacting on completed checkpoints, such as two phase commit sinks.\n\nThis commit adds the information of the closing to the wrapper and avoids relaying notifications to closed operators.\nAlso fixes a potential related issue in SubtaskCheckpointCoordinatorImpl#takeSnapshotSync.", "committedDate": "2020-05-16T08:14:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMjc0MQ==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426132741", "bodyText": "Maybe it would be better push the isClosed() checks into the wrapper class? And instead of:\nif (!operatorWrapper.isClosed()) {\n\toperatorWrapper.getStreamOperator().prepareSnapshotPreBarrier(checkpointId);\n}\n\nhave here (and in other places):\noperatorWrapper.prepareSnapshotPreBarrier(checkpointId);\n\n?", "author": "pnowojski", "createdAt": "2020-05-16T08:30:48Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/OperatorChain.java", "diffHunk": "@@ -262,7 +262,9 @@ public void prepareSnapshotPreBarrier(long checkpointId) throws Exception {\n \t\t// go forward through the operator chain and tell each operator\n \t\t// to prepare the checkpoint\n \t\tfor (StreamOperatorWrapper<?, ?> operatorWrapper : getAllOperators()) {\n-\t\t\toperatorWrapper.getStreamOperator().prepareSnapshotPreBarrier(checkpointId);\n+\t\t\tif (!operatorWrapper.isClosed()) {\n+\t\t\t\toperatorWrapper.getStreamOperator().prepareSnapshotPreBarrier(checkpointId);\n+\t\t\t}", "originalCommit": "25f5493bb635b3876ef629cdfb87b3d7a6aa8fff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE0NDM3MQ==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426144371", "bodyText": "I was also think about that. The question is should we then replace it for all StreamOperatorWrapper.getOperator  calls eventually?", "author": "AHeise", "createdAt": "2020-05-16T11:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1NzE0Mw==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426157143", "bodyText": "Maybe in the future?", "author": "pnowojski", "createdAt": "2020-05-16T14:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMjc0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMzI4MA==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426133280", "bodyText": "isn't this a duplicated call, now with the same check above?", "author": "pnowojski", "createdAt": "2020-05-16T08:39:14Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -269,16 +284,18 @@ private void takeSnapshotSync(\n \n \t\ttry {\n \t\t\tfor (StreamOperatorWrapper<?, ?> operatorWrapper : operatorChain.getAllOperators(true)) {\n-\t\t\t\toperatorSnapshotsInProgress.put(\n-\t\t\t\t\toperatorWrapper.getStreamOperator().getOperatorID(),\n-\t\t\t\t\tbuildOperatorSnapshotFutures(\n-\t\t\t\t\t\tcheckpointMetaData,\n-\t\t\t\t\t\tcheckpointOptions,\n-\t\t\t\t\t\toperatorChain,\n-\t\t\t\t\t\toperatorWrapper.getStreamOperator(),\n-\t\t\t\t\t\tisCanceled,\n-\t\t\t\t\t\tchannelStateWriteResult,\n-\t\t\t\t\t\tstorage));\n+\t\t\t\tif (!operatorWrapper.isClosed()) {", "originalCommit": "25f5493bb635b3876ef629cdfb87b3d7a6aa8fff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE0NDQwNQ==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426144405", "bodyText": "yep sorry that's a left over from the previous version.", "author": "AHeise", "createdAt": "2020-05-16T11:14:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMzI4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMzQ4Nw==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426133487", "bodyText": "oO I haven't tested it with OneInputStreamTask::new :) Good to know that it's working.", "author": "pnowojski", "createdAt": "2020-05-16T08:41:07Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskTest.java", "diffHunk": "@@ -934,6 +936,62 @@ public void testOperatorClosingBeforeStopRunning() throws Throwable {\n \t\t}\n \t}\n \n+\t/**\n+\t * Tests that {@link StreamTask#notifyCheckpointCompleteAsync(long)} is not relayed to closed operators.\n+\t *\n+\t * <p>See FLINK-16383.\n+\t */\n+\t@Test\n+\tpublic void testNotifyCheckpointOnClosedOperator() throws Throwable {\n+\t\tClosingOperator operator = new ClosingOperator();\n+\t\tMultipleInputStreamTaskTestHarnessBuilder<Integer> builder =\n+\t\t\tnew MultipleInputStreamTaskTestHarnessBuilder<>(OneInputStreamTask::new, BasicTypeInfo.INT_TYPE_INFO)\n+\t\t\t\t.addInput(BasicTypeInfo.INT_TYPE_INFO);\n+\t\tStreamTaskMailboxTestHarness<Integer> harness = builder\n+\t\t\t.setupOutputForSingletonOperatorChain(operator)\n+\t\t\t.build();\n+\t\t// keeps the mailbox from suspending\n+\t\tharness.setAutoProcess(false);\n+\t\tharness.processElement(new StreamRecord<>(1));\n+\n+\t\tharness.streamTask.notifyCheckpointCompleteAsync(1);\n+\t\tharness.streamTask.runMailboxStep();\n+\t\tassertEquals(1, operator.notified.get());\n+\t\tassertEquals(false, operator.closed.get());\n+\n+\t\t// close operators directly, so that task is still fully running\n+\t\tharness.streamTask.operatorChain.closeOperators(harness.streamTask.getActionExecutor());\n+\t\tharness.streamTask.notifyCheckpointCompleteAsync(2);\n+\t\tharness.streamTask.runMailboxStep();\n+\t\tassertEquals(1, operator.notified.get());\n+\t\tassertEquals(true, operator.closed.get());\n+\t}\n+\n+\t/**\n+\t * Tests that checkpoints are declined if operators are (partially) closed.\n+\t *\n+\t * <p>See FLINK-16383.\n+\t */\n+\t@Test\n+\tpublic void testCheckpointDeclinedOnClosedOperator() throws Throwable {\n+\t\tClosingOperator operator = new ClosingOperator();\n+\t\tMultipleInputStreamTaskTestHarnessBuilder<Integer> builder =\n+\t\t\tnew MultipleInputStreamTaskTestHarnessBuilder<>(OneInputStreamTask::new, BasicTypeInfo.INT_TYPE_INFO)", "originalCommit": "25f5493bb635b3876ef629cdfb87b3d7a6aa8fff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "17deb1ace51d274715027adbeb607feb3958347a", "url": "https://github.com/apache/flink/commit/17deb1ace51d274715027adbeb607feb3958347a", "message": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators.\n\nThrough StreamOperatorWrapper an operator may already be closed while the StreamTask is still running. Notification might be relayed in that time from the task to the closed operator causing issues on operators reacting on completed checkpoints, such as two phase commit sinks.\n\nThis commit adds the information of the closing to the wrapper and avoids relaying notifications to closed operators.\nAlso fixes a potential related issue in SubtaskCheckpointCoordinatorImpl#takeSnapshotSync.", "committedDate": "2020-05-16T19:50:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIzNTE0Mg==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426235142", "bodyText": "I think this is missing a relevant entry in CheckpointFailureManager switch/case", "author": "pnowojski", "createdAt": "2020-05-17T08:49:39Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointFailureReason.java", "diffHunk": "@@ -44,6 +44,8 @@\n \n \tCHECKPOINT_DECLINED_TASK_NOT_READY(false, \"Checkpoint was declined (tasks not ready)\"),\n \n+\tCHECKPOINT_DECLINED_TASK_CLOSING(false, \"Checkpoint was declined (task's operators partially closed)\"),", "originalCommit": "17deb1ace51d274715027adbeb607feb3958347a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI3NTIzNw==", "url": "https://github.com/apache/flink/pull/12186#discussion_r426275237", "bodyText": "Ah jesus, wtf is this monstrosity. But fixed.", "author": "AHeise", "createdAt": "2020-05-17T15:43:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIzNTE0Mg=="}], "type": "inlineReview"}, {"oid": "f512eeef60f86107d945f975b1ca8dead57db9c4", "url": "https://github.com/apache/flink/commit/f512eeef60f86107d945f975b1ca8dead57db9c4", "message": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators.\n\nThrough StreamOperatorWrapper an operator may already be closed while the StreamTask is still running. Notification might be relayed in that time from the task to the closed operator causing issues on operators reacting on completed checkpoints, such as two phase commit sinks.\n\nThis commit adds the information of the closing to the wrapper and avoids relaying notifications to closed operators.\nAlso fixes a potential related issue in SubtaskCheckpointCoordinatorImpl#takeSnapshotSync.", "committedDate": "2020-05-17T15:42:42Z", "type": "forcePushed"}, {"oid": "26b98ea10d229f1a49fbbc232dc5cdb83572ac3b", "url": "https://github.com/apache/flink/commit/26b98ea10d229f1a49fbbc232dc5cdb83572ac3b", "message": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators.\n\nThrough StreamOperatorWrapper an operator may already be closed while the StreamTask is still running. Notification might be relayed in that time from the task to the closed operator causing issues on operators reacting on completed checkpoints, such as two phase commit sinks.\n\nThis commit adds the information of the closing to the wrapper and avoids relaying notifications to closed operators.\nAlso fixes a potential related issue in SubtaskCheckpointCoordinatorImpl#takeSnapshotSync.", "committedDate": "2020-05-18T06:25:24Z", "type": "commit"}, {"oid": "26b98ea10d229f1a49fbbc232dc5cdb83572ac3b", "url": "https://github.com/apache/flink/commit/26b98ea10d229f1a49fbbc232dc5cdb83572ac3b", "message": "[FLINK-16383][task] Do not relay notifyCheckpointComplete to closed operators.\n\nThrough StreamOperatorWrapper an operator may already be closed while the StreamTask is still running. Notification might be relayed in that time from the task to the closed operator causing issues on operators reacting on completed checkpoints, such as two phase commit sinks.\n\nThis commit adds the information of the closing to the wrapper and avoids relaying notifications to closed operators.\nAlso fixes a potential related issue in SubtaskCheckpointCoordinatorImpl#takeSnapshotSync.", "committedDate": "2020-05-18T06:25:24Z", "type": "forcePushed"}]}