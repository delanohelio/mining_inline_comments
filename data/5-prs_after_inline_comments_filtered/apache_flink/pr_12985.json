{"pr_number": 12985, "pr_title": "[FLINK-18682][orc][hive] Vector orc reader cannot read Hive 2.0.0 table", "pr_createdAt": "2020-07-24T11:37:00Z", "pr_url": "https://github.com/apache/flink/pull/12985", "timeline": [{"oid": "c1724ef4990fd383c2fecbf55dbc263627c0efd4", "url": "https://github.com/apache/flink/commit/c1724ef4990fd383c2fecbf55dbc263627c0efd4", "message": "[FLINK-18682][orc][hive] Vector orc reader cannot read Hive 2.0.0 table", "committedDate": "2020-08-06T09:26:45Z", "type": "forcePushed"}, {"oid": "8c2efee79228f39d19301d15a4ff6d733db85cf4", "url": "https://github.com/apache/flink/commit/8c2efee79228f39d19301d15a4ff6d733db85cf4", "message": "[FLINK-18682][orc][hive] Vector orc reader cannot read Hive 2.0.0 table", "committedDate": "2020-08-06T13:29:16Z", "type": "commit"}, {"oid": "8c2efee79228f39d19301d15a4ff6d733db85cf4", "url": "https://github.com/apache/flink/commit/8c2efee79228f39d19301d15a4ff6d733db85cf4", "message": "[FLINK-18682][orc][hive] Vector orc reader cannot read Hive 2.0.0 table", "committedDate": "2020-08-06T13:29:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0MzQ1Mg==", "url": "https://github.com/apache/flink/pull/12985#discussion_r466843452", "bodyText": "Why use reflection? why not just use OrcTimestampColumnVector?", "author": "JingsongLi", "createdAt": "2020-08-07T06:19:37Z", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc.vector;\n+\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.util.FlinkRuntimeException;\n+\n+import org.apache.hadoop.hive.ql.exec.vector.ColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.LongColumnVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+\n+/**\n+ * This class is used to adapt to Hive's legacy (2.0.x) timestamp column vector which is a LongColumnVector.\n+ * This class does not import TimestampColumnVector and provides utils to decide whether new or legacy column\n+ * vector should be used.\n+ */\n+public class OrcLegacyTimestampColumnVector extends AbstractOrcColumnVector implements\n+\t\torg.apache.flink.table.data.vector.TimestampColumnVector {\n+\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(OrcLegacyTimestampColumnVector.class);\n+\n+\tprivate static Class hiveTSColVectorClz;\n+\tprivate static Constructor constructor;\n+\tprivate static Method getTimeMethod;\n+\tprivate static Method getNanosMethod;\n+\tprivate static Method fillMethod;\n+\tprivate static boolean hiveTSColVectorAvailable = false;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\thiveTSColVectorClz = Class.forName(\"org.apache.hadoop.hive.ql.exec.vector.TimestampColumnVector\");", "originalCommit": "8c2efee79228f39d19301d15a4ff6d733db85cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0NDA4NQ==", "url": "https://github.com/apache/flink/pull/12985#discussion_r466844085", "bodyText": "Can you have a TimestampUtil,  and then decide using OrcTimestampColumnVector or a OrcLongTimestampVector?", "author": "JingsongLi", "createdAt": "2020-08-07T06:21:24Z", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc.vector;\n+\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.util.FlinkRuntimeException;\n+\n+import org.apache.hadoop.hive.ql.exec.vector.ColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.LongColumnVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+\n+/**\n+ * This class is used to adapt to Hive's legacy (2.0.x) timestamp column vector which is a LongColumnVector.\n+ * This class does not import TimestampColumnVector and provides utils to decide whether new or legacy column\n+ * vector should be used.\n+ */\n+public class OrcLegacyTimestampColumnVector extends AbstractOrcColumnVector implements\n+\t\torg.apache.flink.table.data.vector.TimestampColumnVector {\n+\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(OrcLegacyTimestampColumnVector.class);\n+\n+\tprivate static Class hiveTSColVectorClz;\n+\tprivate static Constructor constructor;\n+\tprivate static Method getTimeMethod;\n+\tprivate static Method getNanosMethod;\n+\tprivate static Method fillMethod;\n+\tprivate static boolean hiveTSColVectorAvailable = false;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\thiveTSColVectorClz = Class.forName(\"org.apache.hadoop.hive.ql.exec.vector.TimestampColumnVector\");", "originalCommit": "8c2efee79228f39d19301d15a4ff6d733db85cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "17af5c4e28164dd0d04c7766c015d4b9e4894052", "url": "https://github.com/apache/flink/commit/17af5c4e28164dd0d04c7766c015d4b9e4894052", "message": "refactor", "committedDate": "2020-08-10T03:33:00Z", "type": "commit"}]}