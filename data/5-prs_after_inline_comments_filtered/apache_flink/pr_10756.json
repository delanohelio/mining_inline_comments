{"pr_number": 10756, "pr_title": "[FLINK-15465][FLINK-11964][table-runtime-blink] Fix required memory calculation not accurate and hash collision bugs in hash table", "pr_createdAt": "2020-01-03T06:04:47Z", "pr_url": "https://github.com/apache/flink/pull/10756", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc2NDk3OA==", "url": "https://github.com/apache/flink/pull/10756#discussion_r362764978", "bodyText": "@JingsongLi Thanks a lot for bringing this up.\nI agree with you that this is computationally efficient.\nHowever, according to my experince, this may not be a good hash function. In practice, we usually encounter small integers (with most high bits equal to 0), so we have hash >>> 16 == 0, and hash ^ (hash >>> 16) will be equal to hash.\nIMO, hash ^ (hash << 16) is much better, as it maps small integers uniformly into the space of all integers.\nThat being that, this is just my personal suggestion. The final choice should be dependent on the real scenario.", "author": "liyafan82", "createdAt": "2020-01-03T10:34:11Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/hashtable/BaseHybridHashTable.java", "diffHunk": "@@ -516,4 +511,10 @@ public static int hash(int hashCode, int level) {\n \t\treturn code >= 0 ? code : -(code + 1);\n \t}\n \n+\t/**\n+\t * Partition level hash again, for avoid two layer hash conflict.\n+\t */\n+\tstatic int partitionLevelHash(int hash) {\n+\t\treturn hash ^ (hash >>> 16);\n+\t}", "originalCommit": "82ff8a76280af02f98613526b8b309ae6d4f2e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE0MzA3OA==", "url": "https://github.com/apache/flink/pull/10756#discussion_r363143078", "bodyText": "Thanks for involving this.\n\nwith most high bits equal to 0\n\nGood point, but it should not.\n\nIn BinaryHashTable: HashCode is from murmurhash, it is good.\nIn LongHybridHashTable: HashCode is from hashLong, it is good too.\n\nhash ^ (hash >>> 16) is just from HashMap.hash, I think it is OK.", "author": "JingsongLi", "createdAt": "2020-01-06T02:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc2NDk3OA=="}], "type": "inlineReview"}, {"oid": "9b9854ae0635f32acad2d56a404e29056fccbc29", "url": "https://github.com/apache/flink/commit/9b9854ae0635f32acad2d56a404e29056fccbc29", "message": "[FLINK-15465][FLINK-11964][table-runtime-blink] Fix hash table bugs", "committedDate": "2020-01-06T03:32:34Z", "type": "commit"}, {"oid": "ccdd9c9bfa921e64404d8c55d4098588356a9587", "url": "https://github.com/apache/flink/commit/ccdd9c9bfa921e64404d8c55d4098588356a9587", "message": "Fix long hash", "committedDate": "2020-01-06T03:40:26Z", "type": "commit"}, {"oid": "ccdd9c9bfa921e64404d8c55d4098588356a9587", "url": "https://github.com/apache/flink/commit/ccdd9c9bfa921e64404d8c55d4098588356a9587", "message": "Fix long hash", "committedDate": "2020-01-06T03:40:26Z", "type": "forcePushed"}]}