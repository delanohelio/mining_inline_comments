{"pr_number": 10923, "pr_title": "[FLINK-15691][tests] Remove runInTaskExecutorThreadAndWait()", "pr_createdAt": "2020-01-22T09:40:49Z", "pr_url": "https://github.com/apache/flink/pull/10923", "timeline": [{"oid": "bee3fe4f613b7c4c0d33f86c2da69c451e2045a4", "url": "https://github.com/apache/flink/commit/bee3fe4f613b7c4c0d33f86c2da69c451e2045a4", "message": "[hotfix][tests] Setup closable resources in BeforeClass\n\nHaving static final resources that are closed in an @AfterClass method prevents the test from being run in a loop within the IDE, since the static fields aren't re-initialized.", "committedDate": "2020-01-22T09:34:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2ODQ5NQ==", "url": "https://github.com/apache/flink/pull/10923#discussion_r369668495", "bodyText": "I think this is not 100% correct as the internal TestingTaskExecutorPartitionTracker#promotePartitionsConsumer field is not volatile. Hence, the TaskExecutor might read a stale value. I would suggest to either setup these things before creating the TaskExecutor or if this is not possible, then make the fields volatile.", "author": "tillrohrmann", "createdAt": "2020-01-22T16:33:47Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/taskexecutor/TaskExecutorPartitionLifecycleTest.java", "diffHunk": "@@ -254,7 +249,7 @@ public void testPartitionPromotion() throws Exception {\n \t\ttestPartitionRelease(\n \t\t\t(jobId, partitionId, taskExecutor, taskExecutorGateway, partitionTracker) -> {\n \t\t\t\tfinal CompletableFuture<Collection<ResultPartitionID>> releasePartitionsFuture = new CompletableFuture<>();\n-\t\t\t\trunInTaskExecutorThreadAndWait(taskExecutor, () -> partitionTracker.setPromotePartitionsConsumer(releasePartitionsFuture::complete));\n+\t\t\t\tpartitionTracker.setPromotePartitionsConsumer(releasePartitionsFuture::complete);", "originalCommit": "c271c86281723f9cfa99ed95d6073c280a753e25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczMjcxMQ==", "url": "https://github.com/apache/flink/pull/10923#discussion_r369732711", "bodyText": "hasn't failed so far \ud83d\ude48", "author": "zentol", "createdAt": "2020-01-22T18:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2ODQ5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNTAxOQ==", "url": "https://github.com/apache/flink/pull/10923#discussion_r369735019", "bodyText": "On a more serious note I wanted to push this back a bit since it looked like a bigger change, and I didn't want to delay the removal of this method.\nBut I think I may have a quick solution that I'll try tomorrow.", "author": "zentol", "createdAt": "2020-01-22T18:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2ODQ5NQ=="}], "type": "inlineReview"}, {"oid": "21b9c2703117d2cce0c13dac71d5317f91042d39", "url": "https://github.com/apache/flink/commit/21b9c2703117d2cce0c13dac71d5317f91042d39", "message": "[FLINK-15691][tests] Remove runInTaskExecutorThreadAndWait()\n\nThe method did not achieve the desired effect of running the action in the TE main thread. Given that the test has not shown instabilities despite this we can conclude that these actions can just be executed in the tests main thread instead.\n\nAdditionally, this test removes/replaces accesses to the JobManagerTable of the TaskExecutor.", "committedDate": "2020-01-23T14:53:52Z", "type": "commit"}, {"oid": "21b9c2703117d2cce0c13dac71d5317f91042d39", "url": "https://github.com/apache/flink/commit/21b9c2703117d2cce0c13dac71d5317f91042d39", "message": "[FLINK-15691][tests] Remove runInTaskExecutorThreadAndWait()\n\nThe method did not achieve the desired effect of running the action in the TE main thread. Given that the test has not shown instabilities despite this we can conclude that these actions can just be executed in the tests main thread instead.\n\nAdditionally, this test removes/replaces accesses to the JobManagerTable of the TaskExecutor.", "committedDate": "2020-01-23T14:53:52Z", "type": "forcePushed"}]}