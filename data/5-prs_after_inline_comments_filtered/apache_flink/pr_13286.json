{"pr_number": 13286, "pr_title": "[FLINK-19093][task] Fix isActive check in AsyncCheckpointRunnable", "pr_createdAt": "2020-08-31T13:17:32Z", "pr_url": "https://github.com/apache/flink/pull/13286", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwNDA1Nw==", "url": "https://github.com/apache/flink/pull/13286#discussion_r480904057", "bodyText": "nit: I guess it seem not very readable for message like .....releasing asyncCheckpointRunnable, 12. Maybe change to ......releasing asyncCheckpointRunnable for checkpoint 12? (Take checkpointId = 12 as example).", "author": "zhijiangW", "createdAt": "2020-09-01T07:11:25Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -366,11 +366,10 @@ private void registerAsyncCheckpointRunnable(long checkpointId, AsyncCheckpointR\n \t\tsynchronized (lock) {\n \t\t\tif (closed) {\n \t\t\t\tLOG.debug(\"Cannot register Closeable, this subtaskCheckpointCoordinator is already closed. Closing argument.\");\n-\t\t\t\tfinal boolean running = asyncCheckpointRunnable.isRunning();\n \t\t\t\tcloseQuietly(asyncCheckpointRunnable);\n \t\t\t\tcheckState(\n-\t\t\t\t\t!running,\n-\t\t\t\t\t\"SubtaskCheckpointCoordinatorImpl was closed without closing asyncCheckpointRunnable %s\",\n+\t\t\t\t\t!checkpoints.containsKey(checkpointId),\n+\t\t\t\t\t\"SubtaskCheckpointCoordinator was closed without releasing asyncCheckpointRunnable, %s\",", "originalCommit": "358ebf0c0aaffb505bc95a97d6133183ec749d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkxMTA5MQ==", "url": "https://github.com/apache/flink/pull/13286#discussion_r480911091", "bodyText": "In the past we might encounter unnecessary exception while #registerAsyncCheckpointRunnable and AsyncCheckpointRunnable#close execute concurrently. Now we only close the runnable quietly without throwing any exception for closed case.\nI agree with this fix, but do we have any existing ITCase for covering/verifying this change?", "author": "zhijiangW", "createdAt": "2020-09-01T07:20:17Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -366,11 +366,10 @@ private void registerAsyncCheckpointRunnable(long checkpointId, AsyncCheckpointR\n \t\tsynchronized (lock) {\n \t\t\tif (closed) {\n \t\t\t\tLOG.debug(\"Cannot register Closeable, this subtaskCheckpointCoordinator is already closed. Closing argument.\");\n-\t\t\t\tfinal boolean running = asyncCheckpointRunnable.isRunning();\n \t\t\t\tcloseQuietly(asyncCheckpointRunnable);\n \t\t\t\tcheckState(\n-\t\t\t\t\t!running,", "originalCommit": "358ebf0c0aaffb505bc95a97d6133183ec749d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkyMTA4OA==", "url": "https://github.com/apache/flink/pull/13286#discussion_r480921088", "bodyText": "I think there are no ITCases covering this, but some existing end-to-end tests indirectly cover this.", "author": "rkhachatryan", "createdAt": "2020-09-01T07:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkxMTA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5Mzc4MQ==", "url": "https://github.com/apache/flink/pull/13286#discussion_r481793781", "bodyText": "I am a bit torn whether it deserves somehow UT or ITCase for the changes.\nIt seems not bad to be covered by existing E2E tests, so I am fine with you final judgement here.", "author": "zhijiangW", "createdAt": "2020-09-02T06:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkxMTA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwOTIzNA==", "url": "https://github.com/apache/flink/pull/13286#discussion_r481809234", "bodyText": "Then let's leave it as-is for now.", "author": "rkhachatryan", "createdAt": "2020-09-02T07:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkxMTA5MQ=="}], "type": "inlineReview"}, {"oid": "9578eb8c57698bec3490503073833a93a810847a", "url": "https://github.com/apache/flink/commit/9578eb8c57698bec3490503073833a93a810847a", "message": "[FLINK-19093][task] Fix isActive check in AsyncCheckpointRunnable\n\nCurrently, the check relies on synchronization on lock.\nHowever, the lock is obtained only to update checkpoints map, actual\nclose is done outside of the synchronized block.\nThis change adds a check whether this Runnable is still in checkpoints\nmap.", "committedDate": "2020-09-01T07:26:58Z", "type": "commit"}, {"oid": "9578eb8c57698bec3490503073833a93a810847a", "url": "https://github.com/apache/flink/commit/9578eb8c57698bec3490503073833a93a810847a", "message": "[FLINK-19093][task] Fix isActive check in AsyncCheckpointRunnable\n\nCurrently, the check relies on synchronization on lock.\nHowever, the lock is obtained only to update checkpoints map, actual\nclose is done outside of the synchronized block.\nThis change adds a check whether this Runnable is still in checkpoints\nmap.", "committedDate": "2020-09-01T07:26:58Z", "type": "forcePushed"}]}