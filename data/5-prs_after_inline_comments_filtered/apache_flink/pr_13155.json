{"pr_number": 13155, "pr_title": "[FLINK-18947][python] Support partitionCustom() operation for Python \u2026", "pr_createdAt": "2020-08-15T09:42:53Z", "pr_url": "https://github.com/apache/flink/pull/13155", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NDk2Nw==", "url": "https://github.com/apache/flink/pull/13155#discussion_r470994967", "bodyText": "Don't need this class. We can reuse org.apache.flink.api.java.functions.IdPartitioner", "author": "hequn8128", "createdAt": "2020-08-15T14:19:33Z", "path": "flink-python/src/main/java/org/apache/flink/datastream/runtime/functions/python/PartitionCustomPartitioner.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.datastream.runtime.functions.python;\n+\n+import org.apache.flink.api.common.functions.Partitioner;\n+\n+/**\n+ * A {@link PartitionCustomPartitioner} is a dedicated Partitioner for Python DataStream custom partitioning operation.\n+ * It will directly return the calculated key value as the partition index of current task.\n+ */\n+public class PartitionCustomPartitioner implements Partitioner<Integer> {", "originalCommit": "70aeee4d216b47fe0f118abec2758f0a7f6a1260", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NTMxNg==", "url": "https://github.com/apache/flink/pull/13155#discussion_r470995316", "bodyText": "Rename to setEnvironmentVariable. This method would replace the old value if key exists.", "author": "hequn8128", "createdAt": "2020-08-15T14:23:39Z", "path": "flink-python/src/main/java/org/apache/flink/python/env/beam/ProcessPythonEnvironmentManager.java", "diffHunk": "@@ -240,6 +240,10 @@ public String createRetrievalToken() throws IOException {\n \t\treturn env;\n \t}\n \n+\tpublic void appendEnvironmentVariable(String key, String value) {", "originalCommit": "70aeee4d216b47fe0f118abec2758f0a7f6a1260", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NTgyNA==", "url": "https://github.com/apache/flink/pull/13155#discussion_r470995824", "bodyText": "Why need this change?", "author": "hequn8128", "createdAt": "2020-08-15T14:29:44Z", "path": "flink-python/src/main/java/org/apache/flink/streaming/api/operators/python/AbstractPythonFunctionOperator.java", "diffHunk": "@@ -344,7 +345,7 @@ protected PythonEnvironmentManager createPythonEnvironmentManager() throws IOExc\n \t\t\treturn new ProcessPythonEnvironmentManager(\n \t\t\t\tdependencyInfo,\n \t\t\t\tgetContainingTask().getEnvironment().getTaskManagerInfo().getTmpDirectories(),\n-\t\t\t\tSystem.getenv());\n+\t\t\t\tnew HashMap<>(System.getenv()));", "originalCommit": "70aeee4d216b47fe0f118abec2758f0a7f6a1260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM3NzEwMg==", "url": "https://github.com/apache/flink/pull/13155#discussion_r471377102", "bodyText": "Because System.getenv() returns a Collections.unmodifiableMap that we can not set any new env variables, therefore we will put it into a new HashMap.", "author": "shuiqiangchen", "createdAt": "2020-08-17T10:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NTgyNA=="}], "type": "inlineReview"}, {"oid": "4c295fc8b337d6727454301199d6916ba8e09e25", "url": "https://github.com/apache/flink/commit/4c295fc8b337d6727454301199d6916ba8e09e25", "message": "[FLINK-18886][python] Support partitionCustom() operation for Python DataStream API.", "committedDate": "2020-08-17T11:58:11Z", "type": "commit"}, {"oid": "4c295fc8b337d6727454301199d6916ba8e09e25", "url": "https://github.com/apache/flink/commit/4c295fc8b337d6727454301199d6916ba8e09e25", "message": "[FLINK-18886][python] Support partitionCustom() operation for Python DataStream API.", "committedDate": "2020-08-17T11:58:11Z", "type": "forcePushed"}, {"oid": "74f640f8fd9dae4c15b536d9a7a243c355c844b1", "url": "https://github.com/apache/flink/commit/74f640f8fd9dae4c15b536d9a7a243c355c844b1", "message": "[FLINK-18886][python] add type hint.", "committedDate": "2020-08-17T12:04:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ1MDQzOA==", "url": "https://github.com/apache/flink/pull/13155#discussion_r471450438", "bodyText": "you need to turn on the -ea switch (enable assertions), otherwise no assert instructions will be run by the JVM at all", "author": "hequn8128", "createdAt": "2020-08-17T12:40:37Z", "path": "flink-python/src/test/java/org/apache/flink/python/util/PartitionCustomTestMapFunction.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.python.util;\n+\n+import org.apache.flink.api.common.functions.RichMapFunction;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.types.Row;\n+\n+/**\n+ * {@link PartitionCustomTestMapFunction} is a dedicated MapFunction to make sure the specific field data is equal to\n+ * current sub-task index.\n+ */\n+public class PartitionCustomTestMapFunction extends RichMapFunction<Row, Row> {\n+\n+\tprivate int currentTaskIndex;\n+\n+\t@Override\n+\tpublic void open(Configuration parameters) {\n+\t\tthis.currentTaskIndex = getRuntimeContext().getIndexOfThisSubtask();\n+\t}\n+\n+\t@Override\n+\tpublic Row map(Row value) throws Exception {\n+\t\tassert value.getField(1).equals(currentTaskIndex);", "originalCommit": "74f640f8fd9dae4c15b536d9a7a243c355c844b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4438c118e0d560b80326de3353bc9bbc106d17e", "url": "https://github.com/apache/flink/commit/c4438c118e0d560b80326de3353bc9bbc106d17e", "message": "[FLINK-18886][python] Fixed the bug of PartitionCustomTestMapFunction.java by throwing an exception.", "committedDate": "2020-08-17T12:50:41Z", "type": "commit"}, {"oid": "e81173a66124224d631e568f661c1cddf758f7a7", "url": "https://github.com/apache/flink/commit/e81173a66124224d631e568f661c1cddf758f7a7", "message": "[FLINK-18886][python] resolve comment format.", "committedDate": "2020-08-17T12:53:15Z", "type": "commit"}, {"oid": "28018a64583634cbafabe9eddabf21e4fa876e72", "url": "https://github.com/apache/flink/commit/28018a64583634cbafabe9eddabf21e4fa876e72", "message": "[FLINK-18947][python] rename the repr of PartitionCustomMapFunction.", "committedDate": "2020-08-17T13:14:43Z", "type": "commit"}]}