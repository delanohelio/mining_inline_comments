{"pr_number": 3388, "pr_title": "save dag and tooltable", "pr_createdAt": "2020-04-13T16:05:29Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3388", "timeline": [{"oid": "3371f5caac8911bdf2db8cf34bcf25fa843d029d", "url": "https://github.com/dockstore/dockstore/commit/3371f5caac8911bdf2db8cf34bcf25fa843d029d", "message": "add test", "committedDate": "2020-04-13T21:37:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2NTAxOQ==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407765019", "bodyText": "I suggest getting in the habit of declaring local variables final. You can configure IntelliJ to create them for you that way by default. It is nit-picky, but for example, when reviewing, if I see final, I know I don't have to look further down and see if the value is modified and what happens to it then.", "author": "coverbeck", "createdAt": "2020-04-13T22:51:58Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1404,12 +1404,20 @@ public String getWorkflowDag(@ApiParam(hidden = true) @Auth Optional<User> user,\n         WorkflowVersion workflowVersion = getWorkflowVersion(workflow, workflowVersionId);\n         SourceFile mainDescriptor = getMainDescriptorFile(workflowVersion);\n \n+        if (workflowVersion.getDagJson() != null) {\n+            return workflowVersion.getDagJson();\n+        }\n+\n         if (mainDescriptor != null) {\n             Set<SourceFile> secondaryDescContent = extractDescriptorAndSecondaryFiles(workflowVersion);\n \n             LanguageHandlerInterface lInterface = LanguageHandlerFactory.getInterface(workflow.getFileType());\n-            return lInterface.getCleanDAG(workflowVersion.getWorkflowPath(), mainDescriptor.getContent(), secondaryDescContent,\n+            String dagJson = lInterface.getCleanDAG(workflowVersion.getWorkflowPath(), mainDescriptor.getContent(), secondaryDescContent,", "originalCommit": "7c5e0336125cba112d02d87aa465d2764b87d703", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3MjEwMQ==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407772101", "bodyText": "Tags are not immutable, alas. If a user \"recreates\" a tag, this value will be out of sync. It may in practice rarely or even never occur for Dockstore workflows, but it's why we created snapshots.\nOptions:\n\nOnly do this for snapshots. Pretty lame, because I assume we have very few snapshots, so most users wouldn't see a performance improvement.\nAlso track the commit sha when you store information. Compare the current commit sha with the tracked sha. Make sure to handle hosted workflows if you do this, because they don't have commit SHAs. If you go with this approach, then it shouldn't be an issue (other than space) to also cache branches. Not sure where you should track the commit id; perhaps in the dagJson column itself.\nWhenever a version gets updated, this and the other field get set to null. This seems fragile, i.e., we could forget to clear it somewhere.", "author": "coverbeck", "createdAt": "2020-04-13T23:13:26Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1404,12 +1404,20 @@ public String getWorkflowDag(@ApiParam(hidden = true) @Auth Optional<User> user,\n         WorkflowVersion workflowVersion = getWorkflowVersion(workflow, workflowVersionId);\n         SourceFile mainDescriptor = getMainDescriptorFile(workflowVersion);\n \n+        if (workflowVersion.getDagJson() != null) {", "originalCommit": "7c5e0336125cba112d02d87aa465d2764b87d703", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3MzQxNg==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407773416", "bodyText": "Why only do this if isValid() is true? We would want to avoid parsing invalid workflows again and again as well, I would think. Or am I missing something?", "author": "coverbeck", "createdAt": "2020-04-13T23:17:28Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1404,12 +1404,20 @@ public String getWorkflowDag(@ApiParam(hidden = true) @Auth Optional<User> user,\n         WorkflowVersion workflowVersion = getWorkflowVersion(workflow, workflowVersionId);\n         SourceFile mainDescriptor = getMainDescriptorFile(workflowVersion);\n \n+        if (workflowVersion.getDagJson() != null) {\n+            return workflowVersion.getDagJson();\n+        }\n+\n         if (mainDescriptor != null) {\n             Set<SourceFile> secondaryDescContent = extractDescriptorAndSecondaryFiles(workflowVersion);\n \n             LanguageHandlerInterface lInterface = LanguageHandlerFactory.getInterface(workflow.getFileType());\n-            return lInterface.getCleanDAG(workflowVersion.getWorkflowPath(), mainDescriptor.getContent(), secondaryDescContent,\n+            String dagJson = lInterface.getCleanDAG(workflowVersion.getWorkflowPath(), mainDescriptor.getContent(), secondaryDescContent,\n                     LanguageHandlerInterface.Type.DAG, toolDAO);\n+            if (workflowVersion.getReferenceType() == Version.ReferenceType.TAG && workflowVersion.isValid()) {", "originalCommit": "7c5e0336125cba112d02d87aa465d2764b87d703", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc4ODgyMQ==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407788821", "bodyText": "I guess I was thinking a user would be more likely to recreate a tag if it wasn't valid on our end and to take up less space in the db. Not that it takes up much space (see description). But yeah, other than that, not really much of a reason so will change to not check validity.", "author": "NatalieEO", "createdAt": "2020-04-14T00:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3MzQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NTI4NQ==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407775285", "bodyText": "I'm thinking this should not have @ApiModelProperty and should instead have @JsonIgnore. This is an internal caching mechanism that probably shouldn't be exposed to the client, especially since its value won't always be set.", "author": "coverbeck", "createdAt": "2020-04-13T23:23:10Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/WorkflowVersion.java", "diffHunk": "@@ -83,6 +83,14 @@\n     @ApiModelProperty(value = \"The subclass of this for services.\", position = 103)\n     private Service.SubClass subClass = null;\n \n+    @Column(columnDefinition = \"TEXT\")\n+    @ApiModelProperty(value = \"JSON needed to create DAG in UI\", position = 104)", "originalCommit": "7c5e0336125cba112d02d87aa465d2764b87d703", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NTM0Nw==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r407775347", "bodyText": "Same as previous comment.", "author": "coverbeck", "createdAt": "2020-04-13T23:23:20Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/WorkflowVersion.java", "diffHunk": "@@ -83,6 +83,14 @@\n     @ApiModelProperty(value = \"The subclass of this for services.\", position = 103)\n     private Service.SubClass subClass = null;\n \n+    @Column(columnDefinition = \"TEXT\")\n+    @ApiModelProperty(value = \"JSON needed to create DAG in UI\", position = 104)\n+    private String dagJson;\n+\n+    @Column(columnDefinition = \"TEXT\")\n+    @ApiModelProperty(value = \"JSON needed to create tool table in UI\", position = 105)", "originalCommit": "7c5e0336125cba112d02d87aa465d2764b87d703", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MzI3OA==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r408493278", "bodyText": "You should verify that the endpoint is working as well, i.e., just because you have successfully cached the value does not mean the endpoint is returning the correct value (it almost certainly actually is the correct value, but test should validate that).\nThis comment applies several times in this method.", "author": "coverbeck", "createdAt": "2020-04-14T23:26:30Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -331,6 +331,38 @@ public void testHostedEditAndDelete() {\n         }\n     }\n \n+    @Test\n+    public void testTableToolAndDagContent() {\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowApi, \"DockstoreTestUser2/cwl-gene-prioritization\", \"\", \"cwl\", SourceControl.GITHUB, \"/Dockstore.cwl\", true);\n+        workflow = workflowApi.refresh((workflow.getId()));\n+        WorkflowVersion branchVersion = workflow.getWorkflowVersions().stream().filter(wv -> wv.getName().equals(\"master\")).findFirst().get();\n+        WorkflowVersion tagVersion = workflow.getWorkflowVersions().stream().filter(wv -> wv.getName().equals(\"test\")).findFirst().get();\n+\n+        workflowApi.getTableToolContent(workflow.getId(), branchVersion.getId());", "originalCommit": "eaed31406809abca7238e079a512236f9846de98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5NDc4MA==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r408494780", "bodyText": "What is the commit id for a hosted workflow (I don't know)? If it's null, then caching will never work for hosted workflows.", "author": "coverbeck", "createdAt": "2020-04-14T23:31:35Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1404,12 +1404,20 @@ public String getWorkflowDag(@ApiParam(hidden = true) @Auth Optional<User> user,\n         WorkflowVersion workflowVersion = getWorkflowVersion(workflow, workflowVersionId);\n         SourceFile mainDescriptor = getMainDescriptorFile(workflowVersion);\n \n+        if (workflowVersion.getCommitID() != null && workflowVersion.getCommitID().equals(workflowVersion.getCommitForJsonGeneration()) && workflowVersion.getDagJson() != null) {", "originalCommit": "eaed31406809abca7238e079a512236f9846de98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg5NjU4OA==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r408896588", "bodyText": "Predicate used twice (at least first part), should be method", "author": "denis-yuen", "createdAt": "2020-04-15T14:42:12Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1439,12 +1447,20 @@ public String getTableToolContent(@ApiParam(hidden = true) @Auth Optional<User>\n         if (workflowVersion == null) {\n             throw new CustomWebApplicationException(\"workflow version \" + workflowVersionId + \" does not exist\", HttpStatus.SC_BAD_REQUEST);\n         }\n+\n+        if (workflowVersion.getCommitID() != null && workflowVersion.getCommitID().equals(workflowVersion.getCommitForJsonGeneration()) && workflowVersion.getToolTableJson() != null) {", "originalCommit": "eaed31406809abca7238e079a512236f9846de98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzOTkxMg==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r409839912", "bodyText": "It feels weird to me to call a REST endpoint like this when you're already in a different REST endpoint. It's ultimately just a function being called so maybe it's OK, but, for example, depending on how the UnitOfWork annotation is implemented, you might be ending up with a nested transaction. There are other things that you can also inject into a method, like @Context, which we aren't doing now, but could someday, and that might not work.\nThat method already caches for you, so although it's harmless, you're writing to the column twice.\n\nYou already have the toolsJSONTable result on line 1364; you don't need to calculate it again. The LanguageHandlerInterface there can be used to to get the DAG.", "author": "coverbeck", "createdAt": "2020-04-16T20:50:04Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1379,6 +1379,14 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n                         }\n \n                     }\n+\n+                    //store dag and tool table json\n+                    if (existingTag.getDagJson() == null) {\n+                        existingTag.setDagJson(getWorkflowDag(Optional.of(user), w.getId(), existingTag.getId()));", "originalCommit": "b62cfa064599d1ed7dff5c66c0cffaaba50f7e39", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MDU5NA==", "url": "https://github.com/dockstore/dockstore/pull/3388#discussion_r409840594", "bodyText": "This should be using the cache, if present. :)", "author": "coverbeck", "createdAt": "2020-04-16T20:51:25Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1358,7 +1358,7 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n                 boolean wasFrozen = existingTag.isFrozen();\n                 existingTag.updateByUser(version);\n                 boolean nowFrozen = existingTag.isFrozen();\n-                // If version is snapshotted on this update, grab and store image information\n+                // If version is snapshotted on this update, grab and store image information. Also store dag and tool table json if not available.\n                 if (!wasFrozen && nowFrozen) {\n                     LanguageHandlerInterface lInterface = LanguageHandlerFactory.getInterface(w.getFileType());\n                     String toolsJSONTable = lInterface.getContent(w.getWorkflowPath(), getMainDescriptorFile(existingTag).getContent(), extractDescriptorAndSecondaryFiles(existingTag), LanguageHandlerInterface.Type.TOOLS, toolDAO);", "originalCommit": "b62cfa064599d1ed7dff5c66c0cffaaba50f7e39", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89d3dac52fcea80f6199c9d20858461f47748c71", "url": "https://github.com/dockstore/dockstore/commit/89d3dac52fcea80f6199c9d20858461f47748c71", "message": "save dag and tooltable", "committedDate": "2020-04-20T15:56:11Z", "type": "commit"}, {"oid": "51a7f2999178bc94840116e099bc41064deb4ebe", "url": "https://github.com/dockstore/dockstore/commit/51a7f2999178bc94840116e099bc41064deb4ebe", "message": "add test", "committedDate": "2020-04-20T15:56:11Z", "type": "commit"}, {"oid": "a32c13b796db7bb0bde40385d0947c2866756a9c", "url": "https://github.com/dockstore/dockstore/commit/a32c13b796db7bb0bde40385d0947c2866756a9c", "message": "check that version is valid", "committedDate": "2020-04-20T15:56:11Z", "type": "commit"}, {"oid": "54b634a6695313bfa139205406d6924d8e734c74", "url": "https://github.com/dockstore/dockstore/commit/54b634a6695313bfa139205406d6924d8e734c74", "message": "Store json for branches and tags, check against commit to update", "committedDate": "2020-04-20T15:56:13Z", "type": "commit"}, {"oid": "bb57b0c2d7e18d5e0e5d03f62c2f0189e38fe656", "url": "https://github.com/dockstore/dockstore/commit/bb57b0c2d7e18d5e0e5d03f62c2f0189e38fe656", "message": "clear json columns during refresh", "committedDate": "2020-04-20T15:56:13Z", "type": "commit"}, {"oid": "5a98575197d75fac93c62ffb01f16f7d2358688d", "url": "https://github.com/dockstore/dockstore/commit/5a98575197d75fac93c62ffb01f16f7d2358688d", "message": "clear json columns during refresh", "committedDate": "2020-04-20T15:56:13Z", "type": "commit"}, {"oid": "f7629174408977bd4ac5ca19a61bcca08ef68634", "url": "https://github.com/dockstore/dockstore/commit/f7629174408977bd4ac5ca19a61bcca08ef68634", "message": "use interface for dag,", "committedDate": "2020-04-20T15:56:13Z", "type": "commit"}, {"oid": "eb4f9bdee43d0a176edbb88d3f59829fb17cb068", "url": "https://github.com/dockstore/dockstore/commit/eb4f9bdee43d0a176edbb88d3f59829fb17cb068", "message": "checkstyle", "committedDate": "2020-04-20T15:56:13Z", "type": "commit"}, {"oid": "d1d3564866e6e2dc2ed3533e1a145fe265101cb8", "url": "https://github.com/dockstore/dockstore/commit/d1d3564866e6e2dc2ed3533e1a145fe265101cb8", "message": "checkstyle", "committedDate": "2020-04-20T16:22:28Z", "type": "commit"}, {"oid": "d1d3564866e6e2dc2ed3533e1a145fe265101cb8", "url": "https://github.com/dockstore/dockstore/commit/d1d3564866e6e2dc2ed3533e1a145fe265101cb8", "message": "checkstyle", "committedDate": "2020-04-20T16:22:28Z", "type": "forcePushed"}]}