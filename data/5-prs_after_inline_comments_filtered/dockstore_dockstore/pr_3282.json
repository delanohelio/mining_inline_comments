{"pr_number": 3282, "pr_title": "Feature/3270/gh apps branches", "pr_createdAt": "2020-02-28T14:06:37Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3282", "timeline": [{"oid": "fe2e05a345cfb0266213e0a9bb976bf2448f9a2b", "url": "https://github.com/dockstore/dockstore/commit/fe2e05a345cfb0266213e0a9bb976bf2448f9a2b", "message": "first attempt at getting branches supported for dockstore.yml workflows and services", "committedDate": "2020-02-26T20:39:18Z", "type": "commit"}, {"oid": "548c83273c5a055998ffdbb0dcd3862c389296a4", "url": "https://github.com/dockstore/dockstore/commit/548c83273c5a055998ffdbb0dcd3862c389296a4", "message": "refresh dockstore.yml adds branches too", "committedDate": "2020-02-27T13:40:04Z", "type": "commit"}, {"oid": "6659e8a4c185ec0d7274fffa06fdc9af919f8a61", "url": "https://github.com/dockstore/dockstore/commit/6659e8a4c185ec0d7274fffa06fdc9af919f8a61", "message": "fix failing tests", "committedDate": "2020-02-27T13:49:56Z", "type": "commit"}, {"oid": "f5ea7102ed510a69ba554eb983d47e2c7e9f80e1", "url": "https://github.com/dockstore/dockstore/commit/f5ea7102ed510a69ba554eb983d47e2c7e9f80e1", "message": "update regex for matching git ref", "committedDate": "2020-02-27T15:17:42Z", "type": "commit"}, {"oid": "e5b1b9a6f574ba034f5b0324e2f80eee9d60153f", "url": "https://github.com/dockstore/dockstore/commit/e5b1b9a6f574ba034f5b0324e2f80eee9d60153f", "message": "renamed old function", "committedDate": "2020-02-27T19:39:31Z", "type": "commit"}, {"oid": "0ea720546e33f1786d8549dc99816df79d9a86b1", "url": "https://github.com/dockstore/dockstore/commit/0ea720546e33f1786d8549dc99816df79d9a86b1", "message": "Merge branch 'develop' into feature/3270/gh-apps-branches", "committedDate": "2020-02-27T19:44:40Z", "type": "commit"}, {"oid": "e2d2da67162da530860656263e13f08a1a11d190", "url": "https://github.com/dockstore/dockstore/commit/e2d2da67162da530860656263e13f08a1a11d190", "message": "update test to also add a branch", "committedDate": "2020-02-28T13:56:57Z", "type": "commit"}, {"oid": "22c3d7809fbc11fdbd837a05e5f116a34e495bc2", "url": "https://github.com/dockstore/dockstore/commit/22c3d7809fbc11fdbd837a05e5f116a34e495bc2", "message": "Merge branch 'develop' into feature/3270/gh-apps-branches", "committedDate": "2020-02-28T14:07:14Z", "type": "commit"}, {"oid": "27c03af2ab872a93e515427dccdf080a7630b251", "url": "https://github.com/dockstore/dockstore/commit/27c03af2ab872a93e515427dccdf080a7630b251", "message": "fix codacy issue", "committedDate": "2020-02-28T14:28:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzNTM3NA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r385835374", "bodyText": "Suggest LOG.error", "author": "coverbeck", "createdAt": "2020-02-28T17:49:55Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -893,28 +891,44 @@ public void syncUserMetadataFromGitHub(User user) {\n     }\n \n     /**\n-     * Retrieves a tag from GitHub and creates a version on Dockstore\n+     * Retrieves a tag/branch from GitHub and creates a version on Dockstore\n      * @param repository Repository path (ex. dockstore/dockstore-ui2)\n-     * @param gitReference Tag reference from GitHub (ex. 1.0)\n+     * @param gitReference Branch/tag reference from GitHub (ex. refs/tags/1.0)\n      * @param workflow Workflow to add version to\n      * @param dockstoreYml Dockstore YML sourcefile\n      * @return New or updated version\n      * @throws IOException\n      */\n-    public WorkflowVersion createTagVersionForWorkflow(String repository, String gitReference, Workflow workflow, SourceFile dockstoreYml) throws IOException {\n+    public WorkflowVersion createVersionForWorkflow(String repository, String gitReference, Workflow workflow, SourceFile dockstoreYml) throws IOException {\n         GHRepository ghRepository = getRepository(repository);\n-        String refName = \"tags/\" + gitReference;\n-        GHRef ghRef = ghRepository.getRef(refName);\n+\n+        // Match the github reference (ex. refs/heads/feature/foobar or refs/tags/1.0)\n+        Pattern pattern = Pattern.compile(\"^refs/(tags|heads)/([a-zA-Z0-9]+([./_-]?[a-zA-Z0-9]+)*)$\");\n+        Matcher matcher = pattern.matcher(gitReference);\n+\n+        if (!matcher.find()) {\n+            String msg = \"Reference \" + gitReference + \" is not of the valid form\";\n+            LOG.info(msg);", "originalCommit": "27c03af2ab872a93e515427dccdf080a7630b251", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzODI2MA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r385838260", "bodyText": "This is fine, but if so inclined you could just do existingVersion.isPresent(v -> workflow.removeWorkflowVersion(v)) instead of needing an if statement an calling 'get (exact syntax probably wrong)", "author": "coverbeck", "createdAt": "2020-02-28T17:56:18Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -893,28 +891,44 @@ public void syncUserMetadataFromGitHub(User user) {\n     }\n \n     /**\n-     * Retrieves a tag from GitHub and creates a version on Dockstore\n+     * Retrieves a tag/branch from GitHub and creates a version on Dockstore\n      * @param repository Repository path (ex. dockstore/dockstore-ui2)\n-     * @param gitReference Tag reference from GitHub (ex. 1.0)\n+     * @param gitReference Branch/tag reference from GitHub (ex. refs/tags/1.0)\n      * @param workflow Workflow to add version to\n      * @param dockstoreYml Dockstore YML sourcefile\n      * @return New or updated version\n      * @throws IOException\n      */\n-    public WorkflowVersion createTagVersionForWorkflow(String repository, String gitReference, Workflow workflow, SourceFile dockstoreYml) throws IOException {\n+    public WorkflowVersion createVersionForWorkflow(String repository, String gitReference, Workflow workflow, SourceFile dockstoreYml) throws IOException {\n         GHRepository ghRepository = getRepository(repository);\n-        String refName = \"tags/\" + gitReference;\n-        GHRef ghRef = ghRepository.getRef(refName);\n+\n+        // Match the github reference (ex. refs/heads/feature/foobar or refs/tags/1.0)\n+        Pattern pattern = Pattern.compile(\"^refs/(tags|heads)/([a-zA-Z0-9]+([./_-]?[a-zA-Z0-9]+)*)$\");\n+        Matcher matcher = pattern.matcher(gitReference);\n+\n+        if (!matcher.find()) {\n+            String msg = \"Reference \" + gitReference + \" is not of the valid form\";\n+            LOG.info(msg);\n+            throw new CustomWebApplicationException(msg, LAMBDA_FAILURE);\n+        }\n+        String gitBranchType = matcher.group(1);\n+        String gitBranchName = matcher.group(2);\n+\n+        GHRef ghRef = ghRepository.getRef(gitBranchType + \"/\" + gitBranchName);\n \n         Triple<String, Date, String> ref = getRef(ghRef, ghRepository);\n         if (ref == null) {\n-            String msg = \"Cannot retrieve the workflow reference from GitHub, ensure that \" + gitReference + \" is a valid tag.\";\n+            String msg = \"Cannot retrieve the workflow reference from GitHub, ensure that \" + gitReference + \" is a valid branch/tag.\";\n             LOG.info(msg);\n             throw new CustomWebApplicationException(msg, LAMBDA_FAILURE);\n         }\n \n-        // Find existing version if it exists\n-        Optional<WorkflowVersion> existingVersion = workflow.getWorkflowVersions().stream().filter(workflowVersion -> Objects.equals(workflowVersion.getReference(), gitReference)).findFirst();\n+        // Delete existing version if it exists\n+        Optional<WorkflowVersion> existingVersion = workflow.getWorkflowVersions().stream().filter(workflowVersion -> Objects.equals(workflowVersion.getReference(), gitBranchName)).findFirst();\n+        if (existingVersion.isPresent()) {", "originalCommit": "27c03af2ab872a93e515427dccdf080a7630b251", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NjI2NA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r385886264", "bodyText": "Will die if DockstoreTestUser2 releases a new version or someone starts working on a PR", "author": "denis-yuen", "createdAt": "2020-02-28T19:41:21Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/ServiceIT.java", "diffHunk": "@@ -353,16 +353,15 @@ public void updateServiceSync() throws Exception {\n         String installationId = \"1179416\";\n \n         // Add service\n-        List<io.swagger.client.model.Workflow> services = client.handleGitHubRelease(serviceRepo, \"DockstoreTestUser2\", \"1.0\", installationId);\n+        List<io.swagger.client.model.Workflow> services = client.handleGitHubRelease(serviceRepo, \"DockstoreTestUser2\", \"refs/tags/1.0\", installationId);\n         assertEquals(\"Should only have one service\", 1, services.size());\n         io.swagger.client.model.Workflow service = services.get(0);\n         service = client.refresh(service.getId());\n         assertNotNull(service);\n-        assertEquals(\"Should have one new version (one release has no yaml, another has invalid yaml)\", 1, service.getWorkflowVersions().size());\n+        assertEquals(\"Should have two new versions master and 1.0\", 2, service.getWorkflowVersions().size());", "originalCommit": "27c03af2ab872a93e515427dccdf080a7630b251", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NjYxOA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r385886618", "bodyText": "Ditto", "author": "denis-yuen", "createdAt": "2020-02-28T19:42:09Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/WebhookIT.java", "diffHunk": "@@ -115,6 +115,16 @@ public void testGitHubReleaseNoWorkflowOnDockstore() throws Exception {\n         assertEquals(\"Should be a CWL workflow\", Workflow.DescriptorTypeEnum.CWL, workflow2.getDescriptorType());\n         assertEquals(\"Should be type DOCKSTORE_YML\", Workflow.ModeEnum.DOCKSTORE_YML, workflow2.getMode());\n         assertEquals(\"Should have one version 0.2\", 1, workflow2.getWorkflowVersions().size());\n+\n+        // Branch master on GitHub - updates two existing workflows\n+        workflows = client.handleGitHubRelease(workflowRepo, \"DockstoreTestUser2\", \"refs/heads/master\", installationId);\n+        assertEquals(\"Should only have two services\", 2, workflows.size());\n+\n+        workflow = client.getWorkflowByPath(\"github.com/\" + workflowRepo + \"/foobar\", \"\", false);\n+        assertEquals(\"Should have three versions 0.1, 0.2, and master\", 3, workflow.getWorkflowVersions().size());", "originalCommit": "27c03af2ab872a93e515427dccdf080a7630b251", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5NjA3Nw==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r386396077", "bodyText": "In this case I am explicitly adding versions, not calling a refresh. But I'll update to check for versions by name.", "author": "agduncan94", "createdAt": "2020-03-02T13:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NjYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4Njc5NA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r385886794", "bodyText": "Ditto (and will not repeat below)", "author": "denis-yuen", "createdAt": "2020-02-28T19:42:33Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/WebhookIT.java", "diffHunk": "@@ -139,16 +149,20 @@ public void testManualRefreshWorkflowWithGitHubApp() throws Exception {\n         // Refresh\n         workflow = client.refresh(workflow.getId());\n         assertNotNull(workflow);\n-        assertEquals(\"Should have two workflow versions: 0.1, 0.2 and 0.3\", 3, workflow.getWorkflowVersions().size());\n+        assertEquals(\"Should have four workflow versions: 0.1, 0.2 and 0.3, and master\", 4, workflow.getWorkflowVersions().size());", "originalCommit": "27c03af2ab872a93e515427dccdf080a7630b251", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "11bbb3af61f59f79d24a21459c5d3e29f878b2ca", "url": "https://github.com/dockstore/dockstore/commit/11bbb3af61f59f79d24a21459c5d3e29f878b2ca", "message": "changes from pr", "committedDate": "2020-03-02T13:45:15Z", "type": "commit"}, {"oid": "de6cd7885f46b2f58dc41a221da60aeda2f440b1", "url": "https://github.com/dockstore/dockstore/commit/de6cd7885f46b2f58dc41a221da60aeda2f440b1", "message": "Merge branch 'develop' into feature/3270/gh-apps-branches", "committedDate": "2020-03-03T13:54:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyNDQ3NA==", "url": "https://github.com/dockstore/dockstore/pull/3282#discussion_r387224474", "bodyText": "Isn't that a refresh on line 152?\nCouldn't someone else create new branches on DockstoreTestUser2/workflow-dockstore-yml and then break this?", "author": "denis-yuen", "createdAt": "2020-03-03T18:53:24Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/WebhookIT.java", "diffHunk": "@@ -127,28 +139,36 @@ public void testManualRefreshWorkflowWithGitHubApp() throws Exception {\n         WorkflowsApi client = new WorkflowsApi(webClient);\n \n         // Release 0.1 on GitHub - one new wdl workflow\n-        List<Workflow> workflows = client.handleGitHubRelease(workflowRepo, \"DockstoreTestUser2\", \"0.1\", installationId);\n+        List<Workflow> workflows = client.handleGitHubRelease(workflowRepo, \"DockstoreTestUser2\", \"refs/tags/0.1\", installationId);\n         assertEquals(\"Should only have one service\", 1, workflows.size());\n \n         // Ensure that new workflow is created and is what is expected\n         Workflow workflow = client.getWorkflowByPath(\"github.com/\" + workflowRepo + \"/foobar\", \"\", false);\n         assertEquals(\"Should be a WDL workflow\", Workflow.DescriptorTypeEnum.WDL, workflow.getDescriptorType());\n         assertEquals(\"Should be type DOCKSTORE_YML\", Workflow.ModeEnum.DOCKSTORE_YML, workflow.getMode());\n-        assertEquals(\"Should have one version 0.1\", 1, workflow.getWorkflowVersions().size());\n+        assertTrue(\"Should have a 0.1 version.\", workflow.getWorkflowVersions().stream().anyMatch((WorkflowVersion version) -> Objects.equals(version.getName(), \"0.1\")));\n \n         // Refresh\n         workflow = client.refresh(workflow.getId());\n         assertNotNull(workflow);\n-        assertEquals(\"Should have two workflow versions: 0.1, 0.2 and 0.3\", 3, workflow.getWorkflowVersions().size());\n+        assertEquals(\"Should have four workflow versions: 0.1, 0.2 and 0.3, and master\", 4, workflow.getWorkflowVersions().size());", "originalCommit": "de6cd7885f46b2f58dc41a221da60aeda2f440b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "10dd7d1d5499b0cae7b05e1ab222304635e0a5b5", "url": "https://github.com/dockstore/dockstore/commit/10dd7d1d5499b0cae7b05e1ab222304635e0a5b5", "message": "remove line that could fail potentially", "committedDate": "2020-03-03T18:55:33Z", "type": "commit"}]}