{"pr_number": 3235, "pr_title": "Feature/reduce language hardcoding", "pr_createdAt": "2020-02-13T21:36:27Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3235", "timeline": [{"oid": "40487378f70f743f8be6e26d85d03c68a3e2822f", "url": "https://github.com/dockstore/dockstore/commit/40487378f70f743f8be6e26d85d03c68a3e2822f", "message": "Further reduce hardcoded languages", "committedDate": "2020-02-13T20:56:39Z", "type": "commit"}, {"oid": "a2095466012b7b02a288d916155287e330982211", "url": "https://github.com/dockstore/dockstore/commit/a2095466012b7b02a288d916155287e330982211", "message": "Reduce more hardcoding", "committedDate": "2020-02-13T21:33:51Z", "type": "commit"}, {"oid": "4fa3dbec61501d8d385bcc7c02e497fccb55fcca", "url": "https://github.com/dockstore/dockstore/commit/4fa3dbec61501d8d385bcc7c02e497fccb55fcca", "message": "Fix found due to tests", "committedDate": "2020-02-13T22:17:23Z", "type": "commit"}, {"oid": "a5d82ce4198f71c8ed33bc0e32758f1dad2107d9", "url": "https://github.com/dockstore/dockstore/commit/a5d82ce4198f71c8ed33bc0e32758f1dad2107d9", "message": "Make codacy happier", "committedDate": "2020-02-13T22:31:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MjM5Nw==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r379552397", "bodyText": "Was like this, but I'm on a mission to log all exceptions and I would also make this LOG.error", "author": "coverbeck", "createdAt": "2020-02-14T17:24:50Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -700,8 +690,6 @@ public User getUserMetadata(User user) {\n         } catch (IOException ex) {\n             LOG.info(\"Could not find user information for user \" + user.getUsername());", "originalCommit": "a5d82ce4198f71c8ed33bc0e32758f1dad2107d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1NDUxOQ==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r380754519", "bodyText": "It is a judgement call, but I think this doesn't rise to the severity required for an error.\nLogged exception", "author": "denis-yuen", "createdAt": "2020-02-18T15:41:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MjM5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1NDMwMw==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r379554303", "bodyText": "Not entirely grokking this whole flow, but should nextflow.config be hard-coded like this?", "author": "coverbeck", "createdAt": "2020-02-14T17:29:09Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1230,23 +1230,19 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n         @ApiParam(value = \"Descriptor type\", required = true) @QueryParam(\"descriptorType\") String descriptorType,\n         @ApiParam(value = \"Default test parameter file path\") @QueryParam(\"defaultTestParameterFilePath\") String defaultTestParameterFilePath) {\n \n-        // Validate descriptor path based on type\n-        if (\"nfl\".equals(descriptorType) && !defaultWorkflowPath.endsWith(\"nextflow.config\")) {\n-            throw new CustomWebApplicationException(\n-                    \"Please ensure that the given workflow path '\" + defaultWorkflowPath + \"' is of type \" + descriptorType\n+        for (DescriptorLanguage typeItem : DescriptorLanguage.values()) {\n+            if (typeItem.getShortName().equalsIgnoreCase(descriptorType)) {\n+                // check that plugin is active\n+                if (typeItem.isPluginLanguage() && !LanguageHandlerFactory.getPluginMap().containsKey(typeItem)) {\n+                    throw new CustomWebApplicationException(\"plugin for \" + typeItem.getShortName() + \" is not installed\",\n+                        HttpStatus.SC_BAD_REQUEST);\n+                }\n+                if (typeItem.getDefaultPrimaryDescriptorExtensions().stream().noneMatch(defaultWorkflowPath::endsWith)) {\n+                    throw new CustomWebApplicationException(\n+                        \"Please ensure that the given workflow path '\" + defaultWorkflowPath + \"' is of type \" + descriptorType\n                             + \" and ends in the file nextflow.config\", HttpStatus.SC_BAD_REQUEST);", "originalCommit": "a5d82ce4198f71c8ed33bc0e32758f1dad2107d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1NjQ5NQ==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r379556495", "bodyText": "This is for line 1228, since I can't comment directly on it, and it's beyond the scope of the PR, but that one should mention nextflow, and eventually Galaxy. It's going to be an unfortunate mismatch, as the OpenAPI is generated at buildtime, the the language plugin support is at runtime.", "author": "coverbeck", "createdAt": "2020-02-14T17:34:19Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1230,23 +1230,19 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n         @ApiParam(value = \"Descriptor type\", required = true) @QueryParam(\"descriptorType\") String descriptorType,\n         @ApiParam(value = \"Default test parameter file path\") @QueryParam(\"defaultTestParameterFilePath\") String defaultTestParameterFilePath) {\n \n-        // Validate descriptor path based on type", "originalCommit": "a5d82ce4198f71c8ed33bc0e32758f1dad2107d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1NzEzNQ==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r380757135", "bodyText": "I agree, I haven't decided on the best way to handle these cases where a plugin at runtime approach doesn't work well. Will tackle in a follow-up.", "author": "denis-yuen", "createdAt": "2020-02-18T15:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1NjQ5NQ=="}], "type": "inlineReview"}, {"oid": "3099931e50024bf55948f17387e492a5ce93ad35", "url": "https://github.com/dockstore/dockstore/commit/3099931e50024bf55948f17387e492a5ce93ad35", "message": "PR feedback", "committedDate": "2020-02-18T15:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc4NjE5MQ==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r380786191", "bodyText": "SonarLint doesn't like Joiner.on btw https://rules.sonarsource.com/java/RSPEC-4738", "author": "garyluu", "createdAt": "2020-02-18T16:27:48Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1240,7 +1241,8 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n                 if (typeItem.getDefaultPrimaryDescriptorExtensions().stream().noneMatch(defaultWorkflowPath::endsWith)) {\n                     throw new CustomWebApplicationException(\n                         \"Please ensure that the given workflow path '\" + defaultWorkflowPath + \"' is of type \" + descriptorType\n-                            + \" and ends in the file nextflow.config\", HttpStatus.SC_BAD_REQUEST);\n+                            + \" and ends in an extension from\" + Joiner.on(\",\").join(typeItem.getDefaultPrimaryDescriptorExtensions()),", "originalCommit": "3099931e50024bf55948f17387e492a5ce93ad35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6a7546c0fcfaba4d0819f92aaed6d3613ef2c036", "url": "https://github.com/dockstore/dockstore/commit/6a7546c0fcfaba4d0819f92aaed6d3613ef2c036", "message": "More cleanup, discovered while hooking up Galaxy", "committedDate": "2020-02-18T17:12:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1NzMxMA==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r380957310", "bodyText": "I guess since it doesn't return anything now it might be better named setUserMetadata?", "author": "david4096", "createdAt": "2020-02-18T21:52:29Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -680,9 +671,8 @@ protected String getCommitID(String repositoryId, Version version) {\n     /**\n      * Updates a user object with metadata from GitHub\n      * @param user the user to be updated\n-     * @return Updated user object\n      */\n-    public User getUserMetadata(User user) {\n+    public void getUserMetadata(User user) {", "originalCommit": "6a7546c0fcfaba4d0819f92aaed6d3613ef2c036", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1OTY0Nw==", "url": "https://github.com/dockstore/dockstore/pull/3235#discussion_r380959647", "bodyText": "will do in a follow-up", "author": "denis-yuen", "createdAt": "2020-02-18T21:57:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1NzMxMA=="}], "type": "inlineReview"}]}