{"pr_number": 3289, "pr_title": "add registry column to image table", "pr_createdAt": "2020-03-02T18:01:29Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3289", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2MDMxNw==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386560317", "bodyText": "Real nit-picky, but maybe Registry the image belongs to? At first glance I read Registry image as noun phrase", "author": "coverbeck", "createdAt": "2020-03-02T18:11:00Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Image.java", "diffHunk": "@@ -61,6 +61,10 @@\n     @ApiModelProperty(value = \"Docker ID of the image\", position = 4)\n     private String imageID;\n \n+    @Column()\n+    @ApiModelProperty(value = \"Registry image belongs to\", position = 5)", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2MTQ1MQ==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386561451", "bodyText": "You don't need to create an intermediate Set; you can just add the image directly by calling tag.getImages().add(<image>).", "author": "coverbeck", "createdAt": "2020-03-02T18:13:22Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/AbstractImageRegistry.java", "diffHunk": "@@ -330,7 +330,7 @@ private void logToolRefresh(final String dashboardPrefix, final Tool tool) {\n                         final String manifestDigest = i.getDigest();\n                         checksums.add(new Checksum(manifestDigest.split(\":\")[0], manifestDigest.split(\":\")[1]));\n                     }\n-                    Set<Image> images = Collections.singleton(new Image(checksums, repo, tag.getName(), r.getImageID()));\n+                    Set<Image> images = Collections.singleton(new Image(checksums, repo, tag.getName(), r.getImageID(), tool.getRegistry()));\n                     tag.getImages().addAll(images);", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2MjI0MA==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386562240", "bodyText": "Same, you don't need intermediate set", "author": "coverbeck", "createdAt": "2020-03-02T18:14:54Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/AbstractImageRegistry.java", "diffHunk": "@@ -595,7 +595,7 @@ private void updateImageInformation(Tool tool, Tag newTag, Tag oldTag) {\n                                 List<Checksum> checksums = new ArrayList<>();\n \n                                 checksums.add(new Checksum(manifestDigest.split(\":\")[0], manifestDigest.split(\":\")[1]));\n-                                Set<Image> images = Collections.singleton(new Image(checksums, tool.getNamespace() + '/' + tool.getName(), tag.getName(), null));\n+                                Set<Image> images = Collections.singleton(new Image(checksums, tool.getNamespace() + '/' + tool.getName(), tag.getName(), null, tool.getRegistry()));", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MDY3Ng==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386570676", "bodyText": "Following up on my previous comments, if this always returns a max of one Image (?), then the method should return an Optional and not a Set.", "author": "coverbeck", "createdAt": "2020-03-02T18:31:01Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -121,7 +121,7 @@ public QuayImageRegistry(final Token quayToken) {\n             final String imageID = quayTag.getImageId();\n             List<Checksum> checksums = new ArrayList<>();\n             checksums.add(new Checksum(manifestDigest.split(\":\")[0], manifestDigest.split(\":\")[1]));\n-            return Collections.singleton(new Image(checksums, repo, tag.getName(), imageID));\n+            return Collections.singleton(new Image(checksums, repo, tag.getName(), imageID, tool.getRegistry()));", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNzM2NQ==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386607365", "bodyText": "Assert getImages() not empty.", "author": "garyluu", "createdAt": "2020-03-02T19:38:44Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -889,6 +890,10 @@ private void testTRSConversion(final List<ToolVersion> versions, final String sn\n                 assertTrue(trsVersion.isIsProduction());\n                 assertEquals(\"There should be\" + numImages + \"image(s) in this workflow\", numImages, trsVersion.getImages().size());\n                 snapshotInList = true;\n+                for (ImageData imageData :trsVersion.getImages()) {", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwOTU2OA==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r386609568", "bodyText": "Should this just use an Enum?\nSee Organization.status for an example.\nThe enum would seem to just be io.dockstore.common.Registry", "author": "denis-yuen", "createdAt": "2020-03-02T19:43:21Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Image.java", "diffHunk": "@@ -61,6 +61,10 @@\n     @ApiModelProperty(value = \"Docker ID of the image\", position = 4)\n     private String imageID;\n \n+    @Column()\n+    @ApiModelProperty(value = \"Registry image belongs to\", position = 5)\n+    private String imageRegistry;", "originalCommit": "94cadfd349440fe1b2b6183703e4f5a40e07be6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3OTc3MQ==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r389879771", "bodyText": "Comment above seems to be out-of-date now.\nI guess the bigger issue is I don't understand how/if this deals with paging and the identified problem that we may need to page through a large number of tags in order to get images.", "author": "denis-yuen", "createdAt": "2020-03-09T18:27:18Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -112,7 +113,7 @@ public QuayImageRegistry(final Token quayToken) {\n     }\n \n     //TODO: If the repo has a lot of tags, then it needs to be paged through. Can get tag info individually, but then that's more API calls.\n-    private Set<Image> getImagesForTag(final Tool tool, final Tag tag, final QuayTag quayTag) {\n+    private Optional<Image> getImageForTag(final Tool tool, final Tag tag, final QuayTag quayTag) {", "originalCommit": "f9aeb8d2317a8f226e626ca48719411ca2d6b4fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4NTQxNg==", "url": "https://github.com/dockstore/dockstore/pull/3289#discussion_r389885416", "bodyText": "yeah, that is in another ticket https://ucsc-cgl.atlassian.net/browse/DOCK-1211", "author": "NatalieEO", "createdAt": "2020-03-09T18:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3OTc3MQ=="}], "type": "inlineReview"}, {"oid": "223fe946d2b919ad4dc7eed44d6eccb03acc7499", "url": "https://github.com/dockstore/dockstore/commit/223fe946d2b919ad4dc7eed44d6eccb03acc7499", "message": "add registry column", "committedDate": "2020-03-09T18:39:32Z", "type": "commit"}, {"oid": "3d1feab9b80aa99483a8dd4eeba4be51f5b69b06", "url": "https://github.com/dockstore/dockstore/commit/3d1feab9b80aa99483a8dd4eeba4be51f5b69b06", "message": "PR feedback", "committedDate": "2020-03-09T18:39:32Z", "type": "commit"}, {"oid": "5f34c71d6b8ad31846db72ab5f7e3978287dfe8e", "url": "https://github.com/dockstore/dockstore/commit/5f34c71d6b8ad31846db72ab5f7e3978287dfe8e", "message": "openapi and swagger should match", "committedDate": "2020-03-09T18:39:32Z", "type": "commit"}, {"oid": "5f34c71d6b8ad31846db72ab5f7e3978287dfe8e", "url": "https://github.com/dockstore/dockstore/commit/5f34c71d6b8ad31846db72ab5f7e3978287dfe8e", "message": "openapi and swagger should match", "committedDate": "2020-03-09T18:39:32Z", "type": "forcePushed"}, {"oid": "884ef121d11b724e2539b687458b4ec78c0a976f", "url": "https://github.com/dockstore/dockstore/commit/884ef121d11b724e2539b687458b4ec78c0a976f", "message": "remove toString in Registry enum so openapi matches swagger", "committedDate": "2020-03-11T19:33:30Z", "type": "commit"}]}