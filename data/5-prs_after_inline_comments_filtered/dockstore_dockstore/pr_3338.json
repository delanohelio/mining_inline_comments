{"pr_number": 3338, "pr_title": "Feature/3233/paginated tags", "pr_createdAt": "2020-03-20T20:42:06Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3338", "timeline": [{"oid": "b4e4f04e0ae9d83d41e9aa30b5ddda3c5a78bcba", "url": "https://github.com/dockstore/dockstore/commit/b4e4f04e0ae9d83d41e9aa30b5ddda3c5a78bcba", "message": "Add function to get all tags", "committedDate": "2020-03-20T15:06:51Z", "type": "commit"}, {"oid": "c754ed2a55c09cad1410e6ffc69723f3b06dc2d7", "url": "https://github.com/dockstore/dockstore/commit/c754ed2a55c09cad1410e6ffc69723f3b06dc2d7", "message": "Add test", "committedDate": "2020-03-20T15:06:59Z", "type": "commit"}, {"oid": "40ab891c0b11ce31339e8ce46b790820d184d68c", "url": "https://github.com/dockstore/dockstore/commit/40ab891c0b11ce31339e8ce46b790820d184d68c", "message": "Mute successful", "committedDate": "2020-03-20T15:08:01Z", "type": "commit"}, {"oid": "994593cc6f418397f1eb5938f80d0ab365cb8e68", "url": "https://github.com/dockstore/dockstore/commit/994593cc6f418397f1eb5938f80d0ab365cb8e68", "message": "Modify Quay api", "committedDate": "2020-03-20T15:58:55Z", "type": "commit"}, {"oid": "307378a0a29d85f1d799d7a76e51c67138656cfa", "url": "https://github.com/dockstore/dockstore/commit/307378a0a29d85f1d799d7a76e51c67138656cfa", "message": "?", "committedDate": "2020-03-20T16:15:05Z", "type": "commit"}, {"oid": "3eccaf067dada0b686d12c944305e7eac5cd5c3f", "url": "https://github.com/dockstore/dockstore/commit/3eccaf067dada0b686d12c944305e7eac5cd5c3f", "message": "Fix casting issue", "committedDate": "2020-03-20T17:33:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyODI1OA==", "url": "https://github.com/dockstore/dockstore/pull/3338#discussion_r396528258", "bodyText": "Seems possible to simplify.\nIf I understand correctly, this loop is handling the case when we need to paginate. The loop below is when you do not.\nBut all getAllQuayTags is doing is putting all tags into one big collection.\nIt should be possible to simplify by modifying getAllQuayTags to be tolerant of results that are one page.", "author": "denis-yuen", "createdAt": "2020-03-23T15:16:18Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -65,45 +69,72 @@\n     private static final Logger LOG = LoggerFactory.getLogger(QuayImageRegistry.class);\n \n     private final Token quayToken;\n-    private final ApiClient apiClient;\n     private final BuildApi buildApi;\n     private final RepositoryApi repositoryApi;\n     private final UserApi userApi;\n+    private final TagApi tagApi;\n \n     public QuayImageRegistry(final Token quayToken) {\n         this.quayToken = quayToken;\n-\n-        apiClient = Configuration.getDefaultApiClient();\n+        ApiClient apiClient = Configuration.getDefaultApiClient();\n         apiClient.addDefaultHeader(\"Authorization\", \"Bearer \" + quayToken.getContent());\n         this.buildApi = new BuildApi(apiClient);\n         this.repositoryApi = new RepositoryApi(apiClient);\n         this.userApi = new UserApi(apiClient);\n+        this.tagApi = new TagApi((apiClient));\n+\n     }\n \n+    private List<QuayTag> getAllQuayTags(String repository) throws ApiException {\n+        List<QuayTag> allQuayTags = new ArrayList<>();\n+        // Completely arbitrary maxPageSize in the weird event that Quay.io's pagination results in an infinite loop or something\n+        final int maxPageSize = 100;\n+        for (int page = 1; page < Integer.MAX_VALUE; page++) {\n+            InlineResponse2002 inlineResponse2002 = tagApi.listRepoTags(repository, page, maxPageSize, null, true);\n+            List<QuayTag> quayTags = inlineResponse2002.getTags();\n+            allQuayTags.addAll(quayTags);\n+            if (!inlineResponse2002.isHasAdditional()) {\n+                break;\n+            }\n+        }\n+        return allQuayTags;\n+    }\n+\n+\n     @Override\n     public List<Tag> getTags(Tool tool) {\n         LOG.info(quayToken.getUsername() + \" ======================= Getting tags for: {}================================\", tool.getPath());\n-\n+        final String repo = tool.getNamespace() + '/' + tool.getName();\n         final List<Tag> tags = new ArrayList<>();\n         final Optional<QuayRepo> toolFromQuay = getToolFromQuay(tool);\n         if (toolFromQuay.isPresent()) {\n             final QuayRepo quayRepo = toolFromQuay.get();\n             final Map<String, QuayTag> tagsFromRepo = quayRepo.getTags();\n-            for (QuayTag tagItem : tagsFromRepo.values()) {\n+            final int maxQuayTagsReturnedByRepo = 500;\n+            if (tagsFromRepo.size() == maxQuayTagsReturnedByRepo) {", "originalCommit": "3eccaf067dada0b686d12c944305e7eac5cd5c3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0NzQ3Nw==", "url": "https://github.com/dockstore/dockstore/pull/3338#discussion_r396547477", "bodyText": "The loop below is for converting all QuayTags to Tags. getAllQuayTags works even if there's one page (not that it'll ever get to that point).", "author": "garyluu", "createdAt": "2020-03-23T15:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyODI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNTkyOA==", "url": "https://github.com/dockstore/dockstore/pull/3338#discussion_r396625928", "bodyText": "Not sure if we're talking about the same thing.\nTo me it looks like the loop on line 117 and the look on 129 are the same, they just run across different collections. It should be possible to\n\nHave one method with a conditional in it to build the right collection in the two cases\nrun one loop on the built collection", "author": "denis-yuen", "createdAt": "2020-03-23T17:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyODI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0NTI1Mg==", "url": "https://github.com/dockstore/dockstore/pull/3338#discussion_r396745252", "bodyText": "Changed a few things, but it's one loop now", "author": "garyluu", "createdAt": "2020-03-23T20:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyODI1OA=="}], "type": "inlineReview"}, {"oid": "b673f87b5758b7f456bad3716360c3a7496ca234", "url": "https://github.com/dockstore/dockstore/commit/b673f87b5758b7f456bad3716360c3a7496ca234", "message": "Simplify", "committedDate": "2020-03-23T20:32:49Z", "type": "commit"}, {"oid": "f4db4edc5a1c67e6612b4a2795c30e806e88ff31", "url": "https://github.com/dockstore/dockstore/commit/f4db4edc5a1c67e6612b4a2795c30e806e88ff31", "message": "Fix checkstyle", "committedDate": "2020-03-24T16:27:39Z", "type": "commit"}]}