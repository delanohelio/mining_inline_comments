{"pr_number": 3470, "pr_title": "Feature/3456/track git commit", "pr_createdAt": "2020-05-12T16:18:18Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3470", "timeline": [{"oid": "c7c9fad497de8afd2832fbe338e26cf7344f4ae7", "url": "https://github.com/dockstore/dockstore/commit/c7c9fad497de8afd2832fbe338e26cf7344f4ae7", "message": "keep track of bitbucket commit id", "committedDate": "2020-05-11T20:37:07Z", "type": "commit"}, {"oid": "3dd6da37f92d2ff60d4a70d988c5348bc934b443", "url": "https://github.com/dockstore/dockstore/commit/3dd6da37f92d2ff60d4a70d988c5348bc934b443", "message": "add support for commit ID for gitlab workflows", "committedDate": "2020-05-11T20:56:11Z", "type": "commit"}, {"oid": "cfb7b5436ab438e2729cc2179b39acee66ac28c0", "url": "https://github.com/dockstore/dockstore/commit/cfb7b5436ab438e2729cc2179b39acee66ac28c0", "message": "fix typo", "committedDate": "2020-05-12T14:21:00Z", "type": "commit"}, {"oid": "f8493766987a7d0ae59f119d8c2e3247eb3a81d7", "url": "https://github.com/dockstore/dockstore/commit/f8493766987a7d0ae59f119d8c2e3247eb3a81d7", "message": "fix for bitbucket commit id; tests for gitlab and bitbucket commit id", "committedDate": "2020-05-12T15:24:29Z", "type": "commit"}, {"oid": "c9449ff9a45f697094ff86b932e156a6f7bbc1e1", "url": "https://github.com/dockstore/dockstore/commit/c9449ff9a45f697094ff86b932e156a6f7bbc1e1", "message": "Merge branch 'develop' into feature/3456/track-git-commit-id", "committedDate": "2020-05-12T17:22:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NzU1Mw==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424097553", "bodyText": "Log the exception", "author": "coverbeck", "createdAt": "2020-05-12T23:51:11Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/BitBucketSourceCodeRepo.java", "diffHunk": "@@ -249,17 +249,23 @@ protected String getCommitID(String repositoryId, Version version) {\n         RefsApi refsApi = new RefsApi(apiClient);\n         try {\n             Branch branch = refsApi.repositoriesUsernameRepoSlugRefsBranchesNameGet(repositoryId.split(\"/\")[0], version.getReference(),\n-                repositoryId.split(\"/\")[0]);\n-            Tag tag = refsApi.repositoriesUsernameRepoSlugRefsTagsNameGet(repositoryId.split(\"/\")[0], version.getReference(),\n-                repositoryId.split(\"/\")[0]);\n+                repositoryId.split(\"/\")[1]);\n             if (branch != null) {\n                 return branch.getTarget().getHash();\n             }\n+        } catch (ApiException e) {\n+            LOG.error(gitUsername + \": apiexception on reading branch commitid\" + e.getMessage());", "originalCommit": "c9449ff9a45f697094ff86b932e156a6f7bbc1e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NzYyMg==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424097622", "bodyText": "Log the exception", "author": "coverbeck", "createdAt": "2020-05-12T23:51:24Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/BitBucketSourceCodeRepo.java", "diffHunk": "@@ -249,17 +249,23 @@ protected String getCommitID(String repositoryId, Version version) {\n         RefsApi refsApi = new RefsApi(apiClient);\n         try {\n             Branch branch = refsApi.repositoriesUsernameRepoSlugRefsBranchesNameGet(repositoryId.split(\"/\")[0], version.getReference(),\n-                repositoryId.split(\"/\")[0]);\n-            Tag tag = refsApi.repositoriesUsernameRepoSlugRefsTagsNameGet(repositoryId.split(\"/\")[0], version.getReference(),\n-                repositoryId.split(\"/\")[0]);\n+                repositoryId.split(\"/\")[1]);\n             if (branch != null) {\n                 return branch.getTarget().getHash();\n             }\n+        } catch (ApiException e) {\n+            LOG.error(gitUsername + \": apiexception on reading branch commitid\" + e.getMessage());\n+            // this is not so critical to warrant a http error code\n+        }\n+\n+        try {\n+            Tag tag = refsApi.repositoriesUsernameRepoSlugRefsTagsNameGet(repositoryId.split(\"/\")[0], version.getReference(),\n+                    repositoryId.split(\"/\")[1]);\n             if (tag != null) {\n                 return tag.getTarget().getHash();\n             }\n         } catch (ApiException e) {\n-            LOG.error(gitUsername + \": apiexception on reading commitid\" + e.getMessage());\n+            LOG.error(gitUsername + \": apiexception on reading tag commitid\" + e.getMessage());", "originalCommit": "c9449ff9a45f697094ff86b932e156a6f7bbc1e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5ODM5Ng==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424098396", "bodyText": "Without understanding the whole flow, why can't this return version.getCommitId()? If not, what is the TODO that you need to do?", "author": "coverbeck", "createdAt": "2020-05-12T23:54:04Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitLabSourceCodeRepo.java", "diffHunk": "@@ -185,7 +188,7 @@ public void updateReferenceType(String repositoryId, Version version) {\n \n     @Override\n     protected String getCommitID(String repositoryId, Version version) {\n-        //TODO: optimize here for gitlab by returning actual sha1\n+        //TODO: Commit ID is returned by an existing API call", "originalCommit": "c9449ff9a45f697094ff86b932e156a6f7bbc1e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDY0NA==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424404644", "bodyText": "It could, but the only time this is called for GitLab is while doing tool refresh, which is not yet handled, so it would be null anyways.\nThis PR is just for workflows (to deal with refresh) so I didn't touch that part.", "author": "agduncan94", "createdAt": "2020-05-13T12:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5ODM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNTExMg==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424405112", "bodyText": "I'll update the todo to make more sense.", "author": "agduncan94", "createdAt": "2020-05-13T12:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5ODM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxMDM3NQ==", "url": "https://github.com/dockstore/dockstore/pull/3470#discussion_r424410375", "bodyText": "Actually I'll just implement it.", "author": "agduncan94", "createdAt": "2020-05-13T12:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5ODM5Ng=="}], "type": "inlineReview"}, {"oid": "de15bef16ca17e69c42f73d104973a1c9151dd83", "url": "https://github.com/dockstore/dockstore/commit/de15bef16ca17e69c42f73d104973a1c9151dd83", "message": "changes from pr", "committedDate": "2020-05-13T12:37:11Z", "type": "commit"}, {"oid": "ae3e570b4325f1c807b7e6804d30c1858687c807", "url": "https://github.com/dockstore/dockstore/commit/ae3e570b4325f1c807b7e6804d30c1858687c807", "message": "Merge branch 'feature/3456/track-git-commit-id' of github.com:ga4gh/dockstore into feature/3456/track-git-commit-id", "committedDate": "2020-05-13T12:54:51Z", "type": "commit"}, {"oid": "60a9bc076a4144bdff4398779c0f2e38912f2dab", "url": "https://github.com/dockstore/dockstore/commit/60a9bc076a4144bdff4398779c0f2e38912f2dab", "message": "track gitlab commit for tools", "committedDate": "2020-05-13T12:55:09Z", "type": "commit"}, {"oid": "f560d7d93fe527d32378d21de0964294d11c86cd", "url": "https://github.com/dockstore/dockstore/commit/f560d7d93fe527d32378d21de0964294d11c86cd", "message": "fix whitespace issue", "committedDate": "2020-05-13T13:03:29Z", "type": "commit"}]}