{"pr_number": 637, "pr_title": "Client cert authentication", "pr_createdAt": "2020-06-11T12:19:55Z", "pr_url": "https://github.com/RIPE-NCC/whois/pull/637", "timeline": [{"oid": "cbfd9e0e9a91e92ac511ae3cd06691123859b0f6", "url": "https://github.com/RIPE-NCC/whois/commit/cbfd9e0e9a91e92ac511ae3cd06691123859b0f6", "message": "Add client certificate authentication.", "committedDate": "2020-06-11T10:33:51Z", "type": "commit"}, {"oid": "4c1988b384d487442d39abf2eece22436117ef89", "url": "https://github.com/RIPE-NCC/whois/commit/4c1988b384d487442d39abf2eece22436117ef89", "message": "Fix tests.", "committedDate": "2020-06-11T10:56:37Z", "type": "commit"}, {"oid": "33cd7b7b7ee0b9a4d9117de3d0340440cdb6a2e7", "url": "https://github.com/RIPE-NCC/whois/commit/33cd7b7b7ee0b9a4d9117de3d0340440cdb6a2e7", "message": "Don't provide client certificate for mail updates.\nPick up (optional) client certificate for syncupdates.", "committedDate": "2020-06-11T12:18:44Z", "type": "commit"}, {"oid": "044bf98565041ded572de927e86bc95e4257b34a", "url": "https://github.com/RIPE-NCC/whois/commit/044bf98565041ded572de927e86bc95e4257b34a", "message": "Added test for client certificate authentication.", "committedDate": "2020-06-12T13:15:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTQwMA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439975400", "bodyText": "This header doesn't mean very much, as the proxy doesn't check the CA. Do we need to include it?", "author": "eshryane", "createdAt": "2020-06-15T07:20:32Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/ClientCertificateExtractor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.ripe.db.whois.api.rest;\n+\n+import net.ripe.db.whois.common.io.ByteArrayInput;\n+import org.apache.commons.lang.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.security.Principal;\n+import java.security.cert.CertificateException;\n+import java.security.cert.CertificateExpiredException;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.CertificateNotYetValidException;\n+import java.security.cert.X509Certificate;\n+import java.util.Optional;\n+\n+import static org.apache.commons.codec.binary.Base64.decodeBase64;\n+\n+public class ClientCertificateExtractor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ClientCertificateExtractor.class);\n+\n+    private final static String HEADER_SSL_CLIENT_CERT = \"SSL_CLIENT_CERT\";\n+    private final static String HEADER_SSL_CLIENT_VERIFY = \"SSL_CLIENT_VERIFY\";\n+\n+    public static Optional<X509Certificate> getClientCertificate(final HttpServletRequest request) {\n+        final String sslClientCert = request.getHeader(HEADER_SSL_CLIENT_CERT);\n+\n+        if (StringUtils.isBlank(sslClientCert)) {\n+            return Optional.empty();\n+        }\n+\n+        final String sslClientVerify = request.getHeader(HEADER_SSL_CLIENT_VERIFY);", "originalCommit": "044bf98565041ded572de927e86bc95e4257b34a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4NTc5MA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439985790", "bodyText": "As specified in the requirements, we should check the value is as expected.,", "author": "eshryane", "createdAt": "2020-06-15T07:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4Njg1Mw==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439986853", "bodyText": "We're expecting Apache to do the verification and tell us:\n\n\n\nSSL_CLIENT_VERIFY\nstring\nNONE,\u00a0SUCCESS,\u00a0GENEROUS\u00a0or\u00a0FAILED:reason\n\n\n\nIf it's not GENEROUS or SUCCESS we don't accept the cert and otherwise we do but we check it again.", "author": "sbusk", "createdAt": "2020-06-15T07:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTcxMA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439975710", "bodyText": "Remove this?", "author": "eshryane", "createdAt": "2020-06-15T07:21:10Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/ClientCertificateExtractor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.ripe.db.whois.api.rest;\n+\n+import net.ripe.db.whois.common.io.ByteArrayInput;\n+import org.apache.commons.lang.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.security.Principal;\n+import java.security.cert.CertificateException;\n+import java.security.cert.CertificateExpiredException;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.CertificateNotYetValidException;\n+import java.security.cert.X509Certificate;\n+import java.util.Optional;\n+\n+import static org.apache.commons.codec.binary.Base64.decodeBase64;\n+\n+public class ClientCertificateExtractor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ClientCertificateExtractor.class);\n+\n+    private final static String HEADER_SSL_CLIENT_CERT = \"SSL_CLIENT_CERT\";\n+    private final static String HEADER_SSL_CLIENT_VERIFY = \"SSL_CLIENT_VERIFY\";\n+\n+    public static Optional<X509Certificate> getClientCertificate(final HttpServletRequest request) {\n+        final String sslClientCert = request.getHeader(HEADER_SSL_CLIENT_CERT);\n+\n+        if (StringUtils.isBlank(sslClientCert)) {\n+            return Optional.empty();\n+        }\n+\n+        final String sslClientVerify = request.getHeader(HEADER_SSL_CLIENT_VERIFY);\n+        if (!\"GENEROUS\".equals(sslClientVerify) && !\"SUCCESS\".equals(sslClientVerify)) {\n+            return Optional.empty();\n+        }\n+\n+        return getX509Certificate(sslClientCert);\n+    }\n+\n+    private static Optional<X509Certificate> getX509Certificate(final String certificate) {\n+        // TODO what to log as cert identifier (fingerprint, subjectDN?)\n+        Principal subject = null;\n+        try {\n+            final X509Certificate x509 = (X509Certificate) CertificateFactory.getInstance(\"X.509\").generateCertificate(new ByteArrayInput(decodeBase64(certificate)));\n+\n+            subject = x509.getSubjectDN();\n+            x509.checkValidity();\n+\n+\n+            // TODO signature verification (both self signed and ca)", "originalCommit": "044bf98565041ded572de927e86bc95e4257b34a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE5NDMwMA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r440194300", "bodyText": "Ok, as discussed we leave the verification to the proxy.", "author": "sbusk", "createdAt": "2020-06-15T13:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NTk1MQ==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439975951", "bodyText": "Fingerprint I think (can it be included in the audit log?)", "author": "eshryane", "createdAt": "2020-06-15T07:21:41Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/ClientCertificateExtractor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.ripe.db.whois.api.rest;\n+\n+import net.ripe.db.whois.common.io.ByteArrayInput;\n+import org.apache.commons.lang.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.security.Principal;\n+import java.security.cert.CertificateException;\n+import java.security.cert.CertificateExpiredException;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.CertificateNotYetValidException;\n+import java.security.cert.X509Certificate;\n+import java.util.Optional;\n+\n+import static org.apache.commons.codec.binary.Base64.decodeBase64;\n+\n+public class ClientCertificateExtractor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ClientCertificateExtractor.class);\n+\n+    private final static String HEADER_SSL_CLIENT_CERT = \"SSL_CLIENT_CERT\";\n+    private final static String HEADER_SSL_CLIENT_VERIFY = \"SSL_CLIENT_VERIFY\";\n+\n+    public static Optional<X509Certificate> getClientCertificate(final HttpServletRequest request) {\n+        final String sslClientCert = request.getHeader(HEADER_SSL_CLIENT_CERT);\n+\n+        if (StringUtils.isBlank(sslClientCert)) {\n+            return Optional.empty();\n+        }\n+\n+        final String sslClientVerify = request.getHeader(HEADER_SSL_CLIENT_VERIFY);\n+        if (!\"GENEROUS\".equals(sslClientVerify) && !\"SUCCESS\".equals(sslClientVerify)) {\n+            return Optional.empty();\n+        }\n+\n+        return getX509Certificate(sslClientCert);\n+    }\n+\n+    private static Optional<X509Certificate> getX509Certificate(final String certificate) {\n+        // TODO what to log as cert identifier (fingerprint, subjectDN?)", "originalCommit": "044bf98565041ded572de927e86bc95e4257b34a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NjA5Nw==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439976097", "bodyText": "Log at DEBUG?", "author": "eshryane", "createdAt": "2020-06-15T07:21:57Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/ClientCertificateExtractor.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.ripe.db.whois.api.rest;\n+\n+import net.ripe.db.whois.common.io.ByteArrayInput;\n+import org.apache.commons.lang.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.security.Principal;\n+import java.security.cert.CertificateException;\n+import java.security.cert.CertificateExpiredException;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.CertificateNotYetValidException;\n+import java.security.cert.X509Certificate;\n+import java.util.Optional;\n+\n+import static org.apache.commons.codec.binary.Base64.decodeBase64;\n+\n+public class ClientCertificateExtractor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ClientCertificateExtractor.class);\n+\n+    private final static String HEADER_SSL_CLIENT_CERT = \"SSL_CLIENT_CERT\";\n+    private final static String HEADER_SSL_CLIENT_VERIFY = \"SSL_CLIENT_VERIFY\";\n+\n+    public static Optional<X509Certificate> getClientCertificate(final HttpServletRequest request) {\n+        final String sslClientCert = request.getHeader(HEADER_SSL_CLIENT_CERT);\n+\n+        if (StringUtils.isBlank(sslClientCert)) {\n+            return Optional.empty();\n+        }\n+\n+        final String sslClientVerify = request.getHeader(HEADER_SSL_CLIENT_VERIFY);\n+        if (!\"GENEROUS\".equals(sslClientVerify) && !\"SUCCESS\".equals(sslClientVerify)) {\n+            return Optional.empty();\n+        }\n+\n+        return getX509Certificate(sslClientCert);\n+    }\n+\n+    private static Optional<X509Certificate> getX509Certificate(final String certificate) {\n+        // TODO what to log as cert identifier (fingerprint, subjectDN?)\n+        Principal subject = null;\n+        try {\n+            final X509Certificate x509 = (X509Certificate) CertificateFactory.getInstance(\"X.509\").generateCertificate(new ByteArrayInput(decodeBase64(certificate)));\n+\n+            subject = x509.getSubjectDN();\n+            x509.checkValidity();\n+\n+\n+            // TODO signature verification (both self signed and ca)\n+            //x509.verify(x509.getPublicKey());\n+\n+            return Optional.of(x509);\n+        } catch (CertificateExpiredException cee) {\n+            LOGGER.info(\"Certificate {} has expired\", subject);", "originalCommit": "044bf98565041ded572de927e86bc95e4257b34a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4Nzg3Ng==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439987876", "bodyText": "I think we won't be swamped by ppl sending us their client certs and it helps with troubleshooting to see a client cert was expired so it wasn't accepted as a valid credential so I'd leave the logging at info level.", "author": "sbusk", "createdAt": "2020-06-15T07:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NjA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTY3Mw==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r440251673", "bodyText": "OK", "author": "eshryane", "createdAt": "2020-06-15T15:16:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NjA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3Njg1Ng==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r439976856", "bodyText": "Also log the offered credential in the audit log here?", "author": "eshryane", "createdAt": "2020-06-15T07:23:32Z", "path": "whois-update/src/main/java/net/ripe/db/whois/update/authentication/credential/ClientCertificateCredentialValidator.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package net.ripe.db.whois.update.authentication.credential;\n+\n+import net.ripe.db.whois.common.DateTimeProvider;\n+import net.ripe.db.whois.common.dao.RpslObjectDao;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import net.ripe.db.whois.update.domain.ClientCertificateCredential;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.domain.X509Credential;\n+import net.ripe.db.whois.update.keycert.X509CertificateWrapper;\n+import net.ripe.db.whois.update.log.LoggerContext;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.EmptyResultDataAccessException;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.CheckForNull;\n+import java.util.Collection;\n+\n+@Component\n+public class ClientCertificateCredentialValidator implements CredentialValidator<ClientCertificateCredential, X509Credential> {\n+\n+    private final RpslObjectDao rpslObjectDao;\n+    private final DateTimeProvider dateTimeProvider;\n+    private final LoggerContext loggerContext;\n+\n+    @Autowired\n+    public ClientCertificateCredentialValidator(final RpslObjectDao rpslObjectDao, final DateTimeProvider dateTimeProvider, final LoggerContext loggerContext) {\n+        this.rpslObjectDao = rpslObjectDao;\n+        this.dateTimeProvider = dateTimeProvider;\n+        this.loggerContext = loggerContext;\n+    }\n+\n+    @Override\n+    public Class<X509Credential> getSupportedCredentials() {\n+        return X509Credential.class;\n+    }\n+\n+    @Override\n+    public Class<ClientCertificateCredential> getSupportedOfferedCredentialType() {\n+        return ClientCertificateCredential.class;\n+    }\n+\n+    @Override\n+    public boolean hasValidCredential(final PreparedUpdate update, final UpdateContext updateContext, final Collection<ClientCertificateCredential> offeredCredentials, final X509Credential knownCredential) {\n+        for (final ClientCertificateCredential offeredCredential : offeredCredentials) {\n+\n+            if (verifyClientCertificate(update, updateContext, offeredCredential, knownCredential)) {", "originalCommit": "044bf98565041ded572de927e86bc95e4257b34a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMzI1MQ==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r440223251", "bodyText": "Done.", "author": "sbusk", "createdAt": "2020-06-15T14:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3Njg1Ng=="}], "type": "inlineReview"}, {"oid": "a479e12787e4cc7b063fcad9c8c6023a77645b36", "url": "https://github.com/RIPE-NCC/whois/commit/a479e12787e4cc7b063fcad9c8c6023a77645b36", "message": "More audit logging.", "committedDate": "2020-06-17T08:12:46Z", "type": "commit"}, {"oid": "42bd80c5ec60e2d385a2919f0c6f34e215ce89cb", "url": "https://github.com/RIPE-NCC/whois/commit/42bd80c5ec60e2d385a2919f0c6f34e215ce89cb", "message": "Properly handle PEM certificate.", "committedDate": "2020-06-17T08:53:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5ODIzNA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r441398234", "bodyText": "Can you use the X509CertificateWrapper class to extract the certificate?", "author": "eshryane", "createdAt": "2020-06-17T09:08:30Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/ClientCertificateExtractor.java", "diffHunk": "@@ -23,6 +24,9 @@\n     private final static String HEADER_SSL_CLIENT_CERT = \"SSL_CLIENT_CERT\";\n     private final static String HEADER_SSL_CLIENT_VERIFY = \"SSL_CLIENT_VERIFY\";\n \n+    private static final String X509_HEADER = \"-----BEGIN CERTIFICATE-----\";", "originalCommit": "42bd80c5ec60e2d385a2919f0c6f34e215ce89cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0MTE2OA==", "url": "https://github.com/RIPE-NCC/whois/pull/637#discussion_r442441168", "bodyText": "Done.", "author": "sbusk", "createdAt": "2020-06-18T19:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5ODIzNA=="}], "type": "inlineReview"}, {"oid": "329289f967c5a75abce5440c6098b2c8c7bd2287", "url": "https://github.com/RIPE-NCC/whois/commit/329289f967c5a75abce5440c6098b2c8c7bd2287", "message": "Tidy up code, use X509CertificateWrapper for cert operations, added tests, handle Apache's SSL_CLIENT_CERT PEM format.", "committedDate": "2020-06-18T17:56:01Z", "type": "commit"}, {"oid": "dc8365c81660e0f414840884c6b56a759d43ab29", "url": "https://github.com/RIPE-NCC/whois/commit/dc8365c81660e0f414840884c6b56a759d43ab29", "message": "Added feature toggle for client certificate authentication.", "committedDate": "2020-06-18T19:02:28Z", "type": "commit"}, {"oid": "52d90e5ae2fe6f364bac9f263b5ba87eb46c8fd1", "url": "https://github.com/RIPE-NCC/whois/commit/52d90e5ae2fe6f364bac9f263b5ba87eb46c8fd1", "message": "Enable client certificate authentication in tests.", "committedDate": "2020-06-19T07:06:41Z", "type": "commit"}, {"oid": "9ffb8423df49ba5b48ad3016ce14829f4c4c3343", "url": "https://github.com/RIPE-NCC/whois/commit/9ffb8423df49ba5b48ad3016ce14829f4c4c3343", "message": "Client cert authentication should not be enabled by default.", "committedDate": "2020-06-22T06:12:26Z", "type": "commit"}, {"oid": "5381762f52bb890014fabdbf105f20659dacc139", "url": "https://github.com/RIPE-NCC/whois/commit/5381762f52bb890014fabdbf105f20659dacc139", "message": "Also accept FAILED SSL verify header (for self signed).", "committedDate": "2020-06-22T11:16:58Z", "type": "commit"}]}