{"pr_number": 3669, "pr_title": "Add argument based parameter methods for Argument listOf setOf mapOf.\u2026", "pr_createdAt": "2020-07-07T18:15:52Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/3669", "timeline": [{"oid": "f029229c621eadd4b4d253a169fb46a03a6b0209", "url": "https://github.com/micronaut-projects/micronaut-core/commit/f029229c621eadd4b4d253a169fb46a03a6b0209", "message": "Add argument based parameter methods for Argument listOf setOf mapOf. Closes #3638", "committedDate": "2020-07-07T18:15:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODIzOA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068238", "bodyText": "Needs @since tags", "author": "graemerocher", "createdAt": "2020-07-07T18:40:20Z", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -488,6 +488,19 @@ default boolean isVoid() {\n         return of((Class<List<T>>) ((Class) List.class), type);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic list.\n+     *\n+     * @param type list element type\n+     * @param <T>  list element type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <T> Argument<List<T>> listOf(Argument<T> type) {", "originalCommit": "f029229c621eadd4b4d253a169fb46a03a6b0209", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODM1MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068350", "bodyText": "Needs @since tags", "author": "graemerocher", "createdAt": "2020-07-07T18:40:35Z", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -501,6 +514,19 @@ default boolean isVoid() {\n         return of((Class<Set<T>>) ((Class) Set.class), type);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic set.\n+     *\n+     * @param type set element type\n+     * @param <T>  set element type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <T> Argument<Set<T>> setOf(Argument<T> type) {", "originalCommit": "f029229c621eadd4b4d253a169fb46a03a6b0209", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODQ3MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068470", "bodyText": "Needs @since tags", "author": "graemerocher", "createdAt": "2020-07-07T18:40:46Z", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -516,4 +542,19 @@ default boolean isVoid() {\n         return of((Class<Map<K, V>>) ((Class) Map.class), keyType, valueType);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic map.\n+     *\n+     * @param keyType The key type\n+     * @param valueType The value type\n+     * @param <K>  The map key type\n+     * @param <V> The map value type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <K, V> Argument<Map<K, V>> mapOf(Argument<K> keyType, Argument<V> valueType) {", "originalCommit": "f029229c621eadd4b4d253a169fb46a03a6b0209", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "323aa906e7755a24ae272ec16591178000ff3cd6", "url": "https://github.com/micronaut-projects/micronaut-core/commit/323aa906e7755a24ae272ec16591178000ff3cd6", "message": "Added @since tags to new methods", "committedDate": "2020-07-07T19:59:17Z", "type": "commit"}]}