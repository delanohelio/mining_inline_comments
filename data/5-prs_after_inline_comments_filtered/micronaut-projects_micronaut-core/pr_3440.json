{"pr_number": 3440, "pr_title": "Refactor instrumentation", "pr_createdAt": "2020-06-09T07:13:37Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/3440", "timeline": [{"oid": "3146c85193c96fa55bd3e948741398c9d6259696", "url": "https://github.com/micronaut-projects/micronaut-core/commit/3146c85193c96fa55bd3e948741398c9d6259696", "message": "Refactor instrumentation", "committedDate": "2020-06-09T07:05:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODY2OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3440#discussion_r437708669", "bodyText": "All anonymous Instrumentation and InvocationInstrumenter implementations could be turned to lambdas. It would make the code more compact but I am not sure if more straightforward too? Performance wise I believe it has a slight benefit.", "author": "lgathy", "createdAt": "2020-06-09T20:46:58Z", "path": "http-server/src/main/java/io/micronaut/http/server/context/ServerRequestContextInvocationInstrumenter.java", "diffHunk": "@@ -28,40 +30,40 @@\n class ServerRequestContextInvocationInstrumenter implements InvocationInstrumenter {\n \n     private final HttpRequest<?> invocationRequest;\n-    private HttpRequest<?> currentRequest;\n-    private boolean isSet;\n \n     /**\n      * @param invocationRequest current request\n      */\n     public ServerRequestContextInvocationInstrumenter(HttpRequest<?> invocationRequest) {\n         this.invocationRequest = invocationRequest;\n-        isSet = false;\n     }\n \n     /**\n-     * Before call.\n+     * Server context instrumentation.\n+     * @return new instance\n      */\n+    @NonNull\n     @Override\n-    public void beforeInvocation() {\n-        currentRequest = ServerRequestContext.currentRequest().orElse(null);\n+    public Instrumentation newInstrumentation() {\n+        HttpRequest<?> currentRequest = ServerRequestContext.currentRequest().orElse(null);\n+        boolean isSet;\n         if (invocationRequest != currentRequest) {\n             isSet = true;\n             ServerRequestContext.set(invocationRequest);\n-        }\n-    }\n-\n-    /**\n-     * After call.\n-     *\n-     * @param cleanup Whether to enforce cleanup\n-     */\n-    @Override\n-    public void afterInvocation(boolean cleanup) {\n-        if (isSet || cleanup) {\n-            ServerRequestContext.set(cleanup ? null : currentRequest);\n+        } else {\n             isSet = false;\n         }\n-    }\n+        return new Instrumentation() {", "originalCommit": "3146c85193c96fa55bd3e948741398c9d6259696", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3MDIwNg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3440#discussion_r437870206", "bodyText": "I don't think there is a big perf. difference.", "author": "dstepanov", "createdAt": "2020-06-10T05:35:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODY2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg4MjkwMQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3440#discussion_r437882901", "bodyText": "At Link time Lambdas are slower after that there behave very similar to anonymous classes. Lambdas only have instance variables if required and stateless lambdas get optimised but other then that there is not mutch different.", "author": "SplotyCode", "createdAt": "2020-06-10T06:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODY2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxNzY4NA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3440#discussion_r437717684", "bodyText": "Just a sidenote: I still believe we would need an else branch here with MDC.clear(): if the captured contextMap is empty but the oldContextMap found here is not then we leave it unchanged, thus the instrumented code will not find MDC in a state equivalent to where the instrumenter was instantiated, because there it was empty (see: contextMap) but here it contains key-values.", "author": "lgathy", "createdAt": "2020-06-09T20:57:46Z", "path": "tracing/src/main/java/io/micronaut/tracing/instrument/util/MdcInstrumenter.java", "diffHunk": "@@ -47,23 +49,24 @@ public InvocationInstrumenter newInvocationInstrumenter() {\n         Map<String, String> contextMap = MDC.getCopyOfContextMap();\n         return new InvocationInstrumenter() {\n \n-            Map<String, String> oldContextMap;\n-\n+            @NonNull\n             @Override\n-            public void beforeInvocation() {\n-                oldContextMap = MDC.getCopyOfContextMap();\n+            public Instrumentation newInstrumentation() {\n+                Map<String, String> oldContextMap = MDC.getCopyOfContextMap();\n                 if (contextMap != null && !contextMap.isEmpty()) {\n                     MDC.setContextMap(contextMap);\n                 }", "originalCommit": "3146c85193c96fa55bd3e948741398c9d6259696", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3MDA1NQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3440#discussion_r437870055", "bodyText": "There can be multiple MdcIstrumenters and clear would make the previous context values disappear. There is a test that actually is testing it.", "author": "dstepanov", "createdAt": "2020-06-10T05:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxNzY4NA=="}], "type": "inlineReview"}]}