{"pr_number": 3824, "pr_title": "Fix \"Recursive update\" for scoped proxies", "pr_createdAt": "2020-07-30T09:17:54Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/3824", "timeline": [{"oid": "5d78b3b2f0fb6ce4930f38656163e40dce999ccf", "url": "https://github.com/micronaut-projects/micronaut-core/commit/5d78b3b2f0fb6ce4930f38656163e40dce999ccf", "message": "Fix \"Recursive update' for scoped proxies", "committedDate": "2020-07-30T09:34:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r462952769", "bodyText": "Maybe instead of introducing a new class SupplierUtil.memoized could be used instead?", "author": "graemerocher", "createdAt": "2020-07-30T12:14:32Z", "path": "inject/src/main/java/io/micronaut/context/LazyProvider.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.context;\n+\n+import javax.inject.Provider;\n+\n+/**\n+ * A lazy provider.\n+ *\n+ * @param <T> The type\n+ * @author Denis Stepanov\n+ * @since 2.0.2\n+ */\n+abstract class LazyProvider<T> implements Provider<T> {", "originalCommit": "5d78b3b2f0fb6ce4930f38656163e40dce999ccf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5NzE3MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r462997170", "bodyText": "It can be, I didn\u2019t know about it, Provider might be useful for direct injection of it.\nDo you want to use Supplier instead?", "author": "dstepanov", "createdAt": "2020-07-30T13:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzOTgwOA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r463839808", "bodyText": "@dstepanov If you want to create a ProviderUtil.memoized that would be fine. Either way the synchronization logic should be externalized for reusability. The supplier one works well so use that as an example", "author": "jameskleeh", "createdAt": "2020-07-31T21:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkyOTY5NQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r463929695", "bodyText": "I think an issue there may be Provider is part of java.inject and not available in the core module", "author": "graemerocher", "createdAt": "2020-08-01T06:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkzMDc1OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r463930759", "bodyText": "I have created an util class in the same package.", "author": "dstepanov", "createdAt": "2020-08-01T06:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzOTA4MQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r465139081", "bodyText": "@jameskleeh What do you think about the latest version?", "author": "dstepanov", "createdAt": "2020-08-04T15:31:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE1MTA3Mg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r465151072", "bodyText": "@dstepanov The util doesn't follow the pattern of SupplierUtil. The crux of the implementation is the delegate gets overridden so it doesn't use synchronization after the first invocation. You can message me on gitter if you'd like more details", "author": "jameskleeh", "createdAt": "2020-08-04T15:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5OTQ4Mw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3824#discussion_r465199483", "bodyText": "@jameskleeh Changed", "author": "dstepanov", "createdAt": "2020-08-04T17:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1Mjc2OQ=="}], "type": "inlineReview"}, {"oid": "ac75f62f8eb0245e1a55afa6d64312d98af495e4", "url": "https://github.com/micronaut-projects/micronaut-core/commit/ac75f62f8eb0245e1a55afa6d64312d98af495e4", "message": "Fix \"Recursive update' for scoped proxies", "committedDate": "2020-08-01T04:29:56Z", "type": "forcePushed"}, {"oid": "9399ee16cda911dd37b305abd863b17b604e749a", "url": "https://github.com/micronaut-projects/micronaut-core/commit/9399ee16cda911dd37b305abd863b17b604e749a", "message": "Fix \"Recursive update' for scoped proxies", "committedDate": "2020-08-04T16:45:21Z", "type": "commit"}, {"oid": "9399ee16cda911dd37b305abd863b17b604e749a", "url": "https://github.com/micronaut-projects/micronaut-core/commit/9399ee16cda911dd37b305abd863b17b604e749a", "message": "Fix \"Recursive update' for scoped proxies", "committedDate": "2020-08-04T16:45:21Z", "type": "forcePushed"}]}