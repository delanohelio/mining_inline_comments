{"pr_number": 4727, "pr_title": "refactor: changes to locale resolver", "pr_createdAt": "2020-12-17T05:22:32Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/4727", "timeline": [{"oid": "f13440f939b499c9cd539a9696a78a935ffe096c", "url": "https://github.com/micronaut-projects/micronaut-core/commit/f13440f939b499c9cd539a9696a78a935ffe096c", "message": "refactor: changes to locale resolver", "committedDate": "2020-12-17T05:19:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDA3MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545114070", "bodyText": "if this is a standalone class it doesn't make sense to tie it to configuration. It should simply receive the locale as the argument", "author": "jameskleeh", "createdAt": "2020-12-17T14:04:46Z", "path": "core/src/main/java/io/micronaut/core/util/localeresolution/FixedLocaleResolver.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.core.util.localeresolution;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import java.util.Locale;\n+import java.util.Optional;\n+\n+/**\n+ * Generic implementation of {@link io.micronaut.core.util.LocaleResolver} for fixed locale resolution.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.3.0\n+ * @param <T> The context object which will be used to resolve the locale\n+ */\n+public class FixedLocaleResolver<T> extends DefaultLocaleResolver<T> {\n+\n+    protected final Locale locale;\n+\n+    /**\n+     *\n+     * @param localeResolutionConfiguration Locale Resolution configuration\n+     */\n+    public FixedLocaleResolver(LocaleResolutionConfiguration localeResolutionConfiguration) {", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzODA0Nw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545138047", "bodyText": "The configuration is the contract, the interface. It is not a @ConfigurationProperties implementation. It needs LocaleResolutionConfiguration to pass it to the parent class.", "author": "sdelamo", "createdAt": "2020-12-17T14:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0MTg2Ng==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545141866", "bodyText": "I don't think having the configuration here as a contract makes sense. Fixed does not need a default because its fixed. There is no chance for it to not have a value", "author": "jameskleeh", "createdAt": "2020-12-17T14:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2MjI0Nw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545162247", "bodyText": "I've splitted the configuration in two interfaces. Now, I am injecting only the fixed configuration in the fixed resolver.", "author": "sdelamo", "createdAt": "2020-12-17T15:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIyNDk3Mg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545224972", "bodyText": "I've changed FixedLocaleResolver to take a Locale in the constructor.", "author": "sdelamo", "createdAt": "2020-12-17T16:28:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545114323", "bodyText": "I don't think we need a separate interface for this", "author": "jameskleeh", "createdAt": "2020-12-17T14:05:06Z", "path": "core/src/main/java/io/micronaut/core/util/localeresolution/LocaleResolutionConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.core.util.localeresolution;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import java.util.Locale;\n+import java.util.Optional;\n+\n+/**\n+ * Locale resolution configuration.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.3.0\n+ */\n+public interface LocaleResolutionConfiguration {", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzNTQyNg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545135426", "bodyText": "I think it is best to abstract with an interface. Then in an application, which does not use the http-server module (E.g. Alexa), I could implement the interface and support fixed locale and default resolution without effort.", "author": "sdelamo", "createdAt": "2020-12-17T14:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzNjkyNw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545136927", "bodyText": "You an also do so without effort without this interface. The fixed and default can be direct args instead of having a separate interface", "author": "jameskleeh", "createdAt": "2020-12-17T14:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0Mzc5OA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545143798", "bodyText": "If we have an interface, then it forces us to use the use same keys in configuration.\nI could have:\nalexa:\n  skills:\n    myskill:\n      skill-id 'xxxx-yaaa-zz123' \n      locale-resolution: \n          default-locale: 'es_ES'\n\nHaving the interface forces us to reuse the same default-locale key in both http-server configuration and other configurations.", "author": "sdelamo", "createdAt": "2020-12-17T14:44:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTU2NA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545145564", "bodyText": "If you want to leave the interface for use in other places thats OK, but the fixed resolver shouldn't require it. Users should be able to pull the data from anywhere and not have to conform to our contract", "author": "jameskleeh", "createdAt": "2020-12-17T14:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2MjE2OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545162169", "bodyText": "I've splitted the configuration in two interfaces. Now, I am injecting only the fixed configuration in the fixed resolver.", "author": "sdelamo", "createdAt": "2020-12-17T15:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDY4NA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545114684", "bodyText": "This is redundant", "author": "jameskleeh", "createdAt": "2020-12-17T14:05:40Z", "path": "http-server/src/main/java/io/micronaut/http/server/util/localeresolution/CompositeHttpLocaleResolver.java", "diffHunk": "@@ -13,31 +13,41 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.micronaut.http.server.util;\n+package io.micronaut.http.server.util.localeresolution;\n \n import edu.umd.cs.findbugs.annotations.NonNull;\n import io.micronaut.context.annotation.Primary;\n+import io.micronaut.core.order.OrderUtil;\n+import io.micronaut.core.order.Ordered;\n import io.micronaut.http.HttpRequest;\n-import io.micronaut.http.server.HttpServerConfiguration;\n \n import javax.inject.Singleton;\n import java.util.Arrays;\n import java.util.Locale;\n import java.util.Optional;\n \n+/**\n+ * {@link Primary} {@link HttpLocaleResolver} which evaluates every {@link HttpLocaleResolver} by order to resolve a {@link java.util.Locale}.\n+ *\n+ * @author Sergio del Amo\n+ * @author James Kleeh\n+ * @since 2.3.0\n+ */\n @Singleton\n @Primary\n-public class CompositeHttpLocaleResolver implements HttpLocaleResolver {\n+public class CompositeHttpLocaleResolver extends HttpDefaultLocaleResolver {\n \n     private final HttpLocaleResolver[] localeResolvers;\n-    private final Locale defaultLocale;\n \n+    /**\n+     * @param localeResolvers HTTP Locale Resolvers\n+     * @param httpLocaleResolutionConfiguration Locale Resolution configuration for HTTP Requests\n+     */\n     public CompositeHttpLocaleResolver(HttpLocaleResolver[] localeResolvers,\n-                                       HttpServerConfiguration serverConfiguration) {\n+                                       HttpLocaleResolutionConfiguration httpLocaleResolutionConfiguration) {\n+        super(httpLocaleResolutionConfiguration);\n+        OrderUtil.sort(localeResolvers);", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NDQzMQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545144431", "bodyText": "Are bean's arrays injected sorted?", "author": "sdelamo", "createdAt": "2020-12-17T14:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDY4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NjAzMQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545146031", "bodyText": "Yes", "author": "jameskleeh", "createdAt": "2020-12-17T14:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDY4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NzQyMw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545147423", "bodyText": "I've removed the sorting.", "author": "sdelamo", "createdAt": "2020-12-17T14:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDY4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDkyMA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545114920", "bodyText": "Setting an order here doesn't make sense because this is the primary bean", "author": "jameskleeh", "createdAt": "2020-12-17T14:06:05Z", "path": "http-server/src/main/java/io/micronaut/http/server/util/localeresolution/CompositeHttpLocaleResolver.java", "diffHunk": "@@ -50,7 +60,7 @@ public CompositeHttpLocaleResolver(HttpLocaleResolver[] localeResolvers,\n     }\n \n     @Override\n-    public Locale resolveOrDefault(@NonNull HttpRequest<?> request) {\n-        return resolve(request).orElse(defaultLocale);\n+    public int getOrder() {\n+        return Ordered.LOWEST_PRECEDENCE;", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzNzAxMQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545137011", "bodyText": "But if you inject every HttpLocaleResolver with Collection<LocaleResolver> and you sort the\nresolver,  you would want the CompositeHttpLocaleResolver to have the lowest order. Specially, since we don't provide a way to disable CompositeHttpLocaleResolver.", "author": "sdelamo", "createdAt": "2020-12-17T14:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzODE5Mw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545138193", "bodyText": "There is no use case to inject all locale resolvers outside of the composite one. The composite one here is specific to HTTP so there shouldn't be a need to disable it.", "author": "jameskleeh", "createdAt": "2020-12-17T14:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE1MzU1OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545153559", "bodyText": "I've removed the getOrderoverride. I still think it is more correct that CompositeHttpLocaleResolver\nhas the lowest order in a list of LocaleResolver,", "author": "sdelamo", "createdAt": "2020-12-17T14:57:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNDkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTU4OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545115589", "bodyText": "We shouldn't use HIGHEST_PRECEDENCE because then its impossible to create one with a higher precedence", "author": "jameskleeh", "createdAt": "2020-12-17T14:07:01Z", "path": "http-server/src/main/java/io/micronaut/http/server/util/localeresolution/HttpFixedLocaleResolver.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.util.localeresolution;\n+\n+import io.micronaut.context.annotation.Requires;\n+import io.micronaut.core.order.Ordered;\n+import io.micronaut.core.util.localeresolution.FixedLocaleResolver;\n+import io.micronaut.core.util.localeresolution.LocaleResolutionConfiguration;\n+import io.micronaut.http.HttpRequest;\n+import io.micronaut.http.server.HttpServerConfiguration;\n+\n+import javax.inject.Singleton;\n+\n+/**\n+ * Generic implementation of {@link io.micronaut.core.util.LocaleResolver} for fixed locale resolution.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.3.0\n+ */\n+@Singleton\n+@Requires(property = HttpServerConfiguration.HttpLocaleResolutionConfigurationProperties.PREFIX + \".fixed\")\n+public class HttpFixedLocaleResolver extends FixedLocaleResolver<HttpRequest<?>> implements HttpLocaleResolver {\n+\n+    /**\n+     * @param localeResolutionConfiguration Locale Resolution configuration\n+     */\n+    public HttpFixedLocaleResolver(LocaleResolutionConfiguration localeResolutionConfiguration) {\n+        super(localeResolutionConfiguration);\n+    }\n+\n+    @Override\n+    public int getOrder() {\n+        return Ordered.HIGHEST_PRECEDENCE;", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NzczNA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545147734", "bodyText": "I've added a padding.", "author": "sdelamo", "createdAt": "2020-12-17T14:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTU4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTk2OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545115969", "bodyText": "This should not be indexed. There will only be 1 bean of this type", "author": "jameskleeh", "createdAt": "2020-12-17T14:07:30Z", "path": "http-server/src/main/java/io/micronaut/http/server/util/localeresolution/HttpLocaleResolutionConfiguration.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.util.localeresolution;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.core.annotation.Indexed;\n+import io.micronaut.core.util.localeresolution.LocaleResolutionConfiguration;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Configuration for Locale Resolution in a HTTP Request.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.3.0\n+ */\n+@Indexed(HttpLocaleResolutionConfiguration.class)", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzNzY3Nw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545137677", "bodyText": "Is not @Indexed necessary because there might be multiple beans of type LocaleResolutionConfiguration?", "author": "sdelamo", "createdAt": "2020-12-17T14:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzODc0Mg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545138742", "bodyText": "The chance of multiple beans here is very low and the there is a cost to indexed so it shouldn't be used in the case of 1 or 2 beans.", "author": "jameskleeh", "createdAt": "2020-12-17T14:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTkxMA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545149910", "bodyText": "I've removed it.", "author": "sdelamo", "createdAt": "2020-12-17T14:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExNTk2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEyMTcyMg==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545121722", "bodyText": "This should be AbstractLocaleResolver. Calling it default means to me that its the default implementation, which isn't true", "author": "jameskleeh", "createdAt": "2020-12-17T14:15:20Z", "path": "core/src/main/java/io/micronaut/core/util/localeresolution/DefaultLocaleResolver.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.core.util.localeresolution;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.core.util.LocaleResolver;\n+\n+import java.util.Locale;\n+\n+/**\n+ * Provides an abstract class which implements {@link LocaleResolver} and handles default locale resolution.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.3.0\n+ * @param <T> The context object which will be used to resolve the locale\n+ */\n+public abstract class DefaultLocaleResolver<T> implements LocaleResolver<T> {", "originalCommit": "f13440f939b499c9cd539a9696a78a935ffe096c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0MDUyMA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4727#discussion_r545140520", "bodyText": "I've renamed it.", "author": "sdelamo", "createdAt": "2020-12-17T14:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEyMTcyMg=="}], "type": "inlineReview"}, {"oid": "51a2712648c98ff79afc4aba56c4af0a15ee21ec", "url": "https://github.com/micronaut-projects/micronaut-core/commit/51a2712648c98ff79afc4aba56c4af0a15ee21ec", "message": ":%s/DefaultLocaleResolver/AbstractLocaleResolver", "committedDate": "2020-12-17T14:39:58Z", "type": "commit"}, {"oid": "aab26b899a1c31658b3314bcf16690b65491022e", "url": "https://github.com/micronaut-projects/micronaut-core/commit/aab26b899a1c31658b3314bcf16690b65491022e", "message": "add a padding to fixed locale resolver", "committedDate": "2020-12-17T14:47:58Z", "type": "commit"}, {"oid": "330f9f3ce9a5e775f94f78ade27ea6e46a934f2f", "url": "https://github.com/micronaut-projects/micronaut-core/commit/330f9f3ce9a5e775f94f78ade27ea6e46a934f2f", "message": "don't sort locale resolvers they are already sorted", "committedDate": "2020-12-17T14:49:01Z", "type": "commit"}, {"oid": "a8fc185b092e1efe6f92b51c757e4881ea7a1f37", "url": "https://github.com/micronaut-projects/micronaut-core/commit/a8fc185b092e1efe6f92b51c757e4881ea7a1f37", "message": "remove @Indexed", "committedDate": "2020-12-17T14:50:36Z", "type": "commit"}, {"oid": "a374e0258c8649026d58415af9c30a46f2898ba1", "url": "https://github.com/micronaut-projects/micronaut-core/commit/a374e0258c8649026d58415af9c30a46f2898ba1", "message": "don't override getOrder in Composite", "committedDate": "2020-12-17T14:53:53Z", "type": "forcePushed"}, {"oid": "e43cd77d833e8f439111204025722543288fef61", "url": "https://github.com/micronaut-projects/micronaut-core/commit/e43cd77d833e8f439111204025722543288fef61", "message": "don't override getOrder in Composite", "committedDate": "2020-12-17T14:55:44Z", "type": "commit"}, {"oid": "e43cd77d833e8f439111204025722543288fef61", "url": "https://github.com/micronaut-projects/micronaut-core/commit/e43cd77d833e8f439111204025722543288fef61", "message": "don't override getOrder in Composite", "committedDate": "2020-12-17T14:55:44Z", "type": "forcePushed"}, {"oid": "5b29562ecd477ecd66bca5d86bf661beb2241a3f", "url": "https://github.com/micronaut-projects/micronaut-core/commit/5b29562ecd477ecd66bca5d86bf661beb2241a3f", "message": "make test more robust for ordering", "committedDate": "2020-12-17T15:00:16Z", "type": "commit"}, {"oid": "56d65eceba8a5c47519107d662271d687adfb2e7", "url": "https://github.com/micronaut-projects/micronaut-core/commit/56d65eceba8a5c47519107d662271d687adfb2e7", "message": "don't extend FixedLocaleResolver from AbstractLocaleResolver", "committedDate": "2020-12-17T15:00:33Z", "type": "commit"}, {"oid": "ac69a44dafccf93ae1c54a6b865149b1bc13eb57", "url": "https://github.com/micronaut-projects/micronaut-core/commit/ac69a44dafccf93ae1c54a6b865149b1bc13eb57", "message": "Split default and fix configuration", "committedDate": "2020-12-17T15:06:11Z", "type": "commit"}, {"oid": "90034d5f7c87b730519828e7b6761cb25ecfc94b", "url": "https://github.com/micronaut-projects/micronaut-core/commit/90034d5f7c87b730519828e7b6761cb25ecfc94b", "message": "FixedLocaleResolver take a Locale", "committedDate": "2020-12-17T16:27:23Z", "type": "commit"}]}