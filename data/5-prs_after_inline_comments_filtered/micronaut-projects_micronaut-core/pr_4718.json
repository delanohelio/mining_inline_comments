{"pr_number": 4718, "pr_title": "Fix aop/executable methods with multidimensional arrays", "pr_createdAt": "2020-12-16T04:45:33Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/4718", "timeline": [{"oid": "0a0edc5ea58c91bc60d26b6ce5b43799d851b39b", "url": "https://github.com/micronaut-projects/micronaut-core/commit/0a0edc5ea58c91bc60d26b6ce5b43799d851b39b", "message": "Better support multidimensional arrays. Fixes #4709", "committedDate": "2020-12-14T16:32:49Z", "type": "commit"}, {"oid": "0cca8446d16298df7f84bf8eec715a827f02caaf", "url": "https://github.com/micronaut-projects/micronaut-core/commit/0cca8446d16298df7f84bf8eec715a827f02caaf", "message": "Merge branch '2.2.x' into issue-4709", "committedDate": "2020-12-15T19:04:08Z", "type": "commit"}, {"oid": "d67b78703997c00b413b8c6d71f1907617eb04d2", "url": "https://github.com/micronaut-projects/micronaut-core/commit/d67b78703997c00b413b8c6d71f1907617eb04d2", "message": "Merge branch '2.2.x' into issue-4709", "committedDate": "2020-12-15T19:04:30Z", "type": "commit"}, {"oid": "2ca4cf306975507bb3f9dec5c4f2248dc84ed6d0", "url": "https://github.com/micronaut-projects/micronaut-core/commit/2ca4cf306975507bb3f9dec5c4f2248dc84ed6d0", "message": "Fix issue with primitive multidimensional arrays", "committedDate": "2020-12-16T17:41:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNDg2Mw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4718#discussion_r544524863", "bodyText": "@graemerocher I couldn't understand why arrays were given a static generic E. It didn't make sense to me so I commented it out.", "author": "jameskleeh", "createdAt": "2020-12-16T18:25:34Z", "path": "inject-java/src/main/java/io/micronaut/annotation/processing/BeanDefinitionInjectProcessor.java", "diffHunk": "@@ -2245,15 +2245,14 @@ private ExecutableElementParamInfo populateParameterData(@Nullable String declar\n                 switch (kind) {\n                     case ARRAY:\n                         ArrayType arrayType = (ArrayType) typeMirror;\n-                        TypeMirror componentType = arrayType.getComponentType();\n                         Object resolvedType = modelUtils.resolveTypeReference(arrayType);\n                         params.addParameter(\n                                 argName,\n                                 resolvedType,\n                                 genericUtils.resolveTypeReference(arrayType, boundTypes)\n                         );\n-                        params.addGenericTypes(argName, Collections.singletonMap(\"E\", modelUtils.resolveTypeReference(componentType)));\n-\n+                        //TypeMirror componentType = arrayType.getComponentType();\n+                        //params.addGenericTypes(argName, Collections.singletonMap(\"E\", modelUtils.resolveTypeReference(componentType)));", "originalCommit": "2ca4cf306975507bb3f9dec5c4f2248dc84ed6d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}