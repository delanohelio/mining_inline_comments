{"pr_number": 6200, "pr_title": "refactor: push Connect schema down", "pr_createdAt": "2020-09-14T23:14:23Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6200", "timeline": [{"oid": "a7f23ff55fd3eba9543bd437ffd594c7d04b8ab5", "url": "https://github.com/confluentinc/ksql/commit/a7f23ff55fd3eba9543bd437ffd594c7d04b8ab5", "message": "fix: register correct unwrapped schema\n\nThis commit fixes several issues and refactors a lot of the serde code around wrapping and unwrapping single values.\n\nThe main issues being fixed are:\n  1. allow each format to define if it supported wrapping and/or unwrapping. (Not possible with current design)\n  2. pass the correct wrapping / unwrapping flags are passed to key vs value formats when creating serde. (bug in code passes same SerdeOptions to key and value).\n  3. register the correct wrapped / unwrapped schema with the SR. (bug in existing code meant registered format is always wrapped).\n\nAt the same time, the way wrapping / unwrapping was handled in the code wasn't great. Formats like `JSON` needed to be able to handle both wrapped and unwrapped schemas and values, depending on whether the user _explicitly_ set wrapping or unwrapping, vs the default behaviour of the format. This commit refactors the code such that the format will always be passed the a consistent schema and the set of serde features the format should use when creating the serde. This simplifies things and paves the way to user-define-serde.", "committedDate": "2020-09-11T19:56:39Z", "type": "commit"}, {"oid": "8cf7cf11e94cb14801bfc6ba02d040eb5835ded6", "url": "https://github.com/confluentinc/ksql/commit/8cf7cf11e94cb14801bfc6ba02d040eb5835ded6", "message": "test: historic plans", "committedDate": "2020-09-11T22:10:00Z", "type": "commit"}, {"oid": "7c764c7a29ea096080d2376d4c3e2d8463532d39", "url": "https://github.com/confluentinc/ksql/commit/7c764c7a29ea096080d2376d4c3e2d8463532d39", "message": "chore: almog's requested changes", "committedDate": "2020-09-14T22:45:35Z", "type": "commit"}, {"oid": "6722928d7536fc6f06ae2246ab10e0723f750920", "url": "https://github.com/confluentinc/ksql/commit/6722928d7536fc6f06ae2246ab10e0723f750920", "message": "refactor: push ConnectSchema down\n\nFollowing on from the fixes and refactors done in #6188, this commit pushes down the use of the Connect schema type to lower levels of the code. Higher levels of the code now deal with `LogicalSchema`, `PersistentSchema` or just a `List<SimpleColumn>`.\n\nThis moves us closer to removing the Connect schema from the code base, except in the Serde code that deals with connect formats.\n\n`LogicalSchema` and `PersistentSchema` no longer know about the Connect schema type. Calls to retrieve the Connect schema from these types have been replaced with a util function that can convert a list of columns into a Struct Connect schema.  As more code moves away from the Connect schema these util function calls will slowly be removed.", "committedDate": "2020-09-14T23:12:30Z", "type": "commit"}, {"oid": "db6dbe6af299b2804d80ee1dc17b68699092a1ee", "url": "https://github.com/confluentinc/ksql/commit/db6dbe6af299b2804d80ee1dc17b68699092a1ee", "message": "chore: merge from master", "committedDate": "2020-09-15T00:21:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0ODY5Nw==", "url": "https://github.com/confluentinc/ksql/pull/6200#discussion_r489048697", "bodyText": "nit: this was true before your change, but we should consider how this design fares with regards to performance. we should not be creating a schema per-record (as I think we are here) - the older code would have been easier to \"cache\" the result inside the data source", "author": "agavra", "createdAt": "2020-09-15T22:52:54Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/impl/KeyValueExtractor.java", "diffHunk": "@@ -35,9 +37,13 @@\n   private KeyValueExtractor() {\n   }\n \n-  public static Struct extractKey(final JsonObject values, final LogicalSchema logicalSchema,\n-      final SqlValueCoercer sqlValueCoercer) {\n-    final Struct key = new Struct(logicalSchema.keyConnectSchema());\n+  public static Struct extractKey(\n+      final JsonObject values,\n+      final LogicalSchema logicalSchema,\n+      final SqlValueCoercer sqlValueCoercer\n+  ) {\n+    final ConnectSchema keySchema = ConnectSchemas.columnsToConnectSchema(logicalSchema.key());", "originalCommit": "db6dbe6af299b2804d80ee1dc17b68699092a1ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0MDk2OA==", "url": "https://github.com/confluentinc/ksql/pull/6200#discussion_r489240968", "bodyText": "FYI: This is currently only used for inserts.\nTotally agree we should be thinking about perf here. However, as the plan is to move away from using Connect's Struct type for keys, this conversion is only temporary.\nRegardless, I'll pull the conversion higher up so its cached in my next PR.", "author": "big-andy-coates", "createdAt": "2020-09-16T08:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0ODY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1ODIzMg==", "url": "https://github.com/confluentinc/ksql/pull/6200#discussion_r489358232", "bodyText": "See: https://github.com/confluentinc/ksql/pull/6206/files#r489274132", "author": "big-andy-coates", "createdAt": "2020-09-16T11:16:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0ODY5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1MTM0Ng==", "url": "https://github.com/confluentinc/ksql/pull/6200#discussion_r489051346", "bodyText": "pull queries are less problematic, but here's another per-record conversion", "author": "agavra", "createdAt": "2020-09-15T22:56:18Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/PullQueryExecutor.java", "diffHunk": "@@ -1048,10 +1050,12 @@ private static KsqlException invalidWhereClauseException(\n   }\n \n   private static Struct asKeyStruct(final Object keyValue, final PhysicalSchema physicalSchema) {\n-    final Field keyField = Iterables\n-        .getOnlyElement(physicalSchema.keySchema().connectSchema().fields());\n+    final ConnectSchema keySchema = ConnectSchemas\n+        .columnsToConnectSchema(physicalSchema.keySchema().columns());", "originalCommit": "db6dbe6af299b2804d80ee1dc17b68699092a1ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0MjExMg==", "url": "https://github.com/confluentinc/ksql/pull/6200#discussion_r489242112", "bodyText": "As above, this conversion is only temporary.  In this case, it's a per-request cost, so can't be amalgamated.", "author": "big-andy-coates", "createdAt": "2020-09-16T08:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1MTM0Ng=="}], "type": "inlineReview"}]}