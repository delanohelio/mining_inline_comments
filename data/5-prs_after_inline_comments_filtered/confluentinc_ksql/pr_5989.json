{"pr_number": 5989, "pr_title": "test: capture serde options and all sources in QTT historic plans", "pr_createdAt": "2020-08-12T14:57:23Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5989", "timeline": [{"oid": "510ae2ca7438cd5fa57f3dfba3d68c0c161cc2b2", "url": "https://github.com/confluentinc/ksql/commit/510ae2ca7438cd5fa57f3dfba3d68c0c161cc2b2", "message": "test: add serde options to QTT SourceNode", "committedDate": "2020-08-11T21:40:26Z", "type": "commit"}, {"oid": "02ad827f92f2e42018e4a5e79170c54dd62af6c0", "url": "https://github.com/confluentinc/ksql/commit/02ad827f92f2e42018e4a5e79170c54dd62af6c0", "message": "test: write all sources into QTT historic plan post conditions", "committedDate": "2020-08-12T02:28:28Z", "type": "commit"}, {"oid": "a7bd7db2d44a1a2da174a00d6d24b357681cf154", "url": "https://github.com/confluentinc/ksql/commit/a7bd7db2d44a1a2da174a00d6d24b357681cf154", "message": "test: fix PlannedTestLoader to properly filter on whitelist", "committedDate": "2020-08-12T13:00:29Z", "type": "commit"}, {"oid": "4de7ecb8786086905e5dc59d5060247114403b88", "url": "https://github.com/confluentinc/ksql/commit/4de7ecb8786086905e5dc59d5060247114403b88", "message": "test: fix model tester to properly catch serialization errors", "committedDate": "2020-08-12T13:25:53Z", "type": "commit"}, {"oid": "c8c58b94efcedbd01f04138576df7dad84da2078", "url": "https://github.com/confluentinc/ksql/commit/c8c58b94efcedbd01f04138576df7dad84da2078", "message": "test: fix error exposed from newly failing test after previous commit", "committedDate": "2020-08-12T13:32:38Z", "type": "commit"}, {"oid": "250f296157119612a22b9ab2d3c68479d7d489b4", "url": "https://github.com/confluentinc/ksql/commit/250f296157119612a22b9ab2d3c68479d7d489b4", "message": "chore: update historical plan specs", "committedDate": "2020-08-12T14:28:27Z", "type": "commit"}, {"oid": "2b3b154ea9ba76ca1f45751248be000bfa198441", "url": "https://github.com/confluentinc/ksql/commit/2b3b154ea9ba76ca1f45751248be000bfa198441", "message": "chore: checkstyle", "committedDate": "2020-08-12T14:39:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTQ3OA==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469329478", "bodyText": "More normal to put the annotation on the getter when there is a getter method.", "author": "big-andy-coates", "createdAt": "2020-08-12T15:06:03Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/SourceNode.java", "diffHunk": "@@ -49,6 +50,7 @@\n   private final String type;\n   private final Optional<String> schema;\n   private final Optional<KeyFormatNode> keyFormat;\n+  @JsonInclude(JsonInclude.Include.NON_EMPTY)", "originalCommit": "c8c58b94efcedbd01f04138576df7dad84da2078", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469331622", "bodyText": "It's a bit odd to combine the additional sources (list of all sources from metastore) with the test-provided post condition sources, since the former should be a superset of the latter or else the test will fail. This is the existing pattern for collecting topics into the post conditions, though, so I've maintained it here. cc @big-andy-coates for context on why topics are aggregated like this.", "author": "vcrfxia", "createdAt": "2020-08-12T15:08:56Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/tools/conditions/PostConditions.java", "diffHunk": "@@ -75,29 +77,46 @@ public void verify(\n   }\n \n   public Optional<PostConditionsNode> asNode(\n-      final List<PostTopicNode> additional\n+      final List<PostTopicNode> additionalTopics,\n+      final List<SourceNode> additionalSources\n   ) {\n-    if (this == NONE && additional.isEmpty()) {\n+    if (this == NONE && additionalTopics.isEmpty() && additionalSources.isEmpty()) {\n       return Optional.empty();\n     }\n \n+    return Optional.of(new PostConditionsNode(\n+        withAdditionalSources(additionalSources),\n+        Optional.of(withAdditionalTopics(additionalTopics))\n+    ));\n+  }\n+\n+  private List<SourceNode> withAdditionalSources(final List<SourceNode> additionalSources) {", "originalCommit": "2b3b154ea9ba76ca1f45751248be000bfa198441", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNDgwNw==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469334807", "bodyText": "What you say sounds sensible / right.  If the we're capturing all sources then we don't need to maintain any that have been added in the test.\nSame sounds true to topics.\nMaybe just debug / hack some code in to confirm its always a super set.", "author": "big-andy-coates", "createdAt": "2020-08-12T15:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM1MTQ3Ng==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469351476", "bodyText": "Maybe just debug / hack some code in to confirm its always a super set.\n\nI'm not convinced this is worth it. Suppose someone writes a bad test with a topic or source in the post conditions that exists but does not validate properly (e.g., expecting a source with a particular name to be a table when it should be stream). Unless the superset check is nested (i.e., checks that fields are equal up to optionality), the code for generating historic plans will overwrite the bad test-provided post condition and the fact that the test fails on master will still be hidden in the historic plan. In other words, adding a partial superset check still leaves gaps, so I think it's better to blindly overwrite the topics and sources when generating historic plans and leave catching bad test files to QTT instead.\nI'll update the code here to overwrite topics and sources rather than trying to merge them with test-provided post conditions.", "author": "vcrfxia", "createdAt": "2020-08-12T15:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyMDI1MA==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469520250", "bodyText": "Ah, I think I misunderstood your suggestion earlier. I think\n\nMaybe just debug / hack some code in to confirm its always a super set.\n\nmeans to sanity check offline that for existing tests, the set of all topics and sources is always a superset of what's specified in the post conditions, and then simplify the code to just replace the topics and sources with the lists of all topics and all sources. If so, this aligns with what I wrote above as well. I'll do this.", "author": "vcrfxia", "createdAt": "2020-08-12T20:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1NDI3NA==", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469554274", "bodyText": "Confirmed that the sets of all topics and sources are always supersets of the test-provided topics and sources from the post conditions, and removed the dead code. Had to add another commit for regenerating specs since the order of the topics/sources in the specs has changed in many cases, though there are no substantive changes.", "author": "vcrfxia", "createdAt": "2020-08-12T21:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg=="}], "type": "inlineReview"}, {"oid": "9de1af6356428353ff27d55336ef9487f7231bfd", "url": "https://github.com/confluentinc/ksql/commit/9de1af6356428353ff27d55336ef9487f7231bfd", "message": "test: fix failing unit test", "committedDate": "2020-08-12T20:23:22Z", "type": "commit"}, {"oid": "9b8aa222564b851a111cbdd5d39d6afed2a2657e", "url": "https://github.com/confluentinc/ksql/commit/9b8aa222564b851a111cbdd5d39d6afed2a2657e", "message": "chore: feedback", "committedDate": "2020-08-12T20:24:22Z", "type": "commit"}, {"oid": "bdfd5f3aa48e1f0f99506045d2356927a270bb83", "url": "https://github.com/confluentinc/ksql/commit/bdfd5f3aa48e1f0f99506045d2356927a270bb83", "message": "chore: remove unnecessary code", "committedDate": "2020-08-12T21:10:55Z", "type": "commit"}, {"oid": "32697ef9b195da41d6a2a33e80de2230c2ce19c1", "url": "https://github.com/confluentinc/ksql/commit/32697ef9b195da41d6a2a33e80de2230c2ce19c1", "message": "chore: regenerate specs in light of topic order changes", "committedDate": "2020-08-12T21:20:08Z", "type": "commit"}, {"oid": "4901db68f0a5efd2d657fd75278be79171deaff0", "url": "https://github.com/confluentinc/ksql/commit/4901db68f0a5efd2d657fd75278be79171deaff0", "message": "chore: switch back to NON_EMPTY", "committedDate": "2020-08-13T14:32:04Z", "type": "commit"}, {"oid": "f492fbaef2867afedf31c694d5fb16f32fc54fe6", "url": "https://github.com/confluentinc/ksql/commit/f492fbaef2867afedf31c694d5fb16f32fc54fe6", "message": "Merge branch 'master' into qtt-key-schema-master", "committedDate": "2020-08-17T16:59:34Z", "type": "commit"}, {"oid": "ae976f70f08a54d409d1496d7305ae644f647821", "url": "https://github.com/confluentinc/ksql/commit/ae976f70f08a54d409d1496d7305ae644f647821", "message": "chore: regenerate specs", "committedDate": "2020-08-17T21:10:53Z", "type": "commit"}]}