{"pr_number": 4908, "pr_title": "fix: Don't wait for streams thread to be in running state", "pr_createdAt": "2020-03-26T22:37:36Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4908", "timeline": [{"oid": "c51d15ba7a1d896184a53e3a15e265f5f56489d1", "url": "https://github.com/confluentinc/ksql/commit/c51d15ba7a1d896184a53e3a15e265f5f56489d1", "message": "don't wait with standby", "committedDate": "2020-03-26T22:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MjgwNw==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398942807", "bodyText": "could we remove this altogether and let it error inside .store()?", "author": "vinothchandar", "createdAt": "2020-03-26T23:02:20Z", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStore.java", "diffHunk": "@@ -69,15 +72,14 @@ LogicalSchema schema() {\n   }\n \n   <T> T store(final QueryableStoreType<T> queryableStoreType) {\n-    awaitRunning();\n-\n     try {\n       if (ksqlConfig.getBoolean(KsqlConfig.KSQL_QUERY_PULL_ENABLE_STANDBY_READS)) {\n         // True flag allows queries on standby and replica state stores\n         return kafkaStreams.store(\n             StoreQueryParameters.fromNameAndType(stateStoreName, queryableStoreType)\n                 .enableStaleStores());\n       } else {\n+        awaitRunning();", "originalCommit": "c51d15ba7a1d896184a53e3a15e265f5f56489d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk4NjAwMA==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398986000", "bodyText": "Done", "author": "vpapavas", "createdAt": "2020-03-27T01:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MjgwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MzQ5Mg==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398943492", "bodyText": "This busy loop could ultimately hold up threads on the server, for tables that may not be rebalancing too.. (Thread.yield() is just a hint).  Let's fail fast? Now that we have the standby routing, looping until RUNNING may not be necessary at all", "author": "vinothchandar", "createdAt": "2020-03-26T23:04:23Z", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStore.java", "diffHunk": "@@ -93,6 +95,7 @@ LogicalSchema schema() {\n   }\n \n   private void awaitRunning() {\n+    LOG.debug(\"Waiting for streams thread to be in RUNNING state\");", "originalCommit": "c51d15ba7a1d896184a53e3a15e265f5f56489d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk4NjAzOQ==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398986039", "bodyText": "Done", "author": "vpapavas", "createdAt": "2020-03-27T01:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MzQ5Mg=="}], "type": "inlineReview"}, {"oid": "12d925677fa0fdb1327497ca03529868ab27456f", "url": "https://github.com/confluentinc/ksql/commit/12d925677fa0fdb1327497ca03529868ab27456f", "message": "fixed test", "committedDate": "2020-03-27T01:30:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1MDU3MA==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r399050570", "bodyText": "fix test name?", "author": "vinothchandar", "createdAt": "2020-03-27T05:59:25Z", "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStoreTest.java", "diffHunk": "@@ -96,43 +82,21 @@ public void shouldThrowNPEs() {\n     new NullPointerTester()\n         .setDefault(KafkaStreams.class, kafkaStreams)\n         .setDefault(LogicalSchema.class, SCHEMA)\n-        .setDefault(Supplier.class, clock)\n         .setDefault(KsqlConfig.class, ksqlConfig)\n         .testConstructors(KsStateStore.class, Visibility.PACKAGE);\n   }\n \n   @Test\n   public void shouldAwaitRunning() {", "originalCommit": "12d925677fa0fdb1327497ca03529868ab27456f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1MDk5MQ==", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r399050991", "bodyText": "can't understand this change fully", "author": "vinothchandar", "createdAt": "2020-03-27T06:01:11Z", "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStoreTest.java", "diffHunk": "@@ -144,24 +108,20 @@ public void shouldThrowIfNotRunningAfterFailedToGetStore() {\n     when(kafkaStreams.store(any())).thenThrow(new IllegalStateException());\n \n     // When:\n-    expectedException.expect(NotRunningException.class);\n-    expectedException.expectMessage(\"The query was not in a running state. state: NOT_RUNNING\");\n+    expectedException.expect(MaterializationException.class);\n+    expectedException.expectMessage(\"State store currently unavailable: someStore\");\n \n     // When:\n     store.store(QueryableStoreTypes.sessionStore());\n   }\n \n   @Test\n   public void shouldGetStoreOnceRunning() {\n-    // Given:\n-    when(kafkaStreams.state()).thenReturn(State.RUNNING);", "originalCommit": "12d925677fa0fdb1327497ca03529868ab27456f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "53726f33138ada86b749f64fa9238da5555b0af8", "url": "https://github.com/confluentinc/ksql/commit/53726f33138ada86b749f64fa9238da5555b0af8", "message": "rename test", "committedDate": "2020-03-27T18:06:52Z", "type": "commit"}]}