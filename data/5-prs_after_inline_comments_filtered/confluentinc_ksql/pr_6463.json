{"pr_number": 6463, "pr_title": "test: minor fixes in RQTT [MINOR]", "pr_createdAt": "2020-10-19T16:15:19Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6463", "timeline": [{"oid": "9dd39f62c2567dd7894c227865088fe03b485076", "url": "https://github.com/confluentinc/ksql/commit/9dd39f62c2567dd7894c227865088fe03b485076", "message": "test: minor fixes in RQTT", "committedDate": "2020-10-19T16:14:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MDkyMw==", "url": "https://github.com/confluentinc/ksql/pull/6463#discussion_r507880923", "bodyText": "This was pointless as getTestLocation finds the first test in the file with the supplied name - so all get the same location.", "author": "big-andy-coates", "createdAt": "2020-10-19T16:15:59Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/loader/JsonTestLoader.java", "diffHunk": "@@ -146,10 +145,8 @@ private static void throwOnDuplicateNames(final List<? extends Test> testCases)\n         .stream()\n         .filter(e -> e.getValue().size() > 1)\n         .map(e -> \"test name: '\" + e.getKey()\n-            + \"' found in files: \" + e.getValue().stream()\n-            .map(Test::getTestLocation)\n-            .map(TestLocation::toString)\n-            .collect(Collectors.joining(\",\")))", "originalCommit": "9dd39f62c2567dd7894c227865088fe03b485076", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MTI3NQ==", "url": "https://github.com/confluentinc/ksql/pull/6463#discussion_r507881275", "bodyText": "This code was neither waiting for the message to actually be sent, not failing if the message failed to send.", "author": "big-andy-coates", "createdAt": "2020-10-19T16:16:27Z", "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/rest/RestTestExecutor.java", "diffHunk": "@@ -215,14 +217,19 @@ private void produceInputs(final Map<String, List<Record>> inputs) {\n           topicInfo.getKeySerializer(),\n           topicInfo.getValueSerializer()\n       )) {\n-        for (final Record record : records) {\n-          producer.send(new ProducerRecord<>(\n-              topicName,\n-              null,\n-              record.timestamp().orElse(0L),\n-              record.key(),\n-              record.value()\n-          ));", "originalCommit": "9dd39f62c2567dd7894c227865088fe03b485076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3NDkxNg==", "url": "https://github.com/confluentinc/ksql/pull/6463#discussion_r508074916", "bodyText": "How did the tests pass if the test wasn't waiting for the records to be sent? Was the downstream validation waiting for records to arrive? (Took a quick skim of the code but didn't see it.) Was it just luck that record production tended to be quick?", "author": "vcrfxia", "createdAt": "2020-10-19T21:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MTI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2OTQ1Ng==", "url": "https://github.com/confluentinc/ksql/pull/6463#discussion_r508769456", "bodyText": "I think there's code that waits for the response for a period of time.  It's mainly about detecting failures.", "author": "big-andy-coates", "createdAt": "2020-10-20T19:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MTI3NQ=="}], "type": "inlineReview"}, {"oid": "c924d3c940160abf0b93c212a67ea70c4f7e6942", "url": "https://github.com/confluentinc/ksql/commit/c924d3c940160abf0b93c212a67ea70c4f7e6942", "message": "Merge branch 'master' into rqtt_minor", "committedDate": "2020-10-23T12:39:24Z", "type": "commit"}]}