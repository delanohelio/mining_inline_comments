{"pr_number": 4571, "pr_title": "refactor: add SessionProperties to executors", "pr_createdAt": "2020-02-14T23:19:47Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4571", "timeline": [{"oid": "ff1b8c1fdb3d8d84e4169d59d89660c93d8ba03a", "url": "https://github.com/confluentinc/ksql/commit/ff1b8c1fdb3d8d84e4169d59d89660c93d8ba03a", "message": "refactor: add SessionProperties to executors", "committedDate": "2020-02-14T23:25:35Z", "type": "forcePushed"}, {"oid": "dc8df2ac5f8ea2ed2631b9c10a20bc60187ea7bc", "url": "https://github.com/confluentinc/ksql/commit/dc8df2ac5f8ea2ed2631b9c10a20bc60187ea7bc", "message": "checkstyle errors", "committedDate": "2020-02-15T00:20:43Z", "type": "forcePushed"}, {"oid": "4f4b005dedf4074fc97792796bc75f5996ca0f17", "url": "https://github.com/confluentinc/ksql/commit/4f4b005dedf4074fc97792796bc75f5996ca0f17", "message": "checkstyle errors", "committedDate": "2020-02-15T00:54:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5NTYwNA==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380795604", "bodyText": "Is HashedMap a real class? Isn't HashMap?\nBtw, being the requirement that the passed parameter is mutable, it is better to create the HashMap in the SessionProperties class. The reason is that I could pass a Collections.singletonMap here, which will break the contract of the getMutableScopedProperties() method later.", "author": "spena", "createdAt": "2020-02-18T16:42:23Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/KsqlResource.java", "diffHunk": "@@ -195,7 +216,11 @@ public Response terminateCluster(\n       final KsqlEntityList entities = handler.execute(\n           securityContext,\n           TERMINATE_CLUSTER,\n-          request.getStreamsProperties()\n+              new SessionProperties(\n+                  new HashedMap<>(request.getStreamsProperties()),", "originalCommit": "4f4b005dedf4074fc97792796bc75f5996ca0f17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDE5MQ==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380914191", "bodyText": "Yeah...not sure how HashedMap got in here. I moved the creation of the new HashMap in the SessionProperties class", "author": "stevenpyzhang", "createdAt": "2020-02-18T20:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5NTYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxNzc5OQ==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380817799", "bodyText": "Is this example accurate on the mutable properties? If expect the returned value can be mutable and affect the values of the wrapped scope properties, then is fine.\nSessionProperties sm1 = new SessionProperties(...);\n\nMap<String, String> sm1 = s1.getMutableScopedProperties();\nsm1.put(\"k1\", \"v1\");\n\n// This will print \"v1\"\nSystem.out.println(sm1.get(\"k1\"));\n\n// This will print \"v1\"\nSystem.out.println(s1.getScopeProperties().get(\"k1\"));", "author": "spena", "createdAt": "2020-02-18T17:18:39Z", "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/SessionProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest;\n+\n+import io.confluent.ksql.util.KsqlHostInfo;\n+\n+import java.net.URL;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class SessionProperties {\n+  \n+  private final Map<String, Object> mutableScopedProperties;\n+  private final KsqlHostInfo ksqlHostInfo;\n+  private final URL localUrl;\n+\n+  public SessionProperties(\n+          final Map<String, Object> mutableScopedProperties,\n+          final KsqlHostInfo ksqlHostInfo,\n+          final URL localUrl) {\n+    this.mutableScopedProperties = \n+        Objects.requireNonNull(mutableScopedProperties, \"mutableScopedProperties\");\n+    this.ksqlHostInfo = Objects.requireNonNull(ksqlHostInfo, \"ksqlHostInfo\");\n+    this.localUrl = Objects.requireNonNull(localUrl, \"localUrl\");\n+  }\n+\n+  public Map<String, Object> getMutableScopedProperties() {\n+    return mutableScopedProperties;", "originalCommit": "4f4b005dedf4074fc97792796bc75f5996ca0f17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4NDU3Mg==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380884572", "bodyText": "That's right. The properties can be changed in PropertyExecutor.java so you're example is essentially what happens in that executor.", "author": "stevenpyzhang", "createdAt": "2020-02-18T19:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxNzc5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxOTQ5MA==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380819490", "bodyText": "Tip: If we expect this class to grow in the future when passing more parameters to the executor, then we could create it as a Builder pattern. Not necessary to do it in this PR, feel free to do it here or later.", "author": "spena", "createdAt": "2020-02-18T17:21:30Z", "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/SessionProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest;\n+\n+import io.confluent.ksql.util.KsqlHostInfo;\n+\n+import java.net.URL;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class SessionProperties {\n+  \n+  private final Map<String, Object> mutableScopedProperties;\n+  private final KsqlHostInfo ksqlHostInfo;\n+  private final URL localUrl;\n+\n+  public SessionProperties(\n+          final Map<String, Object> mutableScopedProperties,\n+          final KsqlHostInfo ksqlHostInfo,\n+          final URL localUrl) {", "originalCommit": "4f4b005dedf4074fc97792796bc75f5996ca0f17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMTc2Mg==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380821762", "bodyText": "Doesn't hostInfo.equals(localHost) work? I see KsqlHostInfo has the equals() implemented.", "author": "spena", "createdAt": "2020-02-18T17:25:44Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/util/DiscoverRemoteHostsUtil.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.util;\n+\n+import io.confluent.ksql.util.KsqlHostInfo;\n+import io.confluent.ksql.util.PersistentQueryMetadata;\n+import io.confluent.ksql.util.QueryMetadata;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.kafka.streams.state.HostInfo;\n+import org.apache.kafka.streams.state.StreamsMetadata;\n+\n+public final class DiscoverRemoteHostsUtil {\n+\n+  private DiscoverRemoteHostsUtil() {}\n+\n+  public static Set<HostInfo> getRemoteHosts(\n+      final List<PersistentQueryMetadata> currentQueries, \n+      final KsqlHostInfo localHost\n+  ) {\n+    return currentQueries.stream()\n+        .map(QueryMetadata::getAllMetadata)\n+        .filter(Objects::nonNull)\n+        .flatMap(Collection::stream)\n+        .filter(streamsMetadata -> streamsMetadata != StreamsMetadata.NOT_AVAILABLE)\n+        .map(StreamsMetadata::hostInfo)\n+        .filter(hostInfo -> !(hostInfo.host().equals(localHost.host())\n+            && hostInfo.port() == (localHost.port())))", "originalCommit": "4f4b005dedf4074fc97792796bc75f5996ca0f17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNDgzMg==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r380824832", "bodyText": "hostInfo is of type HostInfo which is a different class than KsqlHostInfo. The former is from Streams", "author": "vpapavas", "createdAt": "2020-02-18T17:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMTc2Mg=="}], "type": "inlineReview"}, {"oid": "e9c652563e81ebbf1d6c64a5dfa0ee6391a8f0cb", "url": "https://github.com/confluentinc/ksql/commit/e9c652563e81ebbf1d6c64a5dfa0ee6391a8f0cb", "message": "checkstyle errors", "committedDate": "2020-02-18T20:21:10Z", "type": "forcePushed"}, {"oid": "815a37dd39ecb5a031babaff570e635c79ff01df", "url": "https://github.com/confluentinc/ksql/commit/815a37dd39ecb5a031babaff570e635c79ff01df", "message": "checkstyle errors", "committedDate": "2020-02-18T21:48:35Z", "type": "forcePushed"}, {"oid": "f40eb51beba5f550f35b811cad5ae9f8d8cbef4a", "url": "https://github.com/confluentinc/ksql/commit/f40eb51beba5f550f35b811cad5ae9f8d8cbef4a", "message": "refactor: add SessionProperties to executors", "committedDate": "2020-02-19T18:40:39Z", "type": "commit"}, {"oid": "da71c464ab9bf9625bdc28cffb087bfbe7922e34", "url": "https://github.com/confluentinc/ksql/commit/da71c464ab9bf9625bdc28cffb087bfbe7922e34", "message": "checkstyle errors", "committedDate": "2020-02-19T18:40:39Z", "type": "commit"}, {"oid": "da71c464ab9bf9625bdc28cffb087bfbe7922e34", "url": "https://github.com/confluentinc/ksql/commit/da71c464ab9bf9625bdc28cffb087bfbe7922e34", "message": "checkstyle errors", "committedDate": "2020-02-19T18:40:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxMDg0Mw==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r381610843", "bodyText": "javadoc please :) what belongs in this? when is it refreshed? where should it be used?  also make sure to javadoc the parameters, whats the ksqlHostInfo - is that me? is that the caller?", "author": "agavra", "createdAt": "2020-02-19T23:40:11Z", "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/SessionProperties.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest;\n+\n+import io.confluent.ksql.util.KsqlHostInfo;\n+\n+import java.net.URL;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class SessionProperties {", "originalCommit": "da71c464ab9bf9625bdc28cffb087bfbe7922e34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwODk0OQ==", "url": "https://github.com/confluentinc/ksql/pull/4571#discussion_r382208949", "bodyText": "added", "author": "stevenpyzhang", "createdAt": "2020-02-20T19:25:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxMDg0Mw=="}], "type": "inlineReview"}, {"oid": "f4451f3917e331c2916039a9319c0875064065b9", "url": "https://github.com/confluentinc/ksql/commit/f4451f3917e331c2916039a9319c0875064065b9", "message": "javadocs", "committedDate": "2020-02-20T18:31:28Z", "type": "commit"}, {"oid": "f4451f3917e331c2916039a9319c0875064065b9", "url": "https://github.com/confluentinc/ksql/commit/f4451f3917e331c2916039a9319c0875064065b9", "message": "javadocs", "committedDate": "2020-02-20T18:31:28Z", "type": "forcePushed"}]}