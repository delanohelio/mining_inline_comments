{"pr_number": 4494, "pr_title": "fix: Fixes the single host lag reporting case", "pr_createdAt": "2020-02-08T03:44:04Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4494", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDY5Mg==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376684692", "bodyText": "is this related to the single host lag reporting case?", "author": "vinothchandar", "createdAt": "2020-02-08T03:52:24Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/HeartbeatAgent.java", "diffHunk": "@@ -223,6 +223,9 @@ private void processHeartbeats(final long windowStart, final long windowEnd) {\n           }\n           return status;\n         });\n+        for (HostStatusListener listener : hostStatusListeners) {", "originalCommit": "30c2acecc56740abd09be697bc0a7f201fe28bc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NTE2Nw==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376685167", "bodyText": "So previously, the heart beat agent was not notifying the lag agent?", "author": "vinothchandar", "createdAt": "2020-02-08T04:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NjEyNQ==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376686125", "bodyText": "Yes, if there are no heartbeats received, it will still update the status of known hosts (localhost) and that needs to be reported to the listeners.", "author": "AlanConfluent", "createdAt": "2020-02-08T04:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDk2Mg==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376684962", "bodyText": "I think we should do this and then prime the cache on the remote host on-demand as we discussed..  This will ensure correct filtering in all cases..\nChoosing to ignore nodes if we don't have lag , would mean that, on every bounce of the ksql server, queries will fail for few seconds until lags are propogated across the cluster again (bounced server will begin with an empty map).. Thus a rolling bounce of the cluster will see large error spikes.. This is a bad move IMO", "author": "vinothchandar", "createdAt": "2020-02-08T03:57:24Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/MaximumLagFilter.java", "diffHunk": "@@ -66,8 +66,8 @@ public boolean filter(final KsqlHostInfo hostInfo) {\n           final long offsetLag = Math.max(endOffset - hostLag.getCurrentOffsetPosition(), 0);\n           return offsetLag <= allowedOffsetLag;\n         })\n-        // If we don't have lag info, we'll be conservative and not include the host\n-        .orElse(false);\n+        // If we don't have lag info, we'll be conservative and include the host", "originalCommit": "30c2acecc56740abd09be697bc0a7f201fe28bc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NTAzMg==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376685032", "bodyText": "Please file an issue for the the follow up work of priming the cache on the remote host, on demand...", "author": "vinothchandar", "createdAt": "2020-02-08T03:58:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDk2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NjE5Mw==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376686193", "bodyText": "Yeah, I agree with that.  I guess the only downside is that if we don't know the lag and we forward the request to that host, we may not be honoring the max lag configuration and may be returning a really stale value.", "author": "AlanConfluent", "createdAt": "2020-02-08T04:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDk2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg0MzMzMA==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r376843330", "bodyText": "What I meant was, the remote host (i.e the one whose lag we dont know) can do the lag enforcement and fail the query and send an error response.. This lag exchange control plane is an optimization for not doing this round trip when we know the host is backed up/lagging significantly", "author": "vinothchandar", "createdAt": "2020-02-10T02:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDk2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMjQ5OQ==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r377222499", "bodyText": "#4471 #4472 - Those are the two followup issues.\nI see.  That makes sense.  I agree that it seems necessary to ensure the filtering if the client, in some way, is relying on that for some notion of consistency, etc.  If we're going to enforce this on the lagging host and the control plane is an optimization, then this makes sense.", "author": "AlanConfluent", "createdAt": "2020-02-10T17:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjY2OA==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r377282668", "bodyText": "any exception handling needed here to ensure we don't stop notifying if one of  the callbacks throw an error?", "author": "vinothchandar", "createdAt": "2020-02-10T19:55:16Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/HeartbeatAgent.java", "diffHunk": "@@ -223,6 +223,9 @@ private void processHeartbeats(final long windowStart, final long windowEnd) {\n           }\n           return status;\n         });\n+        for (HostStatusListener listener : hostStatusListeners) {\n+          listener.onHostStatusUpdated(getHostsStatus());", "originalCommit": "aad6b645fdb593d512ab0ed6ac9aa3c02f01d8f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTY3Mg==", "url": "https://github.com/confluentinc/ksql/pull/4494#discussion_r377299672", "bodyText": "Done.  Factored out notification to a method where I now catch and log any errors.", "author": "AlanConfluent", "createdAt": "2020-02-10T20:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjY2OA=="}], "type": "inlineReview"}, {"oid": "f90bd2da41d5d5afb3b9de83c5ed625f5d2846fa", "url": "https://github.com/confluentinc/ksql/commit/f90bd2da41d5d5afb3b9de83c5ed625f5d2846fa", "message": "fix: Fixes the single host lag reporting case", "committedDate": "2020-02-10T20:30:35Z", "type": "commit"}, {"oid": "ba8c6c9dad5a17c50ab987d633d3a52d383072e7", "url": "https://github.com/confluentinc/ksql/commit/ba8c6c9dad5a17c50ab987d633d3a52d383072e7", "message": "Adds test cases for callback", "committedDate": "2020-02-10T20:30:35Z", "type": "commit"}, {"oid": "9c126ea14fa28dd74221b3562bf0e0d955dc5ffe", "url": "https://github.com/confluentinc/ksql/commit/9c126ea14fa28dd74221b3562bf0e0d955dc5ffe", "message": "Catches listener errors", "committedDate": "2020-02-10T20:30:35Z", "type": "commit"}, {"oid": "9c126ea14fa28dd74221b3562bf0e0d955dc5ffe", "url": "https://github.com/confluentinc/ksql/commit/9c126ea14fa28dd74221b3562bf0e0d955dc5ffe", "message": "Catches listener errors", "committedDate": "2020-02-10T20:30:35Z", "type": "forcePushed"}, {"oid": "d52330dd693d82ebde52d0ff5d2b3443688b7c7c", "url": "https://github.com/confluentinc/ksql/commit/d52330dd693d82ebde52d0ff5d2b3443688b7c7c", "message": "Fix test", "committedDate": "2020-02-10T21:00:36Z", "type": "commit"}]}