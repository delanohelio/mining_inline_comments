{"pr_number": 5563, "pr_title": "feat: new split_to_map udf", "pr_createdAt": "2020-06-06T22:11:43Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5563", "timeline": [{"oid": "532dd9c6bde3bc17b7ccee4c2d17724810058512", "url": "https://github.com/confluentinc/ksql/commit/532dd9c6bde3bc17b7ccee4c2d17724810058512", "message": "initial commit new split_to_map udf", "committedDate": "2020-06-06T22:06:59Z", "type": "commit"}, {"oid": "cadab2bfffce5b32a367dbfce8ac01a42de8043f", "url": "https://github.com/confluentinc/ksql/commit/cadab2bfffce5b32a367dbfce8ac01a42de8043f", "message": "missed a 'final'", "committedDate": "2020-06-07T01:40:32Z", "type": "commit"}, {"oid": "62da1e8bac4db51671be9c9772cb15a8f7938995", "url": "https://github.com/confluentinc/ksql/commit/62da1e8bac4db51671be9c9772cb15a8f7938995", "message": "fix checkstyle", "committedDate": "2020-06-07T18:24:03Z", "type": "commit"}, {"oid": "638132435b096f3f01a5878be896006dad45922e", "url": "https://github.com/confluentinc/ksql/commit/638132435b096f3f01a5878be896006dad45922e", "message": "fix checkstyle", "committedDate": "2020-06-07T22:50:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzAzOA==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436817038", "bodyText": "by the way, guava Splitter has support for withKeyValueSeparator to simplify exactly this :)\nFrom the docs:\n    /*\n     * For example, {@code\n     * Splitter.on(';').trimResults().withKeyValueSeparator(\"=>\").split(\"a=>b ; c=>b\")} will return\n     * a mapping from {@code \"a\"} to {@code \"b\"} and {@code \"c\"} to {@code \"b\"}.", "author": "agavra", "createdAt": "2020-06-08T15:58:50Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/SplitToMap.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import com.google.common.base.Splitter;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+@UdfDescription(\n+    name = \"split_to_map\",\n+    description = \"Splits a string into key-value pairs and creates a map from them. The \"\n+        + \"'entryDelimiter' splits the string into key-value pairs which are then split by \"\n+        + \"'kvDelimiter'. If the same key is present multiple times in the input, the latest \"\n+        + \"value for that key is returned. Returns NULL f the input text or either of the \"\n+        + \"delimiters is NULL.\")\n+public class SplitToMap {\n+  @Udf\n+  public Map<String, String> splitToMap(\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String input,\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String entryDelimiter,\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String kvDelimiter) {\n+\n+    if (input == null || entryDelimiter == null || kvDelimiter == null) {\n+      return null;\n+    }\n+\n+    if (entryDelimiter.isEmpty() || kvDelimiter.isEmpty() || entryDelimiter.equals(kvDelimiter)) {\n+      return null;\n+    }\n+\n+    final Iterable<String> entries = Splitter.on(entryDelimiter).omitEmptyStrings().split(input);", "originalCommit": "638132435b096f3f01a5878be896006dad45922e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNjg2NA==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436826864", "bodyText": "yeah, tried multiple ways with that at first but it's too inflexible and likes to throw a lot of exceptions on my test-cases :(", "author": "blueedgenick", "createdAt": "2020-06-08T16:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzAzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzUwMw==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436817503", "bodyText": "We may also want to have EncodeMap(map, entry_delim, kv_delim) which encodes a map into a string", "author": "agavra", "createdAt": "2020-06-08T15:59:31Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/SplitToMap.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import com.google.common.base.Splitter;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+@UdfDescription(\n+    name = \"split_to_map\",\n+    description = \"Splits a string into key-value pairs and creates a map from them. The \"\n+        + \"'entryDelimiter' splits the string into key-value pairs which are then split by \"\n+        + \"'kvDelimiter'. If the same key is present multiple times in the input, the latest \"\n+        + \"value for that key is returned. Returns NULL f the input text or either of the \"\n+        + \"delimiters is NULL.\")\n+public class SplitToMap {", "originalCommit": "638132435b096f3f01a5878be896006dad45922e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5NDMwNw==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r438394307", "bodyText": "i'll add it to my udf backlog ;)   - although i'm less concerned about that from a use-case perspective as you can always construct almost-arbitrary json output by using structs/maps/arrays if you need that for a downstream system. The primary motivator for this one is when you get, for example, some encoded message from a mainframe MQ system that needs to be parsed out this way", "author": "blueedgenick", "createdAt": "2020-06-10T20:38:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NTg3Ng==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r438245876", "bodyText": "can you add a test with whitespace? what do we want the behavior to be when there is whitespace (e.g. foo := bar)", "author": "agavra", "createdAt": "2020-06-10T16:12:23Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/string/SplitToMapTest.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2018 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package io.confluent.ksql.function.udf.string;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.hasEntry;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.junit.Test;\n+\n+public class SplitToMapTest {", "originalCommit": "638132435b096f3f01a5878be896006dad45922e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzNDQyNw==", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r438934427", "bodyText": "good idea, test added!", "author": "blueedgenick", "createdAt": "2020-06-11T16:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NTg3Ng=="}], "type": "inlineReview"}, {"oid": "2e24cc4c79fce9432e8f3c56032694bf8ef32b7a", "url": "https://github.com/confluentinc/ksql/commit/2e24cc4c79fce9432e8f3c56032694bf8ef32b7a", "message": "add new test-case from Almog's feedback. doc updates from Jim", "committedDate": "2020-06-10T20:52:59Z", "type": "commit"}]}