{"pr_number": 6135, "pr_title": " fix: wrong value schema being registered for unwrapped primitives ", "pr_createdAt": "2020-09-02T14:16:18Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6135", "timeline": [{"oid": "51c5139fb55343ef16316965edf7998ac0fa12a7", "url": "https://github.com/confluentinc/ksql/commit/51c5139fb55343ef16316965edf7998ac0fa12a7", "message": "fix: wrong value schema being registered for unwrapped primitives\n\nfixes: https://github.com/confluentinc/ksql/issues/6134\n\nFixes an issue where the wrong schema is registered for unwrapped primitive values. The registered schema  incorrectly still has the value column wrapping in a record.", "committedDate": "2020-09-02T14:13:53Z", "type": "commit"}, {"oid": "338d0d2b03773021d9693011f935e65af2810b3f", "url": "https://github.com/confluentinc/ksql/commit/338d0d2b03773021d9693011f935e65af2810b3f", "message": "test: qtt test cases", "committedDate": "2020-09-02T14:15:03Z", "type": "commit"}, {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099", "url": "https://github.com/confluentinc/ksql/commit/8927ae9cc4ec537040b0637fbcfb041aa672e099", "message": "test: historic plans", "committedDate": "2020-09-02T14:15:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwODI4OA==", "url": "https://github.com/confluentinc/ksql/pull/6135#discussion_r482108288", "bodyText": "Adding a validator here removes the need for a null check later.", "author": "big-andy-coates", "createdAt": "2020-09-02T14:22:09Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java", "diffHunk": "@@ -523,6 +523,7 @@ private static ConfigDef buildConfigDef(final ConfigGeneration generation) {\n             SCHEMA_REGISTRY_URL_PROPERTY,\n             ConfigDef.Type.STRING,\n             \"\",\n+            new ConfigDef.NonNullValidator(),", "originalCommit": "8927ae9cc4ec537040b0637fbcfb041aa672e099", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MjkzNA==", "url": "https://github.com/confluentinc/ksql/pull/6135#discussion_r482192934", "bodyText": "Add two more tests to validate the negative cases?\nif (unwrapSingle && !singleField) {\n      throw new KsqlException(\"'\" + CommonCreateConfigs.WRAP_SINGLE_VALUE + \"' \"\n          + \"is only valid for single-field value schemas\");\n    }", "author": "spena", "createdAt": "2020-09-02T16:11:50Z", "path": "ksqldb-serde/src/test/java/io/confluent/ksql/serde/connect/ConnectFormatTest.java", "diffHunk": "@@ -95,6 +105,26 @@ public void shouldConvertTransformedConnectSchemaToColumns() {\n     assertThat(result.get(1).type(), is(SqlTypes.BIGINT));\n   }\n \n+  @Test\n+  public void shouldSupportPrimitiveSchemas() {\n+    // When:\n+    format.toParsedSchema(\n+        ImmutableList.of(column(\"bob\", SqlTypes.INTEGER)),\n+        SerdeOptions.of(SerdeOption.UNWRAP_SINGLE_VALUES),\n+        formatInfo\n+    );\n+\n+    // Then:\n+    assertThat(capturedConnectSchema, is(SchemaBuilder.int32().optional().build()));\n+  }\n+\n+  private static SimpleColumn column(final String name, final SqlType sqlType) {\n+    final SimpleColumn column = mock(SimpleColumn.class);\n+    when(column.name()).thenReturn(ColumnName.of(name));\n+    when(column.type()).thenReturn(sqlType);\n+    return column;\n+  }\n+", "originalCommit": "8927ae9cc4ec537040b0637fbcfb041aa672e099", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0MDA0OA==", "url": "https://github.com/confluentinc/ksql/pull/6135#discussion_r482240048", "bodyText": "That code added to ConnectFormat will be removed again in the next PR, (its code duplication at the moment), hence no tests.", "author": "big-andy-coates", "createdAt": "2020-09-02T17:21:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MjkzNA=="}], "type": "inlineReview"}]}