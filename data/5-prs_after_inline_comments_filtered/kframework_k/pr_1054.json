{"pr_number": 1054, "pr_title": "fix bug involving interaction of function context and macros", "pr_createdAt": "2020-01-23T18:28:54Z", "pr_url": "https://github.com/kframework/k/pull/1054", "timeline": [{"oid": "1076513957b82ab26ed8aa4eb5838e02b36f194d", "url": "https://github.com/kframework/k/commit/1076513957b82ab26ed8aa4eb5838e02b36f194d", "message": "fix bug involving interaction of function context and macros", "committedDate": "2020-01-23T18:15:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTE1NA==", "url": "https://github.com/kframework/k/pull/1054#discussion_r370365154", "bodyText": "I'm not entirely sure what's going on here, but I don't like that we're calling out variables by name specifically. Would this be affected if I named a variable as BLAH_Configuration in my definition?", "author": "ehildenb", "createdAt": "2020-01-23T21:31:14Z", "path": "kernel/src/main/java/org/kframework/compile/ExpandMacros.java", "diffHunk": "@@ -220,6 +220,9 @@ public K apply(KApply k) {\n                                 public K apply(KVariable k) {\n                                     K result = subst.get(k);\n                                     if (result == null) {\n+                                      if (k.name().equals(\"_Configuration\")) {", "originalCommit": "1076513957b82ab26ed8aa4eb5838e02b36f194d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyNjA3Ng==", "url": "https://github.com/kframework/k/pull/1054#discussion_r370726076", "bodyText": "No, it's an exact string match, and this particular string is not part of the syntax of variables in K, so it can't be written by the user. This isn't really a new design choice though; the function context pass was already written this way, we're just fixing a bug in how it interacts with macros.", "author": "dwightguth", "createdAt": "2020-01-24T16:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTU3MA==", "url": "https://github.com/kframework/k/pull/1054#discussion_r370365570", "bodyText": "So now we are expanding macros on macro rules? Just want to make sure that I understand what this is doing.", "author": "ehildenb", "createdAt": "2020-01-23T21:32:05Z", "path": "kernel/src/main/java/org/kframework/compile/ResolveFunctionWithConfig.java", "diffHunk": "@@ -233,9 +233,6 @@ public Sentence resolveConfigVar(Sentence s) {\n     }\n \n     public Sentence resolve(Module m, Sentence s) {\n-        if (ExpandMacros.isMacro(s)) {\n-            return s;\n-        }", "originalCommit": "1076513957b82ab26ed8aa4eb5838e02b36f194d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyNjI0Mw==", "url": "https://github.com/kframework/k/pull/1054#discussion_r370726243", "bodyText": "This is applying the function context pass to macro rules.", "author": "dwightguth", "createdAt": "2020-01-24T16:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTU3MA=="}], "type": "inlineReview"}, {"oid": "10a3613d51eabf1704dd334bc8812fcaa8cdc854", "url": "https://github.com/kframework/k/commit/10a3613d51eabf1704dd334bc8812fcaa8cdc854", "message": "Merge branch 'master' into macro", "committedDate": "2020-01-24T17:22:02Z", "type": "commit"}]}