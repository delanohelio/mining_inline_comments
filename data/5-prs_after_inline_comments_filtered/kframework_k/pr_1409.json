{"pr_number": 1409, "pr_title": "report error if concrete backend has existentially-qualified variable", "pr_createdAt": "2020-07-09T19:44:26Z", "pr_url": "https://github.com/kframework/k/pull/1409", "timeline": [{"oid": "9dcaf32e5441e489be0fa066fd000cb747635829", "url": "https://github.com/kframework/k/commit/9dcaf32e5441e489be0fa066fd000cb747635829", "message": "report error if concrete backend has existentially-qualified variable", "committedDate": "2020-07-09T19:43:31Z", "type": "commit"}, {"oid": "bf3d1c40e0f9acb59ee4e6a7adef5a9f8e41e6fa", "url": "https://github.com/kframework/k/commit/bf3d1c40e0f9acb59ee4e6a7adef5a9f8e41e6fa", "message": "tests", "committedDate": "2020-07-09T19:51:32Z", "type": "commit"}, {"oid": "333a7c6a28f83a647ad7a0b6cba6753189a65197", "url": "https://github.com/kframework/k/commit/333a7c6a28f83a647ad7a0b6cba6753189a65197", "message": "fix whitespace", "committedDate": "2020-07-09T19:56:57Z", "type": "commit"}, {"oid": "c108297e0e58119a4be4d70f781dbdf30750a62d", "url": "https://github.com/kframework/k/commit/c108297e0e58119a4be4d70f781dbdf30750a62d", "message": "change backend", "committedDate": "2020-07-09T20:28:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1NDAzMA==", "url": "https://github.com/kframework/k/pull/1409#discussion_r452954030", "bodyText": "Why are macro allowed to have existential variables on the RHS?\nPlease add test-cases exercising each of the clauses in this big conjunct.", "author": "ehildenb", "createdAt": "2020-07-10T16:40:58Z", "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRHSVariables.java", "diffHunk": "@@ -29,33 +30,37 @@\n  */\n public class CheckRHSVariables {\n     private final Set<KEMException> errors;\n+    private final boolean errorExistential;\n \n-    public CheckRHSVariables(Set<KEMException> errors) {\n+    public CheckRHSVariables(Set<KEMException> errors, boolean errorExistential) {\n         this.errors = errors;\n+        this.errorExistential = errorExistential;\n     }\n     private void check(Rule rule) {\n         resetVars();\n         Set<String> unboundVariableNames = getUnboundVarNames(rule);\n-        gatherVars(true, rule.body());\n-        gatherVars(false, rule.requires());\n-        gatherVars(false, rule.ensures());\n+        boolean isMacro = ExpandMacros.isMacro(rule);\n+        boolean errorExistential = !isMacro && this.errorExistential && !(rule.att().contains(Att.LABEL()) && rule.att().get(Att.LABEL()).equals(\"STDIN-STREAM.stdinUnblock\"));", "originalCommit": "c108297e0e58119a4be4d70f781dbdf30750a62d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72691a75f10f8905041797214532d507eff3ba2e", "url": "https://github.com/kframework/k/commit/72691a75f10f8905041797214532d507eff3ba2e", "message": "fix bug", "committedDate": "2020-07-10T16:58:37Z", "type": "commit"}, {"oid": "b04533e5b9f6ab44712438007d772a6441c58c11", "url": "https://github.com/kframework/k/commit/b04533e5b9f6ab44712438007d772a6441c58c11", "message": "fix broken test", "committedDate": "2020-07-10T17:19:21Z", "type": "commit"}, {"oid": "21e39ceee9793f528868e0f8da6b109a4b22aa80", "url": "https://github.com/kframework/k/commit/21e39ceee9793f528868e0f8da6b109a4b22aa80", "message": "fix another bug in test", "committedDate": "2020-07-10T18:24:00Z", "type": "commit"}, {"oid": "1590225af6fb3e586b765e9871044778c6f7de90", "url": "https://github.com/kframework/k/commit/1590225af6fb3e586b765e9871044778c6f7de90", "message": "Merge branch 'master' into concrete", "committedDate": "2020-07-10T23:21:56Z", "type": "commit"}, {"oid": "6364caad307f245b0c58f55238c28841c605e153", "url": "https://github.com/kframework/k/commit/6364caad307f245b0c58f55238c28841c605e153", "message": "Merge branch 'master' into concrete", "committedDate": "2020-07-13T13:44:45Z", "type": "commit"}]}