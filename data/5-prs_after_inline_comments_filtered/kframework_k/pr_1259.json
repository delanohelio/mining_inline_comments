{"pr_number": 1259, "pr_title": "Add more support for Bison and add documentation", "pr_createdAt": "2020-05-05T22:08:56Z", "pr_url": "https://github.com/kframework/k/pull/1259", "timeline": [{"oid": "5272a78acb0043ca20b39b7fa7c740aa523a9eb2", "url": "https://github.com/kframework/k/commit/5272a78acb0043ca20b39b7fa7c740aa523a9eb2", "message": "add test", "committedDate": "2020-05-05T21:38:27Z", "type": "commit"}, {"oid": "3a87d8c564491d60f2c1dd51b478aa5f0b167e9e", "url": "https://github.com/kframework/k/commit/3a87d8c564491d60f2c1dd51b478aa5f0b167e9e", "message": "generate non PGM config variable parsers", "committedDate": "2020-05-05T21:38:37Z", "type": "commit"}, {"oid": "282e36353bd72b1bd5e184a3f3b2316f026a66b1", "url": "https://github.com/kframework/k/commit/282e36353bd72b1bd5e184a3f3b2316f026a66b1", "message": "add documentation", "committedDate": "2020-05-05T22:07:39Z", "type": "commit"}, {"oid": "117b1eae1d0046d092e5de84d4f2c708dd0f27ba", "url": "https://github.com/kframework/k/commit/117b1eae1d0046d092e5de84d4f2c708dd0f27ba", "message": "update to new syntax based on Everett's comments", "committedDate": "2020-05-07T14:13:15Z", "type": "commit"}, {"oid": "a16118c800f3590f078568f822d04e42cad8331e", "url": "https://github.com/kframework/k/commit/a16118c800f3590f078568f822d04e42cad8331e", "message": "update documentation", "committedDate": "2020-05-07T14:16:40Z", "type": "commit"}, {"oid": "b1e8b1a2a69575434fc5f697f70b3ed0d6f96a2c", "url": "https://github.com/kframework/k/commit/b1e8b1a2a69575434fc5f697f70b3ed0d6f96a2c", "message": "fix whitespace", "committedDate": "2020-05-07T14:17:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0MDg3Nw==", "url": "https://github.com/kframework/k/pull/1259#discussion_r421540877", "bodyText": "I believe we use this same strategy for getting subparts of many axioms. Can you look and see if it's reasonable to factor out a method directed at it?", "author": "ehildenb", "createdAt": "2020-05-07T14:18:47Z", "path": "kernel/src/main/java/org/kframework/kompile/Kompile.java", "diffHunk": "@@ -154,10 +154,24 @@ public CompiledDefinition run(File definitionFile, String mainModuleName, String\n \n         if (kompileOptions.experimental.genBisonParser || kompileOptions.experimental.genGlrBisonParser) {\n             new KRead(kem, files, InputModes.PROGRAM).createBisonParser(def.programParsingModuleFor(def.mainSyntaxModuleName(), kem).get(), def.programStartSymbol, files.resolveKompiled(\"parser_PGM\"), kompileOptions.experimental.genGlrBisonParser);\n-            for (Module mod : iterable(def.getParsedDefinition().entryModules())) {\n-              if (mod.att().contains(\"parser\")) {\n-                new KRead(kem, files, InputModes.PROGRAM).createBisonParser(def.programParsingModuleFor(mod.name(), kem).get(), def.configurationVariableDefaultSorts.getOrDefault(\"$\" + mod.att().get(\"parser\"), Sorts.K()), files.resolveKompiled(\"parser_\" + mod.att().get(\"parser\")), kompileOptions.experimental.genGlrBisonParser);\n-              }\n+            for (Production prod : iterable(kompiledDefinition.mainModule().productions())) {\n+                if (prod.att().contains(\"cell\") && prod.att().contains(\"parser\")) {\n+                    String att = prod.att().get(\"parser\");\n+                    String[] parts = att.trim().split(\";\");\n+                    for (String part : parts) {\n+                        String[] subparts = part.trim().split(\",\");", "originalCommit": "117b1eae1d0046d092e5de84d4f2c708dd0f27ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e1328d2a5900b0ac0a74ee9d170db250560c59ea", "url": "https://github.com/kframework/k/commit/e1328d2a5900b0ac0a74ee9d170db250560c59ea", "message": "Merge branch 'master' into parser4", "committedDate": "2020-05-07T14:38:59Z", "type": "commit"}, {"oid": "6e9094a2460f071a40c5c6b8f381bf9b5b6e86ec", "url": "https://github.com/kframework/k/commit/6e9094a2460f071a40c5c6b8f381bf9b5b6e86ec", "message": "fix relative path", "committedDate": "2020-05-07T15:09:12Z", "type": "commit"}, {"oid": "8d4b4e2b03dd90c1607467d739f8e2f029955fcb", "url": "https://github.com/kframework/k/commit/8d4b4e2b03dd90c1607467d739f8e2f029955fcb", "message": "remove some dead code", "committedDate": "2020-05-07T15:33:19Z", "type": "commit"}, {"oid": "f9652bbe34a58426897abec7ac380945447b9cfe", "url": "https://github.com/kframework/k/commit/f9652bbe34a58426897abec7ac380945447b9cfe", "message": "add StringUtil functions to split attribute values", "committedDate": "2020-05-07T15:33:26Z", "type": "commit"}, {"oid": "7a23302c6ae912104f05b37e7fecdef236b2aefd", "url": "https://github.com/kframework/k/commit/7a23302c6ae912104f05b37e7fecdef236b2aefd", "message": "use StringUtil functions to split parser attribute", "committedDate": "2020-05-07T15:33:41Z", "type": "commit"}, {"oid": "4accfc905b235b08198b1e30e63215eefb281945", "url": "https://github.com/kframework/k/commit/4accfc905b235b08198b1e30e63215eefb281945", "message": "Update pending-documentation.md\n\nCo-authored-by: Everett Hildenbrandt <everett.hildenbrandt@gmail.com>", "committedDate": "2020-05-08T16:40:11Z", "type": "commit"}, {"oid": "0c09d5e0f7a1bab6fc65efbbc46e07759265375f", "url": "https://github.com/kframework/k/commit/0c09d5e0f7a1bab6fc65efbbc46e07759265375f", "message": "pending-documentation: formatting", "committedDate": "2020-05-10T09:13:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxNTMzNA==", "url": "https://github.com/kframework/k/pull/1259#discussion_r422615334", "bodyText": "I know we went over this, but if you can look again and see if this is re-usable in the places where we are doing this type of splitting, that would be good. I'm going to approve anyway.", "author": "ehildenb", "createdAt": "2020-05-10T09:13:48Z", "path": "kore/src/main/java/org/kframework/utils/StringUtil.java", "diffHunk": "@@ -822,4 +699,22 @@ public static String decodeKoreString(String encoded) {\n         }\n         return encoded;\n     }\n+\n+    public static String[] splitOneDimensionalAtt(String att) {\n+        String[] splitted = att.trim().split(\",\");\n+        for (int i = 0; i < splitted.length; i++) {\n+            splitted[i] = splitted[i].trim();\n+        }\n+        return splitted;\n+    }\n+\n+    public static String[][] splitTwoDimensionalAtt(String att) {", "originalCommit": "0c09d5e0f7a1bab6fc65efbbc46e07759265375f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d73b96a7635f12fb923ea6da94e4d5bd3b142c74", "url": "https://github.com/kframework/k/commit/d73b96a7635f12fb923ea6da94e4d5bd3b142c74", "message": "Merge branch 'master' into parser4", "committedDate": "2020-05-11T17:22:11Z", "type": "commit"}]}