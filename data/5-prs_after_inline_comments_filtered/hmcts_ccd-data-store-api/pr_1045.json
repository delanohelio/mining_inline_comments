{"pr_number": 1045, "pr_title": "RDM-9120 - Remove Case-Assigned Users and Roles", "pr_createdAt": "2020-08-05T13:40:38Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1045", "timeline": [{"oid": "ab9e205b095960808fba687698d026f0f524ffb3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ab9e205b095960808fba687698d026f0f524ffb3", "message": "scenario 1 and 2 ok", "committedDate": "2020-08-05T12:59:26Z", "type": "commit"}, {"oid": "771b36c513ce9bb991b887e5feb0dd57e35b2d9f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/771b36c513ce9bb991b887e5feb0dd57e35b2d9f", "message": "RDM-9120 -  draft commit wip", "committedDate": "2020-08-05T13:20:22Z", "type": "commit"}, {"oid": "16d1c5eb7a8a1d5f64070182a407ad758c9b7d3c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/16d1c5eb7a8a1d5f64070182a407ad758c9b7d3c", "message": "3 reviewed", "committedDate": "2020-08-05T13:23:14Z", "type": "commit"}, {"oid": "dff55d835a37e571c8e81bd3ea13f3537c4e6d2b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/dff55d835a37e571c8e81bd3ea13f3537c4e6d2b", "message": "Merge branch 'RDM-9120' of git@github.com:hmcts/ccd-data-store-api.git into RDM-9120", "committedDate": "2020-08-05T13:23:47Z", "type": "commit"}, {"oid": "6223c3758390f0ead4060273c3abe3dd48fb1de0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6223c3758390f0ead4060273c3abe3dd48fb1de0", "message": "reviewed and refined all remaining scenarios", "committedDate": "2020-08-05T14:21:32Z", "type": "forcePushed"}, {"oid": "e57f33237692f427ea6e010329c682fb946d5d2b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e57f33237692f427ea6e010329c682fb946d5d2b", "message": "correct the folder name", "committedDate": "2020-08-05T14:24:37Z", "type": "commit"}, {"oid": "a675040306c9a86297f50f159f5f5d4fa215657d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a675040306c9a86297f50f159f5f5d4fa215657d", "message": "RDM-9120 -  draft commit wip", "committedDate": "2020-08-05T14:24:37Z", "type": "commit"}, {"oid": "dbe27eb6dfa2dff09311ddc90706e304c035ed3f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/dbe27eb6dfa2dff09311ddc90706e304c035ed3f", "message": "organised scenario texts and made quick corrections/refinements", "committedDate": "2020-08-05T14:24:37Z", "type": "commit"}, {"oid": "6036d949e736790a5986a967e89f5807fbffd2e9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6036d949e736790a5986a967e89f5807fbffd2e9", "message": "reviewed and refined all remaining scenarios", "committedDate": "2020-08-05T14:24:37Z", "type": "commit"}, {"oid": "6036d949e736790a5986a967e89f5807fbffd2e9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6036d949e736790a5986a967e89f5807fbffd2e9", "message": "reviewed and refined all remaining scenarios", "committedDate": "2020-08-05T14:24:37Z", "type": "forcePushed"}, {"oid": "3afb00295a4e5b96983393823dab59ee73780d44", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3afb00295a4e5b96983393823dab59ee73780d44", "message": "Merge branch 'RDM-8842' into RDM-9120", "committedDate": "2020-08-06T10:14:19Z", "type": "commit"}, {"oid": "5af62fc9a06ac5996ca571b1ddc96a5017efc6f3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5af62fc9a06ac5996ca571b1ddc96a5017efc6f3", "message": "5 scenarios from jira ticket with minor tweaks and formatting", "committedDate": "2020-08-07T09:09:52Z", "type": "forcePushed"}, {"oid": "4678baf4afa5cf455715970c6d42b12a65240239", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4678baf4afa5cf455715970c6d42b12a65240239", "message": "5 scenarios from jira ticket with minor tweaks and formatting", "committedDate": "2020-08-07T09:11:13Z", "type": "commit"}, {"oid": "4678baf4afa5cf455715970c6d42b12a65240239", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4678baf4afa5cf455715970c6d42b12a65240239", "message": "5 scenarios from jira ticket with minor tweaks and formatting", "committedDate": "2020-08-07T09:11:13Z", "type": "forcePushed"}, {"oid": "6679b1451268a0a87be905b89f824f33ec99413d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6679b1451268a0a87be905b89f824f33ec99413d", "message": "reorder scenarios", "committedDate": "2020-08-07T12:34:46Z", "type": "commit"}, {"oid": "1c486b2df877c0fd8591e903c8e3f938f43800cf", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1c486b2df877c0fd8591e903c8e3f938f43800cf", "message": "RDM-9120 -  minor refactoring for remove case user role", "committedDate": "2020-08-07T13:59:53Z", "type": "commit"}, {"oid": "b63f23dc109a653edbe7fb95456fc1a1f6025f32", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b63f23dc109a653edbe7fb95456fc1a1f6025f32", "message": "RDM-9120 -  first happy path FTA", "committedDate": "2020-08-07T14:02:33Z", "type": "commit"}, {"oid": "f4ddcb9588a1d159898a278eaeb57482a0963df8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f4ddcb9588a1d159898a278eaeb57482a0963df8", "message": "RDM-9120 -  first happy path FTA", "committedDate": "2020-08-07T14:53:00Z", "type": "commit"}, {"oid": "c576dca5de1ee779dde20febd5ec7044bdbb53ea", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c576dca5de1ee779dde20febd5ec7044bdbb53ea", "message": "RDM-9120 -  unit tests", "committedDate": "2020-08-10T10:46:55Z", "type": "commit"}, {"oid": "f4d6ec3d218340b36b95db0d8cacfa1580e87c5e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f4d6ec3d218340b36b95db0d8cacfa1580e87c5e", "message": "RDM-9120 -  feature file update as per discussion", "committedDate": "2020-08-10T15:19:34Z", "type": "commit"}, {"oid": "87af06b4a21209b0cc7396be8c997bd13b391fa5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/87af06b4a21209b0cc7396be8c997bd13b391fa5", "message": "RDM-9120 - check-style fixes", "committedDate": "2020-08-10T15:47:52Z", "type": "commit"}, {"oid": "8f4cc610fb6de0c5bf10716647700e7923be1c92", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8f4cc610fb6de0c5bf10716647700e7923be1c92", "message": "RDM-9120 - added FTA for one more happy path", "committedDate": "2020-08-11T08:39:25Z", "type": "commit"}, {"oid": "2ba3ccc92b40ef889902ac627ced7cf3f976b87f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2ba3ccc92b40ef889902ac627ced7cf3f976b87f", "message": "RDM-9120 - removed local changes", "committedDate": "2020-08-11T08:40:36Z", "type": "commit"}, {"oid": "00fb455bf5d5b1d69ac4f3fbd33f9ddcc84ca136", "url": "https://github.com/hmcts/ccd-data-store-api/commit/00fb455bf5d5b1d69ac4f3fbd33f9ddcc84ca136", "message": "RDM-9120 - Added S-111.3 FTA negative scenario", "committedDate": "2020-08-11T11:32:01Z", "type": "commit"}, {"oid": "004351aa237521a906400ae3a75fd46b1a7f15ed", "url": "https://github.com/hmcts/ccd-data-store-api/commit/004351aa237521a906400ae3a75fd46b1a7f15ed", "message": "RDM-9120 - Remove local tag used for testing", "committedDate": "2020-08-11T11:34:56Z", "type": "commit"}, {"oid": "3533e539e317b9682e719aacd5cb0e6ded3e79a1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3533e539e317b9682e719aacd5cb0e6ded3e79a1", "message": "RDM-9120 - scenarios added for malformed/missing parameters for remove case operation", "committedDate": "2020-08-11T13:54:15Z", "type": "commit"}, {"oid": "0799010a1a41a02dd6e7a2d8f93697eba4fc4be7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0799010a1a41a02dd6e7a2d8f93697eba4fc4be7", "message": "RDM-9120 - scenarios added for missing/empty case_users list for remove case operation", "committedDate": "2020-08-11T15:35:54Z", "type": "commit"}, {"oid": "ee3199b85b2774753141a7e9f669619a279d19ea", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ee3199b85b2774753141a7e9f669619a279d19ea", "message": "RDM-9120 - S111.13 wip", "committedDate": "2020-08-11T17:20:04Z", "type": "commit"}, {"oid": "b59f76545ed4403ace6829b9a8b369bc96ff2dab", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b59f76545ed4403ace6829b9a8b369bc96ff2dab", "message": "RDM-9120 - just method name change", "committedDate": "2020-08-12T07:23:15Z", "type": "commit"}, {"oid": "bc30126e5b7050e287f2473f39dd301fc06b453b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bc30126e5b7050e287f2473f39dd301fc06b453b", "message": "Merge remote-tracking branch 'origin/post-19.1-cleanup' into RDM-9120", "committedDate": "2020-08-12T09:00:27Z", "type": "commit"}, {"oid": "10c0f5e21c23b85f416e7949d5e7699d276471cd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/10c0f5e21c23b85f416e7949d5e7699d276471cd", "message": "RDM-9120 - Added S-111.12 FTA negative scenario", "committedDate": "2020-08-12T10:15:50Z", "type": "commit"}, {"oid": "f2901a8345dcd5d241e6219407e53c438d91914f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f2901a8345dcd5d241e6219407e53c438d91914f", "message": "RDM-9120 - S-111.13 FTA test", "committedDate": "2020-08-12T10:39:26Z", "type": "commit"}, {"oid": "7ad2eaa5e297df1695c77999e5b80e5b8162dbee", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7ad2eaa5e297df1695c77999e5b80e5b8162dbee", "message": "removed local tag change", "committedDate": "2020-08-12T10:40:31Z", "type": "commit"}, {"oid": "970efe2663712793d17ca2cccfdcba90b4f68557", "url": "https://github.com/hmcts/ccd-data-store-api/commit/970efe2663712793d17ca2cccfdcba90b4f68557", "message": "RDM-9120 - References to S-111.3, corrected to S-111.13", "committedDate": "2020-08-12T11:27:08Z", "type": "commit"}, {"oid": "d1bf4c98ddd76927eee3c13bea0ef4f12e669943", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d1bf4c98ddd76927eee3c13bea0ef4f12e669943", "message": "Counters logic for remove case-user-role scenario", "committedDate": "2020-08-13T08:45:47Z", "type": "commit"}, {"oid": "50544bc427895a24ea7f6922f5ac35d02d42c6df", "url": "https://github.com/hmcts/ccd-data-store-api/commit/50544bc427895a24ea7f6922f5ac35d02d42c6df", "message": "RDM-9120 - Added S-111.14 FTA negative scenario", "committedDate": "2020-08-13T09:53:17Z", "type": "commit"}, {"oid": "9e33174cfce1b3260a37b85ae6b351d9e2963471", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9e33174cfce1b3260a37b85ae6b351d9e2963471", "message": "RDM-9120 -Removed S-111.17 as behaviour is tested in S-111.14", "committedDate": "2020-08-13T09:55:40Z", "type": "commit"}, {"oid": "efab433c9244c404efb9a129a8ceae98b22e17f2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/efab433c9244c404efb9a129a8ceae98b22e17f2", "message": "updated counters logic based on flag", "committedDate": "2020-08-13T11:37:10Z", "type": "commit"}, {"oid": "c2a8db744614e9f421313d5002369964db033b67", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c2a8db744614e9f421313d5002369964db033b67", "message": "RDM-9120 - Added S-111.16 FTA negative scenario", "committedDate": "2020-08-13T13:28:59Z", "type": "commit"}, {"oid": "3881c0119c12c035a21adca0278bb66d84ec8066", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3881c0119c12c035a21adca0278bb66d84ec8066", "message": "RDM-9120 - remove IT tests", "committedDate": "2020-08-13T21:53:05Z", "type": "commit"}, {"oid": "b7b50c12b4b9d9c31e819b417bf4ed67977f8675", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b7b50c12b4b9d9c31e819b417bf4ed67977f8675", "message": "RDM-9120 - filtering case-user-roles which are not exists in the database", "committedDate": "2020-08-14T08:13:28Z", "type": "commit"}, {"oid": "c3be448eab86ea67ce34d461fd724cab9b1c018f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c3be448eab86ea67ce34d461fd724cab9b1c018f", "message": "RDM-9120 - Added S-111.7 FTA negative scenario", "committedDate": "2020-08-14T10:08:12Z", "type": "commit"}, {"oid": "193b8686a53be086f564102382272f3905c8aafb", "url": "https://github.com/hmcts/ccd-data-store-api/commit/193b8686a53be086f564102382272f3905c8aafb", "message": "Merge remote-tracking branch 'origin/RDM-9120' into RDM-9120", "committedDate": "2020-08-14T10:08:51Z", "type": "commit"}, {"oid": "2fce7edf8893e1dc18fdbf55963c5f2bf96d40f3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2fce7edf8893e1dc18fdbf55963c5f2bf96d40f3", "message": "RDM-9120 - V2 - filtering case-user-roles which are not exists in the database", "committedDate": "2020-08-14T10:10:17Z", "type": "commit"}, {"oid": "0c85717060f0f1101e63eb489259ca25453637b7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0c85717060f0f1101e63eb489259ca25453637b7", "message": "RDM-9120 - minor tweaks", "committedDate": "2020-08-14T10:41:12Z", "type": "commit"}, {"oid": "ec73ae2fec2ad5bc7f03a9e6ca6cc0ff862ca90f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ec73ae2fec2ad5bc7f03a9e6ca6cc0ff862ca90f", "message": "Merge branch 'develop' into RDM-9120", "committedDate": "2020-08-14T10:45:00Z", "type": "commit"}, {"oid": "7872734413140356950891b10e5a0658076daee1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7872734413140356950891b10e5a0658076daee1", "message": "RDM-9120 - Added S-111.15 FTA negative scenario", "committedDate": "2020-08-14T11:13:48Z", "type": "commit"}, {"oid": "6d5b2ab636e4f372bedec7d2e2715e6f3723f3ed", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6d5b2ab636e4f372bedec7d2e2715e6f3723f3ed", "message": "Merge remote-tracking branch 'origin/RDM-9120' into RDM-9120", "committedDate": "2020-08-14T11:14:00Z", "type": "commit"}, {"oid": "cd735a107a99a7493b7eb5235235b26edabd7f02", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cd735a107a99a7493b7eb5235235b26edabd7f02", "message": "RDM-9120 - check-style fix", "committedDate": "2020-08-14T11:14:52Z", "type": "commit"}, {"oid": "bf63f9571c9c2243697044c44efe73eafe88c909", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bf63f9571c9c2243697044c44efe73eafe88c909", "message": "RDM-9120 - remove case user roles unit tests", "committedDate": "2020-08-14T12:29:04Z", "type": "commit"}, {"oid": "3b086fcaa417e82db2bf9d639e1f89e69825eeb2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3b086fcaa417e82db2bf9d639e1f89e69825eeb2", "message": "RDM-9120 - test config fix", "committedDate": "2020-08-14T12:35:12Z", "type": "commit"}, {"oid": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/42f5069b125e6f8b6a9acc169195d08614de7ff1", "message": "RDM-9120 - just trying PRD call with Ola user", "committedDate": "2020-08-14T13:35:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwOTU5NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471409594", "bodyText": "One or both of these functions should to be renamed as :\n\nfilterUnknownCauRoles : is filtering OUT unknown CaseRoles: i.e. returns a list EXCLUDING the unknown\nfilterExistingCauRoles: is filtering ON existing CaseRoles: i.e. returns a list containing ONLY pre-existing CaseRoles", "author": "mattnayler", "createdAt": "2020-08-17T11:15:46Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -106,11 +108,74 @@ public void addCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUser\n \n         newUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n             orgNewUserCountMap.forEach((organisationId, newUserCount) ->\n-                supplementaryDataRepository.incrementSupplementaryData(caseReference, \"orgs_assigned_users.\" + organisationId, newUserCount)\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference, ORGS_ASSIGNED_USERS_PAH + organisationId, newUserCount)\n             )\n         );\n     }\n \n+    @Transactional\n+    public void removeCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        // Ignore case user role mappings that are NOT exist in the database silently. Also they shouldn't effect counters.\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> filteredCauRolesByCaseId = filterUnknownCauRoles(cauRolesByCaseId);\n+\n+        filteredCauRolesByCaseId.forEach((caseId, requestedAssignments) ->\n+            requestedAssignments.forEach(requestedAssignment ->\n+                caseUserRepository.revokeAccess(caseId, requestedAssignment.getUserId(), requestedAssignment.getCaseRole())\n+            )\n+        );\n+\n+        // determine counters after removal of requested mappings so that same function can be re-used (i.e user still has an association to a case).\n+        Map<String, Map<String, Long>> removeUserCounts = getUserCountByCaseAndOrganisation(filteredCauRolesByCaseId);\n+\n+        removeUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n+            orgNewUserCountMap.forEach((organisationId, removeUserCount) ->\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference,\n+                    ORGS_ASSIGNED_USERS_PAH + organisationId, Math.negateExact(removeUserCount))\n+            )\n+        );\n+    }\n+\n+    private Map<Long, List<CaseAssignedUserRoleWithOrganisation>> filterUnknownCauRoles(\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId) {\n+\n+        List<Long> caseIds = new ArrayList<>(cauRolesByCaseId.keySet());\n+        List<String> userIds = getUserIds(cauRolesByCaseId);\n+\n+        // find existing Case-User relationships for all the cases + users found\n+        Map<Long, List<CaseUserEntity>> existingCaseUserRolesByCaseId =\n+            caseUserRepository.findCaseUserRoles(caseIds, userIds).stream()\n+                .collect(Collectors.groupingBy(\n+                    caseUserEntity -> caseUserEntity.getCasePrimaryKey().getCaseDataId(),\n+                    Collectors.toList()\n+                ));\n+\n+        return cauRolesByCaseId.entrySet().stream()\n+            .collect(Collectors.toMap(Map.Entry::getKey,\n+                entry -> filterExistingCauRoles(entry.getValue(), existingCaseUserRolesByCaseId.getOrDefault(entry.getKey(), new ArrayList<>()))));\n+    }\n+\n+    private List<CaseAssignedUserRoleWithOrganisation> filterExistingCauRoles(\n+        List<CaseAssignedUserRoleWithOrganisation> inputCauRoles,\n+        List<CaseUserEntity> existingCauRoles) {\n+        return inputCauRoles.stream()\n+            .filter(cauRole -> existingCauRoles.stream()\n+                .anyMatch(entity -> entity.getCasePrimaryKey().getCaseRole().equalsIgnoreCase(cauRole.getCaseRole())\n+                    && entity.getCasePrimaryKey().getUserId().equalsIgnoreCase(cauRole.getUserId())))\n+            .collect(Collectors.toList());\n+    }", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4NjU3OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471486579", "bodyText": "done", "author": "smathangi", "createdAt": "2020-08-17T13:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwOTU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMjA1MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471412051", "bodyText": "If the data types match(?): should this function also be called from inside  getUserCountByCaseAndOrganisation as a replacement for lines 234-239: i.e. the bit with the comment // get distinct list of user ids", "author": "mattnayler", "createdAt": "2020-08-17T11:21:00Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -106,11 +108,74 @@ public void addCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUser\n \n         newUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n             orgNewUserCountMap.forEach((organisationId, newUserCount) ->\n-                supplementaryDataRepository.incrementSupplementaryData(caseReference, \"orgs_assigned_users.\" + organisationId, newUserCount)\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference, ORGS_ASSIGNED_USERS_PAH + organisationId, newUserCount)\n             )\n         );\n     }\n \n+    @Transactional\n+    public void removeCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        // Ignore case user role mappings that are NOT exist in the database silently. Also they shouldn't effect counters.\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> filteredCauRolesByCaseId = filterUnknownCauRoles(cauRolesByCaseId);\n+\n+        filteredCauRolesByCaseId.forEach((caseId, requestedAssignments) ->\n+            requestedAssignments.forEach(requestedAssignment ->\n+                caseUserRepository.revokeAccess(caseId, requestedAssignment.getUserId(), requestedAssignment.getCaseRole())\n+            )\n+        );\n+\n+        // determine counters after removal of requested mappings so that same function can be re-used (i.e user still has an association to a case).\n+        Map<String, Map<String, Long>> removeUserCounts = getUserCountByCaseAndOrganisation(filteredCauRolesByCaseId);\n+\n+        removeUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n+            orgNewUserCountMap.forEach((organisationId, removeUserCount) ->\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference,\n+                    ORGS_ASSIGNED_USERS_PAH + organisationId, Math.negateExact(removeUserCount))\n+            )\n+        );\n+    }\n+\n+    private Map<Long, List<CaseAssignedUserRoleWithOrganisation>> filterUnknownCauRoles(\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId) {\n+\n+        List<Long> caseIds = new ArrayList<>(cauRolesByCaseId.keySet());\n+        List<String> userIds = getUserIds(cauRolesByCaseId);\n+\n+        // find existing Case-User relationships for all the cases + users found\n+        Map<Long, List<CaseUserEntity>> existingCaseUserRolesByCaseId =\n+            caseUserRepository.findCaseUserRoles(caseIds, userIds).stream()\n+                .collect(Collectors.groupingBy(\n+                    caseUserEntity -> caseUserEntity.getCasePrimaryKey().getCaseDataId(),\n+                    Collectors.toList()\n+                ));\n+\n+        return cauRolesByCaseId.entrySet().stream()\n+            .collect(Collectors.toMap(Map.Entry::getKey,\n+                entry -> filterExistingCauRoles(entry.getValue(), existingCaseUserRolesByCaseId.getOrDefault(entry.getKey(), new ArrayList<>()))));\n+    }\n+\n+    private List<CaseAssignedUserRoleWithOrganisation> filterExistingCauRoles(\n+        List<CaseAssignedUserRoleWithOrganisation> inputCauRoles,\n+        List<CaseUserEntity> existingCauRoles) {\n+        return inputCauRoles.stream()\n+            .filter(cauRole -> existingCauRoles.stream()\n+                .anyMatch(entity -> entity.getCasePrimaryKey().getCaseRole().equalsIgnoreCase(cauRole.getCaseRole())\n+                    && entity.getCasePrimaryKey().getUserId().equalsIgnoreCase(cauRole.getUserId())))\n+            .collect(Collectors.toList());\n+    }\n+\n+    private List<String> getUserIds(Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId) {\n+        return cauRolesByCaseId.values().stream()\n+            .map(requestedAssignments -> requestedAssignments.stream()\n+                .map(CaseAssignedUserRoleWithOrganisation::getUserId).collect(Collectors.toList()))\n+            .flatMap(List::stream)\n+            .distinct()\n+            .collect(Collectors.toList());\n+    }", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4NjUwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471486503", "bodyText": "done", "author": "smathangi", "createdAt": "2020-08-17T13:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMjA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNDY3OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471414679", "bodyText": "This code has inherited an unexpected change in order of the Case-User-Roles: i.e. parameter is defined as UserCaseRoles. Should this be renamed?  See also lines 162/163.", "author": "mattnayler", "createdAt": "2020-08-17T11:26:39Z", "path": "src/main/java/uk/gov/hmcts/ccd/ApplicationParams.java", "diffHunk": "@@ -17,8 +17,8 @@\n @Singleton\n public class ApplicationParams {\n \n-    @Value(\"#{'${ccd.s2s-authorised.services.add_case_user_roles}'.split(',')}\")\n-    private List<String> authorisedServicesForAddUserCaseRoles;\n+    @Value(\"#{'${ccd.s2s-authorised.services.case_user_roles}'.split(',')}\")\n+    private List<String> authorisedServicesForUserCaseRoles;", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4NjQ0MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471486441", "bodyText": "done", "author": "smathangi", "createdAt": "2020-08-17T13:41:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNDY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNjUxNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471416516", "bodyText": "Cut 'n' paste typo.  Rename so it reference Remove rather than Add.", "author": "mattnayler", "createdAt": "2020-08-17T11:30:39Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/external/controller/CaseAssignedUserRolesControllerTest.java", "diffHunk": "@@ -434,6 +435,259 @@ void getCaseUserRoles_shouldGetResponseWhenCaseIdsPassed() {\n \n     }\n \n+    @Nested\n+    @DisplayName(\"DELETE /case-users\")\n+    class RemoveCaseUserRoles {\n+\n+        @BeforeEach\n+        void setUp() {\n+            when(applicationParams.getAuthorisedServicesForUserCaseRoles()).thenReturn(List.of(ADD_SERVICE_GOOD));\n+            doReturn(ADD_SERVICE_GOOD).when(securityUtils).getServiceNameFromS2SToken(CLIENT_S2S_TOKEN_GOOD);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidSingleGoodCaseUserRoleSupplied() {", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNjY2NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471416664", "bodyText": "Cut 'n' paste typo.  Rename so it reference Remove rather than Add.", "author": "mattnayler", "createdAt": "2020-08-17T11:30:56Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/external/controller/CaseAssignedUserRolesControllerTest.java", "diffHunk": "@@ -434,6 +435,259 @@ void getCaseUserRoles_shouldGetResponseWhenCaseIdsPassed() {\n \n     }\n \n+    @Nested\n+    @DisplayName(\"DELETE /case-users\")\n+    class RemoveCaseUserRoles {\n+\n+        @BeforeEach\n+        void setUp() {\n+            when(applicationParams.getAuthorisedServicesForUserCaseRoles()).thenReturn(List.of(ADD_SERVICE_GOOD));\n+            doReturn(ADD_SERVICE_GOOD).when(securityUtils).getServiceNameFromS2SToken(CLIENT_S2S_TOKEN_GOOD);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidSingleGoodCaseUserRoleSupplied() {\n+            // ARRANGE\n+            List<CaseAssignedUserRoleWithOrganisation> caseUserRoles = Lists.newArrayList(\n+                    new CaseAssignedUserRoleWithOrganisation(CASE_ID_GOOD, USER_ID_1, CASE_ROLE_GOOD)\n+            );\n+\n+            CaseAssignedUserRolesRequest request = new CaseAssignedUserRolesRequest(caseUserRoles);\n+\n+            // ACT\n+            ResponseEntity<CaseAssignedUserRolesResponse> response =\n+                    controller.removeCaseUserRoles(CLIENT_S2S_TOKEN_GOOD, request);\n+\n+            // ASSERT\n+            assertNotNull(response);\n+            assertEquals(HttpStatus.OK, response.getStatusCode());\n+            assertNotNull(response.getBody());\n+            assertEquals(REMOVE_SUCCESS_MESSAGE, response.getBody().getStatus());\n+            verify(caseAssignedUserRolesOperation, times(1)).removeCaseUserRoles(caseUserRoles);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidSingleGoodCaseUserRoleSupplied_withOrganisation() {", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNjg0OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471416848", "bodyText": "Cut 'n' paste typo.  Rename so it reference Remove rather than Add.", "author": "mattnayler", "createdAt": "2020-08-17T11:31:20Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/external/controller/CaseAssignedUserRolesControllerTest.java", "diffHunk": "@@ -434,6 +435,259 @@ void getCaseUserRoles_shouldGetResponseWhenCaseIdsPassed() {\n \n     }\n \n+    @Nested\n+    @DisplayName(\"DELETE /case-users\")\n+    class RemoveCaseUserRoles {\n+\n+        @BeforeEach\n+        void setUp() {\n+            when(applicationParams.getAuthorisedServicesForUserCaseRoles()).thenReturn(List.of(ADD_SERVICE_GOOD));\n+            doReturn(ADD_SERVICE_GOOD).when(securityUtils).getServiceNameFromS2SToken(CLIENT_S2S_TOKEN_GOOD);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidSingleGoodCaseUserRoleSupplied() {\n+            // ARRANGE\n+            List<CaseAssignedUserRoleWithOrganisation> caseUserRoles = Lists.newArrayList(\n+                    new CaseAssignedUserRoleWithOrganisation(CASE_ID_GOOD, USER_ID_1, CASE_ROLE_GOOD)\n+            );\n+\n+            CaseAssignedUserRolesRequest request = new CaseAssignedUserRolesRequest(caseUserRoles);\n+\n+            // ACT\n+            ResponseEntity<CaseAssignedUserRolesResponse> response =\n+                    controller.removeCaseUserRoles(CLIENT_S2S_TOKEN_GOOD, request);\n+\n+            // ASSERT\n+            assertNotNull(response);\n+            assertEquals(HttpStatus.OK, response.getStatusCode());\n+            assertNotNull(response.getBody());\n+            assertEquals(REMOVE_SUCCESS_MESSAGE, response.getBody().getStatus());\n+            verify(caseAssignedUserRolesOperation, times(1)).removeCaseUserRoles(caseUserRoles);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidSingleGoodCaseUserRoleSupplied_withOrganisation() {\n+            // ARRANGE\n+            List<CaseAssignedUserRoleWithOrganisation> caseUserRoles = Lists.newArrayList(\n+                    new CaseAssignedUserRoleWithOrganisation(CASE_ID_GOOD, USER_ID_1, CASE_ROLE_GOOD,\n+                            ORGANISATION_ID_GOOD)\n+            );\n+\n+            CaseAssignedUserRolesRequest request = new CaseAssignedUserRolesRequest(caseUserRoles);\n+\n+            // ACT\n+            ResponseEntity<CaseAssignedUserRolesResponse> response =\n+                    controller.removeCaseUserRoles(CLIENT_S2S_TOKEN_GOOD, request);\n+\n+            // ASSERT\n+            assertNotNull(response);\n+            assertEquals(HttpStatus.OK, response.getStatusCode());\n+            assertNotNull(response.getBody());\n+            assertEquals(REMOVE_SUCCESS_MESSAGE, response.getBody().getStatus());\n+            verify(caseAssignedUserRolesOperation, times(1)).removeCaseUserRoles(caseUserRoles);\n+        }\n+\n+        @Test\n+        void removeCaseUserRoles_shouldCallAddWhenValidMultipleGoodCaseUserRolesSupplied() {", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxODY1Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471418652", "bodyText": "Cut 'n' paste typo.  This should be calling the Remove functions rather than Add.", "author": "mattnayler", "createdAt": "2020-08-17T11:35:11Z", "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/cauroles/DefaultCaseAssignedUserRolesOperationTest.java", "diffHunk": "@@ -54,6 +54,18 @@ void findCaseUserRoles() {\n         assertEquals(2, caseAssignedUserRoles.size());\n     }\n \n+    @Test\n+    void removeCaseUserRoles() {\n+        List<CaseAssignedUserRoleWithOrganisation> caseUserRoles = Lists.newArrayList(\n+                new CaseAssignedUserRoleWithOrganisation(),\n+                new CaseAssignedUserRoleWithOrganisation()\n+        );\n+\n+        caseAssignedUserRolesOperation.addCaseUserRoles(caseUserRoles);\n+\n+        verify(caseAccessOperation).addCaseUserRoles(caseUserRoles);", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyMzEwMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471423102", "bodyText": "Should this be renamed as AddCaseAssignedUserRolesControllerIT so it compliments RemoveCaseAssignedUserRolesControllerIT?", "author": "mattnayler", "createdAt": "2020-08-17T11:44:32Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/external/controller/CaseAssignedUserRolesControllerIT.java", "diffHunk": "@@ -1,174 +1,38 @@\n package uk.gov.hmcts.ccd.v2.external.controller;\n \n-import com.fasterxml.jackson.databind.DeserializationFeature;\n-import com.github.tomakehurst.wiremock.client.WireMock;\n import com.google.common.collect.Lists;\n-import org.apache.commons.lang3.StringUtils;\n import org.hamcrest.Matchers;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n-import org.mockito.ArgumentCaptor;\n-import org.mockito.Mock;\n-import org.mockito.MockitoAnnotations;\n-import org.springframework.beans.factory.annotation.Qualifier;\n-import org.springframework.boot.test.mock.mockito.SpyBean;\n import org.springframework.http.HttpHeaders;\n-import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.context.SecurityContext;\n-import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.test.context.jdbc.Sql;\n-import org.springframework.test.util.ReflectionTestUtils;\n-import org.springframework.test.web.servlet.MockMvc;\n import org.springframework.test.web.servlet.MvcResult;\n-import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n-import org.springframework.web.context.WebApplicationContext;\n-import uk.gov.hmcts.ccd.ApplicationParams;\n import uk.gov.hmcts.ccd.MockUtils;\n-import uk.gov.hmcts.ccd.WireMockBaseTest;\n-import uk.gov.hmcts.ccd.auditlog.AuditEntry;\n-import uk.gov.hmcts.ccd.auditlog.AuditOperationType;\n-import uk.gov.hmcts.ccd.auditlog.AuditRepository;\n import uk.gov.hmcts.ccd.data.SecurityUtils;\n-import uk.gov.hmcts.ccd.data.caseaccess.CaseUserRepository;\n-import uk.gov.hmcts.ccd.data.caseaccess.DefaultCaseUserRepository;\n-import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n import uk.gov.hmcts.ccd.domain.model.std.CaseAssignedUserRoleWithOrganisation;\n import uk.gov.hmcts.ccd.v2.V2;\n-import uk.gov.hmcts.ccd.v2.external.domain.AddCaseAssignedUserRolesRequest;\n-import uk.gov.hmcts.ccd.v2.external.domain.AddCaseAssignedUserRolesResponse;\n+import uk.gov.hmcts.ccd.v2.external.domain.CaseAssignedUserRolesRequest;\n+import uk.gov.hmcts.ccd.v2.external.domain.CaseAssignedUserRolesResponse;\n import uk.gov.hmcts.ccd.v2.external.resource.CaseAssignedUserRolesResource;\n \n-import javax.inject.Inject;\n-import java.io.IOException;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.stream.Collectors;\n \n-import static com.github.tomakehurst.wiremock.client.WireMock.okJson;\n-import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n-import static com.github.tomakehurst.wiremock.client.WireMock.urlMatching;\n import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.allOf;\n import static org.hamcrest.Matchers.hasItems;\n import static org.hamcrest.Matchers.hasProperty;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertAll;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.verify;\n-import static org.springframework.http.HttpHeaders.AUTHORIZATION;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n-import static uk.gov.hmcts.ccd.auditlog.aop.AuditContext.CASE_ID_SEPARATOR;\n-import static uk.gov.hmcts.ccd.data.SecurityUtils.SERVICE_AUTHORIZATION;\n import static uk.gov.hmcts.ccd.v2.V2.Error.OTHER_USER_CASE_ROLE_ACCESS_NOT_GRANTED;\n import static uk.gov.hmcts.ccd.v2.external.controller.CaseAssignedUserRolesController.ADD_SUCCESS_MESSAGE;\n \n-class CaseAssignedUserRolesControllerIT extends WireMockBaseTest {\n-\n-    private static final Long INVALID_CASE_ID = 222L;\n-\n-    private static final String AUTHORISED_ADD_SERVICE_1 = \"ADD_SERVICE_1\";\n-    private static final String AUTHORISED_ADD_SERVICE_2 = \"ADD_SERVICE_2\";\n-    private static final String UNAUTHORISED_ADD_SERVICE = \"UNAUTHORISED_ADD_SERVICE\";\n-\n-    private static final String CASE_ID_1 = \"7578590391163133\";\n-    private static final String CASE_ID_2 = \"6375837333991692\";\n-    private static final String CASE_IDS = CASE_ID_1 + \",\" + CASE_ID_2;\n-\n-    private static final String CASE_ID_EXTRA = \"1983927457663329\";\n-\n-    private static final String CASE_ROLE_1 = \"[case-role-1]\";\n-    private static final String CASE_ROLE_2 = \"[case-role-2]\";\n-    private static final String INVALID_CASE_ROLE = \"bad-role\";\n-\n-    private static final String USER_IDS_1 = \"89000\";\n-    private static final String USER_IDS_2 = \"89001\";\n-    private static final String USER_IDS_3 = \"89002\";\n-    private static final String USER_IDS = USER_IDS_1 + \",\" + USER_IDS_2;\n-\n-    private static final String INVALID_USER_IDS = USER_IDS_1 + \", ,\" + USER_IDS_2;\n-\n-    private static final String ORGANISATION_ID_1 = \"OrgA\";\n-    private static final String ORGANISATION_ID_2 = \"OrgB\";\n-    private static final String INVALID_ORGANISATION_ID = \"\";\n-\n-    private static final String ORGANISATION_ASSIGNED_USER_COUNTER_KEY = \"orgs_assigned_users\";\n-\n-    private final String caseworkerCaa = \"caseworker-caa\";\n-    private final String getCaseAssignedUserRoles = \"/case-users\";\n-    private final String postCaseAssignedUserRoles = \"/case-users\";\n-\n-    private static final String PARAM_CASE_IDS = \"case_ids\";\n-    private static final String PARAM_USER_IDS = \"user_ids\";\n-\n-    @Inject\n-    private ApplicationParams applicationParams;\n-\n-    @SpyBean @Inject\n-    private AuditRepository auditRepository;\n-\n-    @Mock\n-    private Authentication authentication;\n-\n-    @Mock\n-    private SecurityContext securityContext;\n-\n-    private MockMvc mockMvc;\n-\n-    @Inject @Qualifier(DefaultCaseUserRepository.QUALIFIER)\n-    private CaseUserRepository caseUserRepository;\n-\n-    @Inject @Qualifier(\"default\")\n-    private SupplementaryDataRepository supplementaryDataRepository;\n-\n-    @Inject\n-    private WebApplicationContext wac;\n-\n-    @BeforeEach\n-    void setUp() throws IOException {\n-        super.initMock();\n-        MockitoAnnotations.initMocks(this);\n-\n-        doReturn(authentication).when(securityContext).getAuthentication();\n-        SecurityContextHolder.setContext(securityContext);\n-\n-        MockUtils.setSecurityAuthorities(authentication, MockUtils.ROLE_CASEWORKER_PUBLIC);\n-\n-        ReflectionTestUtils.setField(\n-            applicationParams,\n-            \"authorisedServicesForAddUserCaseRoles\",\n-            Lists.newArrayList(AUTHORISED_ADD_SERVICE_1, AUTHORISED_ADD_SERVICE_2)\n-        );\n-        // disable suppression of audit logs\n-        ReflectionTestUtils.setField(\n-            applicationParams,\n-            \"auditLogIgnoreStatuses\",\n-            Lists.newArrayList()\n-        );\n-\n-        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n-        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\n-        String userJson = \"{\\n\"\n-            + \"          \\\"sub\\\": \\\"Cloud.Strife@test.com\\\",\\n\"\n-            + \"          \\\"uid\\\": \\\"89000\\\",\\n\"\n-            + \"          \\\"roles\\\": [\\n\"\n-            + \"            \\\"caseworker\\\",\\n\"\n-            + \"            \\\"caseworker-probate-public\\\"\\n\"\n-            + \"          ],\\n\"\n-            + \"          \\\"name\\\": \\\"Cloud Strife\\\"\\n\"\n-            + \"        }\";\n-        stubFor(WireMock.get(urlMatching(\"/o/userinfo\"))\n-            .willReturn(okJson(userJson).withStatus(200)));\n-    }\n+class CaseAssignedUserRolesControllerIT extends BaseCaseAssignedUserRolesControllerIT {", "originalCommit": "42f5069b125e6f8b6a9acc169195d08614de7ff1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwMDQ0MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471500441", "bodyText": "Original one has GET tests as well. Let me split that as well", "author": "smathangi", "createdAt": "2020-08-17T14:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyMzEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NTg5Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471565897", "bodyText": "Many thanks.", "author": "mattnayler", "createdAt": "2020-08-17T15:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyMzEwMg=="}], "type": "inlineReview"}, {"oid": "938d06c09fe78b3c168079e4005a1929ae23681e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/938d06c09fe78b3c168079e4005a1929ae23681e", "message": "RDM-9120 - review comments", "committedDate": "2020-08-17T13:50:21Z", "type": "commit"}, {"oid": "edb3323e1b24d55326112660f8a98767a0cf55ec", "url": "https://github.com/hmcts/ccd-data-store-api/commit/edb3323e1b24d55326112660f8a98767a0cf55ec", "message": "RDM-9120 - review comments", "committedDate": "2020-08-17T14:45:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzMTEwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1045#discussion_r471531103", "bodyText": "typo here?", "author": "MSancaktutar", "createdAt": "2020-08-17T14:48:11Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -36,6 +36,8 @@\n @Service\n public class CaseAccessOperation {\n \n+    public static final String ORGS_ASSIGNED_USERS_PAH = \"orgs_assigned_users.\";", "originalCommit": "938d06c09fe78b3c168079e4005a1929ae23681e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "52adf10e63dc32da5468d392b9a343ff8d29f5be", "url": "https://github.com/hmcts/ccd-data-store-api/commit/52adf10e63dc32da5468d392b9a343ff8d29f5be", "message": "RDM-9120 - typo fix", "committedDate": "2020-08-17T14:57:00Z", "type": "commit"}, {"oid": "f9115e777a48fbb386ffbade9f2ed079c1e9ea31", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f9115e777a48fbb386ffbade9f2ed079c1e9ea31", "message": "RDM-9120 - updated to reflect review comments in PR 1045", "committedDate": "2020-08-17T15:19:59Z", "type": "commit"}, {"oid": "249d6df3d6c9abed0b548636444fbfb829d5776d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/249d6df3d6c9abed0b548636444fbfb829d5776d", "message": "Merge remote-tracking branch 'origin/RDM-9120' into RDM-9120", "committedDate": "2020-08-17T15:21:31Z", "type": "commit"}, {"oid": "0314f6858187665b733624bfb43e73ee3512729b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0314f6858187665b733624bfb43e73ee3512729b", "message": "RDM-9120 - using PRD registered user 'Emma'", "committedDate": "2020-08-18T09:46:57Z", "type": "commit"}, {"oid": "c643f6bc21128f65505a1c5e23dfd615487d527c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c643f6bc21128f65505a1c5e23dfd615487d527c", "message": "RDM-9120 - minor cleanup and using user becky to get orgId from PRD", "committedDate": "2020-08-19T07:01:03Z", "type": "commit"}, {"oid": "1444e5dcc6a5e6db2ea37a3b62a02ef544a13974", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1444e5dcc6a5e6db2ea37a3b62a02ef544a13974", "message": "adjusted scenario wording", "committedDate": "2020-08-25T15:50:55Z", "type": "commit"}]}