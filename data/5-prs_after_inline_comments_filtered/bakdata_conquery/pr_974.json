{"pr_number": 974, "pr_title": "SlaveCommand polls for master instead of trying once then stopping wh\u2026", "pr_createdAt": "2020-01-03T17:27:16Z", "pr_url": "https://github.com/bakdata/conquery/pull/974", "timeline": [{"oid": "ee2b1981a170087e83f08b4a225298178a1bf100", "url": "https://github.com/bakdata/conquery/commit/ee2b1981a170087e83f08b4a225298178a1bf100", "message": "SlaveCommand polls for master instead of trying once then stopping when no connection is available.", "committedDate": "2020-01-03T16:13:32Z", "type": "commit"}, {"oid": "2d3b9ba2d4b815a0afd57bfe56e727ed620f4b0f", "url": "https://github.com/bakdata/conquery/commit/2d3b9ba2d4b815a0afd57bfe56e727ed620f4b0f", "message": "braces and formatting fixes", "committedDate": "2020-01-07T14:32:42Z", "type": "commit"}, {"oid": "2cb6d3c7e759d70649d6e606a3c88d4c77ae42f5", "url": "https://github.com/bakdata/conquery/commit/2cb6d3c7e759d70649d6e606a3c88d4c77ae42f5", "message": "Update SlaveCommand.java", "committedDate": "2020-01-07T16:05:07Z", "type": "commit"}, {"oid": "d5f798025184bd99fd00f99cac4b4acd2f829075", "url": "https://github.com/bakdata/conquery/commit/d5f798025184bd99fd00f99cac4b4acd2f829075", "message": "Merge branch 'develop' into feature/slaves-poll-for-connection", "committedDate": "2020-01-08T08:43:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMjA1Nw==", "url": "https://github.com/bakdata/conquery/pull/974#discussion_r364112057", "bodyText": "Bitte noch ein Log schreiben, dass die verbindung erfolgreich war.", "author": "thoniTUB", "createdAt": "2020-01-08T08:32:00Z", "path": "backend/src/main/java/com/bakdata/conquery/commands/SlaveCommand.java", "diffHunk": "@@ -188,11 +188,22 @@ public void start() throws Exception {\n \t\twhile(true) {\n \t\t\ttry {\n \t\t\t\tlog.info(\"Trying to connect to {}\", address);\n+\n+\t\t\t\t// Try opening a connection (Note: This fails immediately instead of waiting a minute to try and connect)\n \t\t\t\tConnectFuture future = connector.connect(address);\n-\t\t\t\tfuture.awaitUninterruptibly(1, TimeUnit.MINUTES);\n \n-\t\t\t\tbreak;\n-\t\t\t} catch(RuntimeIoException e) {\n+\t\t\t\tfuture.awaitUninterruptibly();\n+\n+\t\t\t\tif(future.isConnected()){\n+\t\t\t\t\tbreak;", "originalCommit": "2cb6d3c7e759d70649d6e606a3c88d4c77ae42f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}