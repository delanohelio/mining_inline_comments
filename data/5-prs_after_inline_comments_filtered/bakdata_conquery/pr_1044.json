{"pr_number": 1044, "pr_title": "Conditions in Connectors", "pr_createdAt": "2020-02-18T16:33:39Z", "pr_url": "https://github.com/bakdata/conquery/pull/1044", "timeline": [{"oid": "d780a1750c34a0f81cf838e4f89fd2b5d43d337b", "url": "https://github.com/bakdata/conquery/commit/d780a1750c34a0f81cf838e4f89fd2b5d43d337b", "message": "Connectors have conditions now, allowing further simplification of imports", "committedDate": "2020-02-18T16:32:37Z", "type": "commit"}, {"oid": "ccec6b0b7bd5345e9faa63772229c0a1b0b84673", "url": "https://github.com/bakdata/conquery/commit/ccec6b0b7bd5345e9faa63772229c0a1b0b84673", "message": "Merge branch 'develop' into feature/connector-condition", "committedDate": "2020-02-18T16:53:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NTkwNg==", "url": "https://github.com/bakdata/conquery/pull/1044#discussion_r381875906", "bodyText": "Etwas generelle Doku w\u00e4re gut. Ich finde es nicht ersichtlich, was hier berechnet wird", "author": "thoniTUB", "createdAt": "2020-02-20T09:24:42Z", "path": "backend/src/main/java/com/bakdata/conquery/models/jobs/CalculateCBlocksJob.java", "diffHunk": "@@ -136,33 +136,37 @@ private void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, Calc\n \n \t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n \n+", "originalCommit": "ccec6b0b7bd5345e9faa63772229c0a1b0b84673", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dccc4b400e75271ca5ad36f7103c2d7611bd0b36", "url": "https://github.com/bakdata/conquery/commit/dccc4b400e75271ca5ad36f7103c2d7611bd0b36", "message": "refactoring and documentation", "committedDate": "2020-02-24T15:22:13Z", "type": "commit"}, {"oid": "33a7ff7f60bd3b5d322da41369fb93f8b8bdea09", "url": "https://github.com/bakdata/conquery/commit/33a7ff7f60bd3b5d322da41369fb93f8b8bdea09", "message": "Merge branch 'feature/connector-condition' of https://github.com/bakdata/conquery into feature/connector-condition", "committedDate": "2020-02-25T10:53:16Z", "type": "commit"}, {"oid": "6480e98349fe697b65b614c825733dc3d140f4c0", "url": "https://github.com/bakdata/conquery/commit/6480e98349fe697b65b614c825733dc3d140f4c0", "message": "made more meaningful test for concept condition", "committedDate": "2020-02-25T11:11:08Z", "type": "commit"}, {"oid": "d2f003d9d7f6d7054dd2fbfffc244efb5b81d103", "url": "https://github.com/bakdata/conquery/commit/d2f003d9d7f6d7054dd2fbfffc244efb5b81d103", "message": "fixed not having include column in test", "committedDate": "2020-02-25T12:31:51Z", "type": "commit"}, {"oid": "b2e9f00596d1c9c2b57c35b7a86b26e6cbce7df1", "url": "https://github.com/bakdata/conquery/commit/b2e9f00596d1c9c2b57c35b7a86b26e6cbce7df1", "message": "fixed not using test's own source files", "committedDate": "2020-02-25T13:21:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM4NQ==", "url": "https://github.com/bakdata/conquery/pull/1044#discussion_r383881385", "bodyText": "Ich sehe nur die statische Wildcard Typisierung, wird hier \u00fcberhaupt Generizit\u00e4t benutzt?", "author": "Priehn", "createdAt": "2020-02-25T13:36:27Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/tree/TreeChildPrefixIndex.java", "diffHunk": "@@ -47,7 +48,7 @@ private static boolean isPrefixMaintainigCondition(CTCondition cond) {\n \t\t\t\t;\n \t}\n \n-\tpublic static void putIndexInto(ConceptTreeNode root) {\n+\tpublic static void putIndexInto(ConceptTreeNode<?> root) {", "originalCommit": "b2e9f00596d1c9c2b57c35b7a86b26e6cbce7df1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MzI3Mg==", "url": "https://github.com/bakdata/conquery/pull/1044#discussion_r383883272", "bodyText": "Leider stecke ich nicht tief genug in der EVA um hier was beuteilen zu k\u00f6nnen aber ein Kommentar f\u00e4nde ich ganz hilfreich", "author": "Priehn", "createdAt": "2020-02-25T13:39:55Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/tree/TreeChildPrefixIndex.java", "diffHunk": "@@ -62,30 +63,33 @@ public static void putIndexInto(ConceptTreeNode root) {\n \n \t\t\tTreeChildPrefixIndex index = new TreeChildPrefixIndex();\n \n-\t\t\tList<ConceptTreeChild> treeChildrenOrig = new ArrayList<>();\n-\t\t\ttreeChildrenOrig.addAll(root.getChildren());\n-\n \t\t\t// collect all prefix children that are itself children of prefix nodes\n \t\t\tMap<String, ConceptTreeChild> gatheredPrefixChildren = new HashMap<>();\n \n-\t\t\tfor (int i = 0; i < treeChildrenOrig.size(); i++) {\n-\t\t\t\tConceptTreeChild child = treeChildrenOrig.get(i);\n+\t\t\tQueue<ConceptTreeChild> treeChildrenOrig = new ArrayDeque<>(root.getChildren());\n+\t\t\tConceptTreeChild child;\n+\n+\t\t\t// Iterate over all children that can be reached deterministically with prefixes\n+\t\t\twhile ((child = treeChildrenOrig.poll()) != null) {\n \t\t\t\tCTCondition condition = child.getCondition();\n \n-\t\t\t\tif(isPrefixMaintainigCondition(condition)) {\n-\t\t\t\t\ttreeChildrenOrig.addAll(child.getChildren());\n-\n-\t\t\t\t\tif (condition instanceof PrefixCondition) {\n-\t\t\t\t\t\tfor (String prefix : ((PrefixCondition) condition).getPrefixes()) {\n-\t\t\t\t\t\t\t// We are interested in the most specific child, therefore the deepest.\n-\t\t\t\t\t\t\tgatheredPrefixChildren.merge(prefix, child,\n-\t\t\t\t\t\t\t\t(newChild, oldChild) -> oldChild.getDepth() > newChild.getDepth() ? oldChild : newChild\n-\t\t\t\t\t\t\t);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\telse {\n+\t\t\t\t// If the Condition is not deterministic wrt to prefixes, we will not build an index over it, but start a new one from there.\n+\t\t\t\tif (!isPrefixMaintainigCondition(condition)) {\n \t\t\t\t\tputIndexInto(child);\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\ttreeChildrenOrig.addAll(child.getChildren());", "originalCommit": "b2e9f00596d1c9c2b57c35b7a86b26e6cbce7df1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aa99f1734473db74aaa451a39a05b33ed7e3ef96", "url": "https://github.com/bakdata/conquery/commit/aa99f1734473db74aaa451a39a05b33ed7e3ef96", "message": "Update CalculatedValue.java", "committedDate": "2020-03-02T12:19:16Z", "type": "commit"}, {"oid": "bb2d3431c31e82ad9f3472f53e36a5f49e5955ea", "url": "https://github.com/bakdata/conquery/commit/bb2d3431c31e82ad9f3472f53e36a5f49e5955ea", "message": "Merge branch 'develop' into feature/connector-condition", "committedDate": "2020-03-06T08:49:15Z", "type": "commit"}, {"oid": "62759e7c3114d6cc77084167c558624d73f9c053", "url": "https://github.com/bakdata/conquery/commit/62759e7c3114d6cc77084167c558624d73f9c053", "message": "Merge branch 'develop' into feature/connector-condition", "committedDate": "2020-03-16T11:42:10Z", "type": "commit"}, {"oid": "f18fac5b08187fc99895acf28087f4a322d72b10", "url": "https://github.com/bakdata/conquery/commit/f18fac5b08187fc99895acf28087f4a322d72b10", "message": "Merge branch 'develop' into feature/connector-condition", "committedDate": "2020-03-16T13:18:37Z", "type": "commit"}]}