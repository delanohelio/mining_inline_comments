{"pr_number": 911, "pr_title": "Layers view shortcut fixes", "pr_createdAt": "2020-12-08T04:52:46Z", "pr_url": "https://github.com/constellation-app/constellation/pull/911", "timeline": [{"oid": "dd35bdf45aa0cf3874a4b7d657e520a728bdd66f", "url": "https://github.com/constellation-app/constellation/commit/dd35bdf45aa0cf3874a4b7d657e520a728bdd66f", "message": "Version 1 of expression framework", "committedDate": "2020-08-06T02:37:39Z", "type": "commit"}, {"oid": "085e232f556cf4b29723dab4c6631151f608090c", "url": "https://github.com/constellation-app/constellation/commit/085e232f556cf4b29723dab4c6631151f608090c", "message": "Word based operators, parsing handles more edge cases", "committedDate": "2020-08-10T02:01:43Z", "type": "commit"}, {"oid": "e87040c1262ab3015fc8f52f5b9b9bdfd1fafeff", "url": "https://github.com/constellation-app/constellation/commit/e87040c1262ab3015fc8f52f5b9b9bdfd1fafeff", "message": "Merge remote-tracking branch 'origin/master' into expressions", "committedDate": "2020-08-10T02:06:36Z", "type": "commit"}, {"oid": "62c72f2fbf75ff76f184f2cf277fff1a34e80728", "url": "https://github.com/constellation-app/constellation/commit/62c72f2fbf75ff76f184f2cf277fff1a34e80728", "message": "Updated licence", "committedDate": "2020-08-11T03:05:10Z", "type": "commit"}, {"oid": "8a6b33eead10915e535f9832d092903aeed1d193", "url": "https://github.com/constellation-app/constellation/commit/8a6b33eead10915e535f9832d092903aeed1d193", "message": "Added help dependency back in to get working", "committedDate": "2020-08-13T01:02:19Z", "type": "commit"}, {"oid": "3315024330b92cb0240ea1e8a64074a7dd957677", "url": "https://github.com/constellation-app/constellation/commit/3315024330b92cb0240ea1e8a64074a7dd957677", "message": "Initial commit for expressions framework", "committedDate": "2020-08-17T13:51:49Z", "type": "commit"}, {"oid": "70885010fd556c47452ba4baf31033f229f68c4a", "url": "https://github.com/constellation-app/constellation/commit/70885010fd556c47452ba4baf31033f229f68c4a", "message": "Updated to expressions framework version 2", "committedDate": "2020-08-20T01:04:48Z", "type": "commit"}, {"oid": "fc63ba59225880e3688c943ff0c34194c7725732", "url": "https://github.com/constellation-app/constellation/commit/fc63ba59225880e3688c943ff0c34194c7725732", "message": "Added access registry", "committedDate": "2020-08-24T04:05:52Z", "type": "commit"}, {"oid": "b75e246785cb40cc2767da3046305d23dbdc9284", "url": "https://github.com/constellation-app/constellation/commit/b75e246785cb40cc2767da3046305d23dbdc9284", "message": "Merged master", "committedDate": "2020-08-24T04:10:20Z", "type": "commit"}, {"oid": "a95361812593ab77f746b3a3f9b914b2c2eb6682", "url": "https://github.com/constellation-app/constellation/commit/a95361812593ab77f746b3a3f9b914b2c2eb6682", "message": "Merge remote-tracking branch 'origin/master' into expressions_framework", "committedDate": "2020-09-01T01:48:19Z", "type": "commit"}, {"oid": "f8e0288b05b160016e66b0fad2f10e77752669b2", "url": "https://github.com/constellation-app/constellation/commit/f8e0288b05b160016e66b0fad2f10e77752669b2", "message": "Pull out functionality from storegraph", "committedDate": "2020-09-01T02:32:55Z", "type": "commit"}, {"oid": "a4d305834212385e32e4ad1dc68ae85fab93f688", "url": "https://github.com/constellation-app/constellation/commit/a4d305834212385e32e4ad1dc68ae85fab93f688", "message": "Merge branch 'expressions' into feature/layer-standalone", "committedDate": "2020-09-01T22:41:14Z", "type": "commit"}, {"oid": "092a3608979d37ec73a35f3d63f657414175a9c6", "url": "https://github.com/constellation-app/constellation/commit/092a3608979d37ec73a35f3d63f657414175a9c6", "message": "implement expression functionality", "committedDate": "2020-09-02T04:59:01Z", "type": "commit"}, {"oid": "120a5d6d540789d61ed384f6122147501e5b1d17", "url": "https://github.com/constellation-app/constellation/commit/120a5d6d540789d61ed384f6122147501e5b1d17", "message": "Dependencies update", "committedDate": "2020-09-02T05:15:32Z", "type": "commit"}, {"oid": "cfb1ad0e725465df459d250dd96e1397ab6088fb", "url": "https://github.com/constellation-app/constellation/commit/cfb1ad0e725465df459d250dd96e1397ab6088fb", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-02T06:00:16Z", "type": "commit"}, {"oid": "ee841db8f54d0069bb2ebfe6a4227666d9ab1f43", "url": "https://github.com/constellation-app/constellation/commit/ee841db8f54d0069bb2ebfe6a4227666d9ab1f43", "message": "Query class", "committedDate": "2020-09-02T06:27:32Z", "type": "commit"}, {"oid": "a93a1d533a05e8edfecc8f68f59d210ebacb45c9", "url": "https://github.com/constellation-app/constellation/commit/a93a1d533a05e8edfecc8f68f59d210ebacb45c9", "message": "BitmaskQuery", "committedDate": "2020-09-02T07:02:52Z", "type": "commit"}, {"oid": "c38a2857f76d1bd80788c5d17890722122ad0d48", "url": "https://github.com/constellation-app/constellation/commit/c38a2857f76d1bd80788c5d17890722122ad0d48", "message": "BitMaskQuery", "committedDate": "2020-09-02T23:42:33Z", "type": "commit"}, {"oid": "b8b5e3a977bc054b96103aa29aec9518218d4999", "url": "https://github.com/constellation-app/constellation/commit/b8b5e3a977bc054b96103aa29aec9518218d4999", "message": "Working BitMaskQuery Plugin", "committedDate": "2020-09-03T12:01:41Z", "type": "commit"}, {"oid": "77fe1fadc94f09fc12963ff8783433fc0f2c5404", "url": "https://github.com/constellation-app/constellation/commit/77fe1fadc94f09fc12963ff8783433fc0f2c5404", "message": "Fixed active queries bug", "committedDate": "2020-09-03T23:31:31Z", "type": "commit"}, {"oid": "b5cf8cb43d6a1e50dc47772ee43804554aac9e34", "url": "https://github.com/constellation-app/constellation/commit/b5cf8cb43d6a1e50dc47772ee43804554aac9e34", "message": "Removed conflicting code from StoreGraph", "committedDate": "2020-09-04T08:12:23Z", "type": "commit"}, {"oid": "f06972f7fd22feb373716873f6400c8de3bf6608", "url": "https://github.com/constellation-app/constellation/commit/f06972f7fd22feb373716873f6400c8de3bf6608", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-07T00:18:28Z", "type": "commit"}, {"oid": "ebc9d9f5a9b944146d43b727055d371255bb51a3", "url": "https://github.com/constellation-app/constellation/commit/ebc9d9f5a9b944146d43b727055d371255bb51a3", "message": "Fixed small bug in BitMaskQueryCollection", "committedDate": "2020-09-07T01:28:32Z", "type": "commit"}, {"oid": "e370508bd99b8347de276ee05ef5110439702155", "url": "https://github.com/constellation-app/constellation/commit/e370508bd99b8347de276ee05ef5110439702155", "message": "convert Layerdescription to Bitmaskquery\n\nmerge conflict and layers view switch to query", "committedDate": "2020-09-09T02:17:43Z", "type": "commit"}, {"oid": "a314eab8a0986956479b512dfa857adccffdff60", "url": "https://github.com/constellation-app/constellation/commit/a314eab8a0986956479b512dfa857adccffdff60", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-09T02:25:27Z", "type": "commit"}, {"oid": "281a2b82d12beecae37c6742e7acbb4d339ce32d", "url": "https://github.com/constellation-app/constellation/commit/281a2b82d12beecae37c6742e7acbb4d339ce32d", "message": "convert Layers View to use expressions", "committedDate": "2020-09-21T04:28:05Z", "type": "commit"}, {"oid": "3d2756ba418eb03a3a6476bc9a45ef273bb5321f", "url": "https://github.com/constellation-app/constellation/commit/3d2756ba418eb03a3a6476bc9a45ef273bb5321f", "message": "bugfixes", "committedDate": "2020-09-29T04:34:08Z", "type": "commit"}, {"oid": "6551f9407f66868afb400780ac441699f61e321d", "url": "https://github.com/constellation-app/constellation/commit/6551f9407f66868afb400780ac441699f61e321d", "message": "convert layers to query using expressions", "committedDate": "2020-10-01T01:15:13Z", "type": "commit"}, {"oid": "597897aa9ce2d8ad5d80671a84986b6b3e65639d", "url": "https://github.com/constellation-app/constellation/commit/597897aa9ce2d8ad5d80671a84986b6b3e65639d", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-10-01T01:15:55Z", "type": "commit"}, {"oid": "69a0602698bd5009f7075b78e6a392307fcdadbe", "url": "https://github.com/constellation-app/constellation/commit/69a0602698bd5009f7075b78e6a392307fcdadbe", "message": "resolve race condition for attribute listening", "committedDate": "2020-10-01T23:22:01Z", "type": "commit"}, {"oid": "ea5d5ce48ebf1e06d747e41ccf6f59656f79d415", "url": "https://github.com/constellation-app/constellation/commit/ea5d5ce48ebf1e06d747e41ccf6f59656f79d415", "message": "sonar bug fixes", "committedDate": "2020-10-02T00:20:30Z", "type": "commit"}, {"oid": "2c8ce30289dd4da043903eb88ff0a058c9f8de94", "url": "https://github.com/constellation-app/constellation/commit/2c8ce30289dd4da043903eb88ff0a058c9f8de94", "message": "fix test cases", "committedDate": "2020-10-02T05:17:57Z", "type": "commit"}, {"oid": "4a78eaa6446651be3c0bb46aeed3e6604e5b303a", "url": "https://github.com/constellation-app/constellation/commit/4a78eaa6446651be3c0bb46aeed3e6604e5b303a", "message": "Requested changes fix", "committedDate": "2020-10-07T23:39:59Z", "type": "commit"}, {"oid": "cc862d8cc4ea76332f79c41f293f04029b891b4d", "url": "https://github.com/constellation-app/constellation/commit/cc862d8cc4ea76332f79c41f293f04029b891b4d", "message": "Replace var with explicit type", "committedDate": "2020-10-13T22:39:35Z", "type": "commit"}, {"oid": "f9d2cafaf602610c2fdecaf038247ce2e35a1398", "url": "https://github.com/constellation-app/constellation/commit/f9d2cafaf602610c2fdecaf038247ce2e35a1398", "message": "convert for loop to while", "committedDate": "2020-10-13T22:58:33Z", "type": "commit"}, {"oid": "3db11bce4284cd7a426a0bdc4f0f5e407c0db581", "url": "https://github.com/constellation-app/constellation/commit/3db11bce4284cd7a426a0bdc4f0f5e407c0db581", "message": "sonarcube fixes", "committedDate": "2020-10-26T02:29:00Z", "type": "commit"}, {"oid": "859e0d443cf2cbd55eb8aeda116374c4b116b28a", "url": "https://github.com/constellation-app/constellation/commit/859e0d443cf2cbd55eb8aeda116374c4b116b28a", "message": "SQ Fixes", "committedDate": "2020-10-30T04:03:39Z", "type": "commit"}, {"oid": "83ee8a62c2a52ac5c6a24822168578a9853821a9", "url": "https://github.com/constellation-app/constellation/commit/83ee8a62c2a52ac5c6a24822168578a9853821a9", "message": "revert switch statements from methods", "committedDate": "2020-11-01T22:08:04Z", "type": "commit"}, {"oid": "802d4653e8b192c4ab323fbcfb2ad90c5b79316c", "url": "https://github.com/constellation-app/constellation/commit/802d4653e8b192c4ab323fbcfb2ad90c5b79316c", "message": "sonar diamond operator", "committedDate": "2020-11-01T22:53:16Z", "type": "commit"}, {"oid": "4d6ae1714ac4a7f74aca96432b9b6b3a1a410a88", "url": "https://github.com/constellation-app/constellation/commit/4d6ae1714ac4a7f74aca96432b9b6b3a1a410a88", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-11-11T21:21:59Z", "type": "commit"}, {"oid": "18ac45f427e7811de003d7e9138fc44c16297047", "url": "https://github.com/constellation-app/constellation/commit/18ac45f427e7811de003d7e9138fc44c16297047", "message": "Sonar bug fix", "committedDate": "2020-11-23T21:15:57Z", "type": "commit"}, {"oid": "749b98d84f8e9b6635dc94f95f74624b78eef87e", "url": "https://github.com/constellation-app/constellation/commit/749b98d84f8e9b6635dc94f95f74624b78eef87e", "message": "Add debug statements and futures to tasks", "committedDate": "2020-11-23T21:18:04Z", "type": "commit"}, {"oid": "ee50ec6866f2cd0b041abbf9084a93bdb6f1dba2", "url": "https://github.com/constellation-app/constellation/commit/ee50ec6866f2cd0b041abbf9084a93bdb6f1dba2", "message": "add visibility access for Top Component", "committedDate": "2020-12-07T23:30:33Z", "type": "commit"}, {"oid": "dface9ed9e85391d6127a62327248491ae4319de", "url": "https://github.com/constellation-app/constellation/commit/dface9ed9e85391d6127a62327248491ae4319de", "message": "fix bug for shortcut hotkeys", "committedDate": "2020-12-07T23:30:50Z", "type": "commit"}, {"oid": "ff76f4c87e83a8534775bab9b59e4f70af7550ee", "url": "https://github.com/constellation-app/constellation/commit/ff76f4c87e83a8534775bab9b59e4f70af7550ee", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-12-07T23:40:26Z", "type": "commit"}, {"oid": "c7d76a5f02c37b90fbeb97b0cd2677b29d952e7e", "url": "https://github.com/constellation-app/constellation/commit/c7d76a5f02c37b90fbeb97b0cd2677b29d952e7e", "message": "remove log statements", "committedDate": "2020-12-08T00:41:31Z", "type": "commit"}, {"oid": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "url": "https://github.com/constellation-app/constellation/commit/b237f4fd2abd473f7b90e71217779c9f96f68f9d", "message": "fix sonar warnings", "committedDate": "2020-12-08T04:19:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTE0OA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538991148", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:09:36Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java", "diffHunk": "@@ -323,7 +322,7 @@ protected void print(String prefix, StringBuilder out) {\n     public static SequenceExpression parse(String expression) {\n \n         ParseState state = ParseState.READING_WHITESPACE;\n-        final char[] content = new char[expression.length()];\n+        char[] content = new char[expression.length()];", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538991554", "bodyText": "What's the reason for using the constructor here (and other related files)?", "author": "antares1470", "createdAt": "2020-12-09T04:10:46Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java", "diffHunk": "@@ -25,7 +25,7 @@\n  */\n public class And {\n \n-    public static final String NAME = \"AND\";\n+    public static final String NAME = new String(\"AND\");", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1OTg1OQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r539659859", "bodyText": "So for some reason, the map structure that this gets stored into, does not work when you omit the new String(...) constructor. I previously fixed this issue up in the SQ warnings from a few weeks back - but this specifically broke the Layers View. It was pretty hard to debug.\nI've reverted it back which fixed the issue.", "author": "aldebaran30701", "createdAt": "2020-12-09T21:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxNDI4Mg==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r539814282", "bodyText": "hmmm that's really odd. Perhaps the constructor actually behaves differently than expected (though I don't understand why)", "author": "antares1470", "createdAt": "2020-12-10T03:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjEwOA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992108", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:12:18Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -147,6 +151,22 @@ public void execute() {\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n+    public void executeFuture() {\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n+\n+        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjE5MQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992191", "bodyText": "exceptions can be final", "author": "antares1470", "createdAt": "2020-12-09T04:12:34Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -147,6 +151,22 @@ public void execute() {\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n+    public void executeFuture() {\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n+\n+        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjI3Ng==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992276", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:12:49Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -161,6 +181,28 @@ public void readState() {\n                 .executeLater(graph);\n     }\n \n+    public boolean getParentVisibility() {\n+        return parent != null ? parent.getVisibility() : null;\n+    }\n+\n+    public void readStateFuture() {\n+        final LayersViewPane pane = parent.getContent();\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (pane == null || graph == null) {\n+            return;\n+        }\n+        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjMzNw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992337", "bodyText": "both exceptions final", "author": "antares1470", "createdAt": "2020-12-09T04:13:01Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -161,6 +181,28 @@ public void readState() {\n                 .executeLater(graph);\n     }\n \n+    public boolean getParentVisibility() {\n+        return parent != null ? parent.getVisibility() : null;\n+    }\n+\n+    public void readStateFuture() {\n+        final LayersViewPane pane = parent.getContent();\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (pane == null || graph == null) {\n+            return;\n+        }\n+        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+                .executeLater(graph);\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjQxMw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992413", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:13:17Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -172,13 +214,36 @@ public void readState() {\n         if (graph == null) {\n             return null;\n         }\n+\n         return PluginExecution.withPlugin(new LayersViewStateWriter(vxBitMaskCollection.getQueries(), txBitMaskCollection.getQueries()))\n                 .executeLater(graph);\n+\n     }\n \n     public void updateQueries(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n+        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n+        PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+    }\n+\n+    public void updateQueriesFuture(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        PluginExecution.withPlugin(updatePlugin).executeLater(currentGraph);\n+        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjQ0Ng==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992446", "bodyText": "both exceptions final", "author": "antares1470", "createdAt": "2020-12-09T04:13:26Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -172,13 +214,36 @@ public void readState() {\n         if (graph == null) {\n             return null;\n         }\n+\n         return PluginExecution.withPlugin(new LayersViewStateWriter(vxBitMaskCollection.getQueries(), txBitMaskCollection.getQueries()))\n                 .executeLater(graph);\n+\n     }\n \n     public void updateQueries(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n+        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n+        PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+    }\n+\n+    public void updateQueriesFuture(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        PluginExecution.withPlugin(updatePlugin).executeLater(currentGraph);\n+        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzE5MA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993190", "bodyText": "is there an alternative to declaring var?", "author": "antares1470", "createdAt": "2020-12-09T04:15:47Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY5OTI5OQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r540699299", "bodyText": "Forgot to remove this var when using it to test my thinking \ud83d\udc4d", "author": "aldebaran30701", "createdAt": "2020-12-11T05:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzI0Nw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993247", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:16:00Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzMwNA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993304", "bodyText": "both exceptions final", "author": "antares1470", "createdAt": "2020-12-09T04:16:09Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzM1NQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993355", "bodyText": "final", "author": "antares1470", "createdAt": "2020-12-09T04:16:20Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+\n+        if (!LayersViewController.getDefault().getParentVisibility()) {\n+            LayersViewController.getDefault().readStateFuture();\n+            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+        }\n+    }\n+\n     @Override\n     public void actionPerformed(ActionEvent e) {\n-        Future<?> enableLayerFuture = null;\n-\n         final String hotkey = e.getActionCommand();\n         switch (hotkey) {\n             case \"CA-L\":\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzQxMA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993410", "bodyText": "both exceptions final", "author": "antares1470", "createdAt": "2020-12-09T04:16:30Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+\n+        if (!LayersViewController.getDefault().getParentVisibility()) {\n+            LayersViewController.getDefault().readStateFuture();\n+            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+        }\n+    }\n+\n     @Override\n     public void actionPerformed(ActionEvent e) {\n-        Future<?> enableLayerFuture = null;\n-\n         final String hotkey = e.getActionCommand();\n         switch (hotkey) {\n             case \"CA-L\":\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                try {\n+                    deselectFuture.get();\n+                } catch (InterruptedException ex) {\n+                    Exceptions.printStackTrace(ex);\n+                    Thread.currentThread().interrupt();\n+                } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1661c58542265d76f52e362009b73a88af7c5728", "url": "https://github.com/constellation-app/constellation/commit/1661c58542265d76f52e362009b73a88af7c5728", "message": "peer review final fixes", "committedDate": "2020-12-11T05:25:03Z", "type": "commit"}, {"oid": "1d01b1dd830abf81fbe58ded86530dcd12bcd6db", "url": "https://github.com/constellation-app/constellation/commit/1d01b1dd830abf81fbe58ded86530dcd12bcd6db", "message": "add comments explaining String constructor call", "committedDate": "2020-12-13T23:29:57Z", "type": "commit"}]}