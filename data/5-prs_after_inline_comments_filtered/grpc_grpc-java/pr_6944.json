{"pr_number": 6944, "pr_title": "Move everything related to cancellation to CancellableContext.", "pr_createdAt": "2020-04-17T20:37:46Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6944", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDcwMQ==", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411554701", "bodyText": "Please revert these useless changes. This is just a style change, which just adds noise and can flip/flop each time a different person touches the code.", "author": "ejona86", "createdAt": "2020-04-20T17:21:30Z", "path": "context/src/main/java/io/grpc/Context.java", "diffHunk": "@@ -459,9 +453,8 @@ boolean isCurrent() {\n   public boolean isCancelled() {\n     if (cancellableAncestor == null) {\n       return false;\n-    } else {\n-      return cancellableAncestor.isCancelled();\n     }\n+    return cancellableAncestor.isCancelled();", "originalCommit": "5d103226b84074212dc434e356209474e32e39b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxNzUwNQ==", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411617505", "bodyText": "Agreed, reverted, I did it mostly for consistency with other methods (but not important for this PR).", "author": "bogdandrutu", "createdAt": "2020-04-20T19:00:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDcwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2MzU4Ng==", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411563586", "bodyText": "This is broken. The same Listener could be used for multiple Contexts. It could then remove the Listener for the wrong Context.", "author": "ejona86", "createdAt": "2020-04-20T17:35:07Z", "path": "context/src/main/java/io/grpc/Context.java", "diffHunk": "@@ -498,98 +490,30 @@ public void addListener(final CancellationListener cancellationListener,\n                           final Executor executor) {\n     checkNotNull(cancellationListener, \"cancellationListener\");\n     checkNotNull(executor, \"executor\");\n-    if (canBeCancelled()) {\n-      ExecutableListener executableListener =\n-          new ExecutableListener(executor, cancellationListener);\n-      synchronized (this) {\n-        if (isCancelled()) {\n-          executableListener.deliver();\n-        } else {\n-          if (listeners == null) {\n-            // Now that we have a listener we need to listen to our parent so\n-            // we can cascade listener notification.\n-            listeners = new ArrayList<>();\n-            listeners.add(executableListener);\n-            if (cancellableAncestor != null) {\n-              cancellableAncestor.addListener(parentListener, DirectExecutor.INSTANCE);\n-            }\n-          } else {\n-            listeners.add(executableListener);\n-          }\n-        }\n-      }\n+    if (cancellableAncestor == null) {\n+      return;\n     }\n+    cancellableAncestor.addListenerInternal(\n+        new ExecutableListener(executor, cancellationListener, this));\n   }\n \n   /**\n    * Remove a {@link CancellationListener}.\n    */\n   public void removeListener(CancellationListener cancellationListener) {\n-    if (!canBeCancelled()) {\n-      return;\n-    }\n-    synchronized (this) {\n-      if (listeners != null) {\n-        for (int i = listeners.size() - 1; i >= 0; i--) {\n-          if (listeners.get(i).listener == cancellationListener) {\n-            listeners.remove(i);\n-            // Just remove the first matching listener, given that we allow duplicate\n-            // adds we should allow for duplicates after remove.\n-            break;\n-          }\n-        }\n-        // We have no listeners so no need to listen to our parent\n-        if (listeners.isEmpty()) {\n-          if (cancellableAncestor != null) {\n-            cancellableAncestor.removeListener(parentListener);\n-          }\n-          listeners = null;\n-        }\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Notify all listeners that this context has been cancelled and immediately release\n-   * any reference to them so that they may be garbage collected.\n-   */\n-  void notifyAndClearListeners() {\n-    if (!canBeCancelled()) {\n+    if (cancellableAncestor == null) {\n       return;\n     }\n-    ArrayList<ExecutableListener> tmpListeners;\n-    synchronized (this) {\n-      if (listeners == null) {\n-        return;\n-      }\n-      tmpListeners = listeners;\n-      listeners = null;\n-    }\n-    // Deliver events to non-child context listeners before we notify child contexts. We do this\n-    // to cancel higher level units of work before child units. This allows for a better error\n-    // handling paradigm where the higher level unit of work knows it is cancelled and so can\n-    // ignore errors that bubble up as a result of cancellation of lower level units.\n-    for (int i = 0; i < tmpListeners.size(); i++) {\n-      if (!(tmpListeners.get(i).listener instanceof ParentListener)) {\n-        tmpListeners.get(i).deliver();\n-      }\n-    }\n-    for (int i = 0; i < tmpListeners.size(); i++) {\n-      if (tmpListeners.get(i).listener instanceof ParentListener) {\n-        tmpListeners.get(i).deliver();\n-      }\n-    }\n-    if (cancellableAncestor != null) {\n-      cancellableAncestor.removeListener(parentListener);\n-    }\n+    cancellableAncestor.removeListener(cancellationListener);", "originalCommit": "5d103226b84074212dc434e356209474e32e39b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYyNzk3NA==", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411627974", "bodyText": "Good catch, added test to confirm it works.", "author": "bogdandrutu", "createdAt": "2020-04-20T19:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2MzU4Ng=="}], "type": "inlineReview"}, {"oid": "800973e96216c8caad57b2edb215636c2d9d70a2", "url": "https://github.com/grpc/grpc-java/commit/800973e96216c8caad57b2edb215636c2d9d70a2", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-04-20T19:24:52Z", "type": "forcePushed"}, {"oid": "583a005e2f7f66979efde2e74ee5d49968280265", "url": "https://github.com/grpc/grpc-java/commit/583a005e2f7f66979efde2e74ee5d49968280265", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-04-20T19:30:30Z", "type": "forcePushed"}, {"oid": "e7372553c727be2a8435df9a8a361d890cf4b8e5", "url": "https://github.com/grpc/grpc-java/commit/e7372553c727be2a8435df9a8a361d890cf4b8e5", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-04-20T22:19:45Z", "type": "forcePushed"}, {"oid": "b6179d352a4e53278c5f64ecd2aa154fd427137d", "url": "https://github.com/grpc/grpc-java/commit/b6179d352a4e53278c5f64ecd2aa154fd427137d", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-04-20T23:14:20Z", "type": "commit"}, {"oid": "b6179d352a4e53278c5f64ecd2aa154fd427137d", "url": "https://github.com/grpc/grpc-java/commit/b6179d352a4e53278c5f64ecd2aa154fd427137d", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-04-20T23:14:20Z", "type": "forcePushed"}]}