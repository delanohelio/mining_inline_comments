{"pr_number": 6688, "pr_title": "xds: support reporting loads for more than one cluster services", "pr_createdAt": "2020-02-07T22:18:16Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6688", "timeline": [{"oid": "5e9de32882681e0aef03675caab348cf8491edd5", "url": "https://github.com/grpc/grpc-java/commit/5e9de32882681e0aef03675caab348cf8491edd5", "message": "Support reporting loads for more than one cluster services.", "committedDate": "2020-02-07T21:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwNTg4OA==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377805888", "bodyText": "Why is this removed? Is there behavior change?", "author": "dapengzhang0", "createdAt": "2020-02-11T18:06:36Z", "path": "xds/src/test/java/io/grpc/xds/LoadReportClientImplTest.java", "diffHunk": "@@ -474,81 +346,6 @@ public void lrsStreamClosedAndRetried() {\n     verify(backoffPolicy2, times(1)).nextBackoffNanos();\n   }\n \n-  @Test\n-  public void lrsStreamRetryAndRereport() {", "originalCommit": "5e9de32882681e0aef03675caab348cf8491edd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxODMzNA==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377818334", "bodyText": "This test case was kind of redundant as all it wanted to show is LRS is back to normal after stream closed and retry. Not too much value to test this, it's verbose.", "author": "voidzcy", "createdAt": "2020-02-11T18:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwNTg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgyMzk1OQ==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377823959", "bodyText": "I think it doesn't harm if an exiting test has some redundancy and verbose. Is the re-report part covered elsewhere?", "author": "dapengzhang0", "createdAt": "2020-02-11T18:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwNTg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgyNjM4OA==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377826388", "bodyText": "We can extend the retry test case a little bit to show the re-report, so that we do not need to repeat the logic for stream closed and retry.", "author": "voidzcy", "createdAt": "2020-02-11T18:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwNTg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzMjIwMw==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377832203", "bodyText": "Added.", "author": "voidzcy", "createdAt": "2020-02-11T18:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwNTg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwODgwMQ==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377808801", "bodyText": "The name does not provide any information what to test and what to verify. Either give it a more descriptive name or add a description of what are being tested in javadoc.", "author": "dapengzhang0", "createdAt": "2020-02-11T18:12:33Z", "path": "xds/src/test/java/io/grpc/xds/LoadReportClientImplTest.java", "diffHunk": "@@ -186,201 +189,69 @@ public void tearDown() {\n   }\n \n   @Test\n-  public void loadReportInitialRequest() {\n-    verify(mockLoadReportingService).streamLoadStats(lrsResponseObserverCaptor.capture());\n-    assertThat(lrsRequestObservers).hasSize(1);\n-    StreamObserver<LoadStatsRequest> requestObserver = lrsRequestObservers.poll();\n-    verify(requestObserver).onNext(EXPECTED_INITIAL_REQ);\n-    // No more request should be sent until receiving initial response. No load reporting\n-    // should be scheduled.\n-    assertThat(fakeClock.getPendingTasks(LOAD_REPORTING_TASK_FILTER)).isEmpty();\n-    verifyNoMoreInteractions(requestObserver);\n-  }\n-\n-  @Test\n-  public void startAndStopCanBeCalledMultipleTimes() {\n-    verify(mockLoadReportingService).streamLoadStats(lrsResponseObserverCaptor.capture());\n-    assertThat(lrsRequestObservers).hasSize(1);\n-    StreamObserver<LoadStatsRequest> requestObserver = lrsRequestObservers.peek();\n-    verify(requestObserver).onNext(EXPECTED_INITIAL_REQ);\n-    lrsClient.startLoadReporting(callback);\n-    assertThat(lrsRequestObservers).hasSize(1);\n-    lrsClient.startLoadReporting(callback);\n-    assertThat(lrsRequestObservers).hasSize(1);\n-    verifyNoMoreInteractions(requestObserver);\n-\n-    lrsClient.stopLoadReporting();\n-    assertThat(callEnded.get()).isTrue();\n-    assertThat(fakeClock.getPendingTasks(LRS_RPC_RETRY_TASK_FILTER)).isEmpty();\n-    lrsClient.stopLoadReporting();\n-    assertThat(callEnded.get()).isTrue();\n-\n-    lrsClient.startLoadReporting(callback);\n-    verify(mockLoadReportingService, times(2)).streamLoadStats(lrsResponseObserverCaptor.capture());\n-    assertThat(lrsRequestObservers).hasSize(2);\n-  }\n-\n-  // Currently we expect each gRPC client talks to a single service per cluster, so we test LRS\n-  // client reporting load for a single cluster service only.\n-  // TODO(chengyuanzhang): Existing test suites for LRS client implementation have poor behavior\n-  //  coverage and are not robust. Should improve once its usage is finalized without too much\n-  //  assumption.\n-\n-  @Test\n-  public void loadReportActualIntervalAsSpecified() {\n+  public void normalOperations() {", "originalCommit": "5e9de32882681e0aef03675caab348cf8491edd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgyMzgzOQ==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377823839", "bodyText": "Hmm... This indeed tests LRS client's normal operation, basically the periodic load reporting. Previously, it was splited in multiple test cases such as initial request/response, load reporting interval update, etc. It is verbose to have them be separate as usually one behavior is just a step further from another, and those test cases have significant code repeat. So I think it would be better to put them together, which is just a normal flow of LRS client. Nothing specific, normal workflow is what it is testing.", "author": "voidzcy", "createdAt": "2020-02-11T18:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwODgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1NDcxNg==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377854716", "bodyText": "Then maybe normalLrsFlow() is a better name.", "author": "dapengzhang0", "createdAt": "2020-02-11T19:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwODgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1OTcyOQ==", "url": "https://github.com/grpc/grpc-java/pull/6688#discussion_r377859729", "bodyText": "typicalWorkflow. I saw there is a similar one in HealthCheckingLoadBalancerFactoryTest.", "author": "voidzcy", "createdAt": "2020-02-11T19:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwODgwMQ=="}], "type": "inlineReview"}, {"oid": "eea144197727115672d3fee8d0e686871abd3a54", "url": "https://github.com/grpc/grpc-java/commit/eea144197727115672d3fee8d0e686871abd3a54", "message": "Extend retry test case to cover load reporting back to normal.", "committedDate": "2020-02-11T18:55:28Z", "type": "commit"}, {"oid": "d848e01fcace8927a04707d9a6610efa43b9e39a", "url": "https://github.com/grpc/grpc-java/commit/d848e01fcace8927a04707d9a6610efa43b9e39a", "message": "Rename test case.", "committedDate": "2020-02-11T19:45:24Z", "type": "commit"}]}