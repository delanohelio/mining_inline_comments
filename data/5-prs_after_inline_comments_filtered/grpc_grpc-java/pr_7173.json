{"pr_number": 7173, "pr_title": "stub: Only throw on cancellation for streaming responses", "pr_createdAt": "2020-06-30T21:27:50Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7173", "timeline": [{"oid": "b7cf787b526407b4539e6195d0c24c8f4b77f271", "url": "https://github.com/grpc/grpc-java/commit/b7cf787b526407b4539e6195d0c24c8f4b77f271", "message": "stub: Only throw on cancellation for streaming responses\n\nUnary are far more common than streaming, and we're throwing for unary even\nthough it doesn't help the service. Let's stop doing that. We also stop\nthrowing in onComplete() for all cases, because it doesn't help any service;\nit doesn't stop the service's processing and isn't even all that informative\nsince the cancellation can happen even after onComplete() is called.", "committedDate": "2020-07-01T14:39:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyMDgzNg==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r448520836", "bodyText": "I feel this method is just adding an annoying redirection. Why not just call new UnaryServerCallHandler<>(method, serverStreaming) directly whenever asyncUnaryRequestCall is called?", "author": "dapengzhang0", "createdAt": "2020-07-01T17:43:53Z", "path": "stub/src/main/java/io/grpc/stub/ServerCalls.java", "diffHunk": "@@ -211,24 +215,26 @@ public void onReady() {\n    * @param method an adaptor to the actual method on the service implementation.\n    */\n   private static <ReqT, RespT> ServerCallHandler<ReqT, RespT> asyncUnaryRequestCall(", "originalCommit": "b7cf787b526407b4539e6195d0c24c8f4b77f271", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyOTI0MQ==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r448529241", "bodyText": "That sounds fine. Do you mind if I do that as a follow-up?", "author": "ejona86", "createdAt": "2020-07-01T17:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyMDgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyOTczMg==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r448529732", "bodyText": "Actually, let me do it as a pre-refactor, since I was going to let this PR \"sit\" for us to discuss it in the API meeting.", "author": "ejona86", "createdAt": "2020-07-01T18:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyMDgzNg=="}], "type": "inlineReview"}, {"oid": "ad44ed00d14f5a0a20eeebef97c82380d1502cc4", "url": "https://github.com/grpc/grpc-java/commit/ad44ed00d14f5a0a20eeebef97c82380d1502cc4", "message": "stub: Only throw on cancellation for streaming responses\n\nUnary are far more common than streaming, and we're throwing for unary even\nthough it doesn't help the service. Let's stop doing that. We also stop\nthrowing in onComplete() for all cases, because it doesn't help any service;\nit doesn't stop the service's processing and isn't even all that informative\nsince the cancellation can happen even after onComplete() is called.", "committedDate": "2020-07-21T22:00:02Z", "type": "commit"}, {"oid": "c111d855a4a714b26d4ddeac6851a0c2177a7529", "url": "https://github.com/grpc/grpc-java/commit/c111d855a4a714b26d4ddeac6851a0c2177a7529", "message": "Add notice that setOnCancelHandler disables the exception", "committedDate": "2020-07-21T22:03:57Z", "type": "commit"}, {"oid": "c111d855a4a714b26d4ddeac6851a0c2177a7529", "url": "https://github.com/grpc/grpc-java/commit/c111d855a4a714b26d4ddeac6851a0c2177a7529", "message": "Add notice that setOnCancelHandler disables the exception", "committedDate": "2020-07-21T22:03:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NDk5OQ==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r458464999", "bodyText": "This message is confusing. It seems a hint to the developer to change their source code: \"To disable this exception: use ServerCallStreamObserver.setOnCancelHandler()\", not an error message to users.", "author": "dapengzhang0", "createdAt": "2020-07-22T00:31:09Z", "path": "stub/src/main/java/io/grpc/stub/ServerCalls.java", "diffHunk": "@@ -331,10 +344,17 @@ public void setCompression(String compression) {\n     @Override\n     public void onNext(RespT response) {\n       if (cancelled) {\n-        if (onCancelHandler == null) {\n-          throw Status.CANCELLED.withDescription(\"call already cancelled\").asRuntimeException();\n+        if (serverStreamingOrBidi) {\n+          throw Status.CANCELLED\n+              .withDescription(\"call already cancelled. \"\n+                  + \"ServerCallStreamObserver.setOnCancelHandler() disables this exception\")", "originalCommit": "c111d855a4a714b26d4ddeac6851a0c2177a7529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0NDY0Ng==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r458844646", "bodyText": "Do you have a suggestion for alternative wording? This is what we discussed in the API review. When would users see this exception?", "author": "ejona86", "createdAt": "2020-07-22T14:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NDk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyNTUzOA==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r458925538", "bodyText": "Do you have a suggestion for alternative wording?\n\nNo specific alternatives. I think we should just tell the user that this message is a hint to the developers.", "author": "dapengzhang0", "createdAt": "2020-07-22T16:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NDk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ0MzQzNg==", "url": "https://github.com/grpc/grpc-java/pull/7173#discussion_r498443436", "bodyText": "Decided on:\n\"Use ServerCallStreamObserver.setOnCancelHandler() to disable this exception\"", "author": "ejona86", "createdAt": "2020-10-01T18:38:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NDk5OQ=="}], "type": "inlineReview"}, {"oid": "106d964e87c597bc3012a3a3980bb6c08b6c2380", "url": "https://github.com/grpc/grpc-java/commit/106d964e87c597bc3012a3a3980bb6c08b6c2380", "message": "Reword exception message", "committedDate": "2020-10-01T19:35:00Z", "type": "commit"}]}