{"pr_number": 6948, "pr_title": "xds: implement requireClientCertificate semantics", "pr_createdAt": "2020-04-20T17:15:01Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6948", "timeline": [{"oid": "1972757680342345f8ad6fc13823316651f0198f", "url": "https://github.com/grpc/grpc-java/commit/1972757680342345f8ad6fc13823316651f0198f", "message": "xds: implement requireClientCertificate semantics", "committedDate": "2020-04-20T17:12:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NjQ1MQ==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411576451", "bodyText": "it looks like source can be UpstreamTlsContext, what makes this safe?", "author": "creamsoup", "createdAt": "2020-04-20T17:54:26Z", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +73,21 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    if (localCertValidationContext != null) {\n+      sslContextBuilder.trustManager(new SdsTrustManagerFactory(localCertValidationContext));\n+      DownstreamTlsContext downstreamTlsContext = (DownstreamTlsContext) getSource();", "originalCommit": "1972757680342345f8ad6fc13823316651f0198f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMjA4NA==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411712084", "bodyText": "added checks in SslContextProvider constructor and also in this method", "author": "sanjaypujare", "createdAt": "2020-04-20T21:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NjQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411581211", "bodyText": "consider make a 2 methods sets requirClientCert and make this method private. so existing test doesn't need to be modified. although name is already long, this can be more descriptive.", "author": "creamsoup", "createdAt": "2020-04-20T18:01:41Z", "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "diffHunk": "@@ -170,7 +174,10 @@ static String getTempFileNameForResourcesFile(String resFile) throws IOException\n    * Helper method to build DownstreamTlsContext for above tests. Called from other classes as well.\n    */\n   public static DownstreamTlsContext buildDownstreamTlsContextFromFilenames(\n-      @Nullable String privateKey, @Nullable String certChain, @Nullable String trustCa) {\n+      @Nullable String privateKey,\n+      @Nullable String certChain,\n+      @Nullable String trustCa,\n+      boolean requireClientCert) {", "originalCommit": "1972757680342345f8ad6fc13823316651f0198f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4ODM1OQ==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411688359", "bodyText": "So you are suggesting 2 (public) methods like\nbuildDownstreamTlsContextFromFilenames\nbuildDownstreamTlsContextFromFilenamesRequireClientCert\n\ncalling this method with requireClientCert=false and requireClientCert=true respectively (and make this one private)?", "author": "sanjaypujare", "createdAt": "2020-04-20T20:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMjIwNw==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411712207", "bodyText": "changes made.", "author": "sanjaypujare", "createdAt": "2020-04-20T21:42:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMzczNQ==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411713735", "bodyText": "yes", "author": "creamsoup", "createdAt": "2020-04-20T21:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}], "type": "inlineReview"}, {"oid": "c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb", "url": "https://github.com/grpc/grpc-java/commit/c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb", "message": "address review comments 1", "committedDate": "2020-04-20T21:41:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411714302", "bodyText": "we don't need those changes anymore.", "author": "creamsoup", "createdAt": "2020-04-20T21:46:45Z", "path": "xds/src/test/java/io/grpc/xds/internal/sds/SecretVolumeSslContextProviderTest.java", "diffHunk": "@@ -274,7 +274,8 @@ public void getProviderForServer_defaultTlsCertificate_throwsException() {\n     try {\n       SecretVolumeSslContextProvider.getProviderForServer(\n           CommonTlsContextTestsUtil.buildDownstreamTlsContext(\n-              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null)));\n+              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null),\n+              /* requireClientCert= */ false));", "originalCommit": "c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNzQ0MA==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411717440", "bodyText": "this is a different one. This one doesn't take filenames but just a CommonTlsContext and the new bool. I could have created the same 2 methods here too but this is not so widely used", "author": "sanjaypujare", "createdAt": "2020-04-20T21:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyMTA3Mw==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411721073", "bodyText": "oops okay, ideally passing boolean param is not recommended if can avoid. but this one is not that bad.", "author": "creamsoup", "createdAt": "2020-04-20T22:00:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg=="}], "type": "inlineReview"}, {"oid": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269", "url": "https://github.com/grpc/grpc-java/commit/dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269", "message": "address review comments 2", "committedDate": "2020-04-20T21:48:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411737692", "bodyText": "nit: should have a meaningful message.\nbtw, this class is rather confusing (and errorprone). it should be split into 2 different classes (server and client). can it be done? how hard to change?", "author": "creamsoup", "createdAt": "2020-04-20T22:36:34Z", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +79,22 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    checkState(server);", "originalCommit": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NDY2MA==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411744660", "bodyText": "We had this discussion before. UpstreamTlsContext and DownstreamTlsContext are quite similar but there is no common abstraction to use. So I ended up using the generic K to eliminate code duplication. Splitting into server & client classes is definitely possible but I suspect there will be code duplication. Do you have better ideas?", "author": "sanjaypujare", "createdAt": "2020-04-20T22:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NzA5OA==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411747098", "bodyText": "Yeah i thought we discussed this before.\ni think code dup is better than error prone / confusing nature of current structure. we can still  share some code as static or protected in parent method.", "author": "creamsoup", "createdAt": "2020-04-20T22:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0ODg4Nw==", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411748887", "bodyText": "Okay I will add a TODO for this suggestion and in the list of pending PRs", "author": "sanjaypujare", "createdAt": "2020-04-20T23:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}], "type": "inlineReview"}, {"oid": "7ef4f69a651c5b155371186bdf7dd5deefa096c0", "url": "https://github.com/grpc/grpc-java/commit/7ef4f69a651c5b155371186bdf7dd5deefa096c0", "message": "address review comments 3", "committedDate": "2020-04-20T23:38:02Z", "type": "commit"}]}