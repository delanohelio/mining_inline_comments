{"pr_number": 6622, "pr_title": "xds: enable keepalive for XDS channel", "pr_createdAt": "2020-01-18T03:07:04Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6622", "timeline": [{"oid": "03a1a4ba03d4872f0edbbd685f3f89d3bec9ed21", "url": "https://github.com/grpc/grpc-java/commit/03a1a4ba03d4872f0edbbd685f3f89d3bec9ed21", "message": "xds: enable keepalive for XDS channel", "committedDate": "2020-01-18T03:05:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMzNDI3OQ==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r368334279", "bodyText": "DO we really want to hardcode these values? WHat will be ideal is if we can supply these values from the Bootstrap file as XdsNameResolver.start -> XdsClientImpl ctor -> XdsClient.createChannel() so these are configurable at runtime. The defaults could be these hardcoded values.", "author": "sanjaypujare", "createdAt": "2020-01-19T23:54:51Z", "path": "xds/src/main/java/io/grpc/xds/XdsClient.java", "diffHunk": "@@ -491,19 +492,23 @@ ManagedChannel createChannel(List<ServerInfo> servers) {\n         ServerInfo serverInfo = servers.get(0);\n         String serverUri = serverInfo.getServerUri();\n         List<ChannelCreds> channelCredsList = serverInfo.getChannelCredentials();\n-        ManagedChannel ch = null;\n+        ManagedChannelBuilder<?> channelBuilder = null;\n         // Use the first supported channel credentials configuration.\n         // Currently, only \"google_default\" is supported.\n         for (ChannelCreds creds : channelCredsList) {\n           if (creds.getType().equals(\"google_default\")) {\n-            ch = GoogleDefaultChannelBuilder.forTarget(serverUri).build();\n+            channelBuilder = GoogleDefaultChannelBuilder.forTarget(serverUri);\n             break;\n           }\n         }\n-        if (ch == null) {\n-          ch = ManagedChannelBuilder.forTarget(serverUri).build();\n+        if (channelBuilder == null) {\n+          channelBuilder = ManagedChannelBuilder.forTarget(serverUri);\n         }\n-        return ch;\n+\n+        return channelBuilder\n+            .keepAliveTime(5, TimeUnit.MINUTES)\n+            .keepAliveTimeout(20, TimeUnit.SECONDS)", "originalCommit": "03a1a4ba03d4872f0edbbd685f3f89d3bec9ed21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzOTc0Ng==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369139746", "bodyText": "While we could, most value is provided by having some value here. Anything via bootstrap would be an optimization. It seems there is a wide range of \"acceptable\" values, so this will probably be \"good enough\" for everyone. We can maybe add a configuration option in the future, but there are much more important things to do and we have limited resources.", "author": "ejona86", "createdAt": "2020-01-21T17:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMzNDI3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0MjYxMA==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369142610", "bodyText": "Anything via bootstrap would be an optimization.\n\nI think it is more than just optimization. Because of network conditions if someone wants to change these at runtime instead of having to recompile gRPC library they will be able to do that. But I agree this might be sufficient for now and there are more important things to do.", "author": "sanjaypujare", "createdAt": "2020-01-21T17:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMzNDI3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyNTgxNA==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369225814", "bodyText": "It is \"just an optimization\" because xds LB should be able to function for 5 minutes without XDS server. That is to say it is not a correctness issue.", "author": "ejona86", "createdAt": "2020-01-21T20:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMzNDI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0MDIwMg==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369140202", "bodyText": "I was thinking we'd just leave Timeout as its default. Yes, the default is 20 seconds, but no need to specify that here.", "author": "ejona86", "createdAt": "2020-01-21T17:28:46Z", "path": "xds/src/main/java/io/grpc/xds/XdsClient.java", "diffHunk": "@@ -491,19 +492,23 @@ ManagedChannel createChannel(List<ServerInfo> servers) {\n         ServerInfo serverInfo = servers.get(0);\n         String serverUri = serverInfo.getServerUri();\n         List<ChannelCreds> channelCredsList = serverInfo.getChannelCredentials();\n-        ManagedChannel ch = null;\n+        ManagedChannelBuilder<?> channelBuilder = null;\n         // Use the first supported channel credentials configuration.\n         // Currently, only \"google_default\" is supported.\n         for (ChannelCreds creds : channelCredsList) {\n           if (creds.getType().equals(\"google_default\")) {\n-            ch = GoogleDefaultChannelBuilder.forTarget(serverUri).build();\n+            channelBuilder = GoogleDefaultChannelBuilder.forTarget(serverUri);\n             break;\n           }\n         }\n-        if (ch == null) {\n-          ch = ManagedChannelBuilder.forTarget(serverUri).build();\n+        if (channelBuilder == null) {\n+          channelBuilder = ManagedChannelBuilder.forTarget(serverUri);\n         }\n-        return ch;\n+\n+        return channelBuilder\n+            .keepAliveTime(5, TimeUnit.MINUTES)\n+            .keepAliveTimeout(20, TimeUnit.SECONDS)", "originalCommit": "03a1a4ba03d4872f0edbbd685f3f89d3bec9ed21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTcwMw==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369155703", "bodyText": "Our internal prod channel builder has a different timeout. What's the specification? Use channel's default keepalive timeout or use 20 seconds?", "author": "dapengzhang0", "createdAt": "2020-01-21T18:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0MDIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzMzQzNQ==", "url": "https://github.com/grpc/grpc-java/pull/6622#discussion_r369233435", "bodyText": "Each language handles internal vs external differently. I think Java and C have some options here, since the keepalive setting is in globalish state. I think Go may not have many options, since it probably wouldn't get the internal configuration naturally.\nI don't think 10 seconds vs 20 seconds makes much of a difference internally, so in some ways I don't really care. More importantly we will be overriding the default internal keepalive time of 20 seconds and making it 5 minutes, which has a much bigger effect.\nOptions that come to mind:\n\nDon't care. We said 5 minutes will be fine, use 5 minutes. Could be surprising since it has different configuration from everything else\nAdd configuration. Internally we can set different values in the bootstrap file. Could be surprising since it has different configuration from everything else\nFigure out a hack to use the default keepalive internally but set it to 5 minutes externally.\nChange the default keepalive for channels to something reasonable, and then not specify anything here. Too risky short-term. We know we already want to change the default keepalive for channels\n\nRight now I think I'm favoring (1), with potential to do (2) and/or (4) in the future. We would leave timeout to be its system-specified default (so not specify it here).\nCC @markdroth", "author": "ejona86", "createdAt": "2020-01-21T20:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0MDIwMg=="}], "type": "inlineReview"}, {"oid": "f318197f17741ef570514c842a7bb8074f510292", "url": "https://github.com/grpc/grpc-java/commit/f318197f17741ef570514c842a7bb8074f510292", "message": "unspecify keepalive timeout", "committedDate": "2020-01-21T20:53:03Z", "type": "commit"}]}