{"pr_number": 722, "pr_title": "Resolves #162 adds camel-box support", "pr_createdAt": "2020-02-14T15:54:13Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/722", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDcyMw==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379510723", "bodyText": "Can 'io.netty.noUnsafe' be a variable?", "author": "oscerd", "createdAt": "2020-02-14T16:01:15Z", "path": "extensions/box/deployment/src/main/java/org/apache/camel/quarkus/component/box/deployment/BoxProcessor.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.box.deployment;\n+\n+import com.box.sdk.BoxAPIRequest;\n+import com.box.sdk.BoxDeveloperEditionAPIConnection;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.AdditionalApplicationArchiveMarkerBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.SystemPropertyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.camel.component.box.BoxCollaborationsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxCommentsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxConfiguration;\n+import org.apache.camel.component.box.BoxEventLogsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxEventsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxFilesManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxFoldersManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxGroupsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxSearchManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxTasksManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxUsersManagerEndpointConfiguration;\n+import org.apache.camel.quarkus.core.deployment.UnbannedReflectiveBuildItem;\n+\n+class BoxProcessor {\n+\n+    private static final String FEATURE = \"camel-box\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    AdditionalApplicationArchiveMarkerBuildItem boxArchiveMarker() {\n+        return new AdditionalApplicationArchiveMarkerBuildItem(\"com/box/sdk\");\n+    }\n+\n+    @BuildStep\n+    void configure(BuildProducer<SystemPropertyBuildItem> systemProperties,\n+            BuildProducer<RuntimeInitializedClassBuildItem> runtimeClasses) {\n+        systemProperties.produce(new SystemPropertyBuildItem(\"io.netty.noUnsafe\", \"true\"));", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMTQ1Nw==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379521457", "bodyText": "I do not see that box would depend on netty. Is the property really necessary?", "author": "ppalaga", "createdAt": "2020-02-14T16:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDcyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNjAyMQ==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379526021", "bodyText": "Hm... this seems to match an empty BOX_USER_NAME. I am not sure defining an empty env var is possible though. Anyway, something like .+ would perhaps be better, WDYT?", "author": "ppalaga", "createdAt": "2020-02-14T16:30:07Z", "path": "integration-tests/box/src/test/java/org/apache/camel/quarkus/component/box/it/BoxIT.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.box.it;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+import org.junit.jupiter.api.condition.EnabledIfEnvironmentVariable;\n+\n+@EnabledIfEnvironmentVariable(named = \"BOX_USER_NAME\", matches = \".*\")", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "26cf8bcf8c1022c244132ce9ac5992a4b4e5516f", "url": "https://github.com/apache/camel-quarkus/commit/26cf8bcf8c1022c244132ce9ac5992a4b4e5516f", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:10:26Z", "type": "forcePushed"}, {"oid": "5f82c11f00278d6f744484afd8c84a8f343087f1", "url": "https://github.com/apache/camel-quarkus/commit/5f82c11f00278d6f744484afd8c84a8f343087f1", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:12:57Z", "type": "commit"}, {"oid": "5f82c11f00278d6f744484afd8c84a8f343087f1", "url": "https://github.com/apache/camel-quarkus/commit/5f82c11f00278d6f744484afd8c84a8f343087f1", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:12:57Z", "type": "forcePushed"}]}