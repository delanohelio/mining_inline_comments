{"pr_number": 1905, "pr_title": "PostgresSQL Event native support fixes #1719", "pr_createdAt": "2020-10-12T11:58:28Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1905", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503250550", "bodyText": "Maybe it'd be good to leverage the Quarkus agroal extension to create a named postgresql datasource? Or at least add another route / test case for that scenario. It's a good way of proving our stuff integrates well with Quarkus.", "author": "jamesnetherton", "createdAt": "2020-10-12T12:08:02Z", "path": "integration-tests/pgevent/src/main/java/org/apache/camel/quarkus/component/pgevent/it/PgeventRoutes.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.it;\n+\n+import javax.inject.Named;\n+import javax.ws.rs.Produces;\n+\n+import com.impossibl.postgres.jdbc.PGDataSource;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+public class PgeventRoutes extends RouteBuilder {\n+    @ConfigProperty(name = \"database.host\")\n+    String host;\n+    @ConfigProperty(name = \"database.port\")\n+    Integer port;\n+    @ConfigProperty(name = \"database.name\")\n+    String databaseName;\n+    @ConfigProperty(name = \"database.user\")\n+    String user;\n+    @ConfigProperty(name = \"database.password\")\n+    String password;\n+\n+    @Override\n+    public void configure() throws Exception {\n+        // producer for simple pub-sub\n+        from(\"direct:pgevent-pub\")\n+                .to(\"pgevent://{{database.host}}:{{database.port}}/{{database.name}}/testchannel?user={{database.user}}&pass={{database.password}}\");\n+\n+        //consumer for simple pub-sub\n+        from(\"pgevent://{{database.host}}:{{database.port}}/{{database.name}}/testchannel?user={{database.user}}&pass={{database.password}}\")\n+                .log(\"Message got ${body}\")\n+                .bean(MyBean.class);\n+\n+        // producer with datasource\n+        from(\"direct:pgevent-datasource\")\n+                .to(\"pgevent:///postgres/testchannel?datasource=#pgDataSource\");\n+\n+        // consumer with datasource\n+        from(\"pgevent:///postgres/testchannel?datasource=#pgDataSource\")\n+                .log(\"Message got ${body}\")\n+                .bean(MyBean.class);\n+    }\n+\n+    @Produces\n+    @Named(\"pgDataSource\")\n+    public PGDataSource loadDataSource() throws Exception {\n+        PGDataSource dataSource = new PGDataSource();", "originalCommit": "0f4fc7cc478fcf935806301f817d0642e05bb316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4MzMwMw==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503283303", "bodyText": "good point!!", "author": "zbendhiba", "createdAt": "2020-10-12T13:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0MjMzOA==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503342338", "bodyText": "@jamesnetherton well it's not the same datasource. This is datasource expected is the one from pgevent API. The one having a connection that enables us to have those events.", "author": "zbendhiba", "createdAt": "2020-10-12T14:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0MzgyMA==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503343820", "bodyText": "if we want to have the agroal datasource, we need to convert this one to com.impossibl.postgres.jdbc.PGDatasource", "author": "zbendhiba", "createdAt": "2020-10-12T14:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1Mzc3Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503353773", "bodyText": "Ok, maybe we merge the PR as-is and create a follow up issue to look into this afterwards.\nI think it should be possible to do. Both PGDataSource and AgroalDatasource extend javax.sql.DataSource. So doing datasource=#nameOfTheAgroalDatasource should work (in theory).", "author": "jamesnetherton", "createdAt": "2020-10-12T14:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1ODc4OQ==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503358789", "bodyText": "@jamesnetherton yes, I've tested and it works fine. But in our camel component we get the connection from that datasource and if it's not an instance of PGConnection, we raise an error.\nWe need to handle a connection of type java.sql.Connection first here : https://github.com/apache/camel/blob/d23efa9cf87f6f5dab886206a3c00cc5e0e2472c/components/camel-pgevent/src/main/java/org/apache/camel/component/pgevent/PgEventHelper.java#L35\nSo maybe follow up an issue for an improvement.", "author": "zbendhiba", "createdAt": "2020-10-12T15:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3MDg2MQ==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503770861", "bodyText": "I've created the issue : #1909, to follow up", "author": "zbendhiba", "createdAt": "2020-10-13T08:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NTk0OQ==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503255949", "bodyText": "I think this leftover can be removed.", "author": "jamesnetherton", "createdAt": "2020-10-12T12:18:48Z", "path": "extensions/pgevent/deployment/src/main/java/org/apache/camel/quarkus/component/pgevent/deployment/PgeventProcessor.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.deployment;\n+\n+import java.io.IOException;\n+import java.sql.Driver;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import com.impossibl.postgres.system.procs.ProcProvider;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.jboss.logging.Logger;\n+\n+class PgeventProcessor {\n+\n+    private static final String PGEVENT_SERVICE_BASE = \"META-INF/services/\";\n+\n+    private static final Logger LOG = Logger.getLogger(PgeventProcessor.class);", "originalCommit": "0f4fc7cc478fcf935806301f817d0642e05bb316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MTI2Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503351263", "bodyText": "done", "author": "zbendhiba", "createdAt": "2020-10-12T14:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NTk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NjU4Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503256586", "bodyText": "If there's just one ReflectiveClassBuildItem to return then I guess we don't need a List.", "author": "jamesnetherton", "createdAt": "2020-10-12T12:19:57Z", "path": "extensions/pgevent/deployment/src/main/java/org/apache/camel/quarkus/component/pgevent/deployment/PgeventProcessor.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.deployment;\n+\n+import java.io.IOException;\n+import java.sql.Driver;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import com.impossibl.postgres.system.procs.ProcProvider;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.jboss.logging.Logger;\n+\n+class PgeventProcessor {\n+\n+    private static final String PGEVENT_SERVICE_BASE = \"META-INF/services/\";\n+\n+    private static final Logger LOG = Logger.getLogger(PgeventProcessor.class);\n+    private static final String FEATURE = \"camel-pgevent\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    List<ReflectiveClassBuildItem> registerReflectiveClasses() {", "originalCommit": "0f4fc7cc478fcf935806301f817d0642e05bb316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MTMyOA==", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503351328", "bodyText": "done", "author": "zbendhiba", "createdAt": "2020-10-12T14:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NjU4Ng=="}], "type": "inlineReview"}, {"oid": "71a1157b09779194c40be8684c5f64dbda46af20", "url": "https://github.com/apache/camel-quarkus/commit/71a1157b09779194c40be8684c5f64dbda46af20", "message": "PostgresSQL Event native support fixes #1719", "committedDate": "2020-10-12T14:52:06Z", "type": "commit"}, {"oid": "71a1157b09779194c40be8684c5f64dbda46af20", "url": "https://github.com/apache/camel-quarkus/commit/71a1157b09779194c40be8684c5f64dbda46af20", "message": "PostgresSQL Event native support fixes #1719", "committedDate": "2020-10-12T14:52:06Z", "type": "forcePushed"}]}