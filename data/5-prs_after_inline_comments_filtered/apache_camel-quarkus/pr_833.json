{"pr_number": 833, "pr_title": "Add websocket-jsr356 extension", "pr_createdAt": "2020-03-02T11:37:49Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/833", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0NzI5OQ==", "url": "https://github.com/apache/camel-quarkus/pull/833#discussion_r386347299", "bodyText": "I think we could produce a CamelServiceFilterBuildItem like we do e.g. here https://github.com/apache/camel-quarkus/blob/master/extensions/bean-validator/deployment/src/main/java/org/apache/camel/quarkus/component/bean/validator/deployment/BeanValidatorProcessor.java#L38-L45", "author": "ppalaga", "createdAt": "2020-03-02T11:48:24Z", "path": "extensions/websocket-jsr356/deployment/src/main/java/org/apache/camel/quarkus/component/websocket/jsr356/deployment/WebSocketJSR356Processor.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.websocket.jsr356.deployment;\n+\n+import java.util.List;\n+\n+import javax.websocket.server.ServerEndpointConfig;\n+\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.annotations.ExecutionTime;\n+import io.quarkus.deployment.annotations.Record;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.undertow.deployment.ServletContextAttributeBuildItem;\n+import io.quarkus.undertow.deployment.ServletDeploymentManagerBuildItem;\n+import io.undertow.websockets.jsr.DefaultContainerConfigurator;\n+import io.undertow.websockets.jsr.WebSocketDeploymentInfo;\n+import org.apache.camel.quarkus.component.websocket.jsr356.CamelWebSocketJSR356Config;\n+import org.apache.camel.quarkus.component.websocket.jsr356.CamelWebSocketJSR356Recorder;\n+import org.apache.camel.quarkus.core.deployment.CamelBeanBuildItem;\n+import org.apache.camel.websocket.jsr356.JSR356WebSocketComponent;\n+\n+class WebSocketJSR356Processor {\n+\n+    private static final String FEATURE = \"camel-websocket-jsr356\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ServiceProviderBuildItem registerConfiguratorServiceProvider() {\n+        // TODO: Remove this. See https://github.com/quarkusio/quarkus/issues/7509\n+        return new ServiceProviderBuildItem(ServerEndpointConfig.Configurator.class.getName(),\n+                DefaultContainerConfigurator.class.getName());\n+    }\n+\n+    @Record(ExecutionTime.STATIC_INIT)\n+    @BuildStep\n+    public void createWebsocketEndpoints(List<ServletContextAttributeBuildItem> servletContext,\n+            CamelWebSocketJSR356Recorder recorder, CamelWebSocketJSR356Config config) {\n+        ServletContextAttributeBuildItem wsDeploymentInfoAttribute = servletContext\n+                .stream()\n+                .filter(context -> context.getKey().equals(WebSocketDeploymentInfo.ATTRIBUTE_NAME))\n+                .findFirst()\n+                .orElseThrow(() -> new IllegalStateException(\n+                        \"Servlet context attribute: \" + WebSocketDeploymentInfo.ATTRIBUTE_NAME + \" not found\"));\n+\n+        recorder.configureWebsocketEndpoints((WebSocketDeploymentInfo) wsDeploymentInfoAttribute.getValue(), config);\n+    }\n+\n+    @Record(ExecutionTime.STATIC_INIT)\n+    @BuildStep\n+    public void registerServerContainer(ServletDeploymentManagerBuildItem deploymentManager,\n+            CamelWebSocketJSR356Recorder recorder) {\n+        recorder.registerServerContainer(deploymentManager.getDeploymentManager());\n+    }\n+\n+    @Record(ExecutionTime.STATIC_INIT)\n+    @BuildStep\n+    public CamelBeanBuildItem createWebSocketComponent(CamelWebSocketJSR356Recorder recorder) {\n+        return new CamelBeanBuildItem(\"websocket-jsr356\", JSR356WebSocketComponent.class.getName(),\n+                recorder.createJsr356Component());\n+    }", "originalCommit": "0b80156c9eeeb2e0d4a5e8b4f1df6d4dd6b2818c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MjE2Nw==", "url": "https://github.com/apache/camel-quarkus/pull/833#discussion_r386372167", "bodyText": "Latest commit adds a build step for that.", "author": "jamesnetherton", "createdAt": "2020-03-02T12:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0NzI5OQ=="}], "type": "inlineReview"}, {"oid": "85cc14291e915c16f953968948df87e7911fb0c8", "url": "https://github.com/apache/camel-quarkus/commit/85cc14291e915c16f953968948df87e7911fb0c8", "message": "Add websocket-jsr356 extension\n\nFixes #613", "committedDate": "2020-03-02T12:47:30Z", "type": "commit"}, {"oid": "85cc14291e915c16f953968948df87e7911fb0c8", "url": "https://github.com/apache/camel-quarkus/commit/85cc14291e915c16f953968948df87e7911fb0c8", "message": "Add websocket-jsr356 extension\n\nFixes #613", "committedDate": "2020-03-02T12:47:30Z", "type": "forcePushed"}]}