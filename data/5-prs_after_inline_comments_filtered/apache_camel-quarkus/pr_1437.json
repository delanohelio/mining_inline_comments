{"pr_number": 1437, "pr_title": "Upgrade to Debezium 1.2.0.Final #1418", "pr_createdAt": "2020-07-01T10:25:58Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1437", "timeline": [{"oid": "5dc78415e34cf59430fbffced9265e07e5e3bd1d", "url": "https://github.com/apache/camel-quarkus/commit/5dc78415e34cf59430fbffced9265e07e5e3bd1d", "message": "Upgrade to Debezium 1.2.0.Beta2 #1418", "committedDate": "2020-06-29T07:36:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3MzMwNg==", "url": "https://github.com/apache/camel-quarkus/pull/1437#discussion_r448273306", "bodyText": "We tend to use Awaitility in situations like these so you may consider using it too on the next occasion.", "author": "ppalaga", "createdAt": "2020-07-01T10:35:42Z", "path": "integration-tests/debezium/src/test/java/org/apache/camel/quarkus/component/debezium/common/it/sqlserver/DebeziumSqlserverTest.java", "diffHunk": "@@ -89,15 +89,25 @@ protected String getCompanyTableName() {\n     @Order(0)\n     @EnabledIfSystemProperty(named = PROPERTY_JDBC, matches = \".*\")\n     public void testReceiveInitCompany() {\n-        //receive first record (operation r) for the init company - using larger timeout\n-        Response response = receiveResponse(\"/receiveAsRecord\");\n+        int i = 0;\n \n-        response.then()\n-                .statusCode(200);\n+        while (i++ < AbstractDebeziumTest.REPEAT_COUNT) {", "originalCommit": "5dc78415e34cf59430fbffced9265e07e5e3bd1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}