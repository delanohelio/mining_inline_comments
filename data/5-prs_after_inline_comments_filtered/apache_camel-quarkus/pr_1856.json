{"pr_number": 1856, "pr_title": "Geocoder native support fixes #1645", "pr_createdAt": "2020-09-30T16:00:22Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1856", "timeline": [{"oid": "62411c996dda3ba4aaf20d0ebfe2abb17c1d1156", "url": "https://github.com/apache/camel-quarkus/commit/62411c996dda3ba4aaf20d0ebfe2abb17c1d1156", "message": "Geocoder native support fixes #1645", "committedDate": "2020-09-30T15:56:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4Mjc4Nw==", "url": "https://github.com/apache/camel-quarkus/pull/1856#discussion_r498082787", "bodyText": "I think it'd be better to follow the pattern we use in other tests, where annotations determine whether the test should run. For example, see the Braintree test:\nhttps://github.com/apache/camel-quarkus/blob/master/integration-tests/braintree/src/test/java/org/apache/camel/quarkus/component/braintree/it/BraintreeTest.java#L29-L31\nhttps://github.com/apache/camel-quarkus/blob/master/integration-tests/braintree/src/test/java/org/apache/camel/quarkus/component/braintree/it/BraintreeIT.java#L23-L25\nCan you also add a README to the itest module directory that explains which environment variable(s) need to be set and how to obtain API keys etc. E.g like this:\nhttps://github.com/apache/camel-quarkus/blob/master/integration-tests/braintree/README.adoc", "author": "jamesnetherton", "createdAt": "2020-10-01T08:47:13Z", "path": "integration-tests/geocoder/src/test/java/org/apache/camel/quarkus/component/geocoder/it/GeocoderGoogleTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.geocoder.it;\n+\n+import io.quarkus.test.common.http.TestHTTPEndpoint;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.apache.camel.quarkus.component.geocoder.it.GeocoderGoogleResource.GOOGLE_GEOCODER_API_KEY;\n+import static org.hamcrest.Matchers.hasKey;\n+\n+@QuarkusTest\n+@TestHTTPEndpoint(GeocoderGoogleResource.class)\n+class GeocoderGoogleTest {\n+\n+    private static boolean enabled;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // enables the integration tests if an API key exists\n+        enabled = ConfigProvider.getConfig()\n+                .getOptionalValue(GOOGLE_GEOCODER_API_KEY, String.class).isPresent();\n+    }\n+\n+    @Test\n+    public void loadCurrentLocation() {\n+        // disable test if no API KEY\n+        if (enabled) {", "originalCommit": "62411c996dda3ba4aaf20d0ebfe2abb17c1d1156", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4NzMyNw==", "url": "https://github.com/apache/camel-quarkus/pull/1856#discussion_r498087327", "bodyText": "thanks!! I'll add that annotation then !!", "author": "zbendhiba", "createdAt": "2020-10-01T08:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4Mjc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTQxNA==", "url": "https://github.com/apache/camel-quarkus/pull/1856#discussion_r498095414", "bodyText": "You can use @EnabledIfEnvironmentVariable for disabling the test like we do in \n  \n    \n      camel-quarkus/integration-tests/braintree/src/test/java/org/apache/camel/quarkus/component/braintree/it/BraintreeIT.java\n    \n    \n         Line 25\n      in\n      1175fdc\n    \n    \n    \n    \n\n        \n          \n           @EnabledIfEnvironmentVariable(named = \"BRAINTREE_PRIVATE_KEY\", matches = \".+\") \n        \n    \n  \n\n\nIf you do that that way, the test app is not started at all and you actually do not need to check in the app whether property is set.\nI think in case the GOOGLE_GEOCODER_API_KEY is not provided, the test should run against a mock API, something like we do with Telegram and elsewhere. If a mock testcontainer is available we should use it. No need to do this now, I'll file a followup.", "author": "ppalaga", "createdAt": "2020-10-01T09:08:26Z", "path": "integration-tests/geocoder/src/test/java/org/apache/camel/quarkus/component/geocoder/it/GeocoderGoogleTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.geocoder.it;\n+\n+import io.quarkus.test.common.http.TestHTTPEndpoint;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.apache.camel.quarkus.component.geocoder.it.GeocoderGoogleResource.GOOGLE_GEOCODER_API_KEY;\n+import static org.hamcrest.Matchers.hasKey;\n+\n+@QuarkusTest\n+@TestHTTPEndpoint(GeocoderGoogleResource.class)\n+class GeocoderGoogleTest {\n+\n+    private static boolean enabled;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // enables the integration tests if an API key exists\n+        enabled = ConfigProvider.getConfig()\n+                .getOptionalValue(GOOGLE_GEOCODER_API_KEY, String.class).isPresent();", "originalCommit": "62411c996dda3ba4aaf20d0ebfe2abb17c1d1156", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwNTUwOA==", "url": "https://github.com/apache/camel-quarkus/pull/1856#discussion_r498105508", "bodyText": "OK", "author": "zbendhiba", "createdAt": "2020-10-01T09:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTQxNA=="}], "type": "inlineReview"}, {"oid": "846ec75963df68d24c885c93e2b428b61b1b2323", "url": "https://github.com/apache/camel-quarkus/commit/846ec75963df68d24c885c93e2b428b61b1b2323", "message": "Update integration-tests/geocoder/src/main/resources/application.properties\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>", "committedDate": "2020-10-01T09:29:19Z", "type": "commit"}, {"oid": "01368c412f42accdd7dfdb14bd47d535c67facbf", "url": "https://github.com/apache/camel-quarkus/commit/01368c412f42accdd7dfdb14bd47d535c67facbf", "message": "Update extensions/geocoder/runtime/src/main/doc/configuration.adoc\n\nCo-authored-by: Peter Palaga <ppalaga@redhat.com>", "committedDate": "2020-10-01T09:30:32Z", "type": "commit"}, {"oid": "3f0810f6b807770704958746b1519313a0435486", "url": "https://github.com/apache/camel-quarkus/commit/3f0810f6b807770704958746b1519313a0435486", "message": "Geocoder: env variable for Google API key", "committedDate": "2020-10-01T12:32:49Z", "type": "commit"}]}