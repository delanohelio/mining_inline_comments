{"pr_number": 3487, "pr_title": "[bitmex, core] Improved getFundingRecordHistory of BitMEX", "pr_createdAt": "2020-04-11T15:23:56Z", "pr_url": "https://github.com/knowm/XChange/pull/3487", "timeline": [{"oid": "87f451e1e68ec36c8f56cbc0ce5684efaf20320e", "url": "https://github.com/knowm/XChange/commit/87f451e1e68ec36c8f56cbc0ce5684efaf20320e", "message": "[bitmex] Support paging form FundingRecords", "committedDate": "2020-04-11T12:38:33Z", "type": "commit"}, {"oid": "97e0fe46d6c34719a573760b83c978caea42e665", "url": "https://github.com/knowm/XChange/commit/97e0fe46d6c34719a573760b83c978caea42e665", "message": "[bitmex] Replaced multiple currency adaptions with adapter method", "committedDate": "2020-04-11T12:40:19Z", "type": "commit"}, {"oid": "905a114ae8c9cf2b4836e40918bfeedcf72f6b18", "url": "https://github.com/knowm/XChange/commit/905a114ae8c9cf2b4836e40918bfeedcf72f6b18", "message": "[core] Added missing FundingRecord.Types", "committedDate": "2020-04-11T15:07:20Z", "type": "commit"}, {"oid": "9dbf5bae574db6f107660ee106839a757359638c", "url": "https://github.com/knowm/XChange/commit/9dbf5bae574db6f107660ee106839a757359638c", "message": "[bitmex] Improved getFundingHistory to include all types and status", "committedDate": "2020-04-11T15:09:04Z", "type": "commit"}, {"oid": "2872f45c17f42be313fb79513862983b63fb001f", "url": "https://github.com/knowm/XChange/commit/2872f45c17f42be313fb79513862983b63fb001f", "message": "[bitmex] Corrected parsing of FundingRecord timestamp", "committedDate": "2020-04-11T16:06:00Z", "type": "commit"}, {"oid": "a02916f1417fb3da79d3ae1639c990e5ac0f263b", "url": "https://github.com/knowm/XChange/commit/a02916f1417fb3da79d3ae1639c990e5ac0f263b", "message": "[core] Fixed Type in new Type", "committedDate": "2020-04-11T17:38:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NDI2Ng==", "url": "https://github.com/knowm/XChange/pull/3487#discussion_r409354266", "bodyText": "we could just use Date instead of String for the WalletTransaction#transactTime attribute and proper Jackson annotations to make Jackson parse this", "author": "walec51", "createdAt": "2020-04-16T07:54:42Z", "path": "xchange-bitmex/src/main/java/org/knowm/xchange/bitmex/BitmexAdapters.java", "diffHunk": "@@ -352,37 +372,58 @@ private static OrderType convertType(String side) {\n   public static FundingRecord adaptFundingRecord(BitmexWalletTransaction walletTransaction) {\n \n     String datePattern = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\";\n-\n     SimpleDateFormat dateFormat = new SimpleDateFormat(datePattern);\n-    Date dateFunding = null;\n+    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n \n-    try {\n-      dateFunding = dateFormat.parse(walletTransaction.getTransactTime());\n-    } catch (ParseException e) {\n-      throw new IllegalArgumentException(e);\n+    Date dateFunding = null;\n+    if (walletTransaction.getTransactTime() != null) {\n+      try {\n+        dateFunding = dateFormat.parse(walletTransaction.getTransactTime());", "originalCommit": "a02916f1417fb3da79d3ae1639c990e5ac0f263b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2OTUxOQ==", "url": "https://github.com/knowm/XChange/pull/3487#discussion_r410669519", "bodyText": "Done, see 8014b95", "author": "Yampersand", "createdAt": "2020-04-18T08:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NDI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjM5NQ==", "url": "https://github.com/knowm/XChange/pull/3487#discussion_r409356395", "bodyText": "is this something that exists on many exchanges with derivatives or is it something specific to bitmex?\ncould you provide an example of another exchange that has a similar type in its API?", "author": "walec51", "createdAt": "2020-04-16T07:57:58Z", "path": "xchange-core/src/main/java/org/knowm/xchange/dto/account/FundingRecord.java", "diffHunk": "@@ -304,7 +304,13 @@ public String toString() {\n     INTERNAL_WITHDRAWAL(false),\n \n     /** Used for transfers between exchanges accounts */\n-    INTERNAL_DEPOSIT(true);\n+    INTERNAL_DEPOSIT(true),\n+\n+    /** Used for realised losses from derivatives */\n+    REALISED_LOSS(false),\n+\n+    /** Used for realised profits from derivatives */\n+    REALISED_PROFIT(true);", "originalCommit": "a02916f1417fb3da79d3ae1639c990e5ac0f263b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzIzNg==", "url": "https://github.com/knowm/XChange/pull/3487#discussion_r410673236", "bodyText": "Realised Profit and Loss, Realised PNL or RPL, is a standard term in trading derivatives. (There is also UnrealisedPNL but I think that can be represented through to status PROCESSING)\nI know that at least Deribit and CMC Markets (not support jet) allow trading with derivatives. Deribits explicitly calls those earning RPL in their UI. Through their API they return a type called settlement with has a field profit_loss:\n{\n\"type\":\"settlement\"\n\"timestamp\":1587110300141\n\"session_profit_loss\":4469.243150033\n\"profit_loss\":14.925158857\n\"position\":78675\n\"mark_price\":169.98\n\"instrument_name\":\"ETH-PERPETUAL\"\n\"index_price\":170.06\n\"funding\":-0.008446859\n}", "author": "Yampersand", "createdAt": "2020-04-18T09:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg4MDk3Mg==", "url": "https://github.com/knowm/XChange/pull/3487#discussion_r410880972", "bodyText": "ok, thank you for explaining", "author": "walec51", "createdAt": "2020-04-19T11:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjM5NQ=="}], "type": "inlineReview"}, {"oid": "8014b9504e8811a175bed5ec506bd54f878ccb27", "url": "https://github.com/knowm/XChange/commit/8014b9504e8811a175bed5ec506bd54f878ccb27", "message": "[bitmex] Improved JSON deserializaion", "committedDate": "2020-04-18T08:43:14Z", "type": "commit"}]}