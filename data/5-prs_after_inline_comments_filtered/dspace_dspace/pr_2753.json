{"pr_number": 2753, "pr_title": "DS-4493 prevent empty string assignment for language", "pr_createdAt": "2020-05-03T15:24:09Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2753", "timeline": [{"oid": "ae7a22d25f725bb03e7925c3bac4a7b6e5c4746a", "url": "https://github.com/DSpace/DSpace/commit/ae7a22d25f725bb03e7925c3bac4a7b6e5c4746a", "message": "DS-4493 prevent empty string assignment for language", "committedDate": "2020-04-30T06:52:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMjI4OQ==", "url": "https://github.com/DSpace/DSpace/pull/2753#discussion_r419432289", "bodyText": "I would suggest something like lang3.isNotBlank() rather than just comparing with \"\", to catch whitespace of nonzero length.  I think I've actually seen this happen.\n(Separately, ought we to have Metadatavalue require a non-null language to be a valid ISO 639-1 code?)", "author": "mwoodiupui", "createdAt": "2020-05-04T13:24:24Z", "path": "dspace-api/src/main/java/org/dspace/app/itemimport/ItemImportServiceImpl.java", "diffHunk": "@@ -725,7 +725,14 @@ protected void addDCValue(Context c, Item i, String schema, Node n) throws Trans\n         String qualifier = getAttributeValue(n, \"qualifier\"); //NodeValue();\n         // //getElementData(n,\n         // \"qualifier\");\n-        String language = getAttributeValue(n, \"language\");\n+\n+        String language = null;\n+\n+        //DS-4493 protection against initialising as an empty string\n+        if (!\"\".equals(getAttributeValue(n, \"language\"))){", "originalCommit": "ae7a22d25f725bb03e7925c3bac4a7b6e5c4746a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4NDA1OQ==", "url": "https://github.com/DSpace/DSpace/pull/2753#discussion_r419484059", "bodyText": "+1 on using isNotBlank(). Something similar was done in #2350.", "author": "nwoodward", "createdAt": "2020-05-04T14:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMjI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2NTM1OQ==", "url": "https://github.com/DSpace/DSpace/pull/2753#discussion_r420865359", "bodyText": "@bram-atmire : I agree with the feedback of @mwoodiupui and @nwoodward here.  This should be updated.  It also looks like it may need porting to master.", "author": "tdonohue", "createdAt": "2020-05-06T15:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMjI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg3ODg3Mw==", "url": "https://github.com/DSpace/DSpace/pull/2753#discussion_r420878873", "bodyText": "Thanks @mwoodiupui @nwoodward @tdonohue , agreed & resolved.", "author": "bram-atmire", "createdAt": "2020-05-06T15:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMjI4OQ=="}], "type": "inlineReview"}, {"oid": "2ec197e06e78b2553001a2b0f15208a365911edd", "url": "https://github.com/DSpace/DSpace/commit/2ec197e06e78b2553001a2b0f15208a365911edd", "message": "DS-4493 improving empty string check", "committedDate": "2020-05-06T15:21:49Z", "type": "commit"}]}