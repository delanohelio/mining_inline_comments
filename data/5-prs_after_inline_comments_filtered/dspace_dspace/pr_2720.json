{"pr_number": 2720, "pr_title": "Upgrade backend to Spring Boot v2.2.6, Spring v5.2.5, Spring HATEOAS v1.0.3", "pr_createdAt": "2020-03-23T22:14:41Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2720", "timeline": [{"oid": "3d4eb91efb2686e9df923627a9eb86d9d8cbe400", "url": "https://github.com/DSpace/DSpace/commit/3d4eb91efb2686e9df923627a9eb86d9d8cbe400", "message": "Upgrade Spring v5.2.4, Spring Boot v2.2.5, HAL Browser v3.2.5, Mockito 3.1.0", "committedDate": "2020-04-22T14:11:05Z", "type": "commit"}, {"oid": "5420408c82ff6360c45720158a46fabbb9ce5bba", "url": "https://github.com/DSpace/DSpace/commit/5420408c82ff6360c45720158a46fabbb9ce5bba", "message": "Updating code to Spring HATEOAS v1.0 compatibility", "committedDate": "2020-04-22T14:11:06Z", "type": "commit"}, {"oid": "4503cf800bcf67d771f2575ce9b770c0324cd157", "url": "https://github.com/DSpace/DSpace/commit/4503cf800bcf67d771f2575ce9b770c0324cd157", "message": "Fix compilation errors in Tests", "committedDate": "2020-04-22T14:11:06Z", "type": "commit"}, {"oid": "79678710336d95fd9b9a90d6f202b1a5adfd9060", "url": "https://github.com/DSpace/DSpace/commit/79678710336d95fd9b9a90d6f202b1a5adfd9060", "message": "Correct Spring Security version for REST API. Realign related dependencies", "committedDate": "2020-04-22T14:11:06Z", "type": "commit"}, {"oid": "95e25f2fcc2db0cd9b95c6443889d038f61001bf", "url": "https://github.com/DSpace/DSpace/commit/95e25f2fcc2db0cd9b95c6443889d038f61001bf", "message": "Pin version of Jetty to same version used in Solr. Update IT settings", "committedDate": "2020-04-22T14:11:06Z", "type": "commit"}, {"oid": "32f5d62963783c234baea12ad499e185464b4727", "url": "https://github.com/DSpace/DSpace/commit/32f5d62963783c234baea12ad499e185464b4727", "message": "Ensure getRel() always uses value() to obtain String value", "committedDate": "2020-04-22T14:11:06Z", "type": "commit"}, {"oid": "48c5e6953f2874073c0c1402a906cf63355e55a2", "url": "https://github.com/DSpace/DSpace/commit/48c5e6953f2874073c0c1402a906cf63355e55a2", "message": "Cleanup: Reorder/organize POM properties", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "5feeb89d1381ba3de27ffb86ff052558dc2d68dd", "url": "https://github.com/DSpace/DSpace/commit/5feeb89d1381ba3de27ffb86ff052558dc2d68dd", "message": "Remove jsonpath from Parent POM dependencies. It strangely causes JSONPath `NoClassDefFoundError`s in Spring HATEOAS during runtime. Removing from Parent POM (but leaving in dspace-server-webapp) resolves those errors.", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "967b9debd01442c87f4614051b72b8a55a1471c4", "url": "https://github.com/DSpace/DSpace/commit/967b9debd01442c87f4614051b72b8a55a1471c4", "message": "Replacement for Identifiable interface, which was removed in Spring HATEOAS v1. Ensure any BaseObjectRest is referenced by identifier like previously.", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "3804b358546b4b9e52dcd1efbc7091e8cce55661", "url": "https://github.com/DSpace/DSpace/commit/3804b358546b4b9e52dcd1efbc7091e8cce55661", "message": "Checkstyle fixes", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "c571e0927ac4581459bc48bd74cdc241956049ae", "url": "https://github.com/DSpace/DSpace/commit/c571e0927ac4581459bc48bd74cdc241956049ae", "message": "Fix broken/incorrect mock statement", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "88855a8fe1caa9337217cf577566e8fc4f7da054", "url": "https://github.com/DSpace/DSpace/commit/88855a8fe1caa9337217cf577566e8fc4f7da054", "message": "Minor update to recent code based on update to Spring Boot", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "9219657ede822bbda35fab68c74b7d2d029477b9", "url": "https://github.com/DSpace/DSpace/commit/9219657ede822bbda35fab68c74b7d2d029477b9", "message": "Fix dependencies in /dspace/modules/server.  Minor dependency reordering", "committedDate": "2020-04-22T14:11:07Z", "type": "commit"}, {"oid": "edcefe188593c0eff2b1d4811fae0a304ba5f251", "url": "https://github.com/DSpace/DSpace/commit/edcefe188593c0eff2b1d4811fae0a304ba5f251", "message": "Fix dependency convergence issue between dspace-rest and dspace-oai", "committedDate": "2020-04-22T14:11:08Z", "type": "commit"}, {"oid": "ee0d6f03bd630b7330a26bbfd78967c009e4ca93", "url": "https://github.com/DSpace/DSpace/commit/ee0d6f03bd630b7330a26bbfd78967c009e4ca93", "message": "Rename DSpaceRelProvider to DSpaceLinkRelationProvider to match HATEOAS classes", "committedDate": "2020-04-22T14:44:40Z", "type": "commit"}, {"oid": "75d65b0f702c8f17a941099b58b0260c2fca53cd", "url": "https://github.com/DSpace/DSpace/commit/75d65b0f702c8f17a941099b58b0260c2fca53cd", "message": "Spring HATEOAS updates for new code (after rebase on master)", "committedDate": "2020-04-22T14:45:20Z", "type": "commit"}, {"oid": "75d65b0f702c8f17a941099b58b0260c2fca53cd", "url": "https://github.com/DSpace/DSpace/commit/75d65b0f702c8f17a941099b58b0260c2fca53cd", "message": "Spring HATEOAS updates for new code (after rebase on master)", "committedDate": "2020-04-22T14:45:20Z", "type": "forcePushed"}, {"oid": "eb9ae8e14d925cf419ace195eaf43a1bf6ef6421", "url": "https://github.com/DSpace/DSpace/commit/eb9ae8e14d925cf419ace195eaf43a1bf6ef6421", "message": "Upgrade to latest version of Spring dependencies (as new versions have been released)", "committedDate": "2020-04-22T15:25:13Z", "type": "commit"}, {"oid": "e89b8d39437a7fa4925cd428fcf08d2614bdd8e6", "url": "https://github.com/DSpace/DSpace/commit/e89b8d39437a7fa4925cd428fcf08d2614bdd8e6", "message": "Checkstyle fixes to previous updates", "committedDate": "2020-04-22T15:32:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA5OTA0Mw==", "url": "https://github.com/DSpace/DSpace/pull/2720#discussion_r415099043", "bodyText": "This method is new and potentially alter the existing implementation, Do you have identified a specific use case where this change is required? is this fixing an existing bug?", "author": "abollini", "createdAt": "2020-04-25T16:48:38Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/utils/Utils.java", "diffHunk": "@@ -159,32 +158,64 @@\n      * @return the existing instance if it is not null, a default pageable instance otherwise.\n      */\n     public Pageable getPageable(@Nullable Pageable optionalPageable) {\n-        return optionalPageable != null ? optionalPageable : new PageRequest(0, DEFAULT_PAGE_SIZE);\n-    }\n-\n-    public Link linkToSingleResource(DSpaceResource r, String rel) {\n-        RestAddressableModel data = r.getContent();\n-        return linkToSingleResource(data, rel);\n+        return optionalPageable != null ? optionalPageable : PageRequest.of(0, DEFAULT_PAGE_SIZE);\n     }\n \n+    /**\n+     * Create a HAL Link to a single resource\n+     * @param data the resource itself\n+     * @param rel name of the link relation to create\n+     * @return created Link object\n+     */\n     public Link linkToSingleResource(RestAddressableModel data, String rel) {\n-        return linkTo(data.getController(), data.getCategory(), data.getTypePlural()).slash(data)\n+        // Create link using Spring HATEOAS link builder\n+        return linkTo(data.getController(), data.getCategory(), data.getTypePlural()).slash(getIdentifierForLink(data))\n                                                                                      .withRel(rel);\n     }\n \n+    /**\n+     * Create a HAL Link to a subresource of given resource. This method assumes the name & link to the subresource\n+     * are both the same string value. See other linkToSubResource method if they are different.\n+     * @param data main resource\n+     * @param rel name/subpath of the subresource (assumed to be the same)\n+     * @return created Link object\n+     */\n     public Link linkToSubResource(RestAddressableModel data, String rel) {\n         return linkToSubResource(data, rel, rel);\n     }\n \n+    /**\n+     * Create a HAL Link to a subresource of given resource using given path name and link name\n+     * @param data main resource\n+     * @param rel name of the subresource link relation to create\n+     * @param path subpath for the subresource\n+     * @return created Link object\n+     */\n     public Link linkToSubResource(RestAddressableModel data, String rel, String path) {\n-        return linkTo(data.getController(), data.getCategory(), data.getTypePlural()).slash(data).slash(path)\n+        // Create link using Spring HATEOAS link builder\n+        return linkTo(data.getController(), data.getCategory(), data.getTypePlural()).slash(getIdentifierForLink(data))\n+                                                                                     .slash(path)\n                                                                                      .withRel(rel);\n     }\n \n+    /**\n+     * Returns an identifier for a given resource, to be used in a Link.\n+     * @param data resource to identify\n+     * @return identifier, which is either an ID (if exists) or string representation of the object.\n+     */\n+    private Serializable getIdentifierForLink(RestAddressableModel data) {", "originalCommit": "e89b8d39437a7fa4925cd428fcf08d2614bdd8e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg4NjkwNg==", "url": "https://github.com/DSpace/DSpace/pull/2720#discussion_r415886906", "bodyText": "@abollini : This was required by refactoring in Spring HATEOAS.  Notice this is a private method.  It's used by the two methods just before it to provide a valid input to the .slash() method in Spring HATEOAS (which changed its method params).\nThe thing that necessitated this was that Spring HATEOAS removed the Identifiable interface, which previously allowed us to pass RestAddressableModel objects (which were Identifiable) into the .slash() method and similar.  So, this private method is replacing Identifiable.  See this commit  967b9de and the changes to BaseObjectRest class in this PR.", "author": "tdonohue", "createdAt": "2020-04-27T14:58:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA5OTA0Mw=="}], "type": "inlineReview"}]}