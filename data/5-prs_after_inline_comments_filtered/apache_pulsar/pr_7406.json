{"pr_number": 7406, "pr_title": "Improved in max-pending-bytes mechanism for broker", "pr_createdAt": "2020-07-01T07:01:59Z", "pr_url": "https://github.com/apache/pulsar/pull/7406", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5NTY0Mw==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r448195643", "bodyText": "What's the advantage of this over \"new HashSet<>()\"?", "author": "ivankelly", "createdAt": "2020-07-01T08:16:56Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -167,10 +171,26 @@\n     private volatile boolean autoReadDisabledRateLimiting = false;\n     private FeatureFlags features;\n     // Flag to manage throttling-publish-buffer by atomically enable/disable read-channel.\n-    private volatile boolean autoReadDisabledPublishBufferLimiting = false;\n-    private static final AtomicLongFieldUpdater<ServerCnx> MSG_PUBLISH_BUFFER_SIZE_UPDATER =\n-            AtomicLongFieldUpdater.newUpdater(ServerCnx.class, \"messagePublishBufferSize\");\n-    private volatile long messagePublishBufferSize = 0;\n+    private boolean autoReadDisabledPublishBufferLimiting = false;\n+\n+    private final long maxPendingBytesPerThread;\n+    private final long resumeThresholdPendingBytesPerThread;\n+\n+    // Number of bytes pending to be published from a single specific IO thread.\n+    private static final FastThreadLocal<MutableLong> pendingBytesPerThread = new FastThreadLocal<MutableLong>() {\n+        @Override\n+        protected MutableLong initialValue() throws Exception {\n+            return new MutableLong();\n+        }\n+    };\n+\n+    // A set of connections tied to the current thread\n+    private static final FastThreadLocal<Set<ServerCnx>> cnxsPerThread = new FastThreadLocal<Set<ServerCnx>>() {\n+        @Override\n+        protected Set<ServerCnx> initialValue() throws Exception {\n+            return Collections.newSetFromMap(new IdentityHashMap<>());", "originalCommit": "f7060160c44b4f8366eff31b4e1ce6cd7ddb1a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMjg0OA==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r448332848", "bodyText": "Since ServerCnx doesn't have a hashCode() method I thought to be on the safe side to just make sure to use ==  operator instead of hashing. Honestly, I'm not 100% sure that would make difference in practice.", "author": "merlimat", "createdAt": "2020-07-01T12:36:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5NTY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyMDI5Mw==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r448220293", "bodyText": "Is this exported via prometheus? It would be better to have separate event counters for pause and resume so that if pausing happens between prometheus pulls we can see it.", "author": "ivankelly", "createdAt": "2020-07-01T08:58:41Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2307,4 +2253,16 @@ private boolean isSystemTopic(String topic) {\n     public void setInterceptor(BrokerInterceptor interceptor) {\n         this.interceptor = interceptor;\n     }\n+\n+    public void pausedConnections(int numberOfConnections) {\n+        pausedConnections.addAndGet(numberOfConnections);", "originalCommit": "f7060160c44b4f8366eff31b4e1ce6cd7ddb1a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMzcyMQ==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r448333721", "bodyText": "Good point. I just exposed it here to for validation in the tests, though it makes sense to expose the 2 counters.", "author": "merlimat", "createdAt": "2020-07-01T12:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyMDI5Mw=="}], "type": "inlineReview"}, {"oid": "77acc92df631378849ca7d5b8aace67adb476035", "url": "https://github.com/apache/pulsar/commit/77acc92df631378849ca7d5b8aace67adb476035", "message": "Improved in max-pending-bytes mechanism for broker", "committedDate": "2021-04-30T22:03:51Z", "type": "commit"}, {"oid": "77acc92df631378849ca7d5b8aace67adb476035", "url": "https://github.com/apache/pulsar/commit/77acc92df631378849ca7d5b8aace67adb476035", "message": "Improved in max-pending-bytes mechanism for broker", "committedDate": "2021-04-30T22:03:51Z", "type": "forcePushed"}, {"oid": "fb620e2f45d4b16c32dc998a26e529f007ac0911", "url": "https://github.com/apache/pulsar/commit/fb620e2f45d4b16c32dc998a26e529f007ac0911", "message": "Fixed imports", "committedDate": "2021-04-30T22:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDQ0ODE5Mw==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r624448193", "bodyText": "The reading frequency here should be very low, only used in unit tests or metrics, why not use longAdder", "author": "315157973", "createdAt": "2021-05-01T08:17:51Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -269,18 +267,13 @@\n     private Channel listenChannelTls;\n \n     private boolean preciseTopicPublishRateLimitingEnable;\n-    private final long maxMessagePublishBufferBytes;\n-    private final long resumeProducerReadMessagePublishBufferBytes;\n-    private volatile boolean reachMessagePublishBufferThreshold;\n+    private final AtomicInteger pausedConnections = new AtomicInteger();", "originalCommit": "fb620e2f45d4b16c32dc998a26e529f007ac0911", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDU3NTkwMg==", "url": "https://github.com/apache/pulsar/pull/7406#discussion_r624575902", "bodyText": "Good point, changed that.", "author": "merlimat", "createdAt": "2021-05-01T22:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDQ0ODE5Mw=="}], "type": "inlineReview"}, {"oid": "97dba5a60efadc8fdbdc0be3cfa971f23ab833af", "url": "https://github.com/apache/pulsar/commit/97dba5a60efadc8fdbdc0be3cfa971f23ab833af", "message": "Switched to LongAdder", "committedDate": "2021-05-01T22:37:25Z", "type": "commit"}]}