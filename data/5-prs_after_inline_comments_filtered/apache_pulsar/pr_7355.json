{"pr_number": 7355, "pr_title": "Handling error in creation of non-durable cursor", "pr_createdAt": "2020-06-24T23:59:03Z", "pr_url": "https://github.com/apache/pulsar/pull/7355", "timeline": [{"oid": "7f84ff4e157936038e1526ab974b2b4003ce9822", "url": "https://github.com/apache/pulsar/commit/7f84ff4e157936038e1526ab974b2b4003ce9822", "message": "Handling error in creation of non-durable cursor", "committedDate": "2020-06-24T23:54:20Z", "type": "commit"}, {"oid": "2216dd1cfc1f9c53346414305413f49c1957ac10", "url": "https://github.com/apache/pulsar/commit/2216dd1cfc1f9c53346414305413f49c1957ac10", "message": "Fixed tests", "committedDate": "2020-06-25T04:44:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTk1MzIzMQ==", "url": "https://github.com/apache/pulsar/pull/7355#discussion_r639953231", "bodyText": "@merlimat - I know this has been merged for a while, but I was reading through this class today, and I am concerned about a possible race condition that would lead to an incorrect update to the subscriptions map.\nWith this PR, the subscriptions map is no longer updated using the computeIfAbsent method here, but is instead modified with a get and then a subsequent put. The getDurableSubscription updates the subscriptions map concurrently as well. I believe this opens us up to a race under the following conditions:\n\nWe call get for a subscription on line 695, and get null.\nThen, a durable subscription with the same name is added to the subscriptions map on line 665.\nThen, the non durable subscription is put into the subscriptions map on new line 722, and in doing so, overwrites the durable subscription of the same name.\n\nDo you agree this is a risk here? If so, I will work on contributing a fix. I wanted to check first though, just in case there is context I'm missing. Thanks!", "author": "michaeljmarshall", "createdAt": "2021-05-26T17:18:33Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -688,12 +688,13 @@ public void openCursorFailed(ManagedLedgerException exception, Object ctx) {\n \n     private CompletableFuture<? extends Subscription> getNonDurableSubscription(String subscriptionName,\n             MessageId startMessageId, long startMessageRollbackDurationSec) {\n-        CompletableFuture<Subscription> subscriptionFuture = new CompletableFuture<>();\n         log.info(\"[{}][{}] Creating non-durable subscription at msg id {}\", topic, subscriptionName, startMessageId);\n \n         synchronized (ledger) {\n             // Create a new non-durable cursor only for the first consumer that connects\n-            Subscription subscription = subscriptions.computeIfAbsent(subscriptionName, name -> {", "originalCommit": "2216dd1cfc1f9c53346414305413f49c1957ac10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}