{"pr_number": 6345, "pr_title": "[Java Reader Client] Start reader inside batch result in read first message in batch.", "pr_createdAt": "2020-02-17T16:00:35Z", "pr_url": "https://github.com/apache/pulsar/pull/6345", "timeline": [{"oid": "86b513cf137072db54c6e73a746b5ef60c45f8e5", "url": "https://github.com/apache/pulsar/commit/86b513cf137072db54c6e73a746b5ef60c45f8e5", "message": "test case to reproduce the bug first", "committedDate": "2020-02-17T15:55:10Z", "type": "commit"}, {"oid": "a17c1cd8faedd2ef884d6b61c107d1245efc6210", "url": "https://github.com/apache/pulsar/commit/a17c1cd8faedd2ef884d6b61c107d1245efc6210", "message": "fix consumer impl skip", "committedDate": "2020-02-18T04:12:32Z", "type": "commit"}, {"oid": "60af2b326663a82abfa7ec70973a568d08bd2b73", "url": "https://github.com/apache/pulsar/commit/60af2b326663a82abfa7ec70973a568d08bd2b73", "message": "fix consumer test", "committedDate": "2020-02-18T06:54:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUwNTA4MA==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r380505080", "bodyText": "Due to this method does not only support for non-durable subscription, so is it better to named isSameEntry()?", "author": "codelipenghui", "createdAt": "2020-02-18T07:52:34Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -1091,8 +1091,8 @@ private boolean isPriorBatchIndex(long idx) {\n         return resetIncludeHead ? idx < startMessageId.getBatchIndex() : idx <= startMessageId.getBatchIndex();\n     }\n \n-    private boolean isResetIncludedAndSameEntryLedger(MessageIdData messageId) {\n-        return !resetIncludeHead && startMessageId != null\n+    private boolean isNonDurableAndSameEntryAndLedger(MessageIdData messageId) {", "originalCommit": "60af2b326663a82abfa7ec70973a568d08bd2b73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUwNzIyNw==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r380507227", "bodyText": "Fixed.", "author": "yjshen", "createdAt": "2020-02-18T07:58:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUwNTA4MA=="}], "type": "inlineReview"}, {"oid": "c2ab1b4ca66cffdd9516e7dde90a07c96ca90ba1", "url": "https://github.com/apache/pulsar/commit/c2ab1b4ca66cffdd9516e7dde90a07c96ca90ba1", "message": "rename method", "committedDate": "2020-02-18T07:57:34Z", "type": "commit"}, {"oid": "91f75d86246d80591cc14bd5fdf273ad58bc2724", "url": "https://github.com/apache/pulsar/commit/91f75d86246d80591cc14bd5fdf273ad58bc2724", "message": "fix seek logic", "committedDate": "2020-02-20T12:16:33Z", "type": "commit"}, {"oid": "9c2d6b836919b97b3483aa0714afd350abcf2cc3", "url": "https://github.com/apache/pulsar/commit/9c2d6b836919b97b3483aa0714afd350abcf2cc3", "message": "Merge remote-tracking branch 'apache/master' into reader_seek_inside_batch", "committedDate": "2020-02-21T01:18:26Z", "type": "commit"}, {"oid": "669f78763f6cc02e62d22b4269efb63ff5b488a5", "url": "https://github.com/apache/pulsar/commit/669f78763f6cc02e62d22b4269efb63ff5b488a5", "message": "Merge remote-tracking branch 'apache/master' into reader_seek_inside_batch", "committedDate": "2020-02-21T04:19:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5OTIwMg==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r382899202", "bodyText": "Is it possible only add seekMessageId to achieve the seek logic?", "author": "codelipenghui", "createdAt": "2020-02-22T09:15:07Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -122,6 +123,9 @@\n     private final SubscriptionMode subscriptionMode;\n     private volatile BatchMessageIdImpl startMessageId;\n \n+    private volatile BatchMessageIdImpl seekMessageId;\n+    private final AtomicBoolean duringSeek;", "originalCommit": "91f75d86246d80591cc14bd5fdf273ad58bc2724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwMzAwNQ==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r382903005", "bodyText": "I don't think so. Without the flag, we cannot tell if seekMessageId or lastDequeueMessage should be used as the start message id.", "author": "yjshen", "createdAt": "2020-02-22T10:27:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5OTIwMg=="}], "type": "inlineReview"}, {"oid": "9320b6e892f3d5d864129b098b306def13080005", "url": "https://github.com/apache/pulsar/commit/9320b6e892f3d5d864129b098b306def13080005", "message": "Merge remote-tracking branch 'apache/master' into reader_seek_inside_batch", "committedDate": "2020-02-22T13:16:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394247606", "bodyText": "Hi! Looks like this commit is a breaking change, it broke my integration test for Reader. The logic of unit test is as follows\n\nRead 10 messages\nSeek back to the first\nRead 10 messages again\nEarlier hasMessageAvailableAsync returned true on this line because lastDequeuedMessage was reset, but now it returns false which leads to getLastMessageIdAsync execution. And because seek drops connection, getLastMessageIdAsync fails for me with server error \"Error: MetadataError. Message: Consumer not found\", sot the test fails", "author": "Lanayx", "createdAt": "2020-03-18T10:33:37Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -1520,7 +1536,10 @@ public void seek(long timestamp) throws PulsarClientException {\n         cnx.sendRequestWithId(seek, requestId).thenRun(() -> {\n             log.info(\"[{}][{}] Successfully reset subscription to message id {}\", topic, subscription, messageId);\n             acknowledgmentsGroupingTracker.flushAndClean();\n-            lastDequeuedMessage = messageId;\n+\n+            seekMessageId = new BatchMessageIdImpl((MessageIdImpl) messageId);\n+            duringSeek.set(true);", "originalCommit": "9320b6e892f3d5d864129b098b306def13080005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MDg5MQ==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394270891", "bodyText": "The logic w/o this PR is problematic because lastDequeueMessage is insufficient to express seek, startMessageId and normal dequeue behavior. Therefore lead the bug as this PR aims to fix.\nTherefore, If it breaks your test, please reconsider your code logic by using the seekMessageId or lastDequeueMessage. Since the master branch is in the health state", "author": "yjshen", "createdAt": "2020-03-18T11:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4MTc1MQ==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394281751", "bodyText": "Yes, I like this improvement, just want to add that additional effort needs to be done here to make it work properly, since Seek+Read is a very common reader pattern. If I put a small delay between 2 and 3 step, then everything works properly, because connection State changes to Connecting and getLastMessageIdAsync is retried, but if hasMessageAvailableAsync is called before state change, then I get the error.\nTo make it clear - I don't run the code from the branch, but porting changes to .net client library, so this is how I found the issue, but it looks like this issue logically exists for Java client as well.", "author": "Lanayx", "createdAt": "2020-03-18T11:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwNzQ0MA==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394307440", "bodyText": "Does the test fail if the reader is used concurrently by multiple readers? Link to The line in the first comment is broken.", "author": "yjshen", "createdAt": "2020-03-18T12:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQxNzkzNg==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394417936", "bodyText": "Sorry, fixed the link. No, reader is used by single thread, it waits for seek result and immediately calls hasMessageAvailableAsync", "author": "Lanayx", "createdAt": "2020-03-18T15:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NjUxMg==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394666512", "bodyText": "There is another issue with the same test with Batching enabled - as long as lastDequeueMessage is not reset, it stays on last BatchMessageIdImpl while getLastMessageIdAsync always returns MessageIdImpl so this check returns false because types of messageIds are different and I get 0 messages instead of 10 on the 3d step", "author": "Lanayx", "createdAt": "2020-03-18T22:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg0ODgwMg==", "url": "https://github.com/apache/pulsar/pull/6345#discussion_r394848802", "bodyText": "FYI, adding this line fixes both issues for me at the moment", "author": "Lanayx", "createdAt": "2020-03-19T08:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0NzYwNg=="}], "type": "inlineReview"}]}