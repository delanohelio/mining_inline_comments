{"pr_number": 6331, "pr_title": "[Issue 2912][pulsar-admin] add get-message-by-id cmd into pulsar-admin", "pr_createdAt": "2020-02-15T00:54:30Z", "pr_url": "https://github.com/apache/pulsar/pull/6331", "timeline": [{"oid": "25df99e290fef06af8bb1bd5211e1787cf1a6d19", "url": "https://github.com/apache/pulsar/commit/25df99e290fef06af8bb1bd5211e1787cf1a6d19", "message": "add get-message-by-id cmd into pulsar-admin", "committedDate": "2020-02-15T00:45:44Z", "type": "commit"}, {"oid": "532a76defbb990fabecc037a3a567d322d269c22", "url": "https://github.com/apache/pulsar/commit/532a76defbb990fabecc037a3a567d322d269c22", "message": "remove subscription name parameter from request", "committedDate": "2020-02-15T06:40:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODEzMA==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778130", "bodyText": "According to what we discussed before, We don't need to specify a subscription name for getting a message by ID. So I think we can get a message from ManagedLedger directly by https://github.com/apache/pulsar/blob/master/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java#L1494. So that we don't need to create a one-time subscription.", "author": "codelipenghui", "createdAt": "2020-02-15T07:12:24Z", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedCursor.java", "diffHunk": "@@ -131,6 +131,22 @@ Entry getNthEntry(int n, IndividualDeletedEntries deletedEntries)\n     void asyncGetNthEntry(int n, IndividualDeletedEntries deletedEntries, ReadEntryCallback callback,\n             Object ctx);\n \n+\n+    /**\n+     * Asynchronously get a message by its id.\n+     *\n+     * @param ledgerId\n+     *              ledger id\n+     * @param entryId\n+     *              entry id\n+     * @param deletedEntries\n+     *              skip individual deleted entries\n+     * @param callback\n+     * @param ctx\n+     */\n+    void asyncGetMessageById(long ledgerId, long entryId, IndividualDeletedEntries deletedEntries,", "originalCommit": "532a76defbb990fabecc037a3a567d322d269c22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODQ2Nw==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778467", "bodyText": "Same as comments above", "author": "codelipenghui", "createdAt": "2020-02-15T07:13:22Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1403,47 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        String subName = \"get-message-id-\" + UUID.randomUUID().toString();\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+\n+        Entry entry = null;\n+        try {\n+            PersistentSubscription subscription =\n+                    (PersistentSubscription) topic.createSubscription(subName, InitialPosition.Earliest, false).get();", "originalCommit": "532a76defbb990fabecc037a3a567d322d269c22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3OTUxOQ==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379779519", "bodyText": "If we can use ManagedLedger directly, this method also can be removed.", "author": "codelipenghui", "createdAt": "2020-02-15T07:16:22Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Subscription.java", "diffHunk": "@@ -79,6 +80,8 @@ default long getNumberOfEntriesDelayed() {\n \n     CompletableFuture<Entry> peekNthMessage(int messagePosition);\n \n+    CompletableFuture<Entry> getMessageById(long ledgerId, long entryId);", "originalCommit": "532a76defbb990fabecc037a3a567d322d269c22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MjQ5MA==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379852490", "bodyText": "Good suggestion. Fixed them in the following update.", "author": "nlu90", "createdAt": "2020-02-15T19:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3OTUxOQ=="}], "type": "inlineReview"}, {"oid": "feced5036c8fcb2b743a898ca3d2152ccab6d1b4", "url": "https://github.com/apache/pulsar/commit/feced5036c8fcb2b743a898ca3d2152ccab6d1b4", "message": "use ledger to get entry", "committedDate": "2020-02-15T19:55:14Z", "type": "commit"}, {"oid": "a7ff07042b02ba426df06bc60d818c7d38399006", "url": "https://github.com/apache/pulsar/commit/a7ff07042b02ba426df06bc60d818c7d38399006", "message": "remove asyncGetMessageById", "committedDate": "2020-02-17T05:27:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAxMTU1OA==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380011558", "bodyText": "Sorry for being late in reviewing this pull request. I would suggest implementing this using AsyncResponse. We have tried to move away from using sync methods.\nYou can check internalCreateSubscription on how to use AsyncResponse. \n  \n    \n      pulsar/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java\n    \n    \n         Line 1305\n      in\n      df15210\n    \n    \n    \n    \n\n        \n          \n           protected void internalCreateSubscription(AsyncResponse asyncResponse, String subscriptionName,", "author": "sijie", "createdAt": "2020-02-17T07:03:48Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1404,51 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    future.completeExceptionally(exception);\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    future.complete(entry);\n+                }\n+            }, null);\n+\n+            entry = future.get(1000, TimeUnit.MILLISECONDS);", "originalCommit": "a7ff07042b02ba426df06bc60d818c7d38399006", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ec12604f2db0116bfd53ee621d4f8b8b348dbbdd", "url": "https://github.com/apache/pulsar/commit/ec12604f2db0116bfd53ee621d4f8b8b348dbbdd", "message": "use asyncResponse to generate response and add doc", "committedDate": "2020-02-18T01:24:18Z", "type": "commit"}, {"oid": "7f6d4b1dc7bac1df60306696f1f165f96f820bcd", "url": "https://github.com/apache/pulsar/commit/7f6d4b1dc7bac1df60306696f1f165f96f820bcd", "message": "add doc to reference-pulsar-admin", "committedDate": "2020-02-18T01:30:45Z", "type": "commit"}, {"oid": "5ebd9c969d6e01583829112e443512f75411f852", "url": "https://github.com/apache/pulsar/commit/5ebd9c969d6e01583829112e443512f75411f852", "message": "Merge branch 'master' into neng/add-get-message-by-id", "committedDate": "2020-02-18T01:41:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNjYxNQ==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380426615", "bodyText": "I don't think this is needed any more.", "author": "sijie", "createdAt": "2020-02-18T02:24:21Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;", "originalCommit": "5ebd9c969d6e01583829112e443512f75411f852", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNzIxMA==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380427210", "bodyText": "move this finally block to line 1520", "author": "sijie", "createdAt": "2020-02-18T02:27:16Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));\n+                    } catch (IOException exception) {\n+                        asyncResponse.resume(new RestException(exception));\n+                    }\n+                }\n+            }, null);\n+        } catch (NullPointerException npe) {\n+            asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Message not found\"));\n+        } catch (Exception exception) {\n+            log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",\n+                    clientAppId(), ledgerId, entryId, topicName, exception);\n+            asyncResponse.resume(new RestException(exception));\n+        } finally {\n+            if (entry != null) {", "originalCommit": "5ebd9c969d6e01583829112e443512f75411f852", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d1c1e63255a4873a76c019b18be0cd41d1f012b", "url": "https://github.com/apache/pulsar/commit/9d1c1e63255a4873a76c019b18be0cd41d1f012b", "message": "clean up method internalGetMessageById", "committedDate": "2020-02-18T02:32:02Z", "type": "commit"}, {"oid": "882db05a85ab76bbebbedbcd641f9850a57b73f8", "url": "https://github.com/apache/pulsar/commit/882db05a85ab76bbebbedbcd641f9850a57b73f8", "message": "Merge branch 'neng/add-get-message-by-id' of https://github.com/streamnative/pulsar into neng/add-get-message-by-id", "committedDate": "2020-02-18T02:32:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ4OTY0MA==", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380489640", "bodyText": "I think we need to release the Entry it after using it.", "author": "sijie", "createdAt": "2020-02-18T07:04:39Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,37 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        try {\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));", "originalCommit": "882db05a85ab76bbebbedbcd641f9850a57b73f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b475e8fae562cc653c2c552cfba5269fe93fb652", "url": "https://github.com/apache/pulsar/commit/b475e8fae562cc653c2c552cfba5269fe93fb652", "message": "resolve conflicts", "committedDate": "2020-02-18T17:36:30Z", "type": "commit"}, {"oid": "f77268764ba1a655b3d77ce001ec9728d039e32d", "url": "https://github.com/apache/pulsar/commit/f77268764ba1a655b3d77ce001ec9728d039e32d", "message": "Merge branch 'master' into neng/add-get-message-by-id", "committedDate": "2020-04-02T06:58:27Z", "type": "commit"}, {"oid": "b7e89a32af57e6f17d0b11d885ad9196d0ac6a2e", "url": "https://github.com/apache/pulsar/commit/b7e89a32af57e6f17d0b11d885ad9196d0ac6a2e", "message": "Merge remote-tracking branch 'apache/master' into neng/add-get-message-by-id", "committedDate": "2020-04-07T17:37:07Z", "type": "commit"}]}