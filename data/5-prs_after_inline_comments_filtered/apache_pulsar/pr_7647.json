{"pr_number": 7647, "pr_title": "Allow ability to specify retain key ordering in functions", "pr_createdAt": "2020-07-23T18:49:59Z", "pr_url": "https://github.com/apache/pulsar/pull/7647", "timeline": [{"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "url": "https://github.com/apache/pulsar/commit/478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "message": "Allow ability to specify retain key ordering in functions", "committedDate": "2020-07-23T18:48:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTE0MA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459701140", "bodyText": "We also need to do this in SinkConfigUtils", "author": "jerrypeng", "createdAt": "2020-07-23T20:13:06Z", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTgwOA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459869808", "bodyText": "That can be added later.", "author": "srkukarni", "createdAt": "2020-07-24T06:16:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTE0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQxMQ==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459710411", "bodyText": "Why are we assuming ATLEAST_ONCE here?  A user can set the processing guarantee to be at most once and still set the retain ordering to be true", "author": "jerrypeng", "createdAt": "2020-07-23T20:31:12Z", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {\n+            functionConfig.setRetainOrdering(false);\n+            functionConfig.setRetainKeyOrdering(true);\n+            functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.ATLEAST_ONCE);", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NDc4Mw==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459854783", "bodyText": "Yes. Even the existing code is broken in that regard. I will fix that", "author": "srkukarni", "createdAt": "2020-07-24T05:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjUzNA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459712534", "bodyText": "Can we re-organize this giant conditional statement to be more readable?\nif (effectively-once) {\nsubType = Failover\n} else if (retain order) {\nsubType = failover\n} else if (retain key order) {\nsubType = shared_key\n} else {\nsubType = shared\n}", "author": "jerrypeng", "createdAt": "2020-07-23T20:35:07Z", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -142,6 +142,8 @@ public static FunctionDetails convert(FunctionConfig functionConfig, ClassLoader\n         Function.SubscriptionType subType = ((functionConfig.getRetainOrdering() != null && functionConfig.getRetainOrdering())\n                 || FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE.equals(functionConfig.getProcessingGuarantees()))\n                 ? Function.SubscriptionType.FAILOVER\n+                : (functionConfig.getRetainKeyOrdering() != null && functionConfig.getRetainKeyOrdering())", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTA4NA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459715084", "bodyText": "I would remove this stanza.  We should return an error if the retain order or retain key ordering is set at all", "author": "jerrypeng", "createdAt": "2020-07-23T20:40:10Z", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -639,6 +655,16 @@ private static void doCommonChecks(FunctionConfig functionConfig) {\n         if ((functionConfig.getMaxMessageRetries() == null || functionConfig.getMaxMessageRetries() < 0) && !org.apache.commons.lang3.StringUtils.isEmpty(functionConfig.getDeadLetterTopic())) {\n             throw new IllegalArgumentException(\"Dead Letter Topic specified, however max retries is set to infinity\");\n         }\n+        if (functionConfig.getRetainKeyOrdering() != null\n+                && functionConfig.getRetainKeyOrdering()", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTUwMQ==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459715501", "bodyText": "Can you also check whether retain ordering is set?", "author": "jerrypeng", "createdAt": "2020-07-23T20:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjIxOA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459716218", "bodyText": "Can we add some comments here for retainOrdering and retainKeyOrdering so people understand what they do and what the difference between the two is?", "author": "jerrypeng", "createdAt": "2020-07-23T20:42:21Z", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/FunctionConfig.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private String logTopic;\n     private ProcessingGuarantees processingGuarantees;\n     private Boolean retainOrdering;\n+    private Boolean retainKeyOrdering;", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxOTgxMA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459719810", "bodyText": "also need to add this for SinkConfig", "author": "jerrypeng", "createdAt": "2020-07-23T20:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxODY2NA==", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459718664", "bodyText": "This whole conditional statement doesn't seem right to me.  Why are se setting the processing guarantee by looking at what the subscription is?  We already setting the processing guarantee in a previous line:\nhttps://github.com/apache/pulsar/pull/7647/files#diff-239e167c18ea8591c85432948ab5040aL297", "author": "jerrypeng", "createdAt": "2020-07-23T20:47:17Z", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {", "originalCommit": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b1b692868685d4a5d10068dfbeb0b2a1b886c40b", "url": "https://github.com/apache/pulsar/commit/b1b692868685d4a5d10068dfbeb0b2a1b886c40b", "message": "Address comments", "committedDate": "2020-07-24T07:00:32Z", "type": "commit"}, {"oid": "bd2e1ef38fe00b2b8ccd233f7037c5f26ad89f35", "url": "https://github.com/apache/pulsar/commit/bd2e1ef38fe00b2b8ccd233f7037c5f26ad89f35", "message": "Merge branch 'master' into key_shared_function", "committedDate": "2020-07-24T16:30:24Z", "type": "commit"}]}