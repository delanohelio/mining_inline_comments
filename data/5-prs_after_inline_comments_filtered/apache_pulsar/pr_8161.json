{"pr_number": 8161, "pr_title": "Ack response implement", "pr_createdAt": "2020-09-29T14:27:14Z", "pr_url": "https://github.com/apache/pulsar/pull/8161", "timeline": [{"oid": "cf8bace779ce5186890e0e10df55b8e127d13a81", "url": "https://github.com/apache/pulsar/commit/cf8bace779ce5186890e0e10df55b8e127d13a81", "message": "no message", "committedDate": "2020-09-29T14:38:04Z", "type": "commit"}, {"oid": "f312c0560caea23a7ae438e73dea8d535aabc402", "url": "https://github.com/apache/pulsar/commit/f312c0560caea23a7ae438e73dea8d535aabc402", "message": "Revert \"no message\"\n\nThis reverts commit cdf77353a30615e756d45f695411a539e7505780.", "committedDate": "2020-09-29T14:38:04Z", "type": "commit"}, {"oid": "9977e95224d6464535bdfd04015ebc6d720ddfaa", "url": "https://github.com/apache/pulsar/commit/9977e95224d6464535bdfd04015ebc6d720ddfaa", "message": "no message", "committedDate": "2020-09-29T14:38:04Z", "type": "commit"}, {"oid": "d3c7eb319bf86d2feef6397996b9398cd5932bc3", "url": "https://github.com/apache/pulsar/commit/d3c7eb319bf86d2feef6397996b9398cd5932bc3", "message": "Revert \"no message\"\n\nThis reverts commit c665fe5fc70909858a15e22d9c8fa0965ffc114a.", "committedDate": "2020-09-29T14:38:05Z", "type": "commit"}, {"oid": "04d8da138bce5293644c6cb3c0881bb70e35914d", "url": "https://github.com/apache/pulsar/commit/04d8da138bce5293644c6cb3c0881bb70e35914d", "message": "subscrip_response_implement", "committedDate": "2020-09-29T14:38:05Z", "type": "commit"}, {"oid": "c51e098c4d0131df085567da1a202bbbc4854b5f", "url": "https://github.com/apache/pulsar/commit/c51e098c4d0131df085567da1a202bbbc4854b5f", "message": "solve the conflic", "committedDate": "2020-09-29T14:38:05Z", "type": "commit"}, {"oid": "9fdaff6f476e638e672ca9d3b66e0300f1cd665f", "url": "https://github.com/apache/pulsar/commit/9fdaff6f476e638e672ca9d3b66e0300f1cd665f", "message": "modify the request time out class", "committedDate": "2020-09-29T14:46:01Z", "type": "commit"}, {"oid": "a852774f55fa116c8575eed394afd2b9bd53b632", "url": "https://github.com/apache/pulsar/commit/a852774f55fa116c8575eed394afd2b9bd53b632", "message": "rebase", "committedDate": "2020-09-29T14:51:23Z", "type": "commit"}, {"oid": "8f7b80cdc39e52a5fd2551e2b4cc75729ef2f612", "url": "https://github.com/apache/pulsar/commit/8f7b80cdc39e52a5fd2551e2b4cc75729ef2f612", "message": "rebase", "committedDate": "2020-09-29T15:03:42Z", "type": "commit"}, {"oid": "7e64e5573f6be24a5aecce32007c3ef998243141", "url": "https://github.com/apache/pulsar/commit/7e64e5573f6be24a5aecce32007c3ef998243141", "message": "Modifty the unchange file", "committedDate": "2020-09-29T15:12:03Z", "type": "commit"}, {"oid": "4dbec4a9e895238bcdc5e0674f5963a50e7f6097", "url": "https://github.com/apache/pulsar/commit/4dbec4a9e895238bcdc5e0674f5963a50e7f6097", "message": "Modifyt", "committedDate": "2020-09-29T15:13:51Z", "type": "commit"}, {"oid": "237458d2f6db29261d61577008037f81840dc4a6", "url": "https://github.com/apache/pulsar/commit/237458d2f6db29261d61577008037f81840dc4a6", "message": "Update OwnerShipForCurrentServerTestBase.java\n\nmodify", "committedDate": "2020-09-29T15:15:31Z", "type": "commit"}, {"oid": "407c38ce4a2443a8490ad49530b71a66e3e968f7", "url": "https://github.com/apache/pulsar/commit/407c38ce4a2443a8490ad49530b71a66e3e968f7", "message": "Close timer", "committedDate": "2020-09-30T01:31:03Z", "type": "commit"}, {"oid": "a7c17dad92e8a69e6d6152f4b781a8d0da321122", "url": "https://github.com/apache/pulsar/commit/a7c17dad92e8a69e6d6152f4b781a8d0da321122", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement", "committedDate": "2020-09-30T01:33:15Z", "type": "commit"}, {"oid": "f140f0eabd6e1f59ae37522af2a1cabf88ab8bf1", "url": "https://github.com/apache/pulsar/commit/f140f0eabd6e1f59ae37522af2a1cabf88ab8bf1", "message": "Merge remote-tracking branch 'origin/subscription_response_implement' into subscription_response_implement", "committedDate": "2020-09-30T01:44:30Z", "type": "commit"}, {"oid": "8faf6ad680a092dc2850336cd3a15785cff777ce", "url": "https://github.com/apache/pulsar/commit/8faf6ad680a092dc2850336cd3a15785cff777ce", "message": "Add the individual", "committedDate": "2020-09-30T03:41:13Z", "type": "commit"}, {"oid": "5cdec8f7251ed6204aeccd95b10ff8a0bc13c79c", "url": "https://github.com/apache/pulsar/commit/5cdec8f7251ed6204aeccd95b10ff8a0bc13c79c", "message": "Add the licence", "committedDate": "2020-09-30T03:42:52Z", "type": "commit"}, {"oid": "ddbed2742464f1a5c71aa98aaf4b909facf08c4f", "url": "https://github.com/apache/pulsar/commit/ddbed2742464f1a5c71aa98aaf4b909facf08c4f", "message": "Modify", "committedDate": "2020-09-30T03:44:22Z", "type": "commit"}, {"oid": "e1c723c159bb0207aa98c9a711b983cff244ffa7", "url": "https://github.com/apache/pulsar/commit/e1c723c159bb0207aa98c9a711b983cff244ffa7", "message": "Modifty the c++ protoc", "committedDate": "2020-09-30T12:58:26Z", "type": "commit"}, {"oid": "a43ab565ce6d194ee8779da3b8c46cd28662cbdd", "url": "https://github.com/apache/pulsar/commit/a43ab565ce6d194ee8779da3b8c46cd28662cbdd", "message": "Delete ack timeout", "committedDate": "2020-10-11T03:16:33Z", "type": "commit"}, {"oid": "730671c23db8caf7e2a4a457fa02d4155c188913", "url": "https://github.com/apache/pulsar/commit/730671c23db8caf7e2a4a457fa02d4155c188913", "message": "delete format", "committedDate": "2020-10-11T03:51:33Z", "type": "commit"}, {"oid": "05bb5ce91ed06f72189af9176fea7945490250d8", "url": "https://github.com/apache/pulsar/commit/05bb5ce91ed06f72189af9176fea7945490250d8", "message": "delete command", "committedDate": "2020-10-11T03:53:07Z", "type": "commit"}, {"oid": "8a9d2e9d92b3d1d06a5cf8afc04ba4622d03de2c", "url": "https://github.com/apache/pulsar/commit/8a9d2e9d92b3d1d06a5cf8afc04ba4622d03de2c", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement\n\n# Conflicts:\n#\tpulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "committedDate": "2020-10-11T03:55:44Z", "type": "commit"}, {"oid": "f343688151d2c292053ad9c58ad93897ca27161d", "url": "https://github.com/apache/pulsar/commit/f343688151d2c292053ad9c58ad93897ca27161d", "message": "Delete", "committedDate": "2020-10-11T03:56:52Z", "type": "commit"}, {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "url": "https://github.com/apache/pulsar/commit/a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "message": "Clear ackrequest", "committedDate": "2020-10-11T04:10:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODEwMg==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878102", "bodyText": "The transaction message is a couple of batch messages, make sure can handle this well, @gaoran10 Please help double-check.", "author": "codelipenghui", "createdAt": "2020-10-11T07:30:56Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODEzMA==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878130", "bodyText": "Same as above comment.", "author": "codelipenghui", "createdAt": "2020-10-11T07:31:17Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODQxNQ==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878415", "bodyText": "The TransactionConflictException does not make sense here. It's better to add a MessageAcknowledgeException.", "author": "codelipenghui", "createdAt": "2020-10-11T07:34:25Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -1037,6 +1049,12 @@ private void closeConsumerTasks() {\n             possibleSendToDeadLetterTopicMessages.clear();\n         }\n \n+        if (!ackRequests.isEmpty()) {\n+            ackRequests.forEach((key, value) -> value.callback\n+                    .completeExceptionally(new TransactionConflictException(\"Consumer has closed!\")));", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODY4Ng==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878686", "bodyText": "Use info log level here", "author": "codelipenghui", "createdAt": "2020-10-11T07:37:12Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(batchMessageId.getBatchIndex());\n+            }\n+        } else {\n+            MessageIdImpl singleMessage = (MessageIdImpl) messageId;\n+            ledgerId = singleMessage.getLedgerId();\n+            entryId = singleMessage.getEntryId();\n+        }\n+        long requestId = client.newRequestId();\n+        ByteBuf cmd = Commands.newAck(consumerId, ledgerId, entryId,\n+                bitSetRecyclable, ackType,\n+                validationError, properties, txnID.getLeastSigBits(), txnID.getMostSigBits(), requestId);\n+        OpForAckCallBack op = OpForAckCallBack.create(cmd, callBack, messageId,\n+                new TxnID(txnID.getMostSigBits(), txnID.getLeastSigBits()));\n+        ackRequests.put(requestId, op);\n+        unAckedMessageTracker.remove(messageId);\n+        cmd.retain();\n+        cnx().ctx().writeAndFlush(cmd, cnx().ctx().voidPromise());\n+        return callBack;\n+    }\n+\n+    protected void ackResponse(CommandAckResponse ackResponse) {\n+        checkArgument(ackResponse.getRequestId() >= 0);\n+        OpForAckCallBack callBackOp = ackRequests.remove(ackResponse.getRequestId());\n+        if (callBackOp == null || callBackOp.callback.isDone()) {\n+            log.error(\"Ack request has been handled requestId : {}\", ackResponse.getRequestId());", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODg2Mw==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878863", "bodyText": "We should get the specific exception from the serverError, should not be throw TransactionConflictException for all errors.", "author": "codelipenghui", "createdAt": "2020-10-11T07:39:12Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(batchMessageId.getBatchIndex());\n+            }\n+        } else {\n+            MessageIdImpl singleMessage = (MessageIdImpl) messageId;\n+            ledgerId = singleMessage.getLedgerId();\n+            entryId = singleMessage.getEntryId();\n+        }\n+        long requestId = client.newRequestId();\n+        ByteBuf cmd = Commands.newAck(consumerId, ledgerId, entryId,\n+                bitSetRecyclable, ackType,\n+                validationError, properties, txnID.getLeastSigBits(), txnID.getMostSigBits(), requestId);\n+        OpForAckCallBack op = OpForAckCallBack.create(cmd, callBack, messageId,\n+                new TxnID(txnID.getMostSigBits(), txnID.getLeastSigBits()));\n+        ackRequests.put(requestId, op);\n+        unAckedMessageTracker.remove(messageId);\n+        cmd.retain();\n+        cnx().ctx().writeAndFlush(cmd, cnx().ctx().voidPromise());\n+        return callBack;\n+    }\n+\n+    protected void ackResponse(CommandAckResponse ackResponse) {\n+        checkArgument(ackResponse.getRequestId() >= 0);\n+        OpForAckCallBack callBackOp = ackRequests.remove(ackResponse.getRequestId());\n+        if (callBackOp == null || callBackOp.callback.isDone()) {\n+            log.error(\"Ack request has been handled requestId : {}\", ackResponse.getRequestId());\n+        } else if (!ackResponse.hasError()) {\n+            callBackOp.callback.complete(null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"MessageId : {} has ack by TxnId : {}\", callBackOp.messageId.getLedgerId() + \":\"\n+                        + callBackOp.messageId.getEntryId(), callBackOp.txnID.toString());\n+            }\n+            callBackOp.recycle();\n+        } else {\n+            callBackOp.callback.completeExceptionally(new TransactionConflictException(ackResponse.getMessage()));", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODk5Nw==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878997", "bodyText": "Avoid use import .*", "author": "codelipenghui", "createdAt": "2020-10-11T07:40:14Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/impl/ConsumerAckResponseTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl;\n+\n+import lombok.Cleanup;\n+\n+import org.apache.pulsar.client.api.Message;\n+import org.apache.pulsar.client.api.MessageId;\n+import org.apache.pulsar.client.api.Producer;\n+import org.apache.pulsar.client.api.ProducerConsumerBase;\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.api.Schema;\n+import org.apache.pulsar.client.api.SubscriptionType;\n+import org.apache.pulsar.client.impl.transaction.TransactionImpl;\n+\n+import org.apache.pulsar.transaction.common.exception.TransactionConflictException;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.mockito.Mockito.*;", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3OTMyNw==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502879327", "bodyText": "Why message id (1,1,1) conflict?", "author": "codelipenghui", "createdAt": "2020-10-11T07:43:34Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/impl/ConsumerAckResponseTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl;\n+\n+import lombok.Cleanup;\n+\n+import org.apache.pulsar.client.api.Message;\n+import org.apache.pulsar.client.api.MessageId;\n+import org.apache.pulsar.client.api.Producer;\n+import org.apache.pulsar.client.api.ProducerConsumerBase;\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.api.Schema;\n+import org.apache.pulsar.client.api.SubscriptionType;\n+import org.apache.pulsar.client.impl.transaction.TransactionImpl;\n+\n+import org.apache.pulsar.transaction.common.exception.TransactionConflictException;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.mockito.Mockito.*;\n+\n+public class ConsumerAckResponseTest extends ProducerConsumerBase {\n+\n+    private final static TransactionImpl transaction = mock(TransactionImpl.class);\n+\n+    @BeforeClass\n+    public void setup() throws Exception {\n+        super.internalSetup();\n+        super.producerBaseSetup();\n+        doReturn(1L).when(transaction).getTxnIdLeastBits();\n+        doReturn(1L).when(transaction).getTxnIdMostBits();\n+        CompletableFuture<Void> completableFuture = new CompletableFuture<>();\n+        doReturn(completableFuture).when(transaction).registerAckOp(any());\n+        doNothing().when(transaction).registerAckedTopic(any(), any());\n+\n+        Thread.sleep(1000 * 3);\n+    }\n+\n+    @AfterClass\n+    public void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void testAckResponse() throws PulsarClientException, InterruptedException, ExecutionException {\n+        String topic = \"testAckResponse\";\n+        @Cleanup\n+        Producer<Integer> producer = pulsarClient.newProducer(Schema.INT32)\n+                .topic(topic)\n+                .enableBatching(false)\n+                .create();\n+        @Cleanup\n+        ConsumerImpl<Integer> consumer = (ConsumerImpl<Integer>) pulsarClient.newConsumer(Schema.INT32)\n+                .topic(topic)\n+                .subscriptionName(\"sub\")\n+                .subscriptionType(SubscriptionType.Shared)\n+                .ackTimeout(1, TimeUnit.SECONDS)\n+                .subscribe();\n+        producer.send(1);\n+        producer.send(2);\n+        try {\n+            consumer.acknowledgeAsync(new MessageIdImpl(1, 1, 1), transaction).get();\n+        } catch (InterruptedException | ExecutionException e) {\n+            Assert.assertTrue(e.getCause() instanceof TransactionConflictException);", "originalCommit": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwNTM3MA==", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502905370", "bodyText": "ledgerId start with 3.", "author": "congbobo184", "createdAt": "2020-10-11T11:51:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3OTMyNw=="}], "type": "inlineReview"}, {"oid": "53a5b440015dbcec3c2c83baa79c8f48676e40c0", "url": "https://github.com/apache/pulsar/commit/53a5b440015dbcec3c2c83baa79c8f48676e40c0", "message": "fix some comment", "committedDate": "2020-10-11T11:55:25Z", "type": "commit"}, {"oid": "6cb670fe85235bf5d3b2fef36bb7bc975cc3b447", "url": "https://github.com/apache/pulsar/commit/6cb670fe85235bf5d3b2fef36bb7bc975cc3b447", "message": "Realse buf", "committedDate": "2020-10-11T12:41:45Z", "type": "commit"}, {"oid": "fe9306dce33ff9068a1f8eda84deaf8e6c5a9f7b", "url": "https://github.com/apache/pulsar/commit/fe9306dce33ff9068a1f8eda84deaf8e6c5a9f7b", "message": "Delete exception", "committedDate": "2020-10-11T14:04:18Z", "type": "commit"}, {"oid": "ef62e20a4a8ac03af2e2886b845b95f02572450d", "url": "https://github.com/apache/pulsar/commit/ef62e20a4a8ac03af2e2886b845b95f02572450d", "message": "Revover the protoc", "committedDate": "2020-10-12T01:36:11Z", "type": "commit"}, {"oid": "c50e66c30d44b49700cfd34282282030154a01fa", "url": "https://github.com/apache/pulsar/commit/c50e66c30d44b49700cfd34282282030154a01fa", "message": "Modify the batch ack bitSet size", "committedDate": "2020-10-12T01:48:15Z", "type": "commit"}, {"oid": "7cf4be85d633ef5fe326148cfda2ac6c415f86af", "url": "https://github.com/apache/pulsar/commit/7cf4be85d633ef5fe326148cfda2ac6c415f86af", "message": "Modify the pulsarApi", "committedDate": "2020-10-12T01:56:59Z", "type": "commit"}, {"oid": "fc4f9d337e41a84deae8bb773e325dcea2fa1e82", "url": "https://github.com/apache/pulsar/commit/fc4f9d337e41a84deae8bb773e325dcea2fa1e82", "message": "modify c++ protoc", "committedDate": "2020-10-12T03:09:24Z", "type": "commit"}, {"oid": "90d989e372513b76105b517fe78ee1535716ac0d", "url": "https://github.com/apache/pulsar/commit/90d989e372513b76105b517fe78ee1535716ac0d", "message": "Modify the c++ protoc", "committedDate": "2020-10-12T03:40:30Z", "type": "commit"}, {"oid": "c8f18b5d064abb9d1768bd0c2abf3844c255de47", "url": "https://github.com/apache/pulsar/commit/c8f18b5d064abb9d1768bd0c2abf3844c255de47", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement", "committedDate": "2020-10-12T09:19:40Z", "type": "commit"}, {"oid": "2829eb9a65d9bc940b2a3bf07fe304ab30715fc8", "url": "https://github.com/apache/pulsar/commit/2829eb9a65d9bc940b2a3bf07fe304ab30715fc8", "message": "Modify the test", "committedDate": "2020-10-12T09:27:12Z", "type": "commit"}, {"oid": "f8074af5ee4a2c45eeff2264b69a1aa6a265a098", "url": "https://github.com/apache/pulsar/commit/f8074af5ee4a2c45eeff2264b69a1aa6a265a098", "message": "handle the exception", "committedDate": "2020-10-14T02:23:30Z", "type": "commit"}, {"oid": "73eb345b25f540a28d47df1c48870759685dc328", "url": "https://github.com/apache/pulsar/commit/73eb345b25f540a28d47df1c48870759685dc328", "message": "Modify the exception", "committedDate": "2020-10-14T02:38:27Z", "type": "commit"}, {"oid": "ec29a62db1f826d82d0e4338bb8f4938a4809f56", "url": "https://github.com/apache/pulsar/commit/ec29a62db1f826d82d0e4338bb8f4938a4809f56", "message": "Delete the exception", "committedDate": "2020-10-14T02:41:46Z", "type": "commit"}, {"oid": "27a9ecce5e4719f70ceb3a6d93d3cb05bb82a9a4", "url": "https://github.com/apache/pulsar/commit/27a9ecce5e4719f70ceb3a6d93d3cb05bb82a9a4", "message": "Modify the exception", "committedDate": "2020-10-14T03:34:14Z", "type": "commit"}, {"oid": "666f4a58a1f112f1ad5f777e98bd0ce96e3f3588", "url": "https://github.com/apache/pulsar/commit/666f4a58a1f112f1ad5f777e98bd0ce96e3f3588", "message": "Modify the test", "committedDate": "2020-10-14T04:15:53Z", "type": "commit"}]}