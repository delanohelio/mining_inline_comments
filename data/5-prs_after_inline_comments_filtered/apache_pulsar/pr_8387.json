{"pr_number": 8387, "pr_title": "fix pause does not work for new created consumer ", "pr_createdAt": "2020-10-27T08:06:03Z", "pr_url": "https://github.com/apache/pulsar/pull/8387", "timeline": [{"oid": "09e31429422cdfb98cbbab606f6035e50450122e", "url": "https://github.com/apache/pulsar/commit/09e31429422cdfb98cbbab606f6035e50450122e", "message": "fix pause does not work for new created consumer in case of multi topics consumers after update topic partitions", "committedDate": "2020-10-28T09:44:09Z", "type": "commit"}, {"oid": "09e31429422cdfb98cbbab606f6035e50450122e", "url": "https://github.com/apache/pulsar/commit/09e31429422cdfb98cbbab606f6035e50450122e", "message": "fix pause does not work for new created consumer in case of multi topics consumers after update topic partitions", "committedDate": "2020-10-28T09:44:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMTgxMQ==", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513431811", "bodyText": "The message count is always 5, it's better to only receive 5 messages to avoid the 3 sec block, we should reduce the test time occupied", "author": "codelipenghui", "createdAt": "2020-10-28T13:15:04Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/SimpleProducerConsumerTest.java", "diffHunk": "@@ -3037,6 +3037,74 @@ public void testConsumerSubscriptionInitialize() throws Exception {\n         log.info(\"-- Exiting {} test --\", methodName);\n     }\n \n+    @Test\n+    public void testMultiTopicsConsumerImplPause() throws Exception {\n+        log.info(\"-- Starting {} test --\", methodName);\n+        String topicName = \"persistent://my-property/my-ns/partition-topic\";\n+\n+        admin.topics().createPartitionedTopic(topicName, 1);\n+\n+\n+        Producer<byte[]> producer = pulsarClient.newProducer()\n+                .topic(topicName)\n+                .enableBatching(false)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .create();\n+\n+        // 1. produce 5 messages\n+        for (int i = 0; i < 5; i++) {\n+            final String message = \"my-message-\" + i;\n+            producer.send(message.getBytes(UTF_8));\n+        }\n+\n+        Consumer<byte[]> consumer = pulsarClient.newConsumer().topic(topicName)\n+                .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\n+                .receiverQueueSize(1)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .subscriptionName(\"test-multi-topic-consumer\").subscribe();\n+\n+        int counter = 0;\n+        Message<byte[]> consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        while(consumedMessage != null) {\n+            assertEquals(consumedMessage.getData(), (\"my-message-\" + counter++ ).getBytes());\n+            consumedMessage = consumer.receive(3, TimeUnit.SECONDS);", "originalCommit": "09e31429422cdfb98cbbab606f6035e50450122e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0ODIyMA==", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513648220", "bodyText": "will fix it", "author": "aloyszhang", "createdAt": "2020-10-28T17:52:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMTgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMzE2NQ==", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513433165", "bodyText": "Is there any way to check the partitioned updated? such as check the internal consumers of the multiple-consumer. Maybe this can reduce the test time occupied", "author": "codelipenghui", "createdAt": "2020-10-28T13:17:04Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/SimpleProducerConsumerTest.java", "diffHunk": "@@ -3037,6 +3037,74 @@ public void testConsumerSubscriptionInitialize() throws Exception {\n         log.info(\"-- Exiting {} test --\", methodName);\n     }\n \n+    @Test\n+    public void testMultiTopicsConsumerImplPause() throws Exception {\n+        log.info(\"-- Starting {} test --\", methodName);\n+        String topicName = \"persistent://my-property/my-ns/partition-topic\";\n+\n+        admin.topics().createPartitionedTopic(topicName, 1);\n+\n+\n+        Producer<byte[]> producer = pulsarClient.newProducer()\n+                .topic(topicName)\n+                .enableBatching(false)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .create();\n+\n+        // 1. produce 5 messages\n+        for (int i = 0; i < 5; i++) {\n+            final String message = \"my-message-\" + i;\n+            producer.send(message.getBytes(UTF_8));\n+        }\n+\n+        Consumer<byte[]> consumer = pulsarClient.newConsumer().topic(topicName)\n+                .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\n+                .receiverQueueSize(1)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .subscriptionName(\"test-multi-topic-consumer\").subscribe();\n+\n+        int counter = 0;\n+        Message<byte[]> consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        while(consumedMessage != null) {\n+            assertEquals(consumedMessage.getData(), (\"my-message-\" + counter++ ).getBytes());\n+            consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        }\n+        assertEquals(counter, 5);\n+\n+        // 2. pause multi-topic consumer\n+        consumer.pause();\n+\n+        // 3. update partition\n+        admin.topics().updatePartitionedTopic(topicName, 3);\n+\n+        // 4. wait for client to update partitions\n+        Thread.sleep(5000);", "originalCommit": "09e31429422cdfb98cbbab606f6035e50450122e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0ODQ5MQ==", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513648491", "bodyText": "will optimize", "author": "aloyszhang", "createdAt": "2020-10-28T17:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMzE2NQ=="}], "type": "inlineReview"}, {"oid": "c70a3424d26056ac1b6da3d632e8b681d8bf61b9", "url": "https://github.com/apache/pulsar/commit/c70a3424d26056ac1b6da3d632e8b681d8bf61b9", "message": "optimize ut", "committedDate": "2020-10-28T17:51:43Z", "type": "commit"}, {"oid": "ecd56db42debf27922f94f710722c4a1eea31e22", "url": "https://github.com/apache/pulsar/commit/ecd56db42debf27922f94f710722c4a1eea31e22", "message": "fix test error", "committedDate": "2020-10-29T00:53:23Z", "type": "commit"}]}