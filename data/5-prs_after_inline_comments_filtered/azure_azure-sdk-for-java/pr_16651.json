{"pr_number": 16651, "pr_title": "Add multipage business cards test form recognizer", "pr_createdAt": "2020-10-22T03:38:34Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16651", "timeline": [{"oid": "17505b6ae9aad715fdaccefbfd5b34fb539015ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/17505b6ae9aad715fdaccefbfd5b34fb539015ea", "message": "add business card multipage tests", "committedDate": "2020-10-22T06:24:06Z", "type": "commit"}, {"oid": "17505b6ae9aad715fdaccefbfd5b34fb539015ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/17505b6ae9aad715fdaccefbfd5b34fb539015ea", "message": "add business card multipage tests", "committedDate": "2020-10-22T06:24:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI1ODQ3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510258478", "bodyText": "if recognize from url, shouldn't content-type be application/json?", "author": "kristapratico", "createdAt": "2020-10-22T15:32:56Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTest.java", "diffHunk": "@@ -1528,10 +1551,30 @@ public void recognizeBusinessCardSourceUrlWithPngFile(HttpClient httpClient,\n                     new RecognizeBusinessCardsOptions().setFieldElementsIncluded(true)\n                         .setPollInterval(durationTestMode), Context.NONE);\n             syncPoller.waitForCompletion();\n-            validateBusinessCardResultData(syncPoller.getFinalResult(), true);\n+            validatePrebuiltResultData(syncPoller.getFinalResult(), true, BUSINESS_CARD);\n         }, BUSINESS_CARD_PNG);\n     }\n \n+    /**\n+     * Verify business card recognition with multipage pdf url.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.formrecognizer.TestUtils#getTestParameters\")\n+    public void recognizeMultipageBusinessCardUrl(HttpClient httpClient, FormRecognizerServiceVersion serviceVersion) {\n+        client = getFormRecognizerClient(httpClient, serviceVersion);\n+        urlRunner(sourceUrl -> {\n+            SyncPoller<FormRecognizerOperationResult, List<RecognizedForm>> syncPoller =\n+                client.beginRecognizeBusinessCardsFromUrl(sourceUrl,\n+                    new RecognizeBusinessCardsOptions()\n+                        .setContentType(FormContentType.APPLICATION_PDF)", "originalCommit": "17505b6ae9aad715fdaccefbfd5b34fb539015ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwNzAwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510307000", "bodyText": "yes, this value is ignored, will update!", "author": "samvaity", "createdAt": "2020-10-22T16:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI1ODQ3OA=="}], "type": "inlineReview"}, {"oid": "c060e572f09acd0594fff41215610ccb10a1f364", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c060e572f09acd0594fff41215610ccb10a1f364", "message": "remove content type", "committedDate": "2020-10-22T17:27:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MTA1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510341057", "bodyText": "nit: extra line", "author": "mssfang", "createdAt": "2020-10-22T17:36:42Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java", "diffHunk": "@@ -655,29 +627,35 @@ void validateRecognizedResult(List<RecognizedForm> actualFormList, boolean inclu\n         }\n     }\n \n-    // Business cards\n-    void validateBusinessCardDataFields(Map<String, FormField> actualRecognizedBusinessCardFields, boolean includeFieldElements) {\n-        final AnalyzeResult analyzeResult = getAnalyzeRawResponse().getAnalyzeResult();\n-        List<ReadResult> readResults = analyzeResult.getReadResults();\n-        DocumentResult documentResult = analyzeResult.getDocumentResults().get(0);\n-        Map<String, FieldValue> expectedReceiptFields = documentResult.getFields();\n-\n-        BUSINESS_CARD_FIELDS.forEach(businessCardField ->\n-            validateFieldValueTransforms(expectedReceiptFields.get(businessCardField),\n-                actualRecognizedBusinessCardFields.get(businessCardField), readResults, includeFieldElements));\n-\n-    }\n-\n-    void validateBusinessCardResultData(List<RecognizedForm> actualBusinessCardList, boolean includeFieldElements) {\n+    void validatePrebuiltResultData(List<RecognizedForm> actualPrebuiltRecognizedForms, boolean includeFieldElements,\n+        PREBUILT_TYPE prebuiltType) {\n         final AnalyzeResult rawResponse = getAnalyzeRawResponse().getAnalyzeResult();\n-        for (int i = 0; i < actualBusinessCardList.size(); i++) {\n-            final RecognizedForm actualBusinessCard = actualBusinessCardList.get(i);\n-            validateLabeledData(actualBusinessCard, includeFieldElements, rawResponse.getReadResults(),\n-                rawResponse.getDocumentResults().get(i));\n-            validateBusinessCardDataFields(actualBusinessCard.getFields(), includeFieldElements);\n+        final List<ReadResult> rawReadResults = rawResponse.getReadResults();\n+        for (int i = 0; i < actualPrebuiltRecognizedForms.size(); i++) {\n+            final RecognizedForm actualForm = actualPrebuiltRecognizedForms.get(i);\n+            final DocumentResult rawDocumentResult = rawResponse.getDocumentResults().get(i);\n+\n+            validateLabeledData(actualForm, includeFieldElements, rawReadResults, rawDocumentResult);\n+            if (BUSINESS_CARD.equals(prebuiltType)) {\n+                BUSINESS_CARD_FIELDS.forEach(businessCardField ->\n+                    validateFieldValueTransforms(rawDocumentResult.getFields().get(businessCardField),\n+                        actualForm.getFields().get(businessCardField), rawReadResults, includeFieldElements));\n+            } else {\n+                RECEIPT_FIELDS.forEach(receiptField -> {\n+                    final Map<String, FormField> actualRecognizedReceiptFields = actualForm.getFields();\n+                    Map<String, FieldValue> expectedReceiptFields = rawDocumentResult.getFields();\n+                    assertEquals(expectedReceiptFields.get(\"ReceiptType\").getValueString(),\n+                        actualRecognizedReceiptFields.get(\"ReceiptType\").getValue().asString());\n+                    assertEquals(expectedReceiptFields.get(\"ReceiptType\").getConfidence(),\n+                        actualRecognizedReceiptFields.get(\"ReceiptType\").getConfidence());\n+                    validateFieldValueTransforms(rawDocumentResult.getFields().get(receiptField),\n+                        actualRecognizedReceiptFields.get(receiptField), rawReadResults, includeFieldElements);\n+                });\n+            }\n         }\n     }\n \n+", "originalCommit": "c060e572f09acd0594fff41215610ccb10a1f364", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MzcyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510343723", "bodyText": "nit: wrong comment", "author": "maririos", "createdAt": "2020-10-22T17:41:05Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java", "diffHunk": "@@ -110,6 +115,14 @@\n     static final List<String> BUSINESS_CARD_FIELDS = Arrays.asList(\"ContactNames\", \"JobTitles\", \"Departments\",\n         \"Emails\", \"Websites\", \"MobilePhones\", \"OtherPhones\", \"Faxes\", \"Addresses\", \"CompanyNames\");\n \n+    // Business Card fields", "originalCommit": "c060e572f09acd0594fff41215610ccb10a1f364", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1OTI4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510359282", "bodyText": "in a future PR, this will be a great place to check that the page for ContactName is 2", "author": "maririos", "createdAt": "2020-10-22T18:07:32Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java", "diffHunk": "@@ -799,10 +777,32 @@ static void validateMultiPageDataUnlabeled(List<RecognizedForm> actualRecognized\n                 assertNotNull(formField.getValue());\n                 assertNotNull(formField.getValueData().getText());\n                 assertNotNull(formField.getLabelData().getText());\n-\n             });\n         });\n     }\n+    static void validateMultipageBusinessData(List<RecognizedForm> recognizedBusinessCards) {\n+        assertEquals(2, recognizedBusinessCards.size());\n+        RecognizedForm businessCard1 = recognizedBusinessCards.get(0);\n+        RecognizedForm businessCard2 = recognizedBusinessCards.get(1);\n+\n+        assertEquals(1, businessCard1.getPageRange().getFirstPageNumber());\n+        assertEquals(1, businessCard1.getPageRange().getLastPageNumber());\n+        Map<String, FormField> businessCard1Fields = businessCard1.getFields();\n+        List<FormField> emailList = businessCard1Fields.get(\"Emails\").getValue().asList();\n+        assertEquals(\"johnsinger@contoso.com\", emailList.get(0).getValue().asString());\n+        List<FormField> phoneNumberList = businessCard1Fields.get(\"OtherPhones\").getValue().asList();\n+        assertEquals(\"+14257793479\", phoneNumberList.get(0).getValue().asPhoneNumber());\n+        assertNotNull(businessCard1.getPages());\n+\n+        assertEquals(2, businessCard2.getPageRange().getFirstPageNumber());\n+        assertEquals(2, businessCard2.getPageRange().getLastPageNumber());\n+        Map<String, FormField> businessCard2Fields = businessCard2.getFields();", "originalCommit": "c060e572f09acd0594fff41215610ccb10a1f364", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM2MzI0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16651#discussion_r510363240", "bodyText": "I don't have the contact name page number changes in yet, but yes will check here once I do.", "author": "samvaity", "createdAt": "2020-10-22T18:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1OTI4Mg=="}], "type": "inlineReview"}]}