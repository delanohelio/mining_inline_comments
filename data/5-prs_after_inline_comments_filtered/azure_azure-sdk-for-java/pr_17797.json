{"pr_number": 17797, "pr_title": "[Communication] - Identity - Auth with managed identity", "pr_createdAt": "2020-11-24T21:57:21Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17797", "timeline": [{"oid": "fd9c7b75dc82612f914c13471d9bc00e09e8bcce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd9c7b75dc82612f914c13471d9bc00e09e8bcce", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-11-24T22:01:07Z", "type": "forcePushed"}, {"oid": "992a4434934dbf64698208b674b2da9c1f521f65", "url": "https://github.com/Azure/azure-sdk-for-java/commit/992a4434934dbf64698208b674b2da9c1f521f65", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-11-24T22:04:41Z", "type": "forcePushed"}, {"oid": "9c7f6bf92f694375ef90326520fdb97c00a5d645", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c7f6bf92f694375ef90326520fdb97c00a5d645", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-11-24T22:18:16Z", "type": "forcePushed"}, {"oid": "342331590ec63e63b18633cfb65a74015ae6a35b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/342331590ec63e63b18633cfb65a74015ae6a35b", "message": "Using AzureKeyCredential in Identity SDK", "committedDate": "2020-12-04T18:06:03Z", "type": "commit"}, {"oid": "902035be34e828171e4fa3faae68a694d846ae9f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/902035be34e828171e4fa3faae68a694d846ae9f", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T18:06:03Z", "type": "commit"}, {"oid": "e894b4308afc95ba49403b8b866cbda8e32f4d2f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e894b4308afc95ba49403b8b866cbda8e32f4d2f", "message": "Removed AzureKeyCredential", "committedDate": "2020-12-04T18:06:04Z", "type": "commit"}, {"oid": "95672cff50318bc0176d0badd7bbefd7e4d43f6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/95672cff50318bc0176d0badd7bbefd7e4d43f6b", "message": "Added tests", "committedDate": "2020-12-04T18:06:05Z", "type": "commit"}, {"oid": "d2388a15749060828c94ceb87a3732f8acb4ad10", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d2388a15749060828c94ceb87a3732f8acb4ad10", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T18:11:57Z", "type": "forcePushed"}, {"oid": "5a1155e6ecdbd5c3d78bb271e06cb13208f5db4f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5a1155e6ecdbd5c3d78bb271e06cb13208f5db4f", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T18:23:50Z", "type": "forcePushed"}, {"oid": "76d70471cf70e302a2cde0347663fd1320ee58ed", "url": "https://github.com/Azure/azure-sdk-for-java/commit/76d70471cf70e302a2cde0347663fd1320ee58ed", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T18:35:43Z", "type": "forcePushed"}, {"oid": "7f88d1dc2c5fe8e9fc0a9ac509ff84c765dc5c24", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7f88d1dc2c5fe8e9fc0a9ac509ff84c765dc5c24", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T18:49:55Z", "type": "forcePushed"}, {"oid": "ad193492f391986996f5616f961fb3d6fc7c6b98", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad193492f391986996f5616f961fb3d6fc7c6b98", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T19:02:48Z", "type": "forcePushed"}, {"oid": "9405c8a6f6004555ea6b43ef34cac501a8d701cc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9405c8a6f6004555ea6b43ef34cac501a8d701cc", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T19:05:04Z", "type": "forcePushed"}, {"oid": "98176b5198592883ab1ecb5fd6cd17a047bf0567", "url": "https://github.com/Azure/azure-sdk-for-java/commit/98176b5198592883ab1ecb5fd6cd17a047bf0567", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T19:06:35Z", "type": "forcePushed"}, {"oid": "437e67f7d3896fa61c8501f79e21e70149d8eced", "url": "https://github.com/Azure/azure-sdk-for-java/commit/437e67f7d3896fa61c8501f79e21e70149d8eced", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T19:33:13Z", "type": "commit"}, {"oid": "437e67f7d3896fa61c8501f79e21e70149d8eced", "url": "https://github.com/Azure/azure-sdk-for-java/commit/437e67f7d3896fa61c8501f79e21e70149d8eced", "message": "Using DefaultAzureCredential for managed identity", "committedDate": "2020-12-04T19:33:13Z", "type": "forcePushed"}, {"oid": "fe8cf286f867858a62c23876f527e407492e7475", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe8cf286f867858a62c23876f527e407492e7475", "message": "Added FakeCredential for playback tests", "committedDate": "2020-12-04T20:10:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzMjYxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r536432613", "bodyText": "Do you need the create the authPolicy variable? Can we just return directly?", "author": "minnieliu", "createdAt": "2020-12-04T22:56:47Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,20 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        HttpPipelinePolicy authPolicy;", "originalCommit": "fe8cf286f867858a62c23876f527e407492e7475", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MDk5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537750997", "bodyText": "nit: remove extra blank line.", "author": "srnagar", "createdAt": "2020-12-07T18:58:07Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -68,6 +73,19 @@ public CommunicationIdentityClientBuilder pipeline(HttpPipeline pipeline) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@link TokenCredential} used to authenticate HTTP requests.\n+     *\n+     * @param tokenCredential {@link TokenCredential} used to authenticate HTTP requests.\n+     * @return The updated {@link CommunicationIdentityClientBuilder} object.\n+     * @throws NullPointerException If {@code tokenCredential} is null.\n+     */\n+", "originalCommit": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537755064", "bodyText": "If both are set, do we want to throw or prioritize tokenCredential?", "author": "srnagar", "createdAt": "2020-12-07T19:04:31Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,18 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null) { \n+            return new BearerTokenAuthenticationPolicy(\n+                this.tokenCredential, \"https://communication.azure.com//.default\");          \n+        } else if (this.credential != null) {\n+            return new HmacAuthenticationPolicy(this.credential);            \n+        } else {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Missing credential information while building a client.\"));\n+        }", "originalCommit": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDE5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537860194", "bodyText": "If both are set, I think we should prioritize tokenCredential as it is now, right? It makes sense to use that one as our default.", "author": "jbeauregardb", "createdAt": "2020-12-07T21:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4MTk4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538581982", "bodyText": "Talked offline, we're following BlobClientBuilder's example now with a last one wins logic, and additionally info log that the previous credential got overridden.", "author": "DominikMe", "createdAt": "2020-12-08T16:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NjA0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537756045", "bodyText": "nit: else should be in the previous line along with }", "author": "srnagar", "createdAt": "2020-12-07T19:06:03Z", "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -30,6 +36,26 @@ protected CommunicationIdentityClientBuilder getCommunicationIdentityClient(Http\n         builder.endpoint(ENDPOINT)\n             .accessKey(ACCESSKEY)\n             .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+       \n+        if (getTestMode() == TestMode.RECORD) {\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected CommunicationIdentityClientBuilder getCommunicationIdentityClientBuilderUsingManagedIdentity(HttpClient httpClient) {\n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder\n+            .endpoint(ENDPOINT)\n+            .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+        \n+        if (getTestMode() == TestMode.PLAYBACK) {\n+            builder.credential(new FakeCredentials());\n+        }\n+        else {", "originalCommit": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4a6c2d535cab9cf935775566daebd26aa5aa766", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e4a6c2d535cab9cf935775566daebd26aa5aa766", "message": "Addressed comments", "committedDate": "2020-12-07T21:53:45Z", "type": "commit"}, {"oid": "e4a6c2d535cab9cf935775566daebd26aa5aa766", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e4a6c2d535cab9cf935775566daebd26aa5aa766", "message": "Addressed comments", "committedDate": "2020-12-07T21:53:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU3NjQyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538576423", "bodyText": "Instead of implementing a FakeCredential you can just use the AzureKeyCredential and delete your class.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        builder.credential(new FakeCredentials());\n          \n          \n            \n                        builder.credential(new AzureKeyCredential(\"invalid key\"));", "author": "DominikMe", "createdAt": "2020-12-08T16:36:28Z", "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -30,6 +36,25 @@ protected CommunicationIdentityClientBuilder getCommunicationIdentityClient(Http\n         builder.endpoint(ENDPOINT)\n             .accessKey(ACCESSKEY)\n             .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+       \n+        if (getTestMode() == TestMode.RECORD) {\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected CommunicationIdentityClientBuilder getCommunicationIdentityClientBuilderUsingManagedIdentity(HttpClient httpClient) {\n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder\n+            .endpoint(ENDPOINT)\n+            .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+        \n+        if (getTestMode() == TestMode.PLAYBACK) {\n+            builder.credential(new FakeCredentials());", "originalCommit": "b123c31a487c1cc6b40f07ed827a458856162bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzMyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538617322", "bodyText": "But AzureKeyCredential doesn't implement TokenCredential interface", "author": "jbeauregardb", "createdAt": "2020-12-08T17:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU3NjQyMw=="}], "type": "inlineReview"}, {"oid": "371d485dc984a7f51783babc64e6c2b8cbe37e4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/371d485dc984a7f51783babc64e6c2b8cbe37e4e", "message": "Changed credential policy priority", "committedDate": "2020-12-08T17:28:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNzg4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538707888", "bodyText": "We should not change the value of accessKeyCredential the user has already set. This will silently set the value to null and the user will not know about it - logs are not always noticed. I would rather do the validation at the very end when build*Client is called. Check if both are set and then throw an exception.", "author": "srnagar", "createdAt": "2020-12-08T18:38:26Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -68,6 +73,22 @@ public CommunicationIdentityClientBuilder pipeline(HttpPipeline pipeline) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@link TokenCredential} used to authenticate HTTP requests.\n+     *\n+     * @param tokenCredential {@link TokenCredential} used to authenticate HTTP requests.\n+     * @return The updated {@link CommunicationIdentityClientBuilder} object.\n+     * @throws NullPointerException If {@code tokenCredential} is null.\n+     */\n+    public CommunicationIdentityClientBuilder credential(TokenCredential tokenCredential) {\n+        this.tokenCredential = Objects.requireNonNull(tokenCredential, \"'tokenCredential' cannot be null.\");\n+        if (accessKeyCredential != null) {\n+            logger.info(\"'accessKey' is being replaced with 'credential', only one authorization method can be used.\");\n+            this.accessKeyCredential = null;\n+        }", "originalCommit": "371d485dc984a7f51783babc64e6c2b8cbe37e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwODc2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538708763", "bodyText": "This is good! Since we have this check here, we don't need to do any validation in the setter methods above.", "author": "srnagar", "createdAt": "2020-12-08T18:39:18Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +223,22 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null && this.accessKeyCredential != null) {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Both 'credential' and 'accessKey' are set. Just one may be used.\"));\n+        }", "originalCommit": "371d485dc984a7f51783babc64e6c2b8cbe37e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "598a40d465000fcab215ef5b1a9301978b31a5e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/598a40d465000fcab215ef5b1a9301978b31a5e2", "message": "Changed credential policy priority", "committedDate": "2020-12-08T19:08:47Z", "type": "commit"}, {"oid": "598a40d465000fcab215ef5b1a9301978b31a5e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/598a40d465000fcab215ef5b1a9301978b31a5e2", "message": "Changed credential policy priority", "committedDate": "2020-12-08T19:08:47Z", "type": "forcePushed"}, {"oid": "6225e3a6576da1cbeaaea0cd57eb339d67f97886", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6225e3a6576da1cbeaaea0cd57eb339d67f97886", "message": "Added sync test", "committedDate": "2020-12-08T20:21:27Z", "type": "commit"}, {"oid": "6225e3a6576da1cbeaaea0cd57eb339d67f97886", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6225e3a6576da1cbeaaea0cd57eb339d67f97886", "message": "Added sync test", "committedDate": "2020-12-08T20:21:27Z", "type": "forcePushed"}]}