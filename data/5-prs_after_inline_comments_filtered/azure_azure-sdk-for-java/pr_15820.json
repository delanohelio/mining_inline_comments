{"pr_number": 15820, "pr_title": "[Tables] Allow subclassing TableEntity to map properties to fields", "pr_createdAt": "2020-09-30T01:04:51Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15820", "timeline": [{"oid": "8991602dc7f7838a8956368b47690a3a4e133b3d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8991602dc7f7838a8956368b47690a3a4e133b3d", "message": "TableEntity instances can be converted into subclasses", "committedDate": "2020-09-30T01:07:03Z", "type": "commit"}, {"oid": "02b19a5f3e90ae32fc01d9324313698246d12161", "url": "https://github.com/Azure/azure-sdk-for-java/commit/02b19a5f3e90ae32fc01d9324313698246d12161", "message": "TableEntity subclasses can populate properties from getters", "committedDate": "2020-09-30T01:07:03Z", "type": "commit"}, {"oid": "2e53030a873a3d4ad88a0fa1dcccf500ad4ee721", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e53030a873a3d4ad88a0fa1dcccf500ad4ee721", "message": "Extract reflection code to EntityHelper", "committedDate": "2020-09-30T01:07:04Z", "type": "commit"}, {"oid": "e0922b3f2f90272411186720b6d40ab8dbe22b4f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0922b3f2f90272411186720b6d40ab8dbe22b4f", "message": "Set properties from getters before PUT operations", "committedDate": "2020-09-30T01:07:04Z", "type": "commit"}, {"oid": "d752d160f9aefcc56cac23cf45fbd8b0ddf8e1af", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d752d160f9aefcc56cac23cf45fbd8b0ddf8e1af", "message": "Add resultType param to getEntity", "committedDate": "2020-09-30T01:07:04Z", "type": "commit"}, {"oid": "c10e835416abd927a7b7f6c3cbb2d08faa575f32", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c10e835416abd927a7b7f6c3cbb2d08faa575f32", "message": "Add resultType param to listEntities", "committedDate": "2020-09-30T01:07:04Z", "type": "commit"}, {"oid": "c57aa278566278ec36a9072e7557cbe9a8f9136c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c57aa278566278ec36a9072e7557cbe9a8f9136c", "message": "Remove fields from TableEntity\n\nInstead of trying to keep them in sync with the properties map, we just\nread their values from the map in the getters.", "committedDate": "2020-09-30T01:07:05Z", "type": "commit"}, {"oid": "5b4daa94a7e0318325582a810698356e2c941eb5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b4daa94a7e0318325582a810698356e2c941eb5", "message": "Add tests", "committedDate": "2020-09-30T01:07:05Z", "type": "commit"}, {"oid": "7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "message": "Update changelog", "committedDate": "2020-09-30T01:14:37Z", "type": "commit"}, {"oid": "7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "message": "Update changelog", "committedDate": "2020-09-30T01:14:37Z", "type": "forcePushed"}, {"oid": "acf2bb0e78fb85375f32b2f27e7b491071278127", "url": "https://github.com/Azure/azure-sdk-for-java/commit/acf2bb0e78fb85375f32b2f27e7b491071278127", "message": "Fix Javadoc", "committedDate": "2020-09-30T20:19:06Z", "type": "commit"}, {"oid": "02607a68940534a6e387b45382f9b0d77a495a8a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/02607a68940534a6e387b45382f9b0d77a495a8a", "message": "Correctly set TableEntity subclass enum properties", "committedDate": "2020-09-30T21:19:28Z", "type": "commit"}, {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "message": "Fix checkstyle", "committedDate": "2020-09-30T22:00:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498462985", "bodyText": "Can we could add some documentation around this method. I get 3 is because it's get, but 2 because is?", "author": "conniey", "createdAt": "2020-10-01T19:17:58Z", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/EntityHelper.java", "diffHunk": "@@ -0,0 +1,101 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.data.tables;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.data.tables.models.TableEntity;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.stream.Collectors;\n+\n+final class EntityHelper {\n+    private static final HashSet<String> TABLE_ENTITY_METHODS = Arrays.stream(TableEntity.class.getMethods())\n+        .map(Method::getName).collect(Collectors.toCollection(HashSet::new));\n+\n+    private EntityHelper() {\n+    }\n+\n+    static void setPropertiesFromGetters(TableEntity entity, ClientLogger logger) {\n+        Class<?> myClass = entity.getClass();\n+        if (myClass == TableEntity.class) {\n+            return;\n+        }\n+\n+        for (Method m : myClass.getMethods()) {\n+            // Skip any non-getter methods\n+            if (m.getName().length() < 3\n+                || TABLE_ENTITY_METHODS.contains(m.getName())\n+                || (!m.getName().startsWith(\"get\") && !m.getName().startsWith(\"is\"))\n+                || m.getParameterTypes().length != 0\n+                || void.class.equals(m.getReturnType())) {\n+                continue;\n+            }\n+\n+            int prefixLength = m.getName().startsWith(\"get\") ? 3 : 2;", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2MzI1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498463256", "bodyText": "I think documentation in general would be nice (even though this is package-private) to facilitate understanding the code base for future devs.", "author": "conniey", "createdAt": "2020-10-01T19:18:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ3MzEzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498473134", "bodyText": "Yep, correct. And I fully agree with that, I will add some docs. There is definitely some dark reflection magic here.", "author": "bsiegel", "createdAt": "2020-10-01T19:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwNDQ2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498504466", "bodyText": "Resolved", "author": "bsiegel", "createdAt": "2020-10-01T20:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDQyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498464427", "bodyText": "nit: aggregating methods by visibility. I see an interspersing of public, package-private, and private methods. When I browse code, usually I hit up the public methods first (at the top) and then go down.", "author": "conniey", "createdAt": "2020-10-01T19:21:04Z", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableAsyncClient.java", "diffHunk": "@@ -606,6 +642,39 @@ public void close() {\n         return getEntityWithResponse(partitionKey, rowKey, select).flatMap(FluxUtil::toMono);\n     }\n \n+    /**", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ3NDEyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498474128", "bodyText": "Gotcha, in this case the client is organized by operation - each operation has a bunch of public overloads, then a few more that also provide the response, and all of them eventually just call the package-private method that actually performs the operation. I can look at re-organizing a bit in a future PR.", "author": "bsiegel", "createdAt": "2020-10-01T19:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDY3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498464675", "bodyText": "Can this entityCreateor return a null item?", "author": "conniey", "createdAt": "2020-10-01T19:21:32Z", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/implementation/ModelHelper.java", "diffHunk": "@@ -74,7 +75,7 @@ public static TableEntity createEntity(Map<String, Object> properties) {\n                 new IllegalStateException(\"'entityCreator' should not be null.\"));\n         }\n \n-        return entityCreator.apply(properties);\n+        return entityCreator.get().addProperties(properties);", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ3NDc2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498474764", "bodyText": "No, thankfully. It calls the TableEntity constructor, and the only way that can fail is if an exception is thrown.", "author": "bsiegel", "createdAt": "2020-10-01T19:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTUyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465521", "bodyText": "Something new in JUnit 5 is that test methods no longer have to be public. So this class could be package-private and same with its methods.", "author": "conniey", "createdAt": "2020-10-01T19:23:15Z", "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/EntityHelperTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.data.tables;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.data.tables.models.TableEntity;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import java.time.OffsetDateTime;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+public class EntityHelperTest {\n+    private final ClientLogger logger = new ClientLogger(EntityHelperTest.class);\n+\n+    @Test\n+    public void testConvertToSubclass() {", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4OTE4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498489186", "bodyText": "Interesting, I guess there's really no point to visibility modifiers when the class just contains tests.", "author": "bsiegel", "createdAt": "2020-10-01T20:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTUyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTg5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465897", "bodyText": "nit; consistent use of final.", "author": "conniey", "createdAt": "2020-10-01T19:23:59Z", "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -411,6 +521,33 @@ void updateEntityWithResponseAsync(UpdateMode mode) {\n         }\n     }\n \n+    @Test\n+    void updateEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"APartitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"ARowKey\", 20);\n+        final int expectedStatusCode = 204;\n+        SingleFieldEntity tableEntity = new SingleFieldEntity(partitionKeyValue, rowKeyValue);", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5MTYxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498491617", "bodyText": "Resolved", "author": "bsiegel", "createdAt": "2020-10-01T20:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTk5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465994", "bodyText": "nit: consistent use of final.", "author": "conniey", "createdAt": "2020-10-01T19:24:10Z", "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -355,6 +404,67 @@ void getEntityWithResponseWithSelectAsync() {\n             .verify();\n     }\n \n+    @Test\n+    void getEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"partitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"rowKey\", 20);\n+        final TableEntity tableEntity = new TableEntity(partitionKeyValue, rowKeyValue);\n+\n+        byte[] bytes = new byte[]{1, 2, 3};", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5MTc3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498491770", "bodyText": "Resolved", "author": "bsiegel", "createdAt": "2020-10-01T20:19:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NjA3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498466075", "bodyText": "ni: empty line", "author": "conniey", "createdAt": "2020-10-01T19:24:22Z", "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -355,6 +404,67 @@ void getEntityWithResponseWithSelectAsync() {\n             .verify();\n     }\n \n+    @Test\n+    void getEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"partitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"rowKey\", 20);\n+        final TableEntity tableEntity = new TableEntity(partitionKeyValue, rowKeyValue);\n+\n+        byte[] bytes = new byte[]{1, 2, 3};\n+        boolean b = true;\n+        OffsetDateTime dateTime = OffsetDateTime.of(2020, 1, 1, 0, 0, 0, 0, ZoneOffset.UTC);\n+        double d = 1.23D;\n+        UUID uuid = UUID.fromString(\"11111111-2222-3333-4444-555555555555\");\n+        int i = 123;\n+        long l = 123L;\n+        String s = \"Test\";\n+        SampleEntity.Color color = SampleEntity.Color.GREEN;\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"ByteField\", bytes);\n+        props.put(\"BooleanField\", b);\n+        props.put(\"DateTimeField\", dateTime);\n+        props.put(\"DoubleField\", d);\n+        props.put(\"UuidField\", uuid);\n+        props.put(\"IntField\", i);\n+        props.put(\"LongField\", l);\n+        props.put(\"StringField\", s);\n+        props.put(\"EnumField\", color);\n+\n+        tableEntity.addProperties(props);\n+\n+", "originalCommit": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5MjA1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498492050", "bodyText": "Resolved", "author": "bsiegel", "createdAt": "2020-10-01T20:20:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NjA3NQ=="}], "type": "inlineReview"}, {"oid": "54920c0e83cfb480ea4f8945c3003b45dae43213", "url": "https://github.com/Azure/azure-sdk-for-java/commit/54920c0e83cfb480ea4f8945c3003b45dae43213", "message": "Address PR comments", "committedDate": "2020-10-01T20:43:38Z", "type": "commit"}]}