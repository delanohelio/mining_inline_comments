{"pr_number": 15123, "pr_title": "Fix a few ADT library issues based on feedback so far", "pr_createdAt": "2020-09-11T22:17:13Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15123", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTI3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487315277", "bodyText": "A setter would take the full map, not a single key value pair. So I just renamed this to more accurately describe what this method does", "author": "timtay-microsoft", "createdAt": "2020-09-11T22:19:45Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/BasicRelationship.java", "diffHunk": "@@ -118,13 +118,13 @@ public BasicRelationship setName(String name) {\n     }\n \n     /**\n-     * Sets the additional properties defined in the model. This field will contain any properties of the relationship that are not already defined by the other strong types of this class.\n+     * Adds an additional property to this model. This field will contain any properties of the relationship that are not already defined by the other strong types of this class.\n      * @param key The key of the additional property to be added to the relationship.\n      * @param value The value of the additional property to be added to the relationship.\n      * @return The BasicRelationship object itself.\n      */\n     @JsonAnySetter\n-    public BasicRelationship setCustomProperties(String key, Object value) {", "originalCommit": "1db3d6e228958eb9610092096cfac7a5e7834c48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTM4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487315386", "bodyText": "We don't plan on extending this class, so let's make it final", "author": "timtay-microsoft", "createdAt": "2020-09-11T22:20:04Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serializer/DigitalTwinsStringSerializer.java", "diffHunk": "@@ -13,7 +13,7 @@\n /**\n  * Configures the {@link StdSerializer<String>} with custom behavior needed to work with Digital Twins REST API.\n  */\n-public class DigitalTwinsStringSerializer extends StdSerializer<String> {\n+public final class DigitalTwinsStringSerializer extends StdSerializer<String> {", "originalCommit": "1db3d6e228958eb9610092096cfac7a5e7834c48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTUxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487315511", "bodyText": "This functions aren't present in the AppConfiguration sample project, and we don't need them", "author": "timtay-microsoft", "createdAt": "2020-09-11T22:20:34Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -35,27 +35,6 @@\n         this.digitalTwinsAsyncClient = digitalTwinsAsyncClient;\n     }\n \n-    /**\n-     * Gets the {@link HttpPipeline} that this client is configured to use for all service requests. This pipeline can\n-     * be customized while building this client through {@link DigitalTwinsClientBuilder#httpPipeline(HttpPipeline)}.\n-     *\n-     * @return The {@link HttpPipeline} that this client uses for all service requests.\n-     */\n-    public HttpPipeline getHttpPipeline() {", "originalCommit": "1db3d6e228958eb9610092096cfac7a5e7834c48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTg3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487315871", "bodyText": "How would we configure the service version?", "author": "abhipsaMisra", "createdAt": "2020-09-11T22:21:52Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -43,15 +43,14 @@\n  * the digital twin models and event routes tied to your Azure Digital Twins instance.\n  * </p>\n  */\n-@ServiceClient(builder = DigitalTwinsClientBuilder.class)\n+@ServiceClient(builder = DigitalTwinsClientBuilder.class, isAsync = true)\n public final class DigitalTwinsAsyncClient {\n     private static final ClientLogger logger = new ClientLogger(DigitalTwinsAsyncClient.class);\n     private static final ObjectMapper mapper = new ObjectMapper();\n-    private final DigitalTwinsServiceVersion serviceVersion;\n     private final AzureDigitalTwinsAPIImpl protocolLayer;\n     private static final Boolean includeModelDefinitionOnGet = true;\n \n-    DigitalTwinsAsyncClient(HttpPipeline pipeline, DigitalTwinsServiceVersion serviceVersion, String host) {\n+    DigitalTwinsAsyncClient(HttpPipeline pipeline, String host) {", "originalCommit": "1db3d6e228958eb9610092096cfac7a5e7834c48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNzI5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487317295", "bodyText": "It's already baked into the http pipeline instance here", "author": "timtay-microsoft", "createdAt": "2020-09-11T22:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxODM3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r487318379", "bodyText": "Wait, no it isn't.", "author": "timtay-microsoft", "createdAt": "2020-09-11T22:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2NzM4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15123#discussion_r488167381", "bodyText": "Even before this PR, we never actually used the service API version that was set in the client builder. Right now, our protocol layer has it hardcoded and has no way to set it. I'll touch base with Srikanta about this", "author": "timtay-microsoft", "createdAt": "2020-09-14T19:23:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxNTg3MQ=="}], "type": "inlineReview"}, {"oid": "7de5da0158f7851dbd0f80f53e6f3501f791accc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7de5da0158f7851dbd0f80f53e6f3501f791accc", "message": "Fix a few ADT library issues based on feedback so far", "committedDate": "2020-09-14T19:21:07Z", "type": "forcePushed"}, {"oid": "ba878f4b046f22d0c5ab46fc36228392d4a6ec9c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ba878f4b046f22d0c5ab46fc36228392d4a6ec9c", "message": "Fix a few ADT library issues based on feedback so far", "committedDate": "2020-09-14T19:31:42Z", "type": "commit"}, {"oid": "f46ba6e41b551a7521e3539f28d08f03a46c89cf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f46ba6e41b551a7521e3539f28d08f03a46c89cf", "message": "fixup", "committedDate": "2020-09-14T19:32:16Z", "type": "commit"}, {"oid": "f46ba6e41b551a7521e3539f28d08f03a46c89cf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f46ba6e41b551a7521e3539f28d08f03a46c89cf", "message": "fixup", "committedDate": "2020-09-14T19:32:16Z", "type": "forcePushed"}, {"oid": "5c6f7cf779bcd10a9782549177e8cb975a8d8251", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c6f7cf779bcd10a9782549177e8cb975a8d8251", "message": "squash", "committedDate": "2020-09-14T19:49:02Z", "type": "commit"}]}