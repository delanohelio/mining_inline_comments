{"pr_number": 15329, "pr_title": "Azure Search Document Batching Arch Board Changes", "pr_createdAt": "2020-09-17T18:00:20Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15329", "timeline": [{"oid": "09e19dca240f3222238769328345178bfc8f86af", "url": "https://github.com/Azure/azure-sdk-for-java/commit/09e19dca240f3222238769328345178bfc8f86af", "message": "Replaced IndexingHooks with lambda functions, added options bag for configuring batch sender, renamed batch client, added additional configurations to batch sender", "committedDate": "2020-09-17T17:54:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NjE0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15329#discussion_r490456140", "bodyText": "Need to figure out how to pass generic information here cleanly. Currently, this has the issue where the type is erased at this point where T resolved to Object. .NET uses FieldBuilder functionality or retrieving the index from the Search service to generate an implicit documentKeyRetriever instead of explicitly requiring it to be configured all the time. So, either a Class<T> will need to be passed somewhere or Java will need to require explicit configuration of the documentKeyRetriever.", "author": "alzimmermsft", "createdAt": "2020-09-17T18:04:42Z", "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchIndexingBufferedAsyncSender.java", "diffHunk": "@@ -15,66 +14,93 @@\n import reactor.core.publisher.Flux;\n import reactor.core.publisher.Mono;\n \n+import java.lang.reflect.Type;\n import java.net.HttpURLConnection;\n-import java.time.Duration;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import java.util.Timer;\n import java.util.TimerTask;\n-import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n \n import static com.azure.core.util.FluxUtil.withContext;\n \n /**\n- * This class provides a client that contains operations for conveniently indexing documents to an Azure Search index.\n- *\n- * @see SearchBatchClientBuilder\n+ * This class provides a buffered sender that contains operations for conveniently indexing documents to an Azure Search\n+ * index.\n  */\n-public final class SearchBatchAsyncClient {\n-    private static final int DEFAULT_BATCH_SIZE = 1000;\n-    private static final long DEFAULT_FLUSH_WINDOW = TimeUnit.SECONDS.toMillis(60);\n-    private static final int TRY_LIMIT = 10;\n-\n+public final class SearchIndexingBufferedAsyncSender<T> {\n     private final SearchAsyncClient client;\n     private final boolean autoFlush;\n     private final long flushWindowMillis;\n     private final int batchSize;\n-    private final IndexingHook indexingHook;\n+    private final int documentTryLimit;\n+\n+    private final Consumer<IndexAction<T>> onActionAddedConsumer;\n+    private final Consumer<IndexAction<T>> onActionSucceededConsumer;\n+    private final BiConsumer<IndexAction<T>, Throwable> onActionErrorBiConsumer;\n+    private final Consumer<IndexAction<T>> onActionRemovedConsumer;\n+\n+    private final Function<T, String> documentKeyRetriever;\n+\n     private final Timer autoFlushTimer;\n \n-    private final Object actionsMutex = 0;\n-    private List<TryTrackingIndexAction> actions = new ArrayList<>();\n+    private final Object actionsMutex = new Object();\n+    private List<TryTrackingIndexAction<T>> actions = new ArrayList<>();\n \n     private final AtomicReference<TimerTask> flushTask = new AtomicReference<>();\n \n-    SearchBatchAsyncClient(SearchAsyncClient client, Boolean autoFlush, Duration flushWindow,\n-        Integer batchSize, IndexingHook indexingHook) {\n-        ClientLogger logger = new ClientLogger(SearchBatchAsyncClient.class);\n-\n-        if (batchSize != null && batchSize < 1) {\n-            throw logger.logExceptionAsError(new IllegalArgumentException(\"'batchSize' cannot be less than one.\"));\n-        }\n+    SearchIndexingBufferedAsyncSender(SearchAsyncClient client, SearchIndexingBufferedSenderOptions<T> options) {\n+        SearchIndexingBufferedSenderOptions<T> buildOptions = (options == null)\n+            ? new SearchIndexingBufferedSenderOptions<>()\n+            : options;\n \n         this.client = client;\n-        this.autoFlush = autoFlush == null || autoFlush;\n-\n-        if (flushWindow == null) {\n-            this.flushWindowMillis = DEFAULT_FLUSH_WINDOW;\n-        } else if (flushWindow.isZero() || flushWindow.isNegative()) {\n-            this.flushWindowMillis = 0;\n-        } else {\n-            this.flushWindowMillis = flushWindow.toMillis();\n-        }\n+        this.autoFlush = buildOptions.getAutoFlush();\n+        this.flushWindowMillis = Math.max(0, buildOptions.getFlushWindow().toMillis());\n+        this.batchSize = buildOptions.getBatchSize();\n+        this.documentTryLimit = buildOptions.getDocumentTryLimit();\n+\n+        this.onActionAddedConsumer = (action) -> {\n+            if (buildOptions.getOnActionAdded() != null) {\n+                buildOptions.getOnActionAdded().accept(action);\n+            }\n+        };\n+\n+        this.onActionSucceededConsumer = (action) -> {\n+            if (buildOptions.getOnActionSucceeded() != null) {\n+                buildOptions.getOnActionSucceeded().accept(action);\n+            }\n+        };\n+\n+        this.onActionErrorBiConsumer = (action, throwable) -> {\n+            if (buildOptions.getOnActionError() != null) {\n+                buildOptions.getOnActionError().accept(action, throwable);\n+            }\n+        };\n+\n+        this.onActionRemovedConsumer = (action) -> {\n+            if (buildOptions.getOnActionRemoved() != null) {\n+                buildOptions.getOnActionRemoved().accept(action);\n+            }\n+        };\n+\n+        this.documentKeyRetriever = (buildOptions.getDocumentKeyRetriever() != null)\n+            ? buildOptions.getDocumentKeyRetriever()\n+            : buildDocumentKeyRetriever(buildOptions.getClass().getGenericSuperclass());\n \n-        this.batchSize = (batchSize == null) ? DEFAULT_BATCH_SIZE : batchSize;\n-        this.indexingHook = indexingHook;\n         this.autoFlushTimer = (this.autoFlush) ? new Timer(true) : null;\n     }\n \n+    private Function<T, String> buildDocumentKeyRetriever(Type clazz) {\n+        return null;", "originalCommit": "09e19dca240f3222238769328345178bfc8f86af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1ODIxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15329#discussion_r490458214", "bodyText": "@JonathanGiles @srnagar @tg-msft what are your thoughts on this?", "author": "alzimmermsft", "createdAt": "2020-09-17T18:08:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NjE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMDY3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15329#discussion_r498430674", "bodyText": "Given this will go out for another preview Java will be making this a required configuration.", "author": "alzimmermsft", "createdAt": "2020-10-01T18:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NjE0MA=="}], "type": "inlineReview"}, {"oid": "e76d88ff102736eaaaa95424d6c816bdda075dbb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e76d88ff102736eaaaa95424d6c816bdda075dbb", "message": "Merge branch 'master' into AzSearch_ArchBoardFeedback", "committedDate": "2020-09-21T17:57:05Z", "type": "commit"}, {"oid": "a23d311b2746e2769ecb70b7a14ee375acf37845", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a23d311b2746e2769ecb70b7a14ee375acf37845", "message": "Changed window to no longer be based on last document add, reduced default try limit to 3 and batch size to 100, made the client more of a processor", "committedDate": "2020-09-21T19:39:44Z", "type": "commit"}, {"oid": "547255166d7aaa97efaf681894f3385442be9c56", "url": "https://github.com/Azure/azure-sdk-for-java/commit/547255166d7aaa97efaf681894f3385442be9c56", "message": "Merge branch 'master' into AzSearch_ArchBoardFeedback", "committedDate": "2020-09-21T21:27:48Z", "type": "commit"}, {"oid": "bedc9e92078ec25b7a7859aa42525a19c176f6fd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bedc9e92078ec25b7a7859aa42525a19c176f6fd", "message": "Merge branch 'master' into AzSearch_ArchBoardFeedback", "committedDate": "2020-09-28T20:43:39Z", "type": "commit"}, {"oid": "7839e89adfd4997bff513b65799d4a36ba69f859", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7839e89adfd4997bff513b65799d4a36ba69f859", "message": "Renamed flushWindow to autoFlushWindow", "committedDate": "2020-09-29T01:08:02Z", "type": "commit"}, {"oid": "016eabfc9d8bfd5d5905169c136082b1a129b63a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/016eabfc9d8bfd5d5905169c136082b1a129b63a", "message": "Merge branch 'master' into AzSearch_ArchBoardFeedback", "committedDate": "2020-09-30T18:24:56Z", "type": "commit"}, {"oid": "fd7fb7b2755d10b238795f940bbd8602cfe67be7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd7fb7b2755d10b238795f940bbd8602cfe67be7", "message": "Force documentKeyRetriever to be set, made batch size and retry count package private, changed onDocumentRemoved to onDocumentSent, added check to send additional documents once a batch submission finishes", "committedDate": "2020-09-30T20:03:00Z", "type": "commit"}, {"oid": "083c86990694e8a51798509d0a9528f43cc62bc7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/083c86990694e8a51798509d0a9528f43cc62bc7", "message": "Moved flushing logic into helper class, added tracking on whether the buffered sender client has been closed, throwing when the client is closed", "committedDate": "2020-09-30T21:51:38Z", "type": "commit"}, {"oid": "5fd6b6057ec94de63e4360ece247fbf16d26c411", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5fd6b6057ec94de63e4360ece247fbf16d26c411", "message": "Update close Javadocs to discuss that any subsequent actions triggered in the batch after closing will throw an exception", "committedDate": "2020-09-30T21:54:44Z", "type": "commit"}, {"oid": "9a2d2f727677f9a73e39d5f794c126f7bd702004", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a2d2f727677f9a73e39d5f794c126f7bd702004", "message": "Add semaphore to ensure only one thread is processing batches at a time", "committedDate": "2020-10-01T00:30:56Z", "type": "commit"}, {"oid": "25d13543a965cb4974258f4a887044a1d42e63df", "url": "https://github.com/Azure/azure-sdk-for-java/commit/25d13543a965cb4974258f4a887044a1d42e63df", "message": "Merge branch 'master' into AzSearch_ArchBoardFeedback", "committedDate": "2020-10-01T01:40:33Z", "type": "commit"}, {"oid": "eed88ae508f6611dadbdb93b1e189dc6b90e31a6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eed88ae508f6611dadbdb93b1e189dc6b90e31a6", "message": "Fix live tests, add additional tests, add batch client closing to all tests with autoFlush = true", "committedDate": "2020-10-01T17:59:33Z", "type": "commit"}]}