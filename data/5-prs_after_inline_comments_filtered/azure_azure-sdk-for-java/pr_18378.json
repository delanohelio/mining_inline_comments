{"pr_number": 18378, "pr_title": "Change the code style of AADSeleniumITHelper", "pr_createdAt": "2020-12-28T12:18:22Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18378", "timeline": [{"oid": "384c2ad3550277e56d1ec09773c554436b0521e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/384c2ad3550277e56d1ec09773c554436b0521e3", "message": "Add logout test", "committedDate": "2020-12-25T08:55:35Z", "type": "commit"}, {"oid": "514453878fac3e45cd8776e9a6a2834100a302b7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/514453878fac3e45cd8776e9a6a2834100a302b7", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into dev", "committedDate": "2020-12-28T02:59:50Z", "type": "commit"}, {"oid": "e45cf8f9aa374510c8a9207cddc4f0374379c5e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e45cf8f9aa374510c8a9207cddc4f0374379c5e7", "message": "modify selenium tests", "committedDate": "2020-12-28T03:47:22Z", "type": "commit"}, {"oid": "28417a81beec15e53e659c9ef0e0b4c7cc38a674", "url": "https://github.com/Azure/azure-sdk-for-java/commit/28417a81beec15e53e659c9ef0e0b4c7cc38a674", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into dev\n\n\u0001 Conflicts:\n\u0001\tsdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/selenium/access/token/scopes/AccessTokenScopesIT.java", "committedDate": "2020-12-28T06:29:37Z", "type": "commit"}, {"oid": "24c1603255856a4367ce2c6165da7055779fb80f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24c1603255856a4367ce2c6165da7055779fb80f", "message": "modify selenium tests", "committedDate": "2020-12-28T07:00:35Z", "type": "commit"}, {"oid": "bb04b7f4476b69a57291f0e16e485f0a3bfd9f61", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bb04b7f4476b69a57291f0e16e485f0a3bfd9f61", "message": "Rename AuthorizationProperties to AuthorizationClientProperties", "committedDate": "2020-12-28T07:43:32Z", "type": "commit"}, {"oid": "64ad42d98099303ebcae75d1ab5a71c070c81482", "url": "https://github.com/Azure/azure-sdk-for-java/commit/64ad42d98099303ebcae75d1ab5a71c070c81482", "message": "Simplify code of AADSeleniumITHelper.", "committedDate": "2020-12-28T12:17:33Z", "type": "commit"}, {"oid": "8b06fbc9e69a4270a7b41e39e71f7709a10c8b66", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b06fbc9e69a4270a7b41e39e71f7709a10c8b66", "message": "In AADSeleniumITHelper:\n1. Delete httpGetAndAssert, use httpGet instead.\n2. Add \"this.app.start()\"", "committedDate": "2020-12-28T23:29:32Z", "type": "commit"}, {"oid": "8dfc13d6265569c4f2e210cc9d8ae30e257b4122", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8dfc13d6265569c4f2e210cc9d8ae30e257b4122", "message": "Fix error about app properties.", "committedDate": "2020-12-29T00:07:19Z", "type": "commit"}, {"oid": "d58ee31038e0725baf06ca7efb42975cd1a5a935", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d58ee31038e0725baf06ca7efb42975cd1a5a935", "message": "Change the order of static code block.", "committedDate": "2020-12-29T00:08:58Z", "type": "commit"}, {"oid": "a1c35fdfb365c6000cf628832cc1c86cfe2b3ac7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1c35fdfb365c6000cf628832cc1c86cfe2b3ac7", "message": "No logic change, just change class name.", "committedDate": "2020-12-29T00:10:04Z", "type": "commit"}, {"oid": "0d1fc0f42e93fb54a164bee0711c0df5ec067ecf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0d1fc0f42e93fb54a164bee0711c0df5ec067ecf", "message": "Update properties.", "committedDate": "2020-12-29T01:03:14Z", "type": "commit"}, {"oid": "f2cb8f1a940469d7575f511cb23ccc894348a8eb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f2cb8f1a940469d7575f511cb23ccc894348a8eb", "message": "Change package name for AADRoleIT.", "committedDate": "2020-12-29T01:13:19Z", "type": "commit"}, {"oid": "dba4e8f6b92c1f6829c4913c98f497869fa14a88", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dba4e8f6b92c1f6829c4913c98f497869fa14a88", "message": "No logic change, just make property easier to read.", "committedDate": "2020-12-29T01:30:58Z", "type": "commit"}, {"oid": "e194625285db4b08ad482c3ea02c831186d6eda8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e194625285db4b08ad482c3ea02c831186d6eda8", "message": "No logic change, just code order.", "committedDate": "2020-12-29T01:34:26Z", "type": "commit"}, {"oid": "416923bd9ad26b5b2f4bb5fd0a019ce0983f25ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/416923bd9ad26b5b2f4bb5fd0a019ce0983f25ea", "message": "Fix assert error in AADAccessTokenScopesIT.", "committedDate": "2020-12-29T01:37:31Z", "type": "commit"}, {"oid": "eabd0119a8f8bb7d1d76a50f9583f255cf637620", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eabd0119a8f8bb7d1d76a50f9583f255cf637620", "message": "Fix assert error in AADRoleIT.", "committedDate": "2020-12-29T01:39:57Z", "type": "commit"}, {"oid": "f4224f91e381c28ad22d78bf0cc4fd1646fc6224", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f4224f91e381c28ad22d78bf0cc4fd1646fc6224", "message": "Change the style of forbidden endpoint.", "committedDate": "2020-12-29T01:43:06Z", "type": "commit"}, {"oid": "d43ca770b68cae51e222f40816ac6751e81c55af", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d43ca770b68cae51e222f40816ac6751e81c55af", "message": "Merge branch 'master' into change-the-code-style-of-selenium-test", "committedDate": "2020-12-29T08:28:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYxMTIwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18378#discussion_r549611208", "bodyText": "Can these 2 lines be combined?", "author": "yiliuTo", "createdAt": "2020-12-29T08:15:09Z", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/selenium/AADSeleniumITHelper.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package com.azure.test.aad.selenium;\n+\n+import com.azure.test.utils.AppRunner;\n+import org.junit.Assert;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.Keys;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.chrome.ChromeDriver;\n+import org.openqa.selenium.chrome.ChromeDriverService;\n+import org.openqa.selenium.chrome.ChromeOptions;\n+import org.openqa.selenium.support.ui.WebDriverWait;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import static com.azure.test.aad.AADTestUtils.AAD_MULTI_TENANT_CLIENT_ID;\n+import static com.azure.test.aad.AADTestUtils.AAD_MULTI_TENANT_CLIENT_SECRET;\n+import static com.azure.test.aad.AADTestUtils.AAD_TENANT_ID_1;\n+import static com.azure.test.aad.AADTestUtils.AAD_USER_NAME_1;\n+import static com.azure.test.aad.AADTestUtils.AAD_USER_PASSWORD_1;\n+import static org.openqa.selenium.support.ui.ExpectedConditions.presenceOfElementLocated;\n+\n+public class AADSeleniumITHelper {\n+\n+    private final String username;\n+    private final String password;\n+    private final AppRunner app;\n+    private final WebDriver driver;\n+    private static final Map<String, String> DEFAULT_PROPERTIES = new HashMap<>();\n+\n+    static {\n+        DEFAULT_PROPERTIES.put(\"azure.activedirectory.tenant-id\", System.getenv(AAD_TENANT_ID_1));\n+        DEFAULT_PROPERTIES.put(\"azure.activedirectory.client-id\", System.getenv(AAD_MULTI_TENANT_CLIENT_ID));\n+        DEFAULT_PROPERTIES.put(\"azure.activedirectory.client-secret\", System.getenv(AAD_MULTI_TENANT_CLIENT_SECRET));\n+        DEFAULT_PROPERTIES.put(\"azure.activedirectory.user-group.allowed-groups\", \"group1\");\n+        DEFAULT_PROPERTIES.put(\"azure.activedirectory.post-logout-redirect-uri\", \"http://localhost:${server.port}\");\n+\n+        final String directory = \"src/test/resources/driver/\";\n+        final String chromedriverLinux = \"chromedriver_linux64\";\n+        final String chromedriverWin32 = \"chromedriver_win32.exe\";\n+        final String chromedriverMac = \"chromedriver_mac64\";\n+        String osName = System.getProperty(\"os.name\").toLowerCase();\n+        Process process = null;\n+        try {\n+            File dir = new File(directory);\n+            if (Pattern.matches(\"linux.*\", osName)) {\n+                process = Runtime.getRuntime().exec(\"chmod +x \" + chromedriverLinux, null, dir);\n+                process.waitFor();\n+                System.setProperty(ChromeDriverService.CHROME_DRIVER_EXE_PROPERTY, directory + chromedriverLinux);\n+            } else if (Pattern.matches(\"windows.*\", osName)) {\n+                System.setProperty(ChromeDriverService.CHROME_DRIVER_EXE_PROPERTY, directory + chromedriverWin32);\n+            } else if (Pattern.matches(\"mac.*\", osName)) {\n+                process = Runtime.getRuntime().exec(\"chmod +x \" + chromedriverMac, null, dir);\n+                process.waitFor();\n+                System.setProperty(ChromeDriverService.CHROME_DRIVER_EXE_PROPERTY, directory + chromedriverMac);\n+            } else {\n+                throw new IllegalStateException(\"Unrecognized osName. osName = \" + System.getProperty(\"os.name\"));\n+            }\n+        } catch (InterruptedException | IOException e) {\n+            throw new RuntimeException(e);\n+        } finally {\n+            if (process != null) {\n+                process.destroy();\n+            }\n+        }\n+    }\n+\n+    public AADSeleniumITHelper(Class<?> appClass, Map<String, String> properties) throws InterruptedException {\n+        username = System.getenv(AAD_USER_NAME_1);\n+        password = System.getenv(AAD_USER_PASSWORD_1);\n+        app = new AppRunner(appClass);\n+        DEFAULT_PROPERTIES.forEach(app::property);\n+        properties.forEach(app::property);\n+\n+        ChromeOptions options = new ChromeOptions();\n+        options.addArguments(\"--headless\");\n+        options.addArguments(\"--incognito\", \"--no-sandbox\", \"--disable-dev-shm-usage\");", "originalCommit": "f4224f91e381c28ad22d78bf0cc4fd1646fc6224", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYxODc1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18378#discussion_r549618756", "bodyText": "Can we add checks on if the authorization code flow is executed for \"arm\" client or the same checks as above?", "author": "yiliuTo", "createdAt": "2020-12-29T08:41:03Z", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/selenium/access/token/scopes/AADAccessTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,95 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.selenium.access.token.scopes;\n+\n+import com.azure.test.aad.selenium.AADSeleniumITHelper;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+public class AADAccessTokenScopesIT {\n+\n+    @Test\n+    public void testAccessTokenScopes() throws InterruptedException {\n+        Map<String, String> arguments = new HashMap<>();\n+        arguments.put(\n+            \"azure.activedirectory.authorization-clients.office.scopes\",\n+            \"https://manage.office.com/ActivityFeed.Read, https://manage.office.com/ActivityFeed.ReadDlp, \"\n+                + \"https://manage.office.com/ServiceHealth.Read\");\n+        arguments.put(\n+            \"azure.activedirectory.authorization-clients.graph.scopes\",\n+            \"https://graph.microsoft.com/User.Read, https://graph.microsoft.com/Directory.AccessAsUser.All\");\n+        AADSeleniumITHelper aadSeleniumITHelper = new AADSeleniumITHelper(DumbApp.class, arguments);\n+\n+        String httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/azure\");\n+        Assert.assertTrue(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/Directory.AccessAsUser.All\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/graph\");\n+        Assert.assertTrue(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/Directory.AccessAsUser.All\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/office\");\n+        Assert.assertFalse(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ActivityFeed.Read\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ActivityFeed.ReadDlp\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ServiceHealth.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"arm\");\n+        Assert.assertNotEquals(httpResponse, \"arm\");\n+    }", "originalCommit": "d43ca770b68cae51e222f40816ac6751e81c55af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYxODg2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18378#discussion_r549618861", "bodyText": "Why do we make arm controller different with the others?", "author": "yiliuTo", "createdAt": "2020-12-29T08:41:25Z", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/selenium/access/token/scopes/AADAccessTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,95 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.selenium.access.token.scopes;\n+\n+import com.azure.test.aad.selenium.AADSeleniumITHelper;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+public class AADAccessTokenScopesIT {\n+\n+    @Test\n+    public void testAccessTokenScopes() throws InterruptedException {\n+        Map<String, String> arguments = new HashMap<>();\n+        arguments.put(\n+            \"azure.activedirectory.authorization-clients.office.scopes\",\n+            \"https://manage.office.com/ActivityFeed.Read, https://manage.office.com/ActivityFeed.ReadDlp, \"\n+                + \"https://manage.office.com/ServiceHealth.Read\");\n+        arguments.put(\n+            \"azure.activedirectory.authorization-clients.graph.scopes\",\n+            \"https://graph.microsoft.com/User.Read, https://graph.microsoft.com/Directory.AccessAsUser.All\");\n+        AADSeleniumITHelper aadSeleniumITHelper = new AADSeleniumITHelper(DumbApp.class, arguments);\n+\n+        String httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/azure\");\n+        Assert.assertTrue(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/Directory.AccessAsUser.All\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/graph\");\n+        Assert.assertTrue(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/Directory.AccessAsUser.All\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"accessTokenScopes/office\");\n+        Assert.assertFalse(httpResponse.contains(\"profile\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ActivityFeed.Read\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ActivityFeed.ReadDlp\"));\n+        Assert.assertTrue(httpResponse.contains(\"https://manage.office.com/ServiceHealth.Read\"));\n+\n+        httpResponse = aadSeleniumITHelper.httpGet(\"arm\");\n+        Assert.assertNotEquals(httpResponse, \"arm\");\n+    }\n+\n+    @EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)\n+    @SpringBootApplication\n+    @RestController\n+    public static class DumbApp {\n+\n+        @GetMapping(value = \"accessTokenScopes/azure\")\n+        public Set<String> azure(\n+            @RegisteredOAuth2AuthorizedClient(\"azure\") OAuth2AuthorizedClient authorizedClient) {\n+            return Optional.of(authorizedClient)\n+                           .map(OAuth2AuthorizedClient::getAccessToken)\n+                           .map(OAuth2AccessToken::getScopes)\n+                           .orElse(null);\n+        }\n+\n+        @GetMapping(value = \"accessTokenScopes/graph\")\n+        public Set<String> graph(\n+            @RegisteredOAuth2AuthorizedClient(\"graph\") OAuth2AuthorizedClient authorizedClient) {\n+            return Optional.of(authorizedClient)\n+                           .map(OAuth2AuthorizedClient::getAccessToken)\n+                           .map(OAuth2AccessToken::getScopes)\n+                           .orElse(null);\n+        }\n+\n+        @GetMapping(value = \"accessTokenScopes/office\")\n+        public Set<String> office(\n+            @RegisteredOAuth2AuthorizedClient(\"office\") OAuth2AuthorizedClient authorizedClient) {\n+            return Optional.of(authorizedClient)\n+                           .map(OAuth2AuthorizedClient::getAccessToken)\n+                           .map(OAuth2AccessToken::getScopes)\n+                           .orElse(null);\n+        }\n+\n+        @GetMapping(value = \"arm\")\n+        public String arm(\n+            @RegisteredOAuth2AuthorizedClient(\"arm\") OAuth2AuthorizedClient authorizedClient) {\n+            return \"arm\";", "originalCommit": "d43ca770b68cae51e222f40816ac6751e81c55af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}