{"pr_number": 10464, "pr_title": "Object replication", "pr_createdAt": "2020-04-23T19:08:12Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10464", "timeline": [{"oid": "e22e4abcfaa18b19dce446b58f547b8a222b7088", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e22e4abcfaa18b19dce446b58f547b8a222b7088", "message": "Generated ors code", "committedDate": "2020-04-21T00:36:10Z", "type": "commit"}, {"oid": "397fe0cdf52218bbb97a3340edb5b7018185e0eb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/397fe0cdf52218bbb97a3340edb5b7018185e0eb", "message": "Started on tests", "committedDate": "2020-04-21T23:24:39Z", "type": "commit"}, {"oid": "73cbd23e5f32ab589dc5b246180f02475ed03c18", "url": "https://github.com/Azure/azure-sdk-for-java/commit/73cbd23e5f32ab589dc5b246180f02475ed03c18", "message": "Started adding Ors custom types", "committedDate": "2020-04-22T21:34:13Z", "type": "commit"}, {"oid": "eafe6d31e576e2a59e50c880b473397a3466d0be", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eafe6d31e576e2a59e50c880b473397a3466d0be", "message": "Generated BlobItemInternal", "committedDate": "2020-04-22T22:40:35Z", "type": "commit"}, {"oid": "3e6fe1a29209c875fdb4064a81f3f34f3630c205", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3e6fe1a29209c875fdb4064a81f3f34f3630c205", "message": "Converted BlobItem and BlobItemProperties to be wrappers around generated types", "committedDate": "2020-04-22T23:22:57Z", "type": "commit"}, {"oid": "4d0231a914527c1bb7a34644b3d3df4407abe88e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4d0231a914527c1bb7a34644b3d3df4407abe88e", "message": "Small change", "committedDate": "2020-04-22T23:35:54Z", "type": "commit"}, {"oid": "b1c20714b99d37906c7199fc5cad647d6a657112", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1c20714b99d37906c7199fc5cad647d6a657112", "message": "Test for ors", "committedDate": "2020-04-23T19:03:11Z", "type": "commit"}, {"oid": "927e687a799ba4964da1c43106081c61d6c33e20", "url": "https://github.com/Azure/azure-sdk-for-java/commit/927e687a799ba4964da1c43106081c61d6c33e20", "message": "Revert swagger readme", "committedDate": "2020-04-23T19:07:19Z", "type": "commit"}, {"oid": "6325aa1ad55955c02cea6a60cd15b032d5543e4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6325aa1ad55955c02cea6a60cd15b032d5543e4e", "message": "Started on test for download", "committedDate": "2020-04-24T19:42:53Z", "type": "commit"}, {"oid": "7c1fda6d4d80dfde0b3a83ea78b394c5607be18c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c1fda6d4d80dfde0b3a83ea78b394c5607be18c", "message": "Successfully generating BlobDownloadHeaders", "committedDate": "2020-04-24T23:01:20Z", "type": "commit"}, {"oid": "52a1e28c20558c76eccbb72c32e1dc59eef93be4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/52a1e28c20558c76eccbb72c32e1dc59eef93be4", "message": "Added test for download properties", "committedDate": "2020-04-27T17:53:14Z", "type": "commit"}, {"oid": "e082e19459c2f38ac0ca8e9d0c1594043c077e79", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e082e19459c2f38ac0ca8e9d0c1594043c077e79", "message": "CI fixes", "committedDate": "2020-04-27T19:20:39Z", "type": "commit"}, {"oid": "0443ce9f81729bee855368c3a6ec1dc676381958", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0443ce9f81729bee855368c3a6ec1dc676381958", "message": "CI fixes", "committedDate": "2020-04-28T17:14:02Z", "type": "commit"}, {"oid": "0443ce9f81729bee855368c3a6ec1dc676381958", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0443ce9f81729bee855368c3a6ec1dc676381958", "message": "CI fixes", "committedDate": "2020-04-28T17:14:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzNjA4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416836080", "bodyText": "nit : add a new line to the end in swagger README", "author": "gapra-msft", "createdAt": "2020-04-28T18:34:55Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "diffHunk": "@@ -342,6 +364,70 @@ public BlobDownloadHeaders setMetadata(Map<String, String> metadata) {\n         return this;\n     }\n \n+    /**\n+     * Get the objectReplicationDestinationPolicyId property: Optional. Only\n+     * valid when Object Replication is enabled for the storage container and\n+     * on the destination blob of the replication.\n+     *\n+     * @return the objectReplicationDestinationPolicyId value.\n+     */\n+    public String getObjectReplicationDestinationPolicyId() {\n+        return this.objectReplicationRuleStatus.getOrDefault(\"policy-id\", null);\n+    }\n+\n+    /**\n+     * Set the objectReplicationDestinationPolicyId property: Optional. Only\n+     * valid when Object Replication is enabled for the storage container and\n+     * on the destination blob of the replication.\n+     *\n+     * @param objectReplicationDestinationPolicyId the\n+     * objectReplicationDestinationPolicyId value to set.\n+     * @return the BlobDownloadHeaders object itself.\n+     */\n+    public BlobDownloadHeaders setObjectReplicationDestinationPolicyId(String objectReplicationDestinationPolicyId) {\n+        this.objectReplicationDestinationPolicyId = objectReplicationDestinationPolicyId;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the objectReplicationRuleStatus property: The\n+     * objectReplicationRuleStatus property.\n+     *\n+     * @return the objectReplicationRuleStatus value.\n+     */\n+    public Map<String, ObjectReplicationPolicy> getObjectReplicationSourcePolicies() {\n+        Map<String, ObjectReplicationPolicy> objectReplicationSourcePolicies = new HashMap<>();\n+        this.objectReplicationDestinationPolicyId = this.objectReplicationRuleStatus.getOrDefault(\"policy-id\", null);\n+        if (objectReplicationDestinationPolicyId == null) {\n+            for (String str : this.objectReplicationRuleStatus.keySet()) {\n+                String[] split = str.split(\"_\");\n+                String policyId = split[0];\n+                String ruleId = split[1];\n+                if (objectReplicationSourcePolicies.containsKey(policyId)) {\n+                    objectReplicationSourcePolicies.get(policyId)\n+                        .putRuleAndStatus(ruleId, this.objectReplicationRuleStatus.get(str));\n+                } else {\n+                    ObjectReplicationPolicy policy = new ObjectReplicationPolicy(policyId);\n+                    policy.putRuleAndStatus(ruleId, objectReplicationRuleStatus.get(str));\n+                    objectReplicationSourcePolicies.put(policyId, policy);\n+                }\n+            }\n+        }\n+        return objectReplicationSourcePolicies;    }", "originalCommit": "0443ce9f81729bee855368c3a6ec1dc676381958", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzODA4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416838088", "bodyText": "Is this ok to do since BlobItemInternal is \"private\" and BlobItem is public. Would it be better to like extract the pieces in a private method wherever you use this constructor and make this constructor like take in all the properties?", "author": "gapra-msft", "createdAt": "2020-04-28T18:38:18Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobItem.java", "diffHunk": "@@ -15,6 +17,30 @@\n @JacksonXmlRootElement(localName = \"Blob\")\n @Fluent\n public final class BlobItem {\n+\n+    /**\n+     * Initializes a new BlobItem.\n+     */\n+    public BlobItem() {\n+\n+    }\n+\n+    /**\n+     * Initializes a new blob item.\n+     *\n+     * @param blobItemInternal The internal structure from which to pull state.\n+     */\n+    public BlobItem(BlobItemInternal blobItemInternal) {", "originalCommit": "0443ce9f81729bee855368c3a6ec1dc676381958", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzODc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416838791", "bodyText": "Though this is technically cleaner", "author": "gapra-msft", "createdAt": "2020-04-28T18:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzODA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1NjAxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416856016", "bodyText": "Hmm. Interesting. I guess that is what we do with BlobProperties. Though I don't remember the reason why. There must've been a reason other than we needed to construct it from different sources (download, getProperties, etc.) or we would've just had multiple constructors. I can change it if we had a good reason for that.", "author": "rickle-msft", "createdAt": "2020-04-28T19:08:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzODA4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDAzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416840030", "bodyText": "Is there a clean way we could unduplicate this code? I'm not sure where it could live though.", "author": "gapra-msft", "createdAt": "2020-04-28T18:41:29Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobProperties.java", "diffHunk": "@@ -191,6 +194,116 @@ public BlobProperties(final OffsetDateTime creationTime, final OffsetDateTime la\n         this.committedBlockCount = committedBlockCount;\n         this.versionId = versionId;\n         this.isCurrentVersion = isCurrentVersion;\n+\n+        this.objectReplicationSourcePolicies = new HashMap<>();\n+        this.objectReplicationDestinationPolicyId = objectReplicationStatus.getOrDefault(\"policy-id\", null);", "originalCommit": "0443ce9f81729bee855368c3a6ec1dc676381958", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1NjY2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416856666", "bodyText": "I don't think so. One lives in the readme and the other lives in BlobProperties. And they aren't totally identical because the one here saves this as the actual property rather than constructing it in the getter, and that would be way more complicated to do in swagger.", "author": "rickle-msft", "createdAt": "2020-04-28T19:09:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1NzMyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r419657328", "bodyText": "Even with the update of moving this out of the readme, I don't know that there's a great place for us to put this code to get rid of the duplication. There's not really a common code path between them, and we're trying to move away from using utility methods.", "author": "rickle-msft", "createdAt": "2020-05-04T18:58:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDk2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416840965", "bodyText": "Why are there 2 similar seeming constructors added? Is it to make the OR logic separate from the max constructor?", "author": "gapra-msft", "createdAt": "2020-04-28T18:42:57Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobProperties.java", "diffHunk": "@@ -191,6 +194,116 @@ public BlobProperties(final OffsetDateTime creationTime, final OffsetDateTime la\n         this.committedBlockCount = committedBlockCount;\n         this.versionId = versionId;\n         this.isCurrentVersion = isCurrentVersion;\n+\n+        this.objectReplicationSourcePolicies = new HashMap<>();\n+        this.objectReplicationDestinationPolicyId = objectReplicationStatus.getOrDefault(\"policy-id\", null);\n+        if (objectReplicationDestinationPolicyId == null) {\n+            for (String str : objectReplicationStatus.keySet()) {\n+                String[] split = str.split(\"_\");\n+                String policyId = split[0];\n+                String ruleId = split[1];\n+                if (objectReplicationSourcePolicies.containsKey(policyId)) {\n+                    objectReplicationSourcePolicies.get(policyId)\n+                        .putRuleAndStatus(ruleId, objectReplicationStatus.get(str));\n+                } else {\n+                    ObjectReplicationPolicy policy = new ObjectReplicationPolicy(policyId);\n+                    policy.putRuleAndStatus(ruleId, objectReplicationStatus.get(str));\n+                    objectReplicationSourcePolicies.put(policyId, policy);\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Constructs a {@link BlobProperties}.\n+     *\n+     * @param creationTime Creation time of the blob.\n+     * @param lastModified Datetime when the blob was last modified.\n+     * @param eTag ETag of the blob.\n+     * @param blobSize Size of the blob.\n+     * @param contentType Content type specified for the blob.\n+     * @param contentMd5 Content MD5 specified for the blob.\n+     * @param contentEncoding Content encoding specified for the blob.\n+     * @param contentDisposition Content disposition specified for the blob.\n+     * @param contentLanguage Content language specified for the blob.\n+     * @param cacheControl Cache control specified for the blob.\n+     * @param blobSequenceNumber The current sequence number for a page blob, if the blob is an append or block blob\n+     * pass {@code null}.\n+     * @param blobType Type of the blob.\n+     * @param leaseStatus Status of the lease on the blob.\n+     * @param leaseState State of the lease on the blob.\n+     * @param leaseDuration Type of lease on the blob.\n+     * @param copyId Identifier of the last copy operation performed on the blob.\n+     * @param copyStatus Status of the last copy operation performed on the blob.\n+     * @param copySource Source of the last copy operation performed on the blob.\n+     * @param copyProgress Progress of the last copy operation performed on the blob.\n+     * @param copyCompletionTime Datetime when the last copy operation on the blob completed.\n+     * @param copyStatusDescription Description of the last copy operation on the blob.\n+     * @param isServerEncrypted Flag indicating if the blob's content is encrypted on the server.\n+     * @param isIncrementalCopy Flag indicating if the blob was incrementally copied.\n+     * @param copyDestinationSnapshot Snapshot identifier of the last incremental copy snapshot for the blob.\n+     * @param accessTier Access tier of the blob.\n+     * @param isAccessTierInferred Flag indicating if the access tier of the blob was inferred from properties of the\n+     * blob.\n+     * @param archiveStatus Archive status of the blob.\n+     * @param encryptionKeySha256 SHA256 of the customer provided encryption key used to encrypt the blob on the server.\n+     * @param accessTierChangeTime Datetime when the access tier of the blob last changed.\n+     * @param metadata Metadata associated with the blob.\n+     * @param committedBlockCount Number of blocks committed to an append blob, if the blob is a block or page blob\n+     * pass {@code null}.\n+     * @param versionId The version identifier of the blob.\n+     * @param isCurrentVersion Flag indicating if version identifier points to current version of the blob.", "originalCommit": "0443ce9f81729bee855368c3a6ec1dc676381958", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1Nzk2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416857966", "bodyText": "It's because sometimes we construct this type from downloadHeaders, which has already deserialized the ORS stuff (second constructor) and sometimes we construct this type from getPropertiesHeaders, which hasn't already done this.\nOur story for returning these properties is a mess.", "author": "rickle-msft", "createdAt": "2020-04-28T19:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyNzUwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416927503", "bodyText": "Is there a way we could get the above constructor to call into this one (it could still do that deserialization) in the above constructor", "author": "gapra-msft", "createdAt": "2020-04-28T21:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyMDY5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r417520698", "bodyText": "Yea that's probably more concise. I can do the deserialization and then call into the last constructor. Good call.", "author": "rickle-msft", "createdAt": "2020-04-29T18:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1NjQwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r419656406", "bodyText": "Turns out this isn't possible. The compiler needs the call into another constructor to be the first line :(", "author": "rickle-msft", "createdAt": "2020-05-04T18:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0MDk2NQ=="}], "type": "inlineReview"}, {"oid": "1d2f369571fccb54152cf767efdc9796a6bc59bd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1d2f369571fccb54152cf767efdc9796a6bc59bd", "message": "Spotbugs fixes", "committedDate": "2020-04-28T20:07:41Z", "type": "commit"}, {"oid": "1d2f369571fccb54152cf767efdc9796a6bc59bd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1d2f369571fccb54152cf767efdc9796a6bc59bd", "message": "Spotbugs fixes", "committedDate": "2020-04-28T20:07:41Z", "type": "forcePushed"}, {"oid": "baa9c3e358b9dca189a7fa41f1235814b90c0776", "url": "https://github.com/Azure/azure-sdk-for-java/commit/baa9c3e358b9dca189a7fa41f1235814b90c0776", "message": "Removed gross readme stuff", "committedDate": "2020-04-28T20:43:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxNTcwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10464#discussion_r416915703", "bodyText": "Can we add a comment somewhere just for future reference for why we have these two classes?", "author": "gapra-msft", "createdAt": "2020-04-28T20:54:32Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "diffHunk": "@@ -12,27 +12,107 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n import java.time.OffsetDateTime;\n import java.util.Map;\n+import java.util.HashMap;\n \n /**\n  * Defines headers for Download operation.\n  */\n @JacksonXmlRootElement(localName = \"Blob-Download-Headers\")\n @Fluent\n public final class BlobDownloadHeaders {\n+\n+    public BlobDownloadHeaders() {\n+\n+    }\n+\n+    public BlobDownloadHeaders(com.azure.storage.blob.implementation.models.BlobDownloadHeaders headers) {", "originalCommit": "baa9c3e358b9dca189a7fa41f1235814b90c0776", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f891ac5fa2531d83b89a79d39bd1beef8a244b5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0f891ac5fa2531d83b89a79d39bd1beef8a244b5", "message": "Doc update", "committedDate": "2020-05-04T19:04:28Z", "type": "commit"}, {"oid": "e7f39f686f3228aafd8b4a8dfb2c936cc513d3a3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7f39f686f3228aafd8b4a8dfb2c936cc513d3a3", "message": "CI fixes", "committedDate": "2020-05-04T19:31:34Z", "type": "commit"}]}