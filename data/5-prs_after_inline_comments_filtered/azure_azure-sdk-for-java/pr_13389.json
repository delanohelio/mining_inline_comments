{"pr_number": 13389, "pr_title": "Auditing support", "pr_createdAt": "2020-07-21T20:26:44Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13389", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ3NDUzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r458474533", "bodyText": "This should be called - CosmosMappingContextLookup", "author": "kushagraThapar", "createdAt": "2020-07-22T01:06:22Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/config/CosmosAuditingRegistrar.java", "diffHunk": "@@ -0,0 +1,117 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.data.cosmos.config;\n+\n+import com.azure.spring.data.cosmos.Constants;\n+import com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter;\n+import com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity;\n+import com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.support.BeanDefinitionRegistry;\n+import org.springframework.data.auditing.IsNewAwareAuditingHandler;\n+import org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport;\n+import org.springframework.data.auditing.config.AuditingConfiguration;\n+import org.springframework.data.mapping.context.MappingContext;\n+import org.springframework.util.Assert;\n+\n+import java.lang.annotation.Annotation;\n+\n+/**\n+ * Adapted from <a href=\"https://github.com/spring-projects/spring-data-mongodb/blob/master/spring-data-mongodb\n+ * /src/main/java/org/springframework/data/mongodb/config/MongoAuditingRegistrar.java\">MongoAuditingRegistrar.java</a>\n+ */\n+class CosmosAuditingRegistrar extends AuditingBeanDefinitionRegistrarSupport {\n+\n+    /*\n+     * (non-Javadoc)\n+     * @see org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport#getAnnotation()\n+     */\n+    @Override\n+    protected Class<? extends Annotation> getAnnotation() {\n+        return EnableCosmosAuditing.class;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * @see org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport#getAuditingHandlerBeanName()\n+     */\n+    @Override\n+    protected String getAuditingHandlerBeanName() {\n+        return Constants.AUDITING_HANDLER_BEAN_NAME;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * @see org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport#\n+     * getAuditHandlerBeanDefinitionBuilder(org.springframework.data.auditing.config.AuditingConfiguration)\n+     */\n+    @Override\n+    protected BeanDefinitionBuilder getAuditHandlerBeanDefinitionBuilder(AuditingConfiguration configuration) {\n+        Assert.notNull(configuration, \"AuditingConfiguration must not be null!\");\n+\n+        final BeanDefinitionBuilder builder =\n+            BeanDefinitionBuilder.rootBeanDefinition(IsNewAwareAuditingHandler.class);\n+\n+        final BeanDefinitionBuilder definition =\n+            BeanDefinitionBuilder.genericBeanDefinition(DocumentDbMappingContextLookup.class);\n+        definition.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);\n+\n+        builder.addConstructorArgValue(definition.getBeanDefinition());\n+        return configureDefaultAuditHandlerAttributes(configuration, builder);\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * @see org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport#\n+     * registerAuditListener(org.springframework.beans.factory.config.BeanDefinition,\n+     * org.springframework.beans.factory.support.BeanDefinitionRegistry)\n+     */\n+    @Override\n+    protected void registerAuditListenerBeanDefinition(BeanDefinition auditingHandlerDefinition,\n+                                                       BeanDefinitionRegistry registry) {\n+        // TODO: consider moving to event listener for auditing rather than injecting the\n+        // IsNewAwareAuditingHandler directly - this would require integrating CosmosTemplate with\n+        // the spring eventing system which would be a chunk of work beyond the scope of this PR\n+    }\n+\n+    static class DocumentDbMappingContextLookup implements", "originalCommit": "80e4196af425e48606e7353478b8dd21b49249b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ3NTE2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r458475163", "bodyText": "Since all the other annotations are in com/azure/spring/data/cosmos/core/mapping/ directory, I think we should also place this class in the same directory to be consistent with other Annotations.", "author": "kushagraThapar", "createdAt": "2020-07-22T01:08:58Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/config/EnableCosmosAuditing.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "originalCommit": "80e4196af425e48606e7353478b8dd21b49249b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1NzE1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r461157153", "bodyText": "@Blackbaud-EricSlater Any plans on updating this class package to core/mapping ?", "author": "kushagraThapar", "createdAt": "2020-07-27T20:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ3NTE2Mw=="}], "type": "inlineReview"}, {"oid": "86b9d0a8b398710568f0c8cf47c3a81f194b3e1f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/86b9d0a8b398710568f0c8cf47c3a81f194b3e1f", "message": "port from spring-data-cosmos", "committedDate": "2020-07-27T17:44:11Z", "type": "commit"}, {"oid": "7ce703f276aa0b80eeecc58674eb017cc3280863", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ce703f276aa0b80eeecc58674eb017cc3280863", "message": "fix various small style and java doc issues", "committedDate": "2020-07-27T17:45:39Z", "type": "commit"}, {"oid": "9e296d21b288548cc5a2d039ee0ccebdb8c9f820", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e296d21b288548cc5a2d039ee0ccebdb8c9f820", "message": "add reactive support for auditable entities", "committedDate": "2020-07-27T19:33:25Z", "type": "commit"}, {"oid": "9e296d21b288548cc5a2d039ee0ccebdb8c9f820", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e296d21b288548cc5a2d039ee0ccebdb8c9f820", "message": "add reactive support for auditable entities", "committedDate": "2020-07-27T19:33:25Z", "type": "forcePushed"}, {"oid": "c9a55cc0dcb22bd1f6691393d7234bd9b6d5a137", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9a55cc0dcb22bd1f6691393d7234bd9b6d5a137", "message": "add documentation explaining feature to README and include sample entity", "committedDate": "2020-07-27T20:27:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1OTAxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r461159019", "bodyText": "Because of multi-database support we have now - hard coding null in this constructor will be in-correct.\nAs in that case, this auditing feature will not work in multi-database configuration.\nSee DatabaseConfiguration.java class for more information on multi-database support example.", "author": "kushagraThapar", "createdAt": "2020-07-27T20:45:30Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -76,7 +79,7 @@\n      */\n     public CosmosTemplate(CosmosAsyncClient client, String databaseName,\n                           CosmosConfig cosmosConfig, MappingCosmosConverter mappingCosmosConverter) {\n-        this(new CosmosFactory(client, databaseName), cosmosConfig, mappingCosmosConverter);\n+        this(new CosmosFactory(client, databaseName), cosmosConfig, mappingCosmosConverter, null);", "originalCommit": "c9a55cc0dcb22bd1f6691393d7234bd9b6d5a137", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMTIzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r461211230", "bodyText": "added a new constructor that includes IsNewAwareAuditingHandler as a parameter for use in multi-database configuration. Updated sample in DatabaseConfiguration.java to use this new constructor with auditing enabled.", "author": "Blackbaud-EricSlater", "createdAt": "2020-07-27T22:41:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1OTAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MDkyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r461160927", "bodyText": "Same here - support for multi-database configuration. Auditing should work in that case too.", "author": "kushagraThapar", "createdAt": "2020-07-27T20:49:14Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/ReactiveCosmosTemplate.java", "diffHunk": "@@ -64,7 +66,7 @@\n      */\n     public ReactiveCosmosTemplate(CosmosAsyncClient client, String databaseName,\n                                   CosmosConfig cosmosConfig, MappingCosmosConverter mappingCosmosConverter) {\n-        this(new CosmosFactory(client, databaseName), cosmosConfig, mappingCosmosConverter);\n+        this(new CosmosFactory(client, databaseName), cosmosConfig, mappingCosmosConverter, null);", "originalCommit": "c9a55cc0dcb22bd1f6691393d7234bd9b6d5a137", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMTEzOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13389#discussion_r461211139", "bodyText": "added a new constructor that includes IsNewAwareAuditingHandler as a parameter for use in multi-database configuration. Updated sample in DatabaseConfiguration.java to use this new constructor with auditing enabled.", "author": "Blackbaud-EricSlater", "createdAt": "2020-07-27T22:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MDkyNw=="}], "type": "inlineReview"}, {"oid": "e5895313224b5648ab13b57ebce71098192c85e0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e5895313224b5648ab13b57ebce71098192c85e0", "message": "add missing copyright header", "committedDate": "2020-07-27T21:11:10Z", "type": "commit"}, {"oid": "5e0ff7b9e8e93ae473c4df8df90dfb015ccdd9c7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e0ff7b9e8e93ae473c4df8df90dfb015ccdd9c7", "message": "add constructors that support multi database configurations using auditable entities. update readme and samples", "committedDate": "2020-07-27T22:38:28Z", "type": "commit"}, {"oid": "81f3c88d1c1c047ef9e6e160e04663675ec76a9e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/81f3c88d1c1c047ef9e6e160e04663675ec76a9e", "message": "move @EnableCosmosAuditing annotation and registrar to mapping package", "committedDate": "2020-07-27T22:44:18Z", "type": "commit"}, {"oid": "1b2c448ad400b96c1192564937f2e74b50bacd46", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b2c448ad400b96c1192564937f2e74b50bacd46", "message": "fix linenum issues and missing samples in README", "committedDate": "2020-07-28T17:16:53Z", "type": "commit"}]}