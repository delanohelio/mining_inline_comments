{"pr_number": 13721, "pr_title": "Renaming to QueueProperties, creating CreateQueueOptions, flattening MessageDetailsCount", "pr_createdAt": "2020-08-02T22:11:34Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13721", "timeline": [{"oid": "8239b41576f8d548fc8d3c55b03bc2d69e1a1430", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8239b41576f8d548fc8d3c55b03bc2d69e1a1430", "message": "Creating CreateQueueOptions.", "committedDate": "2020-07-30T20:24:56Z", "type": "commit"}, {"oid": "c045195605c4104a9ce1b338f7f8cd6631ef2c91", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c045195605c4104a9ce1b338f7f8cd6631ef2c91", "message": "Fixing punctuation in QueueDescription.", "committedDate": "2020-07-30T20:25:10Z", "type": "commit"}, {"oid": "24efbeca12a96dea9405046c9cd37a003e316273", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24efbeca12a96dea9405046c9cd37a003e316273", "message": "Integrating CreateQueueOptions into QueueDescription and ServiceBusManagementAsyncClient.", "committedDate": "2020-07-30T20:37:49Z", "type": "commit"}, {"oid": "0d7c3685ecf3548bac5e3786f5b73361baa01fde", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0d7c3685ecf3548bac5e3786f5b73361baa01fde", "message": "Fixes build breaks using CreateQueueOptions.", "committedDate": "2020-07-30T21:38:36Z", "type": "commit"}, {"oid": "bf50fb697a966514f2445f8ef368fe6a8333df35", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bf50fb697a966514f2445f8ef368fe6a8333df35", "message": "Updating the createQueue EntityHelper.", "committedDate": "2020-07-30T21:49:07Z", "type": "commit"}, {"oid": "d8923b8e34523eb0b1ac458b3dbcd6462613c1ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d8923b8e34523eb0b1ac458b3dbcd6462613c1ea", "message": "Rename QueueDescription.java  -> QueueProperties.java.", "committedDate": "2020-07-30T21:51:47Z", "type": "commit"}, {"oid": "a56339c9aca403caec227d7c302ce6f1add80e84", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a56339c9aca403caec227d7c302ce6f1add80e84", "message": "Adding equals method to test.", "committedDate": "2020-07-30T22:11:55Z", "type": "commit"}, {"oid": "762013db443b7bfb5017345ff4bf5400f886ba49", "url": "https://github.com/Azure/azure-sdk-for-java/commit/762013db443b7bfb5017345ff4bf5400f886ba49", "message": "Fixing build breaks.", "committedDate": "2020-07-31T21:36:22Z", "type": "commit"}, {"oid": "72acab7b961af1bceb80025f8a828174bc145326", "url": "https://github.com/Azure/azure-sdk-for-java/commit/72acab7b961af1bceb80025f8a828174bc145326", "message": "Forcing load classes.", "committedDate": "2020-07-31T22:01:35Z", "type": "commit"}, {"oid": "521dbd353d7efc4e59bcfaa87a2f40bf2af42c55", "url": "https://github.com/Azure/azure-sdk-for-java/commit/521dbd353d7efc4e59bcfaa87a2f40bf2af42c55", "message": "Forcing QueueProperties, TopicProperties to load. Fixing broken update test.", "committedDate": "2020-07-31T22:14:32Z", "type": "commit"}, {"oid": "857c7a56baaf0a6cfda4111bfdf557cd88761b07", "url": "https://github.com/Azure/azure-sdk-for-java/commit/857c7a56baaf0a6cfda4111bfdf557cd88761b07", "message": "Change visibility of methods cannot be updated.", "committedDate": "2020-08-02T17:49:54Z", "type": "commit"}, {"oid": "85be76eebcc5a23e1190d30cd3cc208d6ef36a17", "url": "https://github.com/Azure/azure-sdk-for-java/commit/85be76eebcc5a23e1190d30cd3cc208d6ef36a17", "message": "Adding tests for CreateQueueOptions.", "committedDate": "2020-08-02T20:37:43Z", "type": "commit"}, {"oid": "a9c03b2c3e098730444ade4162dbf6f90609ec6e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a9c03b2c3e098730444ade4162dbf6f90609ec6e", "message": "EntityHelper tests.", "committedDate": "2020-08-02T21:20:06Z", "type": "commit"}, {"oid": "bebfe07d7dc1af5c429acf6358833c251eec8b3f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bebfe07d7dc1af5c429acf6358833c251eec8b3f", "message": "Move MessageCountDetails into implementation folder.", "committedDate": "2020-08-02T21:30:40Z", "type": "commit"}, {"oid": "778af147997384b7d11b0ec6b1185d0507e0f773", "url": "https://github.com/Azure/azure-sdk-for-java/commit/778af147997384b7d11b0ec6b1185d0507e0f773", "message": "Fixing build breaks.", "committedDate": "2020-08-02T21:40:25Z", "type": "commit"}, {"oid": "40077b07cd3ac9c3cfaf2328f1128491a8a75278", "url": "https://github.com/Azure/azure-sdk-for-java/commit/40077b07cd3ac9c3cfaf2328f1128491a8a75278", "message": "Updating NPE.. RuntimeInfo.", "committedDate": "2020-08-02T21:56:05Z", "type": "commit"}, {"oid": "1a849f3e1685fb7aa018c94650eee323a3bed114", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a849f3e1685fb7aa018c94650eee323a3bed114", "message": "Remove incorrect header.", "committedDate": "2020-08-02T22:47:01Z", "type": "commit"}, {"oid": "3418e950e905984fb72c221c06d6544c064462da", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3418e950e905984fb72c221c06d6544c064462da", "message": "Fixing constructor to use QueueProperties.", "committedDate": "2020-08-02T22:57:51Z", "type": "commit"}, {"oid": "014b508d6ea07a8274354d3f67960c192369b75b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/014b508d6ea07a8274354d3f67960c192369b75b", "message": "Update CreateQueueOptions to use primitive classes.", "committedDate": "2020-08-02T23:09:54Z", "type": "commit"}, {"oid": "74953a086ef5f1e3dd3bf78ee20eab2f9a929a39", "url": "https://github.com/Azure/azure-sdk-for-java/commit/74953a086ef5f1e3dd3bf78ee20eab2f9a929a39", "message": "Fixing build break.", "committedDate": "2020-08-02T23:13:31Z", "type": "commit"}, {"oid": "1aa85f20ff1e1de30aa42082d223244c755b4a70", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1aa85f20ff1e1de30aa42082d223244c755b4a70", "message": "Updating SubscriptionRuntimeInfo.", "committedDate": "2020-08-02T23:17:22Z", "type": "commit"}, {"oid": "59c3cca8e028c5adb4d941c73c52fc7e47240466", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59c3cca8e028c5adb4d941c73c52fc7e47240466", "message": "Adding NPE checks.", "committedDate": "2020-08-03T04:25:22Z", "type": "commit"}, {"oid": "48719316a86863081d6261af11165d73e29faaee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/48719316a86863081d6261af11165d73e29faaee", "message": "Fixing order of checks.", "committedDate": "2020-08-03T04:56:56Z", "type": "commit"}, {"oid": "e62be5683c3277f08f19761e134c3ad7c393f717", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e62be5683c3277f08f19761e134c3ad7c393f717", "message": "Fixing spotbug failures.", "committedDate": "2020-08-03T05:21:27Z", "type": "commit"}, {"oid": "704d8c132383bb90077101b18d37fccb80794d59", "url": "https://github.com/Azure/azure-sdk-for-java/commit/704d8c132383bb90077101b18d37fccb80794d59", "message": "Cleaning up tests and documentation.", "committedDate": "2020-08-03T05:49:45Z", "type": "commit"}, {"oid": "458fb9c0030cc021ef44563ab2d29cfad495419f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/458fb9c0030cc021ef44563ab2d29cfad495419f", "message": "Adding EntityStatus to Queue options.", "committedDate": "2020-08-03T05:53:52Z", "type": "commit"}, {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "message": "Rename to TotalMessageCount.", "committedDate": "2020-08-03T06:38:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDAyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604025", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T18:59:39Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/EntityHelper.java", "diffHunk": "@@ -138,13 +168,21 @@ public static void setTopicName(TopicDescription topicDescription, String topicN\n      * Interface for accessing methods on a queue.\n      */\n     public interface QueueAccessor {\n+        /**\n+         * Sets properties on the {@link QueueProperties} based on the CreateQueueOptions.\n+         *\n+         * @param options The create queue options to set.\n+         * @return A new {@link QueueProperties} with the properties set.\n+         */\n+        QueueProperties createQueue(CreateQueueOptions options);\n+\n         /**\n          * Sets the name on a queueDescription.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDUwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604506", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:00:41Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public CreateQueueBodyContent setType(String type) {\n      *\n      * @return the queueDescription value.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDU4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604586", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:00:52Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public CreateQueueBodyContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Properties of the new queue.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDc4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604788", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:01:16Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDgzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604837", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:01:22Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.\n      *\n-     * @param queueDescription the queueDescription value to set.\n+     * @param queueProperties the queueDescription value to set.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDkwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604904", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:01:28Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYxMDEyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464610126", "bodyText": "These are auto-generated from AutoRest. In another PR, I'm going to pull the actual QueueDescription class into implementation and have a separate QueueProperties class.", "author": "conniey", "createdAt": "2020-08-03T19:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTAxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605014", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:01:44Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionResponseContent setType(String type) {\n      *\n      * @return the queueDescription value.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTA1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605056", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:01:51Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionResponseContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTU3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605574", "bodyText": "Should this be named getAutoDeleteDurationOnIdle()?", "author": "srnagar", "createdAt": "2020-08-03T19:02:56Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTgxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605813", "bodyText": "Missing is prefix.", "author": "srnagar", "createdAt": "2020-08-03T19:03:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjIyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606227", "bodyText": "isPartitioningEnabled?", "author": "srnagar", "createdAt": "2020-08-03T19:04:27Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {\n+        return this.deadLetteringOnMessageExpiration;\n+    }\n+\n+    /**\n+     * Set the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @param deadLetteringOnMessageExpiration the deadLetteringOnMessageExpiration value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDeadLetteringOnMessageExpiration(boolean deadLetteringOnMessageExpiration) {\n+        this.deadLetteringOnMessageExpiration = deadLetteringOnMessageExpiration;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @return the duplicateDetectionHistoryTimeWindow value.\n+     */\n+    public Duration getDuplicateDetectionHistoryTimeWindow() {\n+        return this.duplicateDetectionHistoryTimeWindow;\n+    }\n+\n+    /**\n+     * Set the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @param duplicateDetectionHistoryTimeWindow the duplicateDetectionHistoryTimeWindow value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDuplicateDetectionHistoryTimeWindow(Duration duplicateDetectionHistoryTimeWindow) {\n+        this.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the enableBatchedOperations property: Value that indicates whether server-side batched operations are\n+     * enabled.\n+     *\n+     * @return the enableBatchedOperations value.\n+     */\n+    public boolean enableBatchedOperations() {\n+        return this.enableBatchedOperations;\n+    }\n+\n+    /**\n+     * Set the enableBatchedOperations property: Value that indicates whether server-side batched operations are\n+     * enabled.\n+     *\n+     * @param enableBatchedOperations the enableBatchedOperations value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setEnableBatchedOperations(boolean enableBatchedOperations) {\n+        this.enableBatchedOperations = enableBatchedOperations;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the enablePartitioning property: A value that indicates whether the queue is to be partitioned across\n+     * multiple message brokers.\n+     *\n+     * @return the enablePartitioning value.\n+     */\n+    public boolean enablePartitioning() {", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjc1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606751", "bodyText": "Change this to QueueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:05:34Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "diffHunk": "@@ -15,16 +15,14 @@\n import java.time.OffsetDateTime;\n import java.util.ArrayList;\n import java.util.List;\n-\n-import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n-import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+import java.util.Objects;\n \n /** The QueueDescription model. */", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjk2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606961", "bodyText": "Update all javadocs in this class to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:06:01Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "diffHunk": "@@ -337,7 +326,7 @@ public String getName() {\n      * @param queueName Name of the queue.\n      * @return the QueueDescription object itself.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNzEyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464607122", "bodyText": "Change this to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:06:21Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueRuntimeInfo.java", "diffHunk": "@@ -14,29 +15,39 @@\n @Immutable\n public class QueueRuntimeInfo {\n     private final String name;\n-    private final MessageCountDetails details;\n     private final long messageCount;\n     private final long sizeInBytes;\n     private final OffsetDateTime accessedAt;\n     private final OffsetDateTime createdAt;\n     private final OffsetDateTime updatedAt;\n+    private final int activeMessageCount;\n+    private final int deadLetterMessageCount;\n+    private final int scheduledMessageCount;\n+    private final int transferDeadLetterMessageCount;\n+    private final int transferMessageCount;\n \n     /**\n      * Creates a new instance with runtime properties extracted from the given QueueDescription.\n      *\n-     * @param queueDescription Queue description to extract runtime information from.\n+     * @param queueProperties Queue description to extract runtime information from.\n      *\n      * @throws NullPointerException if {@code queueDescription} is null.", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNzY2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464607660", "bodyText": "Update the variable names to queueProperties.", "author": "srnagar", "createdAt": "2020-08-03T19:07:31Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusManagementClientTest.java", "diffHunk": "@@ -266,14 +275,14 @@ void updateQueue() {\n     @Test\n     void updateQueueWithResponse() {\n         // Arrange\n-        final QueueDescription description = mock(QueueDescription.class);\n-        final QueueDescription result = mock(QueueDescription.class);\n+        final QueueProperties description = mock(QueueProperties.class);", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNTk5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464625996", "bodyText": "If we set negative values to these numbers, We should validate these values.", "author": "hemanttanwar", "createdAt": "2020-08-03T19:47:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/EntityHelperTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.implementation;\n+\n+import com.azure.messaging.servicebus.models.CreateQueueOptions;\n+import com.azure.messaging.servicebus.models.EntityStatus;\n+import com.azure.messaging.servicebus.models.QueueProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.time.Duration;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * {@link EntityHelper} tests.\n+ */\n+class EntityHelperTest {\n+    @Test\n+    void createQueue() {\n+        // Arrange\n+        final String queueName = \"some-queue\";\n+        final CreateQueueOptions expected = new CreateQueueOptions(queueName)\n+            .setAutoDeleteOnIdle(Duration.ofSeconds(15))\n+            .setDefaultMessageTimeToLive(Duration.ofSeconds(50))\n+            .setDeadLetteringOnMessageExpiration(true)\n+            .setDuplicateDetectionHistoryTimeWindow(Duration.ofSeconds(13))\n+            .setEnableBatchedOperations(false)\n+            .setEnablePartitioning(true)\n+            .setForwardTo(\"Forward-To-This-Queue\")\n+            .setForwardDeadLetteredMessagesTo(\"Dead-Lettered-Forward-To\")\n+            .setLockDuration(Duration.ofSeconds(120))\n+            .setMaxDeliveryCount(15)\n+            .setMaxSizeInMegabytes(2048)", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNTk2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r466015962", "bodyText": "Our guidelines say to do as little validation as possible and offset it to the service. I'd expect the service to do this validation and throw.", "author": "conniey", "createdAt": "2020-08-05T21:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNTk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNzc0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464627740", "bodyText": "I see that generally, there is no Null check, is this by design ?", "author": "hemanttanwar", "createdAt": "2020-08-03T19:51:32Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {\n+        return this.deadLetteringOnMessageExpiration;\n+    }\n+\n+    /**\n+     * Set the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @param deadLetteringOnMessageExpiration the deadLetteringOnMessageExpiration value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDeadLetteringOnMessageExpiration(boolean deadLetteringOnMessageExpiration) {\n+        this.deadLetteringOnMessageExpiration = deadLetteringOnMessageExpiration;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @return the duplicateDetectionHistoryTimeWindow value.\n+     */\n+    public Duration getDuplicateDetectionHistoryTimeWindow() {\n+        return this.duplicateDetectionHistoryTimeWindow;\n+    }\n+\n+    /**\n+     * Set the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @param duplicateDetectionHistoryTimeWindow the duplicateDetectionHistoryTimeWindow value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDuplicateDetectionHistoryTimeWindow(Duration duplicateDetectionHistoryTimeWindow) {\n+        this.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;", "originalCommit": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5Mzc0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r465993741", "bodyText": "Yes. I try to do as little client validation if the service can do it. No value is === \"use the default service value\". It's not an invalid value.", "author": "conniey", "createdAt": "2020-08-05T20:46:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNzc0MA=="}], "type": "inlineReview"}, {"oid": "5efd24ca66bfb237d34a292f7a184cb7edddbb57", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5efd24ca66bfb237d34a292f7a184cb7edddbb57", "message": "Regenerating QueueDescription into implementation folder.", "committedDate": "2020-08-04T21:05:21Z", "type": "commit"}, {"oid": "52f19a350670efddea8ee06016a34b5eb72c2bba", "url": "https://github.com/Azure/azure-sdk-for-java/commit/52f19a350670efddea8ee06016a34b5eb72c2bba", "message": "Adding methods to convert object to primitive. EntityHelper has method to map to QueueProperties from QueueDescription.", "committedDate": "2020-08-05T04:59:58Z", "type": "commit"}, {"oid": "260f660d6012dad9fbba1796ce0d0ba3b4bacecb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/260f660d6012dad9fbba1796ce0d0ba3b4bacecb", "message": "Regenerating methods.", "committedDate": "2020-08-05T05:07:42Z", "type": "commit"}, {"oid": "838bc208081df94b78bb86c1c61f6605c2f0cd40", "url": "https://github.com/Azure/azure-sdk-for-java/commit/838bc208081df94b78bb86c1c61f6605c2f0cd40", "message": "Moving EntityAvailabilityStatus.java", "committedDate": "2020-08-05T05:11:27Z", "type": "commit"}, {"oid": "7a19f33baca55ba98785be369414a34eb65dff8f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a19f33baca55ba98785be369414a34eb65dff8f", "message": "Updating requestBody to use correct parameter.", "committedDate": "2020-08-05T05:12:24Z", "type": "commit"}, {"oid": "276f4dd1467c839ea974019a4754a538df3f8ac1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/276f4dd1467c839ea974019a4754a538df3f8ac1", "message": "Fixing import for namespace.", "committedDate": "2020-08-05T05:52:23Z", "type": "commit"}, {"oid": "42c03775b678aacf252d45bb77f5a05d788c7092", "url": "https://github.com/Azure/azure-sdk-for-java/commit/42c03775b678aacf252d45bb77f5a05d788c7092", "message": "Updating QueueProperties to take CreateQueueOptions and adding test.", "committedDate": "2020-08-05T07:39:38Z", "type": "commit"}, {"oid": "e8f56494551c21889458bae9aa72eb998c981d85", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e8f56494551c21889458bae9aa72eb998c981d85", "message": "Fixing test break.", "committedDate": "2020-08-05T07:39:55Z", "type": "commit"}, {"oid": "e142a4861ddfc657dbc1a5ab4e2f5dd8b8128286", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e142a4861ddfc657dbc1a5ab4e2f5dd8b8128286", "message": "Fixing test breaks.", "committedDate": "2020-08-05T09:56:16Z", "type": "commit"}, {"oid": "636b9e4cf33e0278e78138427dad63120b44f426", "url": "https://github.com/Azure/azure-sdk-for-java/commit/636b9e4cf33e0278e78138427dad63120b44f426", "message": "Fixing build breaks.", "committedDate": "2020-08-05T09:57:14Z", "type": "commit"}, {"oid": "a1680c80a289ca0200a14a2e0af8b642efc6eb6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1680c80a289ca0200a14a2e0af8b642efc6eb6b", "message": "Fixing build breaks.", "committedDate": "2020-08-05T09:58:03Z", "type": "commit"}, {"oid": "607654be9d2d711c048bf2c5c5091ddf4f5528a1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/607654be9d2d711c048bf2c5c5091ddf4f5528a1", "message": "QueueProperties: Fixing NPE.", "committedDate": "2020-08-05T09:58:43Z", "type": "commit"}, {"oid": "f76ffe451921c819d09f287f4b21e65040b7bf74", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f76ffe451921c819d09f287f4b21e65040b7bf74", "message": "Fixing test failures.", "committedDate": "2020-08-05T10:52:57Z", "type": "commit"}, {"oid": "611b3ff04f8fbae314ecea445b619ee779c0b136", "url": "https://github.com/Azure/azure-sdk-for-java/commit/611b3ff04f8fbae314ecea445b619ee779c0b136", "message": "Suppressing known false positive", "committedDate": "2020-08-05T10:53:11Z", "type": "commit"}, {"oid": "5f839b8fd87ac97831688deca8314f05391f2aa0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f839b8fd87ac97831688deca8314f05391f2aa0", "message": "Merge branch 'master' of https://github.com/azure/azure-sdk-for-java into management-changes", "committedDate": "2020-08-05T20:55:13Z", "type": "commit"}]}