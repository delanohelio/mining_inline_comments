{"pr_number": 16767, "pr_title": "Sb track2 schedule multiple message validate batch size", "pr_createdAt": "2020-10-23T18:42:56Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16767", "timeline": [{"oid": "b0479363910462050abaa8063f36ba45655e938a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b0479363910462050abaa8063f36ba45655e938a", "message": "testing", "committedDate": "2020-10-22T20:01:06Z", "type": "commit"}, {"oid": "154af1ae961188632c4240310b3550ac17712fb8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/154af1ae961188632c4240310b3550ac17712fb8", "message": "fix batch size", "committedDate": "2020-10-22T22:40:41Z", "type": "commit"}, {"oid": "52be951cf7bda2cbd5bfc9427d46c8afad78b370", "url": "https://github.com/Azure/azure-sdk-for-java/commit/52be951cf7bda2cbd5bfc9427d46c8afad78b370", "message": "Merge branch 'master' into sb-t2-schedule-multiple-message-validate-batch-size", "committedDate": "2020-10-23T17:22:57Z", "type": "commit"}, {"oid": "a30cc197b877b2b09ba452d649b0aa15ef0bb32f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a30cc197b877b2b09ba452d649b0aa15ef0bb32f", "message": "added check for maxsize for schedule message api", "committedDate": "2020-10-23T18:37:56Z", "type": "commit"}, {"oid": "c0942818ba672f487441c7ece954afb8352fe996", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0942818ba672f487441c7ece954afb8352fe996", "message": "added check for maxsize for schedule message api", "committedDate": "2020-10-23T18:44:31Z", "type": "commit"}, {"oid": "73400c0570708d33598640d953bdbce18ad6b9b0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/73400c0570708d33598640d953bdbce18ad6b9b0", "message": "Merge branch 'master' into sb-t2-schedule-multiple-message-validate-batch-size", "committedDate": "2020-10-23T19:23:46Z", "type": "commit"}, {"oid": "8dcea5b7c715c20eacf882db862e5ab55083a034", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8dcea5b7c715c20eacf882db862e5ab55083a034", "message": "added check for maxsize for schedule message api", "committedDate": "2020-10-23T19:31:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMyMzc2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16767#discussion_r512323764", "bodyText": "Why did we duplicate createBatch() logic? By default it uses the default batch size.", "author": "conniey", "createdAt": "2020-10-26T23:12:48Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusSenderAsyncClient.java", "diffHunk": "@@ -371,13 +372,36 @@ public String getEntityPath() {\n             return fluxError(logger, new NullPointerException(\"'scheduledEnqueueTime' cannot be null.\"));\n         }\n \n-        return createBatch().flatMapMany(messageBatch -> {\n-            messages.forEach(message -> messageBatch.tryAdd(message));\n-            return getSendLink().flatMapMany(link -> connectionProcessor\n-                .flatMap(connection -> connection.getManagementNode(entityName, entityType))\n-                .flatMapMany(managementNode -> managementNode.schedule(messageBatch.getMessages(), scheduledEnqueueTime,\n-                    messageBatch.getMaxSizeInBytes(), link.getLinkName(), transactionContext)));\n-        });\n+        return getSendLink().flatMapMany(link -> link.getLinkSize()", "originalCommit": "8dcea5b7c715c20eacf882db862e5ab55083a034", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI3OTg4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16767#discussion_r513279883", "bodyText": "I was checking size on the link but changed it to use default size.", "author": "hemanttanwar", "createdAt": "2020-10-28T09:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMyMzc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMyMzg1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16767#discussion_r512323858", "bodyText": "Why are you keeping an atomic integer? We can just use a for loop", "author": "conniey", "createdAt": "2020-10-26T23:13:08Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusSenderAsyncClient.java", "diffHunk": "@@ -371,13 +372,36 @@ public String getEntityPath() {\n             return fluxError(logger, new NullPointerException(\"'scheduledEnqueueTime' cannot be null.\"));\n         }\n \n-        return createBatch().flatMapMany(messageBatch -> {\n-            messages.forEach(message -> messageBatch.tryAdd(message));\n-            return getSendLink().flatMapMany(link -> connectionProcessor\n-                .flatMap(connection -> connection.getManagementNode(entityName, entityType))\n-                .flatMapMany(managementNode -> managementNode.schedule(messageBatch.getMessages(), scheduledEnqueueTime,\n-                    messageBatch.getMaxSizeInBytes(), link.getLinkName(), transactionContext)));\n-        });\n+        return getSendLink().flatMapMany(link -> link.getLinkSize()\n+            .flatMapMany(size -> {\n+                int maxSize =  size > 0\n+                    ? size\n+                    : MAX_MESSAGE_LENGTH_BYTES;\n+                final CreateBatchOptions batchOptions =  new CreateBatchOptions();\n+                batchOptions.setMaximumSizeInBytes(maxSize);\n+\n+                return createBatch(batchOptions).flatMapMany(messageBatch ->  {\n+                    AtomicInteger index = new AtomicInteger();", "originalCommit": "8dcea5b7c715c20eacf882db862e5ab55083a034", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "92e2dc9279f7568447e238eb3768eb4a38be3607", "url": "https://github.com/Azure/azure-sdk-for-java/commit/92e2dc9279f7568447e238eb3768eb4a38be3607", "message": "Review Comments", "committedDate": "2020-10-28T09:04:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwNTAzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16767#discussion_r513805032", "bodyText": "nitpick only:\n\nif(messageBatch.tryAddMessage(message)) is pretty readable. No need to have an additional variable if no other use.\nSuggest index=0 instead of 1 for the first message because Java uses 0-based index.", "author": "YijunXieMS", "createdAt": "2020-10-28T22:42:49Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusSenderAsyncClient.java", "diffHunk": "@@ -371,13 +371,27 @@ public String getEntityPath() {\n             return fluxError(logger, new NullPointerException(\"'scheduledEnqueueTime' cannot be null.\"));\n         }\n \n-        return createMessageBatch().flatMapMany(messageBatch -> {\n-            messages.forEach(message -> messageBatch.tryAddMessage(message));\n-            return getSendLink().flatMapMany(link -> connectionProcessor\n-                .flatMap(connection -> connection.getManagementNode(entityName, entityType))\n-                .flatMapMany(managementNode -> managementNode.schedule(messageBatch.getMessages(), scheduledEnqueueTime,\n-                    messageBatch.getMaxSizeInBytes(), link.getLinkName(), transactionContext)));\n-        });\n+        return getSendLink().flatMapMany(link -> createMessageBatch()\n+            .flatMapMany(messageBatch -> {\n+                int index = 0;\n+                for (ServiceBusMessage message : messages) {\n+                    ++index;\n+                    boolean added = messageBatch.tryAddMessage(message);\n+                    if (!added) {", "originalCommit": "92e2dc9279f7568447e238eb3768eb4a38be3607", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b3e2f35084c39f26d5827b8e9add7e085624282", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b3e2f35084c39f26d5827b8e9add7e085624282", "message": "Review comments", "committedDate": "2020-10-28T22:49:01Z", "type": "commit"}]}