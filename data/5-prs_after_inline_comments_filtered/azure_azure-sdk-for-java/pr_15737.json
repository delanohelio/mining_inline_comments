{"pr_number": 15737, "pr_title": "[Tables] Add select parameter to getEntity methods", "pr_createdAt": "2020-09-25T23:23:58Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15737", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTYxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496165618", "bodyText": "@alzimmermsft iirc, we use the timeout on reactor rather than the timeout to the generated rest client. (ie. .block(timeout)).... is this correct?", "author": "conniey", "createdAt": "2020-09-28T18:55:52Z", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableClient.java", "diffHunk": "@@ -348,40 +347,61 @@ public void deleteEntity(String partitionKey, String rowKey, String eTag, Durati\n     }\n \n     /**\n-     * Queries and returns entities in the given table using the odata QueryOptions\n+     * gets the entity which fits the given criteria\n      *\n-     * @param options the odata query object\n-     * @param timeout max time for query to execute before erroring out\n-     * @return a list of the tables that fit the query\n+     * @param partitionKey the partition key of the entity\n+     * @param rowKey the row key of the entity\n+     * @return the table entity\n      */\n-    @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedIterable<TableEntity> listEntities(ListEntitiesOptions options, Duration timeout) {\n-        return null;\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public TableEntity getEntity(String partitionKey, String rowKey) {\n+        return client.getEntity(partitionKey, rowKey).block();\n     }\n \n     /**\n      * gets the entity which fits the given criteria\n      *\n      * @param partitionKey the partition key of the entity\n      * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n      * @return the table entity\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public TableEntity getEntity(String partitionKey, String rowKey) {\n-        return client.getEntity(partitionKey, rowKey).block();\n+    public TableEntity getEntity(String partitionKey, String rowKey, String select) {\n+        return client.getEntity(partitionKey, rowKey, select).block();\n     }\n \n     /**\n      * gets the entity which fits the given criteria\n      *\n      * @param partitionKey the partition key of the entity\n      * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n+     * @param timeout max time for query to execute before erroring out\n+     * @return the table entity\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public TableEntity getEntity(String partitionKey, String rowKey, String select, Duration timeout) {\n+        return getEntityWithResponse(partitionKey, rowKey, select, timeout, null).getValue();\n+    }\n+\n+    /**\n+     * gets the entity which fits the given criteria\n+     *\n+     * @param partitionKey the partition key of the entity\n+     * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n+     * @param timeout max time for query to execute before erroring out\n      * @param context the context of the query\n      * @return a mono of the response with the table entity\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Response<TableEntity> getEntityWithResponse(String partitionKey, String rowKey, Context context) {\n-        return client.getEntityWithResponse(partitionKey, rowKey, new QueryOptions(), context).block();\n+    public Response<TableEntity> getEntityWithResponse(String partitionKey, String rowKey, String select,", "originalCommit": "af3237f30929ec9bc00acc82e108af675e6d2ef5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NjQ0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496166444", "bodyText": "That is the pattern chosen by the Storage team", "author": "alzimmermsft", "createdAt": "2020-09-28T18:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4NjA4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496186089", "bodyText": "Yeah. It would be good to know if the other language teams use the timeout parameter for the auto generated rest client or a client-side one.", "author": "conniey", "createdAt": "2020-09-28T19:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzNDIxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496234212", "bodyText": "For the tables library, for each operation - the Async client does not have an overload that takes a timeout because the consumer would call .block(timeout) or similar to add one, whereas the Sync client does include an overload that applies a timeout. This is consistent between all operations in the Sync client except for paginated operations, because they are composed of multiple requests.", "author": "bsiegel", "createdAt": "2020-09-28T21:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NzEzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496167134", "bodyText": "Can use flatMap(FluxUtil::toMono).", "author": "alzimmermsft", "createdAt": "2020-09-28T18:58:47Z", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableAsyncClient.java", "diffHunk": "@@ -582,7 +587,23 @@ public void close() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<TableEntity> getEntity(String partitionKey, String rowKey) {\n-        return getEntityWithResponse(partitionKey, rowKey).flatMap(response ->\n+        return getEntityWithResponse(partitionKey, rowKey, null).flatMap(response ->\n+            Mono.justOrEmpty(response.getValue()));", "originalCommit": "af3237f30929ec9bc00acc82e108af675e6d2ef5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NDAwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496174006", "bodyText": "Fixed.", "author": "bsiegel", "createdAt": "2020-09-28T19:12:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NzEzNA=="}], "type": "inlineReview"}, {"oid": "8bd774d362a6519d9fde79beb2081377f5e7b85f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8bd774d362a6519d9fde79beb2081377f5e7b85f", "message": "Expose select parameter to getEntity method", "committedDate": "2020-09-28T19:11:58Z", "type": "commit"}, {"oid": "f012bc27e38b08f02018fd9709ee149e97bbde6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f012bc27e38b08f02018fd9709ee149e97bbde6b", "message": "Fix copy/paste error in updateEntity", "committedDate": "2020-09-28T19:11:58Z", "type": "commit"}, {"oid": "146d198d8cac764aca17d8f27e9ac3bbdef649c8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/146d198d8cac764aca17d8f27e9ac3bbdef649c8", "message": "Remove unimplemented listEntities(timeout)", "committedDate": "2020-09-28T19:11:58Z", "type": "commit"}, {"oid": "c29d23fa345827861a95f6f990776a76b9a447c3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c29d23fa345827861a95f6f990776a76b9a447c3", "message": "Fix updateEntity missing implementation", "committedDate": "2020-09-28T19:11:59Z", "type": "commit"}, {"oid": "59d1a91469c702b0e270af05bcadcaf7ce9cc045", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59d1a91469c702b0e270af05bcadcaf7ce9cc045", "message": "Update changelog", "committedDate": "2020-09-28T19:11:59Z", "type": "commit"}, {"oid": "59d1a91469c702b0e270af05bcadcaf7ce9cc045", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59d1a91469c702b0e270af05bcadcaf7ce9cc045", "message": "Update changelog", "committedDate": "2020-09-28T19:11:59Z", "type": "forcePushed"}]}