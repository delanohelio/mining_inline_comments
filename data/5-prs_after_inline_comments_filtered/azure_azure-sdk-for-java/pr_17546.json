{"pr_number": 17546, "pr_title": "[Service Bus] Allow 0 prefetch and dynamically use batch size to request link credits", "pr_createdAt": "2020-11-13T00:06:07Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17546", "timeline": [{"oid": "fd1843a71ab865208371dffa6100619428f60518", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd1843a71ab865208371dffa6100619428f60518", "message": "Link credit size adjustment", "committedDate": "2020-11-13T22:18:58Z", "type": "commit"}, {"oid": "deadef5e144beb48cf493e529cb816471ea539bf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/deadef5e144beb48cf493e529cb816471ea539bf", "message": "Add API to block and flow link credit to the service.", "committedDate": "2020-11-13T22:18:58Z", "type": "commit"}, {"oid": "945f1c875d87e27de464e84b9d1e450092c8521e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/945f1c875d87e27de464e84b9d1e450092c8521e", "message": "Use addCreditsBlocking instead of addCredits to avoid too many credits added.", "committedDate": "2020-11-13T22:18:58Z", "type": "commit"}, {"oid": "98d07dd80a99c59a37624a873734b834e8a22e3a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/98d07dd80a99c59a37624a873734b834e8a22e3a", "message": "Request fewer credits in the 2nd request if the 1st request returns fewer messages than requested. (by Hemant)", "committedDate": "2020-11-13T22:18:59Z", "type": "commit"}, {"oid": "ef52f71ffcb9c2e8d118a600bae7777f3d67b0c7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ef52f71ffcb9c2e8d118a600bae7777f3d67b0c7", "message": "Rename addCreditsBlocking to addCreditsInstantly", "committedDate": "2020-11-13T23:01:54Z", "type": "commit"}, {"oid": "36c4302a1f9be24ae9ff13748d37852b00f39ff3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/36c4302a1f9be24ae9ff13748d37852b00f39ff3", "message": "Update amqp-core dependency version", "committedDate": "2020-11-13T23:02:30Z", "type": "commit"}, {"oid": "1a5c4c438972e0db0ab0f22fc17f99f296926d68", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a5c4c438972e0db0ab0f22fc17f99f296926d68", "message": "Use remaining instead of bufferMessages.size() to calculate num of requested.", "committedDate": "2020-11-13T23:03:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3NzUxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r523277515", "bodyText": "final for both the variables?", "author": "hemanttanwar", "createdAt": "2020-11-13T23:05:16Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverClient.java", "diffHunk": "@@ -590,13 +590,14 @@ public void close() {\n     private void queueWork(int maximumMessageCount, Duration maxWaitTime,\n                            FluxSink<ServiceBusReceivedMessage> emitter) {\n         final long id = idGenerator.getAndIncrement();\n-        final SynchronousReceiveWork work = new SynchronousReceiveWork(id, maximumMessageCount, maxWaitTime, emitter);\n-\n+        int prefetch = asyncClient.getReceiverOptions().getPrefetchCount();", "originalCommit": "22c089334f9cf26166f9239797be9851a18f9c56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxNjM4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526416387", "bodyText": "Updated to final", "author": "YijunXieMS", "createdAt": "2020-11-18T20:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3NzUxNQ=="}], "type": "inlineReview"}, {"oid": "1a5c4c438972e0db0ab0f22fc17f99f296926d68", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a5c4c438972e0db0ab0f22fc17f99f296926d68", "message": "Use remaining instead of bufferMessages.size() to calculate num of requested.", "committedDate": "2020-11-13T23:03:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4Njg3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r523386871", "bodyText": "Should we do similar logic in SessionManager, Like we spoke over the chat.", "author": "hemanttanwar", "createdAt": "2020-11-14T07:01:10Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReceiveLinkProcessor.java", "diffHunk": "@@ -199,12 +198,7 @@ public void onNext(ServiceBusReceiveLink next) {\n             oldSubscription = currentLinkSubscriptions;\n \n             currentLink = next;\n-            next.setEmptyCreditListener(() -> {\n-                final int creditsToAdd = getCreditsToAdd(0);\n-                linkCreditsAdded.set(creditsToAdd > 0);\n-\n-                return creditsToAdd;\n-            });\n+            next.setEmptyCreditListener(() -> 0);", "originalCommit": "1a5c4c438972e0db0ab0f22fc17f99f296926d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTQ0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526411448", "bodyText": "Updated to 0 in ServiceBusSessionReceiver", "author": "YijunXieMS", "createdAt": "2020-11-18T20:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4Njg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4NzY0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r523387643", "bodyText": "Most of the calls into Proton-j Reactor is done via ReactorDispatcher because of thread safety,\nAs commented here ..\nhttps://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorDispatcher.java#L22\nWould this be okay to call this api directly ? @srnagar  Would this be okay here ?", "author": "hemanttanwar", "createdAt": "2020-11-14T07:11:01Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorReceiver.java", "diffHunk": "@@ -107,6 +107,11 @@ public void addCredits(int credits) {\n         }\n     }\n \n+    @Override\n+    public void addCreditsInstantly(int credits) {\n+        receiver.flow(credits);", "originalCommit": "1a5c4c438972e0db0ab0f22fc17f99f296926d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4NDk4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527284983", "bodyText": "This needs to be tested for thread-safety. If proton-j doesn't support adding credits in a thread-safe manner we might add incorrect number of credits to the link and can potentially result in data loss if the SB mode is RECEIVE_AND_DELETE", "author": "srnagar", "createdAt": "2020-11-20T00:04:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4NzY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5NzQ0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527397442", "bodyText": "I simply put it into a synchronized block. The performance overhead should be minimal.", "author": "YijunXieMS", "createdAt": "2020-11-20T04:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4NzY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwOTA0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527609045", "bodyText": "Changed back to addCredits()", "author": "YijunXieMS", "createdAt": "2020-11-20T10:48:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4NzY0Mw=="}], "type": "inlineReview"}, {"oid": "d43457ead26f42eeaa898432797b8cfc16c7cedd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d43457ead26f42eeaa898432797b8cfc16c7cedd", "message": "Add backpressure in request for async receiveMessages()", "committedDate": "2020-11-16T19:57:00Z", "type": "commit"}, {"oid": "34c70ce1a03abfe0890c72ae665bc5671c5b3459", "url": "https://github.com/Azure/azure-sdk-for-java/commit/34c70ce1a03abfe0890c72ae665bc5671c5b3459", "message": "Use limitRate instead of autoConnect for back pressure.", "committedDate": "2020-11-16T20:54:23Z", "type": "commit"}, {"oid": "e7aa8bcea866d35fd43b2cd3f7652b03469f4366", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7aa8bcea866d35fd43b2cd3f7652b03469f4366", "message": "rename receiveMessagesNoConnection to receiveMessagesNoBackPressure", "committedDate": "2020-11-16T21:38:59Z", "type": "commit"}, {"oid": "152e193bff7ff1a2bbe68954a823cd4cb5a902b8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/152e193bff7ff1a2bbe68954a823cd4cb5a902b8", "message": "Add back pressure, adjust link credits using prefetch and request size for session receiver.", "committedDate": "2020-11-17T00:32:41Z", "type": "commit"}, {"oid": "65cdcf6a0382f996f433fd8c47ba869cecc10d3c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/65cdcf6a0382f996f433fd8c47ba869cecc10d3c", "message": "Fix unit test", "committedDate": "2020-11-18T09:48:04Z", "type": "commit"}, {"oid": "c4a14f0307babb02647313b44ceb89392428b254", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4a14f0307babb02647313b44ceb89392428b254", "message": "Merge branch 'master' into sb_receiver_tuning", "committedDate": "2020-11-18T10:04:44Z", "type": "commit"}, {"oid": "41d08ab090d8d66d19d58c682ad09b589ae57337", "url": "https://github.com/Azure/azure-sdk-for-java/commit/41d08ab090d8d66d19d58c682ad09b589ae57337", "message": "Small change (add final to variable)", "committedDate": "2020-11-18T18:11:12Z", "type": "commit"}, {"oid": "124baabb430f4908388bad5a4b3652e41e30920c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/124baabb430f4908388bad5a4b3652e41e30920c", "message": "Add unreleased core-amqp", "committedDate": "2020-11-18T18:11:56Z", "type": "commit"}, {"oid": "5743dcba32b2057760a1e434faefcea5a5cc899d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5743dcba32b2057760a1e434faefcea5a5cc899d", "message": "SessionReceiver uses reactor prefetch 1 instead of default 256", "committedDate": "2020-11-18T20:46:31Z", "type": "commit"}, {"oid": "8986b2fb14b4f57778fde7224f0e4fe01b5cea61", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8986b2fb14b4f57778fde7224f0e4fe01b5cea61", "message": "Dispose SynchronousMessageSubscriber before closing async client in sync client's close()", "committedDate": "2020-11-18T22:33:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NjQ0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526486448", "bodyText": "Just like we have addCreditsInstantly , adding locally , Does getCredits return from local? And if it is returning from remote, there could be short time when there is diff in local v/s remote .\nShould there is equivalent getCreditsInstantly ?", "author": "hemanttanwar", "createdAt": "2020-11-18T23:16:32Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusSessionReceiver.java", "diffHunk": "@@ -63,14 +63,23 @@\n         this.receiveLink = receiveLink;\n         this.lockContainer = new LockContainer<>(ServiceBusConstants.OPERATION_TIMEOUT);\n \n-        receiveLink.setEmptyCreditListener(() -> 1);\n+        receiveLink.setEmptyCreditListener(() -> 0);\n \n         final Flux<ServiceBusMessageContext> receivedMessagesFlux = receiveLink\n             .receive()\n             .publishOn(scheduler)\n             .doOnSubscribe(subscription -> {\n                 logger.verbose(\"Adding prefetch to receive link.\");\n-                receiveLink.addCredits(prefetch);\n+                if (prefetch > 0) {\n+                    receiveLink.addCreditsInstantly(prefetch);\n+                }\n+            })\n+            .doOnRequest(request -> {  // request is of type long.\n+                if (prefetch == 0) {  //  add \"request\" number of credits\n+                    receiveLink.addCreditsInstantly((int) request);\n+                } else {  // keep total credits \"prefetch\" if prefetch is not 0.\n+                    receiveLink.addCreditsInstantly(Math.max(0, prefetch - receiveLink.getCredits()));", "originalCommit": "8986b2fb14b4f57778fde7224f0e4fe01b5cea61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MTU4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526491586", "bodyText": "getCredits() should return from local. I don't see a log for traffic of getCredits.", "author": "YijunXieMS", "createdAt": "2020-11-18T23:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NjQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4ODA2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526488068", "bodyText": "How we get this in this case where  credit will need to be Integer.MAX_VALUE ? And should it be max ?", "author": "hemanttanwar", "createdAt": "2020-11-18T23:20:45Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReceiveLinkProcessor.java", "diffHunk": "@@ -571,21 +562,28 @@ private int getCreditsToAdd(int linkCredits) {\n         }\n \n         final int creditsToAdd;\n-        if (messageQueue.isEmpty() && !hasBackpressure) {\n-            creditsToAdd = prefetch;\n+        final int expectedTotalCredit;\n+        if (prefetch == 0) {\n+            if (r <= Integer.MAX_VALUE) {\n+                expectedTotalCredit = (int) r;\n+            } else {\n+                expectedTotalCredit = Integer.MAX_VALUE;", "originalCommit": "8986b2fb14b4f57778fde7224f0e4fe01b5cea61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5ODIxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526498217", "bodyText": "This won't really happen in reality. I still leave it there because Integer.MAX_VALUE is the largest allowed link credits.\nFor async client, receiveMessages() calls \"return receiveMessagesNoBackPressure().limitRate(1, 0);\". This will request one by one from the link processor, even though the user's request has no back pressure.\nFor sync client, the sync subscriber has back pressure. The request count uses the  the argument of method receiveMessages(int maxMessages). It's at most Integer.MAX_VALUE.", "author": "YijunXieMS", "createdAt": "2020-11-18T23:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4ODA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMjY0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526502643", "bodyText": "So does this justify In that case should we log point to help us debug this if needed.", "author": "hemanttanwar", "createdAt": "2020-11-19T00:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4ODA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0MjgyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526542820", "bodyText": "Added the code comments.", "author": "YijunXieMS", "createdAt": "2020-11-19T02:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4ODA2OA=="}], "type": "inlineReview"}, {"oid": "39bac24f39c5f3c5ef04adacac103e7f9c69d7f0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/39bac24f39c5f3c5ef04adacac103e7f9c69d7f0", "message": "Prefetch 1 in instead fo default 256", "committedDate": "2020-11-19T01:45:45Z", "type": "commit"}, {"oid": "5572e15137c73ad71ba9909bdbeed95ff0009f21", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5572e15137c73ad71ba9909bdbeed95ff0009f21", "message": "Add some code comments", "committedDate": "2020-11-19T01:46:46Z", "type": "commit"}, {"oid": "530e258ba4057b366a852c743da4b13fbc26716b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/530e258ba4057b366a852c743da4b13fbc26716b", "message": "set low tide 0 in limitRate() to disable replenish", "committedDate": "2020-11-19T01:51:44Z", "type": "commit"}, {"oid": "aee463cec1e1e55aeb4673c9324041d968f4d98a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aee463cec1e1e55aeb4673c9324041d968f4d98a", "message": "use limitRate in async client and remove the limit in processor", "committedDate": "2020-11-19T08:25:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3MTM2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526771365", "bodyText": "As discussed earlier, this logic should be moved to the async client.", "author": "srnagar", "createdAt": "2020-11-19T10:57:54Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusProcessorClient.java", "diffHunk": "@@ -150,8 +150,8 @@ private synchronized void receiveMessages() {\n         }\n         ServiceBusReceiverAsyncClient receiverClient = asyncClient.get();\n         receiverClient.receiveMessagesWithContext()\n-            .parallel(processorOptions.getMaxConcurrentCalls())\n-            .runOn(Schedulers.boundedElastic())\n+            .parallel(processorOptions.getMaxConcurrentCalls(), 1)\n+            .runOn(Schedulers.boundedElastic(), 1)", "originalCommit": "530e258ba4057b366a852c743da4b13fbc26716b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEzNjQyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527136429", "bodyText": "Updated and pushed after discussion", "author": "YijunXieMS", "createdAt": "2020-11-19T19:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3MTM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3Mzk1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526773956", "bodyText": "Why was this removed?", "author": "srnagar", "createdAt": "2020-11-19T11:02:00Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusAsyncConsumer.java", "diffHunk": "@@ -34,9 +34,7 @@\n         this.linkProcessor = linkProcessor;\n         this.messageSerializer = messageSerializer;\n         this.processor = linkProcessor\n-            .map(message -> this.messageSerializer.deserialize(message, ServiceBusReceivedMessage.class))\n-            .publish(receiverOptions.getPrefetchCount())\n-            .autoConnect(1);", "originalCommit": "aee463cec1e1e55aeb4673c9324041d968f4d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE2NzU4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527167588", "bodyText": "This is removed because the publish( ) method requests the upstream (link processor) with its own request count (the reactor prefetch). With publish(), the SynchronousMessageSubscriber can't pass its own request count to link processor. The request is used to adjust link credits when prefetch = 0 (default value).\nUpdated to still remove publish() from this place and updated the async client's receiveMessages() to publish and autoConnect. So the user can subscribe it more than once. For SynchronousMessageSubscriber, I use an internal API to avoid the publish() side effect.", "author": "YijunXieMS", "createdAt": "2020-11-19T20:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3Mzk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NzAwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r526777006", "bodyText": "We need to support multiple calls to receiveMessages. So, this should be fixed.", "author": "srnagar", "createdAt": "2020-11-19T11:07:12Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java", "diffHunk": "@@ -849,12 +849,15 @@ void canPerformMultipleReceive() {\n             .expectNextCount(numberOfEvents)\n             .verifyComplete();\n \n-        StepVerifier.create(receiver.receiveMessages().take(numberOfEvents))\n-            .then(() -> messages.forEach(m -> messageSink.next(m)))\n-            .expectNextCount(numberOfEvents)\n-            .verifyComplete();\n+        // TODO: Do we need to support multiple calls of receiver.receiveMessages()?\n+        //  After the autoConnect was removed from ServiceBusAsyncConsumer.processor, the receiver doesn't support\n+        //  multiple calls of receiver.receiveMessages().\n+//        StepVerifier.create(receiver.receiveMessages().take(numberOfEvents))\n+//            .then(() -> messages.forEach(m -> messageSink.next(m)))\n+//            .expectNextCount(numberOfEvents)\n+//            .verifyComplete();", "originalCommit": "aee463cec1e1e55aeb4673c9324041d968f4d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE4ODIxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527188216", "bodyText": "Fixed after I add publish().autoConnect() to receiveMessages() implementation.", "author": "YijunXieMS", "createdAt": "2020-11-19T20:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NzAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDIzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17546#discussion_r527624236", "bodyText": "Discussed with Srikanta again. We agreed to remove the publish and autoConnect and don't support multiple subscribers now.\nIn the future, we may create a link for each subscriber. To be discussed in the future.", "author": "YijunXieMS", "createdAt": "2020-11-20T11:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NzAwNg=="}], "type": "inlineReview"}, {"oid": "bafc0e47dc93df26e4ae2cdbe2a7b64e5f8de990", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bafc0e47dc93df26e4ae2cdbe2a7b64e5f8de990", "message": "autoConnect in receiveMessages() so it can be subscribed multiple times.", "committedDate": "2020-11-19T20:38:38Z", "type": "commit"}, {"oid": "037cbbcd575ff91a8dca8dd9dae1bd0a365a177f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/037cbbcd575ff91a8dca8dd9dae1bd0a365a177f", "message": "Enable subscribe twice test.", "committedDate": "2020-11-19T20:41:13Z", "type": "commit"}, {"oid": "3774d66ce51d08a0e7796de0bcd03fcb04a1a59d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3774d66ce51d08a0e7796de0bcd03fcb04a1a59d", "message": "Merge branch 'master' into sb_receiver_tuning", "committedDate": "2020-11-19T21:23:07Z", "type": "commit"}, {"oid": "09fca43acc2f2b2dcfb4db8eab25bf8c9c2ecadf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/09fca43acc2f2b2dcfb4db8eab25bf8c9c2ecadf", "message": "Use publish / autoConnect to support multiple subscribers.", "committedDate": "2020-11-20T03:35:59Z", "type": "commit"}, {"oid": "fe7ee04541be8b3c11664899092dc5275db91513", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe7ee04541be8b3c11664899092dc5275db91513", "message": "put addCreditInstantly in synchronized block.", "committedDate": "2020-11-20T04:38:18Z", "type": "commit"}, {"oid": "59aee7bd5168ba4eff9e84dd4126eb701be4f730", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59aee7bd5168ba4eff9e84dd4126eb701be4f730", "message": "Format change for checkstyle", "committedDate": "2020-11-20T04:53:47Z", "type": "commit"}, {"oid": "8ea5ba65832f8952314706c68f59cb44df70719b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ea5ba65832f8952314706c68f59cb44df70719b", "message": "Use addCredits instead of addCreditsInstantly.", "committedDate": "2020-11-20T10:32:33Z", "type": "commit"}, {"oid": "24e34217562cdb82e2b8f8f7916bb1f8dd395d62", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24e34217562cdb82e2b8f8f7916bb1f8dd395d62", "message": "Use addCredits instead of addCreditsInstantly", "committedDate": "2020-11-20T10:34:02Z", "type": "commit"}, {"oid": "de311a8ae5fdab3b1fdbe15e02a9287a0c3f24d9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/de311a8ae5fdab3b1fdbe15e02a9287a0c3f24d9", "message": "Remove autoConnect", "committedDate": "2020-11-20T10:35:03Z", "type": "commit"}, {"oid": "29085d3d5e59bb1397e36bab521ff0010e9a772e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29085d3d5e59bb1397e36bab521ff0010e9a772e", "message": "Remove test case that subscribe receiveMessages() twice.", "committedDate": "2020-11-20T10:47:48Z", "type": "commit"}, {"oid": "4c837b5eac822a6ad19cbcbcf6f471b4d81bcecb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4c837b5eac822a6ad19cbcbcf6f471b4d81bcecb", "message": "Use addCredits instead of addCreditsInstantly (update test)", "committedDate": "2020-11-20T11:19:16Z", "type": "commit"}, {"oid": "3c235427004215e7084300c9ec7d778db9206da4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3c235427004215e7084300c9ec7d778db9206da4", "message": "Checkstyle", "committedDate": "2020-11-20T11:49:23Z", "type": "commit"}]}