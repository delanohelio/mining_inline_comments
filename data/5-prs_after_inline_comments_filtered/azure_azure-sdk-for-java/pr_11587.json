{"pr_number": 11587, "pr_title": "Added SDK version to CosmosException and unit tests", "pr_createdAt": "2020-05-29T18:15:42Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11587", "timeline": [{"oid": "1bc3880470161680b5567b1e6b33ee636e2e9fdf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1bc3880470161680b5567b1e6b33ee636e2e9fdf", "message": "Added SDK version to CosmosException and unit tests", "committedDate": "2020-05-29T18:15:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432657287", "bodyText": "I think this need to go into troubleshooting string, rather than just Exception.toSTring()\n@simplynaveen20", "author": "moderakh", "createdAt": "2020-05-29T18:17:02Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -258,7 +260,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n \n     @Override\n     public String toString() {\n-        return getClass().getSimpleName() + \"{\" + \"error=\" + cosmosError + \", resourceAddress='\"\n+        return getClass().getSimpleName() + \"{\" + \"sdkVersion=\" + SDK_VERSION + \", error=\" + cosmosError + \", resourceAddress='\"", "originalCommit": "1bc3880470161680b5567b1e6b33ee636e2e9fdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1OTYwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432659600", "bodyText": "My initial thought on that is, we don't want our customers to rely on getting diagnostics string and then logging the exception.\nIt would be much better to have it in all scenarios.\nFor example, below is a very common scenario is :\ntry {\n  some operation. \n} catch (Exception e) {\n  logger.error(\"Exception occurred\", e);\n}\n\nThat being said, we can also add this to diagnostics string.", "author": "kushagraThapar", "createdAt": "2020-05-29T18:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDk0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432660944", "bodyText": "diagnostics string should have all the needed info for troubleshooting (including sdk version). However it is good to have it here too. We can consider adding it to troubleshooting string later.", "author": "moderakh", "createdAt": "2020-05-29T18:23:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MTM0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432661345", "bodyText": "Valid point, I can add it to the diagnostics string as well in this PR. Let me see what needs to be done for that.", "author": "kushagraThapar", "createdAt": "2020-05-29T18:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MjA5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432662099", "bodyText": "@moderakh @simplynaveen20  - would it make sense to include the complete user agent string on diagnostics or just the SDK_VERSION ?", "author": "kushagraThapar", "createdAt": "2020-05-29T18:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NDQxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432664413", "bodyText": "Honestly I prefer it to diagnostic , given we print diagnostic on every exception. It look little odd here on exception", "author": "simplynaveen20", "createdAt": "2020-05-29T18:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzI4Nw=="}], "type": "inlineReview"}, {"oid": "12f51f3015ed4691dd5a981ddc3266b7c75c3f59", "url": "https://github.com/Azure/azure-sdk-for-java/commit/12f51f3015ed4691dd5a981ddc3266b7c75c3f59", "message": "Added user agent to both exception and diagnostics", "committedDate": "2020-05-29T19:43:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzkwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432703909", "bodyText": "Is there an Environment.NewLine or equivalent for Java? It might not work correctly on Windows where new line is \\r\\n", "author": "j82w", "createdAt": "2020-05-29T19:52:10Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosDiagnostics.java", "diffHunk": "@@ -45,16 +47,18 @@ CosmosDiagnostics clientSideRequestStatistics(ClientSideRequestStatistics client\n      */\n     @Override\n     public String toString() {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(\"userAgent=\").append(USER_AGENT).append(\"\\n\");", "originalCommit": "12f51f3015ed4691dd5a981ddc3266b7c75c3f59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjIwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432706206", "bodyText": "Good point @j82w, we can use - System.lineSeparator()\nhttps://docs.oracle.com/javase/8/docs/api/java/lang/System.html#lineSeparator--\nI will port that change as a separate PR for everywhere in SDK code.", "author": "kushagraThapar", "createdAt": "2020-05-29T19:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzkwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzE2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11587#discussion_r432717169", "bodyText": "Tracking this issue here : #11594", "author": "kushagraThapar", "createdAt": "2020-05-29T20:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzkwOQ=="}], "type": "inlineReview"}]}