{"pr_number": 10197, "pr_title": "Event Hubs track 1 receive watchdog", "pr_createdAt": "2020-04-15T01:02:10Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10197", "timeline": [{"oid": "b711fac081ede42b7d941f6672d20e58c098a575", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b711fac081ede42b7d941f6672d20e58c098a575", "message": "More client-level watchdog changes", "committedDate": "2020-03-06T22:23:02Z", "type": "commit"}, {"oid": "52de1af802e61feb9eeef7e8d93ca6ba0e25a5eb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/52de1af802e61feb9eeef7e8d93ca6ba0e25a5eb", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-03-25T00:17:23Z", "type": "commit"}, {"oid": "343b2e7ffecdd708af2d41ed8ffe7ff3946710b7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/343b2e7ffecdd708af2d41ed8ffe7ff3946710b7", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-03-26T17:56:41Z", "type": "commit"}, {"oid": "3ade70b746e724db002798eee2e5d3c5c9b1b221", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3ade70b746e724db002798eee2e5d3c5c9b1b221", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-15T00:50:42Z", "type": "commit"}, {"oid": "55d9a84fb994054e432a607edad64b8e45c22302", "url": "https://github.com/Azure/azure-sdk-for-java/commit/55d9a84fb994054e432a607edad64b8e45c22302", "message": "Improve TODO comments", "committedDate": "2020-04-15T01:00:15Z", "type": "commit"}, {"oid": "81371d75c7509fe7094d2d04ac56b81f41d0ab9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/81371d75c7509fe7094d2d04ac56b81f41d0ab9a", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-16T21:31:55Z", "type": "commit"}, {"oid": "9dfd9ce4fe4362e10596d1e9a06b27fb2de7366b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9dfd9ce4fe4362e10596d1e9a06b27fb2de7366b", "message": "Most changes from review", "committedDate": "2020-04-16T23:25:34Z", "type": "commit"}, {"oid": "d1a4530b9b41aa4c24ae28f5d534e08a2752264b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d1a4530b9b41aa4c24ae28f5d534e08a2752264b", "message": "Add forced cleanup when needed", "committedDate": "2020-04-17T23:11:28Z", "type": "commit"}, {"oid": "13cbae32448ac2d081577e42631035db4c3ffd16", "url": "https://github.com/Azure/azure-sdk-for-java/commit/13cbae32448ac2d081577e42631035db4c3ffd16", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-17T23:11:57Z", "type": "commit"}, {"oid": "fb51a49558fd3cf50b02b5e0f9df327bbe4e51e0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fb51a49558fd3cf50b02b5e0f9df327bbe4e51e0", "message": "Fix version number", "committedDate": "2020-04-17T23:15:12Z", "type": "commit"}, {"oid": "ecdd57f596ba8a83a6e3271e7e4369dd7ce132fb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ecdd57f596ba8a83a6e3271e7e4369dd7ce132fb", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-21T00:31:16Z", "type": "commit"}, {"oid": "e7f24af5dc32989a7f48983e186fa2cc6e0da270", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7f24af5dc32989a7f48983e186fa2cc6e0da270", "message": "Tracing improve and test fix", "committedDate": "2020-04-21T00:49:47Z", "type": "commit"}, {"oid": "e63cce03100ffbb71c0af135276952189b1fc028", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e63cce03100ffbb71c0af135276952189b1fc028", "message": "Put version number back", "committedDate": "2020-04-22T00:48:26Z", "type": "commit"}, {"oid": "425470e58e8b41de76245b70333530dbc18192cd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/425470e58e8b41de76245b70333530dbc18192cd", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-22T00:49:20Z", "type": "commit"}, {"oid": "e0d90f2664f95f3c20c23f42d00cf3b2f85efc9c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0d90f2664f95f3c20c23f42d00cf3b2f85efc9c", "message": "Temporary fix until track2 build fixed", "committedDate": "2020-04-22T01:06:02Z", "type": "commit"}, {"oid": "8414932917caa4e849baf38276ffea8d0ab98150", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8414932917caa4e849baf38276ffea8d0ab98150", "message": "Make watchdog work with connection string", "committedDate": "2020-04-22T21:41:41Z", "type": "commit"}, {"oid": "85a2827d248cf59a160459bc86ffb0943c52cb25", "url": "https://github.com/Azure/azure-sdk-for-java/commit/85a2827d248cf59a160459bc86ffb0943c52cb25", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-04-22T21:42:12Z", "type": "commit"}, {"oid": "ce78788b86242ea14bfab805518998077ad9c301", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce78788b86242ea14bfab805518998077ad9c301", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-05-12T22:45:28Z", "type": "commit"}, {"oid": "b594b642e3cf17d7d995e8c11aa66109faa4616f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b594b642e3cf17d7d995e8c11aa66109faa4616f", "message": "Change watchdog in public API to silent time.", "committedDate": "2020-05-12T23:08:57Z", "type": "commit"}, {"oid": "b551d08e9805807e91159a2ae17e5c88fae248ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b551d08e9805807e91159a2ae17e5c88fae248ce", "message": "Missed some WATCHDOG_OFF changes", "committedDate": "2020-05-12T23:15:56Z", "type": "commit"}, {"oid": "4f143e593b719ba45c99f2a9d71a4d53ce6e3b50", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4f143e593b719ba45c99f2a9d71a4d53ce6e3b50", "message": "Update version for release", "committedDate": "2020-05-13T20:33:33Z", "type": "commit"}, {"oid": "5052d7a0bed7ab18d529f577886083ad49a5d7ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5052d7a0bed7ab18d529f577886083ad49a5d7ee", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-05-13T20:34:23Z", "type": "commit"}, {"oid": "38af4b749897fc59dba0eb063d526936f0a6199d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/38af4b749897fc59dba0eb063d526936f0a6199d", "message": "Remove unwanted file", "committedDate": "2020-05-13T20:38:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTc0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r424749744", "bodyText": "Is maximumSilentTime in seconds or minutes? Would it be better to take a Duration type here instead of int? That will allow the customer to specify the time unit.", "author": "srnagar", "createdAt": "2020-05-13T21:46:13Z", "path": "sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java", "diffHunk": "@@ -70,6 +70,27 @@ static EventHubClient createFromConnectionStringSync(final String connectionStri\n     }\n \n \n+    /**\n+     * Synchronous version of {@link #createFromConnectionString(String, RetryPolicy, ScheduledExecutorService, ProxyConfiguration, int)}.\n+     *\n+     * @param connectionString The connection string to be used. See {@link ConnectionStringBuilder} to construct a connectionString.\n+     * @param retryPolicy      A custom {@link RetryPolicy} to be used when communicating with EventHub.\n+     * @param executor         An {@link ScheduledExecutorService} to run all tasks performed by {@link EventHubClient}.\n+     * @param configuration    The proxy configuration for this EventHubClient connection; {@code null} or\n+     *      {@link ProxyConfiguration#SYSTEM_DEFAULTS} if the system configured proxy settings should be used.\n+     * @param maximumSilentTime Use {@link EventHubClientOptions#SILENT_OFF} except on recommendation from the product group.\n+     * @return EventHubClient which can be used to create Senders and Receivers to EventHub\n+     * @throws EventHubException If Service Bus service encountered problems during connection creation.\n+     * @throws IOException       If the underlying Proton-J layer encounter network errors.\n+     */\n+    static EventHubClient createFromConnectionStringSync(final String connectionString, final RetryPolicy retryPolicy,\n+                                                         final ScheduledExecutorService executor,\n+                                                         final ProxyConfiguration configuration,\n+                                                         final int maximumSilentTime)", "originalCommit": "38af4b749897fc59dba0eb063d526936f0a6199d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzODQ5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r428338497", "bodyText": "Changed to Duration", "author": "JamesBirdsall", "createdAt": "2020-05-20T22:15:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTc0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MjExMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r424752110", "bodyText": "Consider using Duration instead of int. Also, I noticed that operationTimeout is using Duration. So, it would be consistent with other timeout types.", "author": "srnagar", "createdAt": "2020-05-13T21:51:36Z", "path": "sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClientOptions.java", "diffHunk": "@@ -92,6 +96,30 @@ public EventHubClientOptions setProxyConfiguration(ProxyConfiguration proxyConfi\n      * @return Gets the proxy configuration.\n      */\n     public ProxyConfiguration getProxyConfiguration() {\n-        return proxyConfiguration;\n+        return this.proxyConfiguration;\n+    }\n+\n+    /**\n+     * Sets the maximum silent time, in seconds.\n+     * Use only on recommendation from the product group.\n+     * \n+     * @param maximumSilentTime The time in seconds, or SILENT_OFF. Time must be at least SILENT_MINIMUM_SECONDS.\n+     * @return The updated options object.\n+     */\n+    public EventHubClientOptions setMaximumSilentTime(int maximumSilentTime) {", "originalCommit": "38af4b749897fc59dba0eb063d526936f0a6199d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzODU4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r428338581", "bodyText": "Also changed to Duration", "author": "JamesBirdsall", "createdAt": "2020-05-20T22:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MjExMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2NDM5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r424764396", "bodyText": "What happens when the executor is single-threaded? Having a Thread.sleep() on this thread can stall other operations scheduled in this executor.\nexecutor = Executors.newScheduledThreadPool(1);", "author": "srnagar", "createdAt": "2020-05-13T22:21:34Z", "path": "sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/MessagingFactory.java", "diffHunk": "@@ -248,6 +283,100 @@ public void run() {\n         return messagingFactory.open;\n     }\n \n+    public void registerForWatchdog(final MessageReceiver rcvr) {\n+        if (this.watchdogTriggerSeconds > EventHubClientOptions.SILENT_OFF) {\n+            TRACE_LOGGER.info(\"Registering for watchdog: \" + rcvr.getClientId());\n+            synchronized (this.watchdogSyncObject) {\n+                this.watchdogReceivers.add(rcvr);\n+            }\n+        }\n+        // else ignore registration if watchdog is off\n+    }\n+\n+    public void unregisterForWatchdog(final MessageReceiver rcvr) {\n+        if (this.watchdogTriggerSeconds > EventHubClientOptions.SILENT_OFF) {\n+            TRACE_LOGGER.info(\"Unregistering for watchdog: \" + rcvr.getClientId());\n+            synchronized (this.watchdogSyncObject) {\n+                this.watchdogReceivers.remove(rcvr);\n+            }\n+        }\n+    }\n+\n+    private void startWatchdog() {\n+        if (this.watchdogTriggerSeconds > EventHubClientOptions.SILENT_OFF) {\n+            TRACE_LOGGER.info(\"Watchdog scheduling first run\");\n+            this.watchdogFuture = this.executor.schedule(new WatchDog(), this.watchdogScanSeconds, TimeUnit.SECONDS);\n+        } else {\n+            TRACE_LOGGER.info(\"Watchdog is OFF\");\n+        }\n+    }\n+\n+    private class WatchDog implements Runnable {\n+        @Override\n+        public void run() {\n+            TRACE_LOGGER.debug(\"Watchdog run\");\n+            if (MessagingFactory.this.getIsClosingOrClosed()) {\n+                return;\n+            }\n+            if (MessagingFactory.this.watchdogTriggerSeconds <= EventHubClientOptions.SILENT_OFF) {\n+                TRACE_LOGGER.warn(\"Watchdog should not run when trigger time is \" + MessagingFactory.this.watchdogTriggerSeconds + \" -- stopping\");\n+                return;\n+            }\n+\n+            LinkedList<MessageReceiver> copiedList = null;\n+            synchronized (MessagingFactory.this.watchdogSyncObject) {\n+                copiedList = new LinkedList<MessageReceiver>(MessagingFactory.this.watchdogReceivers);\n+            }\n+            if (!copiedList.isEmpty()) {\n+                boolean anyReceiverIsAlive = false;\n+                final long longestAgoAllowable = Instant.now().getEpochSecond()\n+                        - MessagingFactory.this.watchdogTriggerSeconds;\n+\n+                for (MessageReceiver rcvr : copiedList) {\n+                    TRACE_LOGGER.debug(\"Watchdog checking receiver \" + rcvr.getClientId() + \" last: \"\n+                            + rcvr.getLastReceivedTime() + \"  allowable: \" + longestAgoAllowable);\n+                    if (!rcvr.getIsClosingOrClosed() && (rcvr.getLastReceivedTime() >= longestAgoAllowable)) {\n+                        anyReceiverIsAlive = true;\n+                        // Found one live receiver, no need to check the rest.\n+                        break;\n+                    }\n+                }\n+\n+                if (!anyReceiverIsAlive && !MessagingFactory.this.getIsClosingOrClosed()) {\n+                    TRACE_LOGGER.warn(\"Watchdog forcing connection closed\");\n+                    ErrorCondition suspect = new ErrorCondition(ClientConstants.WATCHDOG_ERROR,\n+                            \"receiver watchdog has fired, all receivers silent\");\n+                    MessagingFactory.this.watchdogCleanupDone = false;\n+                    MessagingFactory.this.connection.setCondition(suspect);\n+                    MessagingFactory.this.connection.close();\n+                    // If the remote host is still responding at the TCP level, then the socket will\n+                    // close normally and cleanup/recreation will happen automatically. However, if it\n+                    // isn't, then we must call onConnectionError here in order to force cleanup and\n+                    // recreation.\n+                    try {\n+                        Thread.sleep(5000);\n+                    } catch (InterruptedException e) {\n+                    }", "originalCommit": "38af4b749897fc59dba0eb063d526936f0a6199d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0ODYxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10197#discussion_r427648619", "bodyText": "A single-threaded executor will not perform adequately for the scenarios that this watchdog is intended for. Anyone who should be using this feature will have a real thread pool. If anyone else is fooling around with the watchdog without consulting us, the worst that can happen is five-second pauses.", "author": "JamesBirdsall", "createdAt": "2020-05-19T23:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2NDM5Ng=="}], "type": "inlineReview"}, {"oid": "db4d9391bfe6e26ae19035c44d201bf9c5668f2d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/db4d9391bfe6e26ae19035c44d201bf9c5668f2d", "message": "Change int seconds to Duration", "committedDate": "2020-05-19T23:47:08Z", "type": "commit"}, {"oid": "23a7cc6baa7cd9c19ac83336aa0f29c1d04f110b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/23a7cc6baa7cd9c19ac83336aa0f29c1d04f110b", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-05-19T23:47:46Z", "type": "commit"}, {"oid": "9dbc3e2a816aa6775b03e18af90b41b10fedfa43", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9dbc3e2a816aa6775b03e18af90b41b10fedfa43", "message": "Minor logging improvement", "committedDate": "2020-05-20T22:14:15Z", "type": "commit"}, {"oid": "fbbe91e73829bd18d43e06bafb28a22b96a750d9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fbbe91e73829bd18d43e06bafb28a22b96a750d9", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-05-20T22:14:37Z", "type": "commit"}, {"oid": "63d597025ae96e4ed7f53e2d084a360eaf28b1dd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/63d597025ae96e4ed7f53e2d084a360eaf28b1dd", "message": "Update versioning", "committedDate": "2020-05-20T22:20:48Z", "type": "commit"}, {"oid": "a58ed77590a7f28af2458d6488cf9cdb499f6973", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a58ed77590a7f28af2458d6488cf9cdb499f6973", "message": "More versioning changes", "committedDate": "2020-05-21T17:22:42Z", "type": "commit"}, {"oid": "e68f7f4b90424635ddd32cc7a2f61840968876e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e68f7f4b90424635ddd32cc7a2f61840968876e3", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into watchdog", "committedDate": "2020-05-21T17:23:07Z", "type": "commit"}, {"oid": "066a3ad4626beaf3ec454e2e6a530c62d6d3d586", "url": "https://github.com/Azure/azure-sdk-for-java/commit/066a3ad4626beaf3ec454e2e6a530c62d6d3d586", "message": "One last version update", "committedDate": "2020-05-21T18:21:01Z", "type": "commit"}]}