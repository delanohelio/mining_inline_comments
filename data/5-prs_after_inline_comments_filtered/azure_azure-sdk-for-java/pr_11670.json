{"pr_number": 11670, "pr_title": "Add consistent LRO operation fail behavior across Form Recognizer poller methods", "pr_createdAt": "2020-06-02T08:44:31Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11670", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzOTczOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433939739", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl}, {@code modelId} is {@code null}.", "author": "kristapratico", "createdAt": "2020-06-02T14:54:37Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -82,16 +81,19 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomFormsFromUrl#string-string}\n      *\n-     * @param fileSourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param modelId The UUID string format custom trained model Id to be used.\n      *\n      * @return A {@link PollerFlux} that polls the extract custom form operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.", "originalCommit": "e96c5a8e70979ec8b81709617b02152e46d1872a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MDE0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433940144", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl}, {@code modelId} is {@code null}.", "author": "kristapratico", "createdAt": "2020-06-02T14:55:04Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -103,23 +105,26 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomFormsFromUrl#string-string-boolean-Duration}\n      *\n-     * @param fileSourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param modelId The UUID string format custom trained model Id to be used.\n      * @param includeTextDetails Include text lines and element references in the result.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract custom form operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.", "originalCommit": "e96c5a8e70979ec8b81709617b02152e46d1872a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MDYwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433940600", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code sourceUrl} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl} is {@code null}.", "author": "kristapratico", "createdAt": "2020-06-02T14:55:40Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -215,19 +229,22 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeContentFromUrl#string-Duration}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n      * been cancelled. The completed operation returns a List of {@link FormPage}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code sourceUrl} is {@code null}.", "originalCommit": "e96c5a8e70979ec8b81709617b02152e46d1872a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NDQ3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433944471", "bodyText": "nit: \"The source URL to the input receipt.\"\nAlso unsure if size of the file is as necessary for the FromUrl functions", "author": "iscai-msft", "createdAt": "2020-06-02T15:00:44Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -301,15 +324,18 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl#string}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param receiptUrl The source URL to the input document. Size of the file must be less than 50 MB.", "originalCommit": "e96c5a8e70979ec8b81709617b02152e46d1872a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b9548141ac21dcdc56041d6c421f99dedb5ec3c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b9548141ac21dcdc56041d6c421f99dedb5ec3c9", "message": "doc update", "committedDate": "2020-06-02T19:07:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NDIwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434194209", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Operations allowed by the client are recognizing receipt data from documents, recognizeing layout information and\n          \n          \n            \n             * Operations allowed by the client are recognizing receipt data from documents, recognizing layout information and", "author": "kristapratico", "createdAt": "2020-06-02T21:47:25Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -22,7 +25,7 @@\n \n /**\n  * This class provides a synchronous client that contains all the operations that apply to Azure Form Recognizer.\n- * Operations allowed by the client are recognizing receipt data from documents, extracting layout information and\n+ * Operations allowed by the client are recognizing receipt data from documents, recognizeing layout information and", "originalCommit": "b9548141ac21dcdc56041d6c421f99dedb5ec3c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "063fe98e26449596da6741710fa0ddc51b7edd9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/063fe98e26449596da6741710fa0ddc51b7edd9a", "message": "update lro failing status", "committedDate": "2020-06-02T21:51:00Z", "type": "commit"}, {"oid": "d223014979691e83dc6048552717fa4cc3fccbc6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d223014979691e83dc6048552717fa4cc3fccbc6", "message": "add tests form training", "committedDate": "2020-06-02T21:55:43Z", "type": "commit"}, {"oid": "e72ff67f07bccf64e9ceda27b42505453a037beb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e72ff67f07bccf64e9ceda27b42505453a037beb", "message": "rename file url param", "committedDate": "2020-06-02T21:56:31Z", "type": "commit"}, {"oid": "a25cfcee737d3800a16615830514f57c436fd7e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a25cfcee737d3800a16615830514f57c436fd7e2", "message": "doc update", "committedDate": "2020-06-02T21:56:35Z", "type": "commit"}, {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521", "url": "https://github.com/Azure/azure-sdk-for-java/commit/149e6d06cce6f4ab1b654264cb6aab1c63259521", "message": "test/rebase changes", "committedDate": "2020-06-02T23:05:26Z", "type": "commit"}, {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521", "url": "https://github.com/Azure/azure-sdk-for-java/commit/149e6d06cce6f4ab1b654264cb6aab1c63259521", "message": "test/rebase changes", "committedDate": "2020-06-02T23:05:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MzE4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434253185", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code sourceUrl} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code receiptUrl} is {@code null}.", "author": "srnagar", "createdAt": "2020-06-03T00:59:38Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -293,56 +316,62 @@\n     }\n \n     /**\n-     * Recognizes and extracts receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n+     * Recognizes receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n      * model.\n      * <p>The service does not support cancellation of the long running operation and returns with an\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl#string}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param receiptUrl The source URL to the input receipt.\n      *\n-     * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * or has been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code sourceUrl} is {@code null}.", "originalCommit": "149e6d06cce6f4ab1b654264cb6aab1c63259521", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MzM2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434253360", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code form} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code receipt} is {@code null}.", "author": "srnagar", "createdAt": "2020-06-03T01:00:16Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -378,37 +410,40 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceipts#Flux-long-FormContentType-boolean-Duration}\n      *\n-     * @param data The data of the document to be extract receipt information from.\n+     * @param receipt The data of the receipt to recognize receipt information from.\n      * @param length The exact length of the data. Size of the file must be less than 50 MB.\n      * @param formContentType Supported Media types including .pdf, .jpg, .png or .tiff type file stream.\n      * @param includeTextDetails Include text lines and element references in the result.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n-     * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * or has been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code form} is {@code null}.", "originalCommit": "149e6d06cce6f4ab1b654264cb6aab1c63259521", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434256659", "bodyText": "Should this be a HttpResponseException or just AzureException? HttpResponseException is usually an error returned by the HTTP call with a status code not equal to 2xx.\nFrom HttpResponseException JavaDoc:\n\nThe exception thrown when an unsuccessful response is received with http status code (e.g. 3XX, 4XX, 5XX) from the service request.", "author": "srnagar", "createdAt": "2020-06-03T01:13:21Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -638,4 +650,20 @@ private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n         }\n     }\n \n+     /**\n+      *  Helper method that throws a {@link HttpResponseException} if {@link ModelInfo#getStatus()} is\n+      *  {@link com.azure.ai.formrecognizer.implementation.models.ModelStatus#INVALID}.\n+      *\n+      * @param customModel The response returned from the service.\n+      */\n+    private void throwIfModelStatusInvalid(Model customModel) {\n+        if (ModelStatus.INVALID.equals(customModel.getModelInfo().getStatus())) {\n+            List<ErrorInformation> errorInformationList = customModel.getTrainResult().getErrors();\n+            if (!CoreUtils.isNullOrEmpty(errorInformationList)) {\n+                throw logger.logExceptionAsError(new HttpResponseException(", "originalCommit": "149e6d06cce6f4ab1b654264cb6aab1c63259521", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2NDc0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434264740", "bodyText": "For failures for service requests (3XX, 4XX etc) we have ErroeResponseException.\nUsing the equivalent for other languages C#- RequestFailedException and Python - HttpResponseError", "author": "samvaity", "createdAt": "2020-06-03T01:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2ODMxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434268319", "bodyText": "Discussed offline.\nMaintaining the Javadoc for HttpResponseException and TA convention for exception handling, consider adding a new Exception Type or use AzureException.\n#11705", "author": "samvaity", "createdAt": "2020-06-03T02:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwNzAwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434307009", "bodyText": "#11720", "author": "samvaity", "createdAt": "2020-06-03T04:54:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}], "type": "inlineReview"}, {"oid": "ce13ad116c4a8f664a7399931f7e1a07c07df749", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce13ad116c4a8f664a7399931f7e1a07c07df749", "message": "update javadoc", "committedDate": "2020-06-03T01:51:50Z", "type": "commit"}]}