{"pr_number": 15367, "pr_title": "Remove all String variations API references in the code.", "pr_createdAt": "2020-09-18T19:03:01Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15367", "timeline": [{"oid": "35bdf7553080055436dfb799090d86978eb74022", "url": "https://github.com/Azure/azure-sdk-for-java/commit/35bdf7553080055436dfb799090d86978eb74022", "message": "Remove all String variations API references in the code.", "committedDate": "2020-09-18T19:02:42Z", "type": "commit"}, {"oid": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb", "message": "rename castValue to castObject", "committedDate": "2020-09-18T19:05:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MjExMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491152112", "bodyText": "nit: maybe say that the exception occurred while deserializing the response -> since technically the twin might have been created successfully, but the CL deserialization failed.", "author": "abhipsaMisra", "createdAt": "2020-09-18T19:34:24Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -157,10 +158,17 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n         return protocolLayer\n             .getDigitalTwins()\n             .addWithResponseAsync(digitalTwinId, digitalTwin, context)\n-            .map(response -> {\n-                T genericResponse = mapper.convertValue(response.getValue(), clazz);\n+            .flatMap(response -> {\n+                T genericResponse = null;\n+                try {\n+                    genericResponse = DeserializationHelpers.castObject(mapper, response.getValue(), clazz);\n+                } catch (JsonProcessingException e) {\n+                    logger.error(\"JsonProcessingException occurred while creating digital twin: \", e);", "originalCommit": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MjY3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491152679", "bodyText": "here as elsewhere as well - the exception is during the deserialization, so maybe we should highlight that (it didn't occur during the REST operation).", "author": "abhipsaMisra", "createdAt": "2020-09-18T19:35:44Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -685,15 +711,22 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n             .map(\n                 objectPagedResponse -> {\n                     List<T> list = objectPagedResponse.getValue().stream()\n-                        .map(object -> mapper.convertValue(object, clazz))\n+                        .map(object -> {\n+                            try {\n+                                return DeserializationHelpers.castObject(mapper, object, clazz);\n+                            } catch (JsonProcessingException e) {\n+                                logger.error(\"JsonProcessingException occurred while retrieving relationships: \", e);", "originalCommit": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NDI0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491154245", "bodyText": "nit: maybe say \"...perform the conversion.\", or \"...perform the deserialization.\". The term \"casting\" here might be misleading.", "author": "abhipsaMisra", "createdAt": "2020-09-18T19:39:33Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serializer/DeserializationHelpers.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.azure.digitaltwins.core.implementation.serializer;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+public class DeserializationHelpers {\n+\n+    /**\n+     * Converts the payload object into a generic type.\n+     * There are two different paths we will have to take based on the type T\n+     * In case of a String, we need to write the value of the payload as a String\n+     * In case of any other type that the user decides to deserialize the payload, we will use mapper.convertValue to perform the casting.", "originalCommit": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2800b34e3ca5d832237508f1408ebe53258646f6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2800b34e3ca5d832237508f1408ebe53258646f6", "message": "Address comments.", "committedDate": "2020-09-18T20:11:28Z", "type": "commit"}]}