{"pr_number": 11770, "pr_title": "Remove USReceipt - Receipt design update FormRecognizer ", "pr_createdAt": "2020-06-04T08:13:10Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11770", "timeline": [{"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676", "url": "https://github.com/Azure/azure-sdk-for-java/commit/afa790fe1ef3d3c0730a3c52b88b796e9907c676", "message": "receipt design updates", "committedDate": "2020-06-04T08:11:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NTczNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435345735", "bodyText": "Why are you adding a public FieldValue to deal with the new receipt changes?", "author": "iscai-msft", "createdAt": "2020-06-04T15:25:48Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "originalCommit": "afa790fe1ef3d3c0730a3c52b88b796e9907c676", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2Mjg3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435362871", "bodyText": "I only had the strongly typed FormField<T> which could hold any T but now we need a FieldValue to provide a type for conversion for the user.\nSimilar to this.", "author": "samvaity", "createdAt": "2020-06-04T15:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NTczNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MTU5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435581591", "bodyText": "How large can this Integer be? According to the service team, we'll eventually start supporting 64-bits integers here (not a concern for Preview 3, I think).", "author": "kinelski", "createdAt": "2020-06-04T22:13:13Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.LocalDate;\n+import java.time.LocalTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * The FieldValue model.\n+ */\n+@Fluent\n+public final class FieldValue {\n+    private final FieldValueType type;\n+    private Map<String, FormField> formFieldMap;\n+    private List<FormField> formFieldList;\n+    private Float formFieldFloat;\n+    private Integer formFieldInteger;\n+    private LocalDate formFieldDate;\n+    private LocalTime formFieldTime;\n+    private String formFieldString;\n+    private String formFieldPhoneNumber;\n+\n+    /**\n+     * Constructs a FieldValue object\n+     *\n+     * @param type The type of the field.\n+     */\n+    public FieldValue(final FieldValueType type) {\n+        this.type = type;\n+    }\n+\n+    /**\n+     * Set the map value of the field.\n+     *\n+     * @param formFieldMap the map value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldMap(final Map<String, FormField> formFieldMap) {\n+        this.formFieldMap = formFieldMap;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the list value of the field.\n+     *\n+     * @param formFieldList the list of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldList(final List<FormField> formFieldList) {\n+        this.formFieldList = formFieldList;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the float value of the field.\n+     *\n+     * @param formFieldFloat the float value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldFloat(final Float formFieldFloat) {\n+        this.formFieldFloat = formFieldFloat;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the integer value of the field.\n+     *\n+     * @param formFieldInteger the integer value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldInteger(final Integer formFieldInteger) {\n+        this.formFieldInteger = formFieldInteger;\n+        return this;\n+    }", "originalCommit": "afa790fe1ef3d3c0730a3c52b88b796e9907c676", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2MTg3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435661878", "bodyText": "I think that should change the generated code for the service to start sending in a Long value so will defer doing this with the service update.", "author": "samvaity", "createdAt": "2020-06-05T02:50:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MTU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NDAxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435584015", "bodyText": "I think this extra space before @param was an accident...?", "author": "kinelski", "createdAt": "2020-06-04T22:20:00Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormField.java", "diffHunk": "@@ -40,14 +39,13 @@\n \n     /**\n      * Constructs a FormField object.\n-     *\n-     * @param confidence The confidence of the recognized field.\n+     *  @param confidence The confidence of the recognized field.\n      * @param labelText The label text value for the field.", "originalCommit": "afa790fe1ef3d3c0730a3c52b88b796e9907c676", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8f25b62f1902f5b1a7a52782ba40e2e376f34d0a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8f25b62f1902f5b1a7a52782ba40e2e376f34d0a", "message": "review comments", "committedDate": "2020-06-05T02:53:43Z", "type": "commit"}]}