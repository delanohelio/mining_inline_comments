{"pr_number": 13756, "pr_title": "Updated CosmosConfig to take database name", "pr_createdAt": "2020-08-03T21:19:27Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13756", "timeline": [{"oid": "f3df9838aafed784761a7e2eaf8df7fc58d0215b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f3df9838aafed784761a7e2eaf8df7fc58d0215b", "message": "Updated CosmosConfig to take database name. Removed CosmosClientConfig, replaced with CosmosClientBuilder. Updated readme, and samples with new architecture", "committedDate": "2020-08-03T21:17:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MTcyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464751721", "bodyText": "Do we need the database here? in the previous design, multiple databases can use the same CosmosConfig instance, if we add the database here, each database does each database have to create its own CosmosConfig?", "author": "zhoufenqin", "createdAt": "2020-08-04T01:48:43Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/config/CosmosConfig.java", "diffHunk": "@@ -11,22 +11,36 @@\n  */\n public class CosmosConfig {\n \n+    private final String database;\n+", "originalCommit": "f3df9838aafed784761a7e2eaf8df7fc58d0215b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2MzQ0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464763448", "bodyText": "Yes, CosmosConfig - will be confined to single database.\nSo for each database, you will create separate CosmosConfig.\nThis works perfectly for customers who want to have different logging for each database configuration.\nSince CosmosConfig is just a spring bean, it will not have any performance issues at all. End users can keep separate configurations for separate database.", "author": "kushagraThapar", "createdAt": "2020-08-04T02:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MTcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464753103", "bodyText": "As I mentioned before, here we create CosmosConfig instance with database name, can we use the same instance to create different cosmos template? see secondaryReactiveCosmosTemplate and secondaryReactiveCosmosTemplate1, we use the same CosmosConfig instance", "author": "zhoufenqin", "createdAt": "2020-08-04T01:53:36Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java", "diffHunk": "@@ -96,16 +89,17 @@ public ReactiveCosmosTemplate primaryReactiveCosmosTemplate(CosmosAsyncClient co\n \n     // -------------------------Second Cosmos Client for Secondary Cosmos Account---------------------------\n     @Bean(\"secondaryCosmosAsyncClient\")\n-    public CosmosAsyncClient getCosmosAsyncClient(CosmosClientConfig secondaryCosmosClientConfig) {\n-        return CosmosFactory.createCosmosAsyncClient(secondaryCosmosClientConfig);\n+    public CosmosAsyncClient getCosmosAsyncClient(CosmosClientBuilder secondaryCosmosClientBuilder) {\n+        return CosmosFactory.createCosmosAsyncClient(secondaryCosmosClientBuilder);\n     }\n \n     @Bean(\"secondaryCosmosConfig\")\n     public CosmosConfig getCosmosConfig() {\n         return CosmosConfig.builder()\n-            .enableQueryMetrics(true)\n-            .responseDiagnosticsProcessor(new ResponseDiagnosticsProcessorImplementation())\n-            .build();\n+                           .enableQueryMetrics(true)\n+                           .responseDiagnosticsProcessor(new ResponseDiagnosticsProcessorImplementation())\n+                           .database(secondaryProperties.getDatabase())\n+                           .build();", "originalCommit": "f3df9838aafed784761a7e2eaf8df7fc58d0215b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2NDA4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464764089", "bodyText": "Customers can still use the same cosmosConfig instance.\nSince they will anyway pass the databaseName to create CosmosTemplate - which then picks up the database from CosmosFactory here :\nFrom CosmosTemplate constructor -\nthis.databaseName = cosmosFactory.getDatabaseName();", "author": "kushagraThapar", "createdAt": "2020-08-04T02:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2OTk5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464769991", "bodyText": "it's ok, but I think it's a bit confusing, actually, database2 can use the same CosmosConfig instance which created with database1. so the CosmosConfig is not really directly related to the database name.\n@saragluna do you have any other ideas?", "author": "zhoufenqin", "createdAt": "2020-08-04T02:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc4MjcyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464782728", "bodyText": "Yes, that is true. CosmosConfig is not directly related to the database name.\nIn fact, I was also wondering, if we can completely get rid of database from CosmosConfig and customers can directly override the method getDatabaseName() from CosmosConfigurationSupport class.\nThat's what spring-data-mongodb does. They don't have any config tied to the database.\nThey only have getDatabaseName() in MongoConfigurationSupport class.\nHowever, it will not hurt to keep it in CosmosConfig, because of easiness of use.\nHaving database in CosmosConfig provides the user ability to use the database from the CosmosConfig bean.\nWhat are your thoughts on this @zhoufenqin @saragluna", "author": "kushagraThapar", "createdAt": "2020-08-04T03:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwMjM0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464802345", "bodyText": "@kushagraThapar in my opinion, since CosmosConfig is not directly related to the database name so I vote for getting rid of it. Do you know in which case will the user try to get the database name?", "author": "saragluna", "createdAt": "2020-08-04T05:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwNzkxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464807914", "bodyText": "@saragluna - in case of custom query execution.\ntake a look at this example - https://github.com/kushagraThapar/azure-sdk-for-java/blob/update_cosmos_config_spring_data_cosmos/sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/integration/PageableAddressRepositoryIT.java#L165\nSo in that case, I think it will be much easier to Autowire the CosmosConfig bean.\nIn the above specific case, do you know if customer can autowire TestRepositoryConfig bean somehow and get it from there ?", "author": "kushagraThapar", "createdAt": "2020-08-04T05:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwODcxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13756#discussion_r464808714", "bodyText": "@saragluna - I did some more testing, and I found out that in above specific case, customer can get it from CosmosFactory. So I am good to remove database from CosmosConfig", "author": "kushagraThapar", "createdAt": "2020-08-04T05:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1MzEwMw=="}], "type": "inlineReview"}, {"oid": "f9b4b4547565a536c451a8d312b857cd340f5115", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9b4b4547565a536c451a8d312b857cd340f5115", "message": "Removed database property from CosmosConfig", "committedDate": "2020-08-04T05:47:48Z", "type": "commit"}, {"oid": "931628dbdb3cfc0d8d394621850e91796d678a71", "url": "https://github.com/Azure/azure-sdk-for-java/commit/931628dbdb3cfc0d8d394621850e91796d678a71", "message": "Removed unused imports", "committedDate": "2020-08-04T06:13:37Z", "type": "commit"}]}