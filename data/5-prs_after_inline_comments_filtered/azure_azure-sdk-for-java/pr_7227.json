{"pr_number": 7227, "pr_title": "Direct TCP | Add support for request timelines to be used in diagnostic strings", "pr_createdAt": "2020-01-07T07:29:28Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7227", "timeline": [{"oid": "0bb32e1a3cd322c534d7cb0daee8c2dda9151310", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0bb32e1a3cd322c534d7cb0daee8c2dda9151310", "message": "Corrected package misspelling in log4j.properties, removed System.exit from Main.java, and attempted to address a memory leak in the RntbdRequestTimer", "committedDate": "2019-11-09T00:15:11Z", "type": "commit"}, {"oid": "921d5ccf0ad962c627d390ac359b3799357aa299", "url": "https://github.com/Azure/azure-sdk-for-java/commit/921d5ccf0ad962c627d390ac359b3799357aa299", "message": "Merge branch 'feature/cosmos/v4' of github.com:David-Noble-at-work/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-09T00:15:20Z", "type": "commit"}, {"oid": "2028dec2ed06af43a46d2a16afb51ec1d03aa313", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2028dec2ed06af43a46d2a16afb51ec1d03aa313", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-09T00:25:44Z", "type": "commit"}, {"oid": "30f5fd32f948a5c901226219516ad61b420b01b5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/30f5fd32f948a5c901226219516ad61b420b01b5", "message": "Fixed a merge error and resolved #5043, Variables that specify time in long or int value should specify units", "committedDate": "2019-11-09T07:45:05Z", "type": "commit"}, {"oid": "7a9b9471c89c8a0183bc12d0a15f4af308c81f8f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a9b9471c89c8a0183bc12d0a15f4af308c81f8f", "message": "Minor code cleanup in RntbdTransportClient", "committedDate": "2019-11-09T09:21:49Z", "type": "commit"}, {"oid": "89bed8fd35ed4cd95edafe24079a0b3b4b322534", "url": "https://github.com/Azure/azure-sdk-for-java/commit/89bed8fd35ed4cd95edafe24079a0b3b4b322534", "message": "Fixed a second merge issue", "committedDate": "2019-11-09T17:52:50Z", "type": "commit"}, {"oid": "0b039d0aa3654f37d789720c0fb1a3b633c61f09", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b039d0aa3654f37d789720c0fb1a3b633c61f09", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-15T20:05:44Z", "type": "commit"}, {"oid": "76492b5288805ec91721d5f74702bef0a0f35255", "url": "https://github.com/Azure/azure-sdk-for-java/commit/76492b5288805ec91721d5f74702bef0a0f35255", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-21T21:25:36Z", "type": "commit"}, {"oid": "7bad43a6667fbeb75f313fbf1b8922b8db7d5e56", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7bad43a6667fbeb75f313fbf1b8922b8db7d5e56", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-23T23:08:26Z", "type": "commit"}, {"oid": "9cefe37e45556008535c1fa2645ae98b677559f4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9cefe37e45556008535c1fa2645ae98b677559f4", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2019-11-27T17:27:45Z", "type": "commit"}, {"oid": "7e20f0f62577f388593202d93b8bef928d77126b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e20f0f62577f388593202d93b8bef928d77126b", "message": "Checkpoint for safe keeping", "committedDate": "2019-11-27T22:43:15Z", "type": "commit"}, {"oid": "294ade519f59f157c237a355e06e9079b996fe86", "url": "https://github.com/Azure/azure-sdk-for-java/commit/294ade519f59f157c237a355e06e9079b996fe86", "message": "Checkpoint for safe keeping", "committedDate": "2019-11-28T05:30:01Z", "type": "commit"}, {"oid": "72b09b93122aa554f8e9846edbd61701981777d1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/72b09b93122aa554f8e9846edbd61701981777d1", "message": "Checkpoint for safe keeping", "committedDate": "2019-11-28T09:17:38Z", "type": "commit"}, {"oid": "b792310ada7b0abfb2a778585ade4c40eb7b5eea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b792310ada7b0abfb2a778585ade4c40eb7b5eea", "message": "Checkpoint for safe keeping (some testing successfully completed)", "committedDate": "2019-11-28T23:13:19Z", "type": "commit"}, {"oid": "ad076a819cd254cb39805e811977545ff4c40b8c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad076a819cd254cb39805e811977545ff4c40b8c", "message": "Checkpoint for safe keeping (some testing successfully completed)", "committedDate": "2019-11-29T07:19:37Z", "type": "commit"}, {"oid": "7be144e780b240a322f50f4b42808d7bd9574498", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7be144e780b240a322f50f4b42808d7bd9574498", "message": "Checkpoint for safe keeping (some testing successfully completed)", "committedDate": "2019-11-29T09:01:18Z", "type": "commit"}, {"oid": "f6fef4db2016db1112b452b1cc5b183344441e05", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f6fef4db2016db1112b452b1cc5b183344441e05", "message": "Checkpoint for safe keeping (some testing successfully completed)", "committedDate": "2019-12-01T04:36:32Z", "type": "commit"}, {"oid": "0e9115efc56666c1abbf8a3d8fb95f95d9641f99", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e9115efc56666c1abbf8a3d8fb95f95d9641f99", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2019-12-04T18:41:34Z", "type": "commit"}, {"oid": "2fab001b74b63ad8ac1cafb73291172b2140dcd0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2fab001b74b63ad8ac1cafb73291172b2140dcd0", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2019-12-11T00:56:20Z", "type": "commit"}, {"oid": "b4f1db2b9620f08e38e53ba1a47f029c72bf3c51", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b4f1db2b9620f08e38e53ba1a47f029c72bf3c51", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2019-12-13T02:59:10Z", "type": "commit"}, {"oid": "a316547050b221f66692abf0bdef4bd9599a1c43", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a316547050b221f66692abf0bdef4bd9599a1c43", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2019-12-14T08:43:30Z", "type": "commit"}, {"oid": "979e876bd3f1bf485c22958a75f8cf15e9ab83e0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/979e876bd3f1bf485c22958a75f8cf15e9ab83e0", "message": "Addressed merge issue", "committedDate": "2019-12-14T08:54:43Z", "type": "commit"}, {"oid": "1b31289abeaa11569e370bf439de9d5e8795d338", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b31289abeaa11569e370bf439de9d5e8795d338", "message": "Optimized imports and tweaked some logger/argument validation messages", "committedDate": "2019-12-14T21:49:30Z", "type": "commit"}, {"oid": "896687589dd15eebc1103d6933f37e4eba7703fd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/896687589dd15eebc1103d6933f37e4eba7703fd", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2020-01-04T07:53:35Z", "type": "commit"}, {"oid": "c17a695dd1922005ebdfe47d719b3ac48c0f0bc8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c17a695dd1922005ebdfe47d719b3ac48c0f0bc8", "message": "Ported Default Direct TCP Options feature from v3", "committedDate": "2020-01-04T09:03:05Z", "type": "commit"}, {"oid": "fced71eded189f2f7b268eb95bc56c279a037654", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fced71eded189f2f7b268eb95bc56c279a037654", "message": "Updated change log", "committedDate": "2020-01-04T09:22:23Z", "type": "commit"}, {"oid": "5439596fd2dfe994e46b9373eae29314e28f2077", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5439596fd2dfe994e46b9373eae29314e28f2077", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into feature/cosmos/v4", "committedDate": "2020-01-06T18:17:19Z", "type": "commit"}, {"oid": "29306f5e550b12c69ae61086161ad0dd8402cc7b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29306f5e550b12c69ae61086161ad0dd8402cc7b", "message": "Updated javadocs", "committedDate": "2020-01-06T18:18:05Z", "type": "commit"}, {"oid": "1c8f7f4b2f2e4436a1988b54d17140d675f1ffa5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1c8f7f4b2f2e4436a1988b54d17140d675f1ffa5", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2020-01-06T19:04:21Z", "type": "commit"}, {"oid": "4b273ae64834712780e41f774372cdbe189fc2c8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b273ae64834712780e41f774372cdbe189fc2c8", "message": "Merge branch 'feature/cosmos/v4' of github.com:David-Noble-at-work/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2020-01-06T19:38:23Z", "type": "commit"}, {"oid": "6c701112d3ff7a6d044751df7df3b6666402f9fc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6c701112d3ff7a6d044751df7df3b6666402f9fc", "message": "Cleaned up RngtbClientChannelHealthChecker and turned all trace log-levels into debug log-levels in prep for switching to the Azure Central SDK logger.", "committedDate": "2020-01-07T00:51:21Z", "type": "commit"}, {"oid": "0abf96a72a2a614912f87a282351cae281fd7590", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0abf96a72a2a614912f87a282351cae281fd7590", "message": "Added documentation and tweaked some code for readability", "committedDate": "2020-01-07T20:45:56Z", "type": "commit"}, {"oid": "e50352818e136829097f5647ff686a59012fdd0c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e50352818e136829097f5647ff686a59012fdd0c", "message": "javadoc tweak", "committedDate": "2020-01-07T22:01:58Z", "type": "commit"}, {"oid": "a786bc62ef859cda5231daa41ed10ba68cf4143f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a786bc62ef859cda5231daa41ed10ba68cf4143f", "message": "javadoc tweaks", "committedDate": "2020-01-07T22:26:24Z", "type": "commit"}, {"oid": "1e6d787410f78219058ff2727272f7ae390737cd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e6d787410f78219058ff2727272f7ae390737cd", "message": "code tweaks", "committedDate": "2020-01-07T22:44:38Z", "type": "commit"}, {"oid": "29a3a74b5e18221a70ac5484bb195de36d558c53", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29a3a74b5e18221a70ac5484bb195de36d558c53", "message": "Added support for RntbdRequestRecord.Stage.RECEIVED", "committedDate": "2020-01-07T23:35:51Z", "type": "commit"}, {"oid": "8b0db88b6bf9c0803c8e19514b45ad4b96012abc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b0db88b6bf9c0803c8e19514b45ad4b96012abc", "message": "Tweaks for readability", "committedDate": "2020-01-09T01:01:08Z", "type": "commit"}, {"oid": "47e644b5f05a83e5152873f78444d0e7a6548349", "url": "https://github.com/Azure/azure-sdk-for-java/commit/47e644b5f05a83e5152873f78444d0e7a6548349", "message": "Tweaks for readability", "committedDate": "2020-01-09T01:04:46Z", "type": "commit"}, {"oid": "1b1153ebe5af09a3301d73f1b14d3e8ca338baae", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b1153ebe5af09a3301d73f1b14d3e8ca338baae", "message": "Merge branch 'feature/cosmos/v4' of https://github.com/Azure/azure-sdk-for-java into issue/#6580/cosmos/v4/support-request-timeline", "committedDate": "2020-01-09T01:18:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyNDQ5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r364524499", "bodyText": "NOTE TO REVIEWERS\nChanges to the RntbdClientChannelHealthChecker class add javadocs, simplify the code by eliminating the RntbdClientChannelHealthChecker.JsonSerializer class, and break a few lines of code for readability and compliance with Azure Central SDK code guidelines.", "author": "David-Noble-at-work", "createdAt": "2020-01-09T01:34:39Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelHealthChecker.java", "diffHunk": "@@ -4,18 +4,14 @@\n package com.azure.cosmos.implementation.directconnectivity.rntbd;", "originalCommit": "1b1153ebe5af09a3301d73f1b14d3e8ca338baae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ad4f5a582eb24db519e253ac3d6f283626dc7018", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad4f5a582eb24db519e253ac3d6f283626dc7018", "message": "Optimized imports", "committedDate": "2020-01-09T01:47:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MDk0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r364840943", "bodyText": "are we not record cancellation triggered by reactor-stream now?", "author": "moderakh", "createdAt": "2020-01-09T16:35:48Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -117,22 +117,30 @@ public long id() {\n         URI address = addressUri.getURI();\n \n         final RntbdRequestArgs requestArgs = new RntbdRequestArgs(request, address);\n+\n         requestArgs.traceOperation(logger, null, \"invokeStoreAsync\");\n \n         final RntbdEndpoint endpoint = this.endpointProvider.get(address);\n         final RntbdRequestRecord record = endpoint.request(requestArgs);\n \n         logger.debug(\"RntbdTransportClient.invokeStoreAsync({}, {}): {}\", address, request, record);\n \n-        return Mono.fromFuture(record).doFinally(signalType -> {\n-            logger.debug(\"SignalType.{} received from reactor: {\\n  endpoint: {},\\n  record: {}\\n}\",\n-                signalType.name(),\n-                endpoint,\n-                record);\n-            if (signalType == SignalType.CANCEL) {\n-                record.stage(RntbdRequestRecord.Stage.CANCELLED_BY_CLIENT);\n+        return Mono.fromFuture(record.whenComplete((response, throwable) -> {\n+\n+            record.stage(RntbdRequestRecord.Stage.COMPLETED);\n+\n+            if (throwable == null) {\n+                response.setRequestTimeline(record.takeTimelineSnapshot());\n+            } else {\n+                checkArgument(throwable instanceof CosmosClientException, \"expected %s, not %s: %s\",\n+                    CosmosClientException.class,\n+                    throwable.getClass(),\n+                    throwable);\n+                CosmosClientException error = (CosmosClientException) throwable;\n+                error.setRequestTimeline(record.takeTimelineSnapshot());", "originalCommit": "ad4f5a582eb24db519e253ac3d6f283626dc7018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg1NDU5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r364854594", "bodyText": "what happens on cancellation triggered by reactor-stream are they recorded anywhere?", "author": "moderakh", "createdAt": "2020-01-09T16:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MDk0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTQzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r365735432", "bodyText": "You found a bug, thanks. I found on my local branch that I must capture cancellations from the reactor stream. I'll add that in the morning and update issue #7250 to ensure there's test coverage when that issue is resolved.", "author": "David-Noble-at-work", "createdAt": "2020-01-13T10:36:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MDk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r364848503", "bodyText": "This is public surface area change, so we need to make sure if we know this is applicable to all connection modes or RNTBD only.\na few questions.\n\nis this related to only direct stack? what about GW mode?\nis there any reason this is not added to request diagnostics CosmosResponseDiagnostics which already exists? CosmosClientException has a getter for itCosmosClientException::getCosmosResponseDiagnostics()", "author": "moderakh", "createdAt": "2020-01-09T16:48:23Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "diffHunk": "@@ -248,6 +250,15 @@ CosmosClientException setCosmosResponseDiagnostics(CosmosResponseDiagnostics cos\n         return this;\n     }\n \n+    public RequestTimeline getRequestTimeline() {", "originalCommit": "ad4f5a582eb24db519e253ac3d6f283626dc7018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA2OTQwNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r365069407", "bodyText": "This should be usable in all connection modes. It is our choice. I expected it would also be used by HttpClient (Kushagra and I have talked about renaming this the HttpGatewayClient) and HttpTransportClient. I wrote a little about that here: #6580. I will log an issue to add the feature to both HTTP clients; assuming that's OK with you.", "author": "David-Noble-at-work", "createdAt": "2020-01-10T04:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MjY4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r365352688", "bodyText": "Logged issue #7342, [FEATURE REQ] Add request timeline to HttpClient and HttpTransportClient", "author": "David-Noble-at-work", "createdAt": "2020-01-10T17:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzOTU2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366539560", "bodyText": "David, what about the second portion of my comment?\n\nis there any reason this is not added to request diagnostics CosmosResponseDiagnostics which already exists? CosmosClientException has a getter for it CosmosClientException::getCosmosResponseDiagnostics()", "author": "moderakh", "createdAt": "2020-01-14T19:49:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0MjEyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366542122", "bodyText": "That could easily be done and I'll plan on making the change in the next few minutes. Let me touch base with Naveen before completing the work.", "author": "David-Noble-at-work", "createdAt": "2020-01-14T19:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3MTIwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366571204", "bodyText": "Hi Mo , the best possible solution will only come once i start integrating it in my next PR , so at this point it will be hard to find the best place for RequestTimeline. For now lets keep it as David did, and I will change in my PR which I already start working on", "author": "simplynaveen20", "createdAt": "2020-01-14T21:04:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3MTg5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366571895", "bodyText": "sure. makes sense.", "author": "moderakh", "createdAt": "2020-01-14T21:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0ODUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0OTY4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r364849685", "bodyText": "setter should not be public. if setter needed for internal implementation we should so similar to `CosmosClientException::setCosmosResponseDiagnostics(.)", "author": "moderakh", "createdAt": "2020-01-09T16:50:38Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "diffHunk": "@@ -248,6 +250,15 @@ CosmosClientException setCosmosResponseDiagnostics(CosmosResponseDiagnostics cos\n         return this;\n     }\n \n+    public RequestTimeline getRequestTimeline() {\n+        return this.requestTimeline;\n+    }\n+\n+    public CosmosClientException setRequestTimeline(RequestTimeline requestTimeline) {", "originalCommit": "ad4f5a582eb24db519e253ac3d6f283626dc7018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0NjQ2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r365346464", "bodyText": "fixed on my local branch. good catch. thanks.", "author": "David-Noble-at-work", "createdAt": "2020-01-10T17:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0OTY4NQ=="}], "type": "inlineReview"}, {"oid": "b60eeb2299afdf921825cb66a8c02559c5d9a82a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b60eeb2299afdf921825cb66a8c02559c5d9a82a", "message": "CosmosClientException.setRequestTimeline is now package private and bridged for consumption by RntbdTransportClient", "committedDate": "2020-01-10T18:01:28Z", "type": "commit"}, {"oid": "668b22c3a6f8f811a5568145a05121b100947885", "url": "https://github.com/Azure/azure-sdk-for-java/commit/668b22c3a6f8f811a5568145a05121b100947885", "message": "RntbdTransportClient now correctly handles cancellations that originate with Reactor", "committedDate": "2020-01-13T11:01:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MjEyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366482124", "bodyText": "Can we move this out of Direct so it wont be specific to one mode and can be use in gateway too", "author": "simplynaveen20", "createdAt": "2020-01-14T17:47:17Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RequestTimeline.java", "diffHunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity;\n+\n+import com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdObjectMapper;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.time.Duration;\n+import java.time.OffsetDateTime;\n+import java.util.Iterator;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+/**\n+ * Represents the time and duration of important events in the lifetime of a request.\n+ *\n+ * A {@link RequestTimeline} represents a timeline as a sequence of {@link Event} instances with name, time, and\n+ * duration properties. Hence, one might use this class to represent any timeline. Today we use it to represent\n+ * {@link RntbdTransportClient} request timelines. In the future we might also use it to represent\n+ * {@link HttpTransportClient} request timelines.\n+ *\n+ * A {@link RequestTimeline} serializes to JSON as an array of {@link Event} instances. This is the default\n+ * serialization for any class that implements {@link Iterable}.\n+ * <p>\n+ * <b>Example:</b>\n+ * <pre>{@code OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-07T11:24:12.842749-08:00\", DateTimeFormatter.ISO_OFFSET_DATE_TIME);\n+ * sys.out.println(RequestTimeline.of(\n+ *     new RequestTimeline.Event(\"foo\", startTime, startTime.plusSeconds(1)),\n+ *     new RequestTimeline.Event(\"bar\", startTime.plusSeconds(1), startTime.plusSeconds(2))));}</pre>\n+ * JSON serialization:\n+ * <pre>{@code [{\"name\":\"foo\",\"time\":\"2020-01-07T11:24:12.842749-08:00\",\"duration\":\"PT1S\"},{\"name\":\"bar\",\"time\":\"2020-01-07T11:24:13.842749-08:00\",\"duration\":\"PT1S\"}])}</pre>\n+ */\n+public final class RequestTimeline implements Iterable<RequestTimeline.Event> {", "originalCommit": "668b22c3a6f8f811a5568145a05121b100947885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4NTAwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366485008", "bodyText": "I am happy to move this out of direct for use in gateway. I'll take care of that this morning.", "author": "David-Noble-at-work", "createdAt": "2020-01-14T17:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MjEyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyODcwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366528700", "bodyText": "Any reason we need this in addition to empty() API above ?\nIs it okay to share the EMPTY static instance. If multiple callers get this object and modify it, the EMPTY static instance will be modified, right ?\nOr if it is singleton, then looks good.", "author": "kushagraThapar", "createdAt": "2020-01-14T19:26:11Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RequestTimeline.java", "diffHunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity;\n+\n+import com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdObjectMapper;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.time.Duration;\n+import java.time.OffsetDateTime;\n+import java.util.Iterator;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+/**\n+ * Represents the time and duration of important events in the lifetime of a request.\n+ *\n+ * A {@link RequestTimeline} represents a timeline as a sequence of {@link Event} instances with name, time, and\n+ * duration properties. Hence, one might use this class to represent any timeline. Today we use it to represent\n+ * {@link RntbdTransportClient} request timelines. In the future we might also use it to represent\n+ * {@link HttpTransportClient} request timelines.\n+ *\n+ * A {@link RequestTimeline} serializes to JSON as an array of {@link Event} instances. This is the default\n+ * serialization for any class that implements {@link Iterable}.\n+ * <p>\n+ * <b>Example:</b>\n+ * <pre>{@code OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-07T11:24:12.842749-08:00\", DateTimeFormatter.ISO_OFFSET_DATE_TIME);\n+ * sys.out.println(RequestTimeline.of(\n+ *     new RequestTimeline.Event(\"foo\", startTime, startTime.plusSeconds(1)),\n+ *     new RequestTimeline.Event(\"bar\", startTime.plusSeconds(1), startTime.plusSeconds(2))));}</pre>\n+ * JSON serialization:\n+ * <pre>{@code [{\"name\":\"foo\",\"time\":\"2020-01-07T11:24:12.842749-08:00\",\"duration\":\"PT1S\"},{\"name\":\"bar\",\"time\":\"2020-01-07T11:24:13.842749-08:00\",\"duration\":\"PT1S\"}])}</pre>\n+ */\n+public final class RequestTimeline implements Iterable<RequestTimeline.Event> {\n+\n+    private static final RequestTimeline EMPTY = new RequestTimeline();\n+    private final ImmutableList<Event> events;\n+\n+    private RequestTimeline() {\n+        this.events = ImmutableList.of();\n+    }\n+\n+    private RequestTimeline(final ImmutableList<Event> events) {\n+        checkNotNull(events, \"expected non-null events\");\n+        this.events = events;\n+    }\n+\n+    /**\n+     * Returns an empty {@link RequestTimeline}.\n+     *\n+     * The empty time line returned is static.\n+     *\n+     * @return an empty {@link RequestTimeline}.\n+     */\n+    public static RequestTimeline empty() {\n+        return EMPTY;\n+    }\n+\n+    /**\n+     * Returns an iterator for enumerating the {@link Event} instances in this {@link RequestTimeline}.\n+     *\n+     * @return an iterator for enumerating the {@link Event} instances in this {@link RequestTimeline}.\n+     */\n+    @Override\n+    public Iterator<Event> iterator() {\n+        return this.events.iterator();\n+    }\n+\n+    /**\n+     * Returns an empty {@link RequestTimeline}.\n+     *\n+     * The empty time line returned is static and equivalent to calling {@link RequestTimeline#empty}.\n+     *\n+     * @return an empty request timeline.\n+     */\n+    public static RequestTimeline of() {", "originalCommit": "668b22c3a6f8f811a5568145a05121b100947885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0MDcwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366540708", "bodyText": "EMPTY is a singleton and RequestTimeline instances are immutable. The of() method is provided for completeness and could easily be removed. I thought about removing it once or twice myself. I'll resolve this issue assuming that it's OK to leave the of() method in.", "author": "David-Noble-at-work", "createdAt": "2020-01-14T19:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyODcwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTAzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366531036", "bodyText": "Reactor might / will wrap the exception in ReactiveException.\nThe safest way to check throwable instanceOf CosmosClientException is this.\nfinal Throwable unwrappedThrowable = reactor.core.Exceptions.unwrap(throwable);\nif (unwrappedThrowable instanceof CosmosClientException) {\n .....\n}", "author": "kushagraThapar", "createdAt": "2020-01-14T19:31:15Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -117,21 +118,27 @@ public long id() {\n         URI address = addressUri.getURI();\n \n         final RntbdRequestArgs requestArgs = new RntbdRequestArgs(request, address);\n+\n         requestArgs.traceOperation(logger, null, \"invokeStoreAsync\");\n \n         final RntbdEndpoint endpoint = this.endpointProvider.get(address);\n         final RntbdRequestRecord record = endpoint.request(requestArgs);\n \n         logger.debug(\"RntbdTransportClient.invokeStoreAsync({}, {}): {}\", address, request, record);\n \n-        return Mono.fromFuture(record).doFinally(signalType -> {\n-            logger.debug(\"SignalType.{} received from reactor: {\\n  endpoint: {},\\n  record: {}\\n}\",\n-                signalType.name(),\n-                endpoint,\n-                record);\n-            if (signalType == SignalType.CANCEL) {\n-                record.stage(RntbdRequestRecord.Stage.CANCELLED_BY_CLIENT);\n+        return Mono.fromFuture(record.whenComplete((response, throwable) -> {\n+\n+            record.stage(RntbdRequestRecord.Stage.COMPLETED);\n+\n+            if (throwable == null) {\n+                response.setRequestTimeline(record.takeTimelineSnapshot());\n+            } else if (throwable instanceof CosmosClientException) {", "originalCommit": "668b22c3a6f8f811a5568145a05121b100947885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzODU5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366538590", "bodyText": "@kushagraThapar reactor.core.Exceptions.unwrap should not be needed in this layer. right?", "author": "moderakh", "createdAt": "2020-01-14T19:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0MzU2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366543569", "bodyText": "Correct: The CosmosClientException originates in the Direct TCP stack and so reactor.core.Exceptions.unwrap is not needed.", "author": "David-Noble-at-work", "createdAt": "2020-01-14T19:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTM0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7227#discussion_r366531348", "bodyText": "Good to log this \ud83d\udc4d", "author": "kushagraThapar", "createdAt": "2020-01-14T19:31:52Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -417,7 +424,14 @@ public String toString() {\n                         }\n                     }\n                 } finally {\n-                    DEFAULT_OPTIONS = options != null ? options : new Options();\n+                    if (options == null) {\n+                        DEFAULT_OPTIONS = new Options();\n+                    } else {\n+                        logger.info(\"Updated default Direct TCP options from system property {}: {}\",", "originalCommit": "668b22c3a6f8f811a5568145a05121b100947885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "175353c692f6124840c52c6178a00655b5ff540c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/175353c692f6124840c52c6178a00655b5ff540c", "message": "Moved RequestTimeline to com.azure.cosmos.implementation for use in HttpClient, HttpTransportClient, and RntbdTransportClient.", "committedDate": "2020-01-14T19:43:30Z", "type": "commit"}]}