{"pr_number": 15672, "pr_title": "mgmt, add util method for merging PagedFlux", "pr_createdAt": "2020-09-25T09:23:42Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15672", "timeline": [{"oid": "429c12465b8253c1c5c101787b6e2ffbacae1148", "url": "https://github.com/Azure/azure-sdk-for-java/commit/429c12465b8253c1c5c101787b6e2ffbacae1148", "message": "regen", "committedDate": "2020-09-25T04:05:44Z", "type": "commit"}, {"oid": "137401cc074b3c4aa3b2d602720bc7af31ae1380", "url": "https://github.com/Azure/azure-sdk-for-java/commit/137401cc074b3c4aa3b2d602720bc7af31ae1380", "message": "manual fix", "committedDate": "2020-09-25T04:10:38Z", "type": "commit"}, {"oid": "de1fb2a779ab42ed67358cfd1f375a232ce71c5f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/de1fb2a779ab42ed67358cfd1f375a232ce71c5f", "message": "batch replace", "committedDate": "2020-09-25T04:22:08Z", "type": "commit"}, {"oid": "f3f0d8b4ee9c2734b4b9ff0d2f4eb9bbb9bcf097", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f3f0d8b4ee9c2734b4b9ff0d2f4eb9bbb9bcf097", "message": "regen privatedns", "committedDate": "2020-09-25T04:22:50Z", "type": "commit"}, {"oid": "cb6382dfaec632686b292c3b36b616c486c65e9e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cb6382dfaec632686b292c3b36b616c486c65e9e", "message": "manual fix after client interface change", "committedDate": "2020-09-25T05:03:36Z", "type": "commit"}, {"oid": "bbf7ead1905e10e5289b8de4d23c76d5665cb214", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbf7ead1905e10e5289b8de4d23c76d5665cb214", "message": "regen sql", "committedDate": "2020-09-25T05:14:40Z", "type": "commit"}, {"oid": "ef56853af9f0b83f5ddfb63035bac450e949f8c7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ef56853af9f0b83f5ddfb63035bac450e949f8c7", "message": "fix sql files not commited", "committedDate": "2020-09-25T05:44:40Z", "type": "commit"}, {"oid": "e02652f889d2894dc907a80aeb5b95294a6aa612", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e02652f889d2894dc907a80aeb5b95294a6aa612", "message": "set azure-core-management version to dependency", "committedDate": "2020-09-25T05:46:59Z", "type": "commit"}, {"oid": "ea6a11de4ec27e9e2ecbcb583f8680314fe37617", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea6a11de4ec27e9e2ecbcb583f8680314fe37617", "message": "Merge branch 'mgmt_reset-core-mgmt-version-to-dependency' into mgmt_regen-all", "committedDate": "2020-09-25T06:00:40Z", "type": "commit"}, {"oid": "a0e6ceac99c06c725c870cd153b42311352f0f54", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a0e6ceac99c06c725c870cd153b42311352f0f54", "message": "record", "committedDate": "2020-09-25T06:13:29Z", "type": "commit"}, {"oid": "6aa8e8f01891826682aa4182bda0711013de613c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6aa8e8f01891826682aa4182bda0711013de613c", "message": "update script", "committedDate": "2020-09-25T06:19:51Z", "type": "commit"}, {"oid": "99ac8de0c3ce7f4d42a8f6abf667af1dda8beddf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/99ac8de0c3ce7f4d42a8f6abf667af1dda8beddf", "message": "exclude generated code from jacoco coverage", "committedDate": "2020-09-25T06:24:44Z", "type": "commit"}, {"oid": "cbacab6c461de5793711f02164020f6704490590", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cbacab6c461de5793711f02164020f6704490590", "message": "record", "committedDate": "2020-09-25T07:38:35Z", "type": "commit"}, {"oid": "e25ae6e9ca1c8632630d6cbb612ec9226a6c531f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e25ae6e9ca1c8632630d6cbb612ec9226a6c531f", "message": "add mergePagedFlux", "committedDate": "2020-09-25T08:20:28Z", "type": "commit"}, {"oid": "34baeeb72f36e5604d7b6d79018d512653e20eee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/34baeeb72f36e5604d7b6d79018d512653e20eee", "message": "javadoc", "committedDate": "2020-09-25T09:21:59Z", "type": "commit"}, {"oid": "4b436ca2552cc61879041a261f8b349c5dff6e22", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b436ca2552cc61879041a261f8b349c5dff6e22", "message": "Merge branch 'master' into mgmt_regen-all", "committedDate": "2020-09-25T12:48:26Z", "type": "commit"}, {"oid": "5e12e0bdac71441819ccd28172fabbbf9451c8a6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e12e0bdac71441819ccd28172fabbbf9451c8a6", "message": "update suppression, as autorest generated class is moved", "committedDate": "2020-09-25T13:01:18Z", "type": "commit"}, {"oid": "9a8f88bdd5efe237c54cde0cfc6be6abbb888bf3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a8f88bdd5efe237c54cde0cfc6be6abbb888bf3", "message": "Merge branch 'mgmt_regen-all' into mgmt_merge-paged-flux", "committedDate": "2020-09-25T13:01:56Z", "type": "commit"}, {"oid": "9c110b72ded5dab43bf0390529688d50213e25d0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c110b72ded5dab43bf0390529688d50213e25d0", "message": "Merge branch 'master' into mgmt_merge-paged-flux", "committedDate": "2020-09-25T14:47:47Z", "type": "commit"}, {"oid": "5c1fd29f713c94380dd4299360f8b465058bd8d0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c1fd29f713c94380dd4299360f8b465058bd8d0", "message": "update javadoc for PagedConverter", "committedDate": "2020-09-27T02:13:30Z", "type": "commit"}, {"oid": "c72bc8ac1e9f18c5a10ea73316fc19385547a6c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c72bc8ac1e9f18c5a10ea73316fc19385547a6c9", "message": "add test cases", "committedDate": "2020-09-27T02:21:22Z", "type": "commit"}, {"oid": "cd66878451de97c3629ca14a9bf19ca2d967acef", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cd66878451de97c3629ca14a9bf19ca2d967acef", "message": "Merge branch 'master' into mgmt_merge-paged-flux", "committedDate": "2020-09-27T02:29:04Z", "type": "commit"}, {"oid": "ea23c21ba2a2cf3b3837a3101d31a8e9d65dc658", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea23c21ba2a2cf3b3837a3101d31a8e9d65dc658", "message": "nit", "committedDate": "2020-09-27T02:34:59Z", "type": "commit"}, {"oid": "10a0800270a02f3e52fbf71e14f9098ef62a66dc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/10a0800270a02f3e52fbf71e14f9098ef62a66dc", "message": "fix test, miss verify", "committedDate": "2020-09-27T02:56:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODMzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495518338", "bodyText": "If use concatMap, is it better to change function name to concatMapPage?", "author": "ChenTanyi", "createdAt": "2020-09-27T02:33:06Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/PagedConverter.java", "diffHunk": "@@ -28,36 +29,58 @@ private PagedConverter() {\n     /**\n      * Applies flatMap transform to elements of PagedFlux.\n      *\n-     * @param <T> input type of pagedFlux\n-     * @param <S> return type of pagedFlux\n-     * @param pagedFlux input\n-     * @param mapper the flatMap transform of element T to Publisher of S.\n-     * @return the PagedFlux.\n+     * @param pagedFlux the input of PagedFlux.\n+     * @param transformer the flatMap transform of element T to Publisher of S.\n+     * @param <T> input type of PagedFlux.\n+     * @param <S> return type of PagedFlux.\n+     * @return the PagedFlux with elements in PagedResponse transformed.\n      */\n     public static <T, S> PagedFlux<S> flatMapPage(PagedFlux<T> pagedFlux,\n-            Function<? super T, ? extends Publisher<? extends S>> mapper) {\n+            Function<? super T, ? extends Publisher<? extends S>> transformer) {\n         Supplier<PageRetriever<String, PagedResponse<S>>> provider = () -> (continuationToken, pageSize) -> {\n             Flux<PagedResponse<T>> flux = (continuationToken == null)\n                     ? pagedFlux.byPage()\n                     : pagedFlux.byPage(continuationToken);\n-            return flux.flatMap(PagedConverter.flatMapPagedResponse(mapper));\n+            return flux.concatMap(PagedConverter.flatMapPagedResponse(transformer));", "originalCommit": "c72bc8ac1e9f18c5a10ea73316fc19385547a6c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMDgzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495520838", "bodyText": "the name of flatMapPage is actually about the Function<? super T, ? extends Publisher<? extends S>> mapper transform function. It is map of one to Flux, hence flatMap.\nIt is not about the concatMap on parent PagedFlux, it will always be concatMap, process one page, then next page (lazy fetch by page, allow user cancel in between).", "author": "weidongxu-microsoft", "createdAt": "2020-09-27T03:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyNTQxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495525417", "bodyText": "flatMap and concatMap could take same mapper to map flux, the only different is that flatMap do it as soon as possible, but the concatMap will do it one after the previous one finished.\nIf the flatMap and the concatMap behave same in PagedFlux, then it could be OK.", "author": "ChenTanyi", "createdAt": "2020-09-27T04:08:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyNzI3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495527275", "bodyText": "I think we want concatMap here, point here to do one page after another, so we do not eagerly fetch results (and apply the mapper) on next page.\nWithin page, it uses flatMapSequential to process all items eagerly, while still keep the item order.", "author": "weidongxu-microsoft", "createdAt": "2020-09-27T04:33:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODMzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODM1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495518356", "bodyText": "Same as above", "author": "ChenTanyi", "createdAt": "2020-09-27T02:33:24Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/PagedConverter.java", "diffHunk": "@@ -28,36 +29,58 @@ private PagedConverter() {\n     /**\n      * Applies flatMap transform to elements of PagedFlux.\n      *\n-     * @param <T> input type of pagedFlux\n-     * @param <S> return type of pagedFlux\n-     * @param pagedFlux input\n-     * @param mapper the flatMap transform of element T to Publisher of S.\n-     * @return the PagedFlux.\n+     * @param pagedFlux the input of PagedFlux.\n+     * @param transformer the flatMap transform of element T to Publisher of S.\n+     * @param <T> input type of PagedFlux.\n+     * @param <S> return type of PagedFlux.\n+     * @return the PagedFlux with elements in PagedResponse transformed.\n      */\n     public static <T, S> PagedFlux<S> flatMapPage(PagedFlux<T> pagedFlux,\n-            Function<? super T, ? extends Publisher<? extends S>> mapper) {\n+            Function<? super T, ? extends Publisher<? extends S>> transformer) {\n         Supplier<PageRetriever<String, PagedResponse<S>>> provider = () -> (continuationToken, pageSize) -> {\n             Flux<PagedResponse<T>> flux = (continuationToken == null)\n                     ? pagedFlux.byPage()\n                     : pagedFlux.byPage(continuationToken);\n-            return flux.flatMap(PagedConverter.flatMapPagedResponse(mapper));\n+            return flux.concatMap(PagedConverter.flatMapPagedResponse(transformer));\n+        };\n+        return PagedFlux.create(provider);\n+    }\n+\n+    /**\n+     * Merge PagedFlux in PagedFlux to a single PagedFlux.\n+     *\n+     * @param pagedFlux the input of PagedFlux.\n+     * @param transformer the transform of element T to PagedFlux of S.\n+     * @param <T> input type of PagedFlux.\n+     * @param <S> return type of PagedFlux.\n+     * @return the merged PagedFlux.\n+     */\n+    public static <T, S> PagedFlux<S> mergePagedFlux(PagedFlux<T> pagedFlux,\n+            Function<? super T, PagedFlux<S>> transformer) {\n+        // one possible issue is that when inner PagedFlux ends, that PagedResponse will have continuationToken == null\n+\n+        Supplier<PageRetriever<String, PagedResponse<S>>> provider = () -> (continuationToken, pageSize) -> {\n+            Flux<PagedResponse<T>> flux = (continuationToken == null)\n+                ? pagedFlux.byPage()\n+                : pagedFlux.byPage(continuationToken);\n+            return flux.concatMap(PagedConverter.mergePagedFluxPagedResponse(transformer));", "originalCommit": "c72bc8ac1e9f18c5a10ea73316fc19385547a6c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMDk4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495520980", "bodyText": "This one is actually pretty different from last one. It still process based on parent PagedFlux, here not only transform the element to something, instead it get PagedFlux from each element, then merge all these PagedResponse to a PagedFlux, meantime discarding the parent PagedResponse.", "author": "weidongxu-microsoft", "createdAt": "2020-09-27T03:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODQzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495518432", "bodyText": "I think transformer is not better than mapper. Flux has a function transform is different to flatMap", "author": "ChenTanyi", "createdAt": "2020-09-27T02:34:23Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/PagedConverter.java", "diffHunk": "@@ -28,36 +29,58 @@ private PagedConverter() {\n     /**\n      * Applies flatMap transform to elements of PagedFlux.\n      *\n-     * @param <T> input type of pagedFlux\n-     * @param <S> return type of pagedFlux\n-     * @param pagedFlux input\n-     * @param mapper the flatMap transform of element T to Publisher of S.\n-     * @return the PagedFlux.\n+     * @param pagedFlux the input of PagedFlux.\n+     * @param transformer the flatMap transform of element T to Publisher of S.\n+     * @param <T> input type of PagedFlux.\n+     * @param <S> return type of PagedFlux.\n+     * @return the PagedFlux with elements in PagedResponse transformed.\n      */\n     public static <T, S> PagedFlux<S> flatMapPage(PagedFlux<T> pagedFlux,\n-            Function<? super T, ? extends Publisher<? extends S>> mapper) {\n+            Function<? super T, ? extends Publisher<? extends S>> transformer) {", "originalCommit": "c72bc8ac1e9f18c5a10ea73316fc19385547a6c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMDYyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15672#discussion_r495520624", "bodyText": "OK. I will still call it mapper.", "author": "weidongxu-microsoft", "createdAt": "2020-09-27T03:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODQzMg=="}], "type": "inlineReview"}, {"oid": "9846bfc16561645fe591e6e740240779c8051730", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9846bfc16561645fe591e6e740240779c8051730", "message": "rename parameter", "committedDate": "2020-09-27T03:13:56Z", "type": "commit"}]}