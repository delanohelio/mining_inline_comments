{"pr_number": 15044, "pr_title": "feat(samples): Adding query samples", "pr_createdAt": "2020-09-10T18:37:03Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15044", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2MzEyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486563124", "bodyText": "Could you add a note about what a query charge is?", "author": "timtay-microsoft", "createdAt": "2020-09-10T18:49:08Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/QueryChargeHelper.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.azure.digitaltwins.core.util;\n+\n+import com.azure.core.http.rest.PagedResponse;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A helper to extract the query charge from the query response.", "originalCommit": "46b79a1d44dbc368517a8ea1a77b9a392825245d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4MTg3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486581875", "bodyText": "sure will do", "author": "vinagesh", "createdAt": "2020-09-10T19:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2MzEyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2NDE1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486564153", "bodyText": "Are IOExceptions actually thrown? I don't see any of our client methods declaring it.", "author": "timtay-microsoft", "createdAt": "2020-09-10T18:51:00Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "diffHunk": "@@ -333,4 +332,48 @@ public static void connectTwinsTogether() throws IOException, InterruptedExcepti\n         // Wait until the latch count reaches zero, signifying that the async calls have completed successfully.\n         connectTwinsLatch.await(MAX_WAIT_TIME_ASYNC_OPERATIONS_IN_SECONDS, TimeUnit.SECONDS);\n     }\n+\n+    /**\n+     *\n+     * Queries for all the digital twins.\n+     * @throws IOException If an I/O error is thrown when accessing the starting file.\n+     * @throws InterruptedException If the current thread is interrupted while waiting to acquire latch.\n+     */\n+    public static void queryTwins() throws IOException, InterruptedException {", "originalCommit": "46b79a1d44dbc368517a8ea1a77b9a392825245d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4Mjg2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486582862", "bodyText": "Nope. IOException is not needed for query. Will remove it.", "author": "vinagesh", "createdAt": "2020-09-10T19:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2NDE1Mw=="}], "type": "inlineReview"}, {"oid": "caa2538b00cff27fe795f2a1fc0ceed63588be14", "url": "https://github.com/Azure/azure-sdk-for-java/commit/caa2538b00cff27fe795f2a1fc0ceed63588be14", "message": "feat(samples): Adding query samples", "committedDate": "2020-09-10T19:29:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTg1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486609850", "bodyText": "\ud83d\udc4d", "author": "abhipsaMisra", "createdAt": "2020-09-10T20:20:03Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/QueryChargeHelper.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.azure.digitaltwins.core.util;\n+\n+import com.azure.core.http.rest.PagedResponse;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A helper to extract the query charge from the query response.\n+ * An Azure Digital Twins Query Unit (QU) is a unit of on-demand computation that's used to execute your Azure Digital Twins queries.", "originalCommit": "caa2538b00cff27fe795f2a1fc0ceed63588be14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMTk1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486611957", "bodyText": "should we return a primitive type float instead, with value 0? Or do you think that might be misleading?", "author": "abhipsaMisra", "createdAt": "2020-09-10T20:24:02Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/QueryChargeHelper.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.azure.digitaltwins.core.util;\n+\n+import com.azure.core.http.rest.PagedResponse;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A helper to extract the query charge from the query response.\n+ * An Azure Digital Twins Query Unit (QU) is a unit of on-demand computation that's used to execute your Azure Digital Twins queries.\n+ */\n+public final class QueryChargeHelper {\n+    private static final String queryChargeHeader = \"query-charge\";\n+\n+    public static <T> Float getQueryCharge(PagedResponse<T> page) {", "originalCommit": "caa2538b00cff27fe795f2a1fc0ceed63588be14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTU3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486615570", "bodyText": "I felt 0 would be misleading compared to null so did not use the primitive type.", "author": "vinagesh", "createdAt": "2020-09-10T20:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMTk1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjIzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486612231", "bodyText": "this \"throws\" comment can be removed", "author": "abhipsaMisra", "createdAt": "2020-09-10T20:24:32Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "diffHunk": "@@ -333,4 +332,48 @@ public static void connectTwinsTogether() throws IOException, InterruptedExcepti\n         // Wait until the latch count reaches zero, signifying that the async calls have completed successfully.\n         connectTwinsLatch.await(MAX_WAIT_TIME_ASYNC_OPERATIONS_IN_SECONDS, TimeUnit.SECONDS);\n     }\n+\n+    /**\n+     *\n+     * Queries for all the digital twins.\n+     * @throws IOException If an I/O error is thrown when accessing the starting file.", "originalCommit": "caa2538b00cff27fe795f2a1fc0ceed63588be14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjY3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486612677", "bodyText": "We've been using the ConsoleLogger helper class for printing console statements.", "author": "abhipsaMisra", "createdAt": "2020-09-10T20:25:19Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "diffHunk": "@@ -333,4 +332,48 @@ public static void connectTwinsTogether() throws IOException, InterruptedExcepti\n         // Wait until the latch count reaches zero, signifying that the async calls have completed successfully.\n         connectTwinsLatch.await(MAX_WAIT_TIME_ASYNC_OPERATIONS_IN_SECONDS, TimeUnit.SECONDS);\n     }\n+\n+    /**\n+     *\n+     * Queries for all the digital twins.\n+     * @throws IOException If an I/O error is thrown when accessing the starting file.\n+     * @throws InterruptedException If the current thread is interrupted while waiting to acquire latch.\n+     */\n+    public static void queryTwins() throws InterruptedException {\n+        System.out.println(\"QUERY DIGITAL TWINS\");", "originalCommit": "caa2538b00cff27fe795f2a1fc0ceed63588be14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTc3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486615772", "bodyText": "Are you sure? I say  System.out.println all across the file.", "author": "vinagesh", "createdAt": "2020-09-10T20:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNjczMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486616730", "bodyText": "That's weird, are you sure you have the latest code?", "author": "abhipsaMisra", "createdAt": "2020-09-10T20:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNjc3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15044#discussion_r486616777", "bodyText": "Looks like it has changed after I rebased. Let me switch it.", "author": "vinagesh", "createdAt": "2020-09-10T20:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjY3Nw=="}], "type": "inlineReview"}, {"oid": "1e448bda7c5dd1fe96e30bc26b5ec1587ce69094", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e448bda7c5dd1fe96e30bc26b5ec1587ce69094", "message": "feat(samples): Adding query samples", "committedDate": "2020-09-10T20:32:10Z", "type": "forcePushed"}, {"oid": "498f5df39528dba0b448314f924d3d0abdbde275", "url": "https://github.com/Azure/azure-sdk-for-java/commit/498f5df39528dba0b448314f924d3d0abdbde275", "message": "feat(samples): Adding query samples", "committedDate": "2020-09-10T20:34:14Z", "type": "forcePushed"}, {"oid": "4a163abc19c45d132cb1a23abbd6108a1aeaba4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4a163abc19c45d132cb1a23abbd6108a1aeaba4e", "message": "feat(samples): Adding query samples", "committedDate": "2020-09-10T20:39:23Z", "type": "commit"}, {"oid": "4a163abc19c45d132cb1a23abbd6108a1aeaba4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4a163abc19c45d132cb1a23abbd6108a1aeaba4e", "message": "feat(samples): Adding query samples", "committedDate": "2020-09-10T20:39:23Z", "type": "forcePushed"}]}