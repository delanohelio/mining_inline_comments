{"pr_number": 13541, "pr_title": "Update GeoJSON APIs to use Geo instead of Geometry", "pr_createdAt": "2020-07-27T21:49:12Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13541", "timeline": [{"oid": "4636bd8965074ad8ceaceccf96cf99b2e3fa7da0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4636bd8965074ad8ceaceccf96cf99b2e3fa7da0", "message": "Update GeoJSON APIs to use Geo instead of Geometry", "committedDate": "2020-07-24T21:32:33Z", "type": "commit"}, {"oid": "257755c6de383cd4be88de7175d9879451820950", "url": "https://github.com/Azure/azure-sdk-for-java/commit/257755c6de383cd4be88de7175d9879451820950", "message": "Added GeoArray as a generic representation of the coordinates for GeoObjects", "committedDate": "2020-10-14T18:06:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4NDIyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13541#discussion_r504884227", "bodyText": "For the bounding box the RFC indicates that it must contain 2*N coordinates where N is equivalent to the number of coordinates in the geometry it is bounding. A 2D geometry requires the bounding box to have 4 coordinates, 3D requires 6.\nhttps://tools.ietf.org/html/rfc7946#section-5\n@pakrym, @KrzysztofCwalina, @JonathanGiles, @srnagar, would this be something we want to validate? I know our guidelines generally state to limit client side validation, is this more in the context of a service requires or does it apply more broadly to RFC guidelines/requirements as well?", "author": "alzimmermsft", "createdAt": "2020-10-14T18:25:34Z", "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/geojson/GeoBoundingBox.java", "diffHunk": "@@ -1,14 +1,14 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.core.experimental.spatial;\n+package com.azure.core.experimental.geojson;\n \n import java.util.Objects;\n \n /**\n  * Represents a geometric bounding box.\n  */\n-public final class GeometryBoundingBox {\n+public final class GeoBoundingBox {", "originalCommit": "257755c6de383cd4be88de7175d9879451820950", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4NzU3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13541#discussion_r504887572", "bodyText": "I think we should go with our guidance of not validating too much. We can let cosmos service decide whether it wants to accept these geometries. AFAIK they just ignore bboxes", "author": "pakrym", "createdAt": "2020-10-14T18:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4NDIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwMzg2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13541#discussion_r512903869", "bodyText": "I agree. Let's not do too much validation here. Service can do this validation.", "author": "srnagar", "createdAt": "2020-10-27T17:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4NDIyNw=="}], "type": "inlineReview"}, {"oid": "c611767621cf449f109b5b0e90e4126e74c2ef09", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c611767621cf449f109b5b0e90e4126e74c2ef09", "message": "Updated from master and cleaned up module-infos", "committedDate": "2020-10-27T16:38:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwMjExNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13541#discussion_r512902114", "bodyText": "Why do we need json in this package name? Can we just use geo or geometry? Not sure if we should be including the serialization format for these types.", "author": "srnagar", "createdAt": "2020-10-27T17:47:01Z", "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/geojson/GeoArray.java", "diffHunk": "@@ -0,0 +1,334 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.experimental.geojson;", "originalCommit": "c611767621cf449f109b5b0e90e4126e74c2ef09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MDQxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13541#discussion_r512940417", "bodyText": "As discussed offline geojson was chosen as geometries and spatial types extends outside of the scope of GeoJSON and that is what this implementation is targeting. cc: @pakrym\nFor the serializers being in the package, that is done to scope feature work together in azure-core-experimental, once this functionality is merged into azure-core they'll exist in the serialization package.", "author": "alzimmermsft", "createdAt": "2020-10-27T18:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwMjExNA=="}], "type": "inlineReview"}]}