{"pr_number": 12292, "pr_title": "Update options for guidelines", "pr_createdAt": "2020-06-17T15:37:05Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/12292", "timeline": [{"oid": "f4389786f8e31ca321de42203164a20f0d35f793", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f4389786f8e31ca321de42203164a20f0d35f793", "message": "Started updating options", "committedDate": "2020-06-15T21:46:06Z", "type": "commit"}, {"oid": "149bf16216511a6e696d9a763c19baac58d048d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/149bf16216511a6e696d9a763c19baac58d048d2", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into updateOptionsForGuidelines", "committedDate": "2020-06-15T22:25:44Z", "type": "commit"}, {"oid": "855d3658646167471e0e870db8379837799c0853", "url": "https://github.com/Azure/azure-sdk-for-java/commit/855d3658646167471e0e870db8379837799c0853", "message": "Updated beta release based on 73 apiview feedback", "committedDate": "2020-06-15T22:52:01Z", "type": "commit"}, {"oid": "4eb54ac0111d0138f0e71998280b9d2c76d45c2f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4eb54ac0111d0138f0e71998280b9d2c76d45c2f", "message": "PR feedback", "committedDate": "2020-06-15T22:52:42Z", "type": "commit"}, {"oid": "87310f610db7beaecda987fc38f6bff6cd63c222", "url": "https://github.com/Azure/azure-sdk-for-java/commit/87310f610db7beaecda987fc38f6bff6cd63c222", "message": "Moved option types to options package, updated method signatures", "committedDate": "2020-06-16T18:40:32Z", "type": "commit"}, {"oid": "54e09ba14606bf899421b9aa184d48fef2e711fa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/54e09ba14606bf899421b9aa184d48fef2e711fa", "message": "Fixed up tests", "committedDate": "2020-06-16T20:38:40Z", "type": "commit"}, {"oid": "2ce59b8b4bfe550d3100ba82b76ae32c01c6b980", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2ce59b8b4bfe550d3100ba82b76ae32c01c6b980", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into updateOptionsForGuidelines", "committedDate": "2020-06-16T23:13:43Z", "type": "commit"}, {"oid": "c6d0062e0a45c75f9cf5acb329eb0cc16cf491d1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c6d0062e0a45c75f9cf5acb329eb0cc16cf491d1", "message": "Cleanup", "committedDate": "2020-06-17T15:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NzQ1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441647458", "bodyText": "I think in some APIs Duration is outside the options and in some it is in the options. We should probably figure out a consistent way to do it", "author": "gapra-msft", "createdAt": "2020-06-17T15:46:49Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClient.java", "diffHunk": "@@ -193,32 +194,31 @@ public void uploadFromFile(String filePath, ParallelTransferOptions parallelTran\n         Duration timeout) throws UncheckedIOException {\n         this.uploadFromFileWithResponse(new BlobUploadFromFileOptions(filePath)\n                 .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n-                .setTier(tier).setRequestConditions(requestConditions),\n-            timeout, null);\n+                .setTier(tier).setRequestConditions(requestConditions).setTimeout(timeout),\n+            null);\n     }\n \n     /**\n      * Creates a new block blob, or updates the content of an existing block blob.\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse#BlobUploadFromFileOptions-Duration-Context}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse#BlobUploadFromFileOptions-Context}\n      *\n      * @param options {@link BlobUploadFromFileOptions}\n-     * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n      * @throws UncheckedIOException If an I/O error occurs\n      * @return Information about the uploaded block blob.\n      */\n     @Override\n     public Response<BlockBlobItem> uploadFromFileWithResponse(BlobUploadFromFileOptions options,\n-                                                              Duration timeout, Context context)\n+                Context context)\n         throws UncheckedIOException {\n         Mono<Response<BlockBlobItem>> upload =\n             this.encryptedBlobAsyncClient.uploadFromFileWithResponse(options)\n                 .subscriberContext(FluxUtil.toReactorContext(context));\n \n         try {\n-            return StorageImplUtils.blockWithOptionalTimeout(upload, timeout);\n+            return StorageImplUtils.blockWithOptionalTimeout(upload, options.getTimeout());", "originalCommit": "c6d0062e0a45c75f9cf5acb329eb0cc16cf491d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0OTEzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441649131", "bodyText": "Any method that has been given an overload which accepts options has the timeout moved to the options. Any api where the timeout is still its own parameter has not yet had an options overload added. (Unless I've missed something)", "author": "rickle-msft", "createdAt": "2020-06-17T15:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NzQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0ODY2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441648664", "bodyText": "Some say that mutating input parameters isn't good practice.\nhttps://softwareengineering.stackexchange.com/questions/245767/is-modifying-an-incoming-parameter-an-antipattern\nlooks like we do a copy few lines below anyway.", "author": "kasobol-msft", "createdAt": "2020-06-17T15:48:37Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -278,23 +280,28 @@\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#Flux-BlobParallelUploadOptions}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#BlobParallelUploadOptions}\n      *\n-     * @param data The data to write to the blob. Unlike other upload methods, this method does not require that the\n      * {@code Flux} be replayable. In other words, it does not have to support multiple subscribers and is not expected\n      * to produce the same values across subscriptions.\n      * @param options {@link BlobParallelUploadOptions}\n      * @return A reactive response containing the information of the uploaded block blob.\n      */\n     @Override\n-    public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data, BlobParallelUploadOptions options) {\n+    public Mono<Response<BlockBlobItem>> uploadWithResponse(BlobParallelUploadOptions options) {\n         try {\n-            BlobParallelUploadOptions finalOptions = options == null ? new BlobParallelUploadOptions() : options;\n-            final Map<String, String> metadataFinal = finalOptions.getMetadata() == null\n-                ? new HashMap<>() : finalOptions.getMetadata();\n-            finalOptions.setMetadata(metadataFinal);\n+            Objects.requireNonNull(options);\n+            final Map<String, String> metadataFinal = options.getMetadata() == null\n+                ? new HashMap<>() : options.getMetadata();\n+            options.setMetadata(metadataFinal);", "originalCommit": "c6d0062e0a45c75f9cf5acb329eb0cc16cf491d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1OTUxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441659519", "bodyText": "I don't have to set it on the options. I can use a local variable if that's better?", "author": "rickle-msft", "createdAt": "2020-06-17T16:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0ODY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2MjMzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441662338", "bodyText": "sounds good,", "author": "kasobol-msft", "createdAt": "2020-06-17T16:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0ODY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2Mjc2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441662763", "bodyText": "btw. Collections.emtpyMap() might be more optimal.", "author": "kasobol-msft", "createdAt": "2020-06-17T16:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0ODY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTA3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441655072", "bodyText": "Should we use our \"utils\" for that?", "author": "kasobol-msft", "createdAt": "2020-06-17T15:58:07Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -278,23 +280,28 @@\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#Flux-BlobParallelUploadOptions}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#BlobParallelUploadOptions}\n      *\n-     * @param data The data to write to the blob. Unlike other upload methods, this method does not require that the\n      * {@code Flux} be replayable. In other words, it does not have to support multiple subscribers and is not expected\n      * to produce the same values across subscriptions.\n      * @param options {@link BlobParallelUploadOptions}\n      * @return A reactive response containing the information of the uploaded block blob.\n      */\n     @Override\n-    public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data, BlobParallelUploadOptions options) {\n+    public Mono<Response<BlockBlobItem>> uploadWithResponse(BlobParallelUploadOptions options) {\n         try {\n-            BlobParallelUploadOptions finalOptions = options == null ? new BlobParallelUploadOptions() : options;\n-            final Map<String, String> metadataFinal = finalOptions.getMetadata() == null\n-                ? new HashMap<>() : finalOptions.getMetadata();\n-            finalOptions.setMetadata(metadataFinal);\n+            Objects.requireNonNull(options);", "originalCommit": "c6d0062e0a45c75f9cf5acb329eb0cc16cf491d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1OTc4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r441659780", "bodyText": "Yes. I thought I went through and changed all these, but I guess I missed some. Nice catch!", "author": "rickle-msft", "createdAt": "2020-06-17T16:05:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTA3Mg=="}], "type": "inlineReview"}, {"oid": "fa07a9f81e0a98e514ee549063d5761b8ac0ca60", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa07a9f81e0a98e514ee549063d5761b8ac0ca60", "message": "CI fixes", "committedDate": "2020-06-17T16:08:04Z", "type": "commit"}, {"oid": "ed93231b74d277e5e892dc31e0c82296d534e373", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed93231b74d277e5e892dc31e0c82296d534e373", "message": "CI fixes", "committedDate": "2020-06-17T19:34:57Z", "type": "commit"}, {"oid": "ec763146b1c71a67f16e059f4133fb6dbd23bab7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec763146b1c71a67f16e059f4133fb6dbd23bab7", "message": "https", "committedDate": "2020-06-17T20:31:13Z", "type": "commit"}, {"oid": "1c66257e112150ff52904bcdaa0581774fedc708", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1c66257e112150ff52904bcdaa0581774fedc708", "message": "CI fixes", "committedDate": "2020-06-17T22:13:43Z", "type": "commit"}, {"oid": "4b603ecfdd4cce63a8c07662733a551ba3a2cb26", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b603ecfdd4cce63a8c07662733a551ba3a2cb26", "message": "Ci fixes", "committedDate": "2020-06-17T23:26:07Z", "type": "commit"}, {"oid": "cdf0e308c4cb9d27c9b9d8b57c1402c8d0b39f0f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cdf0e308c4cb9d27c9b9d8b57c1402c8d0b39f0f", "message": "Removed timeout from options", "committedDate": "2020-06-18T17:14:05Z", "type": "commit"}, {"oid": "5b5cddd4f5880034e0bacae1f9fc65255bfa1ebf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b5cddd4f5880034e0bacae1f9fc65255bfa1ebf", "message": "Small fix", "committedDate": "2020-06-18T17:34:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM5NDY3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r442394672", "bodyText": "nit: this should just be \"the outputstream...\"", "author": "gapra-msft", "createdAt": "2020-06-18T17:39:10Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobQueryOptions.java", "diffHunk": "@@ -32,6 +34,19 @@\n     public BlobQueryOptions(String expression) {\n         StorageImplUtils.assertNotNull(\"expression\", expression);\n         this.expression = expression;\n+        this.outputStream = null;\n+    }\n+\n+    /**\n+     * Constructs a {@link BlobQueryOptions}.\n+     * @param expression The query expression.\n+     * @param outputStream Gets the OutputStream where the downloaded data will be written.", "originalCommit": "5b5cddd4f5880034e0bacae1f9fc65255bfa1ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM5NTQyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r442395422", "bodyText": "This should just be timeout", "author": "gapra-msft", "createdAt": "2020-06-18T17:40:35Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/AppendBlobClient.java", "diffHunk": "@@ -161,10 +161,9 @@ public AppendBlobItem create(boolean overwrite) {\n      * @param context Additional context that is passed through the Http pipeline during the service call.\n      * @return A {@link Response} whose {@link Response#getValue() value} contains the created appended blob.\n      */\n-    public Response<AppendBlobItem> createWithResponse(AppendBlobCreateOptions options, Duration timeout,\n-        Context context) {\n+    public Response<AppendBlobItem> createWithResponse(AppendBlobCreateOptions options, Duration timeout, Context context) {\n         return StorageImplUtils.blockWithOptionalTimeout(appendBlobAsyncClient.\n-            createWithResponse(options, context), timeout);\n+            createWithResponse(options, context), options == null ? null : timeout);", "originalCommit": "5b5cddd4f5880034e0bacae1f9fc65255bfa1ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM5NjY1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12292#discussion_r442396655", "bodyText": "Should this be StorageImplUtils?", "author": "gapra-msft", "createdAt": "2020-06-18T17:42:51Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlockBlobClient.java", "diffHunk": "@@ -305,13 +301,10 @@ public BlockBlobItem upload(InputStream data, long length, boolean overwrite) {\n      * @throws NullPointerException if the input data is null.\n      * @throws UncheckedIOException If an I/O error occurs\n      */\n-    public Response<BlockBlobItem> uploadWithResponse(InputStream data, long length,\n-        BlockBlobSimpleUploadOptions options, Duration timeout, Context context) {\n-        Objects.requireNonNull(data);\n-        Flux<ByteBuffer> fbb = Utility.convertStreamToByteBuffer(data, length,\n-            BlobAsyncClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE);\n-        Mono<Response<BlockBlobItem>> upload = client\n-            .uploadWithResponse(fbb.subscribeOn(Schedulers.elastic()), length, options, context);\n+    public Response<BlockBlobItem> uploadWithResponse(BlockBlobSimpleUploadOptions options, Duration timeout,\n+        Context context) {\n+        Objects.requireNonNull(options);", "originalCommit": "5b5cddd4f5880034e0bacae1f9fc65255bfa1ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "79f58a8969334e4000e990196e81cc3000a7417f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/79f58a8969334e4000e990196e81cc3000a7417f", "message": "PR feedback and CI fixes", "committedDate": "2020-06-18T17:51:01Z", "type": "commit"}, {"oid": "3f5ce5f146d23226e4a11c9ed531a0bfd32ee165", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f5ce5f146d23226e4a11c9ed531a0bfd32ee165", "message": "test fixes", "committedDate": "2020-06-18T18:11:12Z", "type": "commit"}, {"oid": "61972f6d84345c3d2049978f7c1d1707a5b5ac40", "url": "https://github.com/Azure/azure-sdk-for-java/commit/61972f6d84345c3d2049978f7c1d1707a5b5ac40", "message": "CI fixes", "committedDate": "2020-06-18T18:34:55Z", "type": "commit"}, {"oid": "efeacd815436900e5cef1db9c30d64041259257a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/efeacd815436900e5cef1db9c30d64041259257a", "message": "Ci fixes", "committedDate": "2020-06-18T19:00:39Z", "type": "commit"}]}