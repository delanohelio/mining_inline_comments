{"pr_number": 14591, "pr_title": "[Cog Serv Anomaly Detector] add sample codes", "pr_createdAt": "2020-08-28T10:36:19Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14591", "timeline": [{"oid": "f16b387c9021e84189082413206d2c279e404e36", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f16b387c9021e84189082413206d2c279e404e36", "message": "add samples and sample data", "committedDate": "2020-08-28T09:55:47Z", "type": "commit"}, {"oid": "3735210505a134c9adc791977326a5fa76809e52", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3735210505a134c9adc791977326a5fa76809e52", "message": "add REAME.md for samples", "committedDate": "2020-08-28T10:33:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NDY1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14591#discussion_r480474651", "bodyText": "Please add javadoc to describe what this sample does.", "author": "srnagar", "createdAt": "2020-08-31T23:39:13Z", "path": "sdk/anomalydetector/azure-ai-anomalydetector/src/samples/java/com/azure/ai/anomalydetector/DetectAnomaliesEntireSeries.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.anomalydetector;\n+\n+import com.azure.ai.anomalydetector.models.DetectRequest;\n+import com.azure.ai.anomalydetector.models.EntireDetectResponse;\n+import com.azure.ai.anomalydetector.models.TimeGranularity;\n+import com.azure.ai.anomalydetector.models.TimeSeriesPoint;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.http.*;\n+import com.azure.core.http.policy.AddHeadersPolicy;\n+import com.azure.core.http.policy.AzureKeyCredentialPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class DetectAnomaliesEntireSeries {", "originalCommit": "3735210505a134c9adc791977326a5fa76809e52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NTE1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14591#discussion_r480475156", "bodyText": "use more descriptive variable names instead of e and p.", "author": "srnagar", "createdAt": "2020-08-31T23:40:51Z", "path": "sdk/anomalydetector/azure-ai-anomalydetector/src/samples/java/com/azure/ai/anomalydetector/DetectAnomaliesEntireSeries.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.anomalydetector;\n+\n+import com.azure.ai.anomalydetector.models.DetectRequest;\n+import com.azure.ai.anomalydetector.models.EntireDetectResponse;\n+import com.azure.ai.anomalydetector.models.TimeGranularity;\n+import com.azure.ai.anomalydetector.models.TimeSeriesPoint;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.http.*;\n+import com.azure.core.http.policy.AddHeadersPolicy;\n+import com.azure.core.http.policy.AzureKeyCredentialPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class DetectAnomaliesEntireSeries {\n+\n+    public static void main(final String[] args) throws IOException {\n+        String endpoint = \"<anomaly-detector-resource-endpoint>\";\n+        String key = \"<anomaly-detector-resource-key>\";\n+        HttpHeaders headers = new HttpHeaders()\n+            .put(\"Accept\", ContentType.APPLICATION_JSON);\n+\n+        HttpPipelinePolicy authPolicy = new AzureKeyCredentialPolicy(\"Ocp-Apim-Subscription-Key\",\n+            new AzureKeyCredential(key));\n+        AddHeadersPolicy addHeadersPolicy = new AddHeadersPolicy(headers);\n+\n+        HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(HttpClient.createDefault())\n+            .policies(authPolicy, addHeadersPolicy).build();\n+        AnomalyDetectorClient anomalyDetectorClient = new AnomalyDetectorClientBuilder()\n+            .pipeline(httpPipeline)\n+            .endpoint(endpoint)\n+            .buildClient();\n+\n+        Path path = Paths.get(\"./src/samples/java/sample_data/request-data.csv\");\n+        List<String> requestData = Files.readAllLines(path);\n+        List<TimeSeriesPoint> series = requestData.stream()\n+            .map(e -> e.trim())\n+            .filter(e -> e.length() > 0)\n+            .map(e -> e.split(\",\", 2))\n+            .filter(e -> e.length == 2)\n+            .map(e -> {\n+                TimeSeriesPoint p = new TimeSeriesPoint();\n+                p.setTimestamp(OffsetDateTime.parse(e[0]));\n+                p.setValue(Float.parseFloat(e[1]));\n+                return p;\n+            })", "originalCommit": "3735210505a134c9adc791977326a5fa76809e52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NTM5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14591#discussion_r480475395", "bodyText": "Add javadocs for all samples.", "author": "srnagar", "createdAt": "2020-08-31T23:41:41Z", "path": "sdk/anomalydetector/azure-ai-anomalydetector/src/samples/java/com/azure/ai/anomalydetector/DetectAnomaliesLastPoint.java", "diffHunk": "@@ -0,0 +1,69 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.anomalydetector;\n+\n+import com.azure.ai.anomalydetector.models.DetectRequest;\n+import com.azure.ai.anomalydetector.models.LastDetectResponse;\n+import com.azure.ai.anomalydetector.models.TimeGranularity;\n+import com.azure.ai.anomalydetector.models.TimeSeriesPoint;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.http.*;\n+import com.azure.core.http.policy.AddHeadersPolicy;\n+import com.azure.core.http.policy.AzureKeyCredentialPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class DetectAnomaliesLastPoint {", "originalCommit": "3735210505a134c9adc791977326a5fa76809e52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NjQ4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14591#discussion_r480476488", "bodyText": "Enumerate all imports instead of using *.", "author": "srnagar", "createdAt": "2020-08-31T23:45:24Z", "path": "sdk/anomalydetector/azure-ai-anomalydetector/src/samples/java/com/azure/ai/anomalydetector/DetectChangePoints.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.anomalydetector;\n+\n+import com.azure.ai.anomalydetector.models.ChangePointDetectRequest;\n+import com.azure.ai.anomalydetector.models.ChangePointDetectResponse;\n+import com.azure.ai.anomalydetector.models.TimeGranularity;\n+import com.azure.ai.anomalydetector.models.TimeSeriesPoint;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.http.*;", "originalCommit": "3735210505a134c9adc791977326a5fa76809e52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NzU4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14591#discussion_r480477582", "bodyText": "It would be good to add comments to describe what is happening in the samples to help the users follow the sample better.", "author": "srnagar", "createdAt": "2020-08-31T23:49:02Z", "path": "sdk/anomalydetector/azure-ai-anomalydetector/src/samples/java/com/azure/ai/anomalydetector/DetectChangePoints.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.anomalydetector;\n+\n+import com.azure.ai.anomalydetector.models.ChangePointDetectRequest;\n+import com.azure.ai.anomalydetector.models.ChangePointDetectResponse;\n+import com.azure.ai.anomalydetector.models.TimeGranularity;\n+import com.azure.ai.anomalydetector.models.TimeSeriesPoint;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.http.*;\n+import com.azure.core.http.policy.AddHeadersPolicy;\n+import com.azure.core.http.policy.AzureKeyCredentialPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class DetectChangePoints {\n+\n+    public static void main(final String[] args) throws IOException {\n+        String endpoint = \"<anomaly-detector-resource-endpoint>\";\n+        String key = \"<anomaly-detector-resource-key>\";\n+        HttpHeaders headers = new HttpHeaders()\n+            .put(\"Accept\", ContentType.APPLICATION_JSON);\n+\n+        HttpPipelinePolicy authPolicy = new AzureKeyCredentialPolicy(\"Ocp-Apim-Subscription-Key\",\n+            new AzureKeyCredential(key));\n+        AddHeadersPolicy addHeadersPolicy = new AddHeadersPolicy(headers);\n+\n+        HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(HttpClient.createDefault())\n+            .policies(authPolicy, addHeadersPolicy).build();\n+        AnomalyDetectorClient anomalyDetectorClient = new AnomalyDetectorClientBuilder()\n+            .pipeline(httpPipeline)\n+            .endpoint(endpoint)\n+            .buildClient();\n+\n+        Path path = Paths.get(\"./src/samples/java/sample_data/request-data.csv\");\n+        List<String> requestData = Files.readAllLines(path);\n+        List<TimeSeriesPoint> series = requestData.stream()", "originalCommit": "3735210505a134c9adc791977326a5fa76809e52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2cd0dab37b01e735f326dba6b1ae07ab6fb14022", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2cd0dab37b01e735f326dba6b1ae07ab6fb14022", "message": "add javafdoc; rename variates;", "committedDate": "2020-09-01T04:17:40Z", "type": "commit"}, {"oid": "c57811459f2f0c39cce126c2f6734b0f5ac5fd9e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c57811459f2f0c39cce126c2f6734b0f5ac5fd9e", "message": "add more comments", "committedDate": "2020-09-01T04:59:36Z", "type": "commit"}]}