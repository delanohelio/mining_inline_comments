{"pr_number": 16696, "pr_title": "Add clientOptions to digital twins builder", "pr_createdAt": "2020-10-22T18:41:54Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16696", "timeline": [{"oid": "4ca8a71914c6745e1f1b329779d152b4c7ef72e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ca8a71914c6745e1f1b329779d152b4c7ef72e3", "message": "Add clientOptions to digital twins builder\n\nalso rename BasicDigitalTwin's getDigitalTwinEtag() to be just getEtag()", "committedDate": "2020-10-22T18:41:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4MjE2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510382163", "bodyText": "Enumerate all imports instead of using *", "author": "srnagar", "createdAt": "2020-10-22T18:47:45Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -5,10 +5,9 @@\n \n import com.azure.core.annotation.ServiceClientBuilder;\n import com.azure.core.credential.TokenCredential;\n-import com.azure.core.http.HttpClient;\n-import com.azure.core.http.HttpPipeline;\n-import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.*;", "originalCommit": "4ca8a71914c6745e1f1b329779d152b4c7ef72e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f72f51104f6646139f85117f96535b7ffd176ac2", "message": "fixup", "committedDate": "2020-10-22T18:50:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTU1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510385551", "bodyText": "How do we feel about formatting ternary operations like we do in .NET?\nString applicationId = clientOptions == null\n    ? httpLogOptions.getApplicationId()\n    : clientOptions.GetApplicationId();", "author": "drwill-ms", "createdAt": "2020-10-22T18:53:45Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =", "originalCommit": "f72f51104f6646139f85117f96535b7ffd176ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjQzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386438", "bodyText": "Sure, that looks a bit cleaner", "author": "timtay-microsoft", "createdAt": "2020-10-22T18:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjExMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386110", "bodyText": "Does Java have null coalesce? Like String applicationId = clientOptions?.getApplicationId ?? httpLogOptions.getApplicationId;", "author": "drwill-ms", "createdAt": "2020-10-22T18:54:40Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();", "originalCommit": "f72f51104f6646139f85117f96535b7ffd176ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjMwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386301", "bodyText": "Nope", "author": "timtay-microsoft", "createdAt": "2020-10-22T18:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjExMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386752", "bodyText": "Does it matter in Java (for memory optimization) to initialize a list with a known size ahead of time, and could you get that from clientOptions.getHeaders()?", "author": "drwill-ms", "createdAt": "2020-10-22T18:55:43Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -106,6 +127,14 @@ private static HttpPipeline buildPipeline(TokenCredential tokenCredential, Strin\n \n         policies.addAll(additionalPolicies);\n \n+        // If client options has headers configured, add a policy for each\n+        if (clientOptions != null) {\n+            List<HttpHeader> httpHeaderList = new ArrayList<>();", "originalCommit": "f72f51104f6646139f85117f96535b7ffd176ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NzE0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510387142", "bodyText": "Good idea. ArrayList does have a constructor that takes the expected size", "author": "timtay-microsoft", "createdAt": "2020-10-22T18:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NzY0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510387642", "bodyText": "But the getHeaders() call is just an iterable, so there isn't a way to know the size until iterated on, so that would be a wash", "author": "timtay-microsoft", "createdAt": "2020-10-22T18:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg=="}], "type": "inlineReview"}, {"oid": "3a447434aa92e7f2c3e9a31655236b2d046d4346", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a447434aa92e7f2c3e9a31655236b2d046d4346", "message": "fixup", "committedDate": "2020-10-22T18:55:47Z", "type": "commit"}]}