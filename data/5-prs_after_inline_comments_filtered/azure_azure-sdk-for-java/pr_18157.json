{"pr_number": 18157, "pr_title": "Added support for container rename (datalake + blob) and container restore (datalake)", "pr_createdAt": "2020-12-16T00:02:07Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18157", "timeline": [{"oid": "7fc7f11fa2e5eca5c1ba04391fab6b1f79e18e1b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7fc7f11fa2e5eca5c1ba04391fab6b1f79e18e1b", "message": "Added support for blob and datalake container rename and datalake container restore", "committedDate": "2020-12-15T23:59:05Z", "type": "commit"}, {"oid": "f90b245cedfd2c99b2a46daa2253d2d43959c10f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f90b245cedfd2c99b2a46daa2253d2d43959c10f", "message": "revereted version", "committedDate": "2020-12-16T00:00:42Z", "type": "commit"}, {"oid": "f844c006cf44ac327cba584c24e399b5bb55fd04", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f844c006cf44ac327cba584c24e399b5bb55fd04", "message": "Fixed sample", "committedDate": "2020-12-16T00:16:41Z", "type": "commit"}, {"oid": "179250361fe43a2306a2d5a6b492000ecf1640fc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/179250361fe43a2306a2d5a6b492000ecf1640fc", "message": "fixed snippet", "committedDate": "2020-12-16T00:30:46Z", "type": "commit"}, {"oid": "6764aa8f8fc41c3b44699441f4f4aafdbb0ed20b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6764aa8f8fc41c3b44699441f4f4aafdbb0ed20b", "message": "Analyze step", "committedDate": "2020-12-17T18:00:02Z", "type": "commit"}, {"oid": "01a7ed43245fe8c30394f98baee29adf52bae6ae", "url": "https://github.com/Azure/azure-sdk-for-java/commit/01a7ed43245fe8c30394f98baee29adf52bae6ae", "message": "Analyze step", "committedDate": "2020-12-17T19:53:41Z", "type": "commit"}, {"oid": "0b91b50d7637126066e133959b246cd828e59eec", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b91b50d7637126066e133959b246cd828e59eec", "message": "Fixed blob tests", "committedDate": "2020-12-17T20:26:32Z", "type": "commit"}, {"oid": "c801d3bf7daa78e0e0773dd93d96670304aa8c61", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c801d3bf7daa78e0e0773dd93d96670304aa8c61", "message": "Fixed datalake test", "committedDate": "2020-12-17T20:34:29Z", "type": "commit"}, {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/200dc1d078f5e74a95d5d58a52fa4221b97b124b", "message": "fixed preprod", "committedDate": "2020-12-17T20:34:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545450724", "bodyText": "If Lease-Id is the only valid conditional for this operation why do we accept the more complex match conditions object? Is this to allow for extensibility in the future?", "author": "alzimmermsft", "createdAt": "2020-12-17T22:41:14Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1085,4 +1086,30 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    private boolean validateNoTime(BlobRequestConditions modifiedRequestConditions) {\n+        if (modifiedRequestConditions == null) {\n+            return true;\n+        }\n+        return modifiedRequestConditions.getIfModifiedSince() == null\n+            && modifiedRequestConditions.getIfUnmodifiedSince() == null;\n+    }\n+\n+    Mono<Response<BlobContainerAsyncClient>> renameWithResponse(ContainerRenameOptions options, Context context) {\n+        StorageImplUtils.assertNotNull(\"options\", options);\n+        BlobRequestConditions requestConditions = options.getRequestConditions() == null ? new BlobRequestConditions()\n+            : options.getRequestConditions();\n+        context = context == null ? Context.NONE : context;\n+\n+        if (!validateNoETag(requestConditions) || !validateNoTime(requestConditions)\n+            || requestConditions.getTagsConditions() != null) {\n+            throw logger.logExceptionAsError(new UnsupportedOperationException(\n+                \"Lease-Id is the only HTTP access condition supported for this API\"));", "originalCommit": "200dc1d078f5e74a95d5d58a52fa4221b97b124b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ4Mzc0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545483746", "bodyText": "Yeah I think it is extensibility. I have seen areas in the SDK where we only take in lease id as well though so there is no set in stone pattern we've stuck with", "author": "gapra-msft", "createdAt": "2020-12-17T23:58:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjEwOTk5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r552109991", "bodyText": "@alzimmermsft Do you have a preference on how this gets exposed?", "author": "gapra-msft", "createdAt": "2021-01-05T18:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExMDkyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r552110920", "bodyText": "We can always expose a String leaseId and deprecate the setter getter if more request conditions become valid", "author": "gapra-msft", "createdAt": "2021-01-05T18:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjEyMTI5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r552121294", "bodyText": "I'd lean towards using the same deciding factor as when we opt for options parameter types, if this is expected to grow in the near term future I'd lean towards keeping code as-is.", "author": "alzimmermsft", "createdAt": "2021-01-05T18:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MjU0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545452540", "bodyText": "Given that using options other than Lease-Id will result in a runtime exception we should add that information as a Javadoc here.", "author": "alzimmermsft", "createdAt": "2020-12-17T22:44:58Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/ContainerRenameOptions.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Extended options that may be passed when renaming a blob container.\n+ */\n+@Fluent\n+public class ContainerRenameOptions {\n+\n+    private final String destinationContainerName;\n+    private final String sourceContainerName;\n+    private BlobRequestConditions requestConditions;\n+\n+    /**\n+     * @param destinationContainerName The new name of the container.\n+     * @param sourceContainerName The current name of the container.\n+     */\n+    public ContainerRenameOptions(String destinationContainerName, String sourceContainerName) {\n+        Objects.requireNonNull(destinationContainerName);\n+        Objects.requireNonNull(sourceContainerName);\n+        this.destinationContainerName = destinationContainerName;\n+        this.sourceContainerName = sourceContainerName;\n+    }\n+\n+    /**\n+     * @return The new name of the container.\n+     */\n+    public String getDestinationContainerName() {\n+        return destinationContainerName;\n+    }\n+\n+    /**\n+     * @return The current name of the container.\n+     */\n+    public String getSourceContainerName() {\n+        return sourceContainerName;\n+    }\n+\n+    /**\n+     * @return {@link BlobRequestConditions}\n+     */\n+    public BlobRequestConditions getRequestConditions() {\n+        return requestConditions;\n+    }\n+\n+    /**\n+     * @param requestConditions {@link BlobRequestConditions}\n+     * @return The updated options.\n+     */\n+    public ContainerRenameOptions setRequestConditions(BlobRequestConditions requestConditions) {", "originalCommit": "200dc1d078f5e74a95d5d58a52fa4221b97b124b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MzYxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545453612", "bodyText": "Will setting this with full options potentially lead to exceptions being thrown as well?", "author": "alzimmermsft", "createdAt": "2020-12-17T22:47:20Z", "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/FileSystemRenameOptions.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.file.datalake.models.DataLakeRequestConditions;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Extended options that may be passed when renaming a file system.\n+ */\n+@Fluent\n+public class FileSystemRenameOptions {\n+\n+    private final String destinationFileSystemName;\n+    private final String sourceFileSystemName;\n+    private DataLakeRequestConditions requestConditions;\n+\n+    /**\n+     * @param destinationFileSystemName The new name of the file system.\n+     * @param sourceFileSystemName The current name of the file system.\n+     */\n+    public FileSystemRenameOptions(String destinationFileSystemName, String sourceFileSystemName) {\n+        Objects.requireNonNull(destinationFileSystemName);\n+        Objects.requireNonNull(sourceFileSystemName);\n+        this.destinationFileSystemName = destinationFileSystemName;\n+        this.sourceFileSystemName = sourceFileSystemName;\n+    }\n+\n+    /**\n+     * @return The new name of the file system.\n+     */\n+    public String getDestinationFileSystemName() {\n+        return destinationFileSystemName;\n+    }\n+\n+    /**\n+     * @return The current name of the file system.\n+     */\n+    public String getSourceFileSystemName() {\n+        return sourceFileSystemName;\n+    }\n+\n+    /**\n+     * @return {@link DataLakeRequestConditions}\n+     */\n+    public DataLakeRequestConditions getRequestConditions() {\n+        return requestConditions;\n+    }\n+\n+    /**\n+     * @param requestConditions {@link DataLakeRequestConditions}\n+     * @return The updated options.\n+     */\n+    public FileSystemRenameOptions setRequestConditions(DataLakeRequestConditions requestConditions) {", "originalCommit": "200dc1d078f5e74a95d5d58a52fa4221b97b124b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ4NDI0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545484248", "bodyText": "Yep. I can add the exception info in the javadoc here as well", "author": "gapra-msft", "createdAt": "2020-12-17T23:59:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MzYxMg=="}], "type": "inlineReview"}, {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1ad0666a63187ec598a72cf9f3b4440b65e3589c", "message": "Merge branch 'feature/storage/stg76' into storage/containerRename", "committedDate": "2020-12-18T17:05:34Z", "type": "commit"}, {"oid": "ffaddae7198cf4b450b7a06ea3d3674aa320be3a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ffaddae7198cf4b450b7a06ea3d3674aa320be3a", "message": "Merge branch 'feature/storage/stg76' into storage/containerRename", "committedDate": "2021-01-04T22:49:46Z", "type": "commit"}, {"oid": "9de6c2e6b851d71dcc6bb8949eb1b641e4ad16f9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9de6c2e6b851d71dcc6bb8949eb1b641e4ad16f9", "message": "Added review changes", "committedDate": "2021-01-05T19:42:56Z", "type": "commit"}, {"oid": "32c5f69fc4734c8f46cb0bce97f8b0eefb06c020", "url": "https://github.com/Azure/azure-sdk-for-java/commit/32c5f69fc4734c8f46cb0bce97f8b0eefb06c020", "message": "Added exception information", "committedDate": "2021-01-05T19:47:51Z", "type": "commit"}]}