{"pr_number": 13489, "pr_title": "Initializing query options if user passes null", "pr_createdAt": "2020-07-24T15:01:21Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13489", "timeline": [{"oid": "d76516accd11441dcf8a50a1a246cd3fb37716f8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d76516accd11441dcf8a50a1a246cd3fb37716f8", "message": "Query option intialization if user passed null", "committedDate": "2020-07-24T14:48:23Z", "type": "commit"}, {"oid": "81a9e41ebc7674b1f1b0fc79a9c8f31241ab82aa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/81a9e41ebc7674b1f1b0fc79a9c8f31241ab82aa", "message": "redundant final from readAllConflicts", "committedDate": "2020-07-24T14:56:07Z", "type": "commit"}, {"oid": "4548babab1dd9ab48aada8620a445373862751bf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4548babab1dd9ab48aada8620a445373862751bf", "message": "merging with master", "committedDate": "2020-07-24T15:00:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyNzg5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13489#discussion_r460127895", "bodyText": "we have different queryDatabase API and all are calling one.\nYou don't need to repeat this on every different form. you could just add this to queryDatabaseInternal()", "author": "moderakh", "createdAt": "2020-07-24T15:32:21Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncClient.java", "diffHunk": "@@ -421,6 +425,10 @@ boolean isContentResponseOnWriteEnabled() {\n      * @return a {@link CosmosPagedFlux} containing one or several feed response pages of read databases or an error.\n      */\n     public CosmosPagedFlux<CosmosDatabaseProperties> queryDatabases(SqlQuerySpec querySpec, CosmosQueryRequestOptions options) {\n+        if (options == null) {\n+            options = new CosmosQueryRequestOptions();\n+        }\n+\n         return queryDatabasesInternal(querySpec, options);", "originalCommit": "4548babab1dd9ab48aada8620a445373862751bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzNTg2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13489#discussion_r460135868", "bodyText": "I thought that too. We are following this explicit check on api entry point in crud operations. So one thing is consistency, second we have github item #13031 , where we will refactor all apis in one work item,  otherwise it will be confusing if we do it for some and leave others", "author": "simplynaveen20", "createdAt": "2020-07-24T15:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyNzg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyODU2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13489#discussion_r460128566", "bodyText": "same goes here we have different queryItems() APIs but all are calling one. You could just add this to the main one which is invoked by others queryItemsInternal", "author": "moderakh", "createdAt": "2020-07-24T15:33:30Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -408,6 +412,10 @@ public String getId() {\n      * error.\n      */\n     public <T> CosmosPagedFlux<T> queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType) {\n+        if (options == null) {\n+            options = new CosmosQueryRequestOptions();\n+        }", "originalCommit": "4548babab1dd9ab48aada8620a445373862751bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNTkwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13489#discussion_r460305901", "bodyText": "I thought that too. We are following this explicit check on api entry point in crud operations. So one thing is consistency, second we have github item #13031 , where we will refactor all apis in one work item, otherwise it will be confusing if we do it for some and leave others", "author": "simplynaveen20", "createdAt": "2020-07-24T21:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyODU2Ng=="}], "type": "inlineReview"}]}