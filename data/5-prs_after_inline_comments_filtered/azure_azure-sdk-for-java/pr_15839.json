{"pr_number": 15839, "pr_title": "Wrapped continuation token with Exception when recursive acl call is \u2026", "pr_createdAt": "2020-09-30T20:31:17Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15839", "timeline": [{"oid": "9f092f2868590b0889b64ed5213eaf58c1929de9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f092f2868590b0889b64ed5213eaf58c1929de9", "message": "Wrapped continuation token with Exception when recursive acl call is interrupted", "committedDate": "2020-09-30T20:30:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4MjUzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497782538", "bodyText": "TODO : undo all these formatting changes", "author": "gapra-msft", "createdAt": "2020-09-30T20:31:53Z", "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/DataLakePathAsyncClient.java", "diffHunk": "@@ -93,12 +96,12 @@\n     /**\n      * Package-private constructor for use by {@link DataLakePathClientBuilder}.\n      *\n-     * @param pipeline The pipeline used to send and receive service requests.\n-     * @param url The endpoint where to send service requests.\n-     * @param serviceVersion The version of the service to receive requests.\n-     * @param accountName The storage account name.\n-     * @param fileSystemName The file system name.\n-     * @param pathName The path name.\n+     * @param pipeline             The pipeline used to send and receive service requests.", "originalCommit": "9f092f2868590b0889b64ed5213eaf58c1929de9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a9c7fdb9aea3d936285e7be4a19434827253105", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0a9c7fdb9aea3d936285e7be4a19434827253105", "message": "Formattign", "committedDate": "2020-09-30T20:35:11Z", "type": "commit"}, {"oid": "c21e3896af077fc38c27b8c55b99fd4110520f6e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c21e3896af077fc38c27b8c55b99fd4110520f6e", "message": "Added docs", "committedDate": "2020-09-30T20:36:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497790595", "bodyText": "Should we make it checked exception? That would be compiler enforced reminder to add proper error handling for this api (during design review this was a hot topic - how to write resilient code for this api). Unless there's a guidance (I couldn't find any) or limitation (i.e. reactor doesn't like checked exceptions)", "author": "kasobol-msft", "createdAt": "2020-09-30T20:47:48Z", "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/models/DataLakeAclChangeFailedException.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.models;\n+\n+/**\n+ * An exception thrown when an operation is interrupted and can be continued later on.\n+ */\n+public class DataLakeAclChangeFailedException extends RuntimeException {", "originalCommit": "c21e3896af077fc38c27b8c55b99fd4110520f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzI5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497797295", "bodyText": "Like do you mean defining the method to say \" throws DataLakeAclChangeFailedException\"?", "author": "gapra-msft", "createdAt": "2020-09-30T21:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzY2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497797665", "bodyText": "It's a good idea but it also doesnt match with all the other APIs where we throw DataLakeStorageExceptoin for network errors", "author": "gapra-msft", "createdAt": "2020-09-30T21:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMTYwNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497801607", "bodyText": "throws and make it extend Exception. I'm not sure which one is more important - not standing out (which this API does anyway) or highlight that some error handling should be written to not miss ACL updates as this is SDK responsibility partially with current design. @alzimmermsft what do you think?", "author": "kasobol-msft", "createdAt": "2020-09-30T21:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMDA1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497830054", "bodyText": "Generally we have erred on using Runtime exceptions to prevent downstream code from requiring try/catch blocks everywhere. https://azure.github.io/azure-sdk/java_implementation.html#error-handling\nThere have been cases in the past where we do use checked exceptions, but those are generally to maintain exception types with a Java language interface.\n@srnagar @JonathanGiles for a bit more input.", "author": "alzimmermsft", "createdAt": "2020-09-30T22:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzNTY5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497835698", "bodyText": "Gotcha. So there is a guidance. Let's stick to it then.", "author": "kasobol-msft", "createdAt": "2020-09-30T22:27:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0NTE3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497845177", "bodyText": "Agree with @alzimmermsft. We should be using appropriate derivatives of RuntimeException for most client library APIs to not force users to write try/catch blocks. Also, it is preferable to use one of the Java runtime exception types or exceptions defined in Azure core instead of creating new custom exceptions unless it is necessary to define a new type.", "author": "srnagar", "createdAt": "2020-09-30T22:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0NjQ2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15839#discussion_r497846464", "bodyText": "I believe we were asked to create a new Exception type from guidance in .NET from Ted and Kryzsztof we are just following suit here as well. The reason we need a custom type is because we need to expose the continuation token to the user.", "author": "gapra-msft", "createdAt": "2020-09-30T22:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDU5NQ=="}], "type": "inlineReview"}, {"oid": "32b6873ab3629a98ac178c2658ea3552307db68b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/32b6873ab3629a98ac178c2658ea3552307db68b", "message": "Build fixes", "committedDate": "2020-09-30T22:03:45Z", "type": "commit"}, {"oid": "1fef52e533a4f44b30e4c83ce44b2195848ecec9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1fef52e533a4f44b30e4c83ce44b2195848ecec9", "message": "Last issue", "committedDate": "2020-09-30T22:49:49Z", "type": "commit"}, {"oid": "1708a4bf82160fc6fc34167dee1432107b1b09c3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1708a4bf82160fc6fc34167dee1432107b1b09c3", "message": "Made cont token final", "committedDate": "2020-09-30T23:20:58Z", "type": "commit"}]}