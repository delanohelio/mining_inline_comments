{"pr_number": 8301, "pr_title": "API review tool feedback part 1", "pr_createdAt": "2020-02-19T21:38:22Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8301", "timeline": [{"oid": "fd0c73702e963d7fcb18b0b67e067a914ff2e110", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd0c73702e963d7fcb18b0b67e067a914ff2e110", "message": "API review tool feeback part 1", "committedDate": "2020-02-19T21:27:39Z", "type": "commit"}, {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/58682cd3e5100c816dc0aec5c7627c5293730bc8", "message": "renaming models, method name, and properties", "committedDate": "2020-02-19T22:01:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTIwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r381659208", "bodyText": "You might want to raise the exception with the inner error here when the error is null.", "author": "samvaity", "createdAt": "2020-02-20T01:50:34Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -162,13 +161,23 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<DetectedLanguage>> detectLanguageWithResponse(String text, String countryHint) {\n-        try {\n-            return withContext(context ->\n-                detectLanguageAsyncClient.detectLanguageWithResponse(text, countryHint, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+    public Mono<DetectedLanguage> detectLanguage(String text, String countryHint) {\n+        return detectLanguageBatch(Collections.singletonList(text), countryHint, null)\n+            .map(documentCollection -> {\n+                final Iterator<DetectLanguageResult> iterator = documentCollection.iterator();\n+                // Collection will never empty\n+                if (!iterator.hasNext()) {\n+                    throw logger.logExceptionAsError(\n+                        new IllegalStateException(\"An empty collection returned which is an unexpected error.\"));\n+                }\n+\n+                final DetectLanguageResult languageResult = iterator.next();\n+                if (languageResult.isError()) {\n+                    throw logger.logExceptionAsError(Transforms.toTextAnalyticsException(languageResult.getError()));", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyMzA2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382123068", "bodyText": "documentCollection 's error is either the InnerError or TextAnalyticsError.\nbefore calling .map(), the caller already take care of the scenario transform,  such that     `\nMono<Response<DocumentResultCollection<DetectLanguageResult>>> detectLanguageBatchWithResponse() \n\ncalled toDocumentResultCollection() which called Transforms.toTextAnalyticsError()", "author": "mssfang", "createdAt": "2020-02-20T16:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTIwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY2MTc3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r381661776", "bodyText": "getDataSourceEntityId ?", "author": "samvaity", "createdAt": "2020-02-20T01:55:08Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/LinkedEntity.java", "diffHunk": "@@ -94,8 +94,8 @@ public String getLanguage() {\n      *\n      * @return the id value.\n      */\n-    public String getId() {\n-        return this.id;\n+    public String getDataSourceLinkId() {", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a2a6a3cc61775e17a9c58b1e3240df1fcff0713", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a2a6a3cc61775e17a9c58b1e3240df1fcff0713", "message": "rename getDataSourceLinkId to getDataSourceEntityId", "committedDate": "2020-02-20T16:51:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNTI0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382135246", "bodyText": "We do this because there is another type with this name, right? is it the generated one?\nwhat is the difference between both?", "author": "maririos", "createdAt": "2020-02-20T17:05:17Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -131,7 +107,9 @@ private AnalyzeSentimentResult convertToAnalyzeSentimentResult(final DocumentSen\n                 new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n                     documentSentiment.getSentiment())));\n         }\n-        final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n+\n+        final com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNjY4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382136680", "bodyText": "Yes. There is one generated one. Auto-generated one has setter methods.", "author": "mssfang", "createdAt": "2020-02-20T17:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNTI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDA4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382140085", "bodyText": "and why we can't use that one?", "author": "maririos", "createdAt": "2020-02-20T17:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNTI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0NTQyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382145426", "bodyText": "You don't want to explore the setter to users and it is bad to change auto-generated code. It could be removed when doing code-gene with some settings. Created an issue to regenerate code base: #8344", "author": "mssfang", "createdAt": "2020-02-20T17:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNTI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzOTc0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382139743", "bodyText": "Let's make sure that the docstring here specifies that these are confidence scores, not sentiment scores.", "author": "kristapratico", "createdAt": "2020-02-20T17:13:37Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -845,7 +834,7 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n \n     /**\n      * Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and\n-     * Neutral) for the document and each sentence within i\n+     * Neutral) for the document and each sentence within it.", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzOTg5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382139895", "bodyText": "same here", "author": "kristapratico", "createdAt": "2020-02-20T17:13:53Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -864,41 +853,50 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<DocumentSentiment> analyzeSentiment(String text) {\n         try {\n-            return analyzeSentimentWithResponse(text, defaultLanguage).flatMap(FluxUtil::toMono);\n+            return analyzeSentiment(text, defaultLanguage);\n         } catch (RuntimeException ex) {\n             return monoError(logger, ex);\n         }\n     }\n \n     /**\n      * Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and\n-     * Neutral) for the document and each sentence within i\n+     * Neutral) for the document and each sentence within it.", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDUyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382140526", "bodyText": "Is this the autogenerated one? why we use one here and in other places the one from com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel", "author": "maririos", "createdAt": "2020-02-20T17:15:05Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -145,11 +123,12 @@ private AnalyzeSentimentResult convertToAnalyzeSentimentResult(final DocumentSen\n                         new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n                             sentenceSentiment.getSentiment())));\n                 }\n-                SentimentConfidenceScorePerLabel confidenceScorePerSentence = sentenceSentiment.getSentenceScores();\n+                com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel\n+                    confidenceScorePerSentence = sentenceSentiment.getSentenceScores();\n \n                 return new SentenceSentiment(\n                     sentimentLabel,\n-                    new SentimentScorePerLabel(confidenceScorePerSentence.getNegative(),\n+                    new SentimentConfidenceScorePerLabel(confidenceScorePerSentence.getNegative(),", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTA0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382141048", "bodyText": "It might be me and my limited knowledge of Java. It just seems strange how we are using for some things one and not other", "author": "maririos", "createdAt": "2020-02-20T17:16:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1MDQzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382150436", "bodyText": "This one is not autogenerated one and you don't want to explore an autogenerated class to user. Another place that using autogenerated one is for internal mapping to non-autogenerated class.", "author": "mssfang", "createdAt": "2020-02-20T17:33:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2NzAxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382167018", "bodyText": "ugh so confusing. Thanks for clarifying it Shawn :)", "author": "maririos", "createdAt": "2020-02-20T18:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDUyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTE2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382141168", "bodyText": "Don't abbreviate, write out \"Personally Identifiable Information\" (PII)", "author": "kristapratico", "createdAt": "2020-02-20T17:16:17Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -368,8 +364,8 @@ public DetectedLanguage detectLanguage(String text) {\n      * See <a href=\"https://aka.ms/talangs\"></a> for the list of enabled languages.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Recognizes the PII entities with http response in a list of text with a provided language representation.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizePiiEntitiesBatchWithResponse#List-String-TextAnalyticsRequestOptions-Context}\n+     * <p>Recognizes the PII entities in a list of text with a provided language representation.</p>", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTg5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382141898", "bodyText": "confidence scores", "author": "kristapratico", "createdAt": "2020-02-20T17:17:30Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -750,17 +742,16 @@ public DocumentSentiment analyzeSentiment(String text) {\n      * English as default.\n      * @param options The {@link TextAnalyticsRequestOptions options} to configure the scoring model for documents\n      * and show statistics.\n-     * @param context Additional context that is passed through the Http pipeline during the service call.\n      *\n-     * @return A {@link Response} containing the {@link DocumentResultCollection batch} of\n-     * {@link AnalyzeSentimentResult text sentiments} with their numeric scores.\n+     * @return A {@link DocumentResultCollection batch} of {@link AnalyzeSentimentResult text sentiments} with their\n+     * numeric scores.", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MzQxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382143417", "bodyText": "NIT: will never be empty", "author": "maririos", "createdAt": "2020-02-20T17:20:12Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -162,13 +161,23 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<DetectedLanguage>> detectLanguageWithResponse(String text, String countryHint) {\n-        try {\n-            return withContext(context ->\n-                detectLanguageAsyncClient.detectLanguageWithResponse(text, countryHint, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+    public Mono<DetectedLanguage> detectLanguage(String text, String countryHint) {\n+        return detectLanguageBatch(Collections.singletonList(text), countryHint, null)\n+            .map(documentCollection -> {\n+                final Iterator<DetectLanguageResult> iterator = documentCollection.iterator();\n+                // Collection will never empty", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTEyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382155128", "bodyText": "the confidence score....\nAlso, Add to docstrings that the score represents the Softmax score.", "author": "maririos", "createdAt": "2020-02-20T17:41:50Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/DocumentSentiment.java", "diffHunk": "@@ -13,20 +13,20 @@\n @Immutable\n public final class DocumentSentiment {\n     private final SentimentLabel sentiment;\n-    private final SentimentScorePerLabel sentimentScores;\n+    private final SentimentConfidenceScorePerLabel confidenceScores;\n     private final List<SentenceSentiment> sentences;\n \n     /**\n      * Creates a {@code DocumentSentiment} model that describes the sentiment of the document.\n      *\n      * @param sentiment the sentiment label of the document\n-     * @param sentimentScores the score of sentiment label of the document\n+     * @param confidenceScores the score of sentiment label of the document", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2MDUwNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382160507", "bodyText": "One sentiment label could have more than one score. So it should be plural?\ne.g.,\nDoucentSentimentLabel is negative with 0.1 positive, 0.1 neutral, 0.8 negative", "author": "mssfang", "createdAt": "2020-02-20T17:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2NjUyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382166522", "bodyText": "One document (or sentence) has one sentiment label and has 3 confidence scores (positive, negative, neutral).\nWhat I am pointing out here, same as Krista, is if you could modify the docstring.\nYou could use something like https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/textanalytics/Azure.AI.TextAnalytics/src/DocumentSentiment.cs#L33", "author": "maririos", "createdAt": "2020-02-20T18:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTg2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382155868", "bodyText": "same here", "author": "maririos", "createdAt": "2020-02-20T17:43:14Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/SentenceSentiment.java", "diffHunk": "@@ -12,21 +12,21 @@\n public final class SentenceSentiment {\n     private final int length;\n     private final int offset;\n-    private final SentimentScorePerLabel sentimentScores;\n+    private final SentimentConfidenceScorePerLabel confidenceScores;\n     private final SentimentLabel sentiment;\n \n     /**\n      * Creates a {@code SentenceSentiment} model that describes the sentiment analysis of sentence.\n      *\n      * @param sentiment sentiment label of the sentence\n-     * @param sentimentScores the score of sentiment label of the sentence\n+     * @param confidenceScores the score of sentiment label of the sentence", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NjQxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382156415", "bodyText": "is there a reason why there are so many format changes in the PR?", "author": "maririos", "createdAt": "2020-02-20T17:44:21Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -74,90 +74,76 @@ public void detectLanguage() {\n         String inputText = \"Bonjour tout le monde\";\n         textAnalyticsAsyncClient.detectLanguage(inputText).subscribe(detectedLanguage ->\n             System.out.printf(\"Detected language name: %s, ISO 6391 Name: %s, score: %.2f.%n\",\n-                detectedLanguage.getName(),\n-                detectedLanguage.getIso6391Name(),\n-                detectedLanguage.getScore()));\n+                detectedLanguage.getName(), detectedLanguage.getIso6391Name(), detectedLanguage.getScore()));", "originalCommit": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1ODIyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382158221", "bodyText": "short line. Java use a tool to embeded code to readme, so maintaining a short line number is better for user experience.", "author": "mssfang", "createdAt": "2020-02-20T17:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NjQxNQ=="}], "type": "inlineReview"}, {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "message": "wording", "committedDate": "2020-02-20T17:59:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTUyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382179522", "bodyText": "Should we add something to the docstring about how when using this method, we are using the DefaultCountryHint value?", "author": "maririos", "createdAt": "2020-02-20T18:29:13Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -56,74 +54,76 @@\n     }\n \n     /**\n-     * Returns the detected language and a numeric score between zero and one. Scores close to one indicate 100%\n+     * Returns the detected language and a confidence score between zero and one. Scores close to one indicate 100%\n      * certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language of single input text</p>\n+     * <p>Detects the language of single input text.</p>\n      * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n-     * @return the {@link DetectedLanguage detected language} of the text.\n+     *\n+     * @return The {@link DetectedLanguage detected language} of the text.\n+     *\n      * @throws NullPointerException if {@code text} is {@code null}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public DetectedLanguage detectLanguage(String text) {", "originalCommit": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MDM2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382180367", "bodyText": "Defaults to \"US\"\n\nBecause that is the default from the service? should we instead default it to the default of the client?", "author": "maririos", "createdAt": "2020-02-20T18:30:52Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -56,74 +54,76 @@\n     }\n \n     /**\n-     * Returns the detected language and a numeric score between zero and one. Scores close to one indicate 100%\n+     * Returns the detected language and a confidence score between zero and one. Scores close to one indicate 100%\n      * certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language of single input text</p>\n+     * <p>Detects the language of single input text.</p>\n      * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n-     * @return the {@link DetectedLanguage detected language} of the text.\n+     *\n+     * @return The {@link DetectedLanguage detected language} of the text.\n+     *\n      * @throws NullPointerException if {@code text} is {@code null}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public DetectedLanguage detectLanguage(String text) {\n-        return detectLanguageWithResponse(text, client.getDefaultCountryHint(), Context.NONE).getValue();\n+        return detectLanguage(text, client.getDefaultCountryHint());\n     }\n \n     /**\n-     * Returns a {@link Response} containing the detected language and a numeric score between zero and one.\n+     * Returns the detected language and a confidence score between zero and one.\n      * Scores close to one indicate 100% certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language with http response in a text with a provided country hint.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguageWithResponse#String-String-Context}\n+     * <p>Detects the language of single input text with a provided country hint.</p>\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String-String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n      * @param countryHint Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not", "originalCommit": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NTU5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382185595", "bodyText": "As an example, in .NET we use the default of the client and then give the option to the user to override the behaviour and use None as default.\nPython does similar", "author": "maririos", "createdAt": "2020-02-20T18:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MDM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDA4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382240083", "bodyText": "Java doesn't take default parameter value, I created an issue to address this feedback. #8353", "author": "mssfang", "createdAt": "2020-02-20T20:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MDM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MzMwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382183304", "bodyText": "same here", "author": "maririos", "createdAt": "2020-02-20T18:36:37Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -198,79 +198,75 @@ public DetectedLanguage detectLanguage(String text) {\n      * For a list of enabled languages, check: <a href=\"https://aka.ms/talangs\"></a>\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Recognizes the entities with http response in a text with a provided language representation.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizeEntities#String-String-Context}\n+     * <p>Recognizes the entities in a text with a provided language representation.</p>\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizeEntities#String-String}\n      *\n      * @param text the text to recognize entities for.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n      * @param language The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as default.", "originalCommit": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDIyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382240223", "bodyText": "#8353", "author": "mssfang", "createdAt": "2020-02-20T20:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MzMwNA=="}], "type": "inlineReview"}, {"oid": "8b00655be7286e27d11d72ce11443aa2f89be470", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b00655be7286e27d11d72ce11443aa2f89be470", "message": "another word", "committedDate": "2020-02-20T20:04:28Z", "type": "commit"}, {"oid": "c0c4ce9fadc55e81dd5693db6399bd1979b29dce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0c4ce9fadc55e81dd5693db6399bd1979b29dce", "message": "checkstyle", "committedDate": "2020-02-20T20:32:08Z", "type": "commit"}]}