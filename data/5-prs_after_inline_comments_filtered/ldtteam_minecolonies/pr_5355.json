{"pr_number": 5355, "pr_title": "Tavern2", "pr_createdAt": "2020-07-07T14:37:09Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5355", "timeline": [{"oid": "a71d0551cd3243a1064008d8f7f6a6103a5572a4", "url": "https://github.com/ldtteam/minecolonies/commit/a71d0551cd3243a1064008d8f7f6a6103a5572a4", "message": "Tavern3", "committedDate": "2020-05-25T19:09:12Z", "type": "commit"}, {"oid": "20a5c19db597e8033ffd648d5e5673228bd88d67", "url": "https://github.com/ldtteam/minecolonies/commit/20a5c19db597e8033ffd648d5e5673228bd88d67", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2\n\n# Conflicts:\n#\tsrc/main/resources/assets/minecolonies/lang/en_us.json", "committedDate": "2020-06-01T13:25:28Z", "type": "commit"}, {"oid": "d10f0ec55ad26ca70e07e8617d939ca9d5135785", "url": "https://github.com/ldtteam/minecolonies/commit/d10f0ec55ad26ca70e07e8617d939ca9d5135785", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2", "committedDate": "2020-06-01T21:02:03Z", "type": "commit"}, {"oid": "b6c78711c031f8d426f8d098caee515355c37448", "url": "https://github.com/ldtteam/minecolonies/commit/b6c78711c031f8d426f8d098caee515355c37448", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2", "committedDate": "2020-06-05T18:47:57Z", "type": "commit"}, {"oid": "7953b7fb20e9f470ed7ecbff7653ed6da90d16cd", "url": "https://github.com/ldtteam/minecolonies/commit/7953b7fb20e9f470ed7ecbff7653ed6da90d16cd", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2\n\n# Conflicts:\n#\tsrc/main/java/com/minecolonies/apiimp/initializer/ModColonyEventTypeInitializer.java\n#\tsrc/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java", "committedDate": "2020-06-27T17:43:20Z", "type": "commit"}, {"oid": "380205254fbb388b665479b312f10bcf4b016202", "url": "https://github.com/ldtteam/minecolonies/commit/380205254fbb388b665479b312f10bcf4b016202", "message": "Tavern2:\nRecruitable citizens spawn periodically, with varying stats and recruitment costs", "committedDate": "2020-07-07T12:57:53Z", "type": "commit"}, {"oid": "4763fcf0e3734bf51a8bc474b2f86ceaeac5cab9", "url": "https://github.com/ldtteam/minecolonies/commit/4763fcf0e3734bf51a8bc474b2f86ceaeac5cab9", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2\n\n# Conflicts:\n#\tsrc/api/java/com/minecolonies/api/colony/ICitizenData.java\n#\tsrc/api/java/com/minecolonies/api/colony/interactionhandling/IInteractionResponseHandler.java\n#\tsrc/api/java/com/minecolonies/api/colony/interactionhandling/ModInteractionResponseHandlers.java\n#\tsrc/api/java/com/minecolonies/api/colony/managers/interfaces/ICitizenManager.java\n#\tsrc/main/java/com/minecolonies/apiimp/initializer/EntityInitializer.java\n#\tsrc/main/java/com/minecolonies/coremod/client/gui/WindowInteraction.java\n#\tsrc/main/java/com/minecolonies/coremod/client/gui/WindowTownHallHireCitizen.java\n#\tsrc/main/java/com/minecolonies/coremod/client/render/RenderBipedCitizen.java\n#\tsrc/main/java/com/minecolonies/coremod/colony/CitizenDataView.java\n#\tsrc/main/java/com/minecolonies/coremod/colony/Colony.java\n#\tsrc/main/java/com/minecolonies/coremod/colony/ColonyView.java\n#\tsrc/main/java/com/minecolonies/coremod/colony/interactionhandling/PosBasedInteractionResponseHandler.java\n#\tsrc/main/java/com/minecolonies/coremod/colony/interactionhandling/ServerCitizenInteractionResponseHandler.java\n#\tsrc/main/java/com/minecolonies/coremod/entity/ai/minimal/EntityAICitizenAvoidEntity.java\n#\tsrc/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenChatHandler.java\n#\tsrc/main/java/com/minecolonies/coremod/event/ClientEventHandler.java\n#\tsrc/main/java/com/minecolonies/coremod/network/messages/server/colony/citizen/BuyCitizenMessage.java\n#\tsrc/main/resources/assets/minecolonies/gui/citizen/windowinteraction.xml\n#\tsrc/main/resources/assets/minecolonies/lang/en_us.json", "committedDate": "2020-07-07T13:10:01Z", "type": "commit"}, {"oid": "f02a66cb409cebe090347b9cd4d1ba7eabb2bda2", "url": "https://github.com/ldtteam/minecolonies/commit/f02a66cb409cebe090347b9cd4d1ba7eabb2bda2", "message": "fix compile", "committedDate": "2020-07-07T14:36:12Z", "type": "commit"}, {"oid": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "url": "https://github.com/ldtteam/minecolonies/commit/ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "message": "Merge branch 'version/1.15' into tavern2", "committedDate": "2020-07-07T16:55:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTM1NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451009354", "bodyText": "jdoc in this file", "author": "Raycoms", "createdAt": "2020-07-07T16:56:10Z", "path": "src/api/java/com/minecolonies/api/colony/IColony.java", "diffHunk": "@@ -115,6 +115,8 @@ default String getTeamName()\n         return TEAM_COLONY_NAME + \"_\" + getDimension() + \"_\" + getID();\n     }", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTYyMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451009623", "bodyText": "returns what?", "author": "Raycoms", "createdAt": "2020-07-07T16:56:37Z", "path": "src/api/java/com/minecolonies/api/colony/IColonyView.java", "diffHunk": "@@ -442,4 +435,12 @@\n     List<CompactColonyReference> getFeuds();\n \n     boolean areSpiesEnabled();\n+\n+    /**\n+     * Gets the data view for a visitor\n+     *\n+     * @param citizenId\n+     * @return", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTcxNw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451009717", "bodyText": "jdc", "author": "Raycoms", "createdAt": "2020-07-07T16:56:44Z", "path": "src/api/java/com/minecolonies/api/colony/IColonyView.java", "diffHunk": "@@ -251,6 +248,9 @@\n     @Nullable\n     IMessage handleColonyViewCitizensMessage(int id, PacketBuffer buf);\n \n+    @Nullable", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMDAzNA==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451010034", "bodyText": "those semicolons in the middle of nwhere", "author": "Raycoms", "createdAt": "2020-07-07T16:57:15Z", "path": "src/api/java/com/minecolonies/api/colony/interactionhandling/IInteractionResponseHandler.java", "diffHunk": "@@ -43,73 +43,83 @@\n \n     /**\n      * Check if this interaction is a primary interaction or secondary interaction.\n-     *\n      * @return true if primary.\n      */\n     boolean isPrimary();\n \n     /**\n      * Get the priority of this interaction response handler.\n-     *\n      * @return the chat priority.\n      */\n     IChatPriority getPriority();\n \n     /**\n      * Check if this response handler is still visible for the player.\n-     *\n      * @param world the world this citizen is in.\n      * @return true if so.\n      */\n     boolean isVisible(final World world);\n \n     /**\n      * Check if this response handler is still valid.\n-     *\n      * @param colony the colony the citizen is in.\n      * @return true if still valid, else false.\n      */\n     boolean isValid(final ICitizenData colony);\n \n     /**\n      * Server side action triggered on a possible response.\n-     *\n      * @param response the clicked string response of the player.\n-     * @param world    the world it was triggered in.\n-     * @param data     the citizen related to it.\n+     * @param player the world it was triggered in.\n+     * @param data the citizen related to it.\n      */\n-    void onServerResponseTriggered(final ITextComponent response, final World world, final ICitizenData data);\n+    void onServerResponseTriggered(final ITextComponent response, final PlayerEntity player, final ICitizenData data);\n \n     /**\n      * Client side action triggered on a possible response.\n-     *\n      * @param response the clicked string response of the player.\n-     * @param world    the client side world.\n-     * @param data     the citizen data assigned to it.\n-     * @param window   the window it was triggered in.\n+     * @param player the client side world.\n+     * @param data the citizen data assigned to it.\n+     * @param window the window it was triggered in.\n      * @return if wishing to continue interacting.\n      */\n     @OnlyIn(Dist.CLIENT)\n-    boolean onClientResponseTriggered(final ITextComponent response, final World world, final ICitizenDataView data, final Window window);\n+    boolean onClientResponseTriggered(final ITextComponent response, final PlayerEntity player, final ICitizenDataView data, final Window window);\n \n     /**\n      * Remove a certain parent.\n-     *\n      * @param inquiry the parent inquiry.\n      */\n     void removeParent(ITextComponent inquiry);\n \n     /**\n      * Gen all child interactions related to this.\n-     *\n      * @return all child interactions.\n      */\n     List<IInteractionResponseHandler> genChildInteractions();\n \n     /**\n      * Type id used to deserialize.\n-     *\n      * @return the string type.\n      */\n     String getType();\n+\n+    /**\n+     * Callback for showing the interaction, to set interaction specific stuff\n+     */\n+    default void onWindowOpened(final Window window, final ICitizenDataView dataView) {}\n+\n+    ;", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMDM4MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451010380", "bodyText": "jdc", "author": "Raycoms", "createdAt": "2020-07-07T16:57:48Z", "path": "src/api/java/com/minecolonies/api/compatibility/ICompatibilityManager.java", "diffHunk": "@@ -128,6 +129,8 @@\n      */\n     List<Disease> getDiseases();\n \n+    List<Tuple<Item, Integer>> getRecruitmentCostsWeights();", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMTE5Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451011192", "bodyText": "I'd make that methds.", "author": "Raycoms", "createdAt": "2020-07-07T16:59:07Z", "path": "src/api/java/com/minecolonies/api/util/BlockPosUtil.java", "diffHunk": "@@ -636,4 +640,84 @@ public static Rotation getRotationFromRotations(final int rotations)\n                 return Rotation.NONE;\n         }\n     }\n+\n+    /**\n+     * Returns the first air position near the given start. Advances vertically first then horizontally\n+     *\n+     * @param start     start position\n+     * @param vRange    vertical search range\n+     * @param hRange    horizontal search range\n+     * @param predicate check predicate for the right block\n+     * @return position or null\n+     */\n+    public static BlockPos findAround(final IBlockReader world, final BlockPos start, final int vRange, final int hRange, final Predicate<BlockState> predicate)\n+    {\n+        if (vRange < 1 && hRange < 1)\n+        {\n+            return null;\n+        }\n+\n+        BlockPos temp;\n+        int y = 0;\n+        int y_offset = 1;\n+\n+        for (int i = 0; i < hRange + 2; i++)\n+        {\n+            for (int steps = 1; steps <= vRange; steps++)\n+            {\n+                // Start topleft of middle point\n+                temp = start.add(-steps, y, -steps);\n+\n+                // X ->\n+                for (int x = 0; x <= steps; x++)", "originalCommit": "ad0af17b133e5f3e4dd3ea029a24c8685ffb2a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNDAzOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r451034039", "bodyText": "nah that is a hassle since I would need additional tuple return types just for a simple loop", "author": "someaddons", "createdAt": "2020-07-07T17:38:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMTE5Mg=="}], "type": "inlineReview"}, {"oid": "02fe8f37a80df99f09d5abc8cf839c7cc092b693", "url": "https://github.com/ldtteam/minecolonies/commit/02fe8f37a80df99f09d5abc8cf839c7cc092b693", "message": "cleanup and javadoc and formatting", "committedDate": "2020-07-07T18:42:47Z", "type": "commit"}, {"oid": "80877767e0b39219150f707edf6c6445d4ba3c82", "url": "https://github.com/ldtteam/minecolonies/commit/80877767e0b39219150f707edf6c6445d4ba3c82", "message": "Merge remote-tracking branch 'origin/tavern2' into tavern2", "committedDate": "2020-07-07T18:53:03Z", "type": "commit"}, {"oid": "13c810afa76e7557d6b2d67d863b150d986c12f6", "url": "https://github.com/ldtteam/minecolonies/commit/13c810afa76e7557d6b2d67d863b150d986c12f6", "message": "Fix some bugs, add additional stories", "committedDate": "2020-07-08T12:00:32Z", "type": "commit"}, {"oid": "529a50854f7af012d220c38adc0163862ce71033", "url": "https://github.com/ldtteam/minecolonies/commit/529a50854f7af012d220c38adc0163862ce71033", "message": "fix texture bug", "committedDate": "2020-07-08T14:25:40Z", "type": "commit"}, {"oid": "4b0f2658d8e565107a4c5bc3e6b981e9ccc8386d", "url": "https://github.com/ldtteam/minecolonies/commit/4b0f2658d8e565107a4c5bc3e6b981e9ccc8386d", "message": "fix spawn time", "committedDate": "2020-07-08T16:57:07Z", "type": "commit"}, {"oid": "df88c41555e9bf9df247351ffaf76e60ff80a54c", "url": "https://github.com/ldtteam/minecolonies/commit/df88c41555e9bf9df247351ffaf76e60ff80a54c", "message": "increase haybale price", "committedDate": "2020-07-08T17:01:07Z", "type": "commit"}, {"oid": "75c192ba2a69b1a85d0ef5403fda82baafd60894", "url": "https://github.com/ldtteam/minecolonies/commit/75c192ba2a69b1a85d0ef5403fda82baafd60894", "message": "reduce wander delay", "committedDate": "2020-07-08T17:06:03Z", "type": "commit"}, {"oid": "04142a038c1808b9f3390c22ef397250f941f384", "url": "https://github.com/ldtteam/minecolonies/commit/04142a038c1808b9f3390c22ef397250f941f384", "message": "fix respawns", "committedDate": "2020-07-08T18:06:43Z", "type": "commit"}, {"oid": "f2de26c2270f32d14d1156e5b3fe556816184c11", "url": "https://github.com/ldtteam/minecolonies/commit/f2de26c2270f32d14d1156e5b3fe556816184c11", "message": "fix siding issue", "committedDate": "2020-07-08T21:59:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NDgxNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r452964815", "bodyText": "constants", "author": "Raycoms", "createdAt": "2020-07-10T17:02:43Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTavern.java", "diffHunk": "@@ -104,26 +154,273 @@ public void onColonyTick(@NotNull final IColony colony)\n         {\n             musicCooldown -= MAX_TICKRATE;\n         }\n+\n+        final Iterator<Integer> it = externalCitizens.iterator();\n+        while (it.hasNext())\n+        {\n+            final Integer id = it.next();\n+            if (colony.getVisitorManager().getVisitor(id) == null)\n+            {\n+                it.remove();\n+            }\n+        }\n+\n+        if (noVisitorTime > 0)\n+        {\n+            noVisitorTime -= 500;\n+        }\n+\n+        if (getBuildingLevel() > 0 && externalCitizens.size() < 3 * getBuildingLevel() && noVisitorTime <= 0)\n+        {\n+            spawnVisitor();\n+            noVisitorTime = colony.getWorld().getRandom().nextInt(3000) + 6000;\n+        }\n     }\n \n-    /*\n     @Override\n-    public void onColonyTick(@NotNull final IColony colony)\n+    public void onUpgradeComplete(final int newlevel)\n     {\n-       TODO: Next PR, Hiring\n-       for(final IColonyEvent event:colony.getEventManager().getEvents().values())\n+        super.onUpgradeComplete(newlevel);\n+        initTags = false;\n+    }\n+\n+    /**\n+     * Spawns a recruitable visitor citizen.\n+     */\n+    private void spawnVisitor()\n+    {\n+        IVisitorData newCitizen = (IVisitorData) colony.getVisitorManager().createAndRegisterNewCitizenData();\n+        externalCitizens.add(newCitizen.getId());\n+\n+        newCitizen.setBedPos(getPosition());\n+        newCitizen.setHomeBuilding(this);\n+\n+        int recruitLevel = colony.getWorld().rand.nextInt(10 * getBuildingLevel()) + 15;\n+        List<com.minecolonies.api.util.Tuple<Item, Integer>> recruitCosts = IColonyManager.getInstance().getCompatibilityManager().getRecruitmentCostsWeights();\n+\n+        if (newCitizen.getName().contains(\"Ray\"))\n         {\n-            if (event instanceof ColonyRecruitableCitizenEvent)\n+            newCitizen.setRecruitCosts(new ItemStack(Items.BAKED_POTATO, 64));\n+        }\n+\n+        newCitizen.getCitizenSkillHandler().init(recruitLevel);\n+\n+        BlockPos spawnPos = BlockPosUtil.findAround(colony.getWorld(), getPosition(), 1, 1, bs -> bs.getMaterial() == Material.AIR);\n+        if (spawnPos == null)\n+        {\n+            spawnPos = getPosition();\n+        }\n+\n+        colony.getVisitorManager().spawnOrCreateCitizen(newCitizen, colony.getWorld(), spawnPos, true);\n+\n+        final AbstractEntityCitizen citizenEntity = newCitizen.getCitizenEntity().get();\n+\n+        Tuple<Item, Integer> cost = recruitCosts.get(colony.getWorld().rand.nextInt(recruitCosts.size()));\n+        if (recruitLevel > 20)", "originalCommit": "f2de26c2270f32d14d1156e5b3fe556816184c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMzAzNw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r453213037", "bodyText": "This is a bit weird in my opinion.\nIf AbstractEntityCitizen is now used for none citizens it should be renamed, together with these kinds of methods.\nPlease refactor.", "author": "OrionDevelopment", "createdAt": "2020-07-11T16:51:22Z", "path": "src/api/java/com/minecolonies/api/colony/managers/interfaces/IEntityManager.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package com.minecolonies.api.colony.managers.interfaces;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Manager interface for managing entities for a colony\n+ */\n+public interface IEntityManager\n+{\n+    /**\n+     * Register a citizen entity with the colony\n+     *\n+     * @param citizen citizen to register\n+     */\n+    void registerCitizen(AbstractEntityCitizen citizen);", "originalCommit": "f2de26c2270f32d14d1156e5b3fe556816184c11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NDg5Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r453284897", "bodyText": "AbstractColonyEntity potentially?", "author": "Raycoms", "createdAt": "2020-07-12T08:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMzAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5NjIxMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r453296213", "bodyText": "ye good point", "author": "someaddons", "createdAt": "2020-07-12T10:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMzAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcxMTg1NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455711855", "bodyText": "fixed", "author": "someaddons", "createdAt": "2020-07-16T11:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMzAzNw=="}], "type": "inlineReview"}, {"oid": "3ca99ed89ae5a5d42d6cb74121cefeef8b0dd7fd", "url": "https://github.com/ldtteam/minecolonies/commit/3ca99ed89ae5a5d42d6cb74121cefeef8b0dd7fd", "message": "Add constants, refactor citizen stuff, introducing civilians", "committedDate": "2020-07-16T11:16:00Z", "type": "commit"}, {"oid": "e690938f8c3ac15d5f73febac9752611248077b2", "url": "https://github.com/ldtteam/minecolonies/commit/e690938f8c3ac15d5f73febac9752611248077b2", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into tavern2\n\n# Conflicts:\n#\tsrc/main/resources/assets/minecolonies/lang/en_us.json", "committedDate": "2020-07-16T11:17:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MjEyMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455792123", "bodyText": "JDoc", "author": "OrionDevelopment", "createdAt": "2020-07-16T13:38:22Z", "path": "src/api/java/com/minecolonies/api/colony/ICivilianData.java", "diffHunk": "@@ -0,0 +1,188 @@\n+package com.minecolonies.api.colony;\n+\n+import com.minecolonies.api.colony.interactionhandling.IInteractionResponseHandler;\n+import com.minecolonies.api.colony.requestsystem.requestable.IRequestable;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.entity.citizen.AbstractCivilianEntity;\n+import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraftforge.common.util.INBTSerializable;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Optional;\n+\n+public interface ICivilianData extends ICitizen, INBTSerializable<CompoundNBT>", "originalCommit": "e690938f8c3ac15d5f73febac9752611248077b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5Mjk3MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455792971", "bodyText": "You probably also want to take in the type T instead of ICivilianData as the first parameter?", "author": "OrionDevelopment", "createdAt": "2020-07-16T13:39:38Z", "path": "src/api/java/com/minecolonies/api/colony/managers/interfaces/IEntityManager.java", "diffHunk": "@@ -56,50 +56,50 @@ void sendPackets(\n       @NotNull Set<ServerPlayerEntity> newSubscribers);\n \n     /**\n-     * Returns a map of citizens in the colony. The map has ID as key, and citizen data as value.\n+     * Returns a map of civilian in the colony. The map has ID as key, and civilian data as value.\n      *\n-     * @return Map of citizens in the colony, with as key the citizen ID, and as value the citizen data.\n+     * @return Map of civilian in the colony, with as key the civilian ID, and as value the civilian data.\n      */\n     @NotNull\n-    Map<Integer, ICitizenData> getCitizenMap();\n+    Map<Integer, ICivilianData> getCivilianDataMap();\n \n     /**\n-     * Get citizen by ID.\n+     * Get civilian by ID.\n      *\n-     * @param citizenId ID of the Citizen.\n-     * @return ICitizenData associated with the ID, or null if it was not found.\n+     * @param civilianId ID of the civilian.\n+     * @return ICivilianData associated with the ID, or null if it was not found.\n      */\n-    ICitizenData getCitizen(int citizenId);\n+    <T extends ICivilianData> T getCivilian(int civilianId);\n \n     /**\n-     * Spawns a citizen with the specific citizen data.\n+     * Spawns a civilian with the specific civilian data.\n      *\n      * @param data     Data to use when spawn, null when new generation.\n      * @param world    THe world.\n-     * @param force    True to skip max citizen test, false when not.\n      * @param spawnPos the pos to spawn it at.\n-     * @return the new citizen.\n+     * @param force    True to skip max civilian test, false when not.\n+     * @return the new civilian.\n      */\n-    ICitizenData spawnOrCreateCitizen(ICitizenData data, World world, BlockPos spawnPos, boolean force);\n+    <T extends ICivilianData> T spawnOrCreateCivilian(ICivilianData data, World world, BlockPos spawnPos, boolean force);", "originalCommit": "e690938f8c3ac15d5f73febac9752611248077b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3Nzc0OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455877749", "bodyText": "ye", "author": "someaddons", "createdAt": "2020-07-16T15:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5Mjk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MzgyOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455793829", "bodyText": "This is a bit weird.\nCould you check if something with generics works here?", "author": "OrionDevelopment", "createdAt": "2020-07-16T13:40:47Z", "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCitizenInventory.java", "diffHunk": "@@ -78,11 +78,11 @@ public ContainerCitizenInventory(final int windowId, final PlayerInventory inv,\n             final ICitizenData data;\n             if (citizenId > 0)\n             {\n-                data = colony.getCitizenManager().getCitizen(citizenId);\n+                data = (ICitizenData) colony.getCitizenManager().getCivilian(citizenId);", "originalCommit": "e690938f8c3ac15d5f73febac9752611248077b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NzIzNg==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455797236", "bodyText": "true thats weird, hm I think I actually did that generic let me check, would've to cast everywhere else", "author": "someaddons", "createdAt": "2020-07-16T13:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MzgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgxNDM1Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5355#discussion_r455814353", "bodyText": "ye there is already generic support for it, just forgot to change the return type, good catch^^", "author": "someaddons", "createdAt": "2020-07-16T14:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MzgyOQ=="}], "type": "inlineReview"}, {"oid": "8bbfeb4d5db356555e8d7112a572be1feb3da8f3", "url": "https://github.com/ldtteam/minecolonies/commit/8bbfeb4d5db356555e8d7112a572be1feb3da8f3", "message": "Small fixes", "committedDate": "2020-07-16T15:33:51Z", "type": "commit"}, {"oid": "ea0d83f701fa30c6425bae3c8ce9d58869968a69", "url": "https://github.com/ldtteam/minecolonies/commit/ea0d83f701fa30c6425bae3c8ce9d58869968a69", "message": "Merge branch 'version/1.15' into tavern2", "committedDate": "2020-07-17T21:52:47Z", "type": "commit"}]}