{"pr_number": 1619, "pr_title": "Support inferSelection when extract to field", "pr_createdAt": "2020-11-27T09:13:31Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMDE1Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r531520153", "bodyText": "isExtractFieldInferSelectionSupported", "author": "fbricon", "createdAt": "2020-11-27T10:37:58Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "diffHunk": "@@ -219,6 +219,14 @@ public boolean isExtractMethodInferSelectionSupport() {\n \t\treturn false;\n \t}\n \n+\tpublic boolean isExtractFieldInferSelectionSupport() {", "originalCommit": "702e437c919e578acd2332bd9c9e9783c9ee359a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MzQxMw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r532393413", "bodyText": "Fixed. Will change isExtractMethodInferSelectionSupport to isExtractMethodInferSelectionSupported as well.", "author": "CsCherrYY", "createdAt": "2020-11-30T07:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMDE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExMzM5MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533113390", "bodyText": "extractMethodInfos -> selectionCandidates", "author": "testforstephen", "createdAt": "2020-12-01T07:06:37Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/InferSelectionHandler.java", "diffHunk": "@@ -54,6 +55,19 @@\n \t\t\t\t\t}\n \t\t\t\t\tparent = parent.getParent();\n \t\t\t\t}\n+\t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n+\t\t\t\twhile (parent != null && parent instanceof Expression) {\n+\t\t\t\t\tif (parent instanceof ParenthesizedExpression) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tExtractFieldRefactoring refactoring = new ExtractFieldRefactoring(context.getASTRoot(), parent.getStartPosition(), parent.getLength());\n+\t\t\t\t\tif (refactoring.checkInitialConditions(new NullProgressMonitor()).isOK()) {\n+\t\t\t\t\t\tList<String> scopes = RefactorProposalUtility.getInitializeScopes(refactoring);\n+\t\t\t\t\t\textractMethodInfos.add(new SelectionInfo(parent.toString(), parent.getStartPosition(), parent.getLength(), scopes));", "originalCommit": "1bfb575ea3006d91b5fd791541926596fe9481b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3MDk5MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533170990", "bodyText": "Fixed.", "author": "CsCherrYY", "createdAt": "2020-12-01T08:53:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExMzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjA0OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533116049", "bodyText": "(params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1)", "author": "testforstephen", "createdAt": "2020-12-01T07:13:37Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -84,7 +84,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getConvertVariableToFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n \t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n \t\t\t\tString initializeIn = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), String.class) : null;\n-\t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getExtractFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n+\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1) ? JSONUtility.toModel(params.commandArguments.get(1), SelectionInfo.class) : null;", "originalCommit": "1bfb575ea3006d91b5fd791541926596fe9481b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3MDI1MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533170250", "bodyText": "Fixed.", "author": "CsCherrYY", "createdAt": "2020-12-01T08:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjA0OQ=="}], "type": "inlineReview"}, {"oid": "1b72db8298c720b179401783e97347f92954ef95", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/1b72db8298c720b179401783e97347f92954ef95", "message": "Support inferSelection when extract to field\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-12-02T03:00:38Z", "type": "commit"}, {"oid": "1b72db8298c720b179401783e97347f92954ef95", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/1b72db8298c720b179401783e97347f92954ef95", "message": "Support inferSelection when extract to field\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-12-02T03:00:38Z", "type": "forcePushed"}, {"oid": "d4d362dbdb015e3fd24c99b95208ef3a5a61a2cb", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d4d362dbdb015e3fd24c99b95208ef3a5a61a2cb", "message": "Scopes must be not empty\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-12-02T04:08:12Z", "type": "commit"}]}