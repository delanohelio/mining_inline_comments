{"pr_number": 4020, "pr_title": "Better computation of maven dependencies", "pr_createdAt": "2020-05-06T16:45:28Z", "pr_url": "https://github.com/bndtools/bnd/pull/4020", "timeline": [{"oid": "16eb51e929e36cac2fd0b91b3af4ec742fda0904", "url": "https://github.com/bndtools/bnd/commit/16eb51e929e36cac2fd0b91b3af4ec742fda0904", "message": "lib: Add split methods which take an existing Pattern\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T15:41:55Z", "type": "commit"}, {"oid": "1e549da6b196ea7e49e3a0f79bf8eeb1635b30e6", "url": "https://github.com/bndtools/bnd/commit/1e549da6b196ea7e49e3a0f79bf8eeb1635b30e6", "message": "maven: Avoid recompiling \":\" regex pattern\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T15:52:18Z", "type": "commit"}, {"oid": "f24fd301b964fada4c24f52cff17addd2f6e6e9f", "url": "https://github.com/bndtools/bnd/commit/f24fd301b964fada4c24f52cff17addd2f6e6e9f", "message": "maven: Add attributes methods to get maven data as attributes in a map\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T15:53:46Z", "type": "commit"}, {"oid": "973e98b97d2b77a1da9402d3d5d0ef2f34a5a268", "url": "https://github.com/bndtools/bnd/commit/973e98b97d2b77a1da9402d3d5d0ef2f34a5a268", "message": "download: Add support for DownloadListeners to receive attributes\n\nWhen a download is successful, the DownloadListener can be provided\nattributes about the download as well as the local File object.\n\nDownloadBlocker is updated to collect any attributes which can be\nretrieved by the party using the DownloadBlocker.\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T16:02:22Z", "type": "commit"}, {"oid": "55cdffc6574e330c3c3e4c7b833cfec1255bb28c", "url": "https://github.com/bndtools/bnd/commit/55cdffc6574e330c3c3e4c7b833cfec1255bb28c", "message": "maven: MavenBndRepository and BndPomRepository provide maven attributes\n\nWhen a DownloadListener is supplied to receive a File for the requested\narchive, we now also provide attributes containing the maven archive\ninformation.\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T16:14:03Z", "type": "commit"}, {"oid": "0a2f331dd57ed6e434bdd04277f42f492e3bfd32", "url": "https://github.com/bndtools/bnd/commit/0a2f331dd57ed6e434bdd04277f42f492e3bfd32", "message": "pom dependencies: Prefer maven metadata from repos\n\nWe collect any attributes provided by the repo into the container\nattributes taking care not to override any attribute values already in\nthe container. Then when computing the -maven-dependencies instruction,\nwe can look for, and prefer, the maven attributes supplied by the repo.\n\nIf the jar does not come from a repo supplying maven attributes, we\nfall back to processing pom.properties as before. This will be the case\nfor projects in the workspace since the workspace repo does not supply\nmaven attributes.\n\nFixes https://github.com/bndtools/bnd/issues/4015\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>", "committedDate": "2020-05-06T16:27:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NzIxOQ==", "url": "https://github.com/bndtools/bnd/pull/4020#discussion_r420957219", "bodyText": "This solution is a lot better!\nHowever, could we somehow delegate this very mavenish code to not be in the build package? Maybe a plugin? At least make all this maven support go to one place?\nNice work!", "author": "pkriens", "createdAt": "2020-05-06T17:16:03Z", "path": "biz.aQute.bndlib/src/aQute/bnd/build/ProjectBuilder.java", "diffHunk": "@@ -136,36 +136,57 @@ private void addClasspath(Parameters dependencies, Container c) throws IOExcepti\n \t\tJar jar = new Jar(file);\n \t\tsuper.addClasspath(jar);\n \t\tproject.unreferencedClasspathEntries.put(jar.getName(), c);\n-\t\tif ((dependencies != null) && !Boolean.parseBoolean(c.getAttributes()\n-\t\t\t.getOrDefault(\"maven-optional\", \"false\"))) {\n-\t\t\tjar.getResources(pomPropertiesFilter)\n-\t\t\t\t.forEachOrdered(r -> {\n-\t\t\t\t\tUTF8Properties pomProperties = new UTF8Properties();\n-\t\t\t\t\ttry (InputStream in = r.openInputStream()) {\n-\t\t\t\t\t\tpomProperties.load(in);\n-\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\tlogger.debug(\"unable to read pom.properties resource {}\", r, e);\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n-\t\t\t\t\tString depVersion = pomProperties.getProperty(\"version\");\n-\t\t\t\t\tString depGroupId = pomProperties.getProperty(\"groupId\");\n-\t\t\t\t\tString depArtifactId = pomProperties.getProperty(\"artifactId\");\n-\t\t\t\t\tif ((depGroupId != null) && (depArtifactId != null) && (depVersion != null)) {\n-\t\t\t\t\t\tAttrs attrs = new Attrs();\n-\t\t\t\t\t\tattrs.put(\"groupId\", depGroupId);\n-\t\t\t\t\t\tattrs.put(\"artifactId\", depArtifactId);\n-\t\t\t\t\t\tattrs.put(\"version\", depVersion);\n-\t\t\t\t\t\tattrs.put(\"scope\", c.getAttributes()\n-\t\t\t\t\t\t\t.getOrDefault(\"maven-scope\", getProperty(MAVEN_SCOPE, \"compile\")));\n-\t\t\t\t\t\tString key = new StringBuilder().append(depGroupId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depArtifactId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depVersion)\n-\t\t\t\t\t\t\t.toString();\n-\t\t\t\t\t\tdependencies.add(key, attrs);\n-\t\t\t\t\t}\n-\t\t\t\t});\n+\t\tMap<String, String> containerAttributes = c.getAttributes();", "originalCommit": "0a2f331dd57ed6e434bdd04277f42f492e3bfd32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MjY2MA==", "url": "https://github.com/bndtools/bnd/pull/4020#discussion_r420962660", "bodyText": "It may be possible but we need to collect the maven dependency information at the time we make the classpath here in ProjectBuilder. Any later and we have lost the necessary information (the Containers). This is why the code generates the -maven-dependencies instruction so that the information collected here, when we have the information, can be communicated to the future when PomResource is generating the pom. By the time you get to PomResource, you have lost all information on the class path.\nThe -maven-dependencies instruction also allows the user to fix/replace the maven dependency information in their bnd file.\nFor now, I think this is fine for 5.1. We can always try and make it better in the next release.", "author": "bjhargrave", "createdAt": "2020-05-06T17:24:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NzIxOQ=="}], "type": "inlineReview"}]}