{"pr_number": 3950, "pr_title": "[workspace] Canonicalize paths in getProjectFromDir", "pr_createdAt": "2020-04-21T13:19:41Z", "pr_url": "https://github.com/bndtools/bnd/pull/3950", "timeline": [{"oid": "5967600126c7674e60c2536576210a8db795983d", "url": "https://github.com/bndtools/bnd/commit/5967600126c7674e60c2536576210a8db795983d", "message": "[workspace] Canonicalize paths in getProjectFromDir\n\nIn a test, the ws had '..' in the path and therefore failed to find that a project dir pointed to a directory.\n\nThis patch canonicalizes both paths.\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-04-21T13:19:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMDI1Mw==", "url": "https://github.com/bndtools/bnd/pull/3950#discussion_r412220253", "bodyText": "Wouldn't be better to make sure Processor always stores it's base as a canonical file? Or does that mess up symlinks?", "author": "bjhargrave", "createdAt": "2020-04-21T14:11:51Z", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -320,13 +321,18 @@ public void setFileSystem(File workspaceDir, String bndDir) throws Exception {\n \t}\n \n \tpublic Project getProjectFromFile(File projectDir) {\n-\t\tprojectDir = projectDir.getAbsoluteFile();\n-\t\tassert projectDir.isDirectory();\n+\t\ttry {\n+\t\t\tprojectDir = projectDir.getCanonicalFile();\n+\t\t\tassert projectDir.isDirectory();\n \n-\t\tif (getBase().equals(projectDir.getParentFile())) {\n-\t\t\treturn getProject(projectDir.getName());\n+\t\t\tif (getBase().getCanonicalFile()", "originalCommit": "5967600126c7674e60c2536576210a8db795983d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzODc3MQ==", "url": "https://github.com/bndtools/bnd/pull/3950#discussion_r412238771", "bodyText": "That is the reason I did not have the courage ...\nI agree it would be nicer but it can break existing code. I always thought getAbsoluteFile would remove the .. :-(", "author": "pkriens", "createdAt": "2020-04-21T14:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMDI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI0MTg1OQ==", "url": "https://github.com/bndtools/bnd/pull/3950#discussion_r412241859", "bodyText": "Maybe instead of canonical path, we us IO.getPath since it already has logic to clean . and .. from paths?\n\n  \n    \n      bnd/aQute.libg/src/aQute/lib/io/IO.java\n    \n    \n        Lines 679 to 697\n      in\n      bee8153\n    \n    \n    \n    \n\n        \n          \n           for (f = base.getAbsoluteFile(); !rover.isEmpty();) { \n        \n\n        \n          \n           \tint n = rover.indexOf('/'); \n        \n\n        \n          \n           \tif (n < 0) { \n        \n\n        \n          \n           \t\tn = rover.length(); \n        \n\n        \n          \n           \t} \n        \n\n        \n          \n           \tif ((n == 0) || ((n == 1) && (rover.charAt(0) == '.'))) { \n        \n\n        \n          \n           \t\t// case \"\" or \".\" \n        \n\n        \n          \n           \t} else if ((n == 2) && (rover.charAt(0) == '.') && (rover.charAt(1) == '.')) { \n        \n\n        \n          \n           \t\t// case \"..\" \n        \n\n        \n          \n           \t\tFile parent = f.getParentFile(); \n        \n\n        \n          \n           \t\tif (parent != null) { \n        \n\n        \n          \n           \t\t\tf = parent; \n        \n\n        \n          \n           \t\t} \n        \n\n        \n          \n           \t} else { \n        \n\n        \n          \n           \t\tString segment = rover.substring(0, n); \n        \n\n        \n          \n           \t\tf = new File(f, segment); \n        \n\n        \n          \n           \t} \n        \n\n        \n          \n           \trover.increment(n + 1); \n        \n\n        \n          \n           }", "author": "bjhargrave", "createdAt": "2020-04-21T14:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMDI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM0OTMwMA==", "url": "https://github.com/bndtools/bnd/pull/3950#discussion_r412349300", "bodyText": "I considered that but I am not sure it handles the Windows drive identifier (d:) properly? This is the current problem I am trying to fix", "author": "pkriens", "createdAt": "2020-04-21T17:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMDI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM0OTgwMg==", "url": "https://github.com/bndtools/bnd/pull/3950#discussion_r412349802", "bodyText": "WINDOWS SUCKS!", "author": "pkriens", "createdAt": "2020-04-21T17:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMDI1Mw=="}], "type": "inlineReview"}]}