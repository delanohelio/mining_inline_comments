{"pr_number": 2450, "pr_title": "[RESTEASY-2625]:Fix @Produces(\"text/event-stream;element-type=text/xml\") throws exception", "pr_createdAt": "2020-06-18T11:56:06Z", "pr_url": "https://github.com/resteasy/resteasy/pull/2450", "timeline": [{"oid": "02fdac269ca92342f16af13d19fe6ca85d17ae5e", "url": "https://github.com/resteasy/resteasy/commit/02fdac269ca92342f16af13d19fe6ca85d17ae5e", "message": "[RESTEASY-2625]:Fix @Produces(text/event-stream", "committedDate": "2020-06-18T11:54:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3OTY5OA==", "url": "https://github.com/resteasy/resteasy/pull/2450#discussion_r442179698", "bodyText": "I'm wondering if it would be better to have both ways of using annotations here, instead of changing all resource methods you could change just one of them and add a comment explaining the reason / referring to the JIRA number.", "author": "asoldano", "createdAt": "2020-06-18T12:13:31Z", "path": "testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/rx/rxjava2/resource/Rx2FlowableableSSECompatibilityResource.java", "diffHunk": "@@ -18,13 +17,11 @@\n \n    @GET\n    @Path(\"eventStream/thing\")\n-   @Produces(\"text/event-stream\")\n-   @SseElementType(\"application/json\")\n+   @Produces(\"text/event-stream;element-type=application/json\")\n    void eventStreamThing(@Context SseEventSink eventSink, @Context Sse sse);\n \n    @GET\n    @Path(\"flowable/thing\")\n-   @Produces(\"text/event-stream\")\n-   @SseElementType(\"application/json\")\n+   @Produces(\"text/event-stream;element-type=application/json\")", "originalCommit": "02fdac269ca92342f16af13d19fe6ca85d17ae5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5MjQwMw==", "url": "https://github.com/resteasy/resteasy/pull/2450#discussion_r442192403", "bodyText": "Rx2ObservableSSECompatibilityTest use the @SseElementType(\"application/json\") and we don't have to test @SseElementType here.", "author": "jimma", "createdAt": "2020-06-18T12:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3OTY5OA=="}], "type": "inlineReview"}]}