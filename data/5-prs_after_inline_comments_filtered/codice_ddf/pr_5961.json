{"pr_number": 5961, "pr_title": "Upgrade to Solr 8.5", "pr_createdAt": "2020-04-02T00:08:49Z", "pr_url": "https://github.com/codice/ddf/pull/5961", "timeline": [{"oid": "e25bedfb7fedde5054a8d1205ac3cb2ba1543d8f", "url": "https://github.com/codice/ddf/commit/e25bedfb7fedde5054a8d1205ac3cb2ba1543d8f", "message": "DDF-5961 Upgrade to Solr 8.5", "committedDate": "2020-04-02T00:28:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2MzI1NQ==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402063255", "bodyText": "\u270f\ufe0f  Did you mean which goes through getProxiedClient() instead?", "author": "Lambeaux", "createdAt": "2020-04-02T05:41:44Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/SolrClientAdapter.java", "diffHunk": "@@ -446,7 +446,15 @@ public void whenAvailable(Initializer initializer) {\n   // which goes throw getProxiedClient() which would throw back an unavailable error instead of\n   // returning the response\n   public SolrPingResponse ping() throws SolrServerException, IOException {\n-    return ping(\"from the API\");\n+    return ping(true, null);\n+  }\n+\n+  @Override\n+  // overridden to always send the ping to the client; avoiding the intercept in handle()\n+  // which goes throw getProxiedClient() which would throw back an unavailable error instead of", "originalCommit": "e25bedfb7fedde5054a8d1205ac3cb2ba1543d8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4OTg2Ng==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402389866", "bodyText": "The comment was copied and pasted from the method above.  Looks like that was missed in the original review.", "author": "pklinef", "createdAt": "2020-04-02T15:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2MzI1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMDc3NA==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402430774", "bodyText": "how is this get used? beside just being logged?", "author": "lamhuy", "createdAt": "2020-04-02T16:04:50Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/SolrClientAdapter.java", "diffHunk": "@@ -786,15 +794,22 @@ boolean wasNotRecent(AtomicLong previous, long freq) {\n   }\n \n   private SolrPingResponse backgroundPing() throws SolrServerException, IOException {\n-    return ping(\"in the background\");\n+    return ping(false, null);\n   }\n \n   @SuppressWarnings(\"squid:S1181\" /* bubbling out VirtualMachineError */)\n-  private SolrPingResponse ping(String how) throws SolrServerException, IOException {\n+  private SolrPingResponse ping(boolean fromApi, String collection)\n+      throws SolrServerException, IOException {\n+    String how = fromApi ? \"from the API\" : \"in the background\";", "originalCommit": "e25bedfb7fedde5054a8d1205ac3cb2ba1543d8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzNDkxOQ==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402434919", "bodyText": "Just for logging.  I was trying to keep the logic similar to how it was before.  Though now that you ask, I could probably pull that logging up into the calling methods.", "author": "pklinef", "createdAt": "2020-04-02T16:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMDc3NA=="}], "type": "inlineReview"}, {"oid": "0849b26ec9d8af8c1b00ca08f4d4112305d69349", "url": "https://github.com/codice/ddf/commit/0849b26ec9d8af8c1b00ca08f4d4112305d69349", "message": "DDF-5961 Upgrade to Solr 8.5", "committedDate": "2020-04-02T16:18:47Z", "type": "commit"}, {"oid": "0849b26ec9d8af8c1b00ca08f4d4112305d69349", "url": "https://github.com/codice/ddf/commit/0849b26ec9d8af8c1b00ca08f4d4112305d69349", "message": "DDF-5961 Upgrade to Solr 8.5", "committedDate": "2020-04-02T16:18:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3MDcwMg==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402470702", "bodyText": "Just double checking, a broad Exception was required here?", "author": "rzwiefel", "createdAt": "2020-04-02T17:05:00Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/SolrCloudClientFactory.java", "diffHunk": "@@ -86,19 +86,22 @@ SolrClient createSolrCloudClient(String zookeeperHosts, String collection) {\n       try {\n         uploadCoreConfiguration(collection, client);\n       } catch (SolrFactoryException e) {\n-        LOGGER.debug(\"Solr({}): Unable to upload configuration to Solr Cloud\", collection, e);\n+        LOGGER.debug(\"Solr({}): Unable to upload configuration to SolrCloud\", collection, e);\n         return null;\n       }\n \n       try {\n         createCollection(collection, client);\n       } catch (SolrFactoryException e) {\n-        LOGGER.debug(\"Solr({}): Unable to create collection on Solr Cloud\", collection, e);\n+        LOGGER.debug(\"Solr({}): Unable to create collection on SolrCloud\", collection, e);\n         return null;\n       }\n \n       client.setDefaultCollection(collection);\n       return closer.returning(client);\n+    } catch (LinkageError | Exception e) {", "originalCommit": "0849b26ec9d8af8c1b00ca08f4d4112305d69349", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyNTk0NQ==", "url": "https://github.com/codice/ddf/pull/5961#discussion_r402525945", "bodyText": "I was not able to figure out what code was catching the escaping exceptions but wherever it was it is swallowing them based on the logs.  I know I needed the LinkageError to find a class def issue.  I am not sure about Exception but wanted to save the next person from wasting a lot of hours hunting down the swallowed exceptions like I did.", "author": "pklinef", "createdAt": "2020-04-02T18:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3MDcwMg=="}], "type": "inlineReview"}]}