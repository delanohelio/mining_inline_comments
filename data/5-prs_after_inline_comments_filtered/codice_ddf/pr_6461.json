{"pr_number": 6461, "pr_title": "[2.26.x] Fix printErrorMessage when executeWithSubject fails in SubjectCommands", "pr_createdAt": "2020-12-16T01:43:42Z", "pr_url": "https://github.com/codice/ddf/pull/6461", "timeline": [{"oid": "6ca593886632d2fd075bcbda3f48cdfef044b73e", "url": "https://github.com/codice/ddf/commit/6ca593886632d2fd075bcbda3f48cdfef044b73e", "message": "Fix printErrorMessage when executeWithSubject fails in SubjectCommands", "committedDate": "2020-12-16T01:27:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM5NzE2MQ==", "url": "https://github.com/codice/ddf/pull/6461#discussion_r544397161", "bodyText": "\u2757 missing placeholder for logging parameter", "author": "jlcsmith", "createdAt": "2020-12-16T15:35:51Z", "path": "catalog/core/catalog-core-commands/src/main/java/org/codice/ddf/commands/catalog/SubjectCommands.java", "diffHunk": "@@ -68,46 +64,59 @@\n    * the user doesn't have the permission to run the command.\n    *\n    * @return value returned by {@link #executeWithSubject()}, or {@code null} if the command failed\n-   * @throws InvocationTargetException thrown if an exception occurred while executing the command\n-   * @throws Exception if any other unexpected exception occurred\n    */\n   @Override\n-  public Object execute() throws Exception {\n-\n-    try {\n-      if (isNotBlank(user)) {\n-        return runWithUserName();\n-      } else {\n-        return security.runWithSubjectOrElevate(\n-            () ->\n-                AccessController.doPrivileged(\n-                    (PrivilegedExceptionAction<Object>) this::executeWithSubject));\n-      }\n-    } catch (SecurityServiceException e) {\n-      printErrorMessage(e.getMessage());\n-    } catch (InvocationTargetException e) {\n-      printErrorMessage(e.getCause().getMessage());\n+  public Object execute() {\n+    if (isNotBlank(user)) {\n+      return runWithUsername();\n+    } else {\n+      return runWithoutUsername();\n     }\n-    return null;\n   }\n \n-  private Object runWithUserName() throws InvocationTargetException {\n+  @Nullable\n+  private Object runWithUsername() {\n+    final String password;\n     try {\n-      String password = session.readLine(\"Password for \" + user + \": \", '*');\n-      Subject subject = security.getSubject(user, password, \"127.0.0.1\");\n+      password = session.readLine(\"Password for \" + user + \": \", '*');\n+    } catch (IOException e) {\n+      LOGGER.info(\"Failed to run command\", e);\n+      printErrorMessage(\"Failed to read password\");\n+      return null;\n+    }\n \n-      if (subject == null) {\n-        printErrorMessage(\"Invalid username/password\");\n-        return null;\n-      }\n+    final Subject subject = security.getSubject(user, password, \"127.0.0.1\");\n+    if (subject == null) {\n+      printErrorMessage(\"Invalid username/password\");\n+      return null;\n+    }\n \n+    try {\n       return subject.execute(this::executeWithSubject);\n     } catch (ExecutionException e) {\n-      LOGGER.info(\"Failed to run command: {}\", e.getCause().getMessage(), e.getCause());\n-      throw new InvocationTargetException(e.getCause());\n-    } catch (IOException e) {\n-      LOGGER.info(\"Failed to run command\", e);\n-      printErrorMessage(\"Failed to read password\");\n+      final Throwable failure = e.getCause();\n+      final String message = failure.getMessage();\n+      LOGGER.info(\"Failed to run command: {}\", message, failure);", "originalCommit": "6ca593886632d2fd075bcbda3f48cdfef044b73e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU2NzUwMg==", "url": "https://github.com/codice/ddf/pull/6461#discussion_r544567502", "bodyText": "Looks like is prints it correctly as is. Is there something I'm not seeing?\nadmin@root()> catalog:range --user admin name ___ ___\nPassword for admin: *****\n\n#       ID                                name                       Title\n\nCould not parse date parameters.\nadmin@root()> log:tail\n12:30:20,670 | INFO  | min name ___ ___ | ice.ddf.commands.catalog.SubjectCommands   99 | atalog-core-commands | Failed to run command: Could not parse date parameters.\njava.lang.InterruptedException: Could not parse date parameters.\n\tat org.codice.ddf.commands.catalog.RangeCommand.executeWithSubject(RangeCommand.java:127) ~[bundleFile:?]\n\tat org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) ~[?:?]\n\tat org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) ~[?:?]\n\tat org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) ~[?:?]\n\tat org.codice.ddf.commands.catalog.SubjectCommands.runWithUsername(SubjectCommands.java:95) [bundleFile:?]\n\tat org.codice.ddf.commands.catalog.SubjectCommands.execute(SubjectCommands.java:71) [bundleFile:?]\n\t...", "author": "emmberk", "createdAt": "2020-12-16T19:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM5NzE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwNjQzNQ==", "url": "https://github.com/codice/ddf/pull/6461#discussion_r544606435", "bodyText": "my bad - you are logging the exception as well as the message - disregard!", "author": "jlcsmith", "createdAt": "2020-12-16T20:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM5NzE2MQ=="}], "type": "inlineReview"}, {"oid": "69a189db0f3d1d5703e553febd0f98c084c391dc", "url": "https://github.com/codice/ddf/commit/69a189db0f3d1d5703e553febd0f98c084c391dc", "message": "Update solution to account for both checked and unchecked exceptions", "committedDate": "2020-12-16T20:28:53Z", "type": "commit"}, {"oid": "645cfbd85f0d1292c804a8043a9553b5f125ef1d", "url": "https://github.com/codice/ddf/commit/645cfbd85f0d1292c804a8043a9553b5f125ef1d", "message": "Update catalog:range command to only print table header row when there are no errors", "committedDate": "2020-12-16T20:37:00Z", "type": "commit"}]}