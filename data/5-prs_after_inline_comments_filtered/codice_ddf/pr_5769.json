{"pr_number": 5769, "pr_title": "DDF-5360 Adds the ability to go through OAuth to download a resource", "pr_createdAt": "2020-01-15T16:50:53Z", "pr_url": "https://github.com/codice/ddf/pull/5769", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MTI5NQ==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r366991295", "bodyText": "\u2753 Why did you need to add this? It looks like it isn't used anywhere.", "author": "stustison", "createdAt": "2020-01-15T16:56:11Z", "path": "platform/security/rest/security-rest-clientapi/src/main/java/org/codice/ddf/cxf/client/SecureCxfClientFactory.java", "diffHunk": "@@ -42,6 +42,13 @@\n    */\n   WebClient getWebClient();\n \n+  /**\n+   * Returns the WebClient\n+   *\n+   * @return\n+   */\n+  WebClient getWebSystemClient();", "originalCommit": "93bb3b82add5a6b86461d901e371f0ad9c7e0245", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTUxNQ==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r367039515", "bodyText": "It will not be used in DDF but downstream distributions will use it.", "author": "blen-desta", "createdAt": "2020-01-15T18:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MTI5NQ=="}], "type": "inlineReview"}, {"oid": "3515a6e61a9a2960357958ce0daa405d9ad7b4a7", "url": "https://github.com/codice/ddf/commit/3515a6e61a9a2960357958ce0daa405d9ad7b4a7", "message": "DDF-5360 Added OAuth to the URLResourceReader", "committedDate": "2020-01-21T21:47:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3OTQ5MA==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r369879490", "bodyText": "I get a compilation error when building. This test needs to be updated with the new getWebClient method signature:\nhttps://github.com/codice/ddf/blob/master/catalog/spatial/ogc/spatial-ogc-urlresourcereader/src/test/java/org/codice/ddf/spatial/ogc/catalog/resource/impl/ResourceReaderTest.java#L94-L95", "author": "SmithJosh", "createdAt": "2020-01-23T00:33:05Z", "path": "catalog/core/catalog-core-urlresourcereader/src/main/java/ddf/catalog/resource/impl/URLResourceReader.java", "diffHunk": "@@ -583,7 +594,8 @@ private boolean validateFilePath(File resourceFilePath) throws IOException {\n     return false;\n   }\n \n-  protected WebClient getWebClient(String uri, Map<String, Serializable> properties) {\n+  @VisibleForTesting\n+  WebClient getWebClient(String uri, Map<String, Serializable> properties) {", "originalCommit": "3515a6e61a9a2960357958ce0daa405d9ad7b4a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2196450e2301ed7d7f330e531a9dceb2e5a871bd", "url": "https://github.com/codice/ddf/commit/2196450e2301ed7d7f330e531a9dceb2e5a871bd", "message": "DDF-5360 Added OAuth to the URLResourceReader", "committedDate": "2020-01-23T04:24:43Z", "type": "forcePushed"}, {"oid": "93c54f5600867741c8299dee41c9ceea18063e4a", "url": "https://github.com/codice/ddf/commit/93c54f5600867741c8299dee41c9ceea18063e4a", "message": "DDF-5360 Added OAuth to the URLResourceReader", "committedDate": "2020-01-23T15:22:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372524549", "bodyText": "I already approved, but we have a configuration for OAuth handler which determines the scopes that will be requested from the auth server. Wondering if we should include the full set from that config here as well", "author": "SmithJosh", "createdAt": "2020-01-29T17:28:35Z", "path": "platform/security/rest/security-rest-cxfwrapper/src/main/java/org/codice/ddf/cxf/oauth/OAuthSecurityImpl.java", "diffHunk": "@@ -324,6 +326,7 @@ private String getNewAccessToken(\n \n     Form formParam = new Form(GRANT_TYPE, grantType);\n     queryParameters.forEach(formParam::param);\n+    formParam.param(SCOPE, OPENID_SCOPE);", "originalCommit": "9cb5f2a960b768230047032429c9dfee00960ec2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU2NTAxMQ==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372565011", "bodyText": "The problem is that the configuration for the OAuth handler is separate. This code is for federating and that is for login so they could be connected to two different providers.", "author": "blen-desta", "createdAt": "2020-01-29T18:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU2OTg0Nw==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372569847", "bodyText": "Do we see a use case where these federation scopes would need to be configurable? If so, I would imagine that would live in the source configuration somewhere, but \ud83e\udd37\u200d\u2642", "author": "bakejeyner", "createdAt": "2020-01-29T18:57:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5Mzg0NA==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372593844", "bodyText": "Actually, it probably is fine as-is. It's likely we'll hit a situation where additional scopes are needed, but auth servers should be configurable to provide scopes as needed to specific clients without the client requesting them.", "author": "SmithJosh", "createdAt": "2020-01-29T19:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyMzQyOQ==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372623429", "bodyText": "If that is the case we will need an additional configuration in the source configurations to take care of that.", "author": "blen-desta", "createdAt": "2020-01-29T20:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyOTA2NA==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r372629064", "bodyText": "I was trying to say we shouldn't need to do that \ud83d\ude04 It makes sense to request the \"openid\" scope since that's required for OIDC, but for application-specific scopes, it should be possible to configure everything in the auth server rather than DDF. That's at least the case for Keycloak. You can provide a list of default scopes to issue on a per-client basis.", "author": "SmithJosh", "createdAt": "2020-01-29T21:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUyNDU0OQ=="}], "type": "inlineReview"}, {"oid": "34fa8ae3187b72f472c009ec5d4edec1f8e65a35", "url": "https://github.com/codice/ddf/commit/34fa8ae3187b72f472c009ec5d4edec1f8e65a35", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource", "committedDate": "2020-02-05T21:21:16Z", "type": "forcePushed"}, {"oid": "ef5dbbeb2a90b755d272977ac4eca3e26f2b0e94", "url": "https://github.com/codice/ddf/commit/ef5dbbeb2a90b755d272977ac4eca3e26f2b0e94", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource", "committedDate": "2020-02-05T21:23:14Z", "type": "forcePushed"}, {"oid": "5fd2792611adf26f9dc97df85fa5e65246546f00", "url": "https://github.com/codice/ddf/commit/5fd2792611adf26f9dc97df85fa5e65246546f00", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource", "committedDate": "2020-02-05T21:25:53Z", "type": "commit"}, {"oid": "5fd2792611adf26f9dc97df85fa5e65246546f00", "url": "https://github.com/codice/ddf/commit/5fd2792611adf26f9dc97df85fa5e65246546f00", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource", "committedDate": "2020-02-05T21:25:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3MzMzOA==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r375573338", "bodyText": "\u2753 Does this mean there is no longer a case where the complete URL will be passed into this exception? IOW it will always be the baseUrl + parameters?", "author": "bakejeyner", "createdAt": "2020-02-05T23:51:26Z", "path": "catalog/core/catalog-core-api/src/main/java/ddf/catalog/plugin/OAuthPluginException.java", "diffHunk": "@@ -37,17 +46,38 @@ public int getStatusCode() {\n     }\n   }\n \n-  public OAuthPluginException(String sourceId, String url, ErrorType errorType) {", "originalCommit": "5fd2792611adf26f9dc97df85fa5e65246546f00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxODA4Ng==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r375618086", "bodyText": "Yes", "author": "blen-desta", "createdAt": "2020-02-06T02:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3MzMzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwNzEzOA==", "url": "https://github.com/codice/ddf/pull/5769#discussion_r375907138", "bodyText": "\u270f\ufe0f Does this comment need to move down to the catch (RuntimeException | UnsupportedEncodingException e) line?", "author": "SmithJosh", "createdAt": "2020-02-06T15:36:16Z", "path": "catalog/rest/catalog-rest-service/src/main/java/org/codice/ddf/rest/service/AbstractCatalogService.java", "diffHunk": "@@ -372,6 +377,15 @@ public BinaryContent getDocument(\n         // We need to catch this exception here or else execution will return to CXF and", "originalCommit": "5fd2792611adf26f9dc97df85fa5e65246546f00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fd15a634662ad60a2339617a3e56c32de5875ab6", "url": "https://github.com/codice/ddf/commit/fd15a634662ad60a2339617a3e56c32de5875ab6", "message": "Moves the Uri builder in the OAuthException to avoid embedding jars", "committedDate": "2020-02-06T19:28:32Z", "type": "forcePushed"}, {"oid": "09584145c20aa7877ce3d00b4d055e7016f65d07", "url": "https://github.com/codice/ddf/commit/09584145c20aa7877ce3d00b4d055e7016f65d07", "message": "Moves the Uri builder in the OAuthException to avoid embedding jars", "committedDate": "2020-02-19T01:18:59Z", "type": "commit"}, {"oid": "09584145c20aa7877ce3d00b4d055e7016f65d07", "url": "https://github.com/codice/ddf/commit/09584145c20aa7877ce3d00b4d055e7016f65d07", "message": "Moves the Uri builder in the OAuthException to avoid embedding jars", "committedDate": "2020-02-19T01:18:59Z", "type": "forcePushed"}]}