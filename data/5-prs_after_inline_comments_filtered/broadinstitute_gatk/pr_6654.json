{"pr_number": 6654, "pr_title": "Move to GenomicsDB 1.3.0 and add support for shared posixfs optimizations", "pr_createdAt": "2020-06-11T02:57:30Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6654", "timeline": [{"oid": "6fb0e0fccb833f4d309688242ff4e285a3384a4a", "url": "https://github.com/broadinstitute/gatk/commit/6fb0e0fccb833f4d309688242ff4e285a3384a4a", "message": "Move to GenomicsDB Version 1.2.3 for optimization options, pre-compression filters and bug fixes", "committedDate": "2020-06-08T06:33:29Z", "type": "commit"}, {"oid": "324577f0066114132d58220b4ab75dcf1b93511e", "url": "https://github.com/broadinstitute/gatk/commit/324577f0066114132d58220b4ab75dcf1b93511e", "message": "Debug failing build GCS tests", "committedDate": "2020-06-08T16:42:59Z", "type": "commit"}, {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "url": "https://github.com/broadinstitute/gatk/commit/7f637eb80b23b95725d972c5c2bde336b76be4f3", "message": "Use GenomicsDB 1.3.0 release that works with the older 1.6.3 GCS connector", "committedDate": "2020-06-11T00:39:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxNTUwMw==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r438515503", "bodyText": "Cleaned up code as the names of the GenomicsDB arrays are no longer constant and are based on the interval.", "author": "nalinigans", "createdAt": "2020-06-11T02:59:15Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -621,12 +622,12 @@ public void onTraversalStart() {\n \n         if (doIncrementalImport) {\n             logger.info(\"Callset Map JSON file will be re-written to \" + callsetMapJSONFile);\n-            logger.info(\"Incrementally importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);\n+            logger.info(\"Incrementally importing to workspace - \" + workspaceDir);", "originalCommit": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMzM2Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440423362", "bodyText": "Can you just use GenomicsDBArgumentCollection.SHARED_POSIXFS_OPTIMIZATIONS directly in this class instead of duplicating it here?", "author": "droazen", "createdAt": "2020-06-15T20:19:07Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -200,6 +200,8 @@\n     public static final String MAX_NUM_INTERVALS_TO_IMPORT_IN_PARALLEL = \"max-num-intervals-to-import-in-parallel\";\n     public static final int INTERVAL_LIST_SIZE_WARNING_THRESHOLD = 100;\n \n+    public static final String SHARED_POSIXFS_OPTIMIZATIONS = \"genomicsdb-shared-posixfs-optimizations\";", "originalCommit": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUxMjY2OA==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440512668", "bodyText": "Done.", "author": "nalinigans", "createdAt": "2020-06-16T00:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMzM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzYwNw==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440427607", "bodyText": "Would be nicer to have a separate test case to test the overwrite workspace option, with a proper TestNG-style  expectedExceptions = GenomicsDBImport.UnableToCreateGenomicsDBWorkspace.class clause instead of this try-catch.", "author": "droazen", "createdAt": "2020-06-15T20:27:47Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImportIntegrationTest.java", "diffHunk": "@@ -1026,6 +1026,50 @@ private void createAndCheckIntervalListFromExistingWorkspace(final String worksp\n         Assert.assertTrue(generatedInterval.sorted().equals(expectedInterval.sorted()));\n     }\n \n+    void basicWriteAndQueryWithOptions(String workspace, Map<String, Object> options) throws IOException {\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.add(GenomicsDBImport.WORKSPACE_ARG_LONG_NAME, workspace);\n+        INTERVAL.forEach(args::addInterval);\n+        LOCAL_GVCFS.forEach(vcf -> args.add(\"V\", vcf));\n+        for ( String key : options.keySet()) {\n+            if (key.equals(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS)) {\n+                Assert.assertTrue(options.get(key) instanceof Boolean);\n+                args.add(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS, (Boolean)options.get(key));\n+            }\n+            if (key.equals(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME)) {\n+                Assert.assertTrue(options.get(key) instanceof Boolean);\n+                args.add(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, (Boolean)options.get(key));\n+            }\n+        }\n+        runCommandLine(args);\n+        checkJSONFilesAreWritten(workspace);\n+        checkGenomicsDBAgainstExpected(workspace, INTERVAL, COMBINED, b38_reference_20_21, true, ATTRIBUTES_TO_IGNORE);\n+    }\n+\n+    @Test\n+    public void testWithMiscOptions() throws IOException {\n+        final String workspace = createTempDir(\"genomicsdb-misc-options\").getAbsolutePath() + \"/workspace\";\n+        IOUtils.deleteOnExit(IOUtils.getPath(workspace));\n+        Map<String, Object> options = new HashMap<String, Object>();\n+\n+        // Test with shared posixfs optimizations set\n+        options.put(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS, true);\n+        basicWriteAndQueryWithOptions(workspace, options);\n+\n+        // Test with shared posixfs optimizations and overwrite workspace set\n+        options.put(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, true);\n+        basicWriteAndQueryWithOptions(workspace, options);\n+\n+        // Test with overwrite workspace set to false - should throw an exception\n+        options.replace(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, false);\n+        try {\n+            basicWriteAndQueryWithOptions(workspace, options);\n+            Assert.fail();\n+        } catch (GenomicsDBImport.UnableToCreateGenomicsDBWorkspace e) {\n+            // pass\n+        }", "originalCommit": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUxMjcyNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440512725", "bodyText": "Done.", "author": "nalinigans", "createdAt": "2020-06-16T00:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzYwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzk5MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440427991", "bodyText": "Should the constant GenomicsDBConstants.DEFAULT_ARRAY_NAME be itself removed as well?", "author": "droazen", "createdAt": "2020-06-15T20:28:28Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -621,12 +622,12 @@ public void onTraversalStart() {\n \n         if (doIncrementalImport) {\n             logger.info(\"Callset Map JSON file will be re-written to \" + callsetMapJSONFile);\n-            logger.info(\"Incrementally importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);\n+            logger.info(\"Incrementally importing to workspace - \" + workspaceDir);\n         } else {\n             logger.info(\"Vid Map JSON file will be written to \" + vidMapJSONFile);\n             logger.info(\"Callset Map JSON file will be written to \" + callsetMapJSONFile);\n             logger.info(\"Complete VCF Header will be written to \" + vcfHeaderFile);\n-            logger.info(\"Importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);", "originalCommit": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTM3Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440461372", "bodyText": "I looked at removing this constant. But, this is needed to support querying older GenomicsDB arrays.", "author": "nalinigans", "createdAt": "2020-06-15T21:37:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzk5MQ=="}], "type": "inlineReview"}, {"oid": "e6686ff1c05b53010ca1e5ca447d60f800aef951", "url": "https://github.com/broadinstitute/gatk/commit/e6686ff1c05b53010ca1e5ca447d60f800aef951", "message": "Address review concerns : Separate test case for overwrite workspace option with proper TestNG-style Exceptions clause", "committedDate": "2020-06-15T22:43:09Z", "type": "commit"}]}