{"pr_number": 6442, "pr_title": "Parse combined AS_QUALapprox values from older reblocked GVCFs properly", "pr_createdAt": "2020-02-04T19:50:54Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6442", "timeline": [{"oid": "58b3e45e0bd543f8408165f59df59a11b16ade31", "url": "https://github.com/broadinstitute/gatk/commit/58b3e45e0bd543f8408165f59df59a11b16ade31", "message": "For some reason, some of my merged VCs are coming back with values for\nNON_REF but sometimes they get zeros", "committedDate": "2020-02-04T19:47:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzMDY2NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6442#discussion_r376530665", "bodyText": "assertEquals() would be more appropriate here", "author": "droazen", "createdAt": "2020-02-07T18:09:20Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/AS_QualByDepthUnitTest.java", "diffHunk": "@@ -27,4 +34,16 @@ protected String getKey() {\n         return GATKVCFConstants.AS_QUAL_KEY;\n     }\n \n+    @Test\n+    public void testParseQualList() {\n+        final String goodQualList = \"|234|0\"; //combined VCs from GenomicsDB have zero value for NON-REF\n+        final String trickyQualList = \"|234|\"; //older single-sample GVCFs don't have a value for NON-REF -- GenomicsDB assigns an empty value, which is fair\n+        final VariantContext withNonRefValue = new VariantContextBuilder(GATKVariantContextUtils.makeFromAlleles(\"good\", \"chr1\", 10001, Arrays.asList(\"A\",\"T\", Allele.NON_REF_STRING))).\n+                attribute(GATKVCFConstants.AS_RAW_QUAL_APPROX_KEY, goodQualList).make();\n+        final VariantContext withNoNonRefValue = new VariantContextBuilder(GATKVariantContextUtils.makeFromAlleles(\"good\", \"chr1\", 10001, Arrays.asList(\"A\",\"T\", Allele.NON_REF_STRING))).\n+                attribute(GATKVCFConstants.AS_RAW_QUAL_APPROX_KEY, trickyQualList).make();\n+        Assert.assertTrue(AS_QualByDepth.parseQualList(withNonRefValue).size() == withNonRefValue.getAlternateAlleles().size());", "originalCommit": "58b3e45e0bd543f8408165f59df59a11b16ade31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzMTQ0MA==", "url": "https://github.com/broadinstitute/gatk/pull/6442#discussion_r376531440", "bodyText": "Can you also add an assertion that the actual QD value assigned to NON_REF was 0 in the withNoNonRefValue case?", "author": "droazen", "createdAt": "2020-02-07T18:11:06Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/AS_QualByDepthUnitTest.java", "diffHunk": "@@ -27,4 +34,16 @@ protected String getKey() {\n         return GATKVCFConstants.AS_QUAL_KEY;\n     }\n \n+    @Test\n+    public void testParseQualList() {\n+        final String goodQualList = \"|234|0\"; //combined VCs from GenomicsDB have zero value for NON-REF\n+        final String trickyQualList = \"|234|\"; //older single-sample GVCFs don't have a value for NON-REF -- GenomicsDB assigns an empty value, which is fair\n+        final VariantContext withNonRefValue = new VariantContextBuilder(GATKVariantContextUtils.makeFromAlleles(\"good\", \"chr1\", 10001, Arrays.asList(\"A\",\"T\", Allele.NON_REF_STRING))).\n+                attribute(GATKVCFConstants.AS_RAW_QUAL_APPROX_KEY, goodQualList).make();\n+        final VariantContext withNoNonRefValue = new VariantContextBuilder(GATKVariantContextUtils.makeFromAlleles(\"good\", \"chr1\", 10001, Arrays.asList(\"A\",\"T\", Allele.NON_REF_STRING))).\n+                attribute(GATKVCFConstants.AS_RAW_QUAL_APPROX_KEY, trickyQualList).make();\n+        Assert.assertTrue(AS_QualByDepth.parseQualList(withNonRefValue).size() == withNonRefValue.getAlternateAlleles().size());\n+        Assert.assertTrue(AS_QualByDepth.parseQualList(withNoNonRefValue).size() == withNonRefValue.getAlternateAlleles().size());\n+    }", "originalCommit": "58b3e45e0bd543f8408165f59df59a11b16ade31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "35fdc4bc24fb44e759d6f487526778a19d8ca601", "url": "https://github.com/broadinstitute/gatk/commit/35fdc4bc24fb44e759d6f487526778a19d8ca601", "message": "Address comments", "committedDate": "2020-02-07T19:54:43Z", "type": "commit"}, {"oid": "7b0be996b10b25e827de1669aabaedfec35e5620", "url": "https://github.com/broadinstitute/gatk/commit/7b0be996b10b25e827de1669aabaedfec35e5620", "message": "Derp", "committedDate": "2020-02-07T19:57:29Z", "type": "commit"}]}