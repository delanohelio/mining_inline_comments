{"pr_number": 6492, "pr_title": "Making ENSEMBL GTF Codec more permissive", "pr_createdAt": "2020-03-10T21:23:06Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6492", "timeline": [{"oid": "176536310a0154c15e1865cba09deae85481a3b4", "url": "https://github.com/broadinstitute/gatk/commit/176536310a0154c15e1865cba09deae85481a3b4", "message": "Making the EnsemblGtfCodec match the ENSEMBL GTF Spec.\n\nThis required making a lot of changes for GTF files because of how\nstrict the parsing was and how permissive the ENSEMBL GTF spec actually\nis.\n\nStill a work in progress, but almost complete.\n\nFixes #6488", "committedDate": "2020-03-10T19:25:38Z", "type": "commit"}, {"oid": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "url": "https://github.com/broadinstitute/gatk/commit/331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "message": "Fixing unit test issue.", "committedDate": "2020-03-10T20:31:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNDc2NA==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391724764", "bodyText": "Seems like some duplicated code with isLineCommented but maybe complexity of sharing it makes it not worthwhile to refactor.", "author": "lbergelson", "createdAt": "2020-03-12T16:03:35Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/AbstractGtfCodec.java", "diffHunk": "@@ -474,26 +474,53 @@ boolean checkHeaderLineStartsWith(final List<String> header, final int lineNum,\n \n     /**\n      * Checks that the given header line number starts with the given text.\n+     * Uses {@link #getAllLineComments()} to check for comments at the line starts.\n      * @param header A {@link List<String>} containing a header to validate.\n      * @param lineNum Line number in the header to check.\n      * @param startingText {@link String} containing text that the line should start with\n      * @param throwIfInvalid If {@code true} will throw a {@link UserException} instead of returning false.\n      * @return {@code true} IFF the header line number {@code lineNum} starts with {@code startingText}; {@code false} otherwise.\n      */\n     boolean checkHeaderLineStartsWith(final List<String> header, final int lineNum, final String startingText, final boolean throwIfInvalid ) {\n-        if ( !header.get(lineNum).startsWith(getLineComment() + startingText) ) {\n+        boolean foundGoodLine = false;\n+        for ( final String commentPrefix : getAllLineComments() ) {", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3ODY4MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391778681", "bodyText": "Yeah - I was thinking about this as I was implementing it.  I can refactor it.", "author": "jonn-smith", "createdAt": "2020-03-12T17:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNDc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNTU1Mw==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391725553", "bodyText": "COMMENT_PREFIXES and group it with the other statics", "author": "lbergelson", "createdAt": "2020-03-12T16:04:48Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/EnsemblGtfCodec.java", "diffHunk": "@@ -29,12 +28,16 @@\n     //==================================================================================================================\n     // Private Static Members:\n \n+    private static String VERSION_FIELD = \"genome-version\";\n+    private static String DEFAULT_VERSION = \"ENSEMBL_DEFAULT_VERSION\";\n+\n     //==================================================================================================================\n     // Private Members:\n \n-    private final List<String> header         = new ArrayList<>();\n-    private       int          currentLineNum = 1;\n-    private       String       version        = \"\";\n+    private final        List<String> header          = new ArrayList<>();\n+    private              int          currentLineNum  = 1;\n+    private              String       version         = null;\n+    private static final Set<String>  commentPrefixes = Collections.unmodifiableSet(new LinkedHashSet<>(Arrays.asList(\"#!\", \"##\")));", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3ODgyMw==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391778823", "bodyText": "rgr.  Fixed!", "author": "jonn-smith", "createdAt": "2020-03-12T17:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNTU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjA3Nw==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391726077", "bodyText": "Oh, I didn't realize that.  Does that imply that the ensemble codec should extend GencodecodeGtfCodec instead of being a parallel class to it?  Maybe something to think about in the future.", "author": "lbergelson", "createdAt": "2020-03-12T16:05:43Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/EnsemblGtfCodec.java", "diffHunk": "@@ -120,7 +121,28 @@ void incrementLineNumber() {\n \n     @Override\n     String getUcscVersionNumber() {\n-        return getVersionFromHeader();\n+        return version;\n+    }\n+\n+    @Override\n+    /**\n+     * {@inheritDoc}\n+     *\n+     * Because ENSEMBL GTF files are strictly a superset of GENCODE GTF files, we need to do some extra checks here to", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MDczMw==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391780733", "bodyText": "Yeah - I didn't realize it until doing the work for this issue.\nIt's probably worth looking into doing that - it would be nice to have a single point of control for this.  I also need to change the name of some other classes in response to having multiple kinds of GTF files, but I wanted to leave that out of this PR for simplicity.", "author": "jonn-smith", "createdAt": "2020-03-12T17:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4MzUxOQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391883519", "bodyText": "I agree, that's a different pr.", "author": "lbergelson", "createdAt": "2020-03-12T20:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyOTk5Ng==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391729996", "bodyText": "disgusting", "author": "lbergelson", "createdAt": "2020-03-12T16:11:49Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/EnsemblGtfCodec.java", "diffHunk": "@@ -162,23 +203,27 @@ static boolean validateEnsemblGtfFeature(final GencodeGtfFeature feature) {\n      */\n     @VisibleForTesting\n     boolean validateHeader(final List<String> header, final boolean throwIfInvalid) {\n-        if ( header.size() != HEADER_NUM_LINES) {\n-            if ( throwIfInvalid ) {\n-                throw new UserException.MalformedFile(\n-                        \"ENSEMBL GTF Header is of unexpected length: \" +\n-                                header.size() + \" != \" + HEADER_NUM_LINES);\n-            }\n-            else {\n-                return false;\n+        // As it turns out, the ENSEMBL GTF header is pretty loosy-goosy.\n+        // No fields are required, and therefore it could actually be empty.", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MTA3NA==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391781074", "bodyText": "Yeah - according to the spec, you can get the version from the file names.\nI plan on implementing this after the NameAwareCodec PR goes in.", "author": "jonn-smith", "createdAt": "2020-03-12T17:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyOTk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDg4Ng==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391730886", "bodyText": "Are there fields that YOU require even if ENSEMBLE doesn't?  It might be a good idea to warn if things like the version are missing.", "author": "lbergelson", "createdAt": "2020-03-12T16:13:19Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/EnsemblGtfCodec.java", "diffHunk": "@@ -162,23 +203,27 @@ static boolean validateEnsemblGtfFeature(final GencodeGtfFeature feature) {\n      */\n     @VisibleForTesting\n     boolean validateHeader(final List<String> header, final boolean throwIfInvalid) {\n-        if ( header.size() != HEADER_NUM_LINES) {\n-            if ( throwIfInvalid ) {\n-                throw new UserException.MalformedFile(\n-                        \"ENSEMBL GTF Header is of unexpected length: \" +\n-                                header.size() + \" != \" + HEADER_NUM_LINES);\n-            }\n-            else {\n-                return false;\n+        // As it turns out, the ENSEMBL GTF header is pretty loosy-goosy.\n+        // No fields are required, and therefore it could actually be empty.\n+\n+        // Rather than attempting to validate the file, here we just\n+        // assert that all header lines begin with a comment (they should already).", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MjE3OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391782179", "bodyText": "I would love to make it more restrictive, but I don't want to require users to modify the files after downloading them.  If we end up writing a downloader tool that could create these metadata entries.\nI'm not sure adding in warnings will be productive - users should never be creating these files, they should just be downloading them directly from ENSEMBL.  So it's really an ENSEMBL issue.", "author": "jonn-smith", "createdAt": "2020-03-12T17:34:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4MzcyMw==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391883723", "bodyText": "That seems reasonable.", "author": "lbergelson", "createdAt": "2020-03-12T20:43:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDg4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTU2NA==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391731564", "bodyText": "static", "author": "lbergelson", "createdAt": "2020-03-12T16:14:13Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/GencodeGtfFeature.java", "diffHunk": "@@ -44,6 +44,15 @@\n \n     private static final Logger logger = LogManager.getLogger(GencodeGtfFeature.class);\n \n+    // ===========================================================================\n+\n+\n+    public static final String ANNOTATION_SOURCE_ENSEMBL = \"ENSEMBL\";\n+    public static final String ANNOTATION_SOURCE_HAVANA = \"HAVANA\";\n+    public static String ANNOTATION_SOURCE_ENA = \"ena\";", "originalCommit": "331b0e30b8ea0c93bc1da88acd4f17f51e3b373a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4Mjg0NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391782845", "bodyText": "final?\n:P", "author": "jonn-smith", "createdAt": "2020-03-12T17:35:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTU2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MjkxNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391782915", "bodyText": "Fixed.", "author": "jonn-smith", "createdAt": "2020-03-12T17:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTU2NA=="}], "type": "inlineReview"}, {"oid": "39bdddf1e8e7a0df63af56722250605299a75abe", "url": "https://github.com/broadinstitute/gatk/commit/39bdddf1e8e7a0df63af56722250605299a75abe", "message": "Addressing review comments.", "committedDate": "2020-03-12T17:42:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4NTMyOQ==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391885329", "bodyText": "shouldn't the other other implementation make use of this one now?", "author": "lbergelson", "createdAt": "2020-03-12T20:47:27Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/codecs/gtf/AbstractGtfCodec.java", "diffHunk": "@@ -521,6 +515,25 @@ boolean isLineCommented(final String line) {\n         return isCommented;\n     }\n \n+    /**\n+     * Checks whether the given line is commented out or not and if the content of the line begins with the given", "originalCommit": "39bdddf1e8e7a0df63af56722250605299a75abe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4OTU0Ng==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391889546", "bodyText": "Oops.  Yes it should!", "author": "jonn-smith", "createdAt": "2020-03-12T20:56:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4NTMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTI2OA==", "url": "https://github.com/broadinstitute/gatk/pull/6492#discussion_r391891268", "bodyText": "Fixed.", "author": "jonn-smith", "createdAt": "2020-03-12T21:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4NTMyOQ=="}], "type": "inlineReview"}, {"oid": "383e3c501b4f12592f749373d0cc4d032869a028", "url": "https://github.com/broadinstitute/gatk/commit/383e3c501b4f12592f749373d0cc4d032869a028", "message": "Fixed another code review comment.", "committedDate": "2020-03-12T20:59:35Z", "type": "commit"}]}