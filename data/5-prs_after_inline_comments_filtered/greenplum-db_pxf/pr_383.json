{"pr_number": 383, "pr_title": "Avro: support writing SMALLINT to Avro", "pr_createdAt": "2020-06-16T21:39:52Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/383", "timeline": [{"oid": "c4e0b54f12fdf3f965bb1170278bf54b152f62f4", "url": "https://github.com/greenplum-db/pxf/commit/c4e0b54f12fdf3f965bb1170278bf54b152f62f4", "message": "Avro: support writing SMALLINT to Avro\n\nThe Postgres/GPDB type SMALLINT has no corresponding Avro type[0].\n\nIn this commit we make SMALLINT types being written to Avro external\nsources appear as Avro integer type. For reading Avro data, the\nGreenplum external table should always use INT or BIGINT.\n\n[0] https://avro.apache.org/docs/current/spec.html#schema_primitive\n\nAuthored-by: Oliver Albertini <oalbertini@vmware.com>", "committedDate": "2020-06-16T22:28:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NjE0Mw==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r441656143", "bodyText": "I'm okay with this approach, but I'm wondering if we can use use a switch here instead? also, I'm wondering why we don't use the OneField type here and instead type check the value?", "author": "frankgh", "createdAt": "2020-06-17T15:59:49Z", "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/AvroResolver.java", "diffHunk": "@@ -145,6 +144,10 @@ public OneRow setFields(List<OneField> record) {\n             if (field.val instanceof byte[]) {\n                 field.val = ByteBuffer.wrap((byte[]) field.val);\n             }\n+            // Avro doesn't have a short, just an int type", "originalCommit": "c4e0b54f12fdf3f965bb1170278bf54b152f62f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4MzY5NA==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443083694", "bodyText": "Couldn't figure out how to do a switch with non-constant types (DataType.BYTEA.getOID(), etc.) but this does seem better now", "author": "oliverralbertini", "createdAt": "2020-06-20T00:23:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NjE0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NzE4MQ==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r441657181", "bodyText": "these should be static final String arrays\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String[] avroPrimitiveWritableTableCols = new String[]{\n          \n          \n            \n                private static final String[] AVRO_PRIMITIVE_WRITABLE_TABLE_COLS = new String[]{", "author": "frankgh", "createdAt": "2020-06-17T16:01:28Z", "path": "automation/src/test/java/org/greenplum/pxf/automation/features/avro/HdfsWritableAvroTest.java", "diffHunk": "@@ -24,8 +24,21 @@\n \n     private ReadableExternalTable readableExternalTable;\n     private ArrayList<File> filesToDelete;\n-    private final String[] avroPrimitiveTableCols = new String[]{\n+    private final String[] avroPrimitiveWritableTableCols = new String[]{", "originalCommit": "c4e0b54f12fdf3f965bb1170278bf54b152f62f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NzQ1Mw==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r441657453", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String[] avroPrimitiveReadableTableCols = new String[]{\n          \n          \n            \n                private static final String[] AVRO_PRIMITIVE_READABLE_TABLE_COLS = new String[]{", "author": "frankgh", "createdAt": "2020-06-17T16:01:55Z", "path": "automation/src/test/java/org/greenplum/pxf/automation/features/avro/HdfsWritableAvroTest.java", "diffHunk": "@@ -24,8 +24,21 @@\n \n     private ReadableExternalTable readableExternalTable;\n     private ArrayList<File> filesToDelete;\n-    private final String[] avroPrimitiveTableCols = new String[]{\n+    private final String[] avroPrimitiveWritableTableCols = new String[]{\n             \"type_int int\",\n+            \"type_smallint smallint\", // smallint\n+            \"type_long bigint\",\n+            \"type_float real\",\n+            \"type_double float8\",\n+            \"type_string text\",\n+            \"type_bytes bytea\",\n+            \"type_boolean bool\"\n+    };\n+    // values that were written from a smallint column (see above type_smallint)\n+    // must be read back into integer columns\n+    private final String[] avroPrimitiveReadableTableCols = new String[]{", "originalCommit": "c4e0b54f12fdf3f965bb1170278bf54b152f62f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c0058ca3f21fb78be7b5b1945f931d779501876", "url": "https://github.com/greenplum-db/pxf/commit/3c0058ca3f21fb78be7b5b1945f931d779501876", "message": "Avro: support writing SMALLINT to Avro\n\nThe Postgres/GPDB type SMALLINT has no corresponding Avro type[0].\n\nIn this commit we make SMALLINT types being written to Avro external\nsources appear as Avro integer type. For reading Avro data, the\nGreenplum external table should always use INT or BIGINT.\n\n[0] https://avro.apache.org/docs/current/spec.html#schema_primitive\n\nAuthored-by: Oliver Albertini <oalbertini@vmware.com>", "committedDate": "2020-06-19T01:53:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ0NA==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443090444", "bodyText": "wonder if you really need double cast, would just (int) field.val work ?", "author": "denalex", "createdAt": "2020-06-20T01:37:45Z", "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/AvroResolver.java", "diffHunk": "@@ -141,9 +140,12 @@ public OneRow setFields(List<OneField> record) {\n         GenericRecord genericRecord = new GenericData.Record((Schema) context.getMetadata());\n         int cnt = 0;\n         for (OneField field : record) {\n-            // Avro does not seem to understand regular byte arrays\n-            if (field.val instanceof byte[]) {\n+            if (field.type == DataType.BYTEA.getOID()) {\n+                // Avro does not seem to understand regular byte arrays\n                 field.val = ByteBuffer.wrap((byte[]) field.val);\n+            } else if (field.type == DataType.SMALLINT.getOID()) {\n+                // Avro doesn't have a short, just an int type\n+                field.val = (int) (short) field.val;", "originalCommit": "b150d46f6fef57ea316981562e69ca67641c66df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzODk5MQ==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443138991", "bodyText": "With just the single cast, the editor warns of redundant cast. An alternative is this if you prefer:\nfield.val = ((Short) field.val).intValue();", "author": "oliverralbertini", "createdAt": "2020-06-20T15:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTQxNQ==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443139415", "bodyText": "I think it's fine to keep it as is", "author": "frankgh", "createdAt": "2020-06-20T15:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc1NzI0Mw==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443757243", "bodyText": "To expand on this a bit, when just using (Integer) field.val or (int) field.val I see this error when the writable table has SMALLINT type:\ntype  Exception report   message   java.lang.Short cannot be cast to java.lang.Integer\nWhen casting between primitive types the above should work fine, but with reference types (I think) you need to cast twice in order to affect the underlying data (cast of a reference just changes the reference, not the data itself).", "author": "oliverralbertini", "createdAt": "2020-06-22T18:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ2NQ==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443090465", "bodyText": "wonder why this is no longer a member field ?", "author": "denalex", "createdAt": "2020-06-20T01:38:09Z", "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/AvroResolver.java", "diffHunk": "@@ -84,7 +83,7 @@ public AvroResolver() {\n     public void initialize(RequestContext requestContext) {\n         super.initialize(requestContext);\n \n-        hcfsType = HcfsType.getHcfsType(configuration, context);\n+        HcfsType hcfsType = HcfsType.getHcfsType(configuration, context);", "originalCommit": "b150d46f6fef57ea316981562e69ca67641c66df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTAzMg==", "url": "https://github.com/greenplum-db/pxf/pull/383#discussion_r443139032", "bodyText": "Was only needed for initialize().", "author": "oliverralbertini", "createdAt": "2020-06-20T15:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDQ2NQ=="}], "type": "inlineReview"}, {"oid": "d4c70ebc02151f806dd937da26e0d2c404e82abc", "url": "https://github.com/greenplum-db/pxf/commit/d4c70ebc02151f806dd937da26e0d2c404e82abc", "message": "Incorporate PR feedback\n\nAuthored-by: Oliver Albertini <oalbertini@vmware.com>", "committedDate": "2020-06-20T16:03:49Z", "type": "forcePushed"}, {"oid": "15a531876f341852f06f0cc65a311cd3329bff0b", "url": "https://github.com/greenplum-db/pxf/commit/15a531876f341852f06f0cc65a311cd3329bff0b", "message": "Avro: support writing SMALLINT to Avro\n\nThe Postgres/GPDB type SMALLINT has no corresponding Avro type[0].\n\nIn this commit we make SMALLINT types being written to Avro external\nsources appear as Avro integer type. For reading Avro data, the\nGreenplum external table should always use INT or BIGINT.\n\n[0] https://avro.apache.org/docs/current/spec.html#schema_primitive\n\nAuthored-by: Oliver Albertini <oalbertini@vmware.com>", "committedDate": "2020-06-22T17:43:28Z", "type": "commit"}, {"oid": "15a531876f341852f06f0cc65a311cd3329bff0b", "url": "https://github.com/greenplum-db/pxf/commit/15a531876f341852f06f0cc65a311cd3329bff0b", "message": "Avro: support writing SMALLINT to Avro\n\nThe Postgres/GPDB type SMALLINT has no corresponding Avro type[0].\n\nIn this commit we make SMALLINT types being written to Avro external\nsources appear as Avro integer type. For reading Avro data, the\nGreenplum external table should always use INT or BIGINT.\n\n[0] https://avro.apache.org/docs/current/spec.html#schema_primitive\n\nAuthored-by: Oliver Albertini <oalbertini@vmware.com>", "committedDate": "2020-06-22T17:43:28Z", "type": "forcePushed"}]}