{"pr_number": 421, "pr_title": "Deprecate THREAD_SAFE custom option", "pr_createdAt": "2020-08-18T16:07:17Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/421", "timeline": [{"oid": "76b2295f6c16dac2e09a035b892f87de079ebbdd", "url": "https://github.com/greenplum-db/pxf/commit/76b2295f6c16dac2e09a035b892f87de079ebbdd", "message": "Remove threadSafe locks\n\nCurrently we allow the bzip2 codec in when writing text and Avro formats\nto an external source.\n\nHowever, we do not run concurrent threads for bzip2 since it's not\nconsidered to be thread-safe. This might have been fixed by now, so we\nshould create an automation test to read/write files using bzip2\ncompression in multi-threaded mode to have assurance that bzip2 is now\nthread safe.\n\nEarlier versions of CBZip2InputStream, the library used by hadoop to\ndecode bzip2 files was not thread-safe. This shortcoming has been\naddressed in version 2.5.0 of hadoop [1]. Because PXF bundles newer\nhadoop libraries, it doesn't need to lock anymore, as these libraries\nare thread-safe now.\n\n[1] https://issues.apache.org/jira/browse/HADOOP-10614", "committedDate": "2020-08-18T14:45:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MDA4OQ==", "url": "https://github.com/greenplum-db/pxf/pull/421#discussion_r472380089", "bodyText": "I recall there was a log somewhere trying to log this value, has it already been fixed elsewhere ?", "author": "denalex", "createdAt": "2020-08-18T17:56:47Z", "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/rest/WritableResource.java", "diffHunk": "@@ -107,49 +107,26 @@ public WritableResource() {\n \n     /**\n      * This function is called when http://nn:port/pxf/{version}/Writable/stream?path=...\n-\t * is used.\n-\t *\n-\t * @param servletContext Servlet context contains attributes required by SecuredHDFS\n-\t * @param headers Holds HTTP headers from request\n-\t * @param path Holds URI path option used in this request\n-\t * @param inputStream stream of bytes to write from Gpdb\n+     * is used.\n+     *\n+     * @param servletContext Servlet context contains attributes required by SecuredHDFS\n+     * @param headers        Holds HTTP headers from request\n+     * @param inputStream    stream of bytes to write from Gpdb\n      * @return ok response if the operation finished successfully\n      * @throws Exception in case of wrong request parameters, failure to\n-     *             initialize bridge or to write data\n+     *                   initialize bridge or to write data\n      */\n     @POST\n     @Path(\"stream\")\n     @Consumes(MediaType.APPLICATION_OCTET_STREAM)\n     public Response stream(@Context final ServletContext servletContext,\n                            @Context HttpHeaders headers,\n-                           @QueryParam(\"path\") String path,", "originalCommit": "76b2295f6c16dac2e09a035b892f87de079ebbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTEwNQ==", "url": "https://github.com/greenplum-db/pxf/pull/421#discussion_r472381105", "bodyText": "we fix it as part of this PR. The path no longer comes as a query string parameter, but it is part of the request headers as the DATA-DIR header", "author": "frankgh", "createdAt": "2020-08-18T17:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MDA4OQ=="}], "type": "inlineReview"}]}