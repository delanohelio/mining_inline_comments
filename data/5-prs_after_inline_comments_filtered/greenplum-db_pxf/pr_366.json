{"pr_number": 366, "pr_title": "Migrate pxf-s3 to Spring Boot", "pr_createdAt": "2020-06-03T12:46:48Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/366", "timeline": [{"oid": "555dbbff690d731fc3804fad84c3b91c2e7ca095", "url": "https://github.com/greenplum-db/pxf/commit/555dbbff690d731fc3804fad84c3b91c2e7ca095", "message": "Migrate pxf-s3 to Spring Boot\n\n- Update top level build.gradle to include pxf-s3\n- Add new build.gradle for pxf-s3\n- all existing unit tests should be ported to junit 5", "committedDate": "2020-06-03T12:45:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMjQzMA==", "url": "https://github.com/greenplum-db/pxf/pull/366#discussion_r434712430", "bodyText": "why do we want to do this now ? by this point we already read all data and just failed to close the stream, this is usually ignored as the stream itself will be GC-ed in a short while and the caller does not get any impact from this error ?", "author": "denalex", "createdAt": "2020-06-03T16:48:54Z", "path": "server/pxf-s3/src/main/java/org/greenplum/pxf/plugins/s3/S3SelectAccessor.java", "diffHunk": "@@ -129,9 +139,16 @@ public void closeForRead() throws Exception {\n                 LOG.debug(\"ResultInputStream closed\");\n             } catch (IOException e) {\n                 LOG.error(\"Unable to close ResultInputStream\", e);\n+                error = defaultIfNull(error, e);\n             }\n         }\n \n+        if (error != null) {\n+            // If there's an error during closing of streams, report the first\n+            // encountered error\n+            throw error;\n+        }\n+", "originalCommit": "555dbbff690d731fc3804fad84c3b91c2e7ca095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyMjk4Ng==", "url": "https://github.com/greenplum-db/pxf/pull/366#discussion_r434722986", "bodyText": "The error is swallowed by the BridgeResponse take a look at: https://github.com/greenplum-db/pxf/blob/spring-boot/server/pxf-service/src/main/java/org/greenplum/pxf/service/rest/BridgeResponse.java#L87 but I still think we should report errors generated during the stream closing, and they should be handled by the caller. The result is the same for the end user", "author": "frankgh", "createdAt": "2020-06-03T17:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMjQzMA=="}], "type": "inlineReview"}]}