{"pr_number": 17546, "pr_title": "Add The caller stacktrace to rethrown async Runtime exceptions", "pr_createdAt": "2020-09-15T10:57:43Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17546", "timeline": [{"oid": "8f9abfd19b695989c860bc12cdc10e092bd13c02", "url": "https://github.com/hazelcast/hazelcast/commit/8f9abfd19b695989c860bc12cdc10e092bd13c02", "message": "refactor out tryCreateException  method", "committedDate": "2020-09-16T11:44:42Z", "type": "forcePushed"}, {"oid": "cb7bd2c7fff9966947538a9cca69a393af261dd8", "url": "https://github.com/hazelcast/hazelcast/commit/cb7bd2c7fff9966947538a9cca69a393af261dd8", "message": "refactor out tryCreateException  method", "committedDate": "2020-09-17T08:39:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxODkzNw==", "url": "https://github.com/hazelcast/hazelcast/pull/17546#discussion_r492218937", "bodyText": "The exception handling should still happen only inside the if (response instanceof ExceptionalResult) { block, instead of replacing the response value and working on that. For example if response is a RuntimeException instance (as a normal return value, not an exceptional response), with the previous code it would be returned as the normal return value but now it will be regarded as an exceptional outcome.\nTake this as an example:\nHazelcastInstance hz = Hazelcast.newHazelcastInstance();\nIAtomicReference ref = hz.getCPSubsystem().getAtomicReference(\"test\");\nref.set(new RuntimeException(\"boom!\"));\nSystem.out.println(ref.getAsync().toCompletableFuture().get());\n\nWith previous code it works properly, returning the RuntimeException instance, while with this code it throws\nException in thread \"main\" java.util.concurrent.ExecutionException: java.lang.RuntimeException: boom!\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:121)\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:100)\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:600)\n\tat Scratch.main(scratch_148.java:17)\nCaused by: java.lang.RuntimeException: boom!\n\tat Scratch.main(scratch_148.java:16)\n\tat ------ submitted from ------.()\n\tat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:266)\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:111)\n\t... 3 more", "author": "vbekiaris", "createdAt": "2020-09-21T17:12:37Z", "path": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/InvocationFuture.java", "diffHunk": "@@ -99,21 +101,27 @@ protected E resolveAndThrowIfException(Object unresolved) throws ExecutionExcept\n     }\n \n     // public for tests\n-    public static <T> T returnOrThrowWithGetConventions(Object resolved) throws ExecutionException, InterruptedException {\n-        if (!(resolved instanceof ExceptionalResult)) {\n-            return (T) resolved;\n-        } else {\n-            Throwable cause = ((ExceptionalResult) resolved).getCause();\n-            if (cause instanceof CancellationException) {\n-                throw (CancellationException) cause;\n-            } else if (cause instanceof ExecutionException) {\n-                throw (ExecutionException) cause;\n-            } else if (cause instanceof InterruptedException) {\n-                throw (InterruptedException) cause;\n+    public static <T> T returnOrThrowWithGetConventions(Object response) throws ExecutionException, InterruptedException {\n+        if (response instanceof ExceptionalResult) {", "originalCommit": "cb7bd2c7fff9966947538a9cca69a393af261dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNTY1MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17546#discussion_r493235651", "bodyText": "Good catch. I have restored the behavior. The code in the ClientInvocationFuture misguided me, and it seems that it was wrong in the first place.", "author": "sancar", "createdAt": "2020-09-23T06:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxODkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1MTAzNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17546#discussion_r493351034", "bodyText": "minor: comment in previous line should be updated to reflect new behaviour", "author": "vbekiaris", "createdAt": "2020-09-23T09:13:16Z", "path": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_ExceptionTest.java", "diffHunk": "@@ -76,7 +76,7 @@\n                               new RootCauseMatcher(Exception.class, \"message\")},\n                 // Error subclass is wrapped in instance of same class\n                 new Object[] {JOIN_INTERNAL, new ExceptionInInitializerError(\"message\"), ExceptionInInitializerError.class,\n-                              new RootCauseMatcher(ExceptionInInitializerError.class, \"message\")},\n+                        IsNull.nullValue(Throwable.class)},", "originalCommit": "168b33d029cc0bd24fa06187bea239129fd3627d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4MTUyOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17546#discussion_r493381528", "bodyText": "It seems we only test client futures behaviour with RuntimeException in this test. For member-side invocations, Invocation_ExceptionTest tests those cases. Can we add a similar test for client invocation future?", "author": "vbekiaris", "createdAt": "2020-09-23T09:43:54Z", "path": "hazelcast/src/test/java/com/hazelcast/client/impl/ClientDelegatingFutureTest.java", "diffHunk": "@@ -117,7 +117,6 @@ public void joinInternal_whenCompletedExceptionally() {\n         invocationFuture.completeExceptionally(new IllegalArgumentException());\n \n         expected.expect(IllegalArgumentException.class);\n-        expected.expectCause(new RootCauseMatcher(IllegalArgumentException.class));", "originalCommit": "168b33d029cc0bd24fa06187bea239129fd3627d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a32ad0970e0118dd8ae3bf94b9b782ca4b63268e", "url": "https://github.com/hazelcast/hazelcast/commit/a32ad0970e0118dd8ae3bf94b9b782ca4b63268e", "message": "Add The caller stacktrace to rethrown async Runtime exceptions\n\nClient and Member stacktrace is missing the caller stacktrace.\nThis results with a  bad debugging analysis experience.\nA user exception without the fix is as follows:\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\nIn this pr, as a solution, we are cloning the original exception on the caller side.\nThe message and the cause is the same as the original one.\nOnly difference is that the caller stacktrace is added on top of the async stacktrace.\n\nNote that this is different than the solution before 4.x.\nWe were not cloning the exception and it was causing race conditions.\nsee https://github.com/hazelcast/hazelcast/issues/6247\n\nAlso note that this solution is different than the solution we have in future.joinInternal.\nIn https://github.com/hazelcast/hazelcast/pull/17212, we tried to apply the same solution\nin `joinInternal` but changing the cause hierarchy caused problems.\nInstead we have changed both future.joinInternal and future.get logic to do the clone.\n\nClient stack trace when future.get is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:213)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:603)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:588)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:547)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:244)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\nat com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\nat com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:192)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:108)\nat com.hazelcast.client.impl.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:95)\nat com.hazelcast.client.impl.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:40)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:601)\nat com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:188)\nat com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:182)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:529)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\nat XOutOfThinAirStackTrace.onClient(XOutOfThinAirStackTrace.java:42)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:16)\n```\n\nClient stacktrace when InvocationFuture.joinInternal is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:213)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:603)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:588)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:547)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:244)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\nat com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\nat com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:192)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapRuntimeException(AbstractInvocationFuture.java:1931)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapOrPeel(AbstractInvocationFuture.java:1912)\nat com.hazelcast.spi.impl.AbstractInvocationFuture$ExceptionalResult.wrapForJoinInternal(AbstractInvocationFuture.java:1391)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.resolveAndThrowForJoinInternal(AbstractInvocationFuture.java:584)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.joinInternal(AbstractInvocationFuture.java:568)\nat com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:188)\nat com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:183)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:525)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\nat XOutOfThinAirStackTrace.onClient(XOutOfThinAirStackTrace.java:42)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:16)\n```\n\nMember stack trace when future.get is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:108)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:99)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:601)\nat com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:473)\nat com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:131)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:121)\nat XOutOfThinAirStackTrace.onliteMember(XOutOfThinAirStackTrace.java:29)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:15)\n```\n\nMember stacktrace when InvocationFuture.joinInternal is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapRuntimeException(AbstractInvocationFuture.java:1931)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapOrPeel(AbstractInvocationFuture.java:1912)\nat com.hazelcast.spi.impl.AbstractInvocationFuture$ExceptionalResult.wrapForJoinInternal(AbstractInvocationFuture.java:1391)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.resolveAndThrowForJoinInternal(AbstractInvocationFuture.java:584)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.joinInternal(AbstractInvocationFuture.java:568)\nat com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:473)\nat com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:131)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:121)\nat XOutOfThinAirStackTrace.onliteMember(XOutOfThinAirStackTrace.java:29)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:15)\n```", "committedDate": "2020-09-24T14:11:15Z", "type": "commit"}, {"oid": "a32ad0970e0118dd8ae3bf94b9b782ca4b63268e", "url": "https://github.com/hazelcast/hazelcast/commit/a32ad0970e0118dd8ae3bf94b9b782ca4b63268e", "message": "Add The caller stacktrace to rethrown async Runtime exceptions\n\nClient and Member stacktrace is missing the caller stacktrace.\nThis results with a  bad debugging analysis experience.\nA user exception without the fix is as follows:\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\nIn this pr, as a solution, we are cloning the original exception on the caller side.\nThe message and the cause is the same as the original one.\nOnly difference is that the caller stacktrace is added on top of the async stacktrace.\n\nNote that this is different than the solution before 4.x.\nWe were not cloning the exception and it was causing race conditions.\nsee https://github.com/hazelcast/hazelcast/issues/6247\n\nAlso note that this solution is different than the solution we have in future.joinInternal.\nIn https://github.com/hazelcast/hazelcast/pull/17212, we tried to apply the same solution\nin `joinInternal` but changing the cause hierarchy caused problems.\nInstead we have changed both future.joinInternal and future.get logic to do the clone.\n\nClient stack trace when future.get is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:213)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:603)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:588)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:547)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:244)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\nat com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\nat com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:192)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:108)\nat com.hazelcast.client.impl.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:95)\nat com.hazelcast.client.impl.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:40)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:601)\nat com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:188)\nat com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:182)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:529)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\nat XOutOfThinAirStackTrace.onClient(XOutOfThinAirStackTrace.java:42)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:16)\n```\n\nClient stacktrace when InvocationFuture.joinInternal is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:213)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:603)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:588)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:547)\nat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:244)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\nat com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\nat com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\nat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:192)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapRuntimeException(AbstractInvocationFuture.java:1931)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapOrPeel(AbstractInvocationFuture.java:1912)\nat com.hazelcast.spi.impl.AbstractInvocationFuture$ExceptionalResult.wrapForJoinInternal(AbstractInvocationFuture.java:1391)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.resolveAndThrowForJoinInternal(AbstractInvocationFuture.java:584)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.joinInternal(AbstractInvocationFuture.java:568)\nat com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:188)\nat com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:183)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:525)\nat com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\nat XOutOfThinAirStackTrace.onClient(XOutOfThinAirStackTrace.java:42)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:16)\n```\n\nMember stack trace when future.get is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.returnOrThrowWithGetConventions(InvocationFuture.java:108)\nat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:99)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:601)\nat com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:473)\nat com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:131)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:121)\nat XOutOfThinAirStackTrace.onliteMember(XOutOfThinAirStackTrace.java:29)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:15)\n```\n\nMember stacktrace when InvocationFuture.joinInternal is used on the proxy.\n```\njava.lang.RuntimeException: BOOM\nat com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\nat com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\nat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:256)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:237)\nat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:452)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\nat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\nat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nat ------ submitted from ------.()\nat com.hazelcast.internal.util.ExceptionUtil.cloneExceptionWithFixedAsyncStackTrace(ExceptionUtil.java:218)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapRuntimeException(AbstractInvocationFuture.java:1931)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.wrapOrPeel(AbstractInvocationFuture.java:1912)\nat com.hazelcast.spi.impl.AbstractInvocationFuture$ExceptionalResult.wrapForJoinInternal(AbstractInvocationFuture.java:1391)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.resolveAndThrowForJoinInternal(AbstractInvocationFuture.java:584)\nat com.hazelcast.spi.impl.AbstractInvocationFuture.joinInternal(AbstractInvocationFuture.java:568)\nat com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:473)\nat com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:131)\nat com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:121)\nat XOutOfThinAirStackTrace.onliteMember(XOutOfThinAirStackTrace.java:29)\nat XOutOfThinAirStackTrace.main(XOutOfThinAirStackTrace.java:15)\n```", "committedDate": "2020-09-24T14:11:15Z", "type": "forcePushed"}]}