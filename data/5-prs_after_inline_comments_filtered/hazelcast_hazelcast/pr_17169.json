{"pr_number": 17169, "pr_title": "Put node wide map loader limit", "pr_createdAt": "2020-07-02T15:33:58Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17169", "timeline": [{"oid": "9805c5adf2bca759e211ab1f8a3624fe9e370cab", "url": "https://github.com/hazelcast/hazelcast/commit/9805c5adf2bca759e211ab1f8a3624fe9e370cab", "message": "Put node wide map loader limit", "committedDate": "2020-08-17T08:59:10Z", "type": "forcePushed"}, {"oid": "e4a0d60434459b3ca4e6942a59031f35fd3e7425", "url": "https://github.com/hazelcast/hazelcast/commit/e4a0d60434459b3ca4e6942a59031f35fd3e7425", "message": "Put node wide map loader limit", "committedDate": "2020-08-19T09:28:29Z", "type": "forcePushed"}, {"oid": "373369f304e15d7589c727fd3c95b1f2b3039a38", "url": "https://github.com/hazelcast/hazelcast/commit/373369f304e15d7589c727fd3c95b1f2b3039a38", "message": "Put node wide map loader limit", "committedDate": "2020-08-27T18:05:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4NjYyMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17169#discussion_r480986623", "bodyText": "Here we need to validate a positive value of nodeEngine.getProperties().getInteger(LOADED_KEY_LIMITER), otherwise the map loader will be stuck", "author": "vbekiaris", "createdAt": "2020-09-01T09:05:59Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapServiceContextImpl.java", "diffHunk": "@@ -173,6 +176,7 @@\n         this.operationProviders = createOperationProviders();\n         this.partitioningStrategyFactory = new PartitioningStrategyFactory(nodeEngine.getConfigClassLoader());\n         this.nodeWideUsedCapacityCounter = new NodeWideUsedCapacityCounter(nodeEngine.getProperties());\n+        this.loadedKeyLimiter = new Semaphore(nodeEngine.getProperties().getInteger(LOADED_KEY_LIMITER));", "originalCommit": "373369f304e15d7589c727fd3c95b1f2b3039a38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1MDM3Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17169#discussion_r482050372", "bodyText": "done", "author": "ahmetmircik", "createdAt": "2020-09-02T13:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4NjYyMw=="}], "type": "inlineReview"}, {"oid": "480e1ccf6aa31be37b3619e896c78e72c4334928", "url": "https://github.com/hazelcast/hazelcast/commit/480e1ccf6aa31be37b3619e896c78e72c4334928", "message": "Address Vassilis commnets", "committedDate": "2020-09-02T11:32:08Z", "type": "forcePushed"}, {"oid": "456b716bbc5927b3045844af18a51ead39055aec", "url": "https://github.com/hazelcast/hazelcast/commit/456b716bbc5927b3045844af18a51ead39055aec", "message": "Address Vassilis commnets", "committedDate": "2020-09-05T09:01:40Z", "type": "forcePushed"}, {"oid": "456b716bbc5927b3045844af18a51ead39055aec", "url": "https://github.com/hazelcast/hazelcast/commit/456b716bbc5927b3045844af18a51ead39055aec", "message": "Address Vassilis commnets", "committedDate": "2020-09-05T09:01:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MTAxMA==", "url": "https://github.com/hazelcast/hazelcast/pull/17169#discussion_r484361010", "bodyText": "I wonder if we should use .acquire() here or drop in an IdleStrategy. As I understand if this method returns an empty batch, we call this method in a tight loop until the semaphore gives us the green light to proceed. Along the path, we create hashmaps etc.\nAs a second thought, shouldn't the semaphore be checked for available permits in MapKeyLoader#sendKeysInBatches in its\nwhile (batches.hasNext()) {\n                Map<Integer, List<Data>> batch = batches.next();\n                futures.addAll(sendBatch(batch, replaceExistingValues, nodeWideLoadedKeyLimiter));\n            }\n\nloop? Then the whole concurrency control would be in the same class and avoiding unnecessary allocations would be easier. WDYT?", "author": "blazember", "createdAt": "2020-09-07T11:03:41Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapKeyLoaderUtil.java", "diffHunk": "@@ -110,13 +112,19 @@ public boolean hasNext() {\n      * until at least one group has up to {@code maxBatch}\n      * entries or until the {@code entries} have been exhausted.\n      *\n-     * @param entries  the entries to be grouped by key\n-     * @param maxBatch the maximum size of a group\n+     * @param entries                  the entries to be grouped by key\n+     * @param maxBatch                 the maximum size of a group\n+     * @param nodeWideLoadedKeyLimiter controls the loaded number of keys per node\n      * @return the grouped entries by entry key\n      */\n-    private static Map<Integer, List<Data>> nextBatch(Iterator<Entry<Integer, Data>> entries, int maxBatch) {\n+    private static Map<Integer, List<Data>> nextBatch(Iterator<Entry<Integer, Data>> entries,\n+                                                      int maxBatch, Semaphore nodeWideLoadedKeyLimiter) {\n         Map<Integer, List<Data>> batch = createHashMap(maxBatch);\n         while (entries.hasNext()) {\n+            if (!nodeWideLoadedKeyLimiter.tryAcquire()) {", "originalCommit": "456b716bbc5927b3045844af18a51ead39055aec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNDI2OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17169#discussion_r484504268", "bodyText": "Acquire is not an option, since we have to return from method. But adding an idle-strategy makes sense. I have added it.", "author": "ahmetmircik", "createdAt": "2020-09-07T15:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MTAxMA=="}], "type": "inlineReview"}, {"oid": "8fbbc0682f7092a428d03adcb85b6157d177c6d4", "url": "https://github.com/hazelcast/hazelcast/commit/8fbbc0682f7092a428d03adcb85b6157d177c6d4", "message": "Put node wide map loader limit", "committedDate": "2020-09-07T14:16:33Z", "type": "commit"}, {"oid": "d0010587976551b40593f3daa79690b7561c1108", "url": "https://github.com/hazelcast/hazelcast/commit/d0010587976551b40593f3daa79690b7561c1108", "message": "Address Vassilis commnets", "committedDate": "2020-09-07T14:16:33Z", "type": "commit"}, {"oid": "7a3153cd7818745e95125c9f3a1a29c2acd08b9c", "url": "https://github.com/hazelcast/hazelcast/commit/7a3153cd7818745e95125c9f3a1a29c2acd08b9c", "message": "Address Zoltan commnets", "committedDate": "2020-09-07T15:54:33Z", "type": "forcePushed"}, {"oid": "31efcee0192f681d8734acb4ee59e503c8cc5023", "url": "https://github.com/hazelcast/hazelcast/commit/31efcee0192f681d8734acb4ee59e503c8cc5023", "message": "Address Zoltan comments", "committedDate": "2020-09-08T06:54:32Z", "type": "commit"}, {"oid": "31efcee0192f681d8734acb4ee59e503c8cc5023", "url": "https://github.com/hazelcast/hazelcast/commit/31efcee0192f681d8734acb4ee59e503c8cc5023", "message": "Address Zoltan comments", "committedDate": "2020-09-08T06:54:32Z", "type": "forcePushed"}]}