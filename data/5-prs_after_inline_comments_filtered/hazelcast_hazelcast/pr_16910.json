{"pr_number": 16910, "pr_title": "Adv netw addressmap clientside", "pr_createdAt": "2020-04-21T16:26:15Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16910", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNjg0Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/16910#discussion_r414336847", "bodyText": "When this memberInfo is coming from 4.0 cluster, it will be null. The constructor will throw NullPointerException.\nI prefer not to put buildForClientView to MemberImpl.Builder for the client. The client logic should be handled in client packages.\nCan we check if the addressMap is null, and create the builder with address if it is there.\nOtherwise,\nCan we also put a backward compatibility test with 4.1 client against 4.0 cluster to make sure ?", "author": "sancar", "createdAt": "2020-04-24T06:50:22Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientClusterServiceImpl.java", "diffHunk": "@@ -233,11 +233,12 @@ private void applyInitialState(int version, Collection<MemberInfo> memberInfos)\n     private MemberListSnapshot createSnapshot(int memberListVersion, Collection<MemberInfo> memberInfos) {\n         LinkedHashMap<UUID, Member> newMembers = new LinkedHashMap<>();\n         for (MemberInfo memberInfo : memberInfos) {\n-            MemberImpl member = new MemberImpl.Builder(memberInfo.getAddress()).version(memberInfo.getVersion())\n+            MemberImpl member = new MemberImpl.Builder(memberInfo.getAddressMap())", "originalCommit": "949f53241ddc313b4957954979d8b08bcc2f0739", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE0OTg0NA==", "url": "https://github.com/hazelcast/hazelcast/pull/16910#discussion_r416149844", "bodyText": "Hello @sancar , thank you for the review.\n\nWhen this memberInfo is coming from 4.0 cluster, it will be null. The constructor will throw NullPointerException.\n\ngood catch, fixed\n\nI prefer not to put buildForClientView to MemberImpl.Builder for the client. The client logic should be handled in client packages.\n\nAgreed, refactored.\n\nCan we also put a backward compatibility test with 4.1 client against 4.0 cluster to make sure ?\n\nCan you please give me any clue on how to do that?", "author": "erosb", "createdAt": "2020-04-27T21:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNjg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NDQ2Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/16910#discussion_r415944463", "bodyText": "Can you change the ordinal value to 2 at the protocol side to use ProtocolType.WAN ? Because the binary encoder is encoding localhost as the identifier string for the EndpointQualifier. I see that we can specify a custom identifier using EndpointQualifier#resolve with the protocol type of WAN but it is not an option for other protocol types.\nWe can configure binary generator to encode custom values for fix sized types(as you did with ordinal), but there is no way to do so for var sized types in the protocol code generator. I think we should also provide an option for var sized types. I will create an issue for that.", "author": "mdumandag", "createdAt": "2020-04-27T16:04:56Z", "path": "hazelcast/src/test/java/com/hazelcast/client/protocol/compatibility/ReferenceObjects.java", "diffHunk": "@@ -782,7 +785,9 @@ private static boolean isEqualStackTrace(StackTraceElement stackTraceElement1, S\n             aBoolean, aBoolean, aBoolean, aBoolean, aHotRestartConfig, anEventJournalConfig, aString, aListOfData,\n             aMergePolicyConfig, aBoolean, aListOfListenerConfigHolders);\n     private static MemberVersion aMemberVersion = new MemberVersion(aByte, aByte, aByte);\n-    public static Collection<MemberInfo> aListOfMemberInfos = Collections.singletonList(new MemberInfo(anAddress, aUUID, aMapOfStringToString, aBoolean, aMemberVersion));\n+    public static Collection<MemberInfo> aListOfMemberInfos = Collections.singletonList(new MemberInfo(anAddress, aUUID, aMapOfStringToString, aBoolean, aMemberVersion,\n+            ImmutableMap.of(EndpointQualifier.MEMBER, anAddress)));", "originalCommit": "4521d6dcd38f464fba6b67f4d2b7a7faf8d9c622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE1Mzk0Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/16910#discussion_r416153942", "bodyText": "Can you change the ordinal value to 2 at the protocol side to use ProtocolType.WAN ?\n\nGreat idea, thank you, this helped a lot.\n\nbut there is no way to do so for var sized types\n\nyep, I found the same. I think in binary/util.py, VarSizedParamEncoder#encode_var_sized_frame() has to be improved to do something similar to CustomTypeEncoder#create_initial_frame() (reading from reference_objects.objects). To do it, I think custom_type_name has to be passed to #encode_var_sized_frame() but that method is called from an other place too. I didn't dig deeper today.", "author": "erosb", "createdAt": "2020-04-27T21:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0NDQ2Mw=="}], "type": "inlineReview"}, {"oid": "aba93f61eabb363bfff3f0666eaa581b1bcca329", "url": "https://github.com/hazelcast/hazelcast/commit/aba93f61eabb363bfff3f0666eaa581b1bcca329", "message": "WIP - client-side handling of Member#getAddressMap()\n\nrestoring previous Member#getAddress() behavior\n\ncode cleanup\n\ncheckstyle fixes\n\ncheckstyle fix\n\nfixing failing tests\n\ncheckstyle fix\n\ntest fixes\n\nfixing checkstyle error in generated code (?)\n\nbetter fixing prev. commit (fixing template in client-protocol code template)\n\nre-generated compatibility tests\n\nencoding ProtocolType by its ordinal\n\nupdating ReferenceObjects to use ProtocolType#WAN in EndpointQualifier (fixes failing tests)\n\naddressing PR comment, removing MemberImpl#Builder#buildForClient()\n\nfixing test failures\n\nfixing failing test", "committedDate": "2020-04-28T17:05:50Z", "type": "commit"}, {"oid": "aba93f61eabb363bfff3f0666eaa581b1bcca329", "url": "https://github.com/hazelcast/hazelcast/commit/aba93f61eabb363bfff3f0666eaa581b1bcca329", "message": "WIP - client-side handling of Member#getAddressMap()\n\nrestoring previous Member#getAddress() behavior\n\ncode cleanup\n\ncheckstyle fixes\n\ncheckstyle fix\n\nfixing failing tests\n\ncheckstyle fix\n\ntest fixes\n\nfixing checkstyle error in generated code (?)\n\nbetter fixing prev. commit (fixing template in client-protocol code template)\n\nre-generated compatibility tests\n\nencoding ProtocolType by its ordinal\n\nupdating ReferenceObjects to use ProtocolType#WAN in EndpointQualifier (fixes failing tests)\n\naddressing PR comment, removing MemberImpl#Builder#buildForClient()\n\nfixing test failures\n\nfixing failing test", "committedDate": "2020-04-28T17:05:50Z", "type": "forcePushed"}]}