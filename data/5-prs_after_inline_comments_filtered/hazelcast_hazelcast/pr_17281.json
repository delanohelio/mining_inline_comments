{"pr_number": 17281, "pr_title": "Update SQL public API to include update count", "pr_createdAt": "2020-07-30T15:27:59Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17281", "timeline": [{"oid": "20ff53cda29eddf56d1fa3364defb75c7b33f198", "url": "https://github.com/hazelcast/hazelcast/commit/20ff53cda29eddf56d1fa3364defb75c7b33f198", "message": "Update SQL public API to include update count\n\nClient protocol PR: hazelcast/hazelcast-client-protocol#332", "committedDate": "2020-07-30T15:09:01Z", "type": "commit"}, {"oid": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "url": "https://github.com/hazelcast/hazelcast/commit/4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "message": "Add tests", "committedDate": "2020-07-30T15:27:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxNzgyNQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r463417825", "bodyText": "Looks like this should be changed to hazelcastInstance.getSql().query(\"UPDATE ...\").updatedCount()", "author": "devozerov", "createdAt": "2020-07-31T05:51:18Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlResult.java", "diffHunk": "@@ -35,13 +41,32 @@\n  * }\n  * </pre>\n  *\n- * @see #iterator()\n- * @see #close()\n+ * <p>\n+ * <h4>Usage for update count</h4>\n+ *\n+ * <pre>\n+ *     long updated = hazelcastInstance.getSql().query(\"UPDATE ...\");", "originalCommit": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxODE1NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r463418155", "bodyText": "There is an inconsistency in naming: updatedCount, but is isUpdateCount.\nShould we rename this method to JDBC-like updateCount?", "author": "devozerov", "createdAt": "2020-07-31T05:52:29Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlResult.java", "diffHunk": "@@ -53,17 +78,28 @@\n      * The iterator may be requested only once.\n      *\n      * @return iterator\n-     * @throws IllegalStateException if the method is invoked more than once\n+     * @throws IllegalStateException if the method is invoked more than once or\n+     *    if this result doesn't have rows (i.e. when {@link #isUpdateCount()}\n+     *    returns {@code true})\n      * @throws SqlException in case of an SQL-related error condition\n      */\n     @Nonnull\n     @Override\n     Iterator<SqlRow> iterator();\n \n     /**\n-     * Release the resources associated with the query result.\n+     * Returns the number of rows updated by the execution.\n+     *\n+     * @throws IllegalStateException if this result doesn't represent an update\n+     *     count (i.e. when {@link #isUpdateCount()} returns {@code false})\n+     */\n+    long updatedCount();", "originalCommit": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzNjU3Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r464236577", "bodyText": "agree", "author": "viliam-durina", "createdAt": "2020-08-03T07:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxODE1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTA5NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r463419095", "bodyText": "In JDBC, if the result is a result set, then -1 is returned. But we throw an exception.\nNot advocating for any of these approaches, my question is - do we have any specific reason to prefer one over the other? One minor advantage of the -1 marker, is that we may use it instead of isUpdateCount to check for result type.", "author": "devozerov", "createdAt": "2020-07-31T05:55:57Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlResult.java", "diffHunk": "@@ -53,17 +78,28 @@\n      * The iterator may be requested only once.\n      *\n      * @return iterator\n-     * @throws IllegalStateException if the method is invoked more than once\n+     * @throws IllegalStateException if the method is invoked more than once or\n+     *    if this result doesn't have rows (i.e. when {@link #isUpdateCount()}\n+     *    returns {@code true})\n      * @throws SqlException in case of an SQL-related error condition\n      */\n     @Nonnull\n     @Override\n     Iterator<SqlRow> iterator();\n \n     /**\n-     * Release the resources associated with the query result.\n+     * Returns the number of rows updated by the execution.\n+     *\n+     * @throws IllegalStateException if this result doesn't represent an update", "originalCommit": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI0MDA1Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r464240056", "bodyText": "I think it's the symmetry between iterator() and updateCount() - they throw if called for an incorrect result type. Also my point is that one should know what should be the result type for a particular query. We even advocate for not calling isUpdateCount but directly calling the method to get the particular type of result. isUpdateCount is meant for a generic query UI.", "author": "viliam-durina", "createdAt": "2020-08-03T07:30:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI0MzE4NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r464243185", "bodyText": "Also in Jet we won't implement update count for DML. In that case the -1 return value will mean that the update count is unknown, not that there are rows. We would need two return values, e.g.:\n\n-1: unknown update count\n-2: not a result with update count, but with rows", "author": "viliam-durina", "createdAt": "2020-08-03T07:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM3MjEyOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r464372128", "bodyText": "Makes sense, thank you", "author": "devozerov", "createdAt": "2020-08-03T12:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTA5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTgzNQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r463419835", "bodyText": "A minor thought to consider - we may have a method to check for \"update count\", like now, or we may have a method to check for result set, e.g. hasResultSet. Which one is better?", "author": "devozerov", "createdAt": "2020-07-31T05:58:37Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlResult.java", "diffHunk": "@@ -35,13 +41,32 @@\n  * }\n  * </pre>\n  *\n- * @see #iterator()\n- * @see #close()\n+ * <p>\n+ * <h4>Usage for update count</h4>\n+ *\n+ * <pre>\n+ *     long updated = hazelcastInstance.getSql().query(\"UPDATE ...\");\n+ * </pre>\n+ *\n+ * You don't need to call {@link #close()} in this case.\n  */\n public interface SqlResult extends Iterable<SqlRow>, AutoCloseable {\n+\n+    /**\n+     * If this result represents a row set, this method returns {@code false}.\n+     * If this result represents an update count (such as for a DML query), it\n+     * returns {@code true}.\n+     *\n+     * @return {@code false} for a rows result and {@code true} for an update\n+     *     count result\n+     */\n+    boolean isUpdateCount();", "originalCommit": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI0NDk3MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r464244970", "bodyText": "I liked the isUpdateCount better, but would find hasResultSet just as fine...", "author": "viliam-durina", "createdAt": "2020-08-03T07:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxOTgzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMDAzMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17281#discussion_r463420033", "bodyText": "On the protocol level, we may encode the missing update count as -1 and thus avoid this flag.", "author": "devozerov", "createdAt": "2020-07-31T05:59:19Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/SqlExecuteCodec.java", "diffHunk": "@@ -103,6 +105,10 @@ public static ClientMessage encodeRequest(java.lang.String sql, java.util.Collec\n \n     @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n     public static class ResponseParameters {\n+        /**\n+         * True, if this result is an update count, false, if it contains rows.\n+         */\n+        public boolean isUpdateCount;", "originalCommit": "4b82c6c1bf045600c8ed5a1f11b4a8adf8aef056", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7443bf3a397a3d75b29736ed72f434d6fa0d5103", "url": "https://github.com/hazelcast/hazelcast/commit/7443bf3a397a3d75b29736ed72f434d6fa0d5103", "message": "Address some reviews", "committedDate": "2020-08-03T07:42:41Z", "type": "commit"}]}