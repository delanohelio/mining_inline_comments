{"pr_number": 17013, "pr_title": "Add new assertion to have better info about test failure", "pr_createdAt": "2020-05-27T07:13:06Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17013", "timeline": [{"oid": "80884c47c4cb3c5c4b45cfb61410c2cc26b9c695", "url": "https://github.com/hazelcast/hazelcast/commit/80884c47c4cb3c5c4b45cfb61410c2cc26b9c695", "message": "Use synchronized methods", "committedDate": "2020-05-27T07:13:37Z", "type": "forcePushed"}, {"oid": "6ed54cb9c8bf5d4be892ab9d368ed424b9c67243", "url": "https://github.com/hazelcast/hazelcast/commit/6ed54cb9c8bf5d4be892ab9d368ed424b9c67243", "message": "Use synchronized methods", "committedDate": "2020-05-27T09:03:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwNzU3Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17013#discussion_r432407576", "bodyText": "This smells like a design problem. The class is lock free and now get some locks.", "author": "pveentjer", "createdAt": "2020-05-29T10:53:34Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/querycache/accumulator/DefaultCyclicBuffer.java", "diffHunk": "@@ -33,37 +33,38 @@\n  */\n public class DefaultCyclicBuffer<E extends Sequenced> implements CyclicBuffer<E> {\n \n-    private static final long UNAVAILABLE = -1L;\n+    private static final long UNSET = -1L;\n \n     private int capacity;\n     private E[] buffer;\n     private AtomicLong headSequence;", "originalCommit": "6ed54cb9c8bf5d4be892ab9d368ed424b9c67243", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2OTIzMA==", "url": "https://github.com/hazelcast/hazelcast/pull/17013#discussion_r452169230", "bodyText": "put a new assertion to have much info about failure and removed locks", "author": "ahmetmircik", "createdAt": "2020-07-09T12:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwNzU3Ng=="}], "type": "inlineReview"}, {"oid": "487b7f2724cfb6eedaa98de7598a74d88ceb630f", "url": "https://github.com/hazelcast/hazelcast/commit/487b7f2724cfb6eedaa98de7598a74d88ceb630f", "message": "Rewrite checkPositive method", "committedDate": "2020-06-23T12:15:58Z", "type": "forcePushed"}, {"oid": "b91d172e90cd7bd96eda95c3022e3169931eb510", "url": "https://github.com/hazelcast/hazelcast/commit/b91d172e90cd7bd96eda95c3022e3169931eb510", "message": "Rewrite checkPositive method", "committedDate": "2020-06-23T14:38:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNjA1Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17013#discussion_r448936057", "bodyText": "Can you explain from which threads this buffer is accessed, how and when? Why the need for such coarse synchronization?", "author": "mmedenjak", "createdAt": "2020-07-02T11:32:00Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/querycache/accumulator/DefaultCyclicBuffer.java", "diffHunk": "@@ -33,37 +33,38 @@\n  */\n public class DefaultCyclicBuffer<E extends Sequenced> implements CyclicBuffer<E> {", "originalCommit": "b91d172e90cd7bd96eda95c3022e3169931eb510", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2OTgwMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17013#discussion_r452169802", "bodyText": "put a new assertion to have much info about failure and removed synchronization. This class is accessed by partition threads.", "author": "ahmetmircik", "createdAt": "2020-07-09T12:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNjA1Nw=="}], "type": "inlineReview"}, {"oid": "e827156821805db59a1e3b72a55e1ac0b47a877e", "url": "https://github.com/hazelcast/hazelcast/commit/e827156821805db59a1e3b72a55e1ac0b47a877e", "message": "Rewrite checkPositive method", "committedDate": "2020-07-03T08:55:45Z", "type": "forcePushed"}, {"oid": "ae4c714661500f570e59d187c7fab58f9454b006", "url": "https://github.com/hazelcast/hazelcast/commit/ae4c714661500f570e59d187c7fab58f9454b006", "message": "Address review comments", "committedDate": "2020-07-09T12:07:07Z", "type": "forcePushed"}, {"oid": "dfd63b36a47341e4202a04bf43cb07152e60d218", "url": "https://github.com/hazelcast/hazelcast/commit/dfd63b36a47341e4202a04bf43cb07152e60d218", "message": "Use synchronized methods", "committedDate": "2020-08-04T07:47:02Z", "type": "commit"}, {"oid": "8498190548798fc433cc53be6eb75a694950a8de", "url": "https://github.com/hazelcast/hazelcast/commit/8498190548798fc433cc53be6eb75a694950a8de", "message": "Rewrite checkPositive method", "committedDate": "2020-08-04T07:47:02Z", "type": "commit"}, {"oid": "e082bdfc7643478305b3a2108050b4eb7ea722ff", "url": "https://github.com/hazelcast/hazelcast/commit/e082bdfc7643478305b3a2108050b4eb7ea722ff", "message": "Address review comments", "committedDate": "2020-08-04T07:47:02Z", "type": "commit"}, {"oid": "e082bdfc7643478305b3a2108050b4eb7ea722ff", "url": "https://github.com/hazelcast/hazelcast/commit/e082bdfc7643478305b3a2108050b4eb7ea722ff", "message": "Address review comments", "committedDate": "2020-08-04T07:47:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMjY5MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17013#discussion_r469202690", "bodyText": "How was it even possible in the previous code that the available was higher than the capacity?", "author": "mmedenjak", "createdAt": "2020-08-12T11:55:08Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/querycache/accumulator/DefaultCyclicBuffer.java", "diffHunk": "@@ -137,16 +138,11 @@ public int size() {\n         long head = headSequence.get();\n         long tail = tailSequence.get();\n \n-        if (tail == UNAVAILABLE) {\n+        if (tail == UNSET) {\n             return 0;\n         }\n \n-        int avail = (int) (tail - head + 1);\n-        if (avail <= capacity) {\n-            return avail;\n-        } else {\n-            return capacity;", "originalCommit": "e082bdfc7643478305b3a2108050b4eb7ea722ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}