{"pr_number": 17073, "pr_title": "Map Count with HotRestart enabled and atleast one index", "pr_createdAt": "2020-06-12T10:10:39Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17073", "timeline": [{"oid": "d6dc3a8689720e70924d0f4716047343afd58712", "url": "https://github.com/hazelcast/hazelcast/commit/d6dc3a8689720e70924d0f4716047343afd58712", "message": "Map Count with HotRestart enabled and atleast one index", "committedDate": "2020-06-12T10:08:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NzIxMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17073#discussion_r439357213", "bodyText": "I can't see where is the index added.", "author": "erosb", "createdAt": "2020-06-12T11:11:08Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeTest.java", "diffHunk": "@@ -167,5 +167,41 @@ public void testMapCountWithAtleastOneQueryCache() {\n         assertEquals(parameters.get(\"mpaoqcct\"), \"1\");\n \n     }\n+\n+    @Test\n+    public void testMapCountWithAtleastOneIndex() {\n+        Map<String, String> parameters;\n+        parameters = phoneHome.phoneHome(true);\n+        assertEquals(parameters.get(\"mpaoict\"), \"0\");\n+\n+        Map<String, String> map1 = node.hazelcastInstance.getMap(\"hazelcast\");\n+        parameters = phoneHome.phoneHome(true);\n+        assertEquals(parameters.get(\"mpaoict\"), \"0\");\n+\n+        map1.put(\"1\", \"hazelcast\");\n+        parameters = phoneHome.phoneHome(true);\n+        assertEquals(parameters.get(\"mpaoict\"), \"1\");", "originalCommit": "d6dc3a8689720e70924d0f4716047343afd58712", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NzM3OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17073#discussion_r439357378", "bodyText": "This isn't an index. It is a map entry.", "author": "erosb", "createdAt": "2020-06-12T11:11:29Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeIntegrationTest.java", "diffHunk": "@@ -47,9 +47,12 @@ public void testMapMetrics() {\n         PhoneHome phoneHome = new PhoneHome(node, \"http://localhost:8080/ping\");\n         Map<String, String> map1 = hz.getMap(\"hazelcast\");\n         Map<String, String> map2 = hz.getMap(\"phonehome\");\n+        map2.put(\"1\", \"hazelcast\");", "originalCommit": "d6dc3a8689720e70924d0f4716047343afd58712", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1OTM3NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17073#discussion_r439359375", "bodyText": "This counts the non-empty maps, not the maps with indexes. Please refer to the reference manual about indexing: https://docs.hazelcast.org/docs/latest-dev/manual/html-single/#indexing-queries", "author": "erosb", "createdAt": "2020-06-12T11:15:59Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/MapInfoCollector.java", "diffHunk": "@@ -77,4 +79,18 @@ private long countMapWithAtleastOneQueryCache(Node node) {\n         }).count();\n \n     }\n+\n+    private long countMapWithAtleastOneIndex(Node node) {\n+        return maps.stream().filter(distributedObject -> !(node.hazelcastInstance.getMap(distributedObject.getName()).isEmpty())).count();", "originalCommit": "d6dc3a8689720e70924d0f4716047343afd58712", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e81d9057811fc4e984d8492dcd546376f3a864cb", "url": "https://github.com/hazelcast/hazelcast/commit/e81d9057811fc4e984d8492dcd546376f3a864cb", "message": "Updates", "committedDate": "2020-06-12T14:07:26Z", "type": "commit"}]}