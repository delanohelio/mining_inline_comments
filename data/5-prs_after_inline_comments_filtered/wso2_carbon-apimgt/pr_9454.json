{"pr_number": 9454, "pr_title": "[APIM-4.0.0] Displaying comments with User Information.", "pr_createdAt": "2020-12-01T11:38:26Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9454", "timeline": [{"oid": "265a93d82f05676facc488307c7a9fda706b33f3", "url": "https://github.com/wso2/carbon-apimgt/commit/265a93d82f05676facc488307c7a9fda706b33f3", "message": "Adding userInfo to Comment API", "committedDate": "2020-12-01T06:10:23Z", "type": "commit"}, {"oid": "0b5ed2f1d2ef52cf9e702f7c13e80e195db6228e", "url": "https://github.com/wso2/carbon-apimgt/commit/0b5ed2f1d2ef52cf9e702f7c13e80e195db6228e", "message": "Retrieve user claims from user store", "committedDate": "2020-12-01T11:06:18Z", "type": "commit"}, {"oid": "4f2925ae5ecca5932ad30ba5e4171d2f51686c81", "url": "https://github.com/wso2/carbon-apimgt/commit/4f2925ae5ecca5932ad30ba5e4171d2f51686c81", "message": "Refractor the code", "committedDate": "2020-12-01T11:12:41Z", "type": "commit"}, {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504", "url": "https://github.com/wso2/carbon-apimgt/commit/a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504", "message": "Remove newlines", "committedDate": "2020-12-01T11:39:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjkzNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533906935", "bodyText": "This is only a formatting fix right?", "author": "malinthaprasan", "createdAt": "2020-12-02T05:32:54Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;", "originalCommit": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NDQ0MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533954441", "bodyText": "Yes", "author": "Sarangan0219", "createdAt": "2020-12-02T07:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjkzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533907457", "bodyText": "I feel this method doesn't look right to have in APIProviderImpl.\nShall we move this method to APIUtil itself?", "author": "malinthaprasan", "createdAt": "2020-12-02T05:34:29Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "originalCommit": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxMTg0MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533911841", "bodyText": "Ideal way to is to have these types of method in a separate Util class.. like APIMUserMgtUtils. please check with others as well.", "author": "malinthaprasan", "createdAt": "2020-12-02T05:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwNTIyNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r534305226", "bodyText": "In the APIUtil class, we have the base claims retriever method(getClaims()). The use cases which are using that method should come from the APIProviderImpl or APIConsumerImpl nah?", "author": "Sarangan0219", "createdAt": "2020-12-02T16:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk3MTQ5MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r534971491", "bodyText": "It is not necessary. APIProvider and APIConsumer classes are actually APIM Domain specific..\nAPIProvider -> publisher operations\nAPIConsumer -> devportal operations\nRetrieving user information is actually bit general and not specific to above two. So it is okay to have it in a Util class itself.", "author": "malinthaprasan", "createdAt": "2020-12-03T09:03:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MTUwMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r535841502", "bodyText": "According to our offline discussion created a new class APIRealmUtil to address this. Later we will port all user and role related methods from APIUtil class to this newly created class.\n9dce063", "author": "Sarangan0219", "createdAt": "2020-12-04T05:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}], "type": "inlineReview"}, {"oid": "219471b4eaadd05fd00560c3a5c735dedb45de6b", "url": "https://github.com/wso2/carbon-apimgt/commit/219471b4eaadd05fd00560c3a5c735dedb45de6b", "message": "Rename parameters", "committedDate": "2020-12-02T07:33:36Z", "type": "commit"}, {"oid": "9dce063165691739762701864b94109afae195e2", "url": "https://github.com/wso2/carbon-apimgt/commit/9dce063165691739762701864b94109afae195e2", "message": "Adding a new class for user Claims", "committedDate": "2020-12-04T04:30:38Z", "type": "commit"}, {"oid": "7f347218da3bc3c66d7372aa59eaf3712615db52", "url": "https://github.com/wso2/carbon-apimgt/commit/7f347218da3bc3c66d7372aa59eaf3712615db52", "message": "Remove unused Imports", "committedDate": "2020-12-04T05:27:30Z", "type": "commit"}, {"oid": "ade4270ea4836ea9b21931706e3a1b8e0a059ead", "url": "https://github.com/wso2/carbon-apimgt/commit/ade4270ea4836ea9b21931706e3a1b8e0a059ead", "message": "Update Resources to suppoer Query parameters", "committedDate": "2020-12-04T07:00:14Z", "type": "commit"}, {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "url": "https://github.com/wso2/carbon-apimgt/commit/37a27c833ab39d90fbe9713afc21544f8331c3cf", "message": "Optimize the code", "committedDate": "2020-12-08T11:24:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDUzOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538350539", "bodyText": "Please add license header", "author": "malinthaprasan", "createdAt": "2020-12-08T13:10:53Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "originalCommit": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDQ1NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510454", "bodyText": "866313d", "author": "Sarangan0219", "createdAt": "2020-12-08T15:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDUzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDY3NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538350674", "bodyText": "License header", "author": "malinthaprasan", "createdAt": "2020-12-08T13:11:02Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtilTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "originalCommit": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDM3OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510379", "bodyText": "866313d", "author": "Sarangan0219", "createdAt": "2020-12-08T15:38:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDY3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538351729", "bodyText": "Format the code", "author": "malinthaprasan", "createdAt": "2020-12-08T13:12:07Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "diffHunk": "@@ -48,6 +53,43 @@ public static CommentDTO fromCommentToDTO(Comment comment) throws APIManagementE\n         return commentDTO;\n     }\n \n+    /**\n+     * Converts a Comment object into corresponding REST API CommentDTO object with User Info\n+     *\n+     * @param comment comment object\n+     * @return CommentDTO\n+     */\n+    public static CommentDTO fromCommentToDTOWithUserInfo(Comment comment, Map<String,\n+            Map<String, String>> userClaimsMap)  throws APIManagementException {\n+        CommentDTO commentDTO = fromCommentToDTO(comment);\n+        if (userClaimsMap.get(comment.getUser()) != null) {\n+            Map userClaims = userClaimsMap.get(comment.getUser());\n+            CommenterInfoDTO commenterInfoDTO = new CommenterInfoDTO();\n+            commenterInfoDTO.setFullName((String) userClaims.get(APIConstants.FULL_NAME));\n+            commenterInfoDTO.setFirstName((String) userClaims.get(APIConstants.FIRST_NAME));\n+            commenterInfoDTO.setLastName((String) userClaims.get(APIConstants.LAST_NAME));\n+            commentDTO.setCommenterInfo(commenterInfoDTO);\n+        }\n+        return  commentDTO;\n+    }\n+\n+    /**\n+     * Retrieve userClaims from UserStore and save it in a cache map.\n+     *\n+     * @param username        commenter username\n+     * @param userClaimsMap   cache map with user deatils\n+     * @return Map<String, Map<String, String>>\n+     */\n+    public static  Map<String, Map<String, String>> retrieveUserClaims(String username,\n+                                                                       Map<String, Map<String, String>> userClaimsMap)\n+            throws APIManagementException {", "originalCommit": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxNTQ4Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538515486", "bodyText": "We can't include Map<String, Map<String, String>> userClaimsMap in line 83. It is exceeding the number of characters limit", "author": "Sarangan0219", "createdAt": "2020-12-08T15:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY2NTM4NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538665384", "bodyText": "can we merge 85 and 84 to a single line?", "author": "malinthaprasan", "createdAt": "2020-12-08T17:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MzUyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538983525", "bodyText": "dbe6f84", "author": "Sarangan0219", "createdAt": "2020-12-09T03:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjI5MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538352290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(),userClaimsMap);\n          \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);", "author": "malinthaprasan", "createdAt": "2020-12-08T13:12:38Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +333,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(),userClaimsMap);", "originalCommit": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDIxMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510210", "bodyText": "866313d", "author": "Sarangan0219", "createdAt": "2020-12-08T15:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjU2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538352566", "bodyText": "Do not use * import", "author": "malinthaprasan", "createdAt": "2020-12-08T13:12:56Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -44,17 +44,16 @@\n import org.wso2.carbon.apimgt.impl.APIConstants;\n import org.wso2.carbon.apimgt.impl.definitions.GraphQLSchemaDefinition;\n import org.wso2.carbon.apimgt.impl.dto.Environment;\n+import org.wso2.carbon.apimgt.impl.token.ClaimsRetriever;\n+import org.wso2.carbon.apimgt.impl.utils.APIRealmUtils;\n import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n import org.wso2.carbon.apimgt.rest.api.store.v1.ApisApiService;\n \n \n import java.io.File;\n import java.net.URI;\n import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;", "originalCommit": "37a27c833ab39d90fbe9713afc21544f8331c3cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDEyMw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510123", "bodyText": "866313d", "author": "Sarangan0219", "createdAt": "2020-12-08T15:38:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjU2Ng=="}], "type": "inlineReview"}, {"oid": "866313d7b897152f88b7c3225827d8df4587365a", "url": "https://github.com/wso2/carbon-apimgt/commit/866313d7b897152f88b7c3225827d8df4587365a", "message": "Add license headers", "committedDate": "2020-12-08T15:37:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NjE0Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538676142", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n          \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);\n          \n          \n            \n                                Map<String, Map<String, String>> userClaimsMap = CommentMappingUtil.retrieveUserClaims(comment.getUser(), new HashMap<>());\n          \n      \n    \n    \n  \n\nWill this be more readable?", "author": "malinthaprasan", "createdAt": "2020-12-08T18:07:32Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +334,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);", "originalCommit": "866313d7b897152f88b7c3225827d8df4587365a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MzUwNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538983504", "bodyText": "dbe6f84", "author": "Sarangan0219", "createdAt": "2020-12-09T03:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NjE0Mg=="}], "type": "inlineReview"}, {"oid": "dbe6f847730212f0db8456b3628c917d31a75961", "url": "https://github.com/wso2/carbon-apimgt/commit/dbe6f847730212f0db8456b3628c917d31a75961", "message": "Fix formatting issues", "committedDate": "2020-12-09T03:44:01Z", "type": "commit"}]}