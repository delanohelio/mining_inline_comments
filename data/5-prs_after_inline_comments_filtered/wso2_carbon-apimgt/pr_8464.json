{"pr_number": 8464, "pr_title": "Add implementation to addRegistry resource", "pr_createdAt": "2020-05-05T05:48:04Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8464", "timeline": [{"oid": "e05c5d48319fe068a471b7469fb1069531222bd2", "url": "https://github.com/wso2/carbon-apimgt/commit/e05c5d48319fe068a471b7469fb1069531222bd2", "message": "Add implementation to addRegistry resource", "committedDate": "2020-05-05T05:44:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5Mzc3MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419893770", "bodyText": "Shouldn't the instantiation of the EndpointRegistry go inside  the if (rs.next()) { block ? otherwise not found would not return null.", "author": "ChamodDamitha", "createdAt": "2020-05-05T06:40:38Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            ps.setString(1, uuid);\n+            ps.setString(2, endpointRegistry.getName());\n+            ps.setString(3, endpointRegistry.getType());\n+            ps.setString(4, endpointRegistry.getMode());\n+            ps.setInt(5, tenantID);\n+            ps.setString(6, endpointRegistry.getOwner());\n+            ps.setString(7, \"\");\n+            ps.setString(8, \"\");\n+            ps.executeUpdate();\n+        } catch (SQLException e) {\n+            handleException(\"Error while adding new endpoint registry: \" + endpointRegistry.getName(), e);\n+        }\n+        return uuid;\n+    }\n+\n+    /**\n+     * Return the details of an Endpoint Registry\n+     *\n+     * @param regsitryId Endpoint Registry Identifier\n+     * @return Endpoint Registry Object\n+     * @throws APIManagementException\n+     */\n+    public EndpointRegistry getEndpointRegistryByUUID(String regsitryId) throws APIManagementException {\n+        String query = SQLConstants.GET_ENDPOINT_REGISTRY_BY_UUID;\n+        EndpointRegistry endpointRegistry = new EndpointRegistry();", "originalCommit": "e05c5d48319fe068a471b7469fb1069531222bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMDE2MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419920161", "bodyText": "Fixed", "author": "vithu30", "createdAt": "2020-05-05T07:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5Mzc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMDE1Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419900156", "bodyText": "Shouldn't we set autoCommit to false as in other places we have done writes?", "author": "fazlan-nazeem", "createdAt": "2020-05-05T06:57:31Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;", "originalCommit": "e05c5d48319fe068a471b7469fb1069531222bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMDQyMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419920420", "bodyText": "Yes. Fixed in e0c7935", "author": "vithu30", "createdAt": "2020-05-05T07:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMDE1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTk5NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419905994", "bodyText": "why are 38,39 lines the same?", "author": "fazlan-nazeem", "createdAt": "2020-05-05T07:12:26Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/util/EndpointRegistryMappingUtils.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.endpoint.registry.util;\n+\n+import org.wso2.carbon.apimgt.api.model.EndpointRegistry;\n+import org.wso2.carbon.apimgt.rest.api.endpoint.registry.dto.RegistryDTO;\n+\n+/**\n+ * This class is responsible for mapping APIM core Endpoint Registry related objects into REST API\n+ * Endpoint Registry related DTOs\n+ */\n+public class EndpointRegistryMappingUtils {\n+\n+    /**\n+     * Converts a RegistryDTO object into EndpointRegistry object\n+     *\n+     * @param registryDTO RegistryDTO object\n+     * @return EndpointRegistry corresponds to RegistryDTO object\n+     */\n+    public static EndpointRegistry fromDTOtoEndpointRegistry(RegistryDTO registryDTO, String owner) {\n+        EndpointRegistry registry = new EndpointRegistry();\n+        registry.setName(registryDTO.getName());\n+        registry.setOwner(owner);\n+        registry.setType(registryDTO.getType().toString());\n+        registry.setMode(registryDTO.getType().toString());", "originalCommit": "e05c5d48319fe068a471b7469fb1069531222bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNjA3Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419906073", "bodyText": "registryDTO.getType().toString()", "author": "fazlan-nazeem", "createdAt": "2020-05-05T07:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMDY2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419920666", "bodyText": "Mistakenly added that. Fixed it.", "author": "vithu30", "createdAt": "2020-05-05T07:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNjc3OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419906778", "bodyText": "why empty?", "author": "fazlan-nazeem", "createdAt": "2020-05-05T07:14:24Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            ps.setString(1, uuid);\n+            ps.setString(2, endpointRegistry.getName());\n+            ps.setString(3, endpointRegistry.getType());\n+            ps.setString(4, endpointRegistry.getMode());\n+            ps.setInt(5, tenantID);\n+            ps.setString(6, endpointRegistry.getOwner());\n+            ps.setString(7, \"\");", "originalCommit": "e05c5d48319fe068a471b7469fb1069531222bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMTgzNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419921836", "bodyText": "These db columns are for read_roles and write_roles. since, we planned to have registry roles per tenant, added empty values for now.\nAdded a comment so we can update the values later based on the decision.", "author": "vithu30", "createdAt": "2020-05-05T07:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNjc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODI1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419908250", "bodyText": "I think it's incorrect to user APIProvider interface for this. We should have a separate interface.  EndpointRegistry", "author": "fazlan-nazeem", "createdAt": "2020-05-05T07:17:46Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -1328,4 +1328,22 @@ void addFileToProductDocumentation(APIProductIdentifier prodcutId, Documentation\n      * @return List of removed resources that are reused among API Products\n      */\n     List<APIResource> getRemovedProductResources(Set<URITemplate> updatedUriTemplates, API existingAPI);\n+\n+    /**\n+     * Adds a new Endpoint Registry", "originalCommit": "e05c5d48319fe068a471b7469fb1069531222bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODQzMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419908432", "bodyText": "and then implement the methods in EndpointRegistryImpl", "author": "fazlan-nazeem", "createdAt": "2020-05-05T07:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMjM4Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419922382", "bodyText": "Ack. will do the changes. Used APIProvider as this operations are related to API Provider. Anyway it's better to have separate interface for EndpointRegistry.", "author": "vithu30", "createdAt": "2020-05-05T07:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3NjQxMw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419976413", "bodyText": "Fixed in 6de38c7", "author": "vithu30", "createdAt": "2020-05-05T09:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODI1MA=="}], "type": "inlineReview"}, {"oid": "e0c793516a89b1cdc8923e4d9b887a41ed154e6d", "url": "https://github.com/wso2/carbon-apimgt/commit/e0c793516a89b1cdc8923e4d9b887a41ed154e6d", "message": "Resolve review comments", "committedDate": "2020-05-05T07:42:15Z", "type": "commit"}, {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "url": "https://github.com/wso2/carbon-apimgt/commit/e38cceed0e90ed4fdfccd4b3b923ac821c094727", "message": "Add EndpointRegistry interface and impl", "committedDate": "2020-05-05T09:29:56Z", "type": "commit"}, {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "url": "https://github.com/wso2/carbon-apimgt/commit/e38cceed0e90ed4fdfccd4b3b923ac821c094727", "message": "Add EndpointRegistry interface and impl", "committedDate": "2020-05-05T09:29:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5NDcwMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r430394702", "bodyText": "Can we define a different Exception class like EndpointRegistryException?", "author": "jaadds", "createdAt": "2020-05-26T13:03:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/EndpointRegistry.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.api;\n+\n+import org.wso2.carbon.apimgt.api.model.EndpointRegistryInfo;\n+\n+/**\n+ * EndpointRegistry Interface\n+ */\n+public interface EndpointRegistry {\n+\n+    /**\n+     * Adds a new Endpoint Registry\n+     *\n+     * @param endpointRegistry EndpointRegistryInfo\n+     * @return registryId UUID of the created Endpoint Registry ID\n+     * @throws APIManagementException if failed to add EndpointRegistryInfo\n+     */\n+    String addEndpointRegistry(EndpointRegistryInfo endpointRegistry) throws APIManagementException;", "originalCommit": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0NjUzNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r430846537", "bodyText": "Added new Exception in #8577", "author": "vithu30", "createdAt": "2020-05-27T04:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5NDcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5NjQ1Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r430396456", "bodyText": "How about having these as Enums?", "author": "jaadds", "createdAt": "2020-05-26T13:05:50Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/EndpointRegistryInfo.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.api.model;\n+\n+/**\n+ * Endpoint Registry Info Object.\n+ */\n+public class EndpointRegistryInfo {\n+\n+    private String uuid = null;\n+\n+    private String name = null;\n+\n+    private String type = null;", "originalCommit": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}