{"pr_number": 9470, "pr_title": "Adding initial revision support feature implementation", "pr_createdAt": "2020-12-04T09:03:23Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9470", "timeline": [{"oid": "5ee1c9db916fbfea6df7dff3b7120adcd91d9b21", "url": "https://github.com/wso2/carbon-apimgt/commit/5ee1c9db916fbfea6df7dff3b7120adcd91d9b21", "message": "adding initial revision support implementation", "committedDate": "2020-12-04T08:03:36Z", "type": "commit"}, {"oid": "722ae551971df48aa9f1d4273319503ca6815e64", "url": "https://github.com/wso2/carbon-apimgt/commit/722ae551971df48aa9f1d4273319503ca6815e64", "message": "changing registry wsdl location to a path inside registry api path", "committedDate": "2020-12-04T08:03:36Z", "type": "commit"}, {"oid": "29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "url": "https://github.com/wso2/carbon-apimgt/commit/29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "message": "adding master merge changes", "committedDate": "2020-12-04T08:58:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyNTAwOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536825009", "bodyText": "Licence header missing", "author": "tharindu1st", "createdAt": "2020-12-05T17:13:56Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIRevision.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.wso2.carbon.apimgt.api.model;", "originalCommit": "29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMzA4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536933081", "bodyText": "resolved", "author": "CrowleyRajapakse", "createdAt": "2020-12-06T01:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyNTAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyODk4Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536828982", "bodyText": "caching an Exception?", "author": "malinthaprasan", "createdAt": "2020-12-05T17:38:38Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4632,13 +4637,26 @@ public Response getAPIRevisions(String apiId, MessageContext messageContext) {\n      */\n     @Override\n     public Response createAPIRevision(String apiId, APIRevisionDTO apIRevisionDTO, MessageContext messageContext) {\n-        // remove errorObject and add implementation code!\n-        ErrorDTO errorObject = new ErrorDTO();\n-        Response.Status status = Response.Status.NOT_IMPLEMENTED;\n-        errorObject.setCode((long) status.getStatusCode());\n-        errorObject.setMessage(status.toString());\n-        errorObject.setDescription(\"The requested resource has not been implemented\");\n-        return Response.status(status).entity(errorObject).build();\n+        try {\n+            APIProvider apiProvider = RestApiCommonUtil.getLoggedInUserProvider();\n+            APIRevision apiRevision = new APIRevision();\n+            apiRevision.setApiUUID(apiId);\n+            apiRevision.setDescription(apIRevisionDTO.getDescription());\n+            //adding the api revision\n+            String revisionId = apiProvider.addAPIRevision(apiRevision);\n+\n+            //Retrieve the newly added APIRevision to send in the response payload\n+            APIRevision createdApiRevision = apiProvider.getAPIRevision(revisionId);\n+            APIRevisionDTO createdApiRevisionDTO = APIMappingUtil.fromAPIRevisiontoDTO(createdApiRevision);\n+            //This URI used to set the location header of the POST response\n+            URI createdApiUri = new URI(RestApiConstants.RESOURCE_PATH_APIS + \"/\" + createdApiRevisionDTO.getApiInfo().getId() + \"/\" + RestApiConstants.RESOURCE_PATH_REVISIONS + \"/\" + createdApiRevisionDTO.getId());\n+            return Response.created(createdApiUri).entity(createdApiRevisionDTO).build();\n+        } catch (Exception e) {", "originalCommit": "29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyOTEyMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536829120", "bodyText": "Just throw the APIManagement exception to the outer layer.\nhttps://github.com/wso2/carbon-apimgt/wiki/Exception-handling-in-REST-APIs", "author": "malinthaprasan", "createdAt": "2020-12-05T17:39:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyODk4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMzEzMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536933130", "bodyText": "resolved", "author": "CrowleyRajapakse", "createdAt": "2020-12-06T01:57:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyODk4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyOTI1Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536829256", "bodyText": "Why catching a generic Exception", "author": "malinthaprasan", "createdAt": "2020-12-05T17:40:26Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4613,13 +4615,16 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n      */\n     @Override\n     public Response getAPIRevisions(String apiId, MessageContext messageContext) {\n-        // remove errorObject and add implementation code!\n-        ErrorDTO errorObject = new ErrorDTO();\n-        Response.Status status = Response.Status.NOT_IMPLEMENTED;\n-        errorObject.setCode((long) status.getStatusCode());\n-        errorObject.setMessage(status.toString());\n-        errorObject.setDescription(\"The requested resource has not been implemented\");\n-        return Response.status(status).entity(errorObject).build();\n+        try {\n+            APIProvider apiProvider = RestApiCommonUtil.getLoggedInUserProvider();\n+            List<APIRevision> apiRevisions = apiProvider.getAPIRevisions(apiId);\n+            APIRevisionListDTO apiRevisionListDTO = APIMappingUtil.fromListAPIRevisiontoDTO(apiRevisions);\n+            return Response.ok().entity(apiRevisionListDTO).build();\n+        } catch (Exception e) {", "originalCommit": "29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMzI0NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536933245", "bodyText": "changed to APIManagementException, resolved", "author": "CrowleyRajapakse", "createdAt": "2020-12-06T01:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyOTI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyOTQxNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536829417", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int count = 0;\n          \n          \n            \n                    for (APIRevision apiRevision: apiRevisionList) {\n          \n          \n            \n                        count++;\n          \n          \n            \n                        apiRevisionDTOS.add(fromAPIRevisiontoDTO(apiRevision));\n          \n          \n            \n                    }\n          \n          \n            \n                    apiRevisionListDTO.setCount(count);\n          \n          \n            \n                    for (APIRevision apiRevision: apiRevisionList) {\n          \n          \n            \n                        apiRevisionDTOS.add(fromAPIRevisiontoDTO(apiRevision));\n          \n          \n            \n                    }\n          \n          \n            \n                    apiRevisionListDTO.setCount(apiRevisionList.size());", "author": "malinthaprasan", "createdAt": "2020-12-05T17:41:29Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1.common/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/common/mappings/APIMappingUtil.java", "diffHunk": "@@ -2749,4 +2753,28 @@ private static JSONObject handleEndpointSecurity(API api, JSONObject endpointSec\n         }\n         return endpointSecurityElement;\n     }\n+\n+    public static APIRevisionDTO fromAPIRevisiontoDTO(APIRevision model) throws APIManagementException {\n+        APIRevisionDTO apiRevisionDTO = new APIRevisionDTO();\n+        apiRevisionDTO.setId(model.getId());\n+        apiRevisionDTO.setUuid(model.getRevisionUUID());\n+        apiRevisionDTO.setDescription(model.getDescription());\n+        APIRevisionAPIInfoDTO apiRevisionAPIInfoDTO = new APIRevisionAPIInfoDTO();\n+        apiRevisionAPIInfoDTO.setId(model.getApiUUID());\n+        apiRevisionDTO.setApiInfo(apiRevisionAPIInfoDTO);\n+        return  apiRevisionDTO;\n+    }\n+\n+    public static APIRevisionListDTO fromListAPIRevisiontoDTO(List<APIRevision> apiRevisionList) throws APIManagementException {\n+        APIRevisionListDTO apiRevisionListDTO = new APIRevisionListDTO();\n+        List<APIRevisionDTO> apiRevisionDTOS = new ArrayList<>();\n+        int count = 0;\n+        for (APIRevision apiRevision: apiRevisionList) {\n+            count++;\n+            apiRevisionDTOS.add(fromAPIRevisiontoDTO(apiRevision));\n+        }\n+        apiRevisionListDTO.setCount(count);", "originalCommit": "29ab3eb1d88e3da1ecd98f2dcfd82ece08f323ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMzI2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r536933264", "bodyText": "resolved", "author": "CrowleyRajapakse", "createdAt": "2020-12-06T01:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyOTQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNTg4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r537215881", "bodyText": "Don't we need somekind of validation before adding", "author": "chamilaadhi", "createdAt": "2020-12-07T04:03:10Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4632,13 +4637,30 @@ public Response getAPIRevisions(String apiId, MessageContext messageContext) {\n      */\n     @Override\n     public Response createAPIRevision(String apiId, APIRevisionDTO apIRevisionDTO, MessageContext messageContext) {\n-        // remove errorObject and add implementation code!\n-        ErrorDTO errorObject = new ErrorDTO();\n-        Response.Status status = Response.Status.NOT_IMPLEMENTED;\n-        errorObject.setCode((long) status.getStatusCode());\n-        errorObject.setMessage(status.toString());\n-        errorObject.setDescription(\"The requested resource has not been implemented\");\n-        return Response.status(status).entity(errorObject).build();\n+        try {\n+            APIProvider apiProvider = RestApiCommonUtil.getLoggedInUserProvider();\n+            APIRevision apiRevision = new APIRevision();\n+            apiRevision.setApiUUID(apiId);\n+            apiRevision.setDescription(apIRevisionDTO.getDescription());\n+            //adding the api revision\n+            String revisionId = apiProvider.addAPIRevision(apiRevision);", "originalCommit": "b808bf4623ba5fd19b9d5159a41c57b18ca088a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyNzYwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r537227607", "bodyText": "added an api requested resource check inside the createAPIRevisionRegistryArtifacts method, resolved.", "author": "CrowleyRajapakse", "createdAt": "2020-12-07T04:44:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNTg4MQ=="}], "type": "inlineReview"}, {"oid": "950bbd07461f1efdd81aea961a73981a5e161f00", "url": "https://github.com/wso2/carbon-apimgt/commit/950bbd07461f1efdd81aea961a73981a5e161f00", "message": "adding requested changes for api revision", "committedDate": "2020-12-07T04:39:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyODgwNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r537228805", "bodyText": "Shall we separate out the Dao layer accessing code from the registry accessing code. this way it would be easy to extract the registry code later", "author": "chamilaadhi", "createdAt": "2020-12-07T04:48:26Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -8979,4 +8982,110 @@ private void deleteScopes(Set<String> scopes, int tenantId) throws APIManagement\n             }\n         }\n     }\n+\n+    /**\n+     * Adds a new APIRevision to an existing API\n+     *\n+     * @param apiRevision APIRevision\n+     * @throws APIManagementException if failed to add APIRevision\n+     */\n+    @Override\n+    public String addAPIRevision(APIRevision apiRevision) throws APIManagementException {\n+        int revisionId = apiMgtDAO.getMostRecentRevisionId(apiRevision.getApiUUID()) + 1;\n+        apiRevision.setId(revisionId);\n+        String revisionUUID = createAPIRevisionRegistryArtifacts(apiRevision.getApiUUID(), revisionId);\n+        if (StringUtils.isEmpty(revisionUUID)) {\n+            String errorMessage = \"Failed to retrieve revision uuid\";\n+            log.error(errorMessage);\n+            throw new APIManagementException(errorMessage);\n+        }\n+        apiRevision.setRevisionUUID(revisionUUID);\n+        apiMgtDAO.addAPIRevision(apiRevision);\n+        return revisionUUID;\n+    }\n+\n+    /**\n+     * Get a Revision related to provided and revision UUID\n+     *\n+     * @param revisionUUID API Revision UUID\n+     * @return API Revision\n+     * @throws APIManagementException if failed to get the related API revision\n+     */\n+    @Override\n+    public APIRevision getAPIRevision(String revisionUUID) throws APIManagementException {\n+        return apiMgtDAO.getRevisionByRevisionUUID(revisionUUID);\n+    }\n+\n+    /**\n+     * Copy Api registry artifacts to the revision registry location\n+     *\n+     * @param apiUUID API UUID\n+     * @param revisionId Revision ID\n+     * @throws APIManagementException if failed to copy API registry artifacts\n+     */\n+    protected String createAPIRevisionRegistryArtifacts(String apiUUID, int revisionId) throws APIManagementException {\n+        String revisionUUID = null;\n+        APIIdentifier apiId = APIUtil.getAPIIdentifierFromUUID(apiUUID);", "originalCommit": "950bbd07461f1efdd81aea961a73981a5e161f00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzNjg1OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9470#discussion_r537236859", "bodyText": "separated the Dao and registry code, resolved", "author": "CrowleyRajapakse", "createdAt": "2020-12-07T05:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyODgwNQ=="}], "type": "inlineReview"}, {"oid": "58a9df3c57c5771ef344a2d38f4a79abd0c29a6c", "url": "https://github.com/wso2/carbon-apimgt/commit/58a9df3c57c5771ef344a2d38f4a79abd0c29a6c", "message": "adding requested changes for api revision", "committedDate": "2020-12-07T05:14:19Z", "type": "commit"}, {"oid": "58a9df3c57c5771ef344a2d38f4a79abd0c29a6c", "url": "https://github.com/wso2/carbon-apimgt/commit/58a9df3c57c5771ef344a2d38f4a79abd0c29a6c", "message": "adding requested changes for api revision", "committedDate": "2020-12-07T05:14:19Z", "type": "forcePushed"}]}