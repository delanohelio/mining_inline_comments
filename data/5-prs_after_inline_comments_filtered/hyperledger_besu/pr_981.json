{"pr_number": 981, "pr_title": "Handle backward compatibility for EIP-2124 fork id management", "pr_createdAt": "2020-05-26T14:47:47Z", "pr_url": "https://github.com/hyperledger/besu/pull/981", "timeline": [{"oid": "b2069ab219533a3146757a0c5c1c3db07dd6879b", "url": "https://github.com/hyperledger/besu/commit/b2069ab219533a3146757a0c5c1c3db07dd6879b", "message": "Handle backward compatibility for EIP-2124 fork id management\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-26T14:46:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3Nzg1Mg==", "url": "https://github.com/hyperledger/besu/pull/981#discussion_r430477852", "bodyText": "Maybe we can use !forks.isEmpty() instead of  size() > 0", "author": "matkt", "createdAt": "2020-05-26T14:57:23Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -32,38 +34,71 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+\n+  private final List<ForkId> legacyForkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n   private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n     assert blockchain != null && forks != null;\n-    this.blockchain = blockchain;\n     this.genesisHash = blockchain.getGenesisBlock().getHash();\n+    this.legacyForkAndHashList = new ArrayList<>();\n+    this.forkAndHashList = new ArrayList<>();\n     // if the fork list contains only zeros then we may be in a consortium/dev network\n     if (onlyZerosForkBlocks(forks)) {\n       this.forkIDCheckers = singletonList(forkId -> true);\n     } else {\n-      this.forkIDCheckers = singletonList(this::eip2124Checker);\n+      final ForkIDChecker legacyForkIdChecker =\n+          createForkIDChecker(\n+              blockchain,\n+              genesisHash,\n+              forks,\n+              fs ->\n+                  fs.stream()\n+                      .filter(fork -> fork > 0)\n+                      .distinct()\n+                      .collect(Collectors.toUnmodifiableList()),\n+              legacyForkAndHashList);\n+      final ForkIDChecker newForkIdChecker =\n+          createForkIDChecker(\n+              blockchain,\n+              genesisHash,\n+              forks,\n+              fs -> fs.stream().distinct().collect(Collectors.toUnmodifiableList()),\n+              forkAndHashList);\n+      this.forkIDCheckers = Arrays.asList(newForkIdChecker, legacyForkIdChecker);\n     }\n-    // de-dupe and sanitize forks\n-    this.forks = forks.stream().distinct().collect(Collectors.toUnmodifiableList());\n-    highestKnownFork = forks.size() > 0 ? forks.get(forks.size() - 1) : 0L;\n-    createForkIds();\n   }\n \n-  private boolean onlyZerosForkBlocks(final List<Long> forks) {\n+  private static ForkIDChecker createForkIDChecker(\n+      final Blockchain blockchain,\n+      final Hash genesisHash,\n+      final List<Long> forks,\n+      final Function<List<Long>, List<Long>> sanitizer,\n+      final List<ForkId> forkIds) {\n+    final List<Long> sanitizedForks = sanitizer.apply(forks);\n+    final long forkNext = createForkIds(genesisHash, sanitizedForks, forkIds);\n+    return eip2124(blockchain, forkNext, forkIds, highestKnownFork(sanitizedForks));\n+  }\n+\n+  private static boolean onlyZerosForkBlocks(final List<Long> forks) {\n     return forks.stream().allMatch(value -> 0L == value);\n   }\n \n+  private static long highestKnownFork(final List<Long> forks) {\n+    return forks.size() > 0 ? forks.get(forks.size() - 1) : 0L;", "originalCommit": "b2069ab219533a3146757a0c5c1c3db07dd6879b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NTc3MA==", "url": "https://github.com/hyperledger/besu/pull/981#discussion_r430495770", "bodyText": "Yes", "author": "abdelhamidbakhta", "createdAt": "2020-05-26T15:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3Nzg1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5ODg2OQ==", "url": "https://github.com/hyperledger/besu/pull/981#discussion_r430498869", "bodyText": "Done.", "author": "abdelhamidbakhta", "createdAt": "2020-05-26T15:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3Nzg1Mg=="}], "type": "inlineReview"}, {"oid": "aa530bd2a76e08167158172baddc69487f2a1988", "url": "https://github.com/hyperledger/besu/commit/aa530bd2a76e08167158172baddc69487f2a1988", "message": "Address PR comment\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-26T15:24:10Z", "type": "commit"}, {"oid": "270a411f3c7f85e1ff7d16c1e0273cbea1be37e9", "url": "https://github.com/hyperledger/besu/commit/270a411f3c7f85e1ff7d16c1e0273cbea1be37e9", "message": "Merge remote-tracking branch 'upstream/master' into 980\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-26T15:24:26Z", "type": "commit"}]}