{"pr_number": 1350, "pr_title": "Implement batch transactions RPC endpoint.", "pr_createdAt": "2020-08-31T12:19:49Z", "pr_url": "https://github.com/hyperledger/besu/pull/1350", "timeline": [{"oid": "335946cde8a5f6a299717fe89cfef65211236117", "url": "https://github.com/hyperledger/besu/commit/335946cde8a5f6a299717fe89cfef65211236117", "message": "Implement batch transactions RPC endoint\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-08-31T12:11:57Z", "type": "commit"}, {"oid": "8c6cf027f7e53e8e547aa6e21ad37e14d8afe4cc", "url": "https://github.com/hyperledger/besu/commit/8c6cf027f7e53e8e547aa6e21ad37e14d8afe4cc", "message": "Add file header\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-08-31T12:52:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNjUyOQ==", "url": "https://github.com/hyperledger/besu/pull/1350#discussion_r480236529", "bodyText": "So if all of the TXes fail the RPC call succeeds, but with an array of each failed TX?  That's fine, no need to throw a JSON-RPC error in that case.", "author": "shemnon", "createdAt": "2020-08-31T16:14:03Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/DebugBatchSendRawTransaction.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.exception.InvalidJsonRpcRequestException;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.util.DomainObjectDecodeUtils;\n+import org.hyperledger.besu.ethereum.eth.transactions.TransactionPool;\n+import org.hyperledger.besu.ethereum.mainnet.TransactionValidator;\n+import org.hyperledger.besu.ethereum.mainnet.ValidationResult;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Supplier;\n+import java.util.stream.IntStream;\n+\n+import com.fasterxml.jackson.annotation.JsonGetter;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.google.common.base.Suppliers;\n+\n+public class DebugBatchSendRawTransaction implements JsonRpcMethod {\n+  private final Supplier<TransactionPool> transactionPool;\n+\n+  public DebugBatchSendRawTransaction(final TransactionPool transactionPool) {\n+    this(Suppliers.ofInstance(transactionPool));\n+  }\n+\n+  public DebugBatchSendRawTransaction(final Supplier<TransactionPool> transactionPool) {\n+    this.transactionPool = transactionPool;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.DEBUG_BATCH_RAW_TRANSACTION.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final List<ExecutionStatus> executionStatuses = new ArrayList<>();\n+    IntStream.range(0, requestContext.getRequest().getParamLength())", "originalCommit": "8c6cf027f7e53e8e547aa6e21ad37e14d8afe4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzOTM1MQ==", "url": "https://github.com/hyperledger/besu/pull/1350#discussion_r480239351", "bodyText": "Yes, the RPC call would succeed with an array of each failed TX.", "author": "abdelhamidbakhta", "createdAt": "2020-08-31T16:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNjUyOQ=="}], "type": "inlineReview"}, {"oid": "7618c2d26281ac9b6653c9544a5785a7628ccc0d", "url": "https://github.com/hyperledger/besu/commit/7618c2d26281ac9b6653c9544a5785a7628ccc0d", "message": "Merge remote-tracking branch 'upstream/master' into 1227\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-01T07:24:37Z", "type": "commit"}, {"oid": "9c8c25eb1d9aa44cbb686f8a47c91b2dca0d3050", "url": "https://github.com/hyperledger/besu/commit/9c8c25eb1d9aa44cbb686f8a47c91b2dca0d3050", "message": "Added unit tests and integration tests.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-01T16:27:35Z", "type": "commit"}, {"oid": "9ded339070bd5fab585da4f110501c25373526ca", "url": "https://github.com/hyperledger/besu/commit/9ded339070bd5fab585da4f110501c25373526ca", "message": "Merge remote-tracking branch 'upstream/master' into 1227\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-02T07:04:47Z", "type": "commit"}, {"oid": "2bc2fce1bfc5d0fd20abb7521c155a25dd727faa", "url": "https://github.com/hyperledger/besu/commit/2bc2fce1bfc5d0fd20abb7521c155a25dd727faa", "message": "Added test for invalid signature.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-02T07:15:50Z", "type": "commit"}]}