{"pr_number": 1146, "pr_title": "Besu vulnerable to being used for DDoS amplification", "pr_createdAt": "2020-06-25T13:01:49Z", "pr_url": "https://github.com/hyperledger/besu/pull/1146", "timeline": [{"oid": "c676937c1f1597c8b533200156765005acd71986", "url": "https://github.com/hyperledger/besu/commit/c676937c1f1597c8b533200156765005acd71986", "message": "Add check for spoofed IP in ping message\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-05-08T12:43:31Z", "type": "commit"}, {"oid": "f7bef19e8267146126ee798e63aeb5a3878b40f1", "url": "https://github.com/hyperledger/besu/commit/f7bef19e8267146126ee798e63aeb5a3878b40f1", "message": "Merge branch 'master' into TKT-792", "committedDate": "2020-05-08T13:09:35Z", "type": "commit"}, {"oid": "26dc9388b381caed88b0c5467dd067ac916e12bd", "url": "https://github.com/hyperledger/besu/commit/26dc9388b381caed88b0c5467dd067ac916e12bd", "message": "Fix formatting issues\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-05-08T13:14:01Z", "type": "commit"}, {"oid": "be01d47caa641bb37a7ff3a8981432618f8e80a3", "url": "https://github.com/hyperledger/besu/commit/be01d47caa641bb37a7ff3a8981432618f8e80a3", "message": "Merge branch 'TKT-792' of github.com:davemec/besu into TKT-792", "committedDate": "2020-05-08T13:14:15Z", "type": "commit"}, {"oid": "de9b2dbad6ce3f79e257f9fec758ac8b6dc34472", "url": "https://github.com/hyperledger/besu/commit/de9b2dbad6ce3f79e257f9fec758ac8b6dc34472", "message": "Add logging message when ping request is rejected.\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-05-08T14:14:32Z", "type": "commit"}, {"oid": "5fb90ebab04899f8cd2cc9f20d25bc98a1400983", "url": "https://github.com/hyperledger/besu/commit/5fb90ebab04899f8cd2cc9f20d25bc98a1400983", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-05-18T13:55:49Z", "type": "commit"}, {"oid": "3c61f74bf2f924199dd4f96acaaf3833c071752f", "url": "https://github.com/hyperledger/besu/commit/3c61f74bf2f924199dd4f96acaaf3833c071752f", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-05-20T13:46:21Z", "type": "commit"}, {"oid": "45374db4ab63ce2172a559c59d17c0aab915c94c", "url": "https://github.com/hyperledger/besu/commit/45374db4ab63ce2172a559c59d17c0aab915c94c", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-06-02T14:32:28Z", "type": "commit"}, {"oid": "b99b7c94fb0852f0ca796d1df2002fbc37f552df", "url": "https://github.com/hyperledger/besu/commit/b99b7c94fb0852f0ca796d1df2002fbc37f552df", "message": "Revert last changes\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-04T20:38:41Z", "type": "commit"}, {"oid": "6b7b94c7513f62c7aaa47af8552a4ac55650f50d", "url": "https://github.com/hyperledger/besu/commit/6b7b94c7513f62c7aaa47af8552a4ac55650f50d", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-06-08T00:03:13Z", "type": "commit"}, {"oid": "f2eddab4e11b151bcab242bf8a69d903e716f0ea", "url": "https://github.com/hyperledger/besu/commit/f2eddab4e11b151bcab242bf8a69d903e716f0ea", "message": "Fix for hive SpoofAmplification test\n\nSigned-off-by: David Mechler <davemec@gmail.com>", "committedDate": "2020-06-08T14:43:00Z", "type": "commit"}, {"oid": "a8e50cf2005895c233357bcf93d46e87d08e6784", "url": "https://github.com/hyperledger/besu/commit/a8e50cf2005895c233357bcf93d46e87d08e6784", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-06-11T13:31:03Z", "type": "commit"}, {"oid": "4f1af986b12b2ec167efcd850de18a454dcbeab2", "url": "https://github.com/hyperledger/besu/commit/4f1af986b12b2ec167efcd850de18a454dcbeab2", "message": "Add check for spoofed IP in ping message\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-11T13:33:24Z", "type": "commit"}, {"oid": "00c69d9ef86f17e0805877fae12601c71a989b64", "url": "https://github.com/hyperledger/besu/commit/00c69d9ef86f17e0805877fae12601c71a989b64", "message": "Fix formatting issues\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-11T13:33:24Z", "type": "commit"}, {"oid": "05afcf1a103fb77fb2c45c833d3ceb0ff41d461c", "url": "https://github.com/hyperledger/besu/commit/05afcf1a103fb77fb2c45c833d3ceb0ff41d461c", "message": "Add logging message when ping request is rejected.\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-11T13:33:24Z", "type": "commit"}, {"oid": "cce51a048c2c00bcc66ca5bd242c2d21efd4230b", "url": "https://github.com/hyperledger/besu/commit/cce51a048c2c00bcc66ca5bd242c2d21efd4230b", "message": "Revert last changes\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-11T13:33:24Z", "type": "commit"}, {"oid": "96fc849497a7a445e66fef8e1a632729b305555b", "url": "https://github.com/hyperledger/besu/commit/96fc849497a7a445e66fef8e1a632729b305555b", "message": "Fix for hive SpoofAmplification test\n\nSigned-off-by: David Mechler <davemec@gmail.com>", "committedDate": "2020-06-11T13:33:24Z", "type": "commit"}, {"oid": "5f8b8ad47c7226452f1e4bb0052052b801df83dc", "url": "https://github.com/hyperledger/besu/commit/5f8b8ad47c7226452f1e4bb0052052b801df83dc", "message": "Merge branch 'TKT-792' of github.com:davemec/besu into TKT-792", "committedDate": "2020-06-11T13:33:35Z", "type": "commit"}, {"oid": "f706cdecd733f3e341947b7bc10736def8c1d6dc", "url": "https://github.com/hyperledger/besu/commit/f706cdecd733f3e341947b7bc10736def8c1d6dc", "message": "Fix for hive SpoofAmplification test\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-11T13:34:47Z", "type": "commit"}, {"oid": "8727564073ab340da723859dee347495b7844e94", "url": "https://github.com/hyperledger/besu/commit/8727564073ab340da723859dee347495b7844e94", "message": "Update to bond on PING and only add to PeerTable on PONG.\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-23T21:16:06Z", "type": "commit"}, {"oid": "4a2b83632c543458268bd64afecef0aa2e915b36", "url": "https://github.com/hyperledger/besu/commit/4a2b83632c543458268bd64afecef0aa2e915b36", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-23T21:27:04Z", "type": "commit"}, {"oid": "94e6cc13461c494b92ff66b57050028a26f9683e", "url": "https://github.com/hyperledger/besu/commit/94e6cc13461c494b92ff66b57050028a26f9683e", "message": "clean up\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-23T23:04:14Z", "type": "commit"}, {"oid": "4c069c47c08f797212dce534e3047cad62faaecc", "url": "https://github.com/hyperledger/besu/commit/4c069c47c08f797212dce534e3047cad62faaecc", "message": "Merge branch 'master' of github.com:hyperledger/besu into TKT-792", "committedDate": "2020-06-24T16:38:38Z", "type": "commit"}, {"oid": "48752ed113ea5604d7c1d57f0f844c988527e0b1", "url": "https://github.com/hyperledger/besu/commit/48752ed113ea5604d7c1d57f0f844c988527e0b1", "message": "clean up\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-25T12:44:18Z", "type": "commit"}, {"oid": "0d4f4ba1c98e5cc40f1c926939e063aba4e7c91f", "url": "https://github.com/hyperledger/besu/commit/0d4f4ba1c98e5cc40f1c926939e063aba4e7c91f", "message": "Merge branch 'master' into TKT-792", "committedDate": "2020-06-25T13:02:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0OTg1Mg==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r445549852", "bodyText": "Nice catch", "author": "abdelhamidbakhta", "createdAt": "2020-06-25T13:16:55Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -205,7 +207,7 @@ public void start() {\n         bootstrapNodes.stream()\n             .filter(peerPermissions::isAllowedInPeerTable)\n             .collect(Collectors.toList());\n-    initialDiscoveryPeers.stream().forEach(peerTable::tryAdd);\n+    initialDiscoveryPeers.forEach(peerTable::tryAdd);", "originalCommit": "0d4f4ba1c98e5cc40f1c926939e063aba4e7c91f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU2MTk4Mg==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r445561982", "bodyText": "Thanks to SonarQube.", "author": "davemec", "createdAt": "2020-06-25T13:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0OTg1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDYzMQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r445550631", "bodyText": "What about inlining instead of storing local variable", "author": "abdelhamidbakhta", "createdAt": "2020-06-25T13:18:06Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -296,31 +298,41 @@ public void onMessage(final Packet packet, final DiscoveryPeer sender) {\n     // Load the peer from the table, or use the instance that comes in.\n     final Optional<DiscoveryPeer> maybeKnownPeer =\n         peerTable.get(sender).filter(known -> known.discoveryEndpointMatches(sender));\n-    final DiscoveryPeer peer = maybeKnownPeer.orElse(sender);\n+    DiscoveryPeer peer = maybeKnownPeer.orElse(sender);\n     final boolean peerKnown = maybeKnownPeer.isPresent();\n+    if (!peerKnown && bondingPeers.containsKey(sender.getId())) {\n+      peer = bondingPeers.get(sender.getId());\n+    }\n \n+    final DiscoveryPeer finalPeer = peer;\n     switch (packet.getType()) {\n       case PING:\n         if (peerPermissions.allowInboundBonding(peer)) {\n-          addToPeerTable(peer);\n+          long now = System.currentTimeMillis();", "originalCommit": "0d4f4ba1c98e5cc40f1c926939e063aba4e7c91f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MjY0NQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r445552645", "bodyText": "is it not necessary to use a ConcurrentHashMap here?", "author": "matkt", "createdAt": "2020-06-25T13:21:15Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -168,6 +169,7 @@ private PeerDiscoveryController(\n     this.outboundMessageHandler = outboundMessageHandler;\n     this.peerBondedObservers = peerBondedObservers;\n     this.discoveryProtocolLogger = new DiscoveryProtocolLogger(metricsSystem);\n+    this.bondingPeers = new HashMap<>();", "originalCommit": "0d4f4ba1c98e5cc40f1c926939e063aba4e7c91f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1OTQyOQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r445559429", "bodyText": "I don't think we need that here. My understanding is that each peer has it's own controller so the Map should be ok.", "author": "davemec", "createdAt": "2020-06-25T13:30:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MjY0NQ=="}], "type": "inlineReview"}, {"oid": "0007795004533d1c9e755b30687ba5e363671fca", "url": "https://github.com/hyperledger/besu/commit/0007795004533d1c9e755b30687ba5e363671fca", "message": "Code clean up from PR\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-25T13:33:23Z", "type": "commit"}, {"oid": "772fe072f4b00043b15d2151cfb24f10edd66268", "url": "https://github.com/hyperledger/besu/commit/772fe072f4b00043b15d2151cfb24f10edd66268", "message": "Merge branch 'master' into TKT-792", "committedDate": "2020-06-25T20:39:27Z", "type": "commit"}, {"oid": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "url": "https://github.com/hyperledger/besu/commit/5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "message": "Merge branch 'master' into TKT-792", "committedDate": "2020-06-26T11:19:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyOTUzNw==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447029537", "bodyText": "Do we need this? Looks like sourceEndpoint.getTcpPort() will always be empty: \n  \n    \n      besu/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/VertxPeerDiscoveryAgent.java\n    \n    \n        Lines 219 to 220\n      in\n      b0115a2\n    \n    \n    \n    \n\n        \n          \n           final Endpoint endpoint = new Endpoint(host, port, OptionalInt.empty()); \n        \n\n        \n          \n           handleIncomingPacket(endpoint, event.result());", "author": "mbaxter", "createdAt": "2020-06-29T14:48:47Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgent.java", "diffHunk": "@@ -190,6 +191,10 @@ protected void handleIncomingPacket(final Endpoint sourceEndpoint, final Packet\n       }\n     }\n \n+    if (PacketType.PONG.equals(packet.getType())) {\n+      tcpPort = sourceEndpoint.getTcpPort();\n+    }", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzNDAwOA==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447034008", "bodyText": "We should only remove the peer from this collection if the interaction matches, right?\n        matchInteraction(packet)\n            .ifPresent(\n                interaction -> {\n                  bondingPeers.remove(peer.getId());\n                  addToPeerTable(peer);\n                  recursivePeerRefreshState.onBondingComplete(peer);\n                  addToPeerTable(finalPeer);\n                  recursivePeerRefreshState.onBondingComplete(finalPeer);\n                });", "author": "mbaxter", "createdAt": "2020-06-29T14:54:34Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -296,31 +298,40 @@ public void onMessage(final Packet packet, final DiscoveryPeer sender) {\n     // Load the peer from the table, or use the instance that comes in.\n     final Optional<DiscoveryPeer> maybeKnownPeer =\n         peerTable.get(sender).filter(known -> known.discoveryEndpointMatches(sender));\n-    final DiscoveryPeer peer = maybeKnownPeer.orElse(sender);\n+    DiscoveryPeer peer = maybeKnownPeer.orElse(sender);\n     final boolean peerKnown = maybeKnownPeer.isPresent();\n+    if (!peerKnown && bondingPeers.containsKey(sender.getId())) {\n+      peer = bondingPeers.get(sender.getId());\n+    }\n \n+    final DiscoveryPeer finalPeer = peer;\n     switch (packet.getType()) {\n       case PING:\n         if (peerPermissions.allowInboundBonding(peer)) {\n-          addToPeerTable(peer);\n+          peer.setLastSeen(System.currentTimeMillis());\n           final PingPacketData ping = packet.getPacketData(PingPacketData.class).get();\n+          if (!PeerDiscoveryStatus.BONDED.equals(peer.getStatus())\n+              && !bondingPeers.containsKey(peer.getId())) {\n+            bond(peer);\n+          }\n           respondToPing(ping, packet.getHash(), peer);\n         }\n         break;\n       case PONG:\n+        bondingPeers.remove(peer.getId());\n         matchInteraction(packet)\n             .ifPresent(\n                 interaction -> {\n-                  addToPeerTable(peer);\n-                  recursivePeerRefreshState.onBondingComplete(peer);\n+                  addToPeerTable(finalPeer);\n+                  recursivePeerRefreshState.onBondingComplete(finalPeer);\n                 });", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzNjkxMw==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447036913", "bodyText": "We already have a PeerStatus.BONDING state - why not just add bonding peers to our table with this status instead of creating a new collection?", "author": "mbaxter", "createdAt": "2020-06-29T14:58:34Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -168,6 +169,7 @@ private PeerDiscoveryController(\n     this.outboundMessageHandler = outboundMessageHandler;\n     this.peerBondedObservers = peerBondedObservers;\n     this.discoveryProtocolLogger = new DiscoveryProtocolLogger(metricsSystem);\n+    this.bondingPeers = new HashMap<>();", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIyNjIzOQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447226239", "bodyText": "I created the new collection so that the BONDING nodes did not interfere with the list of peers, specifically in regards to when the bucket is full and things need to be removed.", "author": "davemec", "createdAt": "2020-06-29T20:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzNjkxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2MjI3NQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447062275", "bodyText": "Why are there 3 packets here and not 2?  Seems like we should only have 1 incoming PING, and 1 incoming PONG.", "author": "mbaxter", "createdAt": "2020-06-29T15:33:35Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgentTest.java", "diffHunk": "@@ -209,25 +217,33 @@ public void bonding_allowIncomingBonding() {\n     final PeerPermissions peerPermissions = mock(PeerPermissions.class);\n     final MockPeerDiscoveryAgent agent =\n         helper.startDiscoveryAgent(Collections.emptyList(), peerPermissions);\n+    assertThat(agent.getAdvertisedPeer().isPresent()).isTrue();\n     final Peer localNode = agent.getAdvertisedPeer().get();\n \n     // Setup peer and permissions\n     final MockPeerDiscoveryAgent otherNode = helper.startDiscoveryAgent();\n+    assertThat(otherNode.getAdvertisedPeer().isPresent()).isTrue();\n     final Peer remotePeer = otherNode.getAdvertisedPeer().get();\n     when(peerPermissions.isPermitted(eq(localNode), any(), any())).thenReturn(false);\n     when(peerPermissions.isPermitted(\n             eq(localNode), eq(remotePeer), eq(Action.DISCOVERY_ACCEPT_INBOUND_BONDING)))\n         .thenReturn(true);\n+    when(peerPermissions.isPermitted(\n+            any(), eq(remotePeer), eq(Action.DISCOVERY_ALLOW_IN_PEER_TABLE)))\n+        .thenReturn(true);\n \n     // Bond\n     bondViaIncomingPing(agent, otherNode);\n \n-    // Check that peer received a return pong\n     List<IncomingPacket> remoteIncomingPackets = otherNode.getIncomingPackets();\n-    assertThat(remoteIncomingPackets).hasSize(1);\n+    assertThat(remoteIncomingPackets).hasSize(3);", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MTE3NA==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447071174", "bodyText": "We shouldn't need to manually send a PONG here -remoteAgent is using agent as a bootnode, so they should automatically bond.", "author": "mbaxter", "createdAt": "2020-06-29T15:45:59Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgentTest.java", "diffHunk": "@@ -349,11 +370,16 @@ public void simulatePeerRestartingOnDifferentEndpoint(\n \n     agent.start(999);\n     remoteAgent.start(888);\n+    assertThat(remoteAgent.getAdvertisedPeer().isPresent()).isTrue();\n     final DiscoveryPeer remotePeer = remoteAgent.getAdvertisedPeer().get();\n \n+    // Send PONG so that peers will be bonded\n+    final Packet pongPacket = helper.createPongPacket(agent, Hash.EMPTY);\n+    helper.sendMessageBetweenAgents(remoteAgent, agent, pongPacket);", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3Njc4OQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447076789", "bodyText": "There should only be 1 PONG here", "author": "mbaxter", "createdAt": "2020-06-29T15:54:22Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryBondingTest.java", "diffHunk": "@@ -48,10 +48,14 @@ public void pongSentUponPing() {\n         otherAgent.getIncomingPackets().stream()\n             .filter(p -> p.packet.getType().equals(PacketType.PONG))\n             .collect(Collectors.toList());\n-    assertThat(otherAgentIncomingPongs.size()).isEqualTo(1);\n+    assertThat(otherAgentIncomingPongs.size()).isEqualTo(2);", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3NzUxMQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447077511", "bodyText": "Again not sure why we have 2 PONG's here", "author": "mbaxter", "createdAt": "2020-06-29T15:55:21Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryBondingTest.java", "diffHunk": "@@ -86,10 +90,11 @@ public void neighborsPacketNotSentUnlessBonded() throws InterruptedException {\n         otherNode.getIncomingPackets().stream()\n             .filter(p -> p.packet.getType().equals(PacketType.PONG))\n             .collect(Collectors.toList());\n-    assertThat(incomingPongs.size()).isEqualTo(1);\n+    assertThat(incomingPongs.size()).isEqualTo(2);", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA4NDEyOQ==", "url": "https://github.com/hyperledger/besu/pull/1146#discussion_r447084129", "bodyText": "(nit) We should make these method names match:\n  private void mockPingPacketCreation(final DiscoveryPeer peer, final Packet mockPacket) {", "author": "mbaxter", "createdAt": "2020-06-29T16:05:05Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryControllerTest.java", "diffHunk": "@@ -153,24 +153,25 @@ public void bootstrapPeersRetriesSent() {\n   }\n \n   private void mockPingPacketCreation(final Packet mockPacket) {\n-    mockPacketCreation(PacketType.PING, Optional.empty(), mockPacket);\n+    mockPacketCreation(Optional.empty(), mockPacket);\n   }\n \n-  private void mockPacketCreation(\n-      final PacketType type, final DiscoveryPeer peer, final Packet mockPacket) {\n-    mockPacketCreation(type, Optional.of(peer), mockPacket);\n+  private void mockPacketCreation(final DiscoveryPeer peer, final Packet mockPacket) {", "originalCommit": "5d0f1afabbd7bce3989c5c3596900e6a964e8e07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}