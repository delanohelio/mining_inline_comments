{"pr_number": 1298, "pr_title": "KYLIN-4612 support job status writing to kafka", "pr_createdAt": "2020-06-30T09:53:04Z", "pr_url": "https://github.com/apache/kylin/pull/1298", "timeline": [{"oid": "048f42c7c708b40d0e0432975141b6e53f859aa8", "url": "https://github.com/apache/kylin/commit/048f42c7c708b40d0e0432975141b6e53f859aa8", "message": "KYLIN-4612 support job status writing to kafka", "committedDate": "2020-07-08T03:46:17Z", "type": "forcePushed"}, {"oid": "e43b8e83cbe70a22229ce01948b77512ac0ba487", "url": "https://github.com/apache/kylin/commit/e43b8e83cbe70a22229ce01948b77512ac0ba487", "message": "KYLIN-4612 support job status writing to kafka", "committedDate": "2020-07-08T03:52:05Z", "type": "forcePushed"}, {"oid": "65107a5243a284dab733a277cedb2c0da94b93b0", "url": "https://github.com/apache/kylin/commit/65107a5243a284dab733a277cedb2c0da94b93b0", "message": "KYLIN-4612 support job status writing to kafka", "committedDate": "2020-07-08T03:57:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxNjIwMA==", "url": "https://github.com/apache/kylin/pull/1298#discussion_r453416200", "bodyText": "Is this method useless ?", "author": "hit-lacus", "createdAt": "2020-07-13T03:29:37Z", "path": "core-common/src/main/java/org/apache/kylin/common/kafka/KafkaMsgProducer.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.common.kafka;\n+\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.Producer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kylin.common.KylinConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+\n+public class KafkaMsgProducer {\n+    private static final Logger logger = LoggerFactory.getLogger(KafkaMsgProducer.class);\n+\n+    private static Producer<String, String> producer;\n+    private static Map<String, String> kafkaConfig;\n+    private static String TOPIC_NAME;\n+\n+\n+    private static Properties kafkaProperties = new Properties() {\n+        {\n+            put(ProducerConfig.ACKS_CONFIG, \"-1\");\n+            put(ProducerConfig.RETRIES_CONFIG, 3);\n+            put(ProducerConfig.COMPRESSION_TYPE_CONFIG, \"lz4\");\n+            put(ProducerConfig.LINGER_MS_CONFIG, 500);\n+            put(ProducerConfig.BATCH_SIZE_CONFIG, 10000);\n+            put(\"max.in.flight.requests.per.connection\", 1);\n+        }\n+    };\n+\n+\n+    private KafkaMsgProducer() {\n+        init();\n+    }\n+\n+    private static class BasicProducerHolder {\n+        private static final KafkaMsgProducer INSTANCE = new KafkaMsgProducer();\n+    }\n+\n+    public static final KafkaMsgProducer getInstance() {\n+        return BasicProducerHolder.INSTANCE;\n+    }\n+\n+    public void init() {\n+        if (null == kafkaConfig) {\n+            kafkaConfig = KylinConfig.getInstanceFromEnv().getJobStatusKafkaConfig();\n+        }\n+        if (null == producer) {\n+            kafkaProperties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaConfig.get(\"bootstrap.servers\"));\n+            for(Map.Entry<String, String> entry : kafkaConfig.entrySet()){\n+                kafkaProperties.put(entry.getKey(), entry.getValue());\n+            }\n+            producer = new KafkaProducer<>(kafkaProperties);\n+        }\n+        if (null == TOPIC_NAME) {\n+            TOPIC_NAME = kafkaConfig.get(\"topic.name\");\n+        }\n+    }\n+\n+    public void sendJobStatusMessage(String message) {\n+        sendMessage(message);\n+    }\n+\n+    public void sendEventMessage(String message) {", "originalCommit": "65107a5243a284dab733a277cedb2c0da94b93b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ddcc339d8e3663e72e809ecebfb987d826f8ceef", "url": "https://github.com/apache/kylin/commit/ddcc339d8e3663e72e809ecebfb987d826f8ceef", "message": "KYLIN-4612 support job status writing to kafka", "committedDate": "2020-07-13T10:05:17Z", "type": "commit"}, {"oid": "ddcc339d8e3663e72e809ecebfb987d826f8ceef", "url": "https://github.com/apache/kylin/commit/ddcc339d8e3663e72e809ecebfb987d826f8ceef", "message": "KYLIN-4612 support job status writing to kafka", "committedDate": "2020-07-13T10:05:17Z", "type": "forcePushed"}]}