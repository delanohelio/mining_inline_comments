{"pr_number": 2076, "pr_title": "2069 message retry attributes", "pr_createdAt": "2020-09-14T17:37:00Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/2076", "timeline": [{"oid": "df20a04b53488942f9231af446de8da80d79d2f6", "url": "https://github.com/hapifhir/hapi-fhir/commit/df20a04b53488942f9231af446de8da80d79d2f6", "message": "Add test to ensure Messageheaders are serializable", "committedDate": "2020-09-09T16:07:22Z", "type": "commit"}, {"oid": "222923374987cba9118f8e3a176815a6f185c708", "url": "https://github.com/hapifhir/hapi-fhir/commit/222923374987cba9118f8e3a176815a6f185c708", "message": "Move subscription models to legacy, except the ones that are subscription specific", "committedDate": "2020-09-09T19:58:41Z", "type": "commit"}, {"oid": "28a9a53917d324c71910c3dca50c7dfd6afe7270", "url": "https://github.com/hapifhir/hapi-fhir/commit/28a9a53917d324c71910c3dca50c7dfd6afe7270", "message": "Rework to keep several things in subscription", "committedDate": "2020-09-10T20:05:56Z", "type": "commit"}, {"oid": "c3ddf59d6fd699d35471ce31968ca66a8a4c4ae5", "url": "https://github.com/hapifhir/hapi-fhir/commit/c3ddf59d6fd699d35471ce31968ca66a8a4c4ae5", "message": "Add HapiMessageHeaders to BaseJsonMessage class", "committedDate": "2020-09-14T17:02:32Z", "type": "commit"}, {"oid": "2e1f2a662a44944b68677f5b4d4f6ce3dfc72e9d", "url": "https://github.com/hapifhir/hapi-fhir/commit/2e1f2a662a44944b68677f5b4d4f6ce3dfc72e9d", "message": "Move class to top level, add tests", "committedDate": "2020-09-14T17:20:01Z", "type": "commit"}, {"oid": "3e324355f26f6c11d4ab96fa575f590dfee289f8", "url": "https://github.com/hapifhir/hapi-fhir/commit/3e324355f26f6c11d4ab96fa575f590dfee289f8", "message": "Add javadocs", "committedDate": "2020-09-14T17:28:36Z", "type": "commit"}, {"oid": "9a09a8abf3a0f3b24804553bed52b1a80b74a6be", "url": "https://github.com/hapifhir/hapi-fhir/commit/9a09a8abf3a0f3b24804553bed52b1a80b74a6be", "message": "Update todos", "committedDate": "2020-09-14T17:41:11Z", "type": "commit"}, {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6", "url": "https://github.com/hapifhir/hapi-fhir/commit/f20c42a8bd92167c322950f98ce2fa29361124f6", "message": "Remove license claims, remove dead class", "committedDate": "2020-09-14T17:48:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzYxMQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488143611", "bodyText": "is the upcast really necessary?  So strange...", "author": "fil512", "createdAt": "2020-09-14T18:40:18Z", "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/broker/EmpiMessageHandler.java", "diffHunk": "@@ -95,7 +96,8 @@ public void matchEmpiAndUpdateLinks(ResourceModifiedMessage theMsg) {\n \t\t} finally {\n \t\t\t// Interceptor call: EMPI_AFTER_PERSISTED_RESOURCE_CHECKED\n \t\t\tHookParams params = new HookParams()\n-\t\t\t\t.add(ResourceModifiedMessage.class, theMsg)\n+\t\t\t\t//Janky upcast.\n+\t\t\t\t.add(BaseResourceModifiedMessage.class, (BaseResourceModifiedMessage) theMsg)", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3MzM5Mw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488173393", "bodyText": "Investigating...", "author": "tadgh", "createdAt": "2020-09-14T19:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NzgxMA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488177810", "bodyText": "This was indeed a waste of characters", "author": "tadgh", "createdAt": "2020-09-14T19:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTAwMg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488145002", "bodyText": "The subscription id could be useful to the recipient.  I would leave it in and populate it if possible.", "author": "fil512", "createdAt": "2020-09-14T18:42:49Z", "path": "hapi-fhir-jpaserver-subscription/src/main/java/ca/uhn/fhir/jpa/subscription/match/deliver/message/SubscriptionDeliveringMessageSubscriber.java", "diffHunk": "@@ -63,6 +63,7 @@ protected void deliverPayload(ResourceDeliveryMessage theMsg, CanonicalSubscript\n \t}\n \n \tprotected void doDelivery(ResourceDeliveryMessage theMsg, CanonicalSubscription theSubscription, IChannelProducer theChannelProducer, IBaseResource thePayloadResource) {\n+\t\t//TODO GGG/KHS Question: is this the point at which we can use a BaseResourceModifiedMessage, since technically we no longer have need of a subscriptionId?\n \t\tResourceModifiedMessage payload = new ResourceModifiedMessage(myFhirContext, thePayloadResource, theMsg.getOperationType());", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3MDcwOQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488170709", "bodyText": "Righto, so no change is required here.", "author": "tadgh", "createdAt": "2020-09-14T19:30:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTMxNA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488145314", "bodyText": "That TODO should probably be a FIXME", "author": "fil512", "createdAt": "2020-09-14T18:43:23Z", "path": "hapi-fhir-jpaserver-subscription/src/main/java/ca/uhn/fhir/jpa/subscription/match/matcher/subscriber/SubscriptionMatchingSubscriber.java", "diffHunk": "@@ -79,14 +79,14 @@ public SubscriptionMatchingSubscriber() {\n \tpublic void handleMessage(@Nonnull Message<?> theMessage) throws MessagingException {\n \t\tourLog.trace(\"Handling resource modified message: {}\", theMessage);\n \n+\t\t//TODO ADD BACKPORT FOR HANDLING OLD LEGACY SUBSCRIPTIONS HERE\n \t\tif (!(theMessage instanceof ResourceModifiedJsonMessage)) {", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3Mjc0OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488172748", "bodyText": "Actually this was a dead comment. Earlier we agreed that the class won't change, because of the issue of the Pointcuts having their arguments changed, while there are messages in flight.", "author": "tadgh", "createdAt": "2020-09-14T19:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488154441", "bodyText": "I thought we agreed this would only be in the EMPI class", "author": "fil512", "createdAt": "2020-09-14T18:59:56Z", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/BaseResourceModifiedMessage.java", "diffHunk": "@@ -0,0 +1,184 @@\n+package ca.uhn.fhir.rest.server.messaging;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.model.api.IModelJson;\n+import ca.uhn.fhir.parser.IParser;\n+import ca.uhn.fhir.rest.api.EncodingEnum;\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.util.ResourceReferenceInfo;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.instance.model.api.IIdType;\n+\n+import java.util.List;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+public class BaseResourceModifiedMessage extends BaseResourceMessage implements IResourceMessage, IModelJson {\n+\n+\t@JsonProperty(\"resourceId\")\n+\tprotected String myId;\n+\t@JsonProperty(\"operationType\")\n+\tprotected OperationTypeEnum myOperationType;\n+\t@JsonProperty(\"payload\")\n+\tprotected String myPayload;\n+\t@JsonProperty(\"payloadId\")\n+\tprotected String myPayloadId;\n+\t@JsonProperty(\"parentTransactionGuid\")", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3MjA3NA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488172074", "bodyText": "For now the only thing that cares about the parentTransactionGuid is EMPI, but I feel it is helpful to know which original transaction caused hooks to fire. Seems to me like something we will want. If you disagree, that's fine, I can subclass it out. Let me know", "author": "tadgh", "createdAt": "2020-09-14T19:32:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NDMzNw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488174337", "bodyText": "it isn't relevant to channel import so it shouldn't be on that one", "author": "fil512", "createdAt": "2020-09-14T19:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTY5NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488175695", "bodyText": "\ud83d\ude46\u200d\u2642\ufe0f", "author": "tadgh", "createdAt": "2020-09-14T19:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI0NzQyMw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488247423", "bodyText": "as per our conversation, I am going to move this attribute to a parent class and document it. See a9fb849", "author": "tadgh", "createdAt": "2020-09-14T22:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTU2NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169565", "bodyText": "RETRY_COUNT_KEY", "author": "fil512", "createdAt": "2020-09-14T19:27:42Z", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTY5OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169698", "bodyText": "FIRST_FAILURE_TIMESTAMP_KEY", "author": "fil512", "createdAt": "2020-09-14T19:27:58Z", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";\n+    public static String FIRST_FAILURE_HEADER = \"firstFailure\";", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTg0OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169848", "bodyText": "LAST_FAILURE_TIMESTAMP_KEY", "author": "fil512", "createdAt": "2020-09-14T19:28:17Z", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";\n+    public static String FIRST_FAILURE_HEADER = \"firstFailure\";\n+    public static String LAST_FAILURE_HEADER = \"lastFailure\";", "originalCommit": "f20c42a8bd92167c322950f98ce2fa29361124f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6e0ef035e935cbd47ba843616d9977ebfe0cddd5", "url": "https://github.com/hapifhir/hapi-fhir/commit/6e0ef035e935cbd47ba843616d9977ebfe0cddd5", "message": "Rename constants. Remove dead comment", "committedDate": "2020-09-14T19:35:58Z", "type": "commit"}, {"oid": "2871b721a2a032b8ff56843bcd00d10e1f91b41b", "url": "https://github.com/hapifhir/hapi-fhir/commit/2871b721a2a032b8ff56843bcd00d10e1f91b41b", "message": "Merge branch 'master' into 2069-message-retry-attributes", "committedDate": "2020-09-14T20:06:14Z", "type": "commit"}, {"oid": "a9fb849d497226c331c9b6dfdc7a2f0af32e49cf", "url": "https://github.com/hapifhir/hapi-fhir/commit/a9fb849d497226c331c9b6dfdc7a2f0af32e49cf", "message": "Moved more into parent class, added javadocs for transactionId", "committedDate": "2020-09-14T20:44:50Z", "type": "commit"}, {"oid": "5744f7035ff9ad34b18f97869a62a0c629efdebe", "url": "https://github.com/hapifhir/hapi-fhir/commit/5744f7035ff9ad34b18f97869a62a0c629efdebe", "message": "Rename to match names across classes", "committedDate": "2020-09-14T20:54:09Z", "type": "commit"}, {"oid": "ea64bea1b03fe4823cb45bcef30eb837af93b00e", "url": "https://github.com/hapifhir/hapi-fhir/commit/ea64bea1b03fe4823cb45bcef30eb837af93b00e", "message": "Refactor to use concrete class instead of parent", "committedDate": "2020-09-15T19:27:21Z", "type": "commit"}, {"oid": "3ca1a42d378cec4fee0b0b588ab2e33bd91f8407", "url": "https://github.com/hapifhir/hapi-fhir/commit/3ca1a42d378cec4fee0b0b588ab2e33bd91f8407", "message": "Swap EMPI channel consumer to use Subscription ResourceModifiedMessages", "committedDate": "2020-09-15T19:37:24Z", "type": "commit"}, {"oid": "74bba9dbcc9219fb4de00b50fa6ed4ca790524e6", "url": "https://github.com/hapifhir/hapi-fhir/commit/74bba9dbcc9219fb4de00b50fa6ed4ca790524e6", "message": "Rename to ResourceOperationMessage", "committedDate": "2020-09-15T22:57:55Z", "type": "commit"}, {"oid": "cdc195bd0b0e0327921b52cc384c59778af24958", "url": "https://github.com/hapifhir/hapi-fhir/commit/cdc195bd0b0e0327921b52cc384c59778af24958", "message": "Change to use long type for failure timestamps", "committedDate": "2020-09-16T17:13:43Z", "type": "commit"}, {"oid": "666113696be02f0584753d6e3d064b6e302ee051", "url": "https://github.com/hapifhir/hapi-fhir/commit/666113696be02f0584753d6e3d064b6e302ee051", "message": "add attributes to HapiHeaders. Turns out deserialization makes a best guess, and doesnt respect types in Map<String,Object>", "committedDate": "2020-09-16T18:06:54Z", "type": "commit"}, {"oid": "4c5051a5d924433ba8afbf6c0c41630a0019ef44", "url": "https://github.com/hapifhir/hapi-fhir/commit/4c5051a5d924433ba8afbf6c0c41630a0019ef44", "message": "More refactor for custom headers and top level attributes", "committedDate": "2020-09-16T19:05:44Z", "type": "commit"}, {"oid": "558f7a5ccf02d534e864f98679300e71f58f9d97", "url": "https://github.com/hapifhir/hapi-fhir/commit/558f7a5ccf02d534e864f98679300e71f58f9d97", "message": "Minor cleanup", "committedDate": "2020-09-16T19:21:49Z", "type": "commit"}, {"oid": "9d3a97a46f639e853e0f77066be7111798c8e357", "url": "https://github.com/hapifhir/hapi-fhir/commit/9d3a97a46f639e853e0f77066be7111798c8e357", "message": "Default for int", "committedDate": "2020-09-16T19:24:09Z", "type": "commit"}, {"oid": "ddfac72e8d83b8f3c60abf084e93cc9b06deae0b", "url": "https://github.com/hapifhir/hapi-fhir/commit/ddfac72e8d83b8f3c60abf084e93cc9b06deae0b", "message": "Clean spacing", "committedDate": "2020-09-16T19:27:03Z", "type": "commit"}, {"oid": "45775c86604fb82f5a90e66f92d5900a81875c1e", "url": "https://github.com/hapifhir/hapi-fhir/commit/45775c86604fb82f5a90e66f92d5900a81875c1e", "message": "Reuse constant", "committedDate": "2020-09-16T19:29:04Z", "type": "commit"}]}