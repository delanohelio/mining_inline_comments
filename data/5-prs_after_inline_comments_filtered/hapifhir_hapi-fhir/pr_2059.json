{"pr_number": 2059, "pr_title": "Improve synchronous searching by providing offset & limit support", "pr_createdAt": "2020-08-31T12:01:21Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/2059", "timeline": [{"oid": "166e82ceb9a3c9a1749dd28078a1cd0e2dd9b5a5", "url": "https://github.com/hapifhir/hapi-fhir/commit/166e82ceb9a3c9a1749dd28078a1cd0e2dd9b5a5", "message": "Improve synchronous searching by providing offset & limit support\n\nAdd support for offset querying which leverages paging at the query level\nAdd configuration for search default page size and search maximum page size\nIf using offset, always use synchronous searching to avoid extra database insert/update etc.\nWhen using offset, only calculate count if it's wanted\nValidate params closer to provider and handle size if search returned \"all\" (or last)", "committedDate": "2020-08-31T11:08:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzMjIzNA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r480132234", "bodyText": "It should defnitely be noted in the javadoc that _offset is a nonstandard FHIR parameter and may not be supported on all servers.", "author": "jamesagnew", "createdAt": "2020-08-31T13:30:45Z", "path": "hapi-fhir-base/src/main/java/ca/uhn/fhir/rest/gclient/IQuery.java", "diffHunk": "@@ -49,6 +49,14 @@\n \t */\n \tIQuery<Y> count(int theCount);\n \n+\t/**\n+\t * Specifies the <code>_offset</code> parameter, which indicates to the server the offset of the query. Use\n+\t * with {@link #count(int)}.", "originalCommit": "166e82ceb9a3c9a1749dd28078a1cd0e2dd9b5a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzU1Ng==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r480143556", "bodyText": "I'm not sure I love the idea of this being the default if no paging provider exists- This feels like a significant change in behaviour from the current default.\nWhat if we modified IPagingProvider to have a new method along the lines of\ndefault boolean supportsOffsetQueries() { return false; }\n...and the provider could basically declare itself stateless?", "author": "jamesagnew", "createdAt": "2020-08-31T13:49:14Z", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/method/BaseResourceReturningMethodBinding.java", "diffHunk": "@@ -200,7 +210,18 @@ IBaseResource createBundleFromBundleProvider(IRestfulServer<?> theServer, Reques\n \t\tString linkPrev = null;\n \t\tString linkNext = null;\n \n-\t\tif (isNotBlank(theResult.getCurrentPageId())) {\n+\t\tif (theServer.getPagingProvider() == null || requestOffset != null) {", "originalCommit": "166e82ceb9a3c9a1749dd28078a1cd0e2dd9b5a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg1Mzg1OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r480853858", "bodyText": "My reasoning was that actually one wouldn't need the \"extra\" paging provider at all if this is used (and maybe if one wants to use database cached paging, it could be implemented later on on top of this? instead of splitting search logic to asynchronous search etc.). And if one did not define the maximumPageSize and/or defaultPageSize in the RestfulServer this wouldn't change the current behaviour (as the actual query would still fetch everything). What do you think?", "author": "tuomoa", "createdAt": "2020-09-01T06:02:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0ODQ2NA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r503548464", "bodyText": "I'm going to merge this as is - But I do remain nervous that we're changing behaviour for existing clients. Depending on community feedback we may rework this to require an explicit setting.", "author": "jamesagnew", "createdAt": "2020-10-12T21:39:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxNTMyOA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r503815328", "bodyText": "All right that sounds good to me. \ud83d\udc4d", "author": "tuomoa", "createdAt": "2020-10-13T09:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0NjE0Ng==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r480146146", "bodyText": "This new annotation should probably get a mention in the search page and perhaps a section on stateless paging would be good on the paging page", "author": "jamesagnew", "createdAt": "2020-08-31T13:53:22Z", "path": "hapi-fhir-client/src/main/java/ca/uhn/fhir/rest/client/method/MethodUtil.java", "diffHunk": "@@ -340,6 +340,8 @@ public static StringBuilder createUrl(String theResourceType, Map<String, List<S\n \t\t\t\t\t\t\t\touterCollectionType);\n \t\t\t\t\t} else if (nextAnnotation instanceof Count) {\n \t\t\t\t\t\tparam = new CountParameter();\n+\t\t\t\t\t} else if (nextAnnotation instanceof Offset) {", "originalCommit": "166e82ceb9a3c9a1749dd28078a1cd0e2dd9b5a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg1NDQyNg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r480854426", "bodyText": "Yeah sure, I'll update the relevant documentation after the implementation is working.", "author": "tuomoa", "createdAt": "2020-09-01T06:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0NjE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxOTE2MA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r487819160", "bodyText": "I updated those docs to include mentions about count and offset parameters (and also something about the paging providers).", "author": "tuomoa", "createdAt": "2020-09-14T10:45:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0NjE0Ng=="}], "type": "inlineReview"}, {"oid": "b1fe2c2e68f5b9fd3007980acb30755b6a23bb54", "url": "https://github.com/hapifhir/hapi-fhir/commit/b1fe2c2e68f5b9fd3007980acb30755b6a23bb54", "message": "Review and test fixes\n\nComment _offset as nonstandard parameter\nMake synchronous search always count the total value (for now)\nFix issue with FulltextSearchSvcImpl mutating param map\nDirty fix for BaseJpaTest (not sure how to fix the including resources issue)", "committedDate": "2020-09-01T12:51:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExOTIzMg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r481119232", "bodyText": "I'm not sure I get the issue being fixed here - Synchronous calls are performed when we're trying to minimize database load because we're expecting the call to be made a lot, so forcing a count goes against the whole objective.", "author": "jamesagnew", "createdAt": "2020-09-01T13:01:09Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/SearchCoordinatorSvcImpl.java", "diffHunk": "@@ -473,9 +474,22 @@ private IBundleProvider executeQuery(String theResourceType, SearchParameterMap\n \t\t\tRequestPartitionId requestPartitionId = myRequestPartitionHelperService.determineReadPartitionForRequest(theRequestDetails, theResourceType);\n \n \t\t\tLong count = 0L;\n-\t\t\tif (wantCount) {\n+\t\t\t// TODO not sure if this is good idea or not? synchronous is mostly used on internal operations, maybe count is not needed\n+\t\t\t//  but code has to be fixed. Most operations are looking for one resource. Those that are fetching larger could be  fixed to\n+\t\t\t//  handle size nullability and pages correctly.\n+\t\t\tif (wantCount || theParams.isLoadSynchronous()) {", "originalCommit": "b1fe2c2e68f5b9fd3007980acb30755b6a23bb54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY5NzY1Ng==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r481697656", "bodyText": "That's a valid point, I'll refactor the tests to work without accurate count. There is some tests that are checking that the result bundle contains for example 1 item and size 1, but the size is not known if accurate count was not requested (if query limit wasn't greater than returned items). But I'll see what I can do about this.", "author": "tuomoa", "createdAt": "2020-09-02T05:02:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExOTIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1NjAwOQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r481756009", "bodyText": "Actually most cases just uses loadSynchronous true, and do not define count and therefore the limit is the fetchSizeDefaultMaximum (or if it's not defined then everything. I'll refactor this.", "author": "tuomoa", "createdAt": "2020-09-02T06:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExOTIzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyMDEwOA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r481120108", "bodyText": "Wrong how? It's incomplete sure, but that's only because you're seeing only the first 5 results as configured.", "author": "jamesagnew", "createdAt": "2020-09-01T13:02:37Z", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoHashesTest.java", "diffHunk": "@@ -2655,6 +2655,7 @@ public void testSearchWithDate() {\n \t}\n \n \t@Test\n+\t// TODO What does this mean? The size in the result is actually wrong if we are hitting the fetchSizeDefaultMaximum?", "originalCommit": "b1fe2c2e68f5b9fd3007980acb30755b6a23bb54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcwMDE3OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r481700178", "bodyText": "I think it's okay to just return 5 results, but saying the the search total is also 5 seems to be wrong if there is actually more in the db? If we are hitting the fetchSizeDefaultMaximum shouldn't we null the size in bundle provider -> requester will see that I got N entries but there might be more (or not).\nWhen using offset paging, if we would like to actually limit every search to some value, we would need to decrease the query limit when offset is increased which seems to me would just bring more complexity without any real benefit?", "author": "tuomoa", "createdAt": "2020-09-02T05:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyMDEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MTc4Ng==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r487571786", "bodyText": "Ok yeah I could see that. I'd say adjusting the test to check that size() returns null in this case is reasonable.", "author": "jamesagnew", "createdAt": "2020-09-13T20:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyMDEwOA=="}], "type": "inlineReview"}, {"oid": "e342263fae25b661feb0aa134af9db0273d1624e", "url": "https://github.com/hapifhir/hapi-fhir/commit/e342263fae25b661feb0aa134af9db0273d1624e", "message": "Remove temporary count querying fix for synchronous loads", "committedDate": "2020-09-02T07:16:09Z", "type": "commit"}, {"oid": "540036b5acb5763c6351066e6ae5485c15c5c7dd", "url": "https://github.com/hapifhir/hapi-fhir/commit/540036b5acb5763c6351066e6ae5485c15c5c7dd", "message": "Fix offsetting of everything operations, do not drop zero offset", "committedDate": "2020-09-02T07:40:20Z", "type": "commit"}, {"oid": "4937bd64ae7f7f6bfd4382b13fe5d2f12d340956", "url": "https://github.com/hapifhir/hapi-fhir/commit/4937bd64ae7f7f6bfd4382b13fe5d2f12d340956", "message": "Fix jpa test default and maximum page size, add some fixmes to tests before resolved", "committedDate": "2020-09-02T10:19:04Z", "type": "commit"}, {"oid": "57f1fed14d0f988b970355977c257309e8bd7060", "url": "https://github.com/hapifhir/hapi-fhir/commit/57f1fed14d0f988b970355977c257309e8bd7060", "message": "Ignore one failing test, fix others", "committedDate": "2020-09-02T12:38:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NjI5NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r482046295", "bodyText": "I'm not really sure why this is not working. I'm not sure but maybe it seems that the actual query returns duplicate pids and when that's combined to LIMIT 10 we are only getting 6 pids. The same test with DSTU3 works.. Maybe there is some kind of new include param in R4 which causes query to find duplicates or something..", "author": "tuomoa", "createdAt": "2020-09-02T12:55:57Z", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r4/ResourceProviderR4Test.java", "diffHunk": "@@ -2919,6 +2919,8 @@ public void testPagingOverEverythingSet() throws InterruptedException {\n \t}\n \n \t@Test\n+\t@Disabled\n+\t// FIXME no idea why this is returning only 6 results. stu2/3 tests are working..", "originalCommit": "57f1fed14d0f988b970355977c257309e8bd7060", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3OTkyOA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r487579928", "bodyText": "I checked out this branch and played with this a bit- The issue is that in R4 there are multiple ResourceLink rows created for each Observation (one to satisfy the subject parameter, and another to satisfy the patient parameter.\nThe ultimate SQL that goes to the DB is this:\nselect resourceta0_.RES_ID as col_0_0_ from HFJ_RESOURCE resourceta0_ left outer join HFJ_RES_LINK myresource1_ on resourceta0_.RES_ID=myresource1_.SRC_RESOURCE_ID where myresource1_.TARGET_RESOURCE_ID=1 and (resourceta0_.RES_DELETED_AT is null) limit 10\n..but within the first 10 rows there are some duplicates because of the duplicate ResLink rows, and these get filtered out leaving you with 6 results.\nI suspect adding a distinct to the query would fix this, but we have definitely heard lots of reports that distinct is a performance killer on large hapi fhir deployments.. so it would need to appear in the SQL only in cases where paging is turned off", "author": "jamesagnew", "createdAt": "2020-09-13T21:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NjI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NTYwMg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2059#discussion_r487755602", "bodyText": "Seems like I was on the right track here, I added the DISTINCT clause only if using synchronous loading (usually when doing offset paging). This way if one is using the DatabaseBackedPagingProvider the everything query works as it did before. This seems to do the trick here.", "author": "tuomoa", "createdAt": "2020-09-14T08:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NjI5NQ=="}], "type": "inlineReview"}, {"oid": "1bf6c0aaa2cd4a36af7ead824a970389f5c27759", "url": "https://github.com/hapifhir/hapi-fhir/commit/1bf6c0aaa2cd4a36af7ead824a970389f5c27759", "message": "Fix Dereferenced variable may be null", "committedDate": "2020-09-03T08:35:15Z", "type": "commit"}, {"oid": "0e5a3f7948d2e6ed5d447fb114714d3d79dcd582", "url": "https://github.com/hapifhir/hapi-fhir/commit/0e5a3f7948d2e6ed5d447fb114714d3d79dcd582", "message": "Fix everything paging in R4 by adding DISTINCT if synchronous load is used\n\nAlso fix assertion of size when hitting fetchSizeDefaultMaximum", "committedDate": "2020-09-14T08:52:23Z", "type": "commit"}, {"oid": "145714186011144e1125668d5374f074be72c1cc", "url": "https://github.com/hapifhir/hapi-fhir/commit/145714186011144e1125668d5374f074be72c1cc", "message": "Add documentation about offset annotation and paging", "committedDate": "2020-09-14T10:41:19Z", "type": "commit"}, {"oid": "39c14f40b6c5b9d38c93c3527bdf90098de21573", "url": "https://github.com/hapifhir/hapi-fhir/commit/39c14f40b6c5b9d38c93c3527bdf90098de21573", "message": "Merge branch 'master' into better_synchronous_paging", "committedDate": "2020-10-12T21:40:33Z", "type": "commit"}]}