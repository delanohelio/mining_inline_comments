{"pr_number": 845, "pr_title": "CLDR-8802 Fetch DBPedia abstracts, show in info panel", "pr_createdAt": "2020-11-16T20:18:41Z", "pr_url": "https://github.com/unicode-org/cldr/pull/845", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzAzNw==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524583037", "bodyText": "Since processRequest is already over 700 lines, this block should definitely go in a subroutine", "author": "btangmu", "createdAt": "2020-11-16T21:09:12Z", "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java", "diffHunk": "@@ -1039,6 +1050,34 @@ public CheckCLDR handleCheck(String path, String fullPath, String value, Options\n                 final JSONWriter r = newJSONStatusQuick(sm);\n                 r.put(\"locmap\", getJSONLocMap(sm));\n                 send(r, out);\n+            } else if(what.equals(WHAT_ABSTRACT)) {\n+                if(xpath == null || xpath.isEmpty()) {", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDUzMg==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524604532", "bodyText": "Is this boilerplate comment generated by Eclipse?", "author": "btangmu", "createdAt": "2020-11-16T21:28:33Z", "path": "tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxNDE3OA==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524614178", "bodyText": "by netbeans, but yes", "author": "srl295", "createdAt": "2020-11-16T21:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY0MTc5Ng==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524641796", "bodyText": "O_LANGUAGE thru SPARQL_SERVER could be private?", "author": "btangmu", "createdAt": "2020-11-16T21:57:05Z", "path": "tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.unicode.cldr.rdf.tool;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.apache.jena.arq.querybuilder.SelectBuilder;\n+import org.apache.jena.query.Query;\n+import org.apache.jena.query.QueryExecutionFactory;\n+import org.apache.jena.query.QuerySolution;\n+import org.apache.jena.query.ResultSet;\n+import org.apache.jena.sparql.engine.http.QueryEngineHTTP;\n+import org.apache.jena.sparql.lang.sparql_11.ParseException;\n+import org.unicode.cldr.util.Pair;\n+\n+class FetchAbstracts {\n+    public static void main(String args[]) throws ParseException {\n+        final String code = \"grc\";\n+        Pair<String, String> abs = getInstance().fetchLanguageAbstract(code);\n+        System.out.println(abs.getFirst());\n+        System.out.println(code + \": \" + abs.getSecond());\n+    }\n+    \n+    final static class FetchAbstractsHelper {\n+        private static FetchAbstracts INSTANCE = new FetchAbstracts();\n+    }\n+    \n+    public static final FetchAbstracts getInstance() {\n+        return FetchAbstractsHelper.INSTANCE;\n+    }\n+\n+    public Pair<String, String> fetchLanguageAbstract(final String code) {\n+        Pair<String,String> abs = null;\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_1, code, \"en\");\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_2, code, \"en\");\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_3, code, \"en\");\n+        return abs;\n+    }\n+\n+    \n+    public Pair<String,String> getAbstract(final String resType, final String codeKeyword, final String codeValue, final String abstractLang) {\n+        try {\n+            SelectBuilder builder = new SelectBuilder()\n+//                .addPrefixes(PrefixMapping.Extended)\n+                    .addPrefix(\"dbo\", \"http://dbpedia.org/ontology/\")\n+                    .addVar(\"*\")\n+                    .addWhere(O_LANGUAGE, codeKeyword, codeValue)\n+                    .addWhere( O_LANGUAGE, \"dbo:abstract\", \"?abstract\")\n+                    .addFilter(\"langMatches(lang(?abstract),\\\"\"+abstractLang+\"\\\")\")\n+                    ;\n+            \n+            Query q = builder.build();\n+            System.err.println(\"Query: \" + codeKeyword+\"=\"+codeValue);\n+            //        System.out.println(builder.buildString());\n+            QueryEngineHTTP qEngine = QueryExecutionFactory.createServiceRequest(SPARQL_SERVER, q);\n+            //        qEngine.setHttpContext(httpContext);\n+            ResultSet results = qEngine.execSelect();\n+            while(results.hasNext()) {\n+                QuerySolution qs = results.next();\n+                //            System.out.println(qs.toString());\n+//            for(Iterator<String> iter = qs.varNames(); iter.hasNext();) {\n+                //                System.out.println(\"v=\" + iter.next());\n+                //            }\n+                String rv = qs.getLiteral(\"abstract\").getString();\n+                String rs = qs.getResource(resType.substring(1)).getURI();\n+                //            System.out.println(rv);\n+                return Pair.of(rs, rv);\n+            }\n+            System.err.println(\" -> no result\");\n+            return null;\n+        } catch (ParseException ex) {\n+            Logger.getLogger(FetchAbstracts.class.getName()).log(Level.SEVERE, null, ex);\n+            return null;\n+        }\n+    }\n+\n+    public static final String O_LANGUAGE = \"?language\";\n+    public static final String DBO_639_3 = \"dbo:iso6393Code\";\n+    public static final String DBO_639_2 = \"dbo:iso6392Code\";\n+    public static final String DBO_639_1 = \"dbo:iso6391Code\";\n+    public static final String SPARQL_SERVER = \"https://dbpedia.org/sparql/\";", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MjM1OQ==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r525372359", "bodyText": "this was refactored, but yes", "author": "srl295", "createdAt": "2020-11-17T18:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY0MTc5Ng=="}], "type": "inlineReview"}, {"oid": "fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "url": "https://github.com/unicode-org/cldr/commit/fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.", "committedDate": "2020-11-17T16:59:07Z", "type": "forcePushed"}, {"oid": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "url": "https://github.com/unicode-org/cldr/commit/b0d2132bac86be7689ecfe4b9066d7152976a47f", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.\n- moved deferred help into js/CldrDeferredHelp.js", "committedDate": "2020-11-18T00:04:25Z", "type": "commit"}, {"oid": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "url": "https://github.com/unicode-org/cldr/commit/b0d2132bac86be7689ecfe4b9066d7152976a47f", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.\n- moved deferred help into js/CldrDeferredHelp.js", "committedDate": "2020-11-18T00:04:25Z", "type": "forcePushed"}]}