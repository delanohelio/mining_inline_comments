{"pr_number": 2557, "pr_title": "[Cloud Run] Auth Snippet", "pr_createdAt": "2020-04-02T21:58:19Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557", "timeline": [{"oid": "52ef1f38cee05e0dc4c2d83e758d2d4084ad170f", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/52ef1f38cee05e0dc4c2d83e758d2d4084ad170f", "message": "sample", "committedDate": "2020-04-02T21:57:22Z", "type": "commit"}, {"oid": "a8cd3b542a558ca98bbef15b68668e3604084cf6", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a8cd3b542a558ca98bbef15b68668e3604084cf6", "message": "update kokoro tests", "committedDate": "2020-04-02T21:57:32Z", "type": "commit"}, {"oid": "3c0673400e0f78e91a3d76bc79e184ff51876e33", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3c0673400e0f78e91a3d76bc79e184ff51876e33", "message": "Merge branch 'master' into auth-sample", "committedDate": "2020-04-03T00:32:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NzIzMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403097231", "bodyText": "There are some edge case circumstances noted in Node.js and Golang where the timeout can take longer than 5 seconds. For purposes of the sample may be worth making this 10.", "author": "grayside", "createdAt": "2020-04-03T15:44:17Z", "path": "run/authentication/src/main/java/com/example/cloudrun/Authentication.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudrun;\n+\n+// [START run_service_to_service_auth]\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+public class Authentication {\n+\n+  // Instantiate OkHttpClient\n+  private static final OkHttpClient ok =\n+      new OkHttpClient.Builder()\n+          .readTimeout(500, TimeUnit.MILLISECONDS)", "originalCommit": "3c0673400e0f78e91a3d76bc79e184ff51876e33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI0Mzk0NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403243945", "bodyText": "done.", "author": "averikitsch", "createdAt": "2020-04-03T18:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NzIzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5ODAyMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403098023", "bodyText": "I have not tested, but the domain without protocol may work as well.", "author": "grayside", "createdAt": "2020-04-03T15:45:27Z", "path": "run/authentication/src/main/java/com/example/cloudrun/Authentication.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudrun;\n+\n+// [START run_service_to_service_auth]\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+public class Authentication {\n+\n+  // Instantiate OkHttpClient\n+  private static final OkHttpClient ok =\n+      new OkHttpClient.Builder()\n+          .readTimeout(500, TimeUnit.MILLISECONDS)\n+          .writeTimeout(500, TimeUnit.MILLISECONDS)\n+          .build();\n+\n+  // makeGetRequest makes a GET request to the specified Cloud Run endpoint,\n+  // serviceUrl (must be a complete URL), by authenticating with the Id token", "originalCommit": "3c0673400e0f78e91a3d76bc79e184ff51876e33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI0MzkwMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403243901", "bodyText": "This doesn't work, so I've added a test for it.", "author": "averikitsch", "createdAt": "2020-04-03T18:54:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5ODAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNjk4MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403106981", "bodyText": "This seems like a good direction for an integration test of whether the metadata server is responding as expected. However, tests with variable expected behavior makes the definition of a passing ambiguous. Maybe the test could log the context around metadata server existing?", "author": "grayside", "createdAt": "2020-04-03T15:59:55Z", "path": "run/authentication/src/test/java/com/example/cloudrun/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudrun;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.core.StringContains.containsString;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AuthenticationTest {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void canMakeGetRequest() throws IOException {\n+    String url = \"http://example.com/\";\n+    String expectedResp;\n+    if (System.getenv(\"GOOGLE_CLOUD_PROJECT\") != null) {\n+      expectedResp = \"Id token query succeeded\";\n+    } else {\n+      expectedResp = \"Id token query failed\";\n+    }\n+    Authentication.makeGetRequest(url);\n+    String got = bout.toString();\n+    assertThat(got, containsString(expectedResp));", "originalCommit": "3c0673400e0f78e91a3d76bc79e184ff51876e33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI0Mzc0Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403243747", "bodyText": "done.", "author": "averikitsch", "createdAt": "2020-04-03T18:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNjk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwODEyMA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403108120", "bodyText": "If run locally, GOOGLE_CLOUD_PROJECT is completely optional. If run without that variable set it may be worth logging some corrective instruction.", "author": "grayside", "createdAt": "2020-04-03T16:01:49Z", "path": "run/authentication/src/test/java/com/example/cloudrun/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudrun;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.core.StringContains.containsString;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AuthenticationTest {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void canMakeGetRequest() throws IOException {\n+    String url = \"http://example.com/\";\n+    String expectedResp;\n+    if (System.getenv(\"GOOGLE_CLOUD_PROJECT\") != null) {", "originalCommit": "3c0673400e0f78e91a3d76bc79e184ff51876e33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI0MzY3Mw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2557#discussion_r403243673", "bodyText": "done.", "author": "averikitsch", "createdAt": "2020-04-03T18:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwODEyMA=="}], "type": "inlineReview"}, {"oid": "b0ec26a2576d93c34b72684554b16111c9343091", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b0ec26a2576d93c34b72684554b16111c9343091", "message": "Update and comment tests", "committedDate": "2020-04-03T18:46:28Z", "type": "commit"}, {"oid": "bc07b4ec5fd7d9963cb0ba0cdd022be694770f93", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/bc07b4ec5fd7d9963cb0ba0cdd022be694770f93", "message": "Update timeout just in case", "committedDate": "2020-04-03T18:46:40Z", "type": "commit"}, {"oid": "dcd5c78530f84318001ea8cc9e550b2d4b921f2e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/dcd5c78530f84318001ea8cc9e550b2d4b921f2e", "message": "Merge branch 'auth-sample' of https://github.com/GoogleCloudPlatform/java-docs-samples into auth-sample", "committedDate": "2020-04-03T18:47:17Z", "type": "commit"}, {"oid": "1745e15320bfb9a2532a1ef144e087f003747f79", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1745e15320bfb9a2532a1ef144e087f003747f79", "message": "Update tests", "committedDate": "2020-04-03T18:53:24Z", "type": "commit"}, {"oid": "d1b5668e548fd71eb66d2b4df67fd0438867ce5a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d1b5668e548fd71eb66d2b4df67fd0438867ce5a", "message": "Merge branch 'master' into auth-sample", "committedDate": "2020-04-03T19:05:55Z", "type": "commit"}]}