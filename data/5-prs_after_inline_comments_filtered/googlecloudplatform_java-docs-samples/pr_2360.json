{"pr_number": 2360, "pr_title": "feat: dataproc instantiate inline workflow sample", "pr_createdAt": "2020-03-09T21:38:40Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2360", "timeline": [{"oid": "4988efc17b60d1d3110c635119f5d89c6cfc5acb", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4988efc17b60d1d3110c635119f5d89c6cfc5acb", "message": "Adding Dataproc InstantiateInlineWorkFlow samples", "committedDate": "2020-03-09T21:34:19Z", "type": "commit"}, {"oid": "3f2842c462daba67b662741526ea1d869ca18804", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3f2842c462daba67b662741526ea1d869ca18804", "message": "Merge branch 'master' into dataproc-samples", "committedDate": "2020-03-09T21:39:18Z", "type": "commit"}, {"oid": "c31e2b96fc549db4a841fbdf70cfdb323df1818a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c31e2b96fc549db4a841fbdf70cfdb323df1818a", "message": "Merge branch 'master' of https://github.com/GoogleCloudPlatform/java-docs-samples into dataproc-samples", "committedDate": "2020-03-09T21:39:26Z", "type": "commit"}, {"oid": "2bc5b46385a1da4e1e671577d8e02c7acfde2321", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2bc5b46385a1da4e1e671577d8e02c7acfde2321", "message": "Merge branch 'master' into dataproc-samples", "committedDate": "2020-03-09T21:47:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3OTM1MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2360#discussion_r389979350", "bodyText": "Is this pre-installed?\nWhy is this a useful example if it's already there?", "author": "lesv", "createdAt": "2020-03-09T21:45:05Z", "path": "dataproc/src/main/java/InstantiateInlineWorkflow.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// [START dataproc_instantiate_inline_workflow]\n+import com.google.api.gax.longrunning.OperationFuture;\n+import com.google.cloud.dataproc.v1.ClusterConfig;\n+import com.google.cloud.dataproc.v1.GceClusterConfig;\n+import com.google.cloud.dataproc.v1.HadoopJob;\n+import com.google.cloud.dataproc.v1.ManagedCluster;\n+import com.google.cloud.dataproc.v1.OrderedJob;\n+import com.google.cloud.dataproc.v1.RegionName;\n+import com.google.cloud.dataproc.v1.WorkflowMetadata;\n+import com.google.cloud.dataproc.v1.WorkflowTemplate;\n+import com.google.cloud.dataproc.v1.WorkflowTemplatePlacement;\n+import com.google.cloud.dataproc.v1.WorkflowTemplateServiceClient;\n+import com.google.cloud.dataproc.v1.WorkflowTemplateServiceSettings;\n+import com.google.protobuf.Empty;\n+import java.io.IOException;\n+import java.util.concurrent.ExecutionException;\n+\n+public class InstantiateInlineWorkflow {\n+\n+  public static void InstantiateInlineWorkflow() throws IOException, InterruptedException {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"your-project-id\";\n+    String region = \"your-project-region\";\n+    instantiateInlineWorkflow(projectId, region);\n+  }\n+\n+  public static void instantiateInlineWorkflow(String projectId, String region)\n+      throws IOException, InterruptedException {\n+    String myEndpoint = String.format(\"%s-dataproc.googleapis.com:443\", region);\n+\n+    // Configure the settings for the workflow template service client.\n+    WorkflowTemplateServiceSettings workflowTemplateServiceSettings =\n+        WorkflowTemplateServiceSettings.newBuilder().setEndpoint(myEndpoint).build();\n+\n+    // Create a workflow template service client with the configured settings. The client only\n+    // needs to be created once and can be reused for multiple requests. Using a try-with-resources\n+    // closes the client, but this can also be done manually with the .close() method.\n+    try (WorkflowTemplateServiceClient workflowTemplateServiceClient =\n+        WorkflowTemplateServiceClient.create(workflowTemplateServiceSettings)) {\n+\n+      // Configure the jobs within the workflow.\n+      HadoopJob teragenHadoopJob =\n+          HadoopJob.newBuilder()\n+              .setMainJarFileUri(\"file:///usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar\")", "originalCommit": "3f2842c462daba67b662741526ea1d869ca18804", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NDQ3NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2360#discussion_r389984475", "bodyText": "The point we're trying to get across is how you can structure a workflow specifically with the client library and run it. We sometimes use these toy examples instead of say a PySpark example on GCS.\nI'm also referencing the canonical YAML example from the docs (which is not to say this sample couldn't be improved either).", "author": "bradmiro", "createdAt": "2020-03-09T21:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3OTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5OTU0NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2360#discussion_r389999544", "bodyText": "SG", "author": "lesv", "createdAt": "2020-03-09T22:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3OTM1MA=="}], "type": "inlineReview"}, {"oid": "ca47406cfacf6dc5cb39b70b8e82bd09ac8f9acd", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ca47406cfacf6dc5cb39b70b8e82bd09ac8f9acd", "message": "Changed file names", "committedDate": "2020-03-09T22:35:20Z", "type": "commit"}, {"oid": "6c06080f907258f173bc759fc6f2c9a78b8aba42", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/6c06080f907258f173bc759fc6f2c9a78b8aba42", "message": "Merge branch 'dataproc-samples' of https://github.com/GoogleCloudPlatform/java-docs-samples into dataproc-samples", "committedDate": "2020-03-09T22:35:25Z", "type": "commit"}, {"oid": "21afef0e989cec8316eb8b448b0202028b091b69", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/21afef0e989cec8316eb8b448b0202028b091b69", "message": "fixed comment for 'autozone'", "committedDate": "2020-03-09T22:46:49Z", "type": "commit"}, {"oid": "f9707bdc3867df84b381160751f58a0b94e96c30", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f9707bdc3867df84b381160751f58a0b94e96c30", "message": "Merge branch 'master' into dataproc-samples", "committedDate": "2020-03-24T16:17:25Z", "type": "commit"}]}