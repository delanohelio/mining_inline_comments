{"pr_number": 2093, "pr_title": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "pr_createdAt": "2020-10-15T19:20:56Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2093", "timeline": [{"oid": "6d3f2e25dce1942412c1bc18fc53000229a09613", "url": "https://github.com/aws/aws-sdk-java-v2/commit/6d3f2e25dce1942412c1bc18fc53000229a09613", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-15T21:23:22Z", "type": "forcePushed"}, {"oid": "d68d6ee0bf8f43399df713b81f9f14e99a895a97", "url": "https://github.com/aws/aws-sdk-java-v2/commit/d68d6ee0bf8f43399df713b81f9f14e99a895a97", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-15T21:27:30Z", "type": "forcePushed"}, {"oid": "fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "url": "https://github.com/aws/aws-sdk-java-v2/commit/fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-16T19:37:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MTQwOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507891408", "bodyText": "Usually when we go to the trouble to do this (which we don't tend to for internal classes), there's also a private default constructor.", "author": "bmaizels", "createdAt": "2020-10-19T16:31:32Z", "path": "services/s3/src/main/java/software/amazon/awssdk/services/s3/internal/endpoints/S3AccessPointEndpointResolver.java", "diffHunk": "@@ -0,0 +1,209 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.s3.internal.endpoints;\n+\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isAccelerateEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isArnRegionEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isDualstackEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isFipsRegion;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isFipsRegionProvided;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isPathStyleAccessEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.removeFipsIfNeeded;\n+\n+import java.net.URI;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.arns.Arn;\n+import software.amazon.awssdk.http.SdkHttpRequest;\n+import software.amazon.awssdk.regions.PartitionMetadata;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.s3.S3Configuration;\n+import software.amazon.awssdk.services.s3.internal.ConfiguredS3SdkHttpRequest;\n+import software.amazon.awssdk.services.s3.internal.resource.S3AccessPointBuilder;\n+import software.amazon.awssdk.services.s3.internal.resource.S3AccessPointResource;\n+import software.amazon.awssdk.services.s3.internal.resource.S3ArnConverter;\n+import software.amazon.awssdk.services.s3.internal.resource.S3OutpostAccessPointBuilder;\n+import software.amazon.awssdk.services.s3.internal.resource.S3OutpostResource;\n+import software.amazon.awssdk.services.s3.internal.resource.S3Resource;\n+import software.amazon.awssdk.services.s3.internal.resource.S3ResourceType;\n+import software.amazon.awssdk.utils.Validate;\n+\n+/**\n+ * Returns a new configured HTTP request with a resolved access point endpoint and signing overrides.\n+ */\n+@SdkInternalApi\n+public final class S3AccessPointEndpointResolver implements S3EndpointResolver {\n+\n+    private static final String S3_OUTPOSTS_NAME = \"s3-outposts\";\n+\n+    public static S3AccessPointEndpointResolver create() {\n+        return new S3AccessPointEndpointResolver();\n+    }", "originalCommit": "fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNzkwMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507927901", "bodyText": "ok!", "author": "cenedhryn", "createdAt": "2020-10-19T17:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MTQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MTg1Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507891853", "bodyText": "See previous comment about private default constructor.", "author": "bmaizels", "createdAt": "2020-10-19T16:32:16Z", "path": "services/s3/src/main/java/software/amazon/awssdk/services/s3/internal/endpoints/S3BucketEndpointResolver.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.s3.internal.endpoints;\n+\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.accelerateEndpoint;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.dualstackEndpoint;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isAccelerateEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isAccelerateSupported;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isDualstackEnabled;\n+import static software.amazon.awssdk.services.s3.internal.endpoints.S3EndpointUtils.isPathStyleAccessEnabled;\n+import static software.amazon.awssdk.utils.FunctionalUtils.invokeSafely;\n+\n+import java.net.URI;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.http.SdkHttpRequest;\n+import software.amazon.awssdk.regions.RegionMetadata;\n+import software.amazon.awssdk.services.s3.S3Configuration;\n+import software.amazon.awssdk.services.s3.internal.BucketUtils;\n+import software.amazon.awssdk.services.s3.internal.ConfiguredS3SdkHttpRequest;\n+\n+/**\n+ * Returns a new configured HTTP request with a resolved endpoint with either virtual addressing or path style access.\n+ * Supports accelerate and dual stack.\n+ */\n+@SdkInternalApi\n+public final class S3BucketEndpointResolver implements S3EndpointResolver {\n+\n+    public static S3BucketEndpointResolver create() {\n+        return new S3BucketEndpointResolver();\n+    }", "originalCommit": "fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNzk1Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507927957", "bodyText": "ok!", "author": "cenedhryn", "createdAt": "2020-10-19T17:30:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MTg1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MjY5MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507892691", "bodyText": "Since we're following the classic SDK pojo pattern here, we should also add a 'toBuilder()' method.", "author": "bmaizels", "createdAt": "2020-10-19T16:33:32Z", "path": "services/s3/src/main/java/software/amazon/awssdk/services/s3/internal/endpoints/S3EndpointResolverContext.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.s3.internal.endpoints;\n+\n+import java.util.Objects;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.SdkRequest;\n+import software.amazon.awssdk.http.SdkHttpRequest;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.s3.S3Configuration;\n+\n+/**\n+ * Contains the information needed to resolve S3 endpoints.\n+ */\n+@SdkInternalApi\n+public final class S3EndpointResolverContext {", "originalCommit": "fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyOTE3OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507929178", "bodyText": "Yes. Good that you commented on this class, as I found two unused fields in the builder.", "author": "cenedhryn", "createdAt": "2020-10-19T17:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MjY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5MDMzNw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507990337", "bodyText": "toBuilder needs a test too. Usually it's a fairly standard one where we just build() then toBuilder.build() and compare the 2nd object with the first.", "author": "bmaizels", "createdAt": "2020-10-19T18:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MjY5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5NDM0NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507894344", "bodyText": "I'm wondering if it would be more readable just to say\nif (bucketName != null && isArn(bucketName) { \n    return ACCESS_POINT_ENDPOINT_RESOLVER; \n} \nreturn BUCKET_ENDPOINT RESOLVER;", "author": "bmaizels", "createdAt": "2020-10-19T16:36:07Z", "path": "services/s3/src/main/java/software/amazon/awssdk/services/s3/internal/endpoints/S3EndpointResolverFactory.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.s3.internal.endpoints;\n+\n+import java.util.Optional;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+\n+/**\n+ * Get endpoint resolver.\n+ */\n+@SdkInternalApi\n+public final class S3EndpointResolverFactory {\n+\n+    private static final S3EndpointResolver ACCESS_POINT_ENDPOINT_RESOLVER = S3AccessPointEndpointResolver.create();\n+    private static final S3EndpointResolver BUCKET_ENDPOINT_RESOLVER = S3BucketEndpointResolver.create();\n+\n+    private S3EndpointResolverFactory() {\n+    }\n+\n+    public static S3EndpointResolver getEndpointResolver(String bucketName) {\n+        return Optional.ofNullable(bucketName)\n+                       .filter(S3EndpointUtils::isArn)\n+                       .map(arn -> ACCESS_POINT_ENDPOINT_RESOLVER)\n+                       .orElseGet(() -> BUCKET_ENDPOINT_RESOLVER);", "originalCommit": "fb8acf129a3d4280c1b8c3404bac9eec3ec84a9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzMjI2Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2093#discussion_r507932262", "bodyText": "Oh come on! Stomp on my nice functional code, will you?", "author": "cenedhryn", "createdAt": "2020-10-19T17:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5NDM0NA=="}], "type": "inlineReview"}, {"oid": "3f496a0b9106f711862d949f5ab4d94ec89c9117", "url": "https://github.com/aws/aws-sdk-java-v2/commit/3f496a0b9106f711862d949f5ab4d94ec89c9117", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-19T18:07:59Z", "type": "forcePushed"}, {"oid": "a3a207908e1f35f4c0b6ffb1ba32a53717e570b9", "url": "https://github.com/aws/aws-sdk-java-v2/commit/a3a207908e1f35f4c0b6ffb1ba32a53717e570b9", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-19T21:12:17Z", "type": "forcePushed"}, {"oid": "c98d60aa9b57f354d171a1d98daef090a160fe57", "url": "https://github.com/aws/aws-sdk-java-v2/commit/c98d60aa9b57f354d171a1d98daef090a160fe57", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-19T23:55:51Z", "type": "commit"}, {"oid": "c98d60aa9b57f354d171a1d98daef090a160fe57", "url": "https://github.com/aws/aws-sdk-java-v2/commit/c98d60aa9b57f354d171a1d98daef090a160fe57", "message": "Refactors S3EndpointUtils into a set of resolvers for endpoints.", "committedDate": "2020-10-19T23:55:51Z", "type": "forcePushed"}]}