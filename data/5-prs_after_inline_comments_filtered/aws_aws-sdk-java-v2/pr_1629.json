{"pr_number": 1629, "pr_title": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.", "pr_createdAt": "2020-01-31T21:14:22Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1629", "timeline": [{"oid": "642dc518b0dbe28d62d31d8bbcccf7cafb19371f", "url": "https://github.com/aws/aws-sdk-java-v2/commit/642dc518b0dbe28d62d31d8bbcccf7cafb19371f", "message": "[Discussion] Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-04T00:54:47Z", "type": "forcePushed"}, {"oid": "88e8287d46fef350e27bc27f8e1a585afb5b3a8f", "url": "https://github.com/aws/aws-sdk-java-v2/commit/88e8287d46fef350e27bc27f8e1a585afb5b3a8f", "message": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-04T00:58:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4ODkyMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374888921", "bodyText": "Should we add sdk namespace to the key?", "author": "zoewangg", "createdAt": "2020-02-04T19:54:09Z", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/utils/OrderedWriteChannelHandlerContext.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package software.amazon.awssdk.http.nio.netty.internal.utils;\n+\n+import io.netty.channel.ChannelFuture;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelPromise;\n+import io.netty.util.AttributeKey;\n+import java.util.function.Consumer;\n+import software.amazon.awssdk.utils.Logger;\n+\n+/**\n+ * An implementation of {@link ChannelHandlerContext} that ensures all writes are performed in the order they are invoked.\n+ *\n+ * This works around https://github.com/netty/netty/issues/7783 where writes by an event loop 'skip ahead' of writes off of the\n+ * event loop.\n+ */\n+public class OrderedWriteChannelHandlerContext extends DelegatingChannelHandlerContext {\n+    private static final AttributeKey<Void> ORDERED = AttributeKey.newInstance(\"OrderedWriteChannelHandlerContext.ORDERED\");", "originalCommit": "88e8287d46fef350e27bc27f8e1a585afb5b3a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMzk2MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374933960", "bodyText": "I had it, but it was soooo long. This seemed specific enough. What do we do elsewhere? Do we always do the class name?", "author": "millems", "createdAt": "2020-02-04T21:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4ODkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNTIwMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374935202", "bodyText": "We prefix it with aws.http.nio.netty.async.\n\n  \n    \n      aws-sdk-java-v2/http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelAttributeKey.java\n    \n    \n         Line 39\n      in\n      58c5daa\n    \n    \n    \n    \n\n        \n          \n           \"aws.http.nio.netty.async.protocolFuture\");", "author": "zoewangg", "createdAt": "2020-02-04T21:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4ODkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0NDQ4NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374944484", "bodyText": "Done.", "author": "millems", "createdAt": "2020-02-04T21:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4ODkyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxNTEyMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374915123", "bodyText": "Can we add a test to verify that if the channel already has ORDER attribute, it does not wrap it again?", "author": "zoewangg", "createdAt": "2020-02-04T20:50:43Z", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/utils/OrderedWriteChannelHandlerContext.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package software.amazon.awssdk.http.nio.netty.internal.utils;\n+\n+import io.netty.channel.ChannelFuture;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelPromise;\n+import io.netty.util.AttributeKey;\n+import java.util.function.Consumer;\n+import software.amazon.awssdk.utils.Logger;\n+\n+/**\n+ * An implementation of {@link ChannelHandlerContext} that ensures all writes are performed in the order they are invoked.\n+ *\n+ * This works around https://github.com/netty/netty/issues/7783 where writes by an event loop 'skip ahead' of writes off of the\n+ * event loop.\n+ */\n+public class OrderedWriteChannelHandlerContext extends DelegatingChannelHandlerContext {\n+    private static final AttributeKey<Void> ORDERED = AttributeKey.newInstance(\"OrderedWriteChannelHandlerContext.ORDERED\");\n+\n+    public static ChannelHandlerContext wrap(ChannelHandlerContext ctx) {", "originalCommit": "88e8287d46fef350e27bc27f8e1a585afb5b3a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNDA1OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1629#discussion_r374934058", "bodyText": "+1", "author": "millems", "createdAt": "2020-02-04T21:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxNTEyMw=="}], "type": "inlineReview"}, {"oid": "6a04935aa4ab36069ec1385af131fce931feca90", "url": "https://github.com/aws/aws-sdk-java-v2/commit/6a04935aa4ab36069ec1385af131fce931feca90", "message": "Fork netty-reactive-streams with attribution and license reference.", "committedDate": "2020-02-04T23:06:41Z", "type": "commit"}, {"oid": "bbfdbdf689935ed76c1651e349b16ee9e773847a", "url": "https://github.com/aws/aws-sdk-java-v2/commit/bbfdbdf689935ed76c1651e349b16ee9e773847a", "message": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-04T23:18:35Z", "type": "forcePushed"}, {"oid": "336308d77cef71cdb238b0724e303f35060ddeb7", "url": "https://github.com/aws/aws-sdk-java-v2/commit/336308d77cef71cdb238b0724e303f35060ddeb7", "message": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-05T00:02:24Z", "type": "forcePushed"}, {"oid": "8ce7ac100c7414d2f9c5176d9779608c1231b68f", "url": "https://github.com/aws/aws-sdk-java-v2/commit/8ce7ac100c7414d2f9c5176d9779608c1231b68f", "message": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-05T00:02:42Z", "type": "commit"}, {"oid": "8ce7ac100c7414d2f9c5176d9779608c1231b68f", "url": "https://github.com/aws/aws-sdk-java-v2/commit/8ce7ac100c7414d2f9c5176d9779608c1231b68f", "message": "Fixed an issue with Transcribe Streaming's startStreamingTranscription API that could cause signature mismatch exceptions.\n\nBecause of https://github.com/netty/netty/issues/7783, writes performed by the event-loop thread can 'skip ahead' of writes\nperformed off of the event-loop thread. This can cause events to be sent to Transcribe out-of-order, if some are performed\non the event loop. This manifests as a signature mismatch exception because the signature of the last message is included in\nthe signature.\n\nThis change introduces a ChannelHandlerContext implementation that makes sure we're off of the event loop before performing a\nwrite. If we're on the event loop, it schedules a task for the write to be performed instead of performing the task immediately.\n\nThis change isn't finalized yet, and still requires additional testing.", "committedDate": "2020-02-05T00:02:42Z", "type": "forcePushed"}, {"oid": "9f0d9282d1fbc4018e267393026a7dfb843d8a0c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/9f0d9282d1fbc4018e267393026a7dfb843d8a0c", "message": "Add attribution notice for netty-reactive-streams.", "committedDate": "2020-02-05T21:39:34Z", "type": "commit"}, {"oid": "9f0d9282d1fbc4018e267393026a7dfb843d8a0c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/9f0d9282d1fbc4018e267393026a7dfb843d8a0c", "message": "Add attribution notice for netty-reactive-streams.", "committedDate": "2020-02-05T21:39:34Z", "type": "forcePushed"}, {"oid": "8ac6b44fd2238199db93d83d2c37a96b4b560163", "url": "https://github.com/aws/aws-sdk-java-v2/commit/8ac6b44fd2238199db93d83d2c37a96b4b560163", "message": "Merge branch 'master' into millem/fix-signature-errors", "committedDate": "2020-02-06T22:08:22Z", "type": "commit"}, {"oid": "00813fdba268ae5928ac7e4088db3ce8f50bc7b9", "url": "https://github.com/aws/aws-sdk-java-v2/commit/00813fdba268ae5928ac7e4088db3ce8f50bc7b9", "message": "Merge branch 'master' into millem/fix-signature-errors", "committedDate": "2020-02-06T23:03:07Z", "type": "commit"}, {"oid": "fdae06cc1ab9dad88fe76ef9de0a22ecd1e9f51d", "url": "https://github.com/aws/aws-sdk-java-v2/commit/fdae06cc1ab9dad88fe76ef9de0a22ecd1e9f51d", "message": "Merge branch 'master' into millem/fix-signature-errors", "committedDate": "2020-02-07T18:15:15Z", "type": "commit"}]}