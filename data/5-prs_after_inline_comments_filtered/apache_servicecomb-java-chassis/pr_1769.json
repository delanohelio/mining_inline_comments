{"pr_number": 1769, "pr_title": "[SCB-1922]Use DynamicPropertyFacotry way to read environment variables", "pr_createdAt": "2020-05-21T15:33:12Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1769", "timeline": [{"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc", "url": "https://github.com/apache/servicecomb-java-chassis/commit/c8a47d13c47afc1084e703cc5dde706c773579dc", "message": "[SCB-1922]Use DynamicPropertyFacotry way to read environment variables", "committedDate": "2020-05-21T15:25:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjAxOQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802019", "bodyText": "better to be: not enabled then return", "author": "wujimin", "createdAt": "2020-05-21T17:28:53Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {", "originalCommit": "c8a47d13c47afc1084e703cc5dde706c773579dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMzM5Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428833396", "bodyText": "agreed.", "author": "jungan21", "createdAt": "2020-05-21T18:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjc2Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802763", "bodyText": "better to throw exception and prevent bootup", "author": "wujimin", "createdAt": "2020-05-21T17:30:04Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {\n       ServerUtil.init();\n       ClientUtil.init();\n \n       try {\n         this.multicastSocket = new MulticastSocket();\n       } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n+        LOGGER.error(\"Failed to create MulticastSocket object\", e);", "originalCommit": "c8a47d13c47afc1084e703cc5dde706c773579dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMDY2Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428830667", "bodyText": "agreed.", "author": "jungan21", "createdAt": "2020-05-21T18:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjc2Mw=="}], "type": "inlineReview"}, {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64", "url": "https://github.com/apache/servicecomb-java-chassis/commit/e40a463c5264bb5c74ec03236faec9278f05fc64", "message": "[SCB-1922] Address comments", "committedDate": "2020-05-21T18:26:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NjExMQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428996111", "bodyText": "I think default value to 'true' is better. Because when users use zeroconfig, they have to add pom dependency implicitly. It is false when zeroconfig module is not included. I set 'local/service center' default to 'true'. see https://github.com/apache/servicecomb-java-chassis/blob/master/service-registry/registry-local/src/main/java/org/apache/servicecomb/localregistry/LocalRegistration.java\nand this is documents in progress", "author": "liubao68", "createdAt": "2020-05-22T01:22:01Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,32 +53,36 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n-      ServerUtil.init();\n-      ClientUtil.init();\n-\n-      try {\n-        this.multicastSocket = new MulticastSocket();\n-      } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n-      }\n-\n-      Function<ServiceRegistry, ServiceRegistryClient> registryClientConstructor =\n-          serviceRegistry -> new ZeroConfigRegistryClientImpl(new ZeroConfigRegistryService(),\n-              multicastSocket, new RestTemplate());\n-\n-      ServiceRegistryConfig.INSTANCE.setServiceRegistryClientConstructor(registryClientConstructor);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();", "originalCommit": "e40a463c5264bb5c74ec03236faec9278f05fc64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMjE4Mg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r429002182", "bodyText": "I see. let me change default value to true", "author": "jungan21", "createdAt": "2020-05-22T01:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NjExMQ=="}], "type": "inlineReview"}, {"oid": "bf47d27eb229a16e2700246783223b56fc1b1356", "url": "https://github.com/apache/servicecomb-java-chassis/commit/bf47d27eb229a16e2700246783223b56fc1b1356", "message": "[SCB-1922] set the default value for zero-config to true i.e. enable", "committedDate": "2020-05-22T01:50:19Z", "type": "commit"}]}