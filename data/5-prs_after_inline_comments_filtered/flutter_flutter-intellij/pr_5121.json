{"pr_number": 5121, "pr_title": "Use project DevTools server for embedded browser", "pr_createdAt": "2020-12-15T21:59:35Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/5121", "timeline": [{"oid": "9b0251b372199ecadfdd651302ffe12136073a95", "url": "https://github.com/flutter/flutter-intellij/commit/9b0251b372199ecadfdd651302ffe12136073a95", "message": "Use DevToolsService for project server", "committedDate": "2020-12-15T20:12:38Z", "type": "commit"}, {"oid": "22fc9ef9226860c27c48b71a47d25bca183b81e4", "url": "https://github.com/flutter/flutter-intellij/commit/22fc9ef9226860c27c48b71a47d25bca183b81e4", "message": "Modify for tests and remove unused methods", "committedDate": "2020-12-15T21:45:16Z", "type": "commit"}, {"oid": "444f9007fddc5d417d19860065a654c9e00178e4", "url": "https://github.com/flutter/flutter-intellij/commit/444f9007fddc5d417d19860065a654c9e00178e4", "message": "Expand imports", "committedDate": "2020-12-15T21:47:40Z", "type": "commit"}, {"oid": "aa7692ad540bd012ccff042d64968f3a550b2e6e", "url": "https://github.com/flutter/flutter-intellij/commit/aa7692ad540bd012ccff042d64968f3a550b2e6e", "message": "Make instance constructor package private", "committedDate": "2020-12-15T22:05:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NTEwOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544485109", "bodyText": "expose the Future directly instead of providing a method that might lock the UI thread.", "author": "jacob314", "createdAt": "2020-12-16T17:26:55Z", "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -71,6 +72,17 @@ private DevToolsService(@NotNull final Project project) {\n     });\n   }\n \n+  public DevToolsInstance getDevToolsInstance() {", "originalCommit": "aa7692ad540bd012ccff042d64968f3a550b2e6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzNDU5Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544534592", "bodyText": "I originally wanted this function to manage restarting if the daemon command fails, but that can be done elsewhere too", "author": "helin24", "createdAt": "2020-12-16T18:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NTEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NjcyNQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544486725", "bodyText": "simpler pattern:\nrather than starting a pooled thread just call\nAsyncUtils.whenCompleteUiThread(DevToolsService.getInstance(myProject).getDevToolsInstance(), ...)\nand remove the invokeLater.", "author": "jacob314", "createdAt": "2020-12-16T17:29:09Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -429,35 +438,24 @@ protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspect\n \n   private void presentDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n     assert(SwingUtilities.isEventDispatchThread());\n-    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n \n-    if (devToolsManager.hasInstalledDevTools()) {\n-      addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n-    }\n-    else {\n-      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n-      awaitDevToolsInstall(app, inspectorService, toolWindow, isEmbedded, devToolsManager);\n-    }\n+    presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+    openInspectorWithDevTools(app, inspectorService, toolWindow, isEmbedded);\n   }\n \n-  protected void awaitDevToolsInstall(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded, DevToolsManager devToolsManager) {\n+  protected void openInspectorWithDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n     ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      final DevToolsInstance instance = DevToolsService.getInstance(myProject).getDevToolsInstance();", "originalCommit": "aa7692ad540bd012ccff042d64968f3a550b2e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c554478f0ca264ab8df00da1f6b0ac84dc9edba", "url": "https://github.com/flutter/flutter-intellij/commit/3c554478f0ca264ab8df00da1f6b0ac84dc9edba", "message": "Expose instance future and use async utils", "committedDate": "2020-12-16T18:24:20Z", "type": "commit"}, {"oid": "dbaa9c2e5dc5c6df46378fd7ebfb5b8d6faf6e09", "url": "https://github.com/flutter/flutter-intellij/commit/dbaa9c2e5dc5c6df46378fd7ebfb5b8d6faf6e09", "message": "Remove println and complete with exception when null", "committedDate": "2020-12-16T18:37:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3OTkyOA==", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544579928", "bodyText": "nit: this is java. Keep private and provide getDevToolsInstance()", "author": "jacob314", "createdAt": "2020-12-16T19:52:47Z", "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -49,7 +49,7 @@\n   @NotNull private final Project project;\n   private DaemonApi daemonApi;\n   private ProcessHandler process;\n-  private CompletableFuture<DevToolsInstance> devToolsInstance = new CompletableFuture<>();\n+  public CompletableFuture<DevToolsInstance> devToolsInstance = new CompletableFuture<>();", "originalCommit": "3c554478f0ca264ab8df00da1f6b0ac84dc9edba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU4MDQxOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544580419", "bodyText": "make sure the project has not gone away while you were waiting for the devToolsServer to start.", "author": "jacob314", "createdAt": "2020-12-16T19:53:43Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -445,16 +445,20 @@ private void presentDevTools(FlutterApp app, InspectorService inspectorService,\n   }\n \n   protected void openInspectorWithDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final DevToolsInstance instance = DevToolsService.getInstance(myProject).getDevToolsInstance();\n+    AsyncUtils.whenCompleteUiThread(DevToolsService.getInstance(myProject).devToolsInstance, (instance, error) -> {\n+      // TODO(helinx): Restart DevTools server if there's an error.\n+      if (error != null) {", "originalCommit": "3c554478f0ca264ab8df00da1f6b0ac84dc9edba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "06a8551782dcb79332fd38176ec1498a4646be76", "url": "https://github.com/flutter/flutter-intellij/commit/06a8551782dcb79332fd38176ec1498a4646be76", "message": "Use instance getter and skip if project has closed", "committedDate": "2020-12-16T20:03:04Z", "type": "commit"}]}