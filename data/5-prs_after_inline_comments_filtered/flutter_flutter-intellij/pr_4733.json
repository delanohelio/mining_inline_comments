{"pr_number": 4733, "pr_title": "Use daemon API to get devtools host and port for internal use", "pr_createdAt": "2020-08-03T17:14:39Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/4733", "timeline": [{"oid": "a763c821b2dab4e33437614a0bd97286660a57ad", "url": "https://github.com/flutter/flutter-intellij/commit/a763c821b2dab4e33437614a0bd97286660a57ad", "message": "Use daemon API to start devtools internally WIP", "committedDate": "2020-08-19T15:21:34Z", "type": "commit"}, {"oid": "cfcc3ba9fda45ac228ae193b01e10b55e33e8384", "url": "https://github.com/flutter/flutter-intellij/commit/cfcc3ba9fda45ac228ae193b01e10b55e33e8384", "message": "Create new DevToolsInstance from result", "committedDate": "2020-08-19T15:21:34Z", "type": "commit"}, {"oid": "5cabfbf1f64b3c875a515f121147faf5d8eb1a7c", "url": "https://github.com/flutter/flutter-intellij/commit/5cabfbf1f64b3c875a515f121147faf5d8eb1a7c", "message": "Remove changes to getProcessHandler", "committedDate": "2020-08-19T15:21:34Z", "type": "commit"}, {"oid": "5140bae3f1b296b53e1ce8c35ebc9e8a55250ab9", "url": "https://github.com/flutter/flutter-intellij/commit/5140bae3f1b296b53e1ce8c35ebc9e8a55250ab9", "message": "Remove comments", "committedDate": "2020-08-19T15:21:34Z", "type": "commit"}, {"oid": "afc8722ec879fc24afb8731dbfe285c97673b9bb", "url": "https://github.com/flutter/flutter-intellij/commit/afc8722ec879fc24afb8731dbfe285c97673b9bb", "message": "Use isPresent check instead of isEmpty", "committedDate": "2020-08-19T15:21:34Z", "type": "commit"}, {"oid": "afc8722ec879fc24afb8731dbfe285c97673b9bb", "url": "https://github.com/flutter/flutter-intellij/commit/afc8722ec879fc24afb8731dbfe285c97673b9bb", "message": "Use isPresent check instead of isEmpty", "committedDate": "2020-08-19T15:21:34Z", "type": "forcePushed"}, {"oid": "d701273bf35830e62db0d94ebb9643c0e2de3355", "url": "https://github.com/flutter/flutter-intellij/commit/d701273bf35830e62db0d94ebb9643c0e2de3355", "message": "Handle if devtools host and port are null", "committedDate": "2020-08-19T15:31:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMTk0Ng==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474111946", "bodyText": "comment why we do this for Bazel only for now (non-bazel projects currently have a flutter daemon with an older version of devtools).", "author": "jacob314", "createdAt": "2020-08-20T16:25:49Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -259,26 +260,47 @@ private void openBrowserImpl(String uri, String screen) {\n       devToolsInstance.openBrowserAndConnect(uri, screen);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n+      if (isBazel(project)) {", "originalCommit": "d701273bf35830e62db0d94ebb9643c0e2de3355", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NzUyMQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474187521", "bodyText": "one more thing. we also don't do any flutter version checking so this wouldn't be safe externally as stable probably doesn't support this daemon api.", "author": "jacob314", "createdAt": "2020-08-20T18:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMTk0Ng=="}], "type": "inlineReview"}, {"oid": "794ae358c34c8132beee9c38292dba01d7e45473", "url": "https://github.com/flutter/flutter-intellij/commit/794ae358c34c8132beee9c38292dba01d7e45473", "message": "Add comment explaining why only bazel projects uses daemon", "committedDate": "2020-08-20T17:54:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NTY3NA==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474185674", "bodyText": "should we report an error here? We weren't able to open devtools as the app closed.", "author": "jacob314", "createdAt": "2020-08-20T18:24:58Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -259,26 +260,49 @@ private void openBrowserImpl(String uri, String screen) {\n       devToolsInstance.openBrowserAndConnect(uri, screen);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n-\n-      if (handler != null) {\n-        // TODO(devoncarew) Add a Task.Backgroundable here; \"Starting devtools...\"\n-\n-        // start the server\n-        DevToolsInstance.startServer(handler, instance -> {\n-          devToolsInstance = instance;\n+      // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n+      // older version of DevTools, so we launch the server using `pub global run` instead.\n+      if (isBazel(project)) {\n+        final Optional<FlutterApp> first =\n+          FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();\n+\n+        if (!first.isPresent()) {\n+          return;", "originalCommit": "794ae358c34c8132beee9c38292dba01d7e45473", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NjE1Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474186152", "bodyText": "at each async boundary we probably need to make sure the project hasn't been closed in whcih case we should quietly cancel the request.", "author": "jacob314", "createdAt": "2020-08-20T18:25:48Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -259,26 +260,49 @@ private void openBrowserImpl(String uri, String screen) {\n       devToolsInstance.openBrowserAndConnect(uri, screen);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n-\n-      if (handler != null) {\n-        // TODO(devoncarew) Add a Task.Backgroundable here; \"Starting devtools...\"\n-\n-        // start the server\n-        DevToolsInstance.startServer(handler, instance -> {\n-          devToolsInstance = instance;\n+      // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n+      // older version of DevTools, so we launch the server using `pub global run` instead.\n+      if (isBazel(project)) {\n+        final Optional<FlutterApp> first =\n+          FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();\n+\n+        if (!first.isPresent()) {\n+          return;\n+        }\n \n-          devToolsInstance.openBrowserAndConnect(uri, screen);\n-        }, () -> {\n-          // Listen for closing; null out the devToolsInstance.\n-          devToolsInstance = null;\n+        first.get().serveDevTools().thenAccept((Pair<String, Integer> hostAndPort) -> {\n+          if (hostAndPort == null) {", "originalCommit": "794ae358c34c8132beee9c38292dba01d7e45473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2MzExNw==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474263117", "bodyText": "This means a check of whether someone has closed down the IntelliJ project? And we probably should also check if the app has been disconnected?", "author": "helin24", "createdAt": "2020-08-20T20:47:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NjE1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NjgzOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474186839", "bodyText": "use your username for new TODOs", "author": "jacob314", "createdAt": "2020-08-20T18:26:57Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -259,26 +260,49 @@ private void openBrowserImpl(String uri, String screen) {\n       devToolsInstance.openBrowserAndConnect(uri, screen);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n-\n-      if (handler != null) {\n-        // TODO(devoncarew) Add a Task.Backgroundable here; \"Starting devtools...\"\n-\n-        // start the server\n-        DevToolsInstance.startServer(handler, instance -> {\n-          devToolsInstance = instance;\n+      // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n+      // older version of DevTools, so we launch the server using `pub global run` instead.\n+      if (isBazel(project)) {\n+        final Optional<FlutterApp> first =\n+          FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();\n+\n+        if (!first.isPresent()) {\n+          return;\n+        }\n \n-          devToolsInstance.openBrowserAndConnect(uri, screen);\n-        }, () -> {\n-          // Listen for closing; null out the devToolsInstance.\n-          devToolsInstance = null;\n+        first.get().serveDevTools().thenAccept((Pair<String, Integer> hostAndPort) -> {\n+          if (hostAndPort == null) {\n+            @Nullable final OSProcessHandler handler = getProcessHandlerForBazel();\n+            startDevToolsServerAndConnect(handler, uri, screen);\n+          } else {\n+            devToolsInstance = new DevToolsInstance(hostAndPort.first, hostAndPort.second);\n+            devToolsInstance.openBrowserAndConnect(uri, screen);\n+          }\n         });\n+      } else {\n+        @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+        startDevToolsServerAndConnect(handler, uri, screen);\n       }\n-      else {\n-        // TODO(devoncarew): We should provide feedback to callers that the open browser call failed.\n+    }\n+  }\n+\n+  private void startDevToolsServerAndConnect(OSProcessHandler handler, String uri, String screen) {\n+    if (handler != null) {\n+      // TODO(devoncarew) Add a Task.Backgroundable here; \"Starting devtools...\"", "originalCommit": "794ae358c34c8132beee9c38292dba01d7e45473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2NTIxOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474265219", "bodyText": "I didn't want to put my name here since I just moved this block of code without changes, do you think this is enough of a change where I should take ownership of the TODO?", "author": "helin24", "createdAt": "2020-08-20T20:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NjgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDcxNA==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474284714", "bodyText": "you did the right thing. I saw the lower one was a move but I didn't scroll up high enough to spot this one.", "author": "jacob314", "createdAt": "2020-08-20T21:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NjgzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4ODUzMA==", "url": "https://github.com/flutter/flutter-intellij/pull/4733#discussion_r474188530", "bodyText": "nit: create a little Value class for this instead of using Pair.\nWith Pair it isn't obvious what the two fields are but it would be really obvious with a simple data class with a host and port field.", "author": "jacob314", "createdAt": "2020-08-20T18:29:54Z", "path": "src/io/flutter/run/daemon/DaemonApi.java", "diffHunk": "@@ -80,6 +81,10 @@\n     return send(\"app.stop\", new AppStop(appId));\n   }\n \n+  CompletableFuture<Pair<String, Integer>> devToolsServe() {", "originalCommit": "794ae358c34c8132beee9c38292dba01d7e45473", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f19ca33b270c26287342e4b5f03a323c6c995e93", "url": "https://github.com/flutter/flutter-intellij/commit/f19ca33b270c26287342e4b5f03a323c6c995e93", "message": "Use value class for address and add comments", "committedDate": "2020-08-20T21:01:13Z", "type": "commit"}, {"oid": "84c630fa1b71b53dc4f6aea13049cbfef87d9d3b", "url": "https://github.com/flutter/flutter-intellij/commit/84c630fa1b71b53dc4f6aea13049cbfef87d9d3b", "message": "Remove check for app connection since DevTools can handle", "committedDate": "2020-08-20T22:14:03Z", "type": "commit"}]}