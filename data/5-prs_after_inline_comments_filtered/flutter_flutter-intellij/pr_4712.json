{"pr_number": 4712, "pr_title": "Add handling and messaging for when JxBrowser is not installed", "pr_createdAt": "2020-07-22T00:11:24Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/4712", "timeline": [{"oid": "dfbfd6234549797cf4fe05840f6fa7cbbd682d7a", "url": "https://github.com/flutter/flutter-intellij/commit/dfbfd6234549797cf4fe05840f6fa7cbbd682d7a", "message": "Remove contents to allow restarting", "committedDate": "2020-07-21T18:25:45Z", "type": "commit"}, {"oid": "93f7333cc559646fc5fcb2a1dfeed7b32e78fb42", "url": "https://github.com/flutter/flutter-intellij/commit/93f7333cc559646fc5fcb2a1dfeed7b32e78fb42", "message": "Does not work yet for messaging on devtools", "committedDate": "2020-07-21T18:26:58Z", "type": "commit"}, {"oid": "44105ae46149e3b7babaee695098e6bca4ab6cf9", "url": "https://github.com/flutter/flutter-intellij/commit/44105ae46149e3b7babaee695098e6bca4ab6cf9", "message": "Show installing devtools message", "committedDate": "2020-07-21T21:27:07Z", "type": "commit"}, {"oid": "0a86f1f4d85365dcc43c1797658619fccab5746c", "url": "https://github.com/flutter/flutter-intellij/commit/0a86f1f4d85365dcc43c1797658619fccab5746c", "message": "Show messages jxbrowser progress", "committedDate": "2020-07-21T23:20:41Z", "type": "commit"}, {"oid": "2d537ac29ab1b2c6f9c554f2d0e376871739c7dc", "url": "https://github.com/flutter/flutter-intellij/commit/2d537ac29ab1b2c6f9c554f2d0e376871739c7dc", "message": "Separate handling of jxbrowser statuses", "committedDate": "2020-07-22T00:08:29Z", "type": "commit"}, {"oid": "f7157970812296957fe108b28cae81a75fcf439f", "url": "https://github.com/flutter/flutter-intellij/commit/f7157970812296957fe108b28cae81a75fcf439f", "message": "Fix installation in progress function", "committedDate": "2020-07-22T17:31:35Z", "type": "commit"}, {"oid": "477c4a7a76cb017392e6e52845a6f379ba4ab966", "url": "https://github.com/flutter/flutter-intellij/commit/477c4a7a76cb017392e6e52845a6f379ba4ab966", "message": "Fix thread use", "committedDate": "2020-07-22T18:01:02Z", "type": "commit"}, {"oid": "58eb8c2b81837d77d160c86242a95ac774c78d46", "url": "https://github.com/flutter/flutter-intellij/commit/58eb8c2b81837d77d160c86242a95ac774c78d46", "message": "Call invoke later in panel function, clean up", "committedDate": "2020-07-22T18:08:43Z", "type": "commit"}, {"oid": "172db568b12ba328197c73d090a3b50c071e6234", "url": "https://github.com/flutter/flutter-intellij/commit/172db568b12ba328197c73d090a3b50c071e6234", "message": "Add test for handle jxbrowser installed", "committedDate": "2020-07-22T20:08:19Z", "type": "commit"}, {"oid": "d2c627bf8a13ce3ed46b8311f8b0f574e73ea646", "url": "https://github.com/flutter/flutter-intellij/commit/d2c627bf8a13ce3ed46b8311f8b0f574e73ea646", "message": "Add test for handle failed installation", "committedDate": "2020-07-22T21:41:06Z", "type": "commit"}, {"oid": "dc7a25175fa2a6e19e2f3bab824e81dc29e39420", "url": "https://github.com/flutter/flutter-intellij/commit/dc7a25175fa2a6e19e2f3bab824e81dc29e39420", "message": "Add test for in progress install that finishes quickly", "committedDate": "2020-07-22T21:56:29Z", "type": "commit"}, {"oid": "4a63c8b5f9c8f700bb133cdcf6b57b963a473d9e", "url": "https://github.com/flutter/flutter-intellij/commit/4a63c8b5f9c8f700bb133cdcf6b57b963a473d9e", "message": "Add tests for waiting conditions", "committedDate": "2020-07-22T22:38:08Z", "type": "commit"}, {"oid": "cec1a2e4079d2cc8e4442d968cc7a5b00d2780af", "url": "https://github.com/flutter/flutter-intellij/commit/cec1a2e4079d2cc8e4442d968cc7a5b00d2780af", "message": "Add test for installed but waiting for devtools", "committedDate": "2020-07-22T22:46:27Z", "type": "commit"}, {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "url": "https://github.com/flutter/flutter-intellij/commit/aa550a8745acda9393063efb3e7f52fd4560a4fc", "message": "Add test for devtools install failed", "committedDate": "2020-07-22T22:48:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMjgxNA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459132814", "bodyText": "you should listen for an event from JxBrowserManager indicating that installation succeeded or failed rather than sleeping.", "author": "jacob314", "createdAt": "2020-07-22T23:06:28Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {", "originalCommit": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTU3Mw==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135573", "bodyText": "you could also use CompletableFuture completing the future when JxBrowserManager is ready.", "author": "jacob314", "createdAt": "2020-07-22T23:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMjgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMzQwOA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459133408", "bodyText": "I believe there is a JBLink or similar class that is already styled to look like a link. I think the performance tab sohws an example of using it.", "author": "jacob314", "createdAt": "2020-07-22T23:08:29Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+\n+      }\n+    });\n+  }\n+\n+  protected void presentLabel(ToolWindow toolWindow, String text) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);\n+    label.setForeground(UIUtil.getLabelDisabledForeground());\n+    replacePanelLabel(toolWindow, label);\n+  }\n+\n+  protected void presentClickableLabel(ToolWindow toolWindow, String text, MouseAdapter mouseAdapter) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);", "originalCommit": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTI3MQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135271", "bodyText": "nit: remove whitespace line.", "author": "jacob314", "createdAt": "2020-07-22T23:14:35Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+", "originalCommit": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTkwMA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135900", "bodyText": "Would be good to avoid using sleep outside of tests. Remove this method.", "author": "jacob314", "createdAt": "2020-07-22T23:16:16Z", "path": "src/io/flutter/utils/ThreadUtil.java", "diffHunk": "@@ -61,4 +61,14 @@ public static ThreadGroup getRootThreadGroup() {\n \n     return result;\n   }\n+\n+  public static boolean sleep(int seconds) {", "originalCommit": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3e69b7e0d0103d777acbc03af82554524c4eca5b", "url": "https://github.com/flutter/flutter-intellij/commit/3e69b7e0d0103d777acbc03af82554524c4eca5b", "message": "Use LinkLabel instead of custom label", "committedDate": "2020-07-22T23:35:09Z", "type": "commit"}, {"oid": "9c2c42386089af4f5376860e32e060b6b5892c29", "url": "https://github.com/flutter/flutter-intellij/commit/9c2c42386089af4f5376860e32e060b6b5892c29", "message": "Use completer and fix tests", "committedDate": "2020-07-23T04:51:26Z", "type": "commit"}, {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7", "url": "https://github.com/flutter/flutter-intellij/commit/6384f30f0017cb3b0bda0547290fdde80faac3e7", "message": "Use function for installation failed", "committedDate": "2020-07-23T15:45:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDU5NA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459600594", "bodyText": "is there a reason to not make this limit 10X higher? Users may have limited bandwidth.", "author": "jacob314", "createdAt": "2020-07-23T17:09:12Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -89,6 +89,7 @@ public void dispose() {\n   protected static final String INSTALLATION_TIMED_OUT_LABEL = \"Waiting for JxBrowser installation timed out. Restart your IDE to try again.\";\n   protected static final String INSTALLING_DEVTOOLS_LABEL = \"Installing DevTools...\";\n   protected static final String DEVTOOLS_FAILED_LABEL = \"Setting up DevTools failed.\";\n+  protected static final int INSTALLATION_WAIT_LIMIT_SECONDS = 200;", "originalCommit": "6384f30f0017cb3b0bda0547290fdde80faac3e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMTk1NA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459601954", "bodyText": "I have no opinion on this and chose a random number. This doesn't end the download attempt, only the completable future, but since we display a message suggesting a restart we should probably just make this bigger.", "author": "helin24", "createdAt": "2020-07-23T17:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMzYyMg==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459603622", "bodyText": "This logic is only safe if waitForInstallation is called after setUp is called.\nHere's a way to tweak it to make it a bit more robust.\nOnly create a new installation CompletableFuture if the previous future is already completed (indicates a previous failed install). Document he assumptions about the completed future.", "author": "jacob314", "createdAt": "2020-07-23T17:14:23Z", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -55,28 +60,48 @@ public JxBrowserStatus getStatus() {\n     return status.get();\n   }\n \n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {\n+      return null;\n+    }\n+\n+    try {\n+      return installation.get(seconds, TimeUnit.SECONDS);\n+    }\n+    catch (InterruptedException | ExecutionException e) {\n+      LOG.info(\"Waiting for JxBrowser to install threw an exception\");\n+      return null;\n+    }\n+  }\n+\n   public void retryFromFailed(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.INSTALLATION_FAILED, JxBrowserStatus.NOT_INSTALLED)) {\n       return;\n     }\n     setUp(project);\n   }\n \n+  private void setStatusFailed() {\n+    status.set(JxBrowserStatus.INSTALLATION_FAILED);\n+    installation.complete(JxBrowserStatus.INSTALLATION_FAILED);\n+  }\n+\n   public void setUp(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.NOT_INSTALLED, JxBrowserStatus.INSTALLATION_IN_PROGRESS)) {\n       // This check ensures that an IDE only downloads and installs JxBrowser once, even if multiple projects are open.\n       // If already in progress, let calling point wait until success or failure (it may make sense to call setUp but proceed).\n       // If already succeeded or failed, no need to continue.\n       return;\n     }\n+    installation = new CompletableFuture<>();", "originalCommit": "6384f30f0017cb3b0bda0547290fdde80faac3e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2OTM5Mw==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459669393", "bodyText": "Is my change and comment here accurate?", "author": "helin24", "createdAt": "2020-07-23T19:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMzYyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwNDU0MA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459604540", "bodyText": "why has the executeOnPolledThread call gone away?\nThe CompletableFuture code as written is still blocking but you could switch to the async version if you don't want to block.", "author": "jacob314", "createdAt": "2020-07-23T17:15:50Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -414,36 +415,23 @@ protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorSe\n     if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n       handleJxBrowserInstalled(app, inspectorService, toolWindow);\n     } else {\n-      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n-    }\n-  }\n+      try {\n+        final JxBrowserStatus newStatus = jxBrowserManager.waitForInstallation(INSTALLATION_WAIT_LIMIT_SECONDS);", "originalCommit": "6384f30f0017cb3b0bda0547290fdde80faac3e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2c157c4cb27d318f55b5cc88716203bbc7aa8945", "url": "https://github.com/flutter/flutter-intellij/commit/2c157c4cb27d318f55b5cc88716203bbc7aa8945", "message": "Make waiting async", "committedDate": "2020-07-23T18:42:38Z", "type": "commit"}, {"oid": "a879549bf869fa9711e1f00994fc75b595e15b03", "url": "https://github.com/flutter/flutter-intellij/commit/a879549bf869fa9711e1f00994fc75b595e15b03", "message": "Make new CompletableFuture only if previous is done", "committedDate": "2020-07-23T18:51:44Z", "type": "commit"}, {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "url": "https://github.com/flutter/flutter-intellij/commit/dfe37094a198f8ec86b4092e894e0ffec68256ff", "message": "Fix starting non-UI thread for waiting", "committedDate": "2020-07-23T20:23:07Z", "type": "commit"}, {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "url": "https://github.com/flutter/flutter-intellij/commit/dfe37094a198f8ec86b4092e894e0ffec68256ff", "message": "Fix starting non-UI thread for waiting", "committedDate": "2020-07-23T20:23:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjEwOA==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746108", "bodyText": "installation is never null. you could annotate it as non nullable.", "author": "jacob314", "createdAt": "2020-07-23T21:45:49Z", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {", "originalCommit": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjI3Nw==", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746277", "bodyText": "nit: comment that you must call setup as well as calling this message or it will time out.", "author": "jacob314", "createdAt": "2020-07-23T21:46:15Z", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {", "originalCommit": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f5733a1159cca25b07d3e6ebc292e63a0e3d24d", "url": "https://github.com/flutter/flutter-intellij/commit/9f5733a1159cca25b07d3e6ebc292e63a0e3d24d", "message": "Add comment about calling setUp first, remove null check", "committedDate": "2020-07-23T22:18:15Z", "type": "commit"}]}