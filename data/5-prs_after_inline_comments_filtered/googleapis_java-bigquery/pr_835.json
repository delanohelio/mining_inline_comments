{"pr_number": 835, "pr_title": "docs(samples): create and query Amazon s3 data using external table", "pr_createdAt": "2020-10-20T22:05:21Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/835", "timeline": [{"oid": "4c7ad64e4c05f13c23e75eb51d2880236606613b", "url": "https://github.com/googleapis/java-bigquery/commit/4c7ad64e4c05f13c23e75eb51d2880236606613b", "message": "docs(samples): add omni query on external table aws", "committedDate": "2020-10-20T13:28:54Z", "type": "commit"}, {"oid": "f06a8219207253decaf4145fad0f0282e880bfea", "url": "https://github.com/googleapis/java-bigquery/commit/f06a8219207253decaf4145fad0f0282e880bfea", "message": "docs(samples): update code", "committedDate": "2020-10-20T13:59:57Z", "type": "commit"}, {"oid": "170cbbd27acc4f2748f6875e720f7e84408e3b27", "url": "https://github.com/googleapis/java-bigquery/commit/170cbbd27acc4f2748f6875e720f7e84408e3b27", "message": "docs(samples): add user id and external id", "committedDate": "2020-10-20T14:30:00Z", "type": "commit"}, {"oid": "277071a9e1b8f7e4194a026d38ccf21fbed6c85c", "url": "https://github.com/googleapis/java-bigquery/commit/277071a9e1b8f7e4194a026d38ccf21fbed6c85c", "message": "docs(samples): fix connection name", "committedDate": "2020-10-20T15:00:00Z", "type": "commit"}, {"oid": "3cbbfa053e978201445fdf593beda2dc0c15d660", "url": "https://github.com/googleapis/java-bigquery/commit/3cbbfa053e978201445fdf593beda2dc0c15d660", "message": "docs(samples): update create external table AWS sample", "committedDate": "2020-10-20T18:22:04Z", "type": "commit"}, {"oid": "6e9ccc54e7a64c721826dc9fa22522c96cb76b50", "url": "https://github.com/googleapis/java-bigquery/commit/6e9ccc54e7a64c721826dc9fa22522c96cb76b50", "message": "update create dataset AWS sample", "committedDate": "2020-10-20T18:25:03Z", "type": "commit"}, {"oid": "d050989c47117de86514bb2aed25614842c3dd29", "url": "https://github.com/googleapis/java-bigquery/commit/d050989c47117de86514bb2aed25614842c3dd29", "message": "nit clean up", "committedDate": "2020-10-20T18:29:01Z", "type": "commit"}, {"oid": "6f98e0d27b0ec918b2a5320bff844d1bfcb2e14c", "url": "https://github.com/googleapis/java-bigquery/commit/6f98e0d27b0ec918b2a5320bff844d1bfcb2e14c", "message": "update query external table sample", "committedDate": "2020-10-20T22:04:45Z", "type": "commit"}, {"oid": "7242c725e280a4cd9a853d2a8d036b1bf172c8ce", "url": "https://github.com/googleapis/java-bigquery/commit/7242c725e280a4cd9a853d2a8d036b1bf172c8ce", "message": "fix checkstyle errors", "committedDate": "2020-10-20T22:07:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MTA1OA==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508891058", "bodyText": "Should you explain what this SQL statement does?", "author": "lesv", "createdAt": "2020-10-20T23:05:32Z", "path": "samples/snippets/src/main/java/com/example/bigquery/QueryExternalTableAws.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_query_external_aws_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.CsvOptions;\n+import com.google.cloud.bigquery.DatasetId;\n+import com.google.cloud.bigquery.ExternalTableDefinition;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table\n+public class QueryExternalTableAws {\n+\n+  public static void main(String[] args) {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String externalTableName = \"MY_EXTERNAL_TABLE_NAME\";\n+    String query =\n+        String.format(\n+            \"SELECT * FROM s%.%s.%s WHERE name LIKE 'W%%'\",\n+            projectId, datasetName, externalTableName);", "originalCommit": "7242c725e280a4cd9a853d2a8d036b1bf172c8ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5OTU3OQ==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508899579", "bodyText": "Yes - excellent idea! Thank you!\nDone!", "author": "stephaniewang526", "createdAt": "2020-10-20T23:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MTA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjI4Ng==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508892286", "bodyText": "Should these be caught?  Perhaps just mention them or let them propagate?  NOTE - BigQueryException is a RuntimeException and InterruptedException is not.", "author": "lesv", "createdAt": "2020-10-20T23:09:15Z", "path": "samples/snippets/src/main/java/com/example/bigquery/QueryExternalTableAws.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_query_external_aws_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.CsvOptions;\n+import com.google.cloud.bigquery.DatasetId;\n+import com.google.cloud.bigquery.ExternalTableDefinition;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table\n+public class QueryExternalTableAws {\n+\n+  public static void main(String[] args) {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String externalTableName = \"MY_EXTERNAL_TABLE_NAME\";\n+    String query =\n+        String.format(\n+            \"SELECT * FROM s%.%s.%s WHERE name LIKE 'W%%'\",\n+            projectId, datasetName, externalTableName);\n+    queryExternalTableAws(query);\n+  }\n+\n+  public static void queryExternalTableAws(String query) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      // Example query to find states starting with 'W'\n+      TableResult results = bigquery.query(QueryJobConfiguration.of(query));\n+\n+      results\n+          .iterateAll()\n+          .forEach(row -> row.forEach(val -> System.out.printf(\"%s,\", val.toString())));\n+\n+      System.out.println(\"Query on aws external permanent table performed successfully.\");\n+    } catch (BigQueryException | InterruptedException e) {\n+      System.out.println(\"Query not performed \\n\" + e.toString());\n+    }", "originalCommit": "7242c725e280a4cd9a853d2a8d036b1bf172c8ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjQzMQ==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508892431", "bodyText": "More important is why might these have been thrown and what should a user really do with them?", "author": "lesv", "createdAt": "2020-10-20T23:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5OTU1NA==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508899554", "bodyText": "I think we will catch BigQueryException and not InterruptedException.\nUpdated!", "author": "stephaniewang526", "createdAt": "2020-10-20T23:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjYxNw==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508892617", "bodyText": "Might not be your best final choice for a bucket name.", "author": "lesv", "createdAt": "2020-10-20T23:10:15Z", "path": "samples/snippets/src/test/java/com/example/bigquery/CreateExternalTableAwsIT.java", "diffHunk": "@@ -120,18 +90,19 @@ public void tearDown() throws IOException {\n \n   @Test\n   public void testCreateExternalTableAws() {\n-    String sourceUri = \"s3://cloud-samples-tests/us-states.csv\";\n+    String sourceUri = \"s3://steph-omni-test-bucket/us-states.csv\";", "originalCommit": "7242c725e280a4cd9a853d2a8d036b1bf172c8ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5OTQzMg==", "url": "https://github.com/googleapis/java-bigquery/pull/835#discussion_r508899432", "bodyText": "Yes - you're right. Created a new bucket for devrel sampels testing. Thank you!", "author": "stephaniewang526", "createdAt": "2020-10-20T23:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjYxNw=="}], "type": "inlineReview"}, {"oid": "01bccfe9faef56bdd98d6228d45c486b721a82fc", "url": "https://github.com/googleapis/java-bigquery/commit/01bccfe9faef56bdd98d6228d45c486b721a82fc", "message": "update based on comments", "committedDate": "2020-10-20T23:31:22Z", "type": "commit"}]}