{"pr_number": 424, "pr_title": "docs(samples): add update table using dml query sample", "pr_createdAt": "2020-06-08T17:28:50Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/424", "timeline": [{"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc", "url": "https://github.com/googleapis/java-bigquery/commit/7e7537ffe83220435415f3af1024af2b1e6d98bc", "message": "docs(samples): add update table using dml query sample", "committedDate": "2020-06-08T17:28:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzkzMQ==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436877931", "bodyText": "You are using getenv here, but also have requireEnvVar below. Maybe use requireEnvVar here but have it to return a value?", "author": "kurtisvg", "createdAt": "2020-06-08T17:34:23Z", "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");", "originalCommit": "7e7537ffe83220435415f3af1024af2b1e6d98bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDQ1MA==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436880450", "bodyText": "this is how we have been handling this in all the samples in BigQuery... is there a new standard?", "author": "stephaniewang526", "createdAt": "2020-06-08T17:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MDg0Nw==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436890847", "bodyText": "You're right, this seems to be the same as being used in other places. However, I think maybe this pattern might be improved if we did something like this instead;\n  private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n\n  private static string requireEnvVar(String varName) {\n   String value =  System.getenv(varName);\n    assertNotNull(\n        \"Environment variable \" + varName + \" is required to perform these tests.\",\n        value);\n     return value;\n  }\nThis way we only have to specify \"BIGQUERY_DATASET_NAME\" in one pace.\n(consider this one a nit)", "author": "kurtisvg", "createdAt": "2020-06-08T17:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNDUzMQ==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436904531", "bodyText": "okay makes sense - done", "author": "stephaniewang526", "createdAt": "2020-06-08T18:21:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODMxMg==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436878312", "bodyText": "Should this be set up?", "author": "kurtisvg", "createdAt": "2020-06-08T17:34:59Z", "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testUpdateTableDML() throws IOException, InterruptedException {\n+    String tableName = \"UserSessions_TEST_\" + UUID.randomUUID().toString().replace('-', '_');\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"id\", LegacySQLTypeName.STRING),\n+            Field.of(\"user_id\", LegacySQLTypeName.STRING),\n+            Field.of(\"login_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"logout_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"ip_address\", LegacySQLTypeName.STRING));\n+\n+    CreateTable.createTable(BIGQUERY_DATASET_NAME, tableName, schema);", "originalCommit": "7e7537ffe83220435415f3af1024af2b1e6d98bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQxOA==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436879418", "bodyText": "We have always done this in the test method in all the other similar samples", "author": "stephaniewang526", "createdAt": "2020-06-08T17:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzUyMw==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436887523", "bodyText": "So this one isn't a big deal, but logically it does make sense that \"setUp\" call since it's not directly related to a test.\n(consider this one a nit)", "author": "kurtisvg", "createdAt": "2020-06-08T17:51:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNDY1OQ==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436904659", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-06-08T18:21:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODQzMQ==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436878431", "bodyText": "Should this be teardown?", "author": "kurtisvg", "createdAt": "2020-06-08T17:35:10Z", "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testUpdateTableDML() throws IOException, InterruptedException {\n+    String tableName = \"UserSessions_TEST_\" + UUID.randomUUID().toString().replace('-', '_');\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"id\", LegacySQLTypeName.STRING),\n+            Field.of(\"user_id\", LegacySQLTypeName.STRING),\n+            Field.of(\"login_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"logout_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"ip_address\", LegacySQLTypeName.STRING));\n+\n+    CreateTable.createTable(BIGQUERY_DATASET_NAME, tableName, schema);\n+\n+    UpdateTableDML.updateTableDML(BIGQUERY_DATASET_NAME, tableName);\n+\n+    assertThat(bout.toString()).contains(\"Table updated successfully using DML\");\n+\n+    // Clean up\n+    DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "originalCommit": "7e7537ffe83220435415f3af1024af2b1e6d98bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTgxNw==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436879817", "bodyText": "this one also we have been doing this in the method itself...", "author": "stephaniewang526", "createdAt": "2020-06-08T17:37:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzgxNw==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436887817", "bodyText": "This one is more of a concern - if any exception is thrown before this this step won't be executed. This means failures will leak resources.", "author": "kurtisvg", "createdAt": "2020-06-08T17:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNDcyMA==", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436904720", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-06-08T18:21:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODQzMQ=="}], "type": "inlineReview"}, {"oid": "61847792e065e9b997a924b02e5f120201ed8fda", "url": "https://github.com/googleapis/java-bigquery/commit/61847792e065e9b997a924b02e5f120201ed8fda", "message": "update based on comments", "committedDate": "2020-06-08T18:20:40Z", "type": "commit"}]}