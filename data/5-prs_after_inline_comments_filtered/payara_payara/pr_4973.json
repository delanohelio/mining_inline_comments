{"pr_number": 4973, "pr_title": "FISH-676 JDBC Config Source Fixes", "pr_createdAt": "2020-10-30T16:19:54Z", "pr_url": "https://github.com/payara/Payara/pull/4973", "timeline": [{"oid": "0afd2dea8d6cd5fd2251328ee22ed7cdcc711050", "url": "https://github.com/payara/Payara/commit/0afd2dea8d6cd5fd2251328ee22ed7cdcc711050", "message": "FISH-676 Close Open JDBC Connections\n\nJDBC connections were leaking, this commit should ensure they are closed\nproperly.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-10-30T16:17:25Z", "type": "commit"}, {"oid": "a7259a925f466f67dd7aae0d1dabdff80b2d3bf8", "url": "https://github.com/payara/Payara/commit/a7259a925f466f67dd7aae0d1dabdff80b2d3bf8", "message": "FISH-676 Log JDBC Config Source Errors\n\nErrors were being swallowed, but are now properly logged.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-10-30T16:36:35Z", "type": "forcePushed"}, {"oid": "09f8f1c04108ad03890c2b22434c85e553d0090d", "url": "https://github.com/payara/Payara/commit/09f8f1c04108ad03890c2b22434c85e553d0090d", "message": "FISH-676 Log JDBC Config Source Errors\n\nErrors were being swallowed, but are now properly logged.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-10-30T16:38:51Z", "type": "commit"}, {"oid": "09f8f1c04108ad03890c2b22434c85e553d0090d", "url": "https://github.com/payara/Payara/commit/09f8f1c04108ad03890c2b22434c85e553d0090d", "message": "FISH-676 Log JDBC Config Source Errors\n\nErrors were being swallowed, but are now properly logged.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-10-30T16:38:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MDM3OA==", "url": "https://github.com/payara/Payara/pull/4973#discussion_r515670378", "bodyText": "How about an Optional here?", "author": "svendiedrichsen", "createdAt": "2020-11-01T20:50:50Z", "path": "nucleus/payara-modules/nucleus-microprofile/config-service/src/main/java/fish/payara/nucleus/microprofile/config/source/JDBCConfigSource.java", "diffHunk": "@@ -64,17 +83,31 @@ public int getOrdinal() {\n \n     @Override\n     public String getValue(String propertyName) {\n-        return jdbcConfigHelper.getConfigValue(propertyName);\n+        JDBCConfigSourceHelper helper = getHelper();\n+        if (helper == null) {\n+            return null;\n+        }\n+        try {\n+            return helper.getConfigValue(propertyName);\n+        } finally {\n+            try {\n+                helper.close();\n+            } catch (IOException e) {\n+                LOGGER.log(Level.SEVERE, \"Error closing JDBC connection\", e);\n+            }\n+        }\n     }\n \n     @Override\n     public String getName() {\n         return \"JDBC\";\n     }\n \n-    private void init() {\n-        if (jdbcConfigHelper == null) {\n-            jdbcConfigHelper = new JDBCConfigSourceHelper(Globals.getDefaultHabitat().getService(JDBCConfigSourceConfiguration.class));\n+    private JDBCConfigSourceHelper getHelper() {", "originalCommit": "09f8f1c04108ad03890c2b22434c85e553d0090d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MDQ2MA==", "url": "https://github.com/payara/Payara/pull/4973#discussion_r515670460", "bodyText": "How about try-with-resources here?", "author": "svendiedrichsen", "createdAt": "2020-11-01T20:51:33Z", "path": "nucleus/payara-modules/nucleus-microprofile/config-service/src/main/java/fish/payara/nucleus/microprofile/config/source/JDBCConfigSource.java", "diffHunk": "@@ -64,17 +83,31 @@ public int getOrdinal() {\n \n     @Override\n     public String getValue(String propertyName) {\n-        return jdbcConfigHelper.getConfigValue(propertyName);\n+        JDBCConfigSourceHelper helper = getHelper();\n+        if (helper == null) {\n+            return null;\n+        }\n+        try {\n+            return helper.getConfigValue(propertyName);", "originalCommit": "09f8f1c04108ad03890c2b22434c85e553d0090d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MDQ3Mw==", "url": "https://github.com/payara/Payara/pull/4973#discussion_r515670473", "bodyText": "How about try-with-resources here?", "author": "svendiedrichsen", "createdAt": "2020-11-01T20:51:43Z", "path": "nucleus/payara-modules/nucleus-microprofile/config-service/src/main/java/fish/payara/nucleus/microprofile/config/source/JDBCConfigSource.java", "diffHunk": "@@ -39,22 +39,41 @@\n  */\n package fish.payara.nucleus.microprofile.config.source;\n \n-import fish.payara.nucleus.microprofile.config.spi.JDBCConfigSourceConfiguration;\n+import java.io.IOException;\n import java.util.Map;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n import org.eclipse.microprofile.config.spi.ConfigSource;\n import org.glassfish.internal.api.Globals;\n \n+import fish.payara.nucleus.microprofile.config.spi.JDBCConfigSourceConfiguration;\n+\n public class JDBCConfigSource extends PayaraConfigSource implements ConfigSource {\n \n-    private JDBCConfigSourceHelper jdbcConfigHelper;\n+    private static final Logger LOGGER = Logger.getLogger(JDBCConfigSource.class.getName());\n+\n+    private final JDBCConfigSourceConfiguration config;\n \n     public JDBCConfigSource() {\n-      init();\n+        this.config = Globals.getDefaultHabitat().getService(JDBCConfigSourceConfiguration.class);\n     }\n \n     @Override\n     public Map<String, String> getProperties() {\n-        return jdbcConfigHelper.getAllConfigValues();\n+        JDBCConfigSourceHelper helper = getHelper();\n+        if (helper == null) {\n+            return null;\n+        }\n+        try {\n+            return helper.getAllConfigValues();", "originalCommit": "09f8f1c04108ad03890c2b22434c85e553d0090d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}