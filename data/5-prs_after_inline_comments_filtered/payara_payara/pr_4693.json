{"pr_number": 4693, "pr_title": "APPSERV-152 Asadmin command to restart network listeners", "pr_createdAt": "2020-06-02T14:48:28Z", "pr_url": "https://github.com/payara/Payara/pull/4693", "timeline": [{"oid": "bc98e818b3551a6179505daba7bca5adae297041", "url": "https://github.com/payara/Payara/commit/bc98e818b3551a6179505daba7bca5adae297041", "message": "APPSERV-152 draft", "committedDate": "2020-06-02T13:01:38Z", "type": "commit"}, {"oid": "3189f99d8ef4848001fcf502b66748d2ee778e67", "url": "https://github.com/payara/Payara/commit/3189f99d8ef4848001fcf502b66748d2ee778e67", "message": "APPSERV-152 made into a dedicated restart command using the grizzly service", "committedDate": "2020-06-02T14:26:05Z", "type": "commit"}, {"oid": "785a84f19082b24551ae4c86c2ee57c3b0e623d0", "url": "https://github.com/payara/Payara/commit/785a84f19082b24551ae4c86c2ee57c3b0e623d0", "message": "APPSERV-152 better names", "committedDate": "2020-06-03T13:14:46Z", "type": "commit"}, {"oid": "20b1c7fb49405e83dff8ed5e5b89b82bb0e9a8e3", "url": "https://github.com/payara/Payara/commit/20b1c7fb49405e83dff8ed5e5b89b82bb0e9a8e3", "message": "APPSERV-152 added --all option", "committedDate": "2020-06-03T14:45:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY3ODc0Mg==", "url": "https://github.com/payara/Payara/pull/4693#discussion_r434678742", "bodyText": "A bit of a odd situation, but this would technically still evaluate to true if someone ran:\nasadmin restart-http-listeners --all false", "author": "Pandrex247", "createdAt": "2020-06-03T16:00:24Z", "path": "appserver/web/admin/src/main/java/fish/payara/grizzly/config/admin/cli/RestartHttpListenersCommand.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ *  Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ *  The contents of this file are subject to the terms of either the GNU\n+ *  General Public License Version 2 only (\"GPL\") or the Common Development\n+ *  and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ *  may not use this file except in compliance with the License.  You can\n+ *  obtain a copy of the License at\n+ *  https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ *  See the License for the specific\n+ *  language governing permissions and limitations under the License.\n+ *\n+ *  When distributing the software, include this License Header Notice in each\n+ *  file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ *  GPL Classpath Exception:\n+ *  The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ *  exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ *  file that accompanied this code.\n+ *\n+ *  Modifications:\n+ *  If applicable, add the following below the License Header, with the fields\n+ *  enclosed by brackets [] replaced by your own identifying information:\n+ *  \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ *  Contributor(s):\n+ *  If you wish your version of this file to be governed by only the CDDL or\n+ *  only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ *  elects to include this software in this distribution under the [CDDL or GPL\n+ *  Version 2] license.\"  If you don't indicate a single choice of license, a\n+ *  recipient has the option to distribute your version of this file under\n+ *  either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ *  its licensees as provided above.  However, if you add GPL Version 2 code\n+ *  and therefore, elected the GPL Version 2 license, then the option applies\n+ *  only if the new code is made subject to such option by the copyright\n+ *  holder.\n+ */\n+package fish.payara.grizzly.config.admin.cli;\n+\n+import java.text.MessageFormat;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+\n+import org.glassfish.api.ActionReport;\n+import org.glassfish.api.ActionReport.ExitCode;\n+import org.glassfish.api.Param;\n+import org.glassfish.api.admin.AdminCommand;\n+import org.glassfish.api.admin.AdminCommandContext;\n+import org.glassfish.api.admin.ExecuteOn;\n+import org.glassfish.api.admin.FailurePolicy;\n+import org.glassfish.api.admin.ParameterMap;\n+import org.glassfish.api.admin.RestEndpoint;\n+import org.glassfish.api.admin.RestEndpoints;\n+import org.glassfish.api.admin.RuntimeType;\n+import org.glassfish.config.support.CommandTarget;\n+import org.glassfish.config.support.TargetType;\n+import org.glassfish.grizzly.config.dom.NetworkListener;\n+import org.glassfish.grizzly.config.dom.NetworkListeners;\n+import org.glassfish.hk2.api.PerLookup;\n+import org.glassfish.hk2.api.ServiceLocator;\n+import org.glassfish.internal.api.Target;\n+import org.jvnet.hk2.annotations.Service;\n+\n+import com.sun.enterprise.admin.util.ClusterOperationUtil;\n+import com.sun.enterprise.config.serverbeans.Config;\n+import com.sun.enterprise.config.serverbeans.Domain;\n+import com.sun.enterprise.util.SystemPropertyConstants;\n+import com.sun.enterprise.v3.services.impl.GrizzlyService;\n+\n+@ExecuteOn({RuntimeType.DAS, RuntimeType.INSTANCE})\n+@TargetType(value = {CommandTarget.DAS, CommandTarget.STANDALONE_INSTANCE, CommandTarget.CLUSTER, CommandTarget.CONFIG, CommandTarget.DEPLOYMENT_GROUP})\n+@Service(name = \"restart-http-listeners\")\n+@PerLookup\n+@RestEndpoints({\n+    @RestEndpoint(configBean = NetworkListeners.class,\n+            opType = RestEndpoint.OpType.POST,\n+            description = \"Restarts all HTTP listeners\")\n+})\n+public class RestartHttpListenersCommand implements AdminCommand {\n+\n+    @Inject\n+    private Domain domain;\n+\n+    @Inject\n+    private ServiceLocator locator;\n+\n+    @Inject\n+    private Target targetUtil;\n+\n+    @Inject\n+    private GrizzlyService service;\n+\n+    @Param(name = \"target\", optional = true)\n+    private String target;\n+\n+    @Param(name = \"all\", optional = true)\n+    private Boolean all;\n+\n+    @Override\n+    public void execute(AdminCommandContext context) {\n+        ActionReport report = context.getActionReport();\n+\n+        if (all != null && target == null) {", "originalCommit": "20b1c7fb49405e83dff8ed5e5b89b82bb0e9a8e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5MjM1Mw==", "url": "https://github.com/payara/Payara/pull/4693#discussion_r434692353", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Param(name = \"target\", optional = true)\n          \n          \n            \n                @Param(name = \"target\", optional = true, primary = true)\n          \n      \n    \n    \n  \n\nSave people writing out --target - I think it's fairly safe to assume if someone types the below they mean an instance\nasadmin restart-http-listeners Flabbergasted-Blobfish", "author": "Pandrex247", "createdAt": "2020-06-03T16:18:15Z", "path": "appserver/web/admin/src/main/java/fish/payara/grizzly/config/admin/cli/RestartHttpListenersCommand.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ *  Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ *  The contents of this file are subject to the terms of either the GNU\n+ *  General Public License Version 2 only (\"GPL\") or the Common Development\n+ *  and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ *  may not use this file except in compliance with the License.  You can\n+ *  obtain a copy of the License at\n+ *  https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ *  See the License for the specific\n+ *  language governing permissions and limitations under the License.\n+ *\n+ *  When distributing the software, include this License Header Notice in each\n+ *  file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ *  GPL Classpath Exception:\n+ *  The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ *  exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ *  file that accompanied this code.\n+ *\n+ *  Modifications:\n+ *  If applicable, add the following below the License Header, with the fields\n+ *  enclosed by brackets [] replaced by your own identifying information:\n+ *  \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ *  Contributor(s):\n+ *  If you wish your version of this file to be governed by only the CDDL or\n+ *  only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ *  elects to include this software in this distribution under the [CDDL or GPL\n+ *  Version 2] license.\"  If you don't indicate a single choice of license, a\n+ *  recipient has the option to distribute your version of this file under\n+ *  either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ *  its licensees as provided above.  However, if you add GPL Version 2 code\n+ *  and therefore, elected the GPL Version 2 license, then the option applies\n+ *  only if the new code is made subject to such option by the copyright\n+ *  holder.\n+ */\n+package fish.payara.grizzly.config.admin.cli;\n+\n+import java.text.MessageFormat;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+\n+import org.glassfish.api.ActionReport;\n+import org.glassfish.api.ActionReport.ExitCode;\n+import org.glassfish.api.Param;\n+import org.glassfish.api.admin.AdminCommand;\n+import org.glassfish.api.admin.AdminCommandContext;\n+import org.glassfish.api.admin.ExecuteOn;\n+import org.glassfish.api.admin.FailurePolicy;\n+import org.glassfish.api.admin.ParameterMap;\n+import org.glassfish.api.admin.RestEndpoint;\n+import org.glassfish.api.admin.RestEndpoints;\n+import org.glassfish.api.admin.RuntimeType;\n+import org.glassfish.config.support.CommandTarget;\n+import org.glassfish.config.support.TargetType;\n+import org.glassfish.grizzly.config.dom.NetworkListener;\n+import org.glassfish.grizzly.config.dom.NetworkListeners;\n+import org.glassfish.hk2.api.PerLookup;\n+import org.glassfish.hk2.api.ServiceLocator;\n+import org.glassfish.internal.api.Target;\n+import org.jvnet.hk2.annotations.Service;\n+\n+import com.sun.enterprise.admin.util.ClusterOperationUtil;\n+import com.sun.enterprise.config.serverbeans.Config;\n+import com.sun.enterprise.config.serverbeans.Domain;\n+import com.sun.enterprise.util.SystemPropertyConstants;\n+import com.sun.enterprise.v3.services.impl.GrizzlyService;\n+\n+@ExecuteOn({RuntimeType.DAS, RuntimeType.INSTANCE})\n+@TargetType(value = {CommandTarget.DAS, CommandTarget.STANDALONE_INSTANCE, CommandTarget.CLUSTER, CommandTarget.CONFIG, CommandTarget.DEPLOYMENT_GROUP})\n+@Service(name = \"restart-http-listeners\")\n+@PerLookup\n+@RestEndpoints({\n+    @RestEndpoint(configBean = NetworkListeners.class,\n+            opType = RestEndpoint.OpType.POST,\n+            description = \"Restarts all HTTP listeners\")\n+})\n+public class RestartHttpListenersCommand implements AdminCommand {\n+\n+    @Inject\n+    private Domain domain;\n+\n+    @Inject\n+    private ServiceLocator locator;\n+\n+    @Inject\n+    private Target targetUtil;\n+\n+    @Inject\n+    private GrizzlyService service;\n+\n+    @Param(name = \"target\", optional = true)", "originalCommit": "20b1c7fb49405e83dff8ed5e5b89b82bb0e9a8e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "926323d465d864bd1af2caa073586c06b58762cf", "url": "https://github.com/payara/Payara/commit/926323d465d864bd1af2caa073586c06b58762cf", "message": "APPSERV-152 addressed Andrew's comments: --target is primary parameter, --all=false has no effect", "committedDate": "2020-06-04T07:19:15Z", "type": "commit"}]}