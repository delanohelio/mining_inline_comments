{"pr_number": 4768, "pr_title": "FISH-128 OpenAPI does not include APIs from jars within a war ", "pr_createdAt": "2020-07-07T08:23:26Z", "pr_url": "https://github.com/payara/Payara/pull/4768", "timeline": [{"oid": "d171596b014b09c61d40798d9381b0a29d1e1b60", "url": "https://github.com/payara/Payara/commit/d171596b014b09c61d40798d9381b0a29d1e1b60", "message": "FISH-128 OpenAPI does not include APIs from jars within a war (other jars)\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>", "committedDate": "2020-07-07T08:20:21Z", "type": "commit"}, {"oid": "374c590346c7a991e070905273a49c1559102a28", "url": "https://github.com/payara/Payara/commit/374c590346c7a991e070905273a49c1559102a28", "message": "Merge branch 'master' into FISH-128", "committedDate": "2020-07-07T08:55:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMjc4MQ==", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450722781", "bodyText": "I think you could just use a for loop with iterator here.", "author": "jbee", "createdAt": "2020-07-07T09:14:06Z", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {\n+        ReadableArchive archive = appInfo.getSource();\n+\n+        Set<Type> types = new HashSet<>();\n+        if (config != null && config.getScanLib()) {\n+            Iterator<String> subArchiveItr = archive.entries().asIterator();\n+            while (subArchiveItr.hasNext()) {\n+                String subArchive = subArchiveItr.next();\n+                if (subArchive.startsWith(\"WEB-INF/lib/\") && subArchive.endsWith(\".jar\")) {\n+                    try {\n+                        Iterator<String> classItr = archive.getSubArchive(subArchive).entries().asIterator();\n+                        while (classItr.hasNext()) {", "originalCommit": "d171596b014b09c61d40798d9381b0a29d1e1b60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMzAwNw==", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450723007", "bodyText": "I think you could just use a for loop with iterator here.", "author": "jbee", "createdAt": "2020-07-07T09:14:28Z", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {\n+        ReadableArchive archive = appInfo.getSource();\n+\n+        Set<Type> types = new HashSet<>();\n+        if (config != null && config.getScanLib()) {\n+            Iterator<String> subArchiveItr = archive.entries().asIterator();\n+            while (subArchiveItr.hasNext()) {", "originalCommit": "d171596b014b09c61d40798d9381b0a29d1e1b60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMzk3Mg==", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450723972", "bodyText": "Quite a big method that could be split into a few steps.", "author": "jbee", "createdAt": "2020-07-07T09:16:06Z", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {", "originalCommit": "d171596b014b09c61d40798d9381b0a29d1e1b60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71e7e15d288427c5b29240931aaf821b5ed59c2c", "url": "https://github.com/payara/Payara/commit/71e7e15d288427c5b29240931aaf821b5ed59c2c", "message": "FISH-128 PR review changes\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>", "committedDate": "2020-07-07T11:36:02Z", "type": "commit"}, {"oid": "5ae568b8d2b2fd3fcf183a6d90285c8f430fa238", "url": "https://github.com/payara/Payara/commit/5ae568b8d2b2fd3fcf183a6d90285c8f430fa238", "message": "Merge branch 'FISH-128' of https://github.com/jgauravgupta/Payara into FISH-128", "committedDate": "2020-07-07T11:38:09Z", "type": "commit"}, {"oid": "a52364f60ae810cc4fb9b3d453554f19ea1107f3", "url": "https://github.com/payara/Payara/commit/a52364f60ae810cc4fb9b3d453554f19ea1107f3", "message": "FISH-128 polish\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>", "committedDate": "2020-07-07T11:44:18Z", "type": "commit"}]}