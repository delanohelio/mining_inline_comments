{"pr_number": 4759, "pr_title": "DHFPROD-6153: Loading default Initialize and Finalize endpoints", "pr_createdAt": "2020-10-23T18:48:36Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4759", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4ODc0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511088749", "bodyText": "Do these need to move as part of this PR? I'm planning on moving buildHubClientConfig out of here soon - the Reader will need it. In which case these two methods can stay put.", "author": "rjrudin", "createdAt": "2020-10-23T19:05:53Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -75,17 +64,28 @@ public static HubClientConfig buildHubClientConfig(Map<String, String> options)\n         hubClientConfig.applyProperties(props);\n         return hubClientConfig;\n     }\n+\n+    @Override", "originalCommit": "19896d0c0fbbbf399e8f067c6602fc0f9fb5486e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTExMTc1NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511111754", "bodyText": "The changes are just formatting in this PR.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-10-23T19:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4ODc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5ODc2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511098760", "bodyText": "I think it's worth making another private method to avoid the duplication of the \"if\" check and the error handling - e.g. \"loadEndpointsIfNotPresent\".", "author": "rjrudin", "createdAt": "2020-10-23T19:19:01Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -216,6 +214,16 @@ private DocumentMetadataHandle buildDocumentMetadata() {\n     }\n \n     private String initializeJob(StructType schema) {\n+        String apiPath = \"/marklogic-data-hub-spark-connector/initializeJob.api\";\n+        String scriptPath = \"/marklogic-data-hub-spark-connector/initializeJob.sjs\";\n+        try {", "originalCommit": "19896d0c0fbbbf399e8f067c6602fc0f9fb5486e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyODgwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511128807", "bodyText": "Updated the method to check and load.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-10-23T20:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5ODc2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5OTAxOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511099018", "bodyText": "Just throw a RuntimeException here - IllegalArgumentException is for when the user provided some argument that's not valid, which isn't the case here.", "author": "rjrudin", "createdAt": "2020-10-23T19:19:19Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -216,6 +214,16 @@ private DocumentMetadataHandle buildDocumentMetadata() {\n     }\n \n     private String initializeJob(StructType schema) {\n+        String apiPath = \"/marklogic-data-hub-spark-connector/initializeJob.api\";\n+        String scriptPath = \"/marklogic-data-hub-spark-connector/initializeJob.sjs\";\n+        try {\n+            if (endpointExists(apiPath)) {\n+                loadEndpoint(scriptPath, apiPath);\n+            }\n+        } catch (IOException e) {\n+            throw new IllegalArgumentException(\"Unable to load initializeJob Endpoint, cause: \" + e.getMessage(), e);", "originalCommit": "19896d0c0fbbbf399e8f067c6602fc0f9fb5486e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyODY0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511128649", "bodyText": "Done.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-10-23T19:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5OTAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5OTUxNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511099515", "bodyText": "Need to check both the api and the sjs separately - it's conceivable that one exists but the other does not.", "author": "rjrudin", "createdAt": "2020-10-23T19:19:52Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -155,10 +155,11 @@ private JsonNode determineIngestionEndpointParams(Map<String, String> options) {\n \n         if (doesNotHaveApiPath) {\n             String apiPath = \"/marklogic-data-hub-spark-connector/bulkIngester.api\";\n+            String scriptPath = \"/marklogic-data-hub-spark-connector/bulkIngester.sjs\";\n \n-            if(hubClient.getModulesClient().newJSONDocumentManager().exists(apiPath) == null) {\n+            if (endpointExists(apiPath)) {", "originalCommit": "19896d0c0fbbbf399e8f067c6602fc0f9fb5486e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyODkyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511128921", "bodyText": "Checking both the files.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-10-23T20:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5OTUxNQ=="}], "type": "inlineReview"}, {"oid": "e07332ae775f0df1cfc9883435923498d6d2297c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e07332ae775f0df1cfc9883435923498d6d2297c", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-23T19:56:39Z", "type": "forcePushed"}, {"oid": "9cad37ad54bff6463ef8b5cb008e991ef6a1b1f6", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9cad37ad54bff6463ef8b5cb008e991ef6a1b1f6", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-23T19:59:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NjAxNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r511196015", "bodyText": "To be safe, we really need to do one document at a time. If someone how module exists but the other doesn't, this will throw an error. The efficiency of writing 2 at a time isn't important here; this is going to finish in a very small amount of time no matter what, and it's a one-time operation.\nSo this method should just handle a single module. It just needs to know the path and the Format.", "author": "rjrudin", "createdAt": "2020-10-23T23:27:55Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -190,16 +185,19 @@ private void applyOptionsToEndpointConstants(ObjectNode endpointConstants, Map<S\n         });\n     }\n \n-    private void loadEndpoints() throws IOException {\n-        String scriptPath = \"marklogic-data-hub-spark-connector/bulkIngester.sjs\";\n-        String apiPath = \"marklogic-data-hub-spark-connector/bulkIngester.api\";\n-\n-        TextDocumentManager modMgr = hubClient.getModulesClient().newTextDocumentManager();\n-        DocumentWriteSet writeSet = modMgr.newWriteSet();\n-        DocumentMetadataHandle metadata = buildDocumentMetadata();\n-        writeSet.add(\"/\" + apiPath, metadata, new InputStreamHandle(new ClassPathResource(apiPath).getInputStream()).withFormat(Format.JSON));\n-        writeSet.add(\"/\" + scriptPath, metadata, new InputStreamHandle(new ClassPathResource(scriptPath).getInputStream()).withFormat(Format.TEXT));\n-        modMgr.write(writeSet);\n+    private void loadEndpointsIfNotPresent(String scriptPath, String apiPath) {", "originalCommit": "9cad37ad54bff6463ef8b5cb008e991ef6a1b1f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4OTI5OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r512189299", "bodyText": "Done.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-10-26T18:43:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NjAxNQ=="}], "type": "inlineReview"}, {"oid": "81941060cafd448d8377baa9890119e9b9b5ed98", "url": "https://github.com/marklogic/marklogic-data-hub/commit/81941060cafd448d8377baa9890119e9b9b5ed98", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-24T00:11:19Z", "type": "forcePushed"}, {"oid": "41cfbb45beb47842076f3a7652f05ee024728543", "url": "https://github.com/marklogic/marklogic-data-hub/commit/41cfbb45beb47842076f3a7652f05ee024728543", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-24T00:24:03Z", "type": "forcePushed"}, {"oid": "059f6c6f20b401e4417209568c44ffbd7d9cab21", "url": "https://github.com/marklogic/marklogic-data-hub/commit/059f6c6f20b401e4417209568c44ffbd7d9cab21", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-26T18:29:32Z", "type": "forcePushed"}, {"oid": "b818ac964adc509c19ce0e8ae6d88d67bec75292", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b818ac964adc509c19ce0e8ae6d88d67bec75292", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-26T18:42:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1MDQ3NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r512250474", "bodyText": "Can you rename this to \"loadModuleIfNotPresent\" and rename \"scriptPath\" to \"modulePath\"?", "author": "rjrudin", "createdAt": "2020-10-26T20:33:59Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -204,16 +201,18 @@ private void applyOptionsToEndpointConstants(ObjectNode endpointConstants, Map<S\n         });\n     }\n \n-    private void loadEndpoints() throws IOException {\n-        String scriptPath = \"marklogic-data-hub-spark-connector/bulkIngester.sjs\";\n-        String apiPath = \"marklogic-data-hub-spark-connector/bulkIngester.api\";\n-\n-        TextDocumentManager modMgr = hubClient.getModulesClient().newTextDocumentManager();\n-        DocumentWriteSet writeSet = modMgr.newWriteSet();\n-        DocumentMetadataHandle metadata = buildDocumentMetadata();\n-        writeSet.add(\"/\" + apiPath, metadata, new InputStreamHandle(new ClassPathResource(apiPath).getInputStream()).withFormat(Format.JSON));\n-        writeSet.add(\"/\" + scriptPath, metadata, new InputStreamHandle(new ClassPathResource(scriptPath).getInputStream()).withFormat(Format.TEXT));\n-        modMgr.write(writeSet);\n+    private void loadEndpointsIfNotPresent(String scriptPath, Format format) {", "originalCommit": "b818ac964adc509c19ce0e8ae6d88d67bec75292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1MDc1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r512250750", "bodyText": "No need for a DocumentWriteSet since we're only writing one doc. Also, do \"newDocumentManager\" so it doesn't look like we expect these to be text documents.", "author": "rjrudin", "createdAt": "2020-10-26T20:34:25Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -204,16 +201,18 @@ private void applyOptionsToEndpointConstants(ObjectNode endpointConstants, Map<S\n         });\n     }\n \n-    private void loadEndpoints() throws IOException {\n-        String scriptPath = \"marklogic-data-hub-spark-connector/bulkIngester.sjs\";\n-        String apiPath = \"marklogic-data-hub-spark-connector/bulkIngester.api\";\n-\n-        TextDocumentManager modMgr = hubClient.getModulesClient().newTextDocumentManager();\n-        DocumentWriteSet writeSet = modMgr.newWriteSet();\n-        DocumentMetadataHandle metadata = buildDocumentMetadata();\n-        writeSet.add(\"/\" + apiPath, metadata, new InputStreamHandle(new ClassPathResource(apiPath).getInputStream()).withFormat(Format.JSON));\n-        writeSet.add(\"/\" + scriptPath, metadata, new InputStreamHandle(new ClassPathResource(scriptPath).getInputStream()).withFormat(Format.TEXT));\n-        modMgr.write(writeSet);\n+    private void loadEndpointsIfNotPresent(String scriptPath, Format format) {\n+        if (!endpointExists(scriptPath)) {\n+            try {\n+                TextDocumentManager modMgr = hubClient.getModulesClient().newTextDocumentManager();\n+                DocumentWriteSet writeSet = modMgr.newWriteSet();", "originalCommit": "b818ac964adc509c19ce0e8ae6d88d67bec75292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1MTQyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4759#discussion_r512251424", "bodyText": "I think we need to initialize these modules before we create the job document. That ensures we fail fast if there's any problem - i.e. we don't want to load a bunch of data and then have an error if we can't write these modules for some reason.", "author": "rjrudin", "createdAt": "2020-10-26T20:35:39Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/DefaultSource.java", "diffHunk": "@@ -246,13 +250,23 @@ private void addJobIdToEndpointConstants() {\n         if (endpointParams != null && endpointParams.has(\"endpointConstants\")) {\n             JsonNode endpointConstants = endpointParams.get(\"endpointConstants\");\n             if (endpointConstants instanceof ObjectNode) {\n-                ((ObjectNode)endpointConstants).put(\"jobId\", this.jobId);\n+                ((ObjectNode) endpointConstants).put(\"jobId\", this.jobId);\n             }\n         }\n     }\n \n     private void finalizeJob(String status) {\n+        String apiPath = \"/marklogic-data-hub-spark-connector/finalizeJob.api\";", "originalCommit": "b818ac964adc509c19ce0e8ae6d88d67bec75292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2fbd11f4216719542c1143a603ad7bc193a87127", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2fbd11f4216719542c1143a603ad7bc193a87127", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-26T21:25:33Z", "type": "commit"}, {"oid": "2fbd11f4216719542c1143a603ad7bc193a87127", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2fbd11f4216719542c1143a603ad7bc193a87127", "message": "DHFPROD-6153: Loading default Initialize and Finalize endpoints\nUpdating the method to ingest if endpoint doesnt exist", "committedDate": "2020-10-26T21:25:33Z", "type": "forcePushed"}]}