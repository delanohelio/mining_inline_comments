{"pr_number": 3450, "pr_title": "DHFPROD-3974: Changes for new UI install", "pr_createdAt": "2020-01-10T04:46:20Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3450", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNDIwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365424205", "bodyText": "I would do an instanceof check here, just to be sure that entityManager is an instanceof EntityManagerImpl.", "author": "rjrudin", "createdAt": "2020-01-10T20:48:22Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserModulesCommand.java", "diffHunk": "@@ -256,6 +257,10 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n \n     public void setHubConfig(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.entityManager == null) {\n+            this.entityManager = new EntityManagerImpl();\n+        }\n+        ((EntityManagerImpl) this.entityManager).setHubConfig(hubConfig);", "originalCommit": "78f6b5640b6418daa1b47931d18e2616f58c5389", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMzU0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365433545", "bodyText": "Would this ever happen? I don't think it's necessary, as long as this command class is assumed to be instantiated via Spring. I don't think just instantiating EntityManagerImpl and then setting hubConfig on it will often work, as EntityManagerImpl has other dependencies (HubProject, could be more in the future) that aren't being set.\nI thinking asserting that entityManager is not null may be worthwhile, although a user couldn't do anything with the error - it would reflect a system misconfiguration (Spring has a handy Assert class for such purposes).", "author": "rjrudin", "createdAt": "2020-01-10T21:16:41Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserModulesCommand.java", "diffHunk": "@@ -256,6 +257,10 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n \n     public void setHubConfig(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.entityManager == null) {", "originalCommit": "78f6b5640b6418daa1b47931d18e2616f58c5389", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NTcwMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r367175703", "bodyText": "Note that on develop, there's now an EntityManagerImpl(HubConfig) constructor. I recommend using that because it also assigns a value to the HubProject field.", "author": "rjrudin", "createdAt": "2020-01-16T00:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMzU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjYxMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365436611", "bodyText": "I don't think this will work, because none of the manageConfig properties are being set.", "author": "rjrudin", "createdAt": "2020-01-10T21:26:28Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubConfigImpl.java", "diffHunk": "@@ -2096,4 +2102,32 @@ public void resetHubConfigs() {\n         isHostLoadBalancer = null;\n     }\n \n+    public Object clone() throws CloneNotSupportedException{\n+        HubConfigImpl hubConfig = (HubConfigImpl) super.clone();\n+        ManageConfig manageConfig = new ManageConfig();\n+        AppConfig appConfig = new AppConfig();\n+        AdminConfig adminConfig = new AdminConfig();\n+        hubConfig.setAdminConfig(adminConfig);\n+        CmaConfig cmaConfig = null;\n+        if (this.appConfig != null) {\n+            cmaConfig = this.appConfig.getCmaConfig();\n+        }\n+        if (cmaConfig == null) {\n+            cmaConfig = new CmaConfig(true);\n+        }\n+        appConfig.setCmaConfig(cmaConfig);\n+        hubConfig.setAppConfig(appConfig, true);\n+        hubConfig.setManageConfig(manageConfig);", "originalCommit": "78f6b5640b6418daa1b47931d18e2616f58c5389", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1ODk0Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365458946", "bodyText": "The necessary values are set as part of the session creation in the one-ui project.", "author": "ryanjdew", "createdAt": "2020-01-10T22:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyOTE5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365829193", "bodyText": "What if when one-ui needs to create a new HubConfigImpl, it first creates one based on properties in the project, and then it overlays the user-specific stuff?\nI basically really want to avoid having implementations of \"clone\" in marklogic-data-hub that are based on one-ui requirements. I think \"clone\" is really only appropriate for objects with primitive fields and complex fields that are either stateless or have no user-specific state, and neither DataHubImpl nor HubConfigImpl fit those descriptions (particularly since we have circular dependencies between them, which is something else I'd like to resolve - HubConfigImpl should not have any knowledge of those 4 Spring-managed beans).", "author": "rjrudin", "createdAt": "2020-01-13T14:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjYxMQ=="}], "type": "inlineReview"}, {"oid": "43f13dbe5dfcc159741b61933136af0e37ff4dd3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/43f13dbe5dfcc159741b61933136af0e37ff4dd3", "message": "DHFPROD-3974: Changes for new UI install", "committedDate": "2020-01-10T23:36:23Z", "type": "forcePushed"}, {"oid": "baf422310738011d4c714a24b7ad4acb4544ffc7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/baf422310738011d4c714a24b7ad4acb4544ffc7", "message": "DHFPROD-3974: Changes for new UI install", "committedDate": "2020-01-11T03:12:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyNjk3NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365826975", "bodyText": "Is there any benefit to implementing this vs one-ui just constructing a DataHubImpl itself and then populating the fields necessary?\nThe first 3 commands in the list only require a HubConfig. I am wondering if a DataHubImpl(HubConfig) constructor would be better here. That constructor would instantiate the first 3 commands. LoadUserModulesCommand has 2 other dependencies, so the caller of that constructor would need to provide an instance of LoadUserModulesCommand itself.\nI think the fact that our Java classes have private fields that depend on Autowired and don't expose dependencies via constructors makes life really hard for anyone that wants to instantiate our classes without Spring. That's the problem you're running into here. I think the way we solve that is by creating those constructors so that it's much easier for a project like one-ui to instantiate these classes itself, because the constructors will make the dependencies plainly visible.", "author": "rjrudin", "createdAt": "2020-01-13T14:18:13Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -1040,10 +1040,41 @@ protected void prepareProjectBeforeUpgrading(HubProject hubProject, String curre\n     // only used in test\n     public void setHubConfig(HubConfigImpl hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.loadUserModulesCommand != null) {\n+            this.loadUserModulesCommand.setHubConfig(hubConfig);\n+        }\n+        if (this.loadHubModulesCommand != null) {\n+            this.loadHubModulesCommand.setHubConfig(hubConfig);\n+        }\n+        if (this.loadHubArtifactsCommand != null) {\n+            this.loadHubArtifactsCommand.setHubConfig(hubConfig);\n+        }\n+        if (this.loadUserArtifactsCommand != null) {\n+            this.loadUserArtifactsCommand.setHubConfig(hubConfig);\n+        }\n+        if (this.generateFunctionMetadataCommand != null) {\n+            this.generateFunctionMetadataCommand.setHubConfig(hubConfig);\n+        }\n+    }\n+\n+    // only used in test\n+    public HubConfigImpl getHubConfig() {\n+        return this.hubConfig;\n     }\n \n     // only used in test\n     public void setVersions(Versions versions) {\n         this.versions = versions;\n     }\n+\n+    public Object clone() throws CloneNotSupportedException {", "originalCommit": "baf422310738011d4c714a24b7ad4acb4544ffc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyNzU2Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365827562", "bodyText": "I just noticed DataHubImpl has a couple dependencies that aren't used - I'm going to submit a PR to clean that up.", "author": "rjrudin", "createdAt": "2020-01-13T14:19:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyNjk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyOTcyMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365829723", "bodyText": "Instead of a setter, let's add a no-arg constructor and then a constructor that requires a HubConfig. The client can then create a new JobMonitorImpl based on a HubConfig.", "author": "rjrudin", "createdAt": "2020-01-13T14:23:29Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/job/impl/JobMonitorImpl.java", "diffHunk": "@@ -54,6 +54,10 @@ public void setupClient() {\n         batches = new Batches(client);\n     }\n \n+    public void setHubConfig(HubConfig hubConfig) {", "originalCommit": "baf422310738011d4c714a24b7ad4acb4544ffc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgzMTQ4MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365831480", "bodyText": "Same thing here, let's use a constructor here instead of a setter so it's clear that a new object is being created that's specific to this HubConfig.", "author": "rjrudin", "createdAt": "2020-01-13T14:26:30Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/EntityManagerImpl.java", "diffHunk": "@@ -659,4 +659,8 @@ public boolean savePii() {\n         return true;\n     }\n \n+    public void setHubConfig(HubConfig hubConfig) {", "originalCommit": "baf422310738011d4c714a24b7ad4acb4544ffc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgzMTk0NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r365831944", "bodyText": "I couldn't find where this is needed?", "author": "rjrudin", "createdAt": "2020-01-13T14:27:21Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/legacy/LegacyFlowManager.java", "diffHunk": "@@ -37,6 +37,12 @@\n      */\n     void setHubConfig(HubConfig hubConfig);\n \n+    /**\n+     * Get HubConfig\n+     * @return hubConfig a hubConfig object\n+     */\n+    HubConfig getHubConfig();", "originalCommit": "baf422310738011d4c714a24b7ad4acb4544ffc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4931ee65149e271b6d80cc67485ec1d96db9763", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e4931ee65149e271b6d80cc67485ec1d96db9763", "message": "DHFPROD-3974: Changes for new UI install", "committedDate": "2020-01-15T20:55:51Z", "type": "commit"}, {"oid": "e4931ee65149e271b6d80cc67485ec1d96db9763", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e4931ee65149e271b6d80cc67485ec1d96db9763", "message": "DHFPROD-3974: Changes for new UI install", "committedDate": "2020-01-15T20:55:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NTQ2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r367175469", "bodyText": "These seem like reasonable additions.", "author": "rjrudin", "createdAt": "2020-01-16T00:23:09Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/HubConfig.java", "diffHunk": "@@ -599,6 +601,10 @@\n      */\n     DatabaseClient newStagingClient(String dbName);\n \n+    String getStagingTriggersDbName();\n+\n+    AdminManager getAdminManager();\n+    ManageClient getManageClient();", "originalCommit": "e4931ee65149e271b6d80cc67485ec1d96db9763", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NTg0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r367175842", "bodyText": "All of these have constructors that take a HubConfig - those should be used instead, particularly for LoadHubModulesCommand, which will then construct its other field using the given HubConfig.", "author": "rjrudin", "createdAt": "2020-01-16T00:24:43Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -895,10 +895,31 @@ protected void prepareProjectBeforeUpgrading(HubProject hubProject, String curre\n     // only used in test\n     public void setHubConfig(HubConfigImpl hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.loadUserModulesCommand != null) {", "originalCommit": "e4931ee65149e271b6d80cc67485ec1d96db9763", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjAwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3450#discussion_r367176007", "bodyText": "I think the better thing to do is not track this as a field at all - there's no reason to, as we always want to use the HubProject associated with the HubConfig.", "author": "rjrudin", "createdAt": "2020-01-16T00:25:23Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/EntityManagerImpl.java", "diffHunk": "@@ -35,32 +35,44 @@\n import com.marklogic.hub.EntityManager;\n import com.marklogic.hub.HubConfig;\n import com.marklogic.hub.HubProject;\n-import com.marklogic.hub.entity.*;\n+import com.marklogic.hub.entity.DefinitionType;\n+import com.marklogic.hub.entity.DefinitionsType;\n+import com.marklogic.hub.entity.HubEntity;\n+import com.marklogic.hub.entity.InfoType;\n+import com.marklogic.hub.entity.ItemType;\n+import com.marklogic.hub.entity.PropertyType;\n import com.marklogic.hub.error.EntityServicesGenerationException;\n import com.marklogic.hub.util.HubModuleManager;\n import org.apache.commons.io.FileUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.FileSystemResource;\n import org.springframework.core.io.Resource;\n import org.springframework.stereotype.Component;\n+import org.springframework.web.context.annotation.SessionScope;\n \n+import javax.annotation.PostConstruct;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.stream.Collectors;\n \n+@SessionScope\n @Component\n public class EntityManagerImpl extends LoggingObject implements EntityManager {\n     private static final String ENTITY_FILE_EXTENSION = \".entity.json\";\n \n     @Autowired\n     private HubConfig hubConfig;\n \n-    @Autowired\n-    private HubProject hubProject;\n+    private HubProject hubProject = null;", "originalCommit": "e4931ee65149e271b6d80cc67485ec1d96db9763", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}