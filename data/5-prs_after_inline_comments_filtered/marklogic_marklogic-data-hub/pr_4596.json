{"pr_number": 4596, "pr_title": "DHFPROD-5974: Ingest documents with user-defined prefix and guaranteed unique URI", "pr_createdAt": "2020-09-18T22:25:50Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4596", "timeline": [{"oid": "93bc57a6b4b8635ed418e29640fa0293829ca45e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/93bc57a6b4b8635ed418e29640fa0293829ca45e", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-21T19:32:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM1MDQ2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4596#discussion_r492350460", "bodyText": "This test is a little brittle in that if the structure of the document doesn't match, we'll get a null-pointer exception.\nInstead of doing a cts.uriMatch, I recommend doing a cts.uris query like this:\ncts.uris(null, [limit='1'], cts.andQuery([\n  cts.directoryQuery(\"/testFruit/\"),\n  cts.jsonPropertyValueQuery(\"fruitName\", someVariable)\n]))\n\nYou can use newServerEval to execute that and then verify that you get 1 result back and that it starts with \"/testFruit/\".\nThat results in a much simpler test and also much less chance of a null-pointer occurring.", "author": "rjrudin", "createdAt": "2020-09-21T21:15:37Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -91,10 +94,24 @@ private void verifyFruitCount(int expectedCount, String message) {\n         assertEquals(expectedCount, Integer.parseInt(count), message);\n \n         if (expectedCount > 0) {\n-            String expectedUri = \"/testFruit/2/1.json\";\n-            JsonNode doc = getHubClient().getStagingClient().newJSONDocumentManager().read(expectedUri, new JacksonHandle()).get();\n-            assertEquals(\"apple\", doc.get(\"envelope\").get(\"instance\").get(\"fruitName\").asText());\n-            assertEquals(\"red\", doc.get(\"envelope\").get(\"instance\").get(\"fruitColor\").asText());\n+        String uriQuery = \"cts.uriMatch('/testFruit/**')\";\n+        EvalResultIterator uriQueryResult = getHubClient().getStagingClient().newServerEval().javascript(uriQuery).eval();\n+        AtomicBoolean foundRedApple = new AtomicBoolean(false);\n+        AtomicBoolean foundYellowBanana = new AtomicBoolean(false);\n+        uriQueryResult.iterator().forEachRemaining(item -> {\n+            final String expectUri = item.getString();\n+            JsonNode doc = getHubClient().getStagingClient().newJSONDocumentManager().read(expectUri, new JacksonHandle()).get();\n+            if((doc.get(\"envelope\").get(\"instance\").get(\"fruitName\").asText().equals(\"apple\")) &&", "originalCommit": "93bc57a6b4b8635ed418e29640fa0293829ca45e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b8b72e4d115d083d4280c1e345093bcc4321295", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4b8b72e4d115d083d4280c1e345093bcc4321295", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-22T05:17:46Z", "type": "forcePushed"}, {"oid": "d150d85a54d1189db5f6ff873d07785038f430f7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d150d85a54d1189db5f6ff873d07785038f430f7", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-22T17:55:01Z", "type": "forcePushed"}, {"oid": "f7e48441014a4bde28f5b552c6c40a279387eec3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f7e48441014a4bde28f5b552c6c40a279387eec3", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-22T23:28:30Z", "type": "forcePushed"}, {"oid": "9ec12f11d1891a5f2ca5bd2125cd577ad99a7812", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9ec12f11d1891a5f2ca5bd2125cd577ad99a7812", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-23T18:11:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5OTgxOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4596#discussion_r493799819", "bodyText": "No need to change here, but most of the time, it's sufficient to just do this:\nString uri = getHubClient().getStagingClient().newServerEval().javascript(query).evalAs(String.class);\n\nIf that fails because there's not a URI, that's totally fine. And we don't need to worry about verifying that there's not another URI - we know the database was cleaned before the test ran, so it's safe to assume there's one or zero URIs.", "author": "rjrudin", "createdAt": "2020-09-23T18:25:29Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -48,6 +47,25 @@ void ingestThreeFruitsWithBatchSizeOfTwo() throws IOException {\n         verifyFruitCount(3, \"The commit call should result in the 3rd fruit being ingested\");\n     }\n \n+\n+    @Test\n+    public void testBulkIngestWithoutUriPrefix() throws IOException {\n+        DataWriter<InternalRow> dataWriter = buildDataWriter(\"1\", \"\");\n+        dataWriter.write(buildRow(\"pineapple\", \"green\"));\n+\n+        String uriQuery = \"cts.uris('', null, cts.andQuery([\\n\" +\n+            \"  cts.jsonPropertyValueQuery('fruitName', 'pineapple')\\n\" +\n+            \"]))\";\n+\n+        EvalResultIterator uriQueryResult = getHubClient().getStagingClient().newServerEval().javascript(uriQuery).eval();", "originalCommit": "9ec12f11d1891a5f2ca5bd2125cd577ad99a7812", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMjE4Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4596#discussion_r493802186", "bodyText": "Assertion calls are often the best place to document why something should be the way it is. In this case, there's a question of - well why doesn't it start with \"/\"? So I'd do:\nassertFalse(uri.startsWith(\"/\"), \"If the user wants the URI to start with a forward slash, the user must provide one. If the user doesn't, then it's assumed that the user doesn't want a forward slash at the start of the URI, so the endpoint will not add one automatically.\");\n\nThat makes it very clear why it's expected. This isn't needed for every assertion, but this is a good one to document in the above manner.", "author": "rjrudin", "createdAt": "2020-09-23T18:29:28Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -48,6 +47,25 @@ void ingestThreeFruitsWithBatchSizeOfTwo() throws IOException {\n         verifyFruitCount(3, \"The commit call should result in the 3rd fruit being ingested\");\n     }\n \n+\n+    @Test\n+    public void testBulkIngestWithoutUriPrefix() throws IOException {\n+        DataWriter<InternalRow> dataWriter = buildDataWriter(\"1\", \"\");\n+        dataWriter.write(buildRow(\"pineapple\", \"green\"));\n+\n+        String uriQuery = \"cts.uris('', null, cts.andQuery([\\n\" +\n+            \"  cts.jsonPropertyValueQuery('fruitName', 'pineapple')\\n\" +\n+            \"]))\";\n+\n+        EvalResultIterator uriQueryResult = getHubClient().getStagingClient().newServerEval().javascript(uriQuery).eval();\n+        assertTrue(uriQueryResult.hasNext());\n+        String uri = uriQueryResult.next().getString();\n+\n+        assertTrue(uri.endsWith(\".json\"));\n+        assertFalse(uri.startsWith(\"/\"));", "originalCommit": "9ec12f11d1891a5f2ca5bd2125cd577ad99a7812", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a1609b03384217e608bf89ac0d07e1a73bd11fe", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4a1609b03384217e608bf89ac0d07e1a73bd11fe", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-23T18:41:55Z", "type": "commit"}, {"oid": "4a1609b03384217e608bf89ac0d07e1a73bd11fe", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4a1609b03384217e608bf89ac0d07e1a73bd11fe", "message": "DHFPROD-5974 : Ingest documents with user-defined prefix and guaranteed unique URI (https://project.marklogic.com/jira/browse/DHFPROD-5974)", "committedDate": "2020-09-23T18:41:55Z", "type": "forcePushed"}]}