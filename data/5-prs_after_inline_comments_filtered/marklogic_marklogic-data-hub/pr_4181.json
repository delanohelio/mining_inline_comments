{"pr_number": 4181, "pr_title": "DHFPROD-5267: Removing unused artifact endpoints", "pr_createdAt": "2020-07-06T15:36:19Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4181", "timeline": [{"oid": "1e328544aa0778573b1af18a5a666730ead3a118", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1e328544aa0778573b1af18a5a666730ead3a118", "message": "DHFPROD-5267: Removing unused artifact endpoints\n\nHad to add one new DS endpoint to accomplish this - StepDefinitionService.deleteStepDefinition, though it's only used by a test. \n\nReworked LoadUserArtifactsCommand as well so we have explicit methods for loading flows and step definitions, as we have different logic for each of those.", "committedDate": "2020-07-06T15:14:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNjkyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4181#discussion_r452406924", "bodyText": "/data-hub/5/artifacts/flow.sjs has 'name' as a requiredProperty. Do we need this validation in the client ?", "author": "srinathgit", "createdAt": "2020-07-09T18:22:08Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -362,23 +290,65 @@ private void loadSteps(DatabaseClient stagingClient) throws IOException {\n         if (stepsPath.toFile().exists()) {\n             ObjectMapper objectMapper = new ObjectMapper();\n             StepService stepService = StepService.on(stagingClient);\n-            for (File stepTypeDir : stepsPath.toFile().listFiles(file -> file.isDirectory())) {\n+            for (File stepTypeDir : stepsPath.toFile().listFiles(File::isDirectory)) {\n                 final String stepType = stepTypeDir.getName();\n                 for (File stepFile : stepTypeDir.listFiles((File d, String name) -> name.endsWith(\".step.json\"))) {\n                     JsonNode step = objectMapper.readTree(stepFile);\n                     if (!step.has(\"name\")) {\n                         throw new RuntimeException(\"Unable to load step from file: \" + stepFile + \"; no 'name' property found\");\n                     }\n                     final String stepName = step.get(\"name\").asText();\n-                    if (logger.isInfoEnabled()) {\n-                        logger.info(format(\"Loading step of type '%s' with name '%s'\", stepType, stepName));\n-                    }\n+                    logger.info(format(\"Loading step of type '%s' with name '%s'\", stepType, stepName));\n                     stepService.saveStep(stepType, step);\n                 }\n             }\n         }\n     }\n \n+    private void loadFlows(DatabaseClient stagingClient) throws IOException {\n+        final Path flowsPath = hubConfig.getHubProject().getFlowsDir();\n+        if (flowsPath.toFile().exists()) {\n+            ObjectMapper objectMapper = new ObjectMapper();\n+            ArtifactService service = ArtifactService.on(stagingClient);\n+            for (File file : flowsPath.toFile().listFiles(f -> f.isFile() && f.getName().endsWith(\".flow.json\"))) {\n+                JsonNode flow = objectMapper.readTree(file);\n+                if (!flow.has(\"name\")) {\n+                    throw new RuntimeException(\"Unable to load flow from file: \" + file + \"; no 'name' property found\");", "originalCommit": "1e328544aa0778573b1af18a5a666730ead3a118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwOTYwOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4181#discussion_r452409609", "bodyText": "Yes, because if name isn't found, then we can't call setArtifact, which requires name as the second parameter.", "author": "rjrudin", "createdAt": "2020-07-09T18:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNjkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNzIxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4181#discussion_r452407214", "bodyText": "Same as previous comment. /data-hub/5/artifacts/stepDefinition.sjs has 'name' as a requiredProperty. Do we need this additional validation in the client ?", "author": "srinathgit", "createdAt": "2020-07-09T18:22:41Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -362,23 +290,65 @@ private void loadSteps(DatabaseClient stagingClient) throws IOException {\n         if (stepsPath.toFile().exists()) {\n             ObjectMapper objectMapper = new ObjectMapper();\n             StepService stepService = StepService.on(stagingClient);\n-            for (File stepTypeDir : stepsPath.toFile().listFiles(file -> file.isDirectory())) {\n+            for (File stepTypeDir : stepsPath.toFile().listFiles(File::isDirectory)) {\n                 final String stepType = stepTypeDir.getName();\n                 for (File stepFile : stepTypeDir.listFiles((File d, String name) -> name.endsWith(\".step.json\"))) {\n                     JsonNode step = objectMapper.readTree(stepFile);\n                     if (!step.has(\"name\")) {\n                         throw new RuntimeException(\"Unable to load step from file: \" + stepFile + \"; no 'name' property found\");\n                     }\n                     final String stepName = step.get(\"name\").asText();\n-                    if (logger.isInfoEnabled()) {\n-                        logger.info(format(\"Loading step of type '%s' with name '%s'\", stepType, stepName));\n-                    }\n+                    logger.info(format(\"Loading step of type '%s' with name '%s'\", stepType, stepName));\n                     stepService.saveStep(stepType, step);\n                 }\n             }\n         }\n     }\n \n+    private void loadFlows(DatabaseClient stagingClient) throws IOException {\n+        final Path flowsPath = hubConfig.getHubProject().getFlowsDir();\n+        if (flowsPath.toFile().exists()) {\n+            ObjectMapper objectMapper = new ObjectMapper();\n+            ArtifactService service = ArtifactService.on(stagingClient);\n+            for (File file : flowsPath.toFile().listFiles(f -> f.isFile() && f.getName().endsWith(\".flow.json\"))) {\n+                JsonNode flow = objectMapper.readTree(file);\n+                if (!flow.has(\"name\")) {\n+                    throw new RuntimeException(\"Unable to load flow from file: \" + file + \"; no 'name' property found\");\n+                }\n+                final String flowName = flow.get(\"name\").asText();\n+                logger.info(format(\"Loading flow with name '%s'\", flowName));\n+                service.setArtifact(\"flow\", flowName, flow);\n+            }\n+        }\n+    }\n+\n+    private void loadStepDefinitions(DatabaseClient stagingClient) throws IOException {\n+        final Path stepDefsPath = hubConfig.getHubProject().getStepDefinitionsDir();\n+        if (stepDefsPath.toFile().exists()) {\n+            ObjectMapper objectMapper = new ObjectMapper();\n+            ArtifactService service = ArtifactService.on(stagingClient);\n+            for (File typeDir : stepDefsPath.toFile().listFiles(File::isDirectory)) {\n+                final String stepDefType = typeDir.getName();\n+                for (File defDir : typeDir.listFiles(File::isDirectory)) {\n+                    final String stepDefName = defDir.getName();\n+                    File stepDefFile = new File(defDir, stepDefName + \".step.json\");\n+                    if (stepDefFile.exists()) {\n+                        JsonNode stepDef = objectMapper.readTree(stepDefFile);\n+                        if (!stepDef.has(\"name\")) {", "originalCommit": "1e328544aa0778573b1af18a5a666730ead3a118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwOTczNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4181#discussion_r452409737", "bodyText": "Same thing here too, we need it for the second parameter.", "author": "rjrudin", "createdAt": "2020-07-09T18:27:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNzIxNA=="}], "type": "inlineReview"}]}