{"pr_number": 4317, "pr_title": "DHFPROD-3577: Global sort based on sortable properties", "pr_createdAt": "2020-07-30T17:43:59Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4317", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5ODE3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4317#discussion_r463198176", "bodyText": "You can use StringUtils.capitalize() here", "author": "akshaysonvane", "createdAt": "2020-07-30T18:43:00Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -371,32 +346,14 @@ private String getFileNameForDownload(JsonNode queryDocument, String fileExtensi\n         return FILE_PREFIX + queryInfo + SEPARATOR + timestamp + fileExtension;\n     }\n \n-    private void buildSortOrderOptions(StringBuilder sb, SearchQuery searchQuery) {\n+    private void buildSearchTextWithSortOperator(SearchQuery searchQuery) {\n+        StringBuilder searchTextBuilder = new StringBuilder(searchQuery.getQuery().getSearchText());\n         Optional<List<SearchQuery.SortOrder>> sortOrders = searchQuery.getSortOrder();\n-        sortOrders.ifPresent(so -> {\n-            sb.append(\"<options>\");\n-            so.forEach(o -> {\n-                sb.append(\"<sort-order\");\n-                if (!METADATA_FIELD_NAME.contains(o.getName())) {\n-                    sb.append(String.format(\" type=\\\"xs:%s\\\"\", StringEscapeUtils.escapeXml10(o.getDataType())));\n-                }\n-\n-                if (o.isAscending()) {\n-                    sb.append(\" direction=\\\"ascending\\\">\");\n-                }\n-                else {\n-                    sb.append(\" direction=\\\"descending\\\">\");\n-                }\n-\n-                if (METADATA_FIELD_NAME.contains(o.getName())) {\n-                    sb.append(String.format(\"<field name=\\\"%s\\\"/>\\n\", StringEscapeUtils.escapeXml10(o.getName())));\n-                }\n-                else {\n-                    sb.append(String.format(\"<element ns=\\\"\\\" name=\\\"%s\\\"/>\\n\", StringEscapeUtils.escapeXml10(o.getName())));\n-                }\n-                sb.append(\"</sort-order>\");\n-            });\n-            sb.append(\"</options>\");\n-        });\n+        sortOrders.ifPresent(sortOrderList -> sortOrderList.forEach(sortOrder -> {\n+            String sortOperator = \"sort\".concat(sortOrder.getSortOperator().substring(0, 1).toUpperCase()).concat(sortOrder.getSortOperator().substring(1));\n+            String sortDirection = sortOperator.concat(sortOrder.getSortDirection().substring(0, 1).toUpperCase()).concat(sortOrder.getSortDirection().substring(1));", "originalCommit": "ea9cad1264d14cf44d85f6829f6bc9fa170fbb0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e1fb0d277de0cd6c5ed38b0e20343e2d01aa7d39", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e1fb0d277de0cd6c5ed38b0e20343e2d01aa7d39", "message": "DHFPROD-3577: Global sort based on sortable properties\n\nAdding tests", "committedDate": "2020-07-30T19:26:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzMTM0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4317#discussion_r463231342", "bodyText": "I believe we need two kinds of tests in this class:\n\nOne or more tests that verify that the correct \"criteria\" is constructed based on the SortOrder objects in the SearchQuery\nA test that verifies that inserts two customer entity instances and verifies that sorting on a property in ascending and then descending order returns the 2 instances in the correct order.", "author": "rjrudin", "createdAt": "2020-07-30T19:47:04Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/entities/search/EntitySearchManagerTest.java", "diffHunk": "@@ -122,41 +122,6 @@ public void testSearchResultsOnNoData() {\n         assertTrue(new EntitySearchManager(getHubClient()).search(query).get().isEmpty());\n     }", "originalCommit": "e1fb0d277de0cd6c5ed38b0e20343e2d01aa7d39", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "28911c6bcb881fcee6257c4aa9292ff8823e5b65", "url": "https://github.com/marklogic/marklogic-data-hub/commit/28911c6bcb881fcee6257c4aa9292ff8823e5b65", "message": "DHFPROD-3577: Global sort based on sortable properties", "committedDate": "2020-08-01T21:20:44Z", "type": "forcePushed"}, {"oid": "4eef6a414c01bf3eadf0825fcaf1b335c44db521", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4eef6a414c01bf3eadf0825fcaf1b335c44db521", "message": "DHFPROD-3577: Global sort based on sortable properties\n\nDHFPROD-3577: Addressing Export related changes for Sort", "committedDate": "2020-08-03T17:38:52Z", "type": "commit"}, {"oid": "4eef6a414c01bf3eadf0825fcaf1b335c44db521", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4eef6a414c01bf3eadf0825fcaf1b335c44db521", "message": "DHFPROD-3577: Global sort based on sortable properties\n\nDHFPROD-3577: Addressing Export related changes for Sort", "committedDate": "2020-08-03T17:38:52Z", "type": "forcePushed"}]}