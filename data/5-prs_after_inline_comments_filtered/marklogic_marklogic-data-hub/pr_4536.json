{"pr_number": 4536, "pr_title": "DHFPROD-5870: Fix namespaced path range indexes on export", "pr_createdAt": "2020-09-08T16:25:05Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4536", "timeline": [{"oid": "c34cb70b83bfaebe065fb6ac7a10635de44e1bfc", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c34cb70b83bfaebe065fb6ac7a10635de44e1bfc", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-08T16:26:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MjM5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485052395", "bodyText": "What is this for? I don't see any references to it.", "author": "rjrudin", "createdAt": "2020-09-08T16:33:33Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/impl/HubRowManager.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.marklogic.hub.central.entities.search.impl;", "originalCommit": "c34cb70b83bfaebe065fb6ac7a10635de44e1bfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MzM4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485053381", "bodyText": "If the intent of this operation is to export search results as CSV, I think the method name should imply that - e.g. \"exportSearchResultsAsCsv\".", "author": "rjrudin", "createdAt": "2020-09-08T16:35:14Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,18 +247,23 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n-            readerHandle.write(out);\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        } finally {\n-            IOUtils.closeQuietly(out);\n-        }\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Stream<Reader> export = entitySearchService.exportSearch(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream(), CSV_CONTENT_TYPE);", "originalCommit": "c34cb70b83bfaebe065fb6ac7a10635de44e1bfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyODkzOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485128938", "bodyText": "It is passed the acceptType and the server then determines if it should be CSV. Right now CSV is the only format that will work, but I was trying to open that to be configurable. Similar to the REST rows endpoint.", "author": "ryanjdew", "createdAt": "2020-09-08T18:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MzM4MQ=="}], "type": "inlineReview"}, {"oid": "f03660e7c1f4c2becefe37b68649b7c2cf7cbdb4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f03660e7c1f4c2becefe37b68649b7c2cf7cbdb4", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-09T15:55:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyMzI0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485823242", "bodyText": "I believe dataHub.updateIndexes(); will work here too - can you try that? I recently used it in DeployProtectedPaths..Test and it worked well.", "author": "rjrudin", "createdAt": "2020-09-09T18:20:40Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/EntitySearchControllerTest.java", "diffHunk": "@@ -245,9 +245,85 @@ void testRowExport() throws Exception {\n             });\n     }\n \n-    private void assertRowsAndColumns(int limit, int totalColumns, String response) {\n+    @Test\n+    void testRowExportWithPathRangeQuery() throws Exception {\n+        runAsDataHubDeveloper();\n+        ReferenceModelProject project = installOnlyReferenceModelEntities(true);\n+        deployEntityIndexes(getHubConfig());", "originalCommit": "f03660e7c1f4c2becefe37b68649b7c2cf7cbdb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk1NTc5MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485955790", "bodyText": "dataHub isn't available to the hub central tests, unless I'm missing a function someplace. I believe the DataHub class is still depending on the auto-wiring of the HubConfig.", "author": "ryanjdew", "createdAt": "2020-09-09T22:25:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyMzI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNDIxMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485824211", "bodyText": "@rahulvudutala  @akshaysonvane We've got several instances of inline JSON like this. Thoughts on simplifying this? I see a maintenance burden here where if we want to change something about this data structure, we'll need to update all of these tests. Ideally, @ryanjdew  can obtain a saved query here without having to copy/paste one from another test. (This would be a future cleanup, not something to address in this ticket)", "author": "rjrudin", "createdAt": "2020-09-09T18:22:20Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/EntitySearchControllerTest.java", "diffHunk": "@@ -245,9 +245,85 @@ void testRowExport() throws Exception {\n             });\n     }\n \n-    private void assertRowsAndColumns(int limit, int totalColumns, String response) {\n+    @Test\n+    void testRowExportWithPathRangeQuery() throws Exception {\n+        runAsDataHubDeveloper();\n+        ReferenceModelProject project = installOnlyReferenceModelEntities(true);\n+        deployEntityIndexes(getHubConfig());\n+\n+        Customer customer1 = new Customer();\n+        customer1.setCustomerId(1);\n+        customer1.setName(\"Jane\");\n+        customer1.setCustomerNumber(123456789);\n+        customer1.setCustomerSince(\"2012-05-16\");\n+        project.createCustomerInstance(customer1);\n+\n+        Customer customer2 = new Customer();\n+        customer2.setCustomerId(2);\n+        customer2.setName(\"John\");\n+        customer2.setCustomerNumber(987654321);\n+        customer2.setCustomerSince(\"2013-06-16\");\n+        project.createCustomerInstance(customer2);\n+\n+        String json = \"{\\n\" +\n+                \"    \\\"savedQuery\\\": {\\n\" +", "originalCommit": "f03660e7c1f4c2becefe37b68649b7c2cf7cbdb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyODg2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485828869", "bodyText": "Changing the DS signature will also allow us to simplify this.", "author": "akshaysonvane", "createdAt": "2020-09-09T18:30:37Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,18 +247,23 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n-            readerHandle.write(out);\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        } finally {\n-            IOUtils.closeQuietly(out);\n-        }\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Stream<Reader> export = entitySearchService.exportSearch(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream(), CSV_CONTENT_TYPE);\n+        export.forEachOrdered(\n+                reader -> {\n+                    try (ReaderHandle readerHandle = new ReaderHandle()) {\n+                        readerHandle.setMimetype(CSV_CONTENT_TYPE);\n+                        readerHandle.set(reader);\n+                        readerHandle.write(out);\n+                    } catch (IOException e) {\n+                        IOUtils.closeQuietly(out);\n+                        throw new RuntimeException(e);\n+                    } finally {\n+                        IOUtils.closeQuietly(reader);\n+                    }\n+                });\n+        IOUtils.closeQuietly(out);", "originalCommit": "f03660e7c1f4c2becefe37b68649b7c2cf7cbdb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "19aeb4d7b553c3abcec1fb837ab1b8cb2428afba", "url": "https://github.com/marklogic/marklogic-data-hub/commit/19aeb4d7b553c3abcec1fb837ab1b8cb2428afba", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-09T22:23:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5MDQwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485990402", "bodyText": "We don't need this here since the \"finally\" block will always close the resource.", "author": "akshaysonvane", "createdAt": "2020-09-10T00:18:29Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,16 +247,16 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Reader export = entitySearchService.exportSearchAsCSV(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n+        try (ReaderHandle readerHandle = new ReaderHandle(export).withMimetype(CSV_CONTENT_TYPE)) {\n             readerHandle.write(out);\n         } catch (IOException e) {\n+            IOUtils.closeQuietly(out);", "originalCommit": "19aeb4d7b553c3abcec1fb837ab1b8cb2428afba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5MDQ0OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r485990448", "bodyText": "We can get rid of this since ReaderHandle will internally close the \"export\" reader in the try-with-resource above.", "author": "akshaysonvane", "createdAt": "2020-09-10T00:18:40Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,16 +247,16 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Reader export = entitySearchService.exportSearchAsCSV(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n+        try (ReaderHandle readerHandle = new ReaderHandle(export).withMimetype(CSV_CONTENT_TYPE)) {\n             readerHandle.write(out);\n         } catch (IOException e) {\n+            IOUtils.closeQuietly(out);\n             throw new RuntimeException(e);\n         } finally {\n+            IOUtils.closeQuietly(export);", "originalCommit": "19aeb4d7b553c3abcec1fb837ab1b8cb2428afba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc4OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486487788", "bodyText": "updated", "author": "ryanjdew", "createdAt": "2020-09-10T16:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5MDQ0OA=="}], "type": "inlineReview"}, {"oid": "0fad0052db4024862e7e4417b81a0f426dcaca9c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0fad0052db4024862e7e4417b81a0f426dcaca9c", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-10T03:35:23Z", "type": "forcePushed"}, {"oid": "3b58f5ae1ce6608936a561f780137e83b2ce8fb0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/3b58f5ae1ce6608936a561f780137e83b2ce8fb0", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-10T04:26:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4NjAwMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486286003", "bodyText": "@akshaysonvane I know this code existed already, but I don't think it's necessary to call withMimetype. I looked at the underlying code, and I don't think it cares. It's using a Java Client class called Utilities, which does the same thing as the Spring class FileCopyUtils. I think to avoid confusion about the necessity of withMimetype (I'm 99% sure it's not needed) and for consistency (FileCopyUtils is a favorite class of mine since it solves the terrible user experience in Java of copying data around), it'd be better to just do:\nFileCopyUtils.copy(export, new OutputStreamWriter(out));\n(which will still need to be in a try/catch block)", "author": "rjrudin", "createdAt": "2020-09-10T12:11:43Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,12 +247,10 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Reader export = entitySearchService.exportSearchAsCSV(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n+        try (ReaderHandle readerHandle = new ReaderHandle(export).withMimetype(CSV_CONTENT_TYPE)) {", "originalCommit": "3b58f5ae1ce6608936a561f780137e83b2ce8fb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NzkzMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486477932", "bodyText": "Yes, that's right. I looked and it seems withMimetype was required earlier when we were sending the optic plan to the RowManager as the default was JSON. Now that we are generating the CSV in the DS itself FileCopyUtils can be used for copying.", "author": "akshaysonvane", "createdAt": "2020-09-10T16:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4NjAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NjE3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486486176", "bodyText": "Updated to use FileCopyUtils.copy.", "author": "ryanjdew", "createdAt": "2020-09-10T16:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4NjAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4ODg2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486288860", "bodyText": "Let's not put this here yet, as it only deals with the final file but the method name implies that both staging and final would be updated. I'll add a ticket to the 5.4.0 backend tech debt epic to make it easier to save indexes / deploy them in a test, as a quick search showed that we have a number of tests looking to do this.\nOne simplification you can do is this:\ndbCommand.execute(newCommandContext());\nThat avoids having to create a list of commands and a SimpleAppDeployer.", "author": "rjrudin", "createdAt": "2020-09-10T12:16:56Z", "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -374,6 +371,27 @@ protected void installUserModulesAndArtifacts(HubConfig hubConfig, boolean force\n \n     }\n \n+    protected void deployEntityIndexes(HubConfig hubConfig) {\n+        EntityManager entityManager = new EntityManagerImpl(hubConfig);\n+        entityManager.saveDbIndexes();\n+        List<Command> commands = new ArrayList<>();\n+\n+        Path dir = hubConfig.getEntityDatabaseDir();\n+        File finalFile = Paths.get(dir.toString(), HubConfig.FINAL_ENTITY_DATABASE_FILE).toFile();", "originalCommit": "3b58f5ae1ce6608936a561f780137e83b2ce8fb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NjY3MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486486670", "bodyText": "Updated to use dbCommand.execute(newCommandContext()) and deploy both staging and final indexes", "author": "ryanjdew", "createdAt": "2020-09-10T16:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4ODg2MA=="}], "type": "inlineReview"}, {"oid": "2c4c8591b7fdd430dee16e2ac69a888bf62929f5", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2c4c8591b7fdd430dee16e2ac69a888bf62929f5", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-10T16:40:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxMjE0Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4536#discussion_r486512146", "bodyText": "I believe FileCopyUtils.copy will close the streams for us even if an error occurs.", "author": "akshaysonvane", "createdAt": "2020-09-10T17:26:23Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -246,17 +249,16 @@ public void exportRows(JsonNode queryDocument, Long limit, OutputStream out) {\n         List<SearchQuery.SortOrder> sortOrder = searchQuery.getSortOrder().orElse(new ArrayList<>());\n         ArrayNode sortOrderNode = sortOrderToArrayNode(sortOrder);\n \n-\n-        JsonNode opticPlanNode = EntitySearchService.on(finalDatabaseClient).getOpticPlan(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n-        StringHandle stringHandle = new StringHandle(opticPlanNode.toString());\n-        RowManager rowManager = finalDatabaseClient.newRowManager();\n-        try (ReaderHandle readerHandle = new ReaderHandle()) {\n-            rowManager.resultDoc(rowManager.newRawPlanDefinition(stringHandle), readerHandle.withMimetype(CSV_CONTENT_TYPE));\n-            readerHandle.write(out);\n+        EntitySearchService entitySearchService = EntitySearchService.on(finalDatabaseClient);\n+        // Exporting directly from Data Service to avoid bug https://bugtrack.marklogic.com/55338 related to namespaced path range indexes\n+        Reader export = entitySearchService.exportSearchAsCSV(structuredQuery, searchText, queryOptions, entityTypeId, entityTypeId, limit, sortOrderNode, columns.stream());\n+        try {\n+            FileCopyUtils.copy(export, new OutputStreamWriter(out));\n         } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        } finally {\n+            // Ensure both streams are closed if an error occurs\n+            IOUtils.closeQuietly(export);\n             IOUtils.closeQuietly(out);", "originalCommit": "2c4c8591b7fdd430dee16e2ac69a888bf62929f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d439f59967eff2425ed10a550200275192766c7e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d439f59967eff2425ed10a550200275192766c7e", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-11T21:23:36Z", "type": "commit"}, {"oid": "d439f59967eff2425ed10a550200275192766c7e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d439f59967eff2425ed10a550200275192766c7e", "message": "DHFPROD-5870: Fix namespaced path range indexes on export", "committedDate": "2020-09-11T21:23:36Z", "type": "forcePushed"}]}