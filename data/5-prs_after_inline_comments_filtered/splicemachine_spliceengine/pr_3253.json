{"pr_number": 3253, "pr_title": "DB-9177 Use Guava's cache instead of LongKeyedCache for active txns", "pr_createdAt": "2020-02-27T12:04:34Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3253", "timeline": [{"oid": "578b0f3fa3da7f7e82a3a80719e2a42f01b6f87f", "url": "https://github.com/splicemachine/spliceengine/commit/578b0f3fa3da7f7e82a3a80719e2a42f01b6f87f", "message": "DB-9177 Use Guava's cache instead of LongKeyedCache for active txns", "committedDate": "2020-02-27T12:01:20Z", "type": "commit"}, {"oid": "5445d0bb5c5b95354212cdeac68ae17bca58e173", "url": "https://github.com/splicemachine/spliceengine/commit/5445d0bb5c5b95354212cdeac68ae17bca58e173", "message": "DB-9177 SIDriver not available on some tests", "committedDate": "2020-02-27T15:46:08Z", "type": "commit"}, {"oid": "5445d0bb5c5b95354212cdeac68ae17bca58e173", "url": "https://github.com/splicemachine/spliceengine/commit/5445d0bb5c5b95354212cdeac68ae17bca58e173", "message": "DB-9177 SIDriver not available on some tests", "committedDate": "2020-02-27T15:46:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4MjkyMg==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r386382922", "bodyText": "Where does 32 come from?", "author": "arnaud-splice", "createdAt": "2020-03-02T13:11:16Z", "path": "splice_si_api/src/main/java/com/splicemachine/si/impl/store/ActiveTxnCacheSupplier.java", "diffHunk": "@@ -33,16 +33,15 @@\n  * Date: 6/18/14\n  */\n public class ActiveTxnCacheSupplier implements TxnSupplier {\n-    private final LongKeyedCache<TxnView> cache;\n+    private final Cache<Long,TxnView> cache;\n     private final TxnSupplier delegate;\n \n-    public ActiveTxnCacheSupplier(TxnSupplier delegate, int maxSize) {\n-        this(delegate, maxSize, false);\n+    public ActiveTxnCacheSupplier(TxnSupplier delegate, int initialSize, int maxSize) {\n+        this(delegate, initialSize, maxSize, false);\n     }\n \n-    public ActiveTxnCacheSupplier(TxnSupplier delegate, int maxSize, boolean threadSafe) {\n-        this.cache = LongKeyedCache.<TxnView>newBuilder().maxEntries(maxSize)\n-                .withHashFunction(HashFunctions.murmur3(0)).threadSafe(threadSafe).build();\n+    public ActiveTxnCacheSupplier(TxnSupplier delegate, int initialSize, int maxSize, boolean threadSafe) {\n+        this.cache = CacheBuilder.newBuilder().initialCapacity(initialSize).maximumSize(maxSize).concurrencyLevel(threadSafe ? 32 : 1).build();", "originalCommit": "5445d0bb5c5b95354212cdeac68ae17bca58e173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNjI2Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r387936263", "bodyText": "It was arbitrary, I substituted it for Guava's default of 4 with an explicitly defined constant.", "author": "dgomezferro", "createdAt": "2020-03-04T21:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4MjkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4MzgyMQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r386383821", "bodyText": "Why 4000?", "author": "arnaud-splice", "createdAt": "2020-03-02T13:13:10Z", "path": "splice_si_api/src/main/java/com/splicemachine/si/impl/server/SITransactor.java", "diffHunk": "@@ -184,7 +184,7 @@ private MutationStatus getCorrectStatus(MutationStatus status,MutationStatus old\n             constraintState = new SimpleTxnFilter(null, txn, NoOpReadResolver.INSTANCE, txnSupplier);\n             supplier = constraintState.getTxnSupplier();\n         } else {\n-            supplier = new ActiveTxnCacheSupplier(txnSupplier, 100);\n+            supplier = new ActiveTxnCacheSupplier(txnSupplier, 100, 4000);", "originalCommit": "5445d0bb5c5b95354212cdeac68ae17bca58e173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNzA0MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r387937041", "bodyText": "It was inline with the defaults of 128/4096 , now I get them from the Config if it's available or set it to the defaults if not.", "author": "dgomezferro", "createdAt": "2020-03-04T21:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4MzgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4NDE0MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r386384141", "bodyText": "If this only happens during testing, do we have a way to throw an exception if we're not in test mode?", "author": "arnaud-splice", "createdAt": "2020-03-02T13:13:56Z", "path": "splice_si_api/src/main/java/com/splicemachine/si/impl/SimpleTxnFilter.java", "diffHunk": "@@ -89,13 +89,18 @@ public SimpleTxnFilter(String tableName,\n                            TxnSupplier baseSupplier,\n                            boolean ignoreNewerTransactions) {\n         assert readResolver!=null;\n-        this.transactionStore = new ActiveTxnCacheSupplier(baseSupplier, 100); //TODO -sf- configure\n         this.myTxn=myTxn;\n         this.readResolver=readResolver;\n         this.ignoreNewerTransactions = ignoreNewerTransactions;\n         SIDriver driver = SIDriver.driver();\n-        if (driver != null) {\n+        if (driver == null) {\n+            // only happens during testing\n+            this.transactionStore = new ActiveTxnCacheSupplier(baseSupplier, 128, 2048);", "originalCommit": "5445d0bb5c5b95354212cdeac68ae17bca58e173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNzE3MA==", "url": "https://github.com/splicemachine/spliceengine/pull/3253#discussion_r387937170", "bodyText": "I couldn't find a good way to do that.", "author": "dgomezferro", "createdAt": "2020-03-04T21:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4NDE0MQ=="}], "type": "inlineReview"}, {"oid": "ed08dadd1841ffb8fc665dadd4963c8fd3949bb7", "url": "https://github.com/splicemachine/spliceengine/commit/ed08dadd1841ffb8fc665dadd4963c8fd3949bb7", "message": "DB-9177 Address review comments", "committedDate": "2020-03-04T20:30:11Z", "type": "commit"}]}