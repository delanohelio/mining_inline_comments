{"pr_number": 3746, "pr_title": "DB-9781: create missing index for system table", "pr_createdAt": "2020-07-01T17:14:09Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3746", "timeline": [{"oid": "c6eacfc47ee0d8f2f3940bb08b36268f9bc8a228", "url": "https://github.com/splicemachine/spliceengine/commit/c6eacfc47ee0d8f2f3940bb08b36268f9bc8a228", "message": "DB-9781: create missing index for system table", "committedDate": "2020-07-01T16:21:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMzU2Ng==", "url": "https://github.com/splicemachine/spliceengine/pull/3746#discussion_r449033566", "bodyText": "Is this related to this PR?", "author": "dgomezferro", "createdAt": "2020-07-02T14:15:17Z", "path": "hbase_sql/src/main/java/com/splicemachine/hbase/HBaseRegionLoads.java", "diffHunk": "@@ -234,6 +234,11 @@ private static String tableForRegion(String regionName){\n     public Collection<PartitionLoad> tableLoad(String tableName, boolean refresh){\n         if (refresh) {\n             Map<String, Map<String, PartitionLoad>> loads = cache.get();\n+            if (loads == null) {", "originalCommit": "c6eacfc47ee0d8f2f3940bb08b36268f9bc8a228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA4Mzg3Mg==", "url": "https://github.com/splicemachine/spliceengine/pull/3746#discussion_r449083872", "bodyText": "Somewhat. Erin hit this problem when she tried to fix a table", "author": "jyuanca", "createdAt": "2020-07-02T15:27:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMzU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNjM1OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3746#discussion_r449036359", "bodyText": "This is not used", "author": "dgomezferro", "createdAt": "2020-07-02T14:19:20Z", "path": "hbase_sql/src/test/java/com/splicemachine/hbase/CheckTableIT.java", "diffHunk": "@@ -186,6 +192,72 @@ public static void dropTables() throws Exception {\n         spliceClassWatcher.execute(\"drop table CHECKTABLEIT2.F\");\n     }\n \n+    @Test\n+    public void testSystemTable() throws Exception {\n+        // delete one row from SYSCONGLOMERATES_INDEX2\n+        ResultSet rs = spliceClassWatcher.executeQuery(\"select rowid from sys.sysconglomerates --splice-properties index=SYSCONGLOMERATES_INDEX2\\n\" +\n+                \"where conglomeratename='GI'\");\n+        rs.next();\n+        String rowid = rs.getString(1);\n+        rs = spliceClassWatcher.executeQuery(\"select conglomeratenumber from sys.sysconglomerates where conglomeratename='SYSCONGLOMERATES_INDEX2'\");\n+        rs.next();\n+        long index2 = rs.getLong(1);\n+        rs.close();\n+        spliceClassWatcher.execute(String.format(\"call syscs_util.syscs_dictionary_delete(%d, '%s')\",\n+               index2, rowid));\n+\n+        // delete one row from SYSCONGLOMERATES_INDEX1\n+        rs = spliceClassWatcher.executeQuery(\"select conglomerateid from sys.sysconglomerates where conglomeratename='GI'\");\n+        rs.next();\n+        String conglomerateId = rs.getString(1);\n+        rs.close();\n+\n+        rs = spliceClassWatcher.executeQuery(String.format(\"select rowid from sys.sysconglomerates --splice-properties index=SYSCONGLOMERATES_INDEX1\\n\" +\n+                \"where conglomerateid='%s'\", conglomerateId));\n+        rs.next();\n+        rowid = rs.getString(1);\n+        rs.close();\n+\n+        rs = spliceClassWatcher.executeQuery(\"select conglomeratenumber from sys.sysconglomerates where conglomeratename='SYSCONGLOMERATES_INDEX1'\");\n+        rs.next();\n+        long index1 = rs.getLong(1);\n+        rs.close();\n+\n+        spliceClassWatcher.execute(String.format(\"call syscs_util.syscs_dictionary_delete(%d, '%s')\",\n+                index1, rowid));\n+\n+        // Repair missing indexes\n+        spliceClassWatcher.execute(String.format(\"call syscs_util.fix_table('SYS', 'SYSCONGLOMERATES', null, '%s/fix-conglomerates.out')\", getResourceDirectory()));\n+        String select =\n+                \"SELECT \\\"message\\\" \" +\n+                        \"from new com.splicemachine.derby.vti.SpliceFileVTI(\" +\n+                        \"'%s',NULL,'|',NULL,'HH:mm:ss','yyyy-MM-dd','yyyy-MM-dd HH:mm:ss','true','UTF-8' ) \" +\n+                        \"AS messages (\\\"message\\\" varchar(200)) order by 1\";\n+        rs = spliceClassWatcher.executeQuery(format(select, String.format(\"%s/fix-conglomerates.out\", getResourceDirectory())));\n+        String s = TestUtils.FormattedResult.ResultFactory.toStringUnsorted(rs);\n+        rs.close();\n+\n+        rs = spliceClassWatcher.executeQuery(\"select rowid from sys.sysconglomerates --splice-properties index=null\\n\" +\n+                \"where conglomeratename='GI'\");\n+        rs.next();\n+        rowid = rs.getString(1);\n+\n+        String expected = String.format(\"message                                   |\\n\" +", "originalCommit": "c6eacfc47ee0d8f2f3940bb08b36268f9bc8a228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyMjUxNg==", "url": "https://github.com/splicemachine/spliceengine/pull/3746#discussion_r449122516", "bodyText": "good catch. I forgot to check results", "author": "jyuanca", "createdAt": "2020-07-02T16:07:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNjM1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0MTk4NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3746#discussion_r449041985", "bodyText": "This doesn't make much sense to me, CheckTableJob is already running in the OlapServer, as if it was going to be running in Spark. But here we are choosing whether to run it in Spark or the RS. If we choose RS then as far as I can see it's going to run on the OlapServer instead. That decision should have been made in SpliceAdmin.checkIndexesInDetail() when submitting the checkTableJob to the OlapServer", "author": "dgomezferro", "createdAt": "2020-07-02T14:27:05Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/storage/CheckTableJob.java", "diffHunk": "@@ -100,17 +99,21 @@ public Void call() throws Exception {\n \n         String table = Long.toString(heapConglomId);\n         Collection<PartitionLoad> partitionLoadCollection = EngineDriver.driver().partitionLoadWatcher().tableLoad(table, true);\n+\n         boolean distributed = false;\n-        for (PartitionLoad load: partitionLoadCollection) {\n-            if (load.getMemStoreSize() > 1*MB || load.getStorefileSize() > 1*MB)\n-                distributed = true;\n+        if (request.useSpark == null) {\n+            for (PartitionLoad load : partitionLoadCollection) {\n+                if (load.getMemStoreSize() > 1 * MB || load.getStorefileSize() > 1 * MB)\n+                    distributed = true;\n+            }\n+        } else {\n+            distributed = request.useSpark;\n         }\n         DataSetProcessor dsp = null;\n         if (distributed) {\n             SpliceLogUtils.info(LOG, \"Run check_table on spark\");\n             dsp = EngineDriver.driver().processorFactory().distributedProcessor();\n-        }\n-        else {\n+        } else {\n             SpliceLogUtils.info(LOG, \"Run check_table on region server\");\n             dsp = EngineDriver.driver().processorFactory().localProcessor(null, null);\n         }", "originalCommit": "c6eacfc47ee0d8f2f3940bb08b36268f9bc8a228", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bef0c8bb5a1835f6838398ced6c47ed967d51cbe", "url": "https://github.com/splicemachine/spliceengine/commit/bef0c8bb5a1835f6838398ced6c47ed967d51cbe", "message": "address review comments", "committedDate": "2020-07-02T16:05:59Z", "type": "commit"}, {"oid": "d86e2319ad9bb8f521c0983d554c71f656a89a8b", "url": "https://github.com/splicemachine/spliceengine/commit/d86e2319ad9bb8f521c0983d554c71f656a89a8b", "message": "refactor", "committedDate": "2020-07-03T00:35:04Z", "type": "commit"}]}