{"pr_number": 3828, "pr_title": "DB-9620 Add ROWID SQL functions", "pr_createdAt": "2020-07-15T07:36:28Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3828", "timeline": [{"oid": "76401b5aeabcd2c90b35772f44d6c5515623ee68", "url": "https://github.com/splicemachine/spliceengine/commit/76401b5aeabcd2c90b35772f44d6c5515623ee68", "message": "DB-9826 add ProjectRestrictNode in the presence of rowid references in condition", "committedDate": "2020-07-14T14:28:54Z", "type": "commit"}, {"oid": "c3e09699c0cc70ff39372bd4f26178af16399e83", "url": "https://github.com/splicemachine/spliceengine/commit/c3e09699c0cc70ff39372bd4f26178af16399e83", "message": "DB-9826 Refactor for testing.\n\n- Refactor the logic for handling rowId in ProjectRestrictNode\n  in a separate function so it can be unit-tested.\n- Add unit test and integration test.", "committedDate": "2020-07-14T14:35:19Z", "type": "commit"}, {"oid": "e06bf8044a044951a7449539389d1830b1b67e2e", "url": "https://github.com/splicemachine/spliceengine/commit/e06bf8044a044951a7449539389d1830b1b67e2e", "message": "DB-9826 revert unit test.", "committedDate": "2020-07-14T15:48:54Z", "type": "commit"}, {"oid": "4bfd0d0451bbdb2f71a16aa2b62ae98734f9f681", "url": "https://github.com/splicemachine/spliceengine/commit/4bfd0d0451bbdb2f71a16aa2b62ae98734f9f681", "message": "Merge remote-tracking branch 'origin/master' into DB-9826", "committedDate": "2020-07-14T16:48:10Z", "type": "commit"}, {"oid": "b70fe61e3d04a4a04e52d280392b667e9794db4b", "url": "https://github.com/splicemachine/spliceengine/commit/b70fe61e3d04a4a04e52d280392b667e9794db4b", "message": "DB-9620 Add utility functions to work with ROWIDs.\n\n- Add ToInstant function that maps ROWID to TIMESTAMP.", "committedDate": "2020-07-14T17:04:43Z", "type": "commit"}, {"oid": "ce7f3df96b8d63b8e28aac9ce2d2cb4c0dd2e917", "url": "https://github.com/splicemachine/spliceengine/commit/ce7f3df96b8d63b8e28aac9ce2d2cb4c0dd2e917", "message": "Merge remote-tracking branch 'origin/DB-9826' into DB-9620", "committedDate": "2020-07-14T17:10:19Z", "type": "commit"}, {"oid": "cf99894fab01eafa070a456085ba9141d441190d", "url": "https://github.com/splicemachine/spliceengine/commit/cf99894fab01eafa070a456085ba9141d441190d", "message": "DB-9620 Add test to ToInstant SQL function.\n\n- Translate exceptions into customer-facing SQL exceptions.", "committedDate": "2020-07-14T19:10:02Z", "type": "commit"}, {"oid": "f519d29cfe67c4c764f0ef919f6e52e3ad738748", "url": "https://github.com/splicemachine/spliceengine/commit/f519d29cfe67c4c764f0ef919f6e52e3ad738748", "message": "DB-9620 Add TO_HBASE_ESCAPED function.\n\n- Add tests.\n- Cleanup.", "committedDate": "2020-07-15T08:58:37Z", "type": "commit"}, {"oid": "d287b59bd87ed1e3b4bbbcf17fda859b1d670ea4", "url": "https://github.com/splicemachine/spliceengine/commit/d287b59bd87ed1e3b4bbbcf17fda859b1d670ea4", "message": "DB-9620 Address SpotBug issues.", "committedDate": "2020-07-15T14:33:40Z", "type": "commit"}, {"oid": "55b5f08d9bd32ace58377a0909002553c41f8fa2", "url": "https://github.com/splicemachine/spliceengine/commit/55b5f08d9bd32ace58377a0909002553c41f8fa2", "message": "Merge remote-tracking branch 'origin/master' into DB-9826", "committedDate": "2020-07-16T09:02:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDg3NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3828#discussion_r456300875", "bodyText": "this could be a static function. then you could have a unit test for toLongTimestamp\npublic static long toLongTimestamp( String str, long time )\n{\n\tString hex = toHBaseEscaped( str );\n    long value = Bytes.toLong(Bytes.toBytesBinary(hex));\n    long ts = time & (~TIMESTAMP_MASK);\n    ts |= (value >> TIMESTAMP_SHIFT) & TIMESTAMP_MASK;\n    return ts;\n}\n\nstatic DateTimeDataValue toInstant(DataValueDescriptor s) throws StandardException {\n    if(s == null) {\n        return null;\n    }\n\n    long time = System.currentTimeMillis();\n    return new SQLTimestamp(new Timestamp( toLongTimestamp(s.getString(), time)));\n}", "author": "martinrupp", "createdAt": "2020-07-17T08:33:38Z", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/util/RowIdUtil.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.splicemachine.db.iapi.util;\n+\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.types.*;\n+import com.splicemachine.primitives.Bytes;\n+\n+import java.sql.Timestamp;\n+import java.time.Instant;\n+\n+import static com.splicemachine.uuid.Snowflake.TIMESTAMP_MASK;\n+import static com.splicemachine.uuid.Snowflake.TIMESTAMP_SHIFT;\n+\n+public interface RowIdUtil {\n+\n+    static String toHBaseEscaped(String s) {\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < s.length(); i += 2) {\n+            sb.append(\"\\\\x\").append(s, i, i+2);\n+        }\n+        return sb.toString();\n+    }\n+\n+    static DateTimeDataValue toInstant(DataValueDescriptor s) throws StandardException {\n+        if(s == null) {\n+            return null;\n+        }\n+        String hex = toHBaseEscaped(s.getString());\n+        long value = Bytes.toLong(Bytes.toBytesBinary(hex));\n+        long ts = System.currentTimeMillis() & (~TIMESTAMP_MASK);\n+        ts |= (value >> TIMESTAMP_SHIFT) & TIMESTAMP_MASK;\n+        return new SQLTimestamp(new Timestamp(ts));", "originalCommit": "b70fe61e3d04a4a04e52d280392b667e9794db4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNTAxMA==", "url": "https://github.com/splicemachine/spliceengine/pull/3828#discussion_r456305010", "bodyText": "this looks like you're comparing the result against the result.\nmaybe instead of result use expectedEscaped.", "author": "martinrupp", "createdAt": "2020-07-17T08:41:26Z", "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/RowIdIT.java", "diffHunk": "@@ -450,4 +451,30 @@ public void testRowIdToInstantFunctionInvalidInput() {\n         }\n         fail(\"Expected: java.sql.SQLException: ERROR 22008: '33445567' is an invalid argument to the TO_INSTANT function.\");\n     }\n+\n+    @Test\n+    public void testRowIdToHbaseEscapedFunction() throws Exception {\n+        ResultSet resultSet  = methodWatcher.executeQuery(String.format(\"select cast(rowid as varchar(30)) from %s\",\n+                this.getTableReference(TABLE7_NAME)));\n+        Assert.assertTrue(resultSet.next());\n+        String rowId = resultSet.getString(1);\n+        Assert.assertFalse(resultSet.next());\n+        StringDataValue result = RowIdUtil.toHBaseEscaped(new SQLChar(rowId));\n+        resultSet = methodWatcher.executeQuery(String.format(\"select to_hbase_escaped(rowid) from %s\", this.getTableReference(TABLE7_NAME)));\n+        Assert.assertTrue(resultSet.next());\n+        Assert.assertEquals(result.getString(), resultSet.getString(1));", "originalCommit": "f519d29cfe67c4c764f0ef919f6e52e3ad738748", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNTA2OA==", "url": "https://github.com/splicemachine/spliceengine/pull/3828#discussion_r456305068", "bodyText": "can you add a test where you have input and output as strings? e.g.\nAssert.equals( RowIdUtil.toHBaseEscaped(\"HelloWorld\\x33asdf\\n\\t\") , \"HelloWorld\\\\x33asdf\\\\x0D\" ));\nOtherwise it somehow feels like you're testing toHBaseEscaped by using toHBaseEscaped.", "author": "martinrupp", "createdAt": "2020-07-17T08:41:33Z", "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/RowIdIT.java", "diffHunk": "@@ -450,4 +451,30 @@ public void testRowIdToInstantFunctionInvalidInput() {\n         }\n         fail(\"Expected: java.sql.SQLException: ERROR 22008: '33445567' is an invalid argument to the TO_INSTANT function.\");\n     }\n+\n+    @Test\n+    public void testRowIdToHbaseEscapedFunction() throws Exception {\n+        ResultSet resultSet  = methodWatcher.executeQuery(String.format(\"select cast(rowid as varchar(30)) from %s\",\n+                this.getTableReference(TABLE7_NAME)));\n+        Assert.assertTrue(resultSet.next());\n+        String rowId = resultSet.getString(1);\n+        Assert.assertFalse(resultSet.next());\n+        StringDataValue result = RowIdUtil.toHBaseEscaped(new SQLChar(rowId));\n+        resultSet = methodWatcher.executeQuery(String.format(\"select to_hbase_escaped(rowid) from %s\", this.getTableReference(TABLE7_NAME)));\n+        Assert.assertTrue(resultSet.next());\n+        Assert.assertEquals(result.getString(), resultSet.getString(1));\n+        Assert.assertFalse(resultSet.next());\n+    }", "originalCommit": "f519d29cfe67c4c764f0ef919f6e52e3ad738748", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca85fb4695ab2eaa57748f9abd338104369a6ea3", "url": "https://github.com/splicemachine/spliceengine/commit/ca85fb4695ab2eaa57748f9abd338104369a6ea3", "message": "Merge remote-tracking branch 'origin/master' into DB-9826", "committedDate": "2020-07-22T16:01:14Z", "type": "commit"}, {"oid": "29663aaceddafd6e86a92c8fe33bc619bbc3aa2f", "url": "https://github.com/splicemachine/spliceengine/commit/29663aaceddafd6e86a92c8fe33bc619bbc3aa2f", "message": "Merge remote-tracking branch 'origin/DB-9826' into DB-9620", "committedDate": "2020-07-22T16:20:08Z", "type": "commit"}]}