{"pr_number": 388, "pr_title": "[plugin-web-app] Add possibility to set capabilities for local run", "pr_createdAt": "2020-03-13T14:32:51Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/388", "timeline": [{"oid": "24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "url": "https://github.com/vividus-framework/vividus/commit/24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-13T14:44:37Z", "type": "forcePushed"}, {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "url": "https://github.com/vividus-framework/vividus/commit/e64fadd7135387497e48d4a72dd17e05f2748b2b", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-13T14:47:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MDUwNg==", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392280506", "bodyText": "WebDriverType webDriverType = Optional.ofNullable(desiredCapabilities.getCapability(CapabilityType.BROWSER_NAME))\n                .map(String.class::cast)\n                .map(WebDriverType::valueOf)\n                .orElse(this.webDriverType);\nreturn getWebDriver(webDriverType, desiredCapabilities);", "author": "valfirst", "createdAt": "2020-03-13T14:58:28Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)\n     {\n-        return getWebDriver(webDriverType, desiredCapabilities);\n+        return propertyParser.getPropertyValuesByPrefix(prefix)\n+            .entrySet()\n+            .stream()\n+            .map(e -> equalsAnyIgnoreCase(e.getValue(), \"true\", \"false\")\n+                ? Map.entry(e.getKey(), Boolean.parseBoolean(e.getValue()))\n+                : e)\n+            .collect(Collectors.collectingAndThen(toMap(Entry::getKey, Entry::getValue), DesiredCapabilities::new));\n     }\n \n     @Override\n-    public WebDriver getWebDriver(WebDriverType webDriverType, DesiredCapabilities desiredCapabilities)\n+    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n     {\n-        WebDriverConfiguration configuration = getWebDriverConfiguration(webDriverType, true);\n-        return createWebDriver(webDriverType.getWebDriver(desiredCapabilities, configuration));\n+        return Optional.ofNullable(desiredCapabilities.getCapability(CapabilityType.BROWSER_NAME))\n+                       .map(String.class::cast)\n+                       .map(browserName -> getWebDriver(WebDriverType.valueOf(browserName), desiredCapabilities))\n+                       .orElseGet(() -> getWebDriver(this.webDriverType, desiredCapabilities));", "originalCommit": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MDkxNg==", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392280916", "bodyText": "to be fully on a safe side: if (local == Boolean.TRUE)", "author": "valfirst", "createdAt": "2020-03-13T14:59:05Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)", "originalCommit": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjM2NA==", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392562364", "bodyText": "getCapabilitiesByFamily(String prefix) -> getCapabilitiesByPrefix(String prefix) ?", "author": "uarlouski", "createdAt": "2020-03-14T06:38:52Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)", "originalCommit": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjYwNg==", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392562606", "bodyText": "can we reuse https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/BooleanUtils.html#toBooleanObject-java.lang.String- here?", "author": "uarlouski", "createdAt": "2020-03-14T06:43:37Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)\n     {\n-        return getWebDriver(webDriverType, desiredCapabilities);\n+        return propertyParser.getPropertyValuesByPrefix(prefix)\n+            .entrySet()\n+            .stream()\n+            .map(e -> equalsAnyIgnoreCase(e.getValue(), \"true\", \"false\")", "originalCommit": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgwNTc2Nw==", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392805767", "bodyText": "It will cause unpredictable side effects", "author": "ikalinin1", "createdAt": "2020-03-16T06:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjYwNg=="}], "type": "inlineReview"}, {"oid": "2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "url": "https://github.com/vividus-framework/vividus/commit/2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-14T06:46:07Z", "type": "forcePushed"}, {"oid": "db26bb7184a0d38c20b4b6398614d6e7c23b5bfe", "url": "https://github.com/vividus-framework/vividus/commit/db26bb7184a0d38c20b4b6398614d6e7c23b5bfe", "message": "[plugin-web-app] Remove redundant methods", "committedDate": "2020-03-16T06:40:57Z", "type": "commit"}, {"oid": "28258e5bb4bca81c43ced5474a10060d20182ddc", "url": "https://github.com/vividus-framework/vividus/commit/28258e5bb4bca81c43ced5474a10060d20182ddc", "message": "[plugin-web-app] Do not expose desired capabilities", "committedDate": "2020-03-16T06:40:57Z", "type": "commit"}, {"oid": "625f48232b67d324eb0b142d4949233865e8603b", "url": "https://github.com/vividus-framework/vividus/commit/625f48232b67d324eb0b142d4949233865e8603b", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-16T06:40:57Z", "type": "forcePushed"}, {"oid": "65041f235a92e9b2f146396d3776091ee181a89e", "url": "https://github.com/vividus-framework/vividus/commit/65041f235a92e9b2f146396d3776091ee181a89e", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-16T07:01:24Z", "type": "commit"}, {"oid": "65041f235a92e9b2f146396d3776091ee181a89e", "url": "https://github.com/vividus-framework/vividus/commit/65041f235a92e9b2f146396d3776091ee181a89e", "message": "[plugin-web-app] Add possibility to specify capabilities for local run", "committedDate": "2020-03-16T07:01:24Z", "type": "forcePushed"}]}