{"pr_number": 1135, "pr_title": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "pr_createdAt": "2020-11-13T12:21:05Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1135", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkyMjE1Nw==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522922157", "bodyText": "maybe\n@when(\"I initialize $scopes variable $variableName with binary content of file from path $path\")", "author": "uarlouski", "createdAt": "2020-11-13T12:34:13Z", "path": "vividus/src/main/java/org/vividus/bdd/steps/BddVariableSteps.java", "diffHunk": "@@ -239,6 +240,26 @@ public void initVariableWithGivenValues(Set<VariableScope> scopes, String variab\n         bddVariableContext.putVariable(scopes, variableName, listOfMaps);\n     }\n \n+    /**\n+     * Loads resource located by path as a byte array and puts this variable into context.\n+     * Could be useful for the cases when one needs to pass a variable into step as a binary data.\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName A name of variable to assign the values\n+     * @param path to a file\n+     */\n+    @When(\"I initialize $scopes variable `$variableName` with content of file from path `$path`\")", "originalCommit": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2NjAwMg==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522966002", "bodyText": "noisy change? no checkstyle violations?", "author": "valfirst", "createdAt": "2020-11-13T13:58:29Z", "path": "vividus-plugin-web-app/src/test/java/org/vividus/proxy/steps/ProxyStepsTests.java", "diffHunk": "@@ -70,16 +74,21 @@\n import org.vividus.ui.web.action.IWebWaitActions;\n \n import io.netty.handler.codec.http.DefaultHttpHeaders;\n+import io.netty.handler.codec.http.FullHttpResponse;\n import io.netty.handler.codec.http.HttpHeaders;\n import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.netty.handler.codec.http.HttpVersion;\n \n @ExtendWith(MockitoExtension.class)\n class ProxyStepsTests\n {\n+    private static final String CONTENT_LENGTH = \"Content-Length\";\n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n     private static final String URL = \"www.test.com\";\n     private static final String REQUESTS_MATCHING_URL_ASSERTION_PATTERN =\n-            \"Number of HTTP %s requests matching URL pattern '%s'\";\n+        \"Number of HTTP %s requests matching URL pattern '%s'\";", "originalCommit": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1bf41e0459314e0d2f3ad71fa41996dba836b228", "url": "https://github.com/vividus-framework/vividus/commit/1bf41e0459314e0d2f3ad71fa41996dba836b228", "message": "Just a test objects in expressions", "committedDate": "2020-11-16T09:58:54Z", "type": "forcePushed"}, {"oid": "3736d5d62859e33d3c62b65d4d7739249674ea1b", "url": "https://github.com/vividus-framework/vividus/commit/3736d5d62859e33d3c62b65d4d7739249674ea1b", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T11:43:23Z", "type": "forcePushed"}, {"oid": "1d0de581f7a513a761c739d6f9f2ec2ca29ddd81", "url": "https://github.com/vividus-framework/vividus/commit/1d0de581f7a513a761c739d6f9f2ec2ca29ddd81", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T12:27:04Z", "type": "forcePushed"}, {"oid": "b5375b20b1669bf70808d863eece143e5651c42e", "url": "https://github.com/vividus-framework/vividus/commit/b5375b20b1669bf70808d863eece143e5651c42e", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T13:05:13Z", "type": "forcePushed"}, {"oid": "103175bdaca07aa579df97ddbf8f273ba5d67333", "url": "https://github.com/vividus-framework/vividus/commit/103175bdaca07aa579df97ddbf8f273ba5d67333", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T13:33:13Z", "type": "forcePushed"}, {"oid": "c8deb1511ac4b75e285d1258418222b5bafd7194", "url": "https://github.com/vividus-framework/vividus/commit/c8deb1511ac4b75e285d1258418222b5bafd7194", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T13:53:46Z", "type": "forcePushed"}, {"oid": "535e37b011b95f048585d6098688dae8dbe9531f", "url": "https://github.com/vividus-framework/vividus/commit/535e37b011b95f048585d6098688dae8dbe9531f", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T15:03:59Z", "type": "forcePushed"}, {"oid": "a74cf9e4a49f9f2db7154e7a8a2194d23e7b9d7e", "url": "https://github.com/vividus-framework/vividus/commit/a74cf9e4a49f9f2db7154e7a8a2194d23e7b9d7e", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-26T16:20:29Z", "type": "forcePushed"}, {"oid": "7d0d2995d0056cbcc0b420fd022371fd644cf7c9", "url": "https://github.com/vividus-framework/vividus/commit/7d0d2995d0056cbcc0b420fd022371fd644cf7c9", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-27T07:42:24Z", "type": "forcePushed"}, {"oid": "58af80e69b6a0c0f07d759cd457afac91ae13edf", "url": "https://github.com/vividus-framework/vividus/commit/58af80e69b6a0c0f07d759cd457afac91ae13edf", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-27T08:27:30Z", "type": "forcePushed"}, {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad", "url": "https://github.com/vividus-framework/vividus/commit/3694010764f0365d7a5682a9d1cef610258f7aad", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-27T09:34:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTExOA==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531665118", "bodyText": "public interface IExpressionProcessor<T>\n{\n    Optional<T> execute(String expression);\n}\n?", "author": "valfirst", "createdAt": "2020-11-27T15:35:07Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/IExpressionProcessor.java", "diffHunk": "@@ -20,5 +20,5 @@\n \n public interface IExpressionProcessor\n {\n-    Optional<String> execute(String expression);\n+    Optional<Object> execute(String expression);\n }", "originalCommit": "3694010764f0365d7a5682a9d1cef610258f7aad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTcwNA==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531665704", "bodyText": "and in this case if you keep UnaryExpressionProcessor you won't need to change each and every expression processor", "author": "valfirst", "createdAt": "2020-11-27T15:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTExOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjIzOA==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531666238", "bodyText": "Optional<Integer> ?", "author": "valfirst", "createdAt": "2020-11-27T15:37:26Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RandomIntExpressionProcessor.java", "diffHunk": "@@ -31,7 +31,7 @@\n             \"^randomInt\\\\(\" + INT_NUMBER_REGEX + \",\\\\s*\" + INT_NUMBER_REGEX + \"\\\\)$\", Pattern.CASE_INSENSITIVE);\n \n     @Override\n-    public Optional<String> execute(String expression)\n+    public Optional<Object> execute(String expression)", "originalCommit": "3694010764f0365d7a5682a9d1cef610258f7aad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjY4Mg==", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531666682", "bodyText": "I would kept UnaryExpressionProcessor as a child of FunctionalExpressionProcessor", "author": "valfirst", "createdAt": "2020-11-27T15:38:21Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/FunctionalExpressionProcessor.java", "diffHunk": "@@ -17,25 +17,25 @@\n package org.vividus.bdd.expression;\n \n import java.util.Optional;\n-import java.util.function.UnaryOperator;\n+import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-public class UnaryExpressionProcessor implements IExpressionProcessor\n+public class FunctionalExpressionProcessor implements IExpressionProcessor", "originalCommit": "3694010764f0365d7a5682a9d1cef610258f7aad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2f84502b16840f21929e40869c5b3000bd0e0ac3", "url": "https://github.com/vividus-framework/vividus/commit/2f84502b16840f21929e40869c5b3000bd0e0ac3", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-30T10:08:59Z", "type": "forcePushed"}, {"oid": "61593c7e42ad80f5dcafe4a48ec28d47707bef3e", "url": "https://github.com/vividus-framework/vividus/commit/61593c7e42ad80f5dcafe4a48ec28d47707bef3e", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-30T10:21:43Z", "type": "forcePushed"}, {"oid": "727aafa773389c39663bf6f7dae0d86a29e10da6", "url": "https://github.com/vividus-framework/vividus/commit/727aafa773389c39663bf6f7dae0d86a29e10da6", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-11-30T10:27:12Z", "type": "forcePushed"}, {"oid": "e37b5ef8e7cb025d54146c4f0a242ec17af04018", "url": "https://github.com/vividus-framework/vividus/commit/e37b5ef8e7cb025d54146c4f0a242ec17af04018", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-12-03T07:48:28Z", "type": "commit"}, {"oid": "e37b5ef8e7cb025d54146c4f0a242ec17af04018", "url": "https://github.com/vividus-framework/vividus/commit/e37b5ef8e7cb025d54146c4f0a242ec17af04018", "message": "[plugin-web-app] Add possibility to mock browser's HTTP requests", "committedDate": "2020-12-03T07:48:28Z", "type": "forcePushed"}]}