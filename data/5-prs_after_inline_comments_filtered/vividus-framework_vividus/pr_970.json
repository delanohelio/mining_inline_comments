{"pr_number": 970, "pr_title": "[xray-exporter] Add ability to export cucumber test cases", "pr_createdAt": "2020-09-28T14:07:08Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/970", "timeline": [{"oid": "3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "url": "https://github.com/vividus-framework/vividus/commit/3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-28T14:20:10Z", "type": "forcePushed"}, {"oid": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "url": "https://github.com/vividus-framework/vividus/commit/70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-28T14:21:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDc1Mg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r495990752", "bodyText": "private static String processStep(String step) and CucumberScenarioConverter::processStep\n?", "author": "ikalinin1", "createdAt": "2020-09-28T14:40:03Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));\n+    }\n+\n+    private static String buildPlainScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, UnaryOperator.identity());\n+    }\n+\n+    private static String buildParameterizedScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, steps ->\n+        {\n+            String examples = buildScenarioExamplesTable(scenario.getExamples().getParameters());\n+            steps.add(examples);\n+            return steps;\n+        });\n+    }\n+\n+    private static String getSteps(Scenario scenario, UnaryOperator<List<String>> beforeJoining)\n+    {\n+        return scenario.collectSteps()\n+                       .stream()\n+                       .map(Step::getValue)\n+                       .map(processStep())\n+                       .collect(Collectors.collectingAndThen(Collectors.toList(), beforeJoining))\n+                       .stream()\n+                       .collect(Collectors.joining(lineSeparator()));\n+    }\n+\n+    private static UnaryOperator<String> processStep()", "originalCommit": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MTM0MQ==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r495991341", "bodyText": "and it seems like replaceCommentSign", "author": "ikalinin1", "createdAt": "2020-09-28T14:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDc1Mg=="}], "type": "inlineReview"}, {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "url": "https://github.com/vividus-framework/vividus/commit/3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-28T14:51:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyOTIzOQ==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496029239", "bodyText": "noneMatch", "author": "ikalinin1", "createdAt": "2020-09-28T15:16:50Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return !scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)", "originalCommit": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDY2Mg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496794662", "bodyText": "cucumber scenario is allowed to have comments", "author": "uarlouski", "createdAt": "2020-09-29T15:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyOTIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyOTkwOA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496029908", "bodyText": "don't you mind to align stream? :)", "author": "ikalinin1", "createdAt": "2020-09-28T15:17:31Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/util/StoryUtils.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.collections4.ListUtils;\n+import org.vividus.bdd.model.jbehave.Example;\n+import org.vividus.bdd.model.jbehave.Lifecycle;\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Story;\n+\n+public final class StoryUtils\n+{\n+    private StoryUtils()\n+    {\n+    }\n+\n+    public static List<Scenario> getFoldScenarios(Story story)\n+    {\n+        Lifecycle lifecycle = story.getLifecycle();\n+        List<Scenario> scenarios = story.getScenarios();\n+\n+        if (lifecycle == null || lifecycle.getParameters() == null)\n+        {\n+            return scenarios;\n+        }\n+\n+        Parameters lifecycleParameters = lifecycle.getParameters();\n+        int partition = scenarios.size() <= 1 ? 1 : scenarios.size() / lifecycleParameters.getValues().size();\n+        List<List<Scenario>> scenariosPerExample = ListUtils.partition(scenarios, partition);\n+\n+        return IntStream.range(0, partition)\n+                .mapToObj(index -> scenariosPerExample.stream()", "originalCommit": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71dd40d990894249c3d58421af9f67f371116ced", "url": "https://github.com/vividus-framework/vividus/commit/71dd40d990894249c3d58421af9f67f371116ced", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T09:54:50Z", "type": "forcePushed"}, {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "url": "https://github.com/vividus-framework/vividus/commit/fcae1216ea6fb59de2e3254d91222ce55e91eff9", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T10:25:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NjMwNg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496656306", "bodyText": "buildParameterizedScenario -> buildExampleScenario", "author": "valfirst", "createdAt": "2020-09-29T11:55:16Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NjQ4MA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496656480", "bodyText": "buildPlainScenario -> buildNormalScenario - following jbehave naming", "author": "valfirst", "createdAt": "2020-09-29T11:55:38Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1Nzk5OA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496657998", "bodyText": "that's a bad design: mutable object is changed and returned", "author": "valfirst", "createdAt": "2020-09-29T11:58:30Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));\n+    }\n+\n+    private static String buildPlainScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, UnaryOperator.identity());\n+    }\n+\n+    private static String buildParameterizedScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, steps ->\n+        {\n+            String examples = buildScenarioExamplesTable(scenario.getExamples().getParameters());\n+            steps.add(examples);\n+            return steps;", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1OTQyOA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496659428", "bodyText": "customSerialize -> serializeCustomFields", "author": "valfirst", "createdAt": "2020-09-29T12:01:06Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/databind/AbstractTestCaseSerializer.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.databind;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.vividus.xray.configuration.JiraFieldsMapping;\n+import org.vividus.xray.model.AbstractTestCase;\n+\n+public abstract class AbstractTestCaseSerializer<T extends AbstractTestCase> extends JsonSerializer<T>\n+{\n+    private static final String NAME = \"name\";\n+\n+    @Autowired private JiraFieldsMapping jiraFieldsMapping;\n+\n+    @Override\n+    public void serialize(T testCase, JsonGenerator generator, SerializerProvider serializers) throws IOException\n+    {\n+        generator.writeStartObject();\n+        generator.writeObjectFieldStart(\"fields\");\n+\n+        writeObjectWithField(generator, \"project\", \"key\", testCase.getProjectKey());\n+\n+        String assignee = testCase.getAssignee();\n+        if (assignee != null)\n+        {\n+            writeObjectWithField(generator, \"assignee\", NAME, assignee);\n+        }\n+\n+        writeObjectWithField(generator, \"issuetype\", NAME, \"Test\");\n+\n+        writeObjectWithValueField(generator, jiraFieldsMapping.getTestCaseType(), testCase.getType());\n+\n+        generator.writeStringField(\"summary\", testCase.getSummary());\n+\n+        writeJsonArray(generator, \"labels\", testCase.getLabels(), false);\n+\n+        writeJsonArray(generator, \"components\", testCase.getComponents(), true);\n+\n+        customSerialize(testCase, generator);\n+\n+        generator.writeEndObject();\n+        generator.writeEndObject();\n+    }\n+\n+    protected void writeObjectWithValueField(JsonGenerator generator, String objectKey, String fieldValue)\n+            throws IOException\n+    {\n+        writeObjectWithField(generator, objectKey, \"value\", fieldValue);\n+    }\n+\n+    protected abstract void customSerialize(T testCase, JsonGenerator generator) throws IOException;", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MTQ4Nw==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496661487", "bodyText": "T parameters = parametersFactory.get();", "author": "valfirst", "createdAt": "2020-09-29T12:05:00Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,17 +142,36 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);\n+        parameters.setSteps(ManualStepConverter.convert(storyTitle, scenario.getTitle(), scenario.collectSteps()));\n+        return parameters;\n+    }\n \n-        TestCaseParameters parameters = new TestCaseParameters();\n+    private CucumberTestCaseParameters createCucumberTestCaseParameters(Scenario scenario) throws SyntaxException\n+    {\n+        CucumberTestCaseParameters parameters = createTestCaseParameters(TestCaseType.CUCUMBER, scenario,\n+                CucumberTestCaseParameters::new);\n+        CucumberScenario cucumberScenario = CucumberScenarioConverter.convert(scenario);\n+        parameters.setScenarioType(cucumberScenario.getType());\n+        parameters.setScenario(cucumberScenario.getScenario());\n+        return parameters;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends AbstractTestCaseParameters> T createTestCaseParameters(TestCaseType type, Scenario scenario,\n+            Supplier<T> parametersFactory)\n+    {\n+        AbstractTestCaseParameters parameters = parametersFactory.get();", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MzUyOQ==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496663529", "bodyText": "AbstractTestCaseParameters parameters = parameterFactories.get(testCaseType).apply(scenarioTitle, scenario);\nAbstractTestCase testCase = testCaseFactories.get(testCaseType).apply(parameters);", "author": "valfirst", "createdAt": "2020-09-29T12:08:34Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -93,16 +116,20 @@ public void exportResults() throws IOException\n \n         try\n         {\n-            TestCaseParameters parameters = createTestCaseParameters(storyTitle, scenario);\n+            TestCaseType testCaseType = TestCaseType.getTestCaseType(scenario);\n \n             String testCaseId = ensureOneValueOrNull(scenarioMeta, \"testCaseId\");\n+\n+            CreateParametersFunction parameters = parameterFactories.get(testCaseType);\n+            AbstractTestCase testCase = testCaseFactories.get(testCaseType)\n+                    .apply(parameters.apply(scenarioTitle, scenario));", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2Njg2Nw==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496666867", "bodyText": "public ManualTestCase createManualTestCase(ManualTestCaseParameters parameters)\n    {\n        ManualTestCase testCase = new ManualTestCase();\n        fillTestCase(parameters, testCase);\n        testCase.setManualTestSteps(parameters.getSteps());\n        return testCase;\n    }\n\n    public CucumberTestCase createCucumberTestCase(CucumberTestCaseParameters parameters)\n    {\n        CucumberTestCase testCase = new CucumberTestCase();\n        fillTestCase(parameters, cucumberTestCase);\n        testCase.setScenarioType(parameters.getScenarioType());\n        testCase.setScenario(parameters.getScenario());\n        return testCase;\n    }\n\n    private void fillTestCase(AbstractTestCaseParameters parameters, AbstractTestCase testCase)\n    {\n        testCase.setType(parameters.getType().getValue());\n        testCase.setProjectKey(projectKey);\n        testCase.setAssignee(assignee);\n        testCase.setSummary(parameters.getSummary());\n        testCase.setLabels(parameters.getLabels());\n        testCase.setComponents(parameters.getComponents());\n    }", "author": "valfirst", "createdAt": "2020-09-29T12:14:20Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/factory/TestCaseFactory.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.factory;\n+\n+import java.util.function.Supplier;\n+\n+import org.vividus.xray.facade.AbstractTestCaseParameters;\n+import org.vividus.xray.facade.CucumberTestCaseParameters;\n+import org.vividus.xray.facade.ManualTestCaseParameters;\n+import org.vividus.xray.model.AbstractTestCase;\n+import org.vividus.xray.model.CucumberTestCase;\n+import org.vividus.xray.model.ManualTestCase;\n+\n+public class TestCaseFactory\n+{\n+    private final String projectKey;\n+    private final String assignee;\n+\n+    public TestCaseFactory(String projectKey, String assignee)\n+    {\n+        this.projectKey = projectKey;\n+        this.assignee = assignee;\n+    }\n+\n+    public ManualTestCase createManualTestCase(ManualTestCaseParameters parameters)\n+    {\n+        ManualTestCase manualTest = createTestCase(ManualTestCase::new, parameters);\n+        manualTest.setManualTestSteps(parameters.getSteps());\n+        return manualTest;\n+    }\n+\n+    public CucumberTestCase createCucumberTestCase(CucumberTestCaseParameters parameters)\n+    {\n+        CucumberTestCase cucumberTest = createTestCase(CucumberTestCase::new, parameters);\n+        cucumberTest.setScenarioType(parameters.getScenarioType());\n+        cucumberTest.setScenario(parameters.getScenario());\n+        return cucumberTest;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends AbstractTestCase> T createTestCase(Supplier<T> testCaseFactory,\n+            AbstractTestCaseParameters parameters)\n+    {\n+        AbstractTestCase testCase = testCaseFactory.get();\n+        testCase.setType(parameters.getType().getValue());\n+        testCase.setProjectKey(projectKey);\n+        testCase.setAssignee(assignee);\n+        testCase.setSummary(parameters.getSummary());\n+        testCase.setLabels(parameters.getLabels());\n+        testCase.setComponents(parameters.getComponents());\n+        return (T) testCase;\n+    }", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2NzYyMA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496667620", "bodyText": "could you please explain the logic?", "author": "valfirst", "createdAt": "2020-09-29T12:15:35Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return scenario.collectSteps().stream().map(Step::getOutcome).noneMatch(\"comment\"::equals)", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcwMjY0MA==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496702640", "bodyText": "That was a bit incorrect, now fixed and tests were added", "author": "uarlouski", "createdAt": "2020-09-29T13:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2NzYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2ODEyNg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496668126", "bodyText": "getFoldedScenarios", "author": "valfirst", "createdAt": "2020-09-29T12:16:24Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/util/StoryUtils.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.collections4.ListUtils;\n+import org.vividus.bdd.model.jbehave.Example;\n+import org.vividus.bdd.model.jbehave.Lifecycle;\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Story;\n+\n+public final class StoryUtils\n+{\n+    private StoryUtils()\n+    {\n+    }\n+\n+    public static List<Scenario> getFoldScenarios(Story story)", "originalCommit": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a2f3441eea92d2b355573eebe68997cdd2e4c92", "url": "https://github.com/vividus-framework/vividus/commit/0a2f3441eea92d2b355573eebe68997cdd2e4c92", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T13:06:12Z", "type": "forcePushed"}, {"oid": "933cecb371ae2f294143ffd48a57ff2275e06cc0", "url": "https://github.com/vividus-framework/vividus/commit/933cecb371ae2f294143ffd48a57ff2275e06cc0", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T13:07:29Z", "type": "forcePushed"}, {"oid": "7e6d446259d516b144bece53eaab639a57b797aa", "url": "https://github.com/vividus-framework/vividus/commit/7e6d446259d516b144bece53eaab639a57b797aa", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T13:20:49Z", "type": "forcePushed"}, {"oid": "5f7894207136b25dac96240958c93a67195dab40", "url": "https://github.com/vividus-framework/vividus/commit/5f7894207136b25dac96240958c93a67195dab40", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T13:45:47Z", "type": "forcePushed"}, {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0", "url": "https://github.com/vividus-framework/vividus/commit/c300d45833937fc211fc58d61d7b59699cf02cb0", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T15:04:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyNjE2Mg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496826162", "bodyText": "getSteps(scenario) can be moved to a variable, placed before if and then re-used twice", "author": "valfirst", "createdAt": "2020-09-29T15:39:11Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildExampleScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", getSteps(scenario));", "originalCommit": "c300d45833937fc211fc58d61d7b59699cf02cb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyODkyNg==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496828926", "bodyText": "return scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)\n                   ? MANUAL\n                   : CUCUMBER;", "author": "valfirst", "createdAt": "2020-09-29T15:41:48Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return !scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)\n+                   ? CUCUMBER\n+                   : MANUAL;", "originalCommit": "c300d45833937fc211fc58d61d7b59699cf02cb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "url": "https://github.com/vividus-framework/vividus/commit/d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T15:56:24Z", "type": "forcePushed"}, {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564", "url": "https://github.com/vividus-framework/vividus/commit/3d9517af08cbf52f7e7dff60d30febb6b8132564", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-29T15:59:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMyMzQyMQ==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497323421", "bodyText": "ManualTestCaseParameters parameters = new ManualTestCaseParameters();\nfillTestCaseParameters(parameters, TestCaseType.MANUAL, scenario);", "author": "valfirst", "createdAt": "2020-09-30T08:13:14Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,16 +141,34 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);", "originalCommit": "3d9517af08cbf52f7e7dff60d30febb6b8132564", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMyNjYyMw==", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497326623", "bodyText": "CucumberTestCaseParameters parameters = new CucumberTestCaseParameters();\nfillTestCaseParameters(parameters, TestCaseType.CUCUMBER, scenario);", "author": "valfirst", "createdAt": "2020-09-30T08:18:28Z", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,16 +141,34 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);\n+        parameters.setSteps(ManualStepConverter.convert(storyTitle, scenario.getTitle(), scenario.collectSteps()));\n+        return parameters;\n+    }\n+\n+    private CucumberTestCaseParameters createCucumberTestCaseParameters(Scenario scenario)\n+    {\n+        CucumberTestCaseParameters parameters = createTestCaseParameters(TestCaseType.CUCUMBER, scenario,\n+                CucumberTestCaseParameters::new);", "originalCommit": "3d9517af08cbf52f7e7dff60d30febb6b8132564", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "url": "https://github.com/vividus-framework/vividus/commit/0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-30T08:54:49Z", "type": "commit"}, {"oid": "0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "url": "https://github.com/vividus-framework/vividus/commit/0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "message": "[xray-exporter] Add ability to export cucumber test cases", "committedDate": "2020-09-30T08:54:49Z", "type": "forcePushed"}]}