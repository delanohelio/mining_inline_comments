{"pr_number": 814, "pr_title": "Fix handling of variables of different nesting step-levels", "pr_createdAt": "2020-08-12T15:29:54Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/814", "timeline": [{"oid": "b2e4b73da2b0a6ee7aaddcafb42320794c1bb43e", "url": "https://github.com/vividus-framework/vividus/commit/b2e4b73da2b0a6ee7aaddcafb42320794c1bb43e", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T16:12:13Z", "type": "forcePushed"}, {"oid": "9972949977953cb1442beb8d59f32195203ed562", "url": "https://github.com/vividus-framework/vividus/commit/9972949977953cb1442beb8d59f32195203ed562", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T16:19:59Z", "type": "forcePushed"}, {"oid": "3addf0dcbaad65a46d8345add9e930a10994f22d", "url": "https://github.com/vividus-framework/vividus/commit/3addf0dcbaad65a46d8345add9e930a10994f22d", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T16:25:13Z", "type": "forcePushed"}, {"oid": "bfdee321aa6631681a582cf209b4afebad0a6ec6", "url": "https://github.com/vividus-framework/vividus/commit/bfdee321aa6631681a582cf209b4afebad0a6ec6", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T16:28:06Z", "type": "forcePushed"}, {"oid": "ca6e471a5b563c6e6bbac19b75a5475a488bd654", "url": "https://github.com/vividus-framework/vividus/commit/ca6e471a5b563c6e6bbac19b75a5475a488bd654", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T17:32:43Z", "type": "forcePushed"}, {"oid": "90b895979204b483fd23aa6a233c3dd79201d95e", "url": "https://github.com/vividus-framework/vividus/commit/90b895979204b483fd23aa6a233c3dd79201d95e", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-12T18:28:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwNjIxOA==", "url": "https://github.com/vividus-framework/vividus/pull/814#discussion_r469806218", "bodyText": "have you considered using arraydeque?", "author": "uarlouski", "createdAt": "2020-08-13T09:04:23Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/variable/Variables.java", "diffHunk": "@@ -16,27 +16,170 @@\n \n package org.vividus.bdd.variable;\n \n-import java.util.EnumMap;\n+import java.util.Deque;\n import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n \n public class Variables\n {\n-    private Map<VariableScope, Map<String, Object>> variablesPerScope = new EnumMap<>(VariableScope.class);\n+    private static final int VARIABLE_NAME_GROUP = 1;\n+    private static final int LIST_INDEX_GROUP = 2;\n+    private static final int MAP_KEY_GROUP = 3;\n+    private static final Pattern COMPOUND_VARIABLE_PATTERN = Pattern.compile(\n+            \"([^\\\\[\\\\].:]+):?(?:\\\\[(\\\\d+)])?:?(?:\\\\.([^:]+))?:?\");\n \n-    public Variables()\n+    private final Map<String, Object> batchVariables;\n+    private final Map<String, Object> storyVariables;\n+    private final Map<String, Object> scenarioVariables;\n+    private final Deque<Map<String, Object>> stepVariables;\n+\n+    public Variables(Map<String, Object> batchVariables)\n+    {\n+        this.batchVariables = batchVariables;\n+        storyVariables = new HashMap<>();\n+        scenarioVariables = new HashMap<>();\n+        stepVariables = new LinkedList<>();", "originalCommit": "90b895979204b483fd23aa6a233c3dd79201d95e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MDg5MA==", "url": "https://github.com/vividus-framework/vividus/pull/814#discussion_r469840890", "bodyText": "need to be benchmarked", "author": "valfirst", "createdAt": "2020-08-13T10:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwNjIxOA=="}], "type": "inlineReview"}, {"oid": "7b438f5a4af583ebe93e8ea59b91fcec69e7a808", "url": "https://github.com/vividus-framework/vividus/commit/7b438f5a4af583ebe93e8ea59b91fcec69e7a808", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-13T10:00:28Z", "type": "forcePushed"}, {"oid": "da039e4bcd715bfbe6df57a8a09e62b122e6e26b", "url": "https://github.com/vividus-framework/vividus/commit/da039e4bcd715bfbe6df57a8a09e62b122e6e26b", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-13T13:35:40Z", "type": "forcePushed"}, {"oid": "dfc8f9448a234fceb6317c15d9abfafe5b8905ed", "url": "https://github.com/vividus-framework/vividus/commit/dfc8f9448a234fceb6317c15d9abfafe5b8905ed", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-13T13:49:14Z", "type": "commit"}, {"oid": "dfc8f9448a234fceb6317c15d9abfafe5b8905ed", "url": "https://github.com/vividus-framework/vividus/commit/dfc8f9448a234fceb6317c15d9abfafe5b8905ed", "message": "Fix handling of variables of different nesting step-levels\n\nSince Vividus supports nested steps, the variables of step-level\nshould be initialized and cleaned up according to their level.\nPreviously the variables of different step levels were stored in\na single collection, which was cleaned up after each step, as result\nthe nested steps could remove variables created at wrapping steps.", "committedDate": "2020-08-13T13:49:14Z", "type": "forcePushed"}]}