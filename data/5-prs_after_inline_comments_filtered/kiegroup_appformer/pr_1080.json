{"pr_number": 1080, "pr_title": "AF-2700: Create Heatmap internal component", "pr_createdAt": "2020-11-26T21:57:08Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1080", "timeline": [{"oid": "5069c6537d6c142b35324b49d0fa19bedefd6854", "url": "https://github.com/kiegroup/appformer/commit/5069c6537d6c142b35324b49d0fa19bedefd6854", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-11-27T19:30:01Z", "type": "forcePushed"}, {"oid": "d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "url": "https://github.com/kiegroup/appformer/commit/d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-11-27T22:52:03Z", "type": "forcePushed"}, {"oid": "85590509080dfb1818689d58a7180f953bf27a5e", "url": "https://github.com/kiegroup/appformer/commit/85590509080dfb1818689d58a7180f953bf27a5e", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-01T21:47:33Z", "type": "forcePushed"}, {"oid": "f2e372258969774cf4209452b1a74259202af9cd", "url": "https://github.com/kiegroup/appformer/commit/f2e372258969774cf4209452b1a74259202af9cd", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-01T21:48:40Z", "type": "forcePushed"}, {"oid": "79921f4e8dce92ace1f73addc43e781bde7da73b", "url": "https://github.com/kiegroup/appformer/commit/79921f4e8dce92ace1f73addc43e781bde7da73b", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-03T19:06:17Z", "type": "forcePushed"}, {"oid": "92cc3d7ed3aecdb1c7eb88454223911b93526944", "url": "https://github.com/kiegroup/appformer/commit/92cc3d7ed3aecdb1c7eb88454223911b93526944", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-03T19:13:51Z", "type": "forcePushed"}, {"oid": "c0c91855653bc4db82e0a64284a1e01df8d69ff0", "url": "https://github.com/kiegroup/appformer/commit/c0c91855653bc4db82e0a64284a1e01df8d69ff0", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-03T22:53:57Z", "type": "commit"}, {"oid": "c0c91855653bc4db82e0a64284a1e01df8d69ff0", "url": "https://github.com/kiegroup/appformer/commit/c0c91855653bc4db82e0a64284a1e01df8d69ff0", "message": "AF-2700: Create Heatmap internal component", "committedDate": "2020-12-03T22:53:57Z", "type": "forcePushed"}, {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "url": "https://github.com/kiegroup/appformer/commit/8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "message": "Only used external components are exported", "committedDate": "2020-12-04T22:27:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTAxMw==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471013", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComponentsGroupProducer {\n          \n          \n            \n            public class ComponentGroupProducer {", "author": "caponetto", "createdAt": "2020-12-07T12:33:23Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {", "originalCommit": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTIxOA==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471218", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \n          \n      \n    \n    \n  \n\nPlease remove these extra spaces.", "author": "caponetto", "createdAt": "2020-12-07T12:33:46Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/test/java/org/dashbuilder/transfer/DataTransferServicesTest.java", "diffHunk": "@@ -301,8 +304,8 @@ public void testDoExportWithoutNavigation() throws Exception {\n     \n     @Test\n     public void testDoExportWithComponents() throws Exception {\n-        when(externalComponentLoader.loadExternal()).thenReturn(asList(component(\"c1\")));\n-\n+        when(layoutComponentsHelper.findComponentsInTemplates((any()))).thenReturn(asList(\"c1\"));\n+        ", "originalCommit": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTc0MA==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471740", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LayoutComponentsHelper {\n          \n          \n            \n            public class LayoutComponentHelper {", "author": "caponetto", "createdAt": "2020-12-07T12:34:42Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/main/java/org/dashbuilder/transfer/LayoutComponentsHelper.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.transfer;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.uberfire.ext.layout.editor.api.PerspectiveServices;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutComponent;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutRow;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutTemplate;\n+\n+@ApplicationScoped\n+public class LayoutComponentsHelper {", "originalCommit": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1MzMzMQ==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537653331", "bodyText": "Can we have a boolean property like isProvided for ExternalComponent?\nThen componentService can return all components in a single remote call.\nThen you can filter them by isProvided to decide where to add them.\nSee, the point here is to do only one remote call instead of two.", "author": "caponetto", "createdAt": "2020-12-07T16:40:38Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {\n+\n+    private static final Constants i18n = Constants.INSTANCE;\n+\n+    private SyncBeanManager beanManager;\n+    private LayoutDragComponentPalette layoutDragComponentPalette;\n+    private Caller<ComponentService> componentService;\n+\n+    @Inject\n+    public ComponentsGroupProducer(Caller<ComponentService> externalComponentService,\n+                                   SyncBeanManager beanManager,\n+                                   LayoutDragComponentPalette layoutDragComponentPalette) {\n+        this.componentService = externalComponentService;\n+        this.beanManager = beanManager;\n+        this.layoutDragComponentPalette = layoutDragComponentPalette;\n+    }\n+\n+    public void onEditorFocus(@Observes PerspectiveEditorFocusEvent event) {\n+        loadComponents();\n+    }\n+\n+    public void loadComponents() {\n+\n+        componentService.call((List<ExternalComponent> components) -> addExternalComponents(components))\n+                        .listExternalComponents();\n+\n+        componentService.call((List<ExternalComponent> components) -> addInternalComponents(components))\n+                        .listProvidedComponents();", "originalCommit": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ3OTQ4Ng==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r538479486", "bodyText": "The issue I faced with the flag is that users could set the flag in their component's JSON - messing with our internal categories.\nBut if I only use this flag for internal communication I can force the flag when listing external to false and to true when listing provided components, so I will make this change!", "author": "jesuino", "createdAt": "2020-12-08T15:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1MzMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwNw==", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537656907", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void addInternalComponents(List<ExternalComponent> components) {\n          \n          \n            \n                public void addProvidedComponents(List<ExternalComponent> components) {", "author": "caponetto", "createdAt": "2020-12-07T16:45:13Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {\n+\n+    private static final Constants i18n = Constants.INSTANCE;\n+\n+    private SyncBeanManager beanManager;\n+    private LayoutDragComponentPalette layoutDragComponentPalette;\n+    private Caller<ComponentService> componentService;\n+\n+    @Inject\n+    public ComponentsGroupProducer(Caller<ComponentService> externalComponentService,\n+                                   SyncBeanManager beanManager,\n+                                   LayoutDragComponentPalette layoutDragComponentPalette) {\n+        this.componentService = externalComponentService;\n+        this.beanManager = beanManager;\n+        this.layoutDragComponentPalette = layoutDragComponentPalette;\n+    }\n+\n+    public void onEditorFocus(@Observes PerspectiveEditorFocusEvent event) {\n+        loadComponents();\n+    }\n+\n+    public void loadComponents() {\n+\n+        componentService.call((List<ExternalComponent> components) -> addExternalComponents(components))\n+                        .listExternalComponents();\n+\n+        componentService.call((List<ExternalComponent> components) -> addInternalComponents(components))\n+                        .listProvidedComponents();\n+    }\n+\n+    public void addExternalComponents(List<ExternalComponent> components) {\n+        String groupId = i18n.externalComponentsGroupName();\n+        if (!components.isEmpty()) {\n+            checkGroup(groupId);\n+        }\n+        components.forEach(comp -> {\n+            layoutDragComponentPalette.addDraggableComponent(groupId,\n+                                                             comp.getId(),\n+                                                             produceDragComponent(comp));\n+        });\n+\n+    }\n+\n+    public void addInternalComponents(List<ExternalComponent> components) {", "originalCommit": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "de1683e62498d0ea561bdbc798f5c888aeea3a4d", "url": "https://github.com/kiegroup/appformer/commit/de1683e62498d0ea561bdbc798f5c888aeea3a4d", "message": "Review changes", "committedDate": "2020-12-08T19:55:17Z", "type": "commit"}, {"oid": "ea974ce46f11013b4d8950e8c56b1b1454d61a66", "url": "https://github.com/kiegroup/appformer/commit/ea974ce46f11013b4d8950e8c56b1b1454d61a66", "message": "Adding test for listAllComponents", "committedDate": "2020-12-08T20:07:27Z", "type": "commit"}, {"oid": "070a9aa3220249234066899d60a9442740660579", "url": "https://github.com/kiegroup/appformer/commit/070a9aa3220249234066899d60a9442740660579", "message": "Removing static functions and using a class for component Api", "committedDate": "2020-12-09T17:30:59Z", "type": "commit"}, {"oid": "bcbc832e6d178e5fe0f97ccdbb0102e3ff138f4c", "url": "https://github.com/kiegroup/appformer/commit/bcbc832e6d178e5fe0f97ccdbb0102e3ff138f4c", "message": "improving process selector", "committedDate": "2020-12-10T14:03:03Z", "type": "commit"}, {"oid": "5e23b58540391ac86e2468c0616d4286dc870599", "url": "https://github.com/kiegroup/appformer/commit/5e23b58540391ac86e2468c0616d4286dc870599", "message": "Making process selector expanded again", "committedDate": "2020-12-10T16:39:55Z", "type": "commit"}, {"oid": "014ca570caff2894f61d9f069a16a378f0d54b8f", "url": "https://github.com/kiegroup/appformer/commit/014ca570caff2894f61d9f069a16a378f0d54b8f", "message": "increasing version and removing sample logo", "committedDate": "2020-12-11T12:49:35Z", "type": "commit"}]}