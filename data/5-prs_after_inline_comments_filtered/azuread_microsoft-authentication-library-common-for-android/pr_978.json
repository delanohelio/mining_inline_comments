{"pr_number": 978, "pr_title": "Some common utilities to avoid duplication.", "pr_createdAt": "2020-07-24T18:06:45Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978", "timeline": [{"oid": "9b5335efe94b0e0058680b569d1d8054c0544a27", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9b5335efe94b0e0058680b569d1d8054c0544a27", "message": "Some common utilities to avoid duplication.", "committedDate": "2020-07-24T18:04:44Z", "type": "commit"}, {"oid": "13ba7102523e419b39a6cc052cacf188ba12cd87", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/13ba7102523e419b39a6cc052cacf188ba12cd87", "message": "Undo damaged file.", "committedDate": "2020-07-24T18:09:24Z", "type": "commit"}, {"oid": "f980502ab89ddf5f7ee07e190d658d1855be0598", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f980502ab89ddf5f7ee07e190d658d1855be0598", "message": "Revert a damaged file", "committedDate": "2020-07-24T18:10:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxMzYwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978#discussion_r460213600", "bodyText": "Missing license info in this file", "author": "iambmelt", "createdAt": "2020-07-24T18:15:32Z", "path": "common/src/main/java/com/microsoft/identity/common/Utils.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.microsoft.identity.common;", "originalCommit": "f980502ab89ddf5f7ee07e190d658d1855be0598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxNDMwNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978#discussion_r460214307", "bodyText": "Yup.", "author": "AdamBJohnsonx", "createdAt": "2020-07-24T18:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxMzYwMA=="}], "type": "inlineReview"}, {"oid": "fe402cd390a4e87d22ce839e572322c4be15e98d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fe402cd390a4e87d22ce839e572322c4be15e98d", "message": "We have an existing utility stucture - use it.", "committedDate": "2020-07-24T18:22:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxNzgwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978#discussion_r460217803", "bodyText": "This is wrong...", "author": "AdamBJohnsonx", "createdAt": "2020-07-24T18:24:21Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/ObjectUtils.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.util;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * A set of utility classes for handling objects to avoid repetition of common patterns.  The idea here is that the barrier\n+ * to entry to this class should be high, and the pattern should be in use in multiple locations.  Some\n+ * of these may duplicate functionality present in the JVM in various iterations - once we get support\n+ * for that we should remove them.\n+ */\n+public final class ObjectUtils {\n+\n+    //Private constructor to discourage instantiation.\n+    private ObjectUtils() {\n+    }\n+\n+    /**\n+     * This is a local implementation of Objects.equals.  It is a null-safe equals execution.\n+     * This should be removed if we get to an API version that has Objects.equals.\n+     *\n+     * @param o1 the first object\n+     * @param o2 the second object\n+     * @return true if the objects are both null or if they are both non-null and o1.equals(o2).\n+     */\n+    public static boolean equals(@Nullable final Object o1, @Nullable final Object o2) {\n+        return (o1 == null ^ o2 == null) || (o1 != null && o1.equals(o2));", "originalCommit": "fe402cd390a4e87d22ce839e572322c4be15e98d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMzc1MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978#discussion_r460223750", "bodyText": "I've fixed it.  Lesson, check yourself.  I originally wrote not-equals, got feedback to extract it, agreed and went ahead.  But it wasn't equals I was getting.", "author": "AdamBJohnsonx", "createdAt": "2020-07-24T18:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxNzgwMw=="}], "type": "inlineReview"}, {"oid": "6077952311739f44034981fa6809bfa8d0116685", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6077952311739f44034981fa6809bfa8d0116685", "message": "Fix the equals logic from when I extracted it from not-equals.", "committedDate": "2020-07-24T18:34:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDA0MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/978#discussion_r460224041", "bodyText": "I feel pretty safe about this now because Android Studio offers to replace this with Objects.equals().", "author": "AdamBJohnsonx", "createdAt": "2020-07-24T18:37:18Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/ObjectUtils.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.util;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * A set of utility classes for handling objects to avoid repetition of common patterns.  The idea here is that the barrier\n+ * to entry to this class should be high, and the pattern should be in use in multiple locations.  Some\n+ * of these may duplicate functionality present in the JVM in various iterations - once we get support\n+ * for that we should remove them.\n+ */\n+public final class ObjectUtils {\n+\n+    //Private constructor to discourage instantiation.\n+    private ObjectUtils() {\n+    }\n+\n+    /**\n+     * This is a local implementation of Objects.equals.  It is a null-safe equals execution.\n+     * This should be removed if we get to an API version that has Objects.equals.\n+     *\n+     * @param o1 the first object\n+     * @param o2 the second object\n+     * @return true if the objects are both null or if they are both non-null and o1.equals(o2).\n+     */\n+    public static boolean equals(@Nullable final Object o1, @Nullable final Object o2) {\n+        return (o1 == o2) || (o1 != null && o1.equals(o2));", "originalCommit": "6077952311739f44034981fa6809bfa8d0116685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}