{"pr_number": 891, "pr_title": "Changes to exchange broker request/results as gzip compressed byte array to reduce pay load size", "pr_createdAt": "2020-04-16T01:06:34Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891", "timeline": [{"oid": "9e7b2123eb75b5fd5c3db8ec1f3e9c7f59d22954", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9e7b2123eb75b5fd5c3db8ec1f3e9c7f59d22954", "message": "Sending broker request as compressed byte array to reduce pay load size", "committedDate": "2020-04-14T23:58:24Z", "type": "commit"}, {"oid": "441d0fb422b597f2000179a31c2abe2f5c68c169", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/441d0fb422b597f2000179a31c2abe2f5c68c169", "message": "More chnages", "committedDate": "2020-04-15T01:04:38Z", "type": "commit"}, {"oid": "66dbf76fba178293454328cafe84d7102f4d4bb1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/66dbf76fba178293454328cafe84d7102f4d4bb1", "message": "Common Version update", "committedDate": "2020-04-15T05:52:45Z", "type": "commit"}, {"oid": "af98fdcf95968ed05ccb8e2092497a5317bbaebe", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/af98fdcf95968ed05ccb8e2092497a5317bbaebe", "message": "Broker Account changes", "committedDate": "2020-04-15T22:34:52Z", "type": "commit"}, {"oid": "558281c98cb7d94ea6a4831d1f4a6ca5cbc7ec09", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/558281c98cb7d94ea6a4831d1f4a6ca5cbc7ec09", "message": "Version update", "committedDate": "2020-04-15T22:35:16Z", "type": "commit"}, {"oid": "35d85fcb27dddca4464d9493660e492a8672c1fa", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/35d85fcb27dddca4464d9493660e492a8672c1fa", "message": "Reverting RC version", "committedDate": "2020-04-16T00:45:45Z", "type": "commit"}, {"oid": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7c26a4215ca60a41c1301192aa93d60e8ea06788", "message": "Minor updates", "committedDate": "2020-04-16T01:05:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMTY4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409311681", "bodyText": "nit: run the stylize tool. here and everywhere.", "author": "rpdome", "createdAt": "2020-04-16T06:29:34Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -451,14 +492,38 @@ public Bundle bundleFromAccounts(@NonNull final List<ICacheRecord> cacheRecords)\n         final Bundle resultBundle = new Bundle();\n \n         if (cacheRecords != null) {\n-            resultBundle.putString(BROKER_ACCOUNTS, JsonExtensions.getJsonStringFromICacheRecordList(cacheRecords));\n+            final String jsonString = JsonExtensions.getJsonStringFromICacheRecordList(cacheRecords);\n+            try {\n+                byte[] bytes = GzipUtil.compressString(jsonString);\n+                Logger.info(TAG, \"Get accounts, raw payload size :\"\n+                        + jsonString.getBytes().length + \" compressed size \" + bytes.length\n+                );\n+                resultBundle.putByteArray(BROKER_ACCOUNTS_COMPRESSED, bytes);\n+            } catch (IOException e) {\n+                Logger.error(TAG, \" Failed to compress account list to bytes, sending as jsonString\", e);\n+                resultBundle.putString(BROKER_ACCOUNTS, jsonString);\n+            }\n+\n         }\n \n         return resultBundle;\n     }\n \n     public List<ICacheRecord> getAccountsFromResultBundle(@NonNull final Bundle bundle) throws BaseException {\n-        final String accountJson = bundle.getString(BROKER_ACCOUNTS);\n+\n+        String accountJson;\n+        if(bundle.containsKey(BROKER_ACCOUNTS_COMPRESSED)){\n+            try {\n+                accountJson = GzipUtil.decompressBytesToString(\n+                        bundle.getByteArray(BROKER_ACCOUNTS_COMPRESSED)\n+                );\n+            } catch (IOException e) {\n+                Logger.error(TAG, \" Failed to decompress account list to bytes\", e);\n+                throw  new BaseException(ErrorStrings.UNKNOWN_ERROR, \" Failed to decompress account list to bytes\");\n+            }\n+        }else {", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMjYyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409312625", "bodyText": "How would this work with older MSAL? Do we need a version check to determine if we should compress?", "author": "rpdome", "createdAt": "2020-04-16T06:31:59Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -451,14 +492,38 @@ public Bundle bundleFromAccounts(@NonNull final List<ICacheRecord> cacheRecords)\n         final Bundle resultBundle = new Bundle();\n \n         if (cacheRecords != null) {\n-            resultBundle.putString(BROKER_ACCOUNTS, JsonExtensions.getJsonStringFromICacheRecordList(cacheRecords));\n+            final String jsonString = JsonExtensions.getJsonStringFromICacheRecordList(cacheRecords);\n+            try {\n+                byte[] bytes = GzipUtil.compressString(jsonString);\n+                Logger.info(TAG, \"Get accounts, raw payload size :\"\n+                        + jsonString.getBytes().length + \" compressed size \" + bytes.length\n+                );\n+                resultBundle.putByteArray(BROKER_ACCOUNTS_COMPRESSED, bytes);", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMDMwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409320300", "bodyText": "Yup, thanks for pointing out. I was planning to  address issue tomm  using our hello handshake, didn\u2019t get time to look into. For now I got the test build to Teams  with these changes to test if it fixes the issue with new MSAL and new broker", "author": "kreedula", "createdAt": "2020-04-16T06:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMjYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNzMwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412617301", "bodyText": "implemented here : 6b19efd", "author": "kreedula", "createdAt": "2020-04-22T02:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxMjYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3NzUxMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409977510", "bodyText": "compressed bytes size?", "author": "shahzaibj", "createdAt": "2020-04-17T03:52:36Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -196,6 +189,54 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n \n     }\n \n+    public Bundle bundleFromBrokerResult(final BrokerResult brokerResult){\n+        final Bundle resultBundle = new Bundle();\n+        final String brokerResultString = sRequestAdapterGsonInstance.toJson(\n+                brokerResult,\n+                BrokerResult.class\n+        );\n+        try {\n+            byte[] compressedBytes = compressString(brokerResultString);\n+            Logger.info(TAG, \"Broker Result, raw payload size:\"\n+                    + brokerResultString.getBytes().length + \" ,compressed bytes \" + compressedBytes.length", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODA3OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409978078", "bodyText": "Let's do two logs here: one for error to indicate that compression failed, and then a second as warn to re-iterate that and indicate that we are going to be sending jsonString", "author": "shahzaibj", "createdAt": "2020-04-17T03:54:43Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -196,6 +189,54 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n \n     }\n \n+    public Bundle bundleFromBrokerResult(final BrokerResult brokerResult){\n+        final Bundle resultBundle = new Bundle();\n+        final String brokerResultString = sRequestAdapterGsonInstance.toJson(\n+                brokerResult,\n+                BrokerResult.class\n+        );\n+        try {\n+            byte[] compressedBytes = compressString(brokerResultString);\n+            Logger.info(TAG, \"Broker Result, raw payload size:\"\n+                    + brokerResultString.getBytes().length + \" ,compressed bytes \" + compressedBytes.length\n+            );\n+            resultBundle.putByteArray(\n+                    AuthenticationConstants.Broker.BROKER_RESULT_V2_COMPRESSED,\n+                    compressedBytes\n+            );\n+        }catch (IOException e){\n+            Logger.error(TAG, \"Failed to compress Broker Result, sending as jsonString \", e);", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNzY4MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412617680", "bodyText": "I don't see the necessity to add two logs here , given we can convey the message using one and theoretically we should never hit this", "author": "kreedula", "createdAt": "2020-04-22T02:13:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODkwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409978900", "bodyText": "Can inputString be null? If yes, then we should do a null-check, otherwise add non-null annotation.", "author": "shahzaibj", "createdAt": "2020-04-17T03:58:13Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/GzipUtil.java", "diffHunk": "@@ -0,0 +1,70 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+\n+package com.microsoft.identity.common.internal.util;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.zip.GZIPInputStream;\n+import java.util.zip.GZIPOutputStream;\n+\n+public class GzipUtil {\n+\n+    /**\n+     * Util method which compress the input String to bytes using gzip compression.\n+     */\n+    public static byte[] compressString(final String inputString) throws IOException {", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNzgwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412617800", "bodyText": "Added @NonNull", "author": "kreedula", "createdAt": "2020-04-22T02:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODkwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3OTA2NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r409979065", "bodyText": "Can someone pass null array here?", "author": "shahzaibj", "createdAt": "2020-04-17T03:58:47Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/GzipUtil.java", "diffHunk": "@@ -0,0 +1,70 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+\n+package com.microsoft.identity.common.internal.util;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.zip.GZIPInputStream;\n+import java.util.zip.GZIPOutputStream;\n+\n+public class GzipUtil {\n+\n+    /**\n+     * Util method which compress the input String to bytes using gzip compression.\n+     */\n+    public static byte[] compressString(final String inputString) throws IOException {\n+        byte[] bytes = inputString.getBytes(\"UTF-8\");\n+        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        GZIPOutputStream gzipOutputStream = new GZIPOutputStream(byteArrayOutputStream);\n+        gzipOutputStream.write(bytes, 0, bytes.length);\n+        gzipOutputStream.flush();\n+        gzipOutputStream.close();\n+        byte[] result = byteArrayOutputStream.toByteArray();\n+        byteArrayOutputStream.close();\n+        return result;\n+    }\n+\n+    /**\n+     * Util method which converts the gzip compressed bytes to  String.\n+     */\n+    public static String decompressBytesToString(final byte[] compressedBytes) throws IOException {", "originalCommit": "7c26a4215ca60a41c1301192aa93d60e8ea06788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNzkzNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412617934", "bodyText": "Added @NonNull", "author": "kreedula", "createdAt": "2020-04-22T02:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3OTA2NQ=="}], "type": "inlineReview"}, {"oid": "db228c93b333637d7019e4669c6c3f1e801a2c98", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/db228c93b333637d7019e4669c6c3f1e801a2c98", "message": "Merge branch 'dev' into kreedula/compress-request-data", "committedDate": "2020-04-20T23:39:58Z", "type": "commit"}, {"oid": "6b19efd1418ec12e5e9adad0d81ee712f016700f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6b19efd1418ec12e5e9adad0d81ee712f016700f", "message": "Changes to add negotiated protocol version to all calls", "committedDate": "2020-04-22T01:57:16Z", "type": "commit"}, {"oid": "9696933cfead8f755fa3aecc9b6454a6ddf821bd", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9696933cfead8f755fa3aecc9b6454a6ddf821bd", "message": "Addressing comments", "committedDate": "2020-04-22T02:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMjY5OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412622699", "bodyText": "needs formatting", "author": "shahzaibj", "createdAt": "2020-04-22T02:28:36Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -178,10 +183,15 @@ public BrokerInteractiveTokenCommandParameters brokerInteractiveParametersFromAc\n \n         final Intent intent = callingActivity.getIntent();\n \n-        final BrokerRequest brokerRequest = sRequestAdapterGsonInstance.fromJson(\n-                intent.getStringExtra(AuthenticationConstants.Broker.BROKER_REQUEST_V2),\n-                BrokerRequest.class\n-        );\n+        final BrokerRequest brokerRequest = brokerRequestFromBundle(intent.getExtras());\n+\n+        if (brokerRequest == null) {\n+            Logger.error(TAG, \"Broker Result is null, returning empty parameters, \" +\n+                            \"validation is expected to fail\",\n+                    null)\n+            ;", "originalCommit": "9696933cfead8f755fa3aecc9b6454a6ddf821bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMjkxNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412622914", "bodyText": "needs formatting", "author": "shahzaibj", "createdAt": "2020-04-22T02:29:11Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -262,10 +274,16 @@ public BrokerSilentTokenCommandParameters brokerSilentParametersFromBundle(\n \n         Logger.info(TAG, \"Constructing BrokerAcquireTokenSilentOperationParameters from result bundle\");\n \n-        final BrokerRequest brokerRequest = sRequestAdapterGsonInstance.fromJson(\n-                bundle.getString(AuthenticationConstants.Broker.BROKER_REQUEST_V2),\n-                BrokerRequest.class\n-        );\n+        final BrokerRequest brokerRequest = brokerRequestFromBundle(bundle);\n+\n+        if (brokerRequest == null) {\n+            Logger.error(TAG, \"Broker Result is null, returning empty parameters, \" +\n+                            \"validation is expected to fail\",\n+                    null)\n+            ;", "originalCommit": "9696933cfead8f755fa3aecc9b6454a6ddf821bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTE3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412625177", "bodyText": "I see almost same code below in getRequestBundleForAcquireTokenSilent. I think we can move this logic to its own method.", "author": "shahzaibj", "createdAt": "2020-04-22T02:36:04Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -362,17 +412,78 @@ public Bundle getRequestBundleForHello(@NonNull final CommandParameters paramete\n         return requestBundle;\n     }\n \n-    public Bundle getRequestBundleForAcquireTokenSilent(final SilentTokenCommandParameters parameters) {\n+    public Bundle getRequestBundleForAcquireTokenInteractive(@NonNull final InteractiveTokenCommandParameters parameters,\n+                                                             @Nullable final String negotiatedBrokerProtocolVersion) {\n+        final BrokerRequest brokerRequest = brokerRequestFromAcquireTokenParameters(parameters);\n+        final Bundle requestBundle = new Bundle();\n+\n+        if (BrokerProtocolVersionUtil.canCompressBrokerPayloads(negotiatedBrokerProtocolVersion)) {\n+            try {\n+                final String jsonRequestString = sRequestAdapterGsonInstance.toJson(brokerRequest, BrokerRequest.class);\n+                byte[] compressedBytes = compressString(jsonRequestString);\n+                Logger.info(TAG, \"Broker Request, raw payload size:\"\n+                        + jsonRequestString.getBytes().length + \" ,compressed bytes size: \" + compressedBytes.length\n+                );\n+                requestBundle.putByteArray(\n+                        AuthenticationConstants.Broker.BROKER_REQUEST_V2_COMPRESSED,\n+                        compressedBytes\n+                );\n+\n+            } catch (IOException e) {\n+                Logger.error(TAG, \"Compression to bytes failed, sending broker request as String\", e);\n+                requestBundle.putString(\n+                        AuthenticationConstants.Broker.BROKER_REQUEST_V2,\n+                        sRequestAdapterGsonInstance.toJson(brokerRequest, BrokerRequest.class)\n+                );\n+            }\n+        } else {\n+            Logger.info(TAG, \"Broker protocol version: \" + negotiatedBrokerProtocolVersion +\n+                    \" lower than compression changes, sending as string\"\n+            );\n+            requestBundle.putString(\n+                    AuthenticationConstants.Broker.BROKER_REQUEST_V2,\n+                    sRequestAdapterGsonInstance.toJson(brokerRequest, BrokerRequest.class)\n+            );\n+        }\n+        return requestBundle;", "originalCommit": "9696933cfead8f755fa3aecc9b6454a6ddf821bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzMTgwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r412631800", "bodyText": "thanks for spotting, addressed via c8ba307", "author": "kreedula", "createdAt": "2020-04-22T02:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTE3Nw=="}], "type": "inlineReview"}, {"oid": "c8ba307d2e21dec24a677bdc2a04db7ef91608d5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c8ba307d2e21dec24a677bdc2a04db7ef91608d5", "message": "Addressing comments", "committedDate": "2020-04-22T02:53:35Z", "type": "commit"}, {"oid": "9fe36d414f1a2d6b61a157ae754d0ba1503123af", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9fe36d414f1a2d6b61a157ae754d0ba1503123af", "message": "Addressing comments", "committedDate": "2020-04-22T02:54:59Z", "type": "commit"}, {"oid": "b2458980a052a3486ce764830aed3400f77989f8", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b2458980a052a3486ce764830aed3400f77989f8", "message": "Merge branch 'dev' into kreedula/compress-request-data", "committedDate": "2020-04-22T22:39:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODIyNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r413388227", "bodyText": "nit: nullOrEmpty?", "author": "rpdome", "createdAt": "2020-04-22T22:56:47Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/BrokerProtocolVersionUtil.java", "diffHunk": "@@ -0,0 +1,47 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+\n+package com.microsoft.identity.common.internal.util;\n+\n+import android.text.TextUtils;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Class to provide util methods to compare different features with respect to Broker Protocol version.\n+ */\n+public class BrokerProtocolVersionUtil {\n+\n+    public static final String BROKER_PROTOCOL_COMPRESSION_CHANGES_MINIMUM_VERSION = \"5.0\";\n+\n+    public static boolean canCompressBrokerPayloads(@Nullable String negotiatedBrokerProtocol) {\n+        if (TextUtils.isEmpty(negotiatedBrokerProtocol)) {", "originalCommit": "b2458980a052a3486ce764830aed3400f77989f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQwMzM0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/891#discussion_r413403348", "bodyText": "TextUtils.isEmpty infact does check for null and empty", "author": "kreedula", "createdAt": "2020-04-22T23:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODIyNw=="}], "type": "inlineReview"}]}