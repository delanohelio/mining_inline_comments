{"pr_number": 785, "pr_title": "Add Exception Type to Broker Result to transform to correct exception", "pr_createdAt": "2020-01-18T00:27:33Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785", "timeline": [{"oid": "90255214ad3bd7790bc294dc8368480084f99743", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/90255214ad3bd7790bc294dc8368480084f99743", "message": "Adding thread safety", "committedDate": "2020-01-14T18:52:50Z", "type": "commit"}, {"oid": "e33d698f175d11dc96b2c428648e26585328c616", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e33d698f175d11dc96b2c428648e26585328c616", "message": "Merge branch 'dev' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into dev", "committedDate": "2020-01-17T22:38:46Z", "type": "commit"}, {"oid": "d92601285bb09c6c6a46739c2623dfd406ee38fa", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d92601285bb09c6c6a46739c2623dfd406ee38fa", "message": "Add Exception Type to Broker Result to transform to correct exception in MSAL", "committedDate": "2020-01-18T00:20:09Z", "type": "commit"}, {"oid": "b072f2f967fed653468e22b3dadb78c5391b60f2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b072f2f967fed653468e22b3dadb78c5391b60f2", "message": "Fix names", "committedDate": "2020-01-18T00:23:41Z", "type": "commit"}, {"oid": "c4026f0dc374329278b75d73473a03bdab86c496", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c4026f0dc374329278b75d73473a03bdab86c496", "message": "Merge branch 'dev' into kreedula/fix-exception-transform", "committedDate": "2020-01-18T00:42:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MzgzMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368193830", "bodyText": "ErrorStrings.NO_TOKENS_FOUND is another case for UiRequiredException", "author": "shahzaibj", "createdAt": "2020-01-18T01:10:55Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,\n+                    \"Received a IntuneAppProtectionPolicyRequiredException exception from Broker: \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getIntuneProtectionRequiredException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(UserCancelException.sName)){\n+            Logger.warn(TAG, \"Received a User cancelled exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UserCancelException();\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ClientException.sName)){\n+            Logger.warn(TAG, \"Received a ClientException exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ArgumentException.sName)){\n+            Logger.warn(TAG, \"Received a Argument exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ArgumentException(\n+                    ArgumentException.ACQUIRE_TOKEN_OPERATION_NAME,\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        // Default to ClientException if null\n+        if(baseException == null){\n+            Logger.warn(TAG, \" Exception type is unknown : \" + exceptionType\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        baseException.setCliTelemErrorCode(brokerResult.getCliTelemErrorCode());\n+        baseException.setCliTelemSubErrorCode(brokerResult.getCliTelemSubErrorCode());\n+        baseException.setCorrelationId(brokerResult.getCorrelationId());\n+        baseException.setSpeRing(brokerResult.getSpeRing());\n+        baseException.setRefreshTokenAge(brokerResult.getRefreshTokenAge());\n+\n+        return baseException;\n+    }\n+\n+\n+    /**\n+     * Method to get the right base exception based on error codes.\n+     * Note : In newer versions of Broker, exception type will be sent and is used to determine the right exception.\n+     *\n+     * This method is to support legacy broker versions (3.1.8 or below)\n+     * @return BaseException\n+     */\n+    private BaseException getBaseExceptionFromErrorCodes(@NonNull final BrokerResult brokerResult){\n         final String errorCode = brokerResult.getErrorCode();\n+        final BaseException baseException;\n \n         if (AuthenticationConstants.OAuth2ErrorCode.INTERACTION_REQUIRED.equalsIgnoreCase(errorCode) ||\n-                AuthenticationConstants.OAuth2ErrorCode.INVALID_GRANT.equalsIgnoreCase(errorCode)) {\n+                AuthenticationConstants.OAuth2ErrorCode.INVALID_GRANT.equalsIgnoreCase(errorCode) ||\n+                ErrorStrings.INVALID_BROKER_REFRESH_TOKEN.equalsIgnoreCase(errorCode)) {", "originalCommit": "c4026f0dc374329278b75d73473a03bdab86c496", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MzgzNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369783837", "bodyText": "Thanks for pointing out.", "author": "kreedula", "createdAt": "2020-01-22T20:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MzgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NDAwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368194001", "bodyText": "might be better to use else if here and below", "author": "shahzaibj", "createdAt": "2020-01-18T01:12:02Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){", "originalCommit": "c4026f0dc374329278b75d73473a03bdab86c496", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MzcwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369783704", "bodyText": "Done", "author": "kreedula", "createdAt": "2020-01-22T20:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NDAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTQzOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368195439", "bodyText": "May be we can move log statement outside the if blocks, and call it only once as follows:\nLogger.warn(TAG, \"Received a \" + exceptionType +  \" from Broker : \" + brokerResult.getErrorCode() );", "author": "shahzaibj", "createdAt": "2020-01-18T01:23:28Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,", "originalCommit": "c4026f0dc374329278b75d73473a03bdab86c496", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368195711", "bodyText": "How do we know that it is ACQUIRE_TOKEN_OPERATION_NAME?", "author": "shahzaibj", "createdAt": "2020-01-18T01:25:59Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,\n+                    \"Received a IntuneAppProtectionPolicyRequiredException exception from Broker: \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getIntuneProtectionRequiredException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(UserCancelException.sName)){\n+            Logger.warn(TAG, \"Received a User cancelled exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UserCancelException();\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ClientException.sName)){\n+            Logger.warn(TAG, \"Received a ClientException exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ArgumentException.sName)){\n+            Logger.warn(TAG, \"Received a Argument exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ArgumentException(\n+                    ArgumentException.ACQUIRE_TOKEN_OPERATION_NAME,", "originalCommit": "c4026f0dc374329278b75d73473a03bdab86c496", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NDM5MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369784390", "bodyText": "Good point, I introduced a new operation to indicate that it'a broker request", "author": "kreedula", "createdAt": "2020-01-22T20:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjExNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369896116", "bodyText": "What about silent?", "author": "shahzaibj", "createdAt": "2020-01-23T01:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjI3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369896270", "bodyText": "ACQUIRE_TOKEN_SILENT_OPERATION_NAME ?", "author": "shahzaibj", "createdAt": "2020-01-23T01:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNzc1NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r370337754", "bodyText": "I have introduced a new operation name BROKER_TOKEN_REQUEST_OPERATION_NAME which is passed here, since the basic MSAL argument validation is successful and is sent to broker, here if an argument exception is thrown it would be of broker. For now I added a generic operation name here, if need specific things in the future it can be added as needed", "author": "kreedula", "createdAt": "2020-01-23T20:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NzcwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368197709", "bodyText": "return ArgumentException.class.getName();?\nHere and everywhere.", "author": "rpdome", "createdAt": "2020-01-18T01:50:58Z", "path": "common/src/main/java/com/microsoft/identity/common/exception/ArgumentException.java", "diffHunk": "@@ -60,4 +62,9 @@ public String getArgumentName() {\n         return mArgumentName;\n     }\n \n+    @Override\n+    public String getExceptionName(){\n+        return sName;", "originalCommit": "c4026f0dc374329278b75d73473a03bdab86c496", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NDk3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r369784970", "bodyText": "I'm using sName to compare , so that in future if the value of sName is changed , the logic would work as expected", "author": "kreedula", "createdAt": "2020-01-22T20:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NzcwOQ=="}], "type": "inlineReview"}, {"oid": "92ae1c0ddce0f9fd60edc2a2ef04cfee6c4f190f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/92ae1c0ddce0f9fd60edc2a2ef04cfee6c4f190f", "message": "Addressing comments", "committedDate": "2020-01-22T20:21:38Z", "type": "commit"}, {"oid": "0762c91e22ed4e136f3113a3905869c0e1e208ec", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0762c91e22ed4e136f3113a3905869c0e1e208ec", "message": "Merge branch 'kreedula/fix-exception-transform' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kreedula/fix-exception-transform", "committedDate": "2020-01-22T20:22:36Z", "type": "commit"}, {"oid": "8c5855ba68cb7c18d15b099ebb998343868c1566", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8c5855ba68cb7c18d15b099ebb998343868c1566", "message": "Merge branch 'dev' into kreedula/fix-exception-transform", "committedDate": "2020-01-22T21:21:08Z", "type": "commit"}, {"oid": "0d349734b518f4ae92df3870b5f4b1a714660a43", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0d349734b518f4ae92df3870b5f4b1a714660a43", "message": "Addressing comments", "committedDate": "2020-01-23T19:35:57Z", "type": "commit"}, {"oid": "d9753eb45af98c4ad37557405c1cb407636f9d9d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d9753eb45af98c4ad37557405c1cb407636f9d9d", "message": "Merge branch 'kreedula/fix-exception-transform' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kreedula/fix-exception-transform", "committedDate": "2020-01-23T19:36:12Z", "type": "commit"}, {"oid": "319048e45ecc0b26958953e9f564e5f1cffc59ef", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/319048e45ecc0b26958953e9f564e5f1cffc59ef", "message": "Merge branch 'dev' into kreedula/fix-exception-transform", "committedDate": "2020-01-23T20:32:32Z", "type": "commit"}]}