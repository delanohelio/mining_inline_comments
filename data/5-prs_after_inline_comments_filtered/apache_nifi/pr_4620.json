{"pr_number": 4620, "pr_title": "NIFI-6242 PutFileTransfer generation incorrect provenance event", "pr_createdAt": "2020-10-23T18:20:08Z", "pr_url": "https://github.com/apache/nifi/pull/4620", "timeline": [{"oid": "2e1cfbe4db8691a43d44a650a720b43e3c77ad38", "url": "https://github.com/apache/nifi/commit/2e1cfbe4db8691a43d44a650a720b43e3c77ad38", "message": "NIFI-6242 PutFileTransfer generation incorrect provenance event", "committedDate": "2020-11-20T17:14:05Z", "type": "forcePushed"}, {"oid": "7e22a1b4c1d70c98157a8ea74cd09847c3ae8277", "url": "https://github.com/apache/nifi/commit/7e22a1b4c1d70c98157a8ea74cd09847c3ae8277", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-11-23T17:14:40Z", "type": "forcePushed"}, {"oid": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "url": "https://github.com/apache/nifi/commit/12598e5f9a8193d2799e9265fdf16fe339e6a005", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-11-23T17:21:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MTg1NQ==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r537861855", "bodyText": "Put a blank line between tests", "author": "NissimShiman", "createdAt": "2020-12-07T21:55:24Z", "path": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java", "diffHunk": "@@ -144,6 +146,61 @@ public void basicFileUpload() throws IOException {\n         // Check file was uploaded\n         Assert.assertTrue(results.exists(\"c:\\\\data\\\\randombytes-1\"));\n     }\n+    @Test", "originalCommit": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNDE0Ng==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r540224146", "bodyText": "Put in blank line", "author": "tlsmith109", "createdAt": "2020-12-10T14:43:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MTg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5MDE3NA==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r538690174", "bodyText": "use:\nif (context.getProperty(FileTransfer.HOSTNAME).isExpressionLanguagePresent())\ninstead", "author": "NissimShiman", "createdAt": "2020-12-08T18:21:22Z", "path": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutFileTransfer.java", "diffHunk": "@@ -95,12 +96,19 @@ public void onTrigger(final ProcessContext context, final ProcessSession session\n         }\n \n         final ComponentLog logger = getLogger();\n-        final String hostname = context.getProperty(FileTransfer.HOSTNAME).evaluateAttributeExpressions(flowFile).getValue();\n+\n+        String hostname = context.getProperty(FileTransfer.HOSTNAME).evaluateAttributeExpressions(flowFile).getValue();\n+        //Check for constant attribute\n+        final boolean staticHostname = hostname!=null && !hostname.isEmpty() && Objects.equals(hostname, context.getProperty(FileTransfer.HOSTNAME)\n+                                 .getValue());\n \n         final int maxNumberOfFiles = context.getProperty(FileTransfer.BATCH_SIZE).asInteger();\n         int fileCount = 0;\n         try (final T transfer = getFileTransfer(context)) {\n             do {\n+                if(!staticHostname) {", "originalCommit": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTIyOQ==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r539539229", "bodyText": "Agree, good to know that exists! Also will allow me to not change test to be able to allow expression evaluation.", "author": "tlsmith109", "createdAt": "2020-12-09T18:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5MDE3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMzAyNw==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r538713027", "bodyText": "remove putSFTPRunner.run();\ntest case should pass without it as well", "author": "NissimShiman", "createdAt": "2020-12-08T18:44:13Z", "path": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSFTP.java", "diffHunk": "@@ -243,9 +244,58 @@ public void testPutSFTPBatching() throws IOException {\n         putSFTPRunner.clearTransferState();\n     }\n \n+    @Test\n+    public void testPutSFTPProvenanceTransitUri() throws IOException {\n+        emptyTestDirectory();\n+\n+        putSFTPRunner.setProperty(SFTPTransfer.REJECT_ZERO_BYTE, \"false\");\n+        Map<String,String> attributes = new HashMap<>();\n+        attributes.put(\"filename\", \"testfile.txt\");\n+        attributes.put(\"transfer-host\",\"localhost\");\n+\n+        putSFTPRunner.enqueue(Paths.get(testFile), attributes);\n+\n+        attributes = new HashMap<>();\n+        attributes.put(\"filename\", \"testfile1.txt\");\n+        attributes.put(\"transfer-host\",\"127.0.0.1\");\n+\n+        putSFTPRunner.enqueue(Paths.get(testFile), attributes);\n+        putSFTPRunner.run();\n+\n+        putSFTPRunner.assertTransferCount(PutSFTP.REL_SUCCESS, 2);\n+        putSFTPRunner.getProvenanceEvents().forEach(k->{\n+            assert(k.toString().contains(\"sftp://localhost\"));\n+        });\n+        //Two files in batch, should have 2 transferred to success, 0 to failure\n+        putSFTPRunner.assertTransferCount(PutSFTP.REL_SUCCESS, 2);\n+        putSFTPRunner.assertTransferCount(PutSFTP.REL_REJECT, 0);\n+\n+        MockFlowFile flowFile1 = putSFTPRunner.getFlowFilesForRelationship(PutFileTransfer.REL_SUCCESS).get(0);\n+        MockFlowFile flowFile2 = putSFTPRunner.getFlowFilesForRelationship(PutFileTransfer.REL_SUCCESS).get(1);\n+        putSFTPRunner.clearProvenanceEvents();\n+        putSFTPRunner.clearTransferState();\n+\n+        //Test different destinations on flow file attributes\n+        putSFTPRunner.setProperty(SFTPTransfer.HOSTNAME,\"${transfer-host}\"); //set to derive hostname\n+\n+        putSFTPRunner.enqueue(flowFile1);\n+        putSFTPRunner.run();", "originalCommit": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNTYwMA==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r539615600", "bodyText": "No guarantee of order of provenance events unless separate runs for result assertions.", "author": "tlsmith109", "createdAt": "2020-12-09T20:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMzAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxODk2Mw==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r538718963", "bodyText": "Assuming you agree with comments above, this can be removed (as well as from lines 137/138 as well)", "author": "NissimShiman", "createdAt": "2020-12-08T18:52:26Z", "path": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java", "diffHunk": "@@ -144,6 +146,61 @@ public void basicFileUpload() throws IOException {\n         // Check file was uploaded\n         Assert.assertTrue(results.exists(\"c:\\\\data\\\\randombytes-1\"));\n     }\n+    @Test\n+    public void basicProvenanceEventTest() throws IOException {\n+        TestRunner runner = TestRunners.newTestRunner(PutFTP.class);\n+        runner.setValidateExpressionUsage(false);", "originalCommit": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNzMzMQ==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r539617331", "bodyText": "Agree that since replacing test with method above, no longer required. Will remove.", "author": "tlsmith109", "createdAt": "2020-12-09T20:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxODk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcyMTE2MQ==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r538721161", "bodyText": "Remove runner.run()", "author": "NissimShiman", "createdAt": "2020-12-08T18:55:24Z", "path": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java", "diffHunk": "@@ -144,6 +146,61 @@ public void basicFileUpload() throws IOException {\n         // Check file was uploaded\n         Assert.assertTrue(results.exists(\"c:\\\\data\\\\randombytes-1\"));\n     }\n+    @Test\n+    public void basicProvenanceEventTest() throws IOException {\n+        TestRunner runner = TestRunners.newTestRunner(PutFTP.class);\n+        runner.setValidateExpressionUsage(false);\n+\n+        runner.setProperty(FTPTransfer.HOSTNAME, \"localhost\");\n+        runner.setProperty(FTPTransfer.USERNAME, username);\n+        runner.setProperty(FTPTransfer.PASSWORD, password);\n+        runner.setProperty(FTPTransfer.PORT, Integer.toString(ftpPort));\n+\n+        // Get two flowfiles to test by running data\n+        try (FileInputStream fis = new FileInputStream(\"src/test/resources/randombytes-1\")) {\n+            Map<String, String> attributes = new HashMap<String, String>();\n+            attributes.put(CoreAttributes.FILENAME.key(), \"randombytes-1\");\n+            attributes.put(\"transfer-host\", \"localhost\");\n+            runner.enqueue(fis, attributes);\n+            runner.run();\n+        }\n+        try (FileInputStream fis = new FileInputStream(\"src/test/resources/hello.txt\")) {\n+            Map<String, String> attributes = new HashMap<String, String>();\n+            attributes.put(CoreAttributes.FILENAME.key(), \"hello.txt\");\n+\n+            attributes.put(\"transfer-host\", \"127.0.0.1\");\n+            runner.enqueue(fis, attributes);\n+            runner.run();\n+        }\n+        runner.assertQueueEmpty();\n+        runner.assertTransferCount(PutFTP.REL_SUCCESS, 2);\n+\n+        MockFlowFile flowFile1 = runner.getFlowFilesForRelationship(PutFileTransfer.REL_SUCCESS).get(0);\n+\n+        MockFlowFile flowFile2 = runner.getFlowFilesForRelationship(PutFileTransfer.REL_SUCCESS).get(1);\n+\n+        runner.clearProvenanceEvents();\n+        runner.clearTransferState();\n+        HashMap<String, String> map1 = new HashMap<>();\n+        HashMap<String, String> map2 = new HashMap<>();\n+        map1.put(CoreAttributes.FILENAME.key(), \"randombytes-xx\");\n+        map2.put(CoreAttributes.FILENAME.key(), \"randombytes-yy\");\n+\n+        flowFile1.putAttributes(map1);\n+        flowFile2.putAttributes(map2);\n+        //set to derive hostname\n+        runner.setProperty(FTPTransfer.HOSTNAME, \"${transfer-host}\");\n+\n+        runner.enqueue(flowFile1);\n+        runner.run();", "originalCommit": "12598e5f9a8193d2799e9265fdf16fe339e6a005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNzc0OA==", "url": "https://github.com/apache/nifi/pull/4620#discussion_r539617748", "bodyText": "Required to ensure order of provenance events.", "author": "tlsmith109", "createdAt": "2020-12-09T20:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcyMTE2MQ=="}], "type": "inlineReview"}, {"oid": "f3a643a027d616d03897768564b5aa21b6701331", "url": "https://github.com/apache/nifi/commit/f3a643a027d616d03897768564b5aa21b6701331", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-10T14:19:33Z", "type": "forcePushed"}, {"oid": "c422e83a63baba58919eb2893ca1bf7486b85660", "url": "https://github.com/apache/nifi/commit/c422e83a63baba58919eb2893ca1bf7486b85660", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-10T14:41:55Z", "type": "forcePushed"}, {"oid": "ba418c77896115459c906143b0adc0b0f2e972bd", "url": "https://github.com/apache/nifi/commit/ba418c77896115459c906143b0adc0b0f2e972bd", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-10T16:44:29Z", "type": "forcePushed"}, {"oid": "ef0ec23970b4db35f2989120dfda1ac62961f17b", "url": "https://github.com/apache/nifi/commit/ef0ec23970b4db35f2989120dfda1ac62961f17b", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-14T15:19:30Z", "type": "forcePushed"}, {"oid": "e52f504ebffe1dce8e3e60f3e3b7940e1bb9dc80", "url": "https://github.com/apache/nifi/commit/e52f504ebffe1dce8e3e60f3e3b7940e1bb9dc80", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-15T18:11:02Z", "type": "forcePushed"}, {"oid": "b845b17578b3e24a132e841ef767fdd4c9f58f84", "url": "https://github.com/apache/nifi/commit/b845b17578b3e24a132e841ef767fdd4c9f58f84", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-15T18:37:23Z", "type": "commit"}, {"oid": "b845b17578b3e24a132e841ef767fdd4c9f58f84", "url": "https://github.com/apache/nifi/commit/b845b17578b3e24a132e841ef767fdd4c9f58f84", "message": "NIFI-6242 PutFileTransfer generating incorrect provenance event", "committedDate": "2020-12-15T18:37:23Z", "type": "forcePushed"}]}