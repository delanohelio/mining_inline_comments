{"pr_number": 781, "pr_title": "Spring Boot starter: improve error messages around class scanning", "pr_createdAt": "2020-05-16T09:46:57Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/781", "timeline": [{"oid": "664c89bcc90f45894f909dfe2f9ac8b70453fc6a", "url": "https://github.com/kiegroup/optaplanner/commit/664c89bcc90f45894f909dfe2f9ac8b70453fc6a", "message": "Spring Boot starter: improve error messages around class scanning", "committedDate": "2020-05-16T09:46:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwMzMwOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/781#discussion_r426403309", "bodyText": "The same condition repeated. Spotbugs maven plugin failed the build due to this:\n09:58:13 [ERROR] Repeated conditional test in org.optaplanner.spring.boot.autoconfigure.OptaPlannerAutoConfiguration.applyScoreDirectorFactoryProperties(SolverConfig) [org.optaplanner.spring.boot.autoconfigure.OptaPlannerAutoConfiguration, org.optaplanner.spring.boot.autoconfigure.OptaPlannerAutoConfiguration] At OptaPlannerAutoConfiguration.java:[line 209]At OptaPlannerAutoConfiguration.java:[lines 209-210] RpC_REPEATED_CONDITIONAL_TEST", "author": "rsynek", "createdAt": "2020-05-18T06:52:43Z", "path": "optaplanner-integration/optaplanner-spring-boot-autoconfigure/src/main/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfiguration.java", "diffHunk": "@@ -189,11 +185,46 @@ private void applySolverProperties(SolverConfig solverConfig) {\n         }\n         if (entityClassSet.isEmpty()) {\n             throw new IllegalStateException(\"No classes (\" + entityClassSet\n-                    + \") found with a @\" + PlanningEntity.class.getSimpleName() + \" annotation.\");\n+                    + \") found with a @\" + PlanningEntity.class.getSimpleName() + \" annotation.\\n\"\n+                    + \"Maybe your @\" + PlanningEntity.class.getSimpleName() + \" annotated class(es) \"\n+                    + \" are not in a subpackage of your @\" + SpringBootApplication.class.getSimpleName()\n+                    + \" annotated class's package.\\n\"\n+                    + \"Maybe move your planning entity classes to your application class's (sub)package\"\n+                    + \" (or use @\" + EntityScan.class.getSimpleName() + \").\");\n         }\n         return new ArrayList<>(entityClassSet);\n     }\n \n+    private void applyScoreDirectorFactoryProperties(SolverConfig solverConfig) {\n+        if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n+            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(findImplementingClass(EasyScoreCalculator.class));\n+            scoreDirectorFactoryConfig.setConstraintProviderClass(findImplementingClass(ConstraintProvider.class));\n+            scoreDirectorFactoryConfig\n+                    .setIncrementalScoreCalculatorClass(findImplementingClass(IncrementalScoreCalculator.class));\n+            if (beanClassLoader.getResource(SolverProperties.DEFAULT_SCORE_DRL_URL) != null) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n+                        SolverProperties.DEFAULT_SCORE_DRL_URL));\n+            }\n+            if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n+                    && scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null", "originalCommit": "664c89bcc90f45894f909dfe2f9ac8b70453fc6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MjkwNw==", "url": "https://github.com/kiegroup/optaplanner/pull/781#discussion_r426562907", "bodyText": "Good catch, fixing", "author": "ge0ffrey", "createdAt": "2020-05-18T11:40:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwMzMwOQ=="}], "type": "inlineReview"}, {"oid": "e7b8454d589b3b4e71577816246e71f53f0ef122", "url": "https://github.com/kiegroup/optaplanner/commit/e7b8454d589b3b4e71577816246e71f53f0ef122", "message": "Remove duplicate condition", "committedDate": "2020-05-18T11:41:20Z", "type": "commit"}]}