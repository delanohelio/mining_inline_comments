{"pr_number": 939, "pr_title": "PLANNER-1830 Add Constraint Provider for Tennis example", "pr_createdAt": "2020-09-20T08:49:02Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/939", "timeline": [{"oid": "e63343eed5f3b637958336fb82eeb59003d90275", "url": "https://github.com/kiegroup/optaplanner/commit/e63343eed5f3b637958336fb82eeb59003d90275", "message": "Convert Tennis example to Constraint Streams", "committedDate": "2020-09-20T08:46:34Z", "type": "commit"}, {"oid": "b3d93a2151622c4d44b154c576fbdae6cc88ce3a", "url": "https://github.com/kiegroup/optaplanner/commit/b3d93a2151622c4d44b154c576fbdae6cc88ce3a", "message": "More Tennis CS work", "committedDate": "2020-09-20T08:46:38Z", "type": "commit"}, {"oid": "23003dfb1a97e35f233b6f75fd9433ad84942116", "url": "https://github.com/kiegroup/optaplanner/commit/23003dfb1a97e35f233b6f75fd9433ad84942116", "message": "Minor fixes", "committedDate": "2020-09-20T08:46:39Z", "type": "commit"}, {"oid": "ee86f10d35952478aa782a93fb61a42a7bb6b120", "url": "https://github.com/kiegroup/optaplanner/commit/ee86f10d35952478aa782a93fb61a42a7bb6b120", "message": "Fix penalizing for multiple conflicting assignments", "committedDate": "2020-09-20T08:46:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDExNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r491704115", "bodyText": "I am not sure if I am comfortable putting this into the API directly. I wouldn't mind having it in a TennisCollector first to let it ripe a bit :)", "author": "ge0ffrey", "createdAt": "2020-09-20T15:48:13Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java", "diffHunk": "@@ -69,6 +69,21 @@\n  */\n public final class ConstraintCollectors {\n \n+    public static <A> DefaultUniConstraintCollector<A, ?, Object> loadBalanceByCount() {\n+        return new DefaultUniConstraintCollector<>(\n+                () -> new long[2],\n+                (resultContainer, a) -> {\n+                    resultContainer[0]++;\n+                    long count = resultContainer[0];\n+                    resultContainer[1] += (2 * count - 1);\n+                    return () -> {\n+                        resultContainer[1] -= (2 * resultContainer[0] - 1);\n+                        resultContainer[0]--;\n+                    };\n+                },\n+                resultContainer -> resultContainer);\n+    }", "originalCommit": "ee86f10d35952478aa782a93fb61a42a7bb6b120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDEzOA==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r491704138", "bodyText": "Especially because it doesn't combine well with other constraints on the same level, so we'll want to improve it over time.", "author": "ge0ffrey", "createdAt": "2020-09-20T15:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDM3OA==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r491704378", "bodyText": "Agree. This is just a rebase of an old PR, on which you made the same comment. :-)\nI will work on it next week.", "author": "triceo", "createdAt": "2020-09-20T15:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwNDExMg==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r491804112", "bodyText": "Ah lol - happy to hear that I am consistent (this time at least) with my old self :)", "author": "ge0ffrey", "createdAt": "2020-09-21T05:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDExNQ=="}], "type": "inlineReview"}, {"oid": "e3d53bc6562acaabb21775adb59a84e2ac6e6748", "url": "https://github.com/kiegroup/optaplanner/commit/e3d53bc6562acaabb21775adb59a84e2ac6e6748", "message": "Basic fixes", "committedDate": "2020-09-21T09:24:31Z", "type": "commit"}, {"oid": "abb9ea9c6d117c6a1293cee3b0303772dc5d032a", "url": "https://github.com/kiegroup/optaplanner/commit/abb9ea9c6d117c6a1293cee3b0303772dc5d032a", "message": "FULL_ASSERT passes", "committedDate": "2020-09-21T10:35:33Z", "type": "commit"}, {"oid": "b3e29a18eb2c3392049adb09a23010b8c2376833", "url": "https://github.com/kiegroup/optaplanner/commit/b3e29a18eb2c3392049adb09a23010b8c2376833", "message": "Add constraint provider test", "committedDate": "2020-09-21T13:44:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MjE2NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r492792165", "bodyText": "Why do we need that for the tennis example, but not for CloudBalancingConstraintProvider which is also in the \"optional.score\" package?", "author": "ge0ffrey", "createdAt": "2020-09-22T14:42:53Z", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/tennis/optional/score/TennisConstraintProvider.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.examples.tennis.optional.score;\n+\n+import static org.optaplanner.core.api.score.stream.Joiners.equal;\n+import static org.optaplanner.core.api.score.stream.Joiners.lessThan;\n+\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.optaplanner.core.api.score.buildin.hardmediumsoft.HardMediumSoftScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.impl.score.stream.bi.DefaultBiConstraintCollector;\n+import org.optaplanner.core.impl.score.stream.uni.DefaultUniConstraintCollector;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction.LoadBalanceByCountData;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction.LoadBalanceByCountResult;\n+import org.optaplanner.examples.tennis.domain.TeamAssignment;\n+import org.optaplanner.examples.tennis.domain.UnavailabilityPenalty;\n+\n+public final class TennisConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.tennis.solver\";", "originalCommit": "b3e29a18eb2c3392049adb09a23010b8c2376833", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MjUyNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r492792525", "bodyText": "Any way to get rid of having to pass the constraintPackage to the penalize methods?", "author": "ge0ffrey", "createdAt": "2020-09-22T14:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MjE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5Mzk0Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r492793943", "bodyText": "Yes, two options:\n\nAdapt both this and the DRL to ConstraintConfiguration.\nRelax the requirement that FULL_ASSERT must pass for both, which it won't, when the packages differ.", "author": "triceo", "createdAt": "2020-09-22T14:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MjE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NDc2Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r492794766", "bodyText": "This is ugly. Can we not simply duplicate LoadBalanceByCountData in here? Or use Pair<...> or something?\n(I can't wait for java records).", "author": "ge0ffrey", "createdAt": "2020-09-22T14:45:58Z", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/tennis/optional/score/TennisConstraintProvider.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.examples.tennis.optional.score;\n+\n+import static org.optaplanner.core.api.score.stream.Joiners.equal;\n+import static org.optaplanner.core.api.score.stream.Joiners.lessThan;\n+\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.optaplanner.core.api.score.buildin.hardmediumsoft.HardMediumSoftScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.impl.score.stream.bi.DefaultBiConstraintCollector;\n+import org.optaplanner.core.impl.score.stream.uni.DefaultUniConstraintCollector;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction.LoadBalanceByCountData;\n+import org.optaplanner.examples.common.solver.drools.functions.LoadBalanceByCountAccumulateFunction.LoadBalanceByCountResult;\n+import org.optaplanner.examples.tennis.domain.TeamAssignment;\n+import org.optaplanner.examples.tennis.domain.UnavailabilityPenalty;\n+\n+public final class TennisConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.tennis.solver\";\n+\n+    private static <A> DefaultUniConstraintCollector<A, ?, LoadBalanceByCountResult>\n+            loadBalanceByCount(Function<A, Object> groupKey) {\n+        LoadBalanceByCountAccumulateFunction accumulateFunction = new LoadBalanceByCountAccumulateFunction();\n+        return new DefaultUniConstraintCollector<>(\n+                () -> {\n+                    LoadBalanceByCountData resultContainer = accumulateFunction.createContext();", "originalCommit": "b3e29a18eb2c3392049adb09a23010b8c2376833", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NTQ2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/939#discussion_r492795469", "bodyText": "Motivation: the ConstraintProvider should be code-wise indepenent of the scoreDRL (including that custom accumulate function which I consider to be owned by the drl)", "author": "ge0ffrey", "createdAt": "2020-09-22T14:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NDc2Ng=="}], "type": "inlineReview"}, {"oid": "53e73ef8d60711b4e7d58bb1dae7e2f095fac1cb", "url": "https://github.com/kiegroup/optaplanner/commit/53e73ef8d60711b4e7d58bb1dae7e2f095fac1cb", "message": "Address review comments", "committedDate": "2020-09-22T15:11:44Z", "type": "commit"}, {"oid": "46a55f493f077af1cf74507ffc2ae5f8b8eb1866", "url": "https://github.com/kiegroup/optaplanner/commit/46a55f493f077af1cf74507ffc2ae5f8b8eb1866", "message": "Remove code smell", "committedDate": "2020-09-22T15:38:45Z", "type": "commit"}, {"oid": "aea9faca7c26abb4c8a7b336b574036e1caa56cc", "url": "https://github.com/kiegroup/optaplanner/commit/aea9faca7c26abb4c8a7b336b574036e1caa56cc", "message": "Final fix", "committedDate": "2020-09-22T16:22:26Z", "type": "commit"}, {"oid": "1023e7a29791e106dd457a63ef5cf6d19d4f6bf7", "url": "https://github.com/kiegroup/optaplanner/commit/1023e7a29791e106dd457a63ef5cf6d19d4f6bf7", "message": "Final optimization", "committedDate": "2020-09-22T16:32:01Z", "type": "commit"}]}