{"pr_number": 930, "pr_title": "PLANNER-2003 Improve performance of a single groupBy()", "pr_createdAt": "2020-09-17T08:10:24Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/930", "timeline": [{"oid": "36a677b513a2249aa39bc73ac6356e3cb1eeb4af", "url": "https://github.com/kiegroup/optaplanner/commit/36a677b513a2249aa39bc73ac6356e3cb1eeb4af", "message": "No need for dep plugin in examples", "committedDate": "2020-09-29T07:43:18Z", "type": "forcePushed"}, {"oid": "cbbfa6949885b453f0a8361993d7ec790392fe2e", "url": "https://github.com/kiegroup/optaplanner/commit/cbbfa6949885b453f0a8361993d7ec790392fe2e", "message": "No need for dep plugin in examples", "committedDate": "2020-10-01T07:50:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMzQ5MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/930#discussion_r500313491", "bodyText": "I added this to maximize test cases for CS-D.", "author": "triceo", "createdAt": "2020-10-06T14:08:26Z", "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/cloudbalancing/optional/score/CloudBalancingConstraintProviderTest.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.examples.cloudbalancing.optional.score;\n+\n+import org.junit.jupiter.api.Test;\n+import org.optaplanner.examples.cloudbalancing.domain.CloudBalance;\n+import org.optaplanner.examples.cloudbalancing.domain.CloudComputer;\n+import org.optaplanner.examples.cloudbalancing.domain.CloudProcess;\n+import org.optaplanner.test.api.score.stream.ConstraintVerifier;\n+\n+public class CloudBalancingConstraintProviderTest {", "originalCommit": "cbbfa6949885b453f0a8361993d7ec790392fe2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e655f91a6325fd4aee768cb7f8ec5949e213e36", "url": "https://github.com/kiegroup/optaplanner/commit/8e655f91a6325fd4aee768cb7f8ec5949e213e36", "message": "No need for dep plugin in examples", "committedDate": "2020-10-07T06:03:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM2NjczNA==", "url": "https://github.com/kiegroup/optaplanner/pull/930#discussion_r500366734", "bodyText": "This looks like a nice unit with clear inputs, outputs, and no side-effects. Given the increasing complexity of the matchJustificationsToOutput, do you think that moving this code to a separate private method would pay off?", "author": "rsynek", "createdAt": "2020-10-06T15:03:15Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/DroolsConstraintSessionFactory.java", "diffHunk": "@@ -103,30 +107,54 @@ public DroolsConstraintSessionFactory(SolutionDescriptor<Solution_> solutionDesc\n         if (expectedTypes.length == 0) {\n             throw new IllegalStateException(\"Impossible: there are no 0-cardinality constraint streams.\");\n         }\n+        // Send all groupKey instances to the beginning of the justification list as we can not rely on Drools putting\n+        // them there for us.\n+        Predicate<Object> isGroupKey = o -> o instanceof GroupKey;\n+        Stream<Object> groupKeyValues = justificationList.stream()\n+                .filter(isGroupKey)\n+                .flatMap(groupKey -> {\n+                    Object ungrouped = ((GroupKey) groupKey).getKey();\n+                    if (ungrouped instanceof FactTuple) {\n+                        FactTuple factTuple = (FactTuple) ungrouped;\n+                        return factTuple.asList().stream();\n+                    }\n+                    return Stream.of(ungrouped);\n+                });\n+        Stream<Object> otherValues = justificationList.stream()\n+                .filter(o -> !isGroupKey.test(o))\n+                .flatMap(o -> {\n+                    if (o instanceof Object[]) { // Double accumulates return results as arrays of two objects.\n+                        return Arrays.stream((Object[]) o);\n+                    } else {\n+                        return Stream.of(o);\n+                    }\n+                });\n+        List<Object> ungroupedJustificationList = Stream.concat(groupKeyValues, otherValues)\n+                .collect(Collectors.toList());", "originalCommit": "cbbfa6949885b453f0a8361993d7ec790392fe2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MzczMg==", "url": "https://github.com/kiegroup/optaplanner/pull/930#discussion_r500793732", "bodyText": "Sure, it doesn't hurt. But I do hope that it will be trimmed down significantly in a few sprints' time.", "author": "triceo", "createdAt": "2020-10-07T07:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM2NjczNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MDAxMw==", "url": "https://github.com/kiegroup/optaplanner/pull/930#discussion_r500790013", "bodyText": "Is the variable name \"newB\" by any chance a copy&paste mistake?", "author": "rsynek", "createdAt": "2020-10-07T07:20:47Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/QuadGroupBy2Map1CollectFastMutator.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.core.impl.score.stream.drools.common.rules;\n+\n+import static java.util.Collections.emptyMap;\n+import static java.util.Collections.singletonList;\n+import static org.drools.model.DSL.accFunction;\n+import static org.drools.model.PatternDSL.from;\n+import static org.drools.model.PatternDSL.groupBy;\n+import static org.drools.model.PatternDSL.pattern;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.drools.model.PatternDSL;\n+import org.drools.model.Variable;\n+import org.drools.model.view.ViewItem;\n+import org.optaplanner.core.api.function.QuadFunction;\n+import org.optaplanner.core.api.score.stream.quad.QuadConstraintCollector;\n+import org.optaplanner.core.impl.score.stream.drools.common.BiTuple;\n+import org.optaplanner.core.impl.score.stream.drools.quad.DroolsQuadAccumulateFunction;\n+\n+final class QuadGroupBy2Map1CollectFastMutator<A, B, C, D, NewA, NewB, NewC> extends AbstractQuadGroupByMutator {\n+\n+    private final QuadFunction<A, B, C, D, NewA> groupKeyMappingA;\n+    private final QuadFunction<A, B, C, D, NewB> groupKeyMappingB;\n+    private final QuadConstraintCollector<A, B, C, D, ?, NewC> collectorC;\n+\n+    public QuadGroupBy2Map1CollectFastMutator(QuadFunction<A, B, C, D, NewA> groupKeyMappingA,\n+            QuadFunction<A, B, C, D, NewB> groupKeyMappingB, QuadConstraintCollector<A, B, C, D, ?, NewC> collectorC) {\n+        this.groupKeyMappingA = groupKeyMappingA;\n+        this.groupKeyMappingB = groupKeyMappingB;\n+        this.collectorC = collectorC;\n+    }\n+\n+    @Override\n+    public AbstractRuleAssembler apply(AbstractRuleAssembler ruleAssembler) {\n+        ruleAssembler.applyFilterToLastPrimaryPattern();\n+        Variable<A> inputA = ruleAssembler.getVariable(0);\n+        Variable<B> inputB = ruleAssembler.getVariable(1);\n+        Variable<C> inputC = ruleAssembler.getVariable(2);\n+        Variable<D> inputD = ruleAssembler.getVariable(3);\n+        Variable<BiTuple<NewA, NewB>> groupKey = ruleAssembler.createVariable(BiTuple.class, \"groupKey\");\n+        Variable<NewC> output = ruleAssembler.createVariable(\"output\");\n+        ViewItem groupByPattern = groupBy(getInnerAccumulatePattern(ruleAssembler), inputA, inputB, inputC, inputD,\n+                groupKey, (a, b, c, d) -> new BiTuple<>(groupKeyMappingA.apply(a, b, c, d),\n+                        groupKeyMappingB.apply(a, b, c, d)),\n+                accFunction(() -> new DroolsQuadAccumulateFunction<>(collectorC)).as(output));\n+        List<ViewItem> newFinishedExpressions = new ArrayList<>(ruleAssembler.getFinishedExpressions());\n+        newFinishedExpressions.add(groupByPattern); // The last pattern is added here.\n+        Variable<NewA> newA = ruleAssembler.createVariable(\"newA\", from(groupKey, k -> k.a));\n+        Variable<NewB> newB = ruleAssembler.createVariable(\"newB\", from(groupKey, k -> k.b));\n+        Variable<NewC> newC = ruleAssembler.createVariable(\"newB\", from(output));", "originalCommit": "8e655f91a6325fd4aee768cb7f8ec5949e213e36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NDAwNA==", "url": "https://github.com/kiegroup/optaplanner/pull/930#discussion_r500794004", "bodyText": "Good catch. That said, this is not a bug, since createVariable(...) makes the var names unique anyway.", "author": "triceo", "createdAt": "2020-10-07T07:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MDAxMw=="}], "type": "inlineReview"}, {"oid": "98ce65e4d2172102a5be48de9b5af717b02edad6", "url": "https://github.com/kiegroup/optaplanner/commit/98ce65e4d2172102a5be48de9b5af717b02edad6", "message": "Address code review comments", "committedDate": "2020-10-07T10:11:04Z", "type": "forcePushed"}, {"oid": "63e3395e36a19063b0031add8c3ad560a3777d0b", "url": "https://github.com/kiegroup/optaplanner/commit/63e3395e36a19063b0031add8c3ad560a3777d0b", "message": "Fix quad groupBy", "committedDate": "2020-10-08T08:51:12Z", "type": "forcePushed"}, {"oid": "0f3fee473e9e56088d8e7a510c48c56b767fc337", "url": "https://github.com/kiegroup/optaplanner/commit/0f3fee473e9e56088d8e7a510c48c56b767fc337", "message": "Add accumulate source to fix many groupBy issues", "committedDate": "2020-10-14T15:48:58Z", "type": "forcePushed"}, {"oid": "a0599ff84769415691b73b1996c0d57b311e101a", "url": "https://github.com/kiegroup/optaplanner/commit/a0599ff84769415691b73b1996c0d57b311e101a", "message": "Better API to help avoid future stream cast exceptions", "committedDate": "2020-10-16T10:00:23Z", "type": "forcePushed"}, {"oid": "8e13f108ebe09be5faf72ac2d1c061ccee9fc432", "url": "https://github.com/kiegroup/optaplanner/commit/8e13f108ebe09be5faf72ac2d1c061ccee9fc432", "message": "Fix formatting", "committedDate": "2020-10-19T15:18:27Z", "type": "forcePushed"}, {"oid": "a73c651cbee40ed433cb7bb8495bb72a4d067821", "url": "https://github.com/kiegroup/optaplanner/commit/a73c651cbee40ed433cb7bb8495bb72a4d067821", "message": "Standardize access to variables", "committedDate": "2020-10-26T18:58:27Z", "type": "commit"}, {"oid": "2c7364c743b9eeca6f4dc2330723f6f6ef8e2078", "url": "https://github.com/kiegroup/optaplanner/commit/2c7364c743b9eeca6f4dc2330723f6f6ef8e2078", "message": "Share the variable factory", "committedDate": "2020-10-26T18:58:27Z", "type": "commit"}, {"oid": "079b12b0837ba5dc75d187e3405d2406130368c2", "url": "https://github.com/kiegroup/optaplanner/commit/079b12b0837ba5dc75d187e3405d2406130368c2", "message": "Formatting", "committedDate": "2020-10-26T18:58:27Z", "type": "commit"}, {"oid": "0ccb6b1b7b50ae57c137b1109b2cf38da67962df", "url": "https://github.com/kiegroup/optaplanner/commit/0ccb6b1b7b50ae57c137b1109b2cf38da67962df", "message": "Upgrade to the experimental groupBy code", "committedDate": "2020-10-26T18:58:27Z", "type": "commit"}, {"oid": "97f84c5a83849ab7992de59be8dfc1b0327ab5c6", "url": "https://github.com/kiegroup/optaplanner/commit/97f84c5a83849ab7992de59be8dfc1b0327ab5c6", "message": "Initial fast groupBy impl", "committedDate": "2020-10-26T19:00:18Z", "type": "commit"}, {"oid": "fd3c58dba4e0565647a039e53c97bda57ce2f132", "url": "https://github.com/kiegroup/optaplanner/commit/fd3c58dba4e0565647a039e53c97bda57ce2f132", "message": "1Map1Collect", "committedDate": "2020-10-26T19:00:22Z", "type": "commit"}, {"oid": "99341674ed41f7577eb3675ca5c681869d82db25", "url": "https://github.com/kiegroup/optaplanner/commit/99341674ed41f7577eb3675ca5c681869d82db25", "message": "Fix formatting", "committedDate": "2020-10-26T19:00:22Z", "type": "commit"}, {"oid": "963403f049f0e3fc83e2c0cd817e0003a1afbf4b", "url": "https://github.com/kiegroup/optaplanner/commit/963403f049f0e3fc83e2c0cd817e0003a1afbf4b", "message": "Handle accFunction properly", "committedDate": "2020-10-26T19:00:22Z", "type": "commit"}, {"oid": "4214855c4743e56ac1bb497c5827ef9e42333bfa", "url": "https://github.com/kiegroup/optaplanner/commit/4214855c4743e56ac1bb497c5827ef9e42333bfa", "message": "Rebase on latest", "committedDate": "2020-10-26T19:01:00Z", "type": "commit"}, {"oid": "b2ac07450ac84c520e2bf21c741962690ab6f75c", "url": "https://github.com/kiegroup/optaplanner/commit/b2ac07450ac84c520e2bf21c741962690ab6f75c", "message": "Add test for cloud balancing constraint provider", "committedDate": "2020-10-26T19:01:04Z", "type": "commit"}, {"oid": "73982cb18defc9b58e45428061a40e4118c78b68", "url": "https://github.com/kiegroup/optaplanner/commit/73982cb18defc9b58e45428061a40e4118c78b68", "message": "Add test for null issue", "committedDate": "2020-10-26T19:01:04Z", "type": "commit"}, {"oid": "adbab174824c03403675480ae33978bb2a313a32", "url": "https://github.com/kiegroup/optaplanner/commit/adbab174824c03403675480ae33978bb2a313a32", "message": "Fix compile", "committedDate": "2020-10-26T19:01:04Z", "type": "commit"}, {"oid": "4ef9554971843b3e2ee12a662446be3e10b76cd2", "url": "https://github.com/kiegroup/optaplanner/commit/4ef9554971843b3e2ee12a662446be3e10b76cd2", "message": "Fix deps", "committedDate": "2020-10-26T19:01:04Z", "type": "commit"}, {"oid": "2442b0eff2d0d8c086772cd45f798dac862fe1a0", "url": "https://github.com/kiegroup/optaplanner/commit/2442b0eff2d0d8c086772cd45f798dac862fe1a0", "message": "Another test for Mario", "committedDate": "2020-10-26T19:01:05Z", "type": "commit"}, {"oid": "0f6c9024288bae23b7fa3e36d85305b8aec882b4", "url": "https://github.com/kiegroup/optaplanner/commit/0f6c9024288bae23b7fa3e36d85305b8aec882b4", "message": "Order groupKeys first", "committedDate": "2020-10-26T19:01:57Z", "type": "commit"}, {"oid": "8e141efd44c2c71daa7291ffb8b26d103e5f9761", "url": "https://github.com/kiegroup/optaplanner/commit/8e141efd44c2c71daa7291ffb8b26d103e5f9761", "message": "Remove marioTest", "committedDate": "2020-10-26T19:02:00Z", "type": "commit"}, {"oid": "feec7cf349dcf0cd57bf72da0e59c4294e2a749b", "url": "https://github.com/kiegroup/optaplanner/commit/feec7cf349dcf0cd57bf72da0e59c4294e2a749b", "message": "Uni2Map1Collect", "committedDate": "2020-10-26T19:02:01Z", "type": "commit"}, {"oid": "56d85e1d3198ced56d72ef3fd618f0a608597469", "url": "https://github.com/kiegroup/optaplanner/commit/56d85e1d3198ced56d72ef3fd618f0a608597469", "message": "Uni2Map2Collect", "committedDate": "2020-10-26T19:02:01Z", "type": "commit"}, {"oid": "6e51a8684df79b24e4db277544124eb0cce267eb", "url": "https://github.com/kiegroup/optaplanner/commit/6e51a8684df79b24e4db277544124eb0cce267eb", "message": "Bi variants", "committedDate": "2020-10-26T19:02:01Z", "type": "commit"}, {"oid": "2e6959580ce3d7520737f2689d8dd0a531ca0e87", "url": "https://github.com/kiegroup/optaplanner/commit/2e6959580ce3d7520737f2689d8dd0a531ca0e87", "message": "Tri variants", "committedDate": "2020-10-26T19:02:01Z", "type": "commit"}, {"oid": "b0855685fa23b2f76857bb4b26a9c4eec1220bac", "url": "https://github.com/kiegroup/optaplanner/commit/b0855685fa23b2f76857bb4b26a9c4eec1220bac", "message": "Quad variants", "committedDate": "2020-10-26T19:02:01Z", "type": "commit"}, {"oid": "12e2247a0160f5e4bff994f232b928bf25c70924", "url": "https://github.com/kiegroup/optaplanner/commit/12e2247a0160f5e4bff994f232b928bf25c70924", "message": "Code formatting", "committedDate": "2020-10-26T19:02:46Z", "type": "commit"}, {"oid": "2a1edc743eb7fc9b8328b75acc26f5174343e4a7", "url": "https://github.com/kiegroup/optaplanner/commit/2a1edc743eb7fc9b8328b75acc26f5174343e4a7", "message": "Add remaining unis", "committedDate": "2020-10-26T19:02:49Z", "type": "commit"}, {"oid": "5a2b6bc87ab06ebce98a45d30df3fc295915fee4", "url": "https://github.com/kiegroup/optaplanner/commit/5a2b6bc87ab06ebce98a45d30df3fc295915fee4", "message": "Bi is finished", "committedDate": "2020-10-26T19:02:49Z", "type": "commit"}, {"oid": "8a31e0590084eb57312c1515826189f98ffeb80d", "url": "https://github.com/kiegroup/optaplanner/commit/8a31e0590084eb57312c1515826189f98ffeb80d", "message": "Tri is finished", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "8ad0dde0e41618ce2100a746bc7ff20c89b62de7", "url": "https://github.com/kiegroup/optaplanner/commit/8ad0dde0e41618ce2100a746bc7ff20c89b62de7", "message": "Quad is finished", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "3463fc34d82cff106883f275771e1839d27998a5", "url": "https://github.com/kiegroup/optaplanner/commit/3463fc34d82cff106883f275771e1839d27998a5", "message": "Improve performance of single groupBy", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "bcce03d196d83c13494f2e858120ce8dc5cd17a0", "url": "https://github.com/kiegroup/optaplanner/commit/bcce03d196d83c13494f2e858120ce8dc5cd17a0", "message": "Proper var naming", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "b35414c990dc02cc26459be3d3499e1a1c753313", "url": "https://github.com/kiegroup/optaplanner/commit/b35414c990dc02cc26459be3d3499e1a1c753313", "message": "No need to skip dependency plugin anymore", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "ffe581073c52ec71b76a245f3891634bf21baf97", "url": "https://github.com/kiegroup/optaplanner/commit/ffe581073c52ec71b76a245f3891634bf21baf97", "message": "No need for dep plugin in examples", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "b69be48bd7e24a9772d6286182d545cd3a589b9f", "url": "https://github.com/kiegroup/optaplanner/commit/b69be48bd7e24a9772d6286182d545cd3a589b9f", "message": "Address code review comments", "committedDate": "2020-10-26T19:02:50Z", "type": "commit"}, {"oid": "4a4ec6251212a99eed0d1a789b575b45134150a8", "url": "https://github.com/kiegroup/optaplanner/commit/4a4ec6251212a99eed0d1a789b575b45134150a8", "message": "Actually use fast mutators", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "1863bebc5e01b5813a6544f0174be75044a35791", "url": "https://github.com/kiegroup/optaplanner/commit/1863bebc5e01b5813a6544f0174be75044a35791", "message": "Add fail fast", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "c73cd270037c14ab70239706779048e05d5a6079", "url": "https://github.com/kiegroup/optaplanner/commit/c73cd270037c14ab70239706779048e05d5a6079", "message": "Fix quad groupBy", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "e6ea61b18eeb1e488ee21ab39f1002f3fd89898b", "url": "https://github.com/kiegroup/optaplanner/commit/e6ea61b18eeb1e488ee21ab39f1002f3fd89898b", "message": "Add accumulate source to fix many groupBy issues", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "25941cbc77986a075e813cf823b86134ae999bfb", "url": "https://github.com/kiegroup/optaplanner/commit/25941cbc77986a075e813cf823b86134ae999bfb", "message": "Fix coachShuttleGathering", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "f663b5c051792764a3ceea57fb3dcda1129cc807", "url": "https://github.com/kiegroup/optaplanner/commit/f663b5c051792764a3ceea57fb3dcda1129cc807", "message": "Better API to help avoid future stream cast exceptions", "committedDate": "2020-10-26T19:02:51Z", "type": "commit"}, {"oid": "90d418d6923c71c3eca9ce2a4691504075787174", "url": "https://github.com/kiegroup/optaplanner/commit/90d418d6923c71c3eca9ce2a4691504075787174", "message": "Share some code", "committedDate": "2020-10-26T19:02:52Z", "type": "commit"}, {"oid": "d073a5d22f30bd683847f74ebb5547d5d38fc296", "url": "https://github.com/kiegroup/optaplanner/commit/d073a5d22f30bd683847f74ebb5547d5d38fc296", "message": "Share code for quad regrouping", "committedDate": "2020-10-26T19:02:52Z", "type": "commit"}, {"oid": "eda6e8a0df3029620bb514ce8b21387a6a83b63b", "url": "https://github.com/kiegroup/optaplanner/commit/eda6e8a0df3029620bb514ce8b21387a6a83b63b", "message": "Share code for tri regrouping", "committedDate": "2020-10-26T19:02:52Z", "type": "commit"}, {"oid": "7a80d52d5a3973d21b99698f9ee9e747eb9ebfcc", "url": "https://github.com/kiegroup/optaplanner/commit/7a80d52d5a3973d21b99698f9ee9e747eb9ebfcc", "message": "Share code for bi regrouping", "committedDate": "2020-10-26T19:02:52Z", "type": "commit"}, {"oid": "584045f3eea29332a337f88eb1106aeceb296712", "url": "https://github.com/kiegroup/optaplanner/commit/584045f3eea29332a337f88eb1106aeceb296712", "message": "Share code for uni regrouping", "committedDate": "2020-10-26T19:02:52Z", "type": "commit"}, {"oid": "6d2c2935cd9724c07cf10999ba0a46ff252b7324", "url": "https://github.com/kiegroup/optaplanner/commit/6d2c2935cd9724c07cf10999ba0a46ff252b7324", "message": "Fix formatting", "committedDate": "2020-10-26T19:02:53Z", "type": "commit"}, {"oid": "6d2c2935cd9724c07cf10999ba0a46ff252b7324", "url": "https://github.com/kiegroup/optaplanner/commit/6d2c2935cd9724c07cf10999ba0a46ff252b7324", "message": "Fix formatting", "committedDate": "2020-10-26T19:02:53Z", "type": "forcePushed"}, {"oid": "7676204adc443b7eb75c5fa9050e71700bf436d9", "url": "https://github.com/kiegroup/optaplanner/commit/7676204adc443b7eb75c5fa9050e71700bf436d9", "message": "Remove unused line of code", "committedDate": "2020-10-27T17:36:15Z", "type": "commit"}]}