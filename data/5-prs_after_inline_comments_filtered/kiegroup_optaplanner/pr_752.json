{"pr_number": 752, "pr_title": "PLANNER-1955: Add JPA AttributeConverters for Score entities", "pr_createdAt": "2020-04-22T19:31:19Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/752", "timeline": [{"oid": "4c28ab89e02d21ac667e336a10d3087517443d15", "url": "https://github.com/kiegroup/optaplanner/commit/4c28ab89e02d21ac667e336a10d3087517443d15", "message": "Initial JPA AttributeConverter commit", "committedDate": "2020-05-05T16:56:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzNzE4NA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r421537184", "bodyText": "Should be org.junit.jupiter.api.BeforeEach", "author": "rsynek", "createdAt": "2020-05-07T14:14:00Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/score/AbstractScoreConverterTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.naming.InitialContext;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.transaction.HeuristicMixedException;\n+import javax.transaction.HeuristicRollbackException;\n+import javax.transaction.NotSupportedException;\n+import javax.transaction.RollbackException;\n+import javax.transaction.SystemException;\n+import javax.transaction.TransactionManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.kie.test.util.db.PersistenceUtil;\n+import org.optaplanner.core.api.score.Score;\n+\n+public abstract class AbstractScoreConverterTest {\n+\n+    protected Map<String, Object> context;\n+    protected EntityManagerFactory entityManagerFactory;\n+    protected TransactionManager transactionManager;\n+\n+    @Before", "originalCommit": "4c28ab89e02d21ac667e336a10d3087517443d15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzNzQzNg==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r421537436", "bodyText": "Should be org.junit.jupiter.api.AfterEach", "author": "rsynek", "createdAt": "2020-05-07T14:14:20Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/score/AbstractScoreConverterTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.naming.InitialContext;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.transaction.HeuristicMixedException;\n+import javax.transaction.HeuristicRollbackException;\n+import javax.transaction.NotSupportedException;\n+import javax.transaction.RollbackException;\n+import javax.transaction.SystemException;\n+import javax.transaction.TransactionManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.kie.test.util.db.PersistenceUtil;\n+import org.optaplanner.core.api.score.Score;\n+\n+public abstract class AbstractScoreConverterTest {\n+\n+    protected Map<String, Object> context;\n+    protected EntityManagerFactory entityManagerFactory;\n+    protected TransactionManager transactionManager;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        context = PersistenceUtil.setupWithPoolingDataSource(\"org.optaplanner.persistence.jpa.converter.test\");\n+        entityManagerFactory = (EntityManagerFactory) context.get(PersistenceUtil.ENTITY_MANAGER_FACTORY);\n+        transactionManager = (TransactionManager) InitialContext.doLookup(\"java:comp/TransactionManager\");\n+    }\n+\n+    @After", "originalCommit": "4c28ab89e02d21ac667e336a10d3087517443d15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0MTc2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r421541769", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.junit.jupiter.api.Test;", "author": "rsynek", "createdAt": "2020-05-07T14:19:55Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/score/buildin/bendable/BendableScoreConverterTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score.buildin.bendable;\n+\n+import javax.persistence.Convert;\n+import javax.persistence.Entity;\n+\n+import org.junit.Test;", "originalCommit": "4c28ab89e02d21ac667e336a10d3087517443d15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0NTcwNA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r421545704", "bodyText": "Redundant type casting since Java 8.", "author": "rsynek", "createdAt": "2020-05-07T14:24:47Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/score/AbstractScoreConverterTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.naming.InitialContext;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.transaction.HeuristicMixedException;\n+import javax.transaction.HeuristicRollbackException;\n+import javax.transaction.NotSupportedException;\n+import javax.transaction.RollbackException;\n+import javax.transaction.SystemException;\n+import javax.transaction.TransactionManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.kie.test.util.db.PersistenceUtil;\n+import org.optaplanner.core.api.score.Score;\n+\n+public abstract class AbstractScoreConverterTest {\n+\n+    protected Map<String, Object> context;\n+    protected EntityManagerFactory entityManagerFactory;\n+    protected TransactionManager transactionManager;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        context = PersistenceUtil.setupWithPoolingDataSource(\"org.optaplanner.persistence.jpa.converter.test\");\n+        entityManagerFactory = (EntityManagerFactory) context.get(PersistenceUtil.ENTITY_MANAGER_FACTORY);\n+        transactionManager = (TransactionManager) InitialContext.doLookup(\"java:comp/TransactionManager\");", "originalCommit": "4c28ab89e02d21ac667e336a10d3087517443d15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1NDk5Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r421554993", "bodyText": "The class is identical to AbstractScoreHibernateTypeTest with only a single difference: the AbstractTestJpaEntity. I wonder if the code can be reused - e.g. by just providing different abstract entity classes.", "author": "rsynek", "createdAt": "2020-05-07T14:35:54Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/score/AbstractScoreConverterTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.naming.InitialContext;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.transaction.HeuristicMixedException;\n+import javax.transaction.HeuristicRollbackException;\n+import javax.transaction.NotSupportedException;\n+import javax.transaction.RollbackException;\n+import javax.transaction.SystemException;\n+import javax.transaction.TransactionManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.kie.test.util.db.PersistenceUtil;\n+import org.optaplanner.core.api.score.Score;\n+\n+public abstract class AbstractScoreConverterTest {", "originalCommit": "4c28ab89e02d21ac667e336a10d3087517443d15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1OTk4Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r422359982", "bodyText": "Removed the code duplication by abstracting the test entity and methods in AbstractScoreJpaTest (naming and approach is open for discussion). @ge0ffrey thoughts?", "author": "cuijulian", "createdAt": "2020-05-08T20:34:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1NDk5Mw=="}], "type": "inlineReview"}, {"oid": "43b6239cf327de92159f3719c4c4c5c16285ce28", "url": "https://github.com/kiegroup/optaplanner/commit/43b6239cf327de92159f3719c4c4c5c16285ce28", "message": "Remove redundant type cast", "committedDate": "2020-05-07T15:28:45Z", "type": "forcePushed"}, {"oid": "4c6cec49244baa6ebbbbd4f6c9eda2be1d039c02", "url": "https://github.com/kiegroup/optaplanner/commit/4c6cec49244baa6ebbbbd4f6c9eda2be1d039c02", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-08T19:48:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjgxNw==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r425872817", "bodyText": "This should not be in the \"impl\" package, but the \"api\" instead.\nSo org.optaplanner.persistence.jpa.api.score.buildin.bendable.\n@triceo I 'd even argue we want to drop the \".persistence\" part in that url.\nSo org.optaplanner.jpa.api.score.buildin.bendable.", "author": "ge0ffrey", "createdAt": "2020-05-15T15:17:54Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/main/java/org/optaplanner/persistence/jpa/impl/score/buildin/bendable/BendableScoreConverter.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.impl.score.buildin.bendable;", "originalCommit": "4c6cec49244baa6ebbbbd4f6c9eda2be1d039c02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDM3Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r425874373", "bodyText": "@cuijulian For this PR, just put the scores in org.optaplanner.persistence.jpa.api.score.buildin...\nThe .persistence discussion is out of scope for this PR.", "author": "ge0ffrey", "createdAt": "2020-05-15T15:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5ODkwNA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r425898904", "bodyText": "Will this also apply to the *HibernateType classes?\nEDIT: After some thought, I think not. HibernateTypes belong to impl.", "author": "cuijulian", "createdAt": "2020-05-15T16:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNzM2NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r426407365", "bodyText": "If these classes are becoming a part of our API, let's also make sure we maintain backward compatibility by adding revapi config file like we have for optaplanner-core:\nhttps://github.com/kiegroup/optaplanner/blob/master/optaplanner-core/src/build/revapi-config.json", "author": "rsynek", "createdAt": "2020-05-18T07:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0ODM3MA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r427248370", "bodyText": "@rsynek Added in latest commit.", "author": "cuijulian", "createdAt": "2020-05-19T12:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjgxNw=="}], "type": "inlineReview"}, {"oid": "b1de08b9b363225cbaa0537f6e2ff4314ed8ec60", "url": "https://github.com/kiegroup/optaplanner/commit/b1de08b9b363225cbaa0537f6e2ff4314ed8ec60", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-15T21:15:08Z", "type": "forcePushed"}, {"oid": "59a03dbfcc11c2ecd428ebe38cfbc4b2a1d38fc2", "url": "https://github.com/kiegroup/optaplanner/commit/59a03dbfcc11c2ecd428ebe38cfbc4b2a1d38fc2", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-15T21:19:08Z", "type": "forcePushed"}, {"oid": "9920cbf557973eb0e869c2015290d6dd066d500b", "url": "https://github.com/kiegroup/optaplanner/commit/9920cbf557973eb0e869c2015290d6dd066d500b", "message": "Add client.js script", "committedDate": "2020-05-20T16:45:47Z", "type": "forcePushed"}, {"oid": "68c1ad4e79cba6e6d14842be587aa6b5cafba1ef", "url": "https://github.com/kiegroup/optaplanner/commit/68c1ad4e79cba6e6d14842be587aa6b5cafba1ef", "message": "Add revapi config for optaplanner-persistence-jpa", "committedDate": "2020-05-20T19:01:57Z", "type": "forcePushed"}, {"oid": "0bad70b93d0c989ab136555106143ddc000705fa", "url": "https://github.com/kiegroup/optaplanner/commit/0bad70b93d0c989ab136555106143ddc000705fa", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-22T14:30:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NTIyOA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r432545228", "bodyText": "Let's not add anything for Double scores, as they're getting deprecated (for removal in 8.0). CC @triceo", "author": "ge0ffrey", "createdAt": "2020-05-29T14:59:15Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/main/java/org/optaplanner/persistence/jpa/api/score/buildin/hardsoftdouble/HardSoftDoubleScoreConverter.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.api.score.buildin.hardsoftdouble;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftdouble.HardSoftDoubleScore;\n+\n+@Converter\n+public class HardSoftDoubleScoreConverter implements AttributeConverter<HardSoftDoubleScore, String> {", "originalCommit": "0bad70b93d0c989ab136555106143ddc000705fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NTM5Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r432545392", "bodyText": "Let's not add anything for Double scores, as they're getting deprecated (for removal in 8.0).", "author": "ge0ffrey", "createdAt": "2020-05-29T14:59:31Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/main/java/org/optaplanner/persistence/jpa/api/score/buildin/simpledouble/SimpleDoubleScoreConverter.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jpa.api.score.buildin.simpledouble;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.optaplanner.core.api.score.buildin.simpledouble.SimpleDoubleScore;\n+\n+@Converter\n+public class SimpleDoubleScoreConverter implements AttributeConverter<SimpleDoubleScore, String> {", "originalCommit": "0bad70b93d0c989ab136555106143ddc000705fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYwNzIyNg==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r432607226", "bodyText": "Is this intentionally removed? I relates to a java warnings that S... newScores otherwises gives", "author": "ge0ffrey", "createdAt": "2020-05-29T16:43:54Z", "path": "optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/AbstractScoreJpaTest.java", "diffHunk": "@@ -74,7 +73,6 @@ public void tearDown() throws Exception {\n         return id;\n     }\n \n-    @SafeVarargs", "originalCommit": "0bad70b93d0c989ab136555106143ddc000705fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNjYyNA==", "url": "https://github.com/kiegroup/optaplanner/pull/752#discussion_r432616624", "bodyText": "Oops, must have slipped during the refactor. I'll add it back.", "author": "cuijulian", "createdAt": "2020-05-29T16:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYwNzIyNg=="}], "type": "inlineReview"}, {"oid": "13861891425323840788a23cc21cd1b28859219c", "url": "https://github.com/kiegroup/optaplanner/commit/13861891425323840788a23cc21cd1b28859219c", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-29T17:03:27Z", "type": "commit"}, {"oid": "13861891425323840788a23cc21cd1b28859219c", "url": "https://github.com/kiegroup/optaplanner/commit/13861891425323840788a23cc21cd1b28859219c", "message": "Add JPA AttributeConverters for Score entities", "committedDate": "2020-05-29T17:03:27Z", "type": "forcePushed"}]}