{"pr_number": 888, "pr_title": "PLANNER-1771 Make Quarkus extension exit if no OptaPlanner annotated classes are found", "pr_createdAt": "2020-08-19T06:30:30Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/888", "timeline": [{"oid": "7d8090f82d2a3c3bdc122c3320e1b4d1f781acd7", "url": "https://github.com/kiegroup/optaplanner/commit/7d8090f82d2a3c3bdc122c3320e1b4d1f781acd7", "message": "PLANNER-1771 Make Quarkus extension exit if no OptaPlanner annotated classes are found", "committedDate": "2020-08-19T06:29:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5ODEyNA==", "url": "https://github.com/kiegroup/optaplanner/pull/888#discussion_r472798124", "bodyText": "Do we care about DRL (less than about easy score calculation)?", "author": "rsynek", "createdAt": "2020-08-19T07:22:08Z", "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -81,18 +86,37 @@ HotDeploymentWatchedFileBuildItem watchScoreDrl() {\n     }\n \n     @BuildStep\n-    void registerAdditionalBeans(BuildProducer<AdditionalBeanBuildItem> additionalBeans) {\n+    void registerAdditionalBeans(CombinedIndexBuildItem combinedIndex,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans) {\n+        IndexView indexView = combinedIndex.getIndex();\n+        if (hasNoOptaPlannerContent(indexView)) {\n+            return;\n+        }\n         // The bean encapsulating the SolverFactory\n         additionalBeans.produce(new AdditionalBeanBuildItem(OptaPlannerBeanProvider.class));\n     }\n \n+    private boolean hasNoOptaPlannerContent(IndexView indexView) {\n+        // Only skip this extension if everything is missing. Otherwise, if some parts are missing, fail fast later.\n+        return indexView.getAnnotations(DotNames.PLANNING_SOLUTION).isEmpty()", "originalCommit": "7d8090f82d2a3c3bdc122c3320e1b4d1f781acd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwMzYzMQ==", "url": "https://github.com/kiegroup/optaplanner/pull/888#discussion_r472803631", "bodyText": "We could do add a classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) == null check?", "author": "ge0ffrey", "createdAt": "2020-08-19T07:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5ODEyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwOTE0Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/888#discussion_r472809142", "bodyText": "That partially helps; now people might override the default location by solverConfig.xml. Where is the borderline of what else to check? What about the opposite approach: check just the annotations and provide a debug-level message explaining what's going on.\nBecause if we check the project just partially, for a couple of corner cases it will be very difficult for a user to investigate why the extension does just nothing.", "author": "rsynek", "createdAt": "2020-08-19T07:34:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5ODEyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNjEwMg==", "url": "https://github.com/kiegroup/optaplanner/pull/888#discussion_r472936102", "bodyText": "Very good point about the debug message!", "author": "ge0ffrey", "createdAt": "2020-08-19T10:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5ODEyNA=="}], "type": "inlineReview"}, {"oid": "9b298b3407492113978eb0a238b59ca828bd3c23", "url": "https://github.com/kiegroup/optaplanner/commit/9b298b3407492113978eb0a238b59ca828bd3c23", "message": "Switch the default classloader from optaplanner-core.jar's classloader to Thread.currentThread().getContextClassLoader()", "committedDate": "2020-08-19T11:11:46Z", "type": "commit"}, {"oid": "bfd6db689db35d7ddc10bcd03fd7834e2db2e31d", "url": "https://github.com/kiegroup/optaplanner/commit/bfd6db689db35d7ddc10bcd03fd7834e2db2e31d", "message": "Remove use of deprecated method recorderContext.classProxy", "committedDate": "2020-08-19T11:29:47Z", "type": "commit"}]}