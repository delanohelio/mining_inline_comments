{"pr_number": 8358, "pr_title": "Spotbugs - Unconfirmed Casts", "pr_createdAt": "2020-04-15T20:20:35Z", "pr_url": "https://github.com/JMRI/JMRI/pull/8358", "timeline": [{"oid": "6a8226fcdcdda11c1887b1a650c0e0c58e3c4bd6", "url": "https://github.com/JMRI/JMRI/commit/6a8226fcdcdda11c1887b1a650c0e0c58e3c4bd6", "message": "Spotbugs - Unconfirmed Casts\n\nRemoves BC_UNCONFIRMED_CAST and BC_UNCONFIRMED_CAST_OF_RETURN_VALUE patterns from exclusion list.", "committedDate": "2020-04-15T19:19:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjQyNw==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409146427", "bodyText": "Please leave instanceof alone and change the cast instead.", "author": "rhwood", "createdAt": "2020-04-15T21:32:28Z", "path": "java/src/jmri/server/json/block/JsonBlockHttpService.java", "diffHunk": "@@ -63,7 +63,7 @@ public ObjectNode doGet(Block block, String name, String type, JsonRequest reque\n         } else if (bv instanceof jmri.IdTag) {\n             ObjectNode idTagValue = idTagService.doGet((jmri.IdTag) bv, name, IDTAG, request);\n             data.set(VALUE, idTagValue);\n-        } else if (bv instanceof Reportable) {\n+        } else if (bv instanceof jmri.Reporter) {", "originalCommit": "6a8226fcdcdda11c1887b1a650c0e0c58e3c4bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MzY2NQ==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409163665", "bodyText": "@rhwood has this right.  Reportable and reporter are not the same thing.  Reportable objects are returned by reporters.", "author": "pabender", "createdAt": "2020-04-15T22:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyMjAzNA==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409222034", "bodyText": "The method it's being passed to is expecting a Reporter, not a Reportable?", "author": "icklesteve", "createdAt": "2020-04-16T01:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjcyMQ==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409146721", "bodyText": "Please leave instanceof alone and change the cast instead.", "author": "rhwood", "createdAt": "2020-04-15T21:33:04Z", "path": "java/src/jmri/server/json/memory/JsonMemoryHttpService.java", "diffHunk": "@@ -48,7 +48,7 @@ public ObjectNode doGet(Memory memory, String name, String type, JsonRequest req\n                 if (val instanceof jmri.IdTag) {\n                     ObjectNode idTagValue = idTagService.doGet((jmri.IdTag) val, name, IDTAG, request);\n                     data.set(VALUE, idTagValue);\n-                } else if (val instanceof Reportable) {", "originalCommit": "6a8226fcdcdda11c1887b1a650c0e0c58e3c4bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MzY4MA==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409163680", "bodyText": "@rhwood has this right.  Reportable and reporter are not the same thing.  Reportable objects are returned by reporters.", "author": "pabender", "createdAt": "2020-04-15T22:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyMjA4MA==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409222080", "bodyText": "The method it's being passed to is expecting a Reporter, not a Reportable?", "author": "icklesteve", "createdAt": "2020-04-16T01:09:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyODY3OQ==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409228679", "bodyText": "The method it's being passed to is expecting a Reporter, not a Reportable?\n\n\nIt is entirely possible that there is an error here, but based on context, I would expect special handling for a Reportable object here, but I\u2019ll defer to @rhwood who knows this code  better than I do.", "author": "pabender", "createdAt": "2020-04-16T01:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQxMjQ0Mg==", "url": "https://github.com/JMRI/JMRI/pull/8358#discussion_r409412442", "bodyText": "I missed that, there is no manager for Reportables, but there are managers for Reporters, so I withdraw my request for changes.", "author": "rhwood", "createdAt": "2020-04-16T09:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NjcyMQ=="}], "type": "inlineReview"}]}