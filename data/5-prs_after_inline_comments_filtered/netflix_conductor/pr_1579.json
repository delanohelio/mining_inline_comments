{"pr_number": 1579, "pr_title": "added resiliency during task poll", "pr_createdAt": "2020-03-13T02:00:22Z", "pr_url": "https://github.com/Netflix/conductor/pull/1579", "timeline": [{"oid": "a58061df3b9c5232238ed2041b5a2e12e08a79ff", "url": "https://github.com/Netflix/conductor/commit/a58061df3b9c5232238ed2041b5a2e12e08a79ff", "message": "added resiliency during task poll", "committedDate": "2020-03-13T19:51:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1ODA3Ng==", "url": "https://github.com/Netflix/conductor/pull/1579#discussion_r392458076", "bodyText": "It'd be nice to have a metric for this too, which helps in tracing poll failures due to db operations and find out before the clients notice poll delays.", "author": "kishorebanala", "createdAt": "2020-03-13T20:35:18Z", "path": "core/src/main/java/com/netflix/conductor/service/ExecutionService.java", "diffHunk": "@@ -151,13 +159,14 @@ public Task poll(String taskType, String workerId, String domain) {\n \t\t\t\ttask.setPollCount(task.getPollCount() + 1);\n \t\t\t\texecutionDAOFacade.updateTask(task);\n \t\t\t\ttasks.add(task);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\t// db operation failed for dequeued message, re-enqueue with a delay\n+\t\t\t\tlogger.warn(\"DB operation failed for task: {}, postponing task in queue\", taskId, e);\n+\t\t\t\tqueueDAO.postpone(queueName, taskId, 0, queueTaskMessagePostponeSeconds);", "originalCommit": "a58061df3b9c5232238ed2041b5a2e12e08a79ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ4MjE0Mg==", "url": "https://github.com/Netflix/conductor/pull/1579#discussion_r392482142", "bodyText": "Good idea on the metric, will add.", "author": "apanicker-nflx", "createdAt": "2020-03-13T21:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1ODA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MTY4Mg==", "url": "https://github.com/Netflix/conductor/pull/1579#discussion_r392461682", "bodyText": "How about surfacing this exception to client? Also, should we update updateTaskLastPoll if the pop fails?", "author": "kishorebanala", "createdAt": "2020-03-13T20:40:44Z", "path": "core/src/main/java/com/netflix/conductor/service/ExecutionService.java", "diffHunk": "@@ -123,10 +123,18 @@ public Task poll(String taskType, String workerId, String domain) {\n \t\t}\n \t\tString queueName = QueueUtils.getQueueName(taskType, domain, null,null);\n \n+\t\tList<String> taskIds = new LinkedList<>();\n \t\tList<Task> tasks = new LinkedList<>();\n \t\ttry {\n-\t\t\tList<String> taskIds = queueDAO.pop(queueName, count, timeoutInMilliSecond);\n-\t\t\tfor (String taskId : taskIds) {\n+\t\t\ttaskIds = queueDAO.pop(queueName, count, timeoutInMilliSecond);\n+\t\t} catch (Exception e) {\n+\t\t\tlogger.error(\"Error polling for task: {} from worker: {} in domain: {}, count: {}\", taskType, workerId,\n+\t\t\t\tdomain, count, e);\n+\t\t\tMonitors.error(this.getClass().getCanonicalName(), \"taskPoll\");", "originalCommit": "a58061df3b9c5232238ed2041b5a2e12e08a79ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3ODMxNg==", "url": "https://github.com/Netflix/conductor/pull/1579#discussion_r392478316", "bodyText": "Yes, this helps to track polling from workers irrespective of whether a task was returned in the poll.", "author": "apanicker-nflx", "createdAt": "2020-03-13T21:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MTY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3OTE5NA==", "url": "https://github.com/Netflix/conductor/pull/1579#discussion_r392479194", "bodyText": "This exception was not surfaced to the client in the previous implementation either. Since polling is a highly-frequent activity, it would clutter up client-side logs in case of a temporary dependency glitch on server-side.", "author": "apanicker-nflx", "createdAt": "2020-03-13T21:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MTY4Mg=="}], "type": "inlineReview"}, {"oid": "ac7bf2f4330231ca5d3cb5c9f444bd06356a8ede", "url": "https://github.com/Netflix/conductor/commit/ac7bf2f4330231ca5d3cb5c9f444bd06356a8ede", "message": "added resiliency during task poll", "committedDate": "2020-03-13T21:46:57Z", "type": "commit"}, {"oid": "ac7bf2f4330231ca5d3cb5c9f444bd06356a8ede", "url": "https://github.com/Netflix/conductor/commit/ac7bf2f4330231ca5d3cb5c9f444bd06356a8ede", "message": "added resiliency during task poll", "committedDate": "2020-03-13T21:46:57Z", "type": "forcePushed"}]}