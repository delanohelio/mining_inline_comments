{"pr_number": 2003, "pr_title": "add configuration metadata", "pr_createdAt": "2020-12-09T23:37:30Z", "pr_url": "https://github.com/Netflix/conductor/pull/2003", "timeline": [{"oid": "e08181dad38dee05e6eec669cba3010f9518ceec", "url": "https://github.com/Netflix/conductor/commit/e08181dad38dee05e6eec669cba3010f9518ceec", "message": "wip", "committedDate": "2020-12-18T22:40:24Z", "type": "forcePushed"}, {"oid": "467e0395fe720302da05e7a379fbcb259fb21829", "url": "https://github.com/Netflix/conductor/commit/467e0395fe720302da05e7a379fbcb259fb21829", "message": "add configuration metadata", "committedDate": "2020-12-24T00:00:18Z", "type": "commit"}, {"oid": "8f5d5619c471ad6ab04aec1652e089b6787d7003", "url": "https://github.com/Netflix/conductor/commit/8f5d5619c471ad6ab04aec1652e089b6787d7003", "message": "wip", "committedDate": "2020-12-24T00:00:18Z", "type": "forcePushed"}, {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9", "url": "https://github.com/Netflix/conductor/commit/7a426b317f612856cf5f0c694e8419d1bcedfcd9", "message": "cleanup all properties to follow a namespaced pattern", "committedDate": "2020-12-24T00:01:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNDg1MQ==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548414851", "bodyText": "The property could be of type Duration. Not required, but maybe worth considering, https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-conversion-duration", "author": "aravindanr", "createdAt": "2020-12-24T06:33:47Z", "path": "contribs/src/main/java/com/netflix/conductor/contribs/listener/archive/ArchivingWorkflowListenerProperties.java", "diffHunk": "@@ -12,46 +12,51 @@\n  */\n package com.netflix.conductor.contribs.listener.archive;\n \n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.core.env.Environment;\n-import org.springframework.stereotype.Component;\n \n-@Component\n-@ConditionalOnProperty(prefix = \"workflow\", name = \"status.listener.type\", havingValue = \"archive\")\n+@ConfigurationProperties(\"conductor.workflow-status-listener.archival\")\n public class ArchivingWorkflowListenerProperties {\n \n     private final Environment environment;\n \n+    @Autowired\n     public ArchivingWorkflowListenerProperties(Environment environment) {\n         this.environment = environment;\n     }\n \n     /**\n      * The time to live in seconds for workflow archiving module. Currently, only RedisExecutionDAO supports this\n      */\n-    @Value(\"${workflow.archival.ttl.seconds:0}\")\n-    private int workflowArchivalTTL;\n+    private int ttlSeconds = 0;", "originalCommit": "7a426b317f612856cf5f0c694e8419d1bcedfcd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc3Ng==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r549523776", "bodyText": "Good idea, I will do this in a separate PR, since this one is already so huge. It will also make this easier to document.", "author": "apanicker-nflx", "createdAt": "2020-12-29T00:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNDg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDg1MA==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548420850", "bodyText": "Considering the fact that es5-persistence is moved out and the default is now ES6. Is this property needed? Can we constrain ES6 enablement on just this conductor.indexing.enabled?", "author": "aravindanr", "createdAt": "2020-12-24T06:57:58Z", "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchConditions.java", "diffHunk": "@@ -27,13 +27,13 @@ private ElasticSearchConditions() {\n         }\n \n         @SuppressWarnings(\"unused\")\n-        @ConditionalOnProperty(prefix = \"workflow\", name = \"indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n+        @ConditionalOnProperty(name = \"conductor.indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n         static class enabledIndexing {\n \n         }\n \n         @SuppressWarnings(\"unused\")", "originalCommit": "7a426b317f612856cf5f0c694e8419d1bcedfcd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTUwNw==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548805507", "bodyText": "We can remove this property, but historically, we have always added the support for the next elasticsearch version to co-exist with currently supported version. With version 1.x es2 was default (es5 shaded support), with version 2.x es5 is default (es6 shaded support). I believe we will continue this pattern with es7 in v3.x. The existence of this property makes it easy to add this module in the future.\nIf it feels too hand-wavy for the future, I can remove this.", "author": "apanicker-nflx", "createdAt": "2020-12-25T05:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTI2Mw==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548421263", "bodyText": "I think we can even change the package name to  just es or elasticsearch or index instead of es6.", "author": "aravindanr", "createdAt": "2020-12-24T06:59:29Z", "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchProperties.java", "diffHunk": "@@ -12,141 +12,192 @@\n  */\n package com.netflix.conductor.es6.config;", "originalCommit": "7a426b317f612856cf5f0c694e8419d1bcedfcd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTQyMg==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548805422", "bodyText": "See comment for es6 condition above.", "author": "apanicker-nflx", "createdAt": "2020-12-25T05:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTczMg==", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548421732", "bodyText": "\ud83d\udc4f  attention to detail.", "author": "aravindanr", "createdAt": "2020-12-24T07:01:41Z", "path": "mysql-persistence/src/main/java/com/netflix/conductor/mysql/config/MySQLDataSourceProvider.java", "diffHunk": "@@ -50,7 +50,7 @@ public DataSource getDataSource() {\n     private HikariConfig createConfiguration() {\n         HikariConfig hikariConfig = new HikariConfig();\n         hikariConfig.setJdbcUrl(properties.getJdbcUrl());\n-        hikariConfig.setUsername(properties.getJdbcUserName());\n+        hikariConfig.setUsername(properties.getJdbcUsername());", "originalCommit": "7a426b317f612856cf5f0c694e8419d1bcedfcd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc66dfcfc1b8a8b66dd011aa1877a92c1ca74f9c", "url": "https://github.com/Netflix/conductor/commit/bc66dfcfc1b8a8b66dd011aa1877a92c1ca74f9c", "message": "cleanup all properties to follow a namespaced pattern", "committedDate": "2020-12-29T17:55:31Z", "type": "commit"}, {"oid": "bc66dfcfc1b8a8b66dd011aa1877a92c1ca74f9c", "url": "https://github.com/Netflix/conductor/commit/bc66dfcfc1b8a8b66dd011aa1877a92c1ca74f9c", "message": "cleanup all properties to follow a namespaced pattern", "committedDate": "2020-12-29T17:55:31Z", "type": "forcePushed"}]}