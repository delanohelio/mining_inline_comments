{"pr_number": 23884, "pr_title": "Allow error, object, xml module prefixes without importing", "pr_createdAt": "2020-06-10T11:07:20Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884", "timeline": [{"oid": "f5ea1932831774e56186e62227e0791bc206215a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5ea1932831774e56186e62227e0791bc206215a", "message": "Predeclared error, object, xml module prefixes", "committedDate": "2020-06-10T07:53:28Z", "type": "commit"}, {"oid": "21086b20fdb9135fd48908d30f79a79c1e8736d8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21086b20fdb9135fd48908d30f79a79c1e8736d8", "message": "Add auto-import tests", "committedDate": "2020-06-10T08:10:57Z", "type": "commit"}, {"oid": "fd630b192f8b5be2f7e0a2fc04c552327902809f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd630b192f8b5be2f7e0a2fc04c552327902809f", "message": "Fix checkstyle issues", "committedDate": "2020-06-10T14:48:13Z", "type": "commit"}, {"oid": "8e1cafd008414a2c5c15eb47de37c2dbfc1db1b4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e1cafd008414a2c5c15eb47de37c2dbfc1db1b4", "message": "fix language server test failures", "committedDate": "2020-06-12T03:55:00Z", "type": "commit"}, {"oid": "4292bc6893c2a95272fefb48c58aebea5bdb074c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4292bc6893c2a95272fefb48c58aebea5bdb074c", "message": "Merge pull request #1 from nadeeshaan/issue-23099-local\n\nFix language server test failures", "committedDate": "2020-06-12T04:19:21Z", "type": "commit"}, {"oid": "a53093b715fb8304db4c20838ce1f8d0df7b5d62", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a53093b715fb8304db4c20838ce1f8d0df7b5d62", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099\n\n\u0001 Conflicts:\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/testablepackage/blockStatementCompletion.json", "committedDate": "2020-06-12T04:54:00Z", "type": "commit"}, {"oid": "64ca65d72b11f889a9cf3031adbaf00429359aa9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/64ca65d72b11f889a9cf3031adbaf00429359aa9", "message": "Fix checkstyle issues", "committedDate": "2020-06-12T06:02:45Z", "type": "commit"}, {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee701f93309ea1194fd53685e0add80eab4592cf", "message": "Disable a test case", "committedDate": "2020-06-12T09:57:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTQ3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439855479", "bodyText": "A minor thing. Was wondering whether we should make this an immutable map.", "author": "pubudu91", "createdAt": "2020-06-14T18:23:05Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -185,6 +185,7 @@\n \n     private Names names;\n     public Map<BPackageSymbol, SymbolEnv> pkgEnvMap = new HashMap<>();\n+    public Map<Name, BPackageSymbol> predeclaredModules = new HashMap<>();", "originalCommit": "ee701f93309ea1194fd53685e0add80eab4592cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDExOTkyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440119929", "bodyText": "Changed to immutable map.", "author": "chiranSachintha", "createdAt": "2020-06-15T11:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTQ3OQ=="}], "type": "inlineReview"}, {"oid": "b8be54826ba3dcf38e4786b5f13e4947a8cb2bbd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8be54826ba3dcf38e4786b5f13e4947a8cb2bbd", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "committedDate": "2020-06-14T18:24:06Z", "type": "commit"}, {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/565a373ea6df666d2a8a47b4e511f447dafa994e", "message": "Resolve conflicts", "committedDate": "2020-06-14T19:15:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MjI0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439862242", "bodyText": "This null check is not necessary right? We are iterating through the key set of the predeclared modules map. Therefore, there's no reason for the map to not contain the key it just retrieved", "author": "pubudu91", "createdAt": "2020-06-14T19:53:22Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -533,6 +535,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "originalCommit": "565a373ea6df666d2a8a47b4e511f447dafa994e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzA1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867059", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-06-14T21:00:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MjI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439711692", "bodyText": "Have we created an issue to track enabling these disabled langserver tests?", "author": "MaryamZi", "createdAt": "2020-06-13T05:39:20Z", "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "diffHunk": "@@ -35,7 +35,7 @@\n         log.info(\"Test textDocument/completion for Function Definition Scope\");\n         return new Object[][] {\n //                {\"topLevelCompletion.json\", \"testablepackage\"},\n-                {\"blockStatementCompletion.json\", \"testablepackage\"},\n+//                {\"blockStatementCompletion.json\", \"testablepackage\"},", "originalCommit": "ee701f93309ea1194fd53685e0add80eab4592cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxMTcwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440011704", "bodyText": "No, I will create", "author": "chiranSachintha", "createdAt": "2020-06-15T08:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzMjE3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440132171", "bodyText": "#24153", "author": "chiranSachintha", "createdAt": "2020-06-15T12:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTYwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851604", "bodyText": "Shall we add a comment explaining why we need to check for null?", "author": "MaryamZi", "createdAt": "2020-06-14T17:34:59Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "originalCommit": "ee701f93309ea1194fd53685e0add80eab4592cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzYxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867616", "bodyText": "With the changes this logic removed", "author": "chiranSachintha", "createdAt": "2020-06-14T21:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTY5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851692", "bodyText": "We can extract predeclaredModules.get(alias) out to a variable right? We seem to be using it again.", "author": "MaryamZi", "createdAt": "2020-06-14T17:35:56Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "originalCommit": "ee701f93309ea1194fd53685e0add80eab4592cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867875", "bodyText": "With the changes this logic removed", "author": "chiranSachintha", "createdAt": "2020-06-14T21:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTY5Mg=="}], "type": "inlineReview"}, {"oid": "87176ad4ba78825830441be15941426a7416fa92", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/87176ad4ba78825830441be15941426a7416fa92", "message": "Fix review suggestions", "committedDate": "2020-06-14T20:58:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NTQxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439865413", "bodyText": "If we do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(result.getErrorCount(), 5);\n          \n          \n            \n                    validateError(result, 0, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, 1, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    int index = 0;\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    assertEquals(result.getErrorCount(), index);\n          \n      \n    \n    \n  \n\ninstead, we also assert that the actual error count matches the expected and that we've asserted all of the errors.", "author": "MaryamZi", "createdAt": "2020-06-14T20:36:44Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsNegativeTests.java", "diffHunk": "@@ -39,4 +39,16 @@ public void testInvalidImportOnMultipleFiles() {\n         validateError(result, 0, \"cannot resolve module 'unknown/module'\", 1, 1);\n         validateError(result, 1, \"cannot resolve module 'unknown/module'\", 1, 1);\n     }\n+\n+    @Test(description = \"Test invalid autoimports\")\n+    public void testInvalidAutoImports() {\n+        CompileResult result = BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"rpg\");\n+        assertEquals(result.getErrorCount(), 5);\n+        validateError(result, 0, \"undefined function 'max'\", 3, 12);\n+        validateError(result, 1, \"undefined function 'min'\", 7, 12);\n+        validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n+        validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n+        validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n+", "originalCommit": "565a373ea6df666d2a8a47b4e511f447dafa994e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwNDM3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440004372", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-06-15T08:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NTQxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867888", "bodyText": "Shall we refactor this into something like\n            if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT) {\n                Name importCompUnit = ((BPackageSymbol) entry.symbol).compUnit;\n                if (importCompUnit == null) {\n                    return entry.symbol;\n                } else if (importCompUnit.equals(compUnit)) {\n                    ((BPackageSymbol) entry.symbol).isUsed = true;\n                    return entry.symbol;\n                }\n            }", "author": "MaryamZi", "createdAt": "2020-06-14T21:11:15Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "originalCommit": "87176ad4ba78825830441be15941426a7416fa92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzkyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867921", "bodyText": "Let's also add a comment to say why the compUnit can be null here?", "author": "MaryamZi", "createdAt": "2020-06-14T21:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwNDA2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440004063", "bodyText": "Done", "author": "chiranSachintha", "createdAt": "2020-06-15T08:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA=="}], "type": "inlineReview"}, {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/048014dcd4d756b7ce6058835bfc2f832061fc86", "message": "Fix review suggestions", "committedDate": "2020-06-15T11:46:47Z", "type": "commit"}, {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/048014dcd4d756b7ce6058835bfc2f832061fc86", "message": "Fix review suggestions", "committedDate": "2020-06-15T11:46:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440125692", "bodyText": "What I meant was something like\nMap<Name, BPackageSymbol> modules = new HashMap<>();\nmodules.put(Names.ERROR, this.langErrorModuleSymbol);\nmodules.put(Names.OBJECT, this.langObjectModuleSymbol);\nmodules.put(Names.XML, this.langXmlModuleSymbol);\n\nthis.predeclaredModules = Collections.unmodifiableMap(modules);", "author": "pubudu91", "createdAt": "2020-06-15T12:01:17Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -347,6 +349,14 @@ public BType getLangLibSubType(String name) {\n         throw new IllegalStateException(\"LangLib Subtype not found: \" + name);\n     }\n \n+    public void loadPredeclaredModules() {\n+        this.predeclaredModules.put(Names.ERROR, this.langErrorModuleSymbol);\n+        this.predeclaredModules.put(Names.OBJECT, this.langObjectModuleSymbol);\n+        this.predeclaredModules.put(Names.XML, this.langXmlModuleSymbol);\n+\n+        this.predeclaredModules = Collections.unmodifiableMap(this.predeclaredModules);", "originalCommit": "048014dcd4d756b7ce6058835bfc2f832061fc86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0MzM4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440143382", "bodyText": "It gives NullPointerException while building blang packages in this way.", "author": "chiranSachintha", "createdAt": "2020-06-15T12:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2OTI1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440469256", "bodyText": "Changed (As mention in the #23884 (comment))", "author": "chiranSachintha", "createdAt": "2020-06-15T21:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg=="}], "type": "inlineReview"}, {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4db20d5f908137493cfc496e8bdc31ed33cb1cc6", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099", "committedDate": "2020-06-15T17:48:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440443317", "bodyText": "Are we only building these or are we also validating the functionality?", "author": "MaryamZi", "createdAt": "2020-06-15T20:58:54Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "diffHunk": "@@ -63,4 +63,10 @@ public void testSameModuleNameDifferentOrgImports() {\n         BValue[] returns = BRunUtil.invoke(result, \"getStringValueOfPI\");\n         Assert.assertTrue((returns[0]).stringValue().startsWith(\"3.14\"));\n     }\n+\n+    @Test(description = \"Test auto imports\")\n+    public void testPredeclaredModules() {\n+        BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"bar\");", "originalCommit": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1ODIwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440458207", "bodyText": "Only building that module. Is it need to validate functionality here?", "author": "chiranSachintha", "createdAt": "2020-06-15T21:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMDg0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440530841", "bodyText": "Could you please send a separate PR validating 0 diagnostics.", "author": "rdhananjaya", "createdAt": "2020-06-16T01:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw=="}], "type": "inlineReview"}, {"oid": "3b2fa5a3138358eeb79631adea903a6891a43dd9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b2fa5a3138358eeb79631adea903a6891a43dd9", "message": "Fix review suggestions", "committedDate": "2020-06-15T21:27:32Z", "type": "commit"}]}