{"pr_number": 22614, "pr_title": "Add test cases for query expressions", "pr_createdAt": "2020-04-15T04:32:22Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22614", "timeline": [{"oid": "0f4f96da3e83edaf6b7809d733632e0d96aeddc9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0f4f96da3e83edaf6b7809d733632e0d96aeddc9", "message": "Add additional test scenarios", "committedDate": "2020-04-13T05:33:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5OTYzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22614#discussion_r408599635", "bodyText": "Add license headers. Refer already added class", "author": "pcnfernando", "createdAt": "2020-04-15T06:03:03Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/AdditionalNegativeScenariosTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.ballerinalang.test.query;", "originalCommit": "0f4f96da3e83edaf6b7809d733632e0d96aeddc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTAwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22614#discussion_r408601009", "bodyText": "Line length should be less than 120", "author": "pcnfernando", "createdAt": "2020-04-15T06:07:24Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/AdditionalNegativeScenariosTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.ballerinalang.test.query;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+public class AdditionalNegativeScenariosTest {\n+\t\n+    @Test\n+    public void testAllAdditionalNegativeScenarios() {\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/query/additional-negative-scenarios.bal\");\n+        Assert.assertEquals(compileResult.getErrorCount(), 9);\n+        int index = 0;\n+\n+        validateError(compileResult, index++, \"missing non-defaultable required record field 'lastName'\",33, 10);\n+        validateError(compileResult, index++, \"incompatible types: expected 'float', found 'int'\", 54, 13);\n+        validateError(compileResult, index++, \"undefined function 'calculateScore'\", 69, 22);\n+        validateError(compileResult, index++, \"invalid record binding pattern; unknown field 'fname' in record type 'Student'\", 106, 12);", "originalCommit": "0f4f96da3e83edaf6b7809d733632e0d96aeddc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTEwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22614#discussion_r408601105", "bodyText": "Remove unnecessary new lines", "author": "pcnfernando", "createdAt": "2020-04-15T06:07:45Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/AdditionalNegativeScenariosTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.ballerinalang.test.query;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+public class AdditionalNegativeScenariosTest {\n+\t\n+    @Test\n+    public void testAllAdditionalNegativeScenarios() {\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/query/additional-negative-scenarios.bal\");\n+        Assert.assertEquals(compileResult.getErrorCount(), 9);\n+        int index = 0;\n+\n+        validateError(compileResult, index++, \"missing non-defaultable required record field 'lastName'\",33, 10);\n+        validateError(compileResult, index++, \"incompatible types: expected 'float', found 'int'\", 54, 13);\n+        validateError(compileResult, index++, \"undefined function 'calculateScore'\", 69, 22);\n+        validateError(compileResult, index++, \"invalid record binding pattern; unknown field 'fname' in record type 'Student'\", 106, 12);\n+        validateError(compileResult, index++, \"undefined symbol 'fname'\", 108, 15);\n+        validateError(compileResult, index++, \"incompatible types: expected 'Student', found '(string|float)'\", 123, 10);\n+        validateError(compileResult, index++, \"cannot assign a value to final 'twiceScore'\", 140, 10);\n+        validateError(compileResult, index++, \"incompatible types: expected 'FullName[]', found 'error?'\", 147, 13);\n+        validateError(compileResult, index, \"incompatible types: expected 'Address', found 'map<string>'\", 164, 13);\n+", "originalCommit": "0f4f96da3e83edaf6b7809d733632e0d96aeddc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ebb63eddfeecab04c61c2edfc1adc200526c79b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2ebb63eddfeecab04c61c2edfc1adc200526c79b", "message": "Include license header and reformat code fragments", "committedDate": "2020-04-15T08:19:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NTIzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22614#discussion_r408675235", "bodyText": "Let's move the tests to existing negative test classes", "author": "pcnfernando", "createdAt": "2020-04-15T08:37:57Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/AdditionalNegativeScenariosTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.query;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+/**\n+ * Additional negative test cases for query expressions and query actions\n+ *\n+ * @since 1.2.0\n+ */\n+public class AdditionalNegativeScenariosTest {", "originalCommit": "2ebb63eddfeecab04c61c2edfc1adc200526c79b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cbe25c1f036c18ba8f9100d0af4ae1401ff2e69f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbe25c1f036c18ba8f9100d0af4ae1401ff2e69f", "message": "Include test cases to existing classes", "committedDate": "2020-04-15T14:08:55Z", "type": "commit"}, {"oid": "77ba760da27975ed8e5ee68fb055adac7fc0b652", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77ba760da27975ed8e5ee68fb055adac7fc0b652", "message": "Update MultipleFromClauseTest", "committedDate": "2020-04-15T14:15:05Z", "type": "commit"}, {"oid": "262d413b48eed3164bc3cc3c3107a9fd92e0c702", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/262d413b48eed3164bc3cc3c3107a9fd92e0c702", "message": "Update QueryNegativeTests.java", "committedDate": "2020-04-15T14:25:08Z", "type": "commit"}, {"oid": "6896d6812caf13330d68480da66d5671ba8064bb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6896d6812caf13330d68480da66d5671ba8064bb", "message": "Remove tab characters in MultipleFromClauseTest", "committedDate": "2020-04-15T16:05:08Z", "type": "commit"}, {"oid": "dc1b6440cf21c55e6fad9984454b41a33824088f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dc1b6440cf21c55e6fad9984454b41a33824088f", "message": "Remove tabs in SimpleQryExprWithDefinedTypeTest", "committedDate": "2020-04-15T16:08:15Z", "type": "commit"}, {"oid": "052ad0326dcb4a2ee8cce97cf3f3eb0d686ba2db", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/052ad0326dcb4a2ee8cce97cf3f3eb0d686ba2db", "message": "Update MultipleFromClauseTest.java", "committedDate": "2020-04-15T17:47:09Z", "type": "commit"}, {"oid": "3d845b3192ca5dccbb7407c4ca4efa613c37c45e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d845b3192ca5dccbb7407c4ca4efa613c37c45e", "message": "Update MultipleWhereClauseTest.java", "committedDate": "2020-04-15T17:48:04Z", "type": "commit"}]}