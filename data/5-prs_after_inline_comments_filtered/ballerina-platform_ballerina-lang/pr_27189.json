{"pr_number": 27189, "pr_title": "Add missing type descriptors", "pr_createdAt": "2020-11-26T18:44:13Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189", "timeline": [{"oid": "9723c3422eb4f494b78eeb4711531df6bc6ee3af", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9723c3422eb4f494b78eeb4711531df6bc6ee3af", "message": "Add tests for distinct classes and objects", "committedDate": "2020-12-01T16:39:22Z", "type": "forcePushed"}, {"oid": "acbaa906517f99db244f8d92d734d444c527ca3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acbaa906517f99db244f8d92d734d444c527ca3e", "message": "Remove SimpleTypeSymbol", "committedDate": "2020-12-01T21:19:08Z", "type": "forcePushed"}, {"oid": "33cbc68bacda2328a00ec2df39c0893e09db9061", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33cbc68bacda2328a00ec2df39c0893e09db9061", "message": "Fix lang server tests", "committedDate": "2020-12-03T12:31:39Z", "type": "forcePushed"}, {"oid": "444800448ca76faab65ee45d5ae0a9236f4736a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/444800448ca76faab65ee45d5ae0a9236f4736a2", "message": "Fix lang server tests", "committedDate": "2020-12-07T05:47:52Z", "type": "forcePushed"}, {"oid": "bc6040b3327f5194aac42c038a2cd56903bbedff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc6040b3327f5194aac42c038a2cd56903bbedff", "message": "Fix lang server tests", "committedDate": "2020-12-08T04:43:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2OTM1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538069357", "bodyText": "will it be possible to assign CHAR kind?", "author": "nadeeshaan", "createdAt": "2020-12-08T06:31:41Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaCharTypeSymbol.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.impl.symbols;\n+\n+import io.ballerina.compiler.api.ModuleID;\n+import io.ballerina.compiler.api.symbols.CharTypeSymbol;\n+import io.ballerina.compiler.api.symbols.TypeDescKind;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BStringSubType;\n+import org.wso2.ballerinalang.compiler.util.CompilerContext;\n+\n+/**\n+ * Represents the string:Char type descriptor.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BallerinaCharTypeSymbol extends AbstractTypeSymbol implements CharTypeSymbol {\n+\n+    public BallerinaCharTypeSymbol(CompilerContext context, ModuleID moduleID, BStringSubType charType) {\n+        super(context, TypeDescKind.STRING, moduleID, charType);", "originalCommit": "bc6040b3327f5194aac42c038a2cd56903bbedff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDM0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538070340", "bodyText": "Same as the Char type, will it be possible to have a subtype kind? Otherwise in order to distinguish we will have to have an instance of check", "author": "nadeeshaan", "createdAt": "2020-12-08T06:34:07Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaIntSigned16TypeSymbol.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.impl.symbols;\n+\n+import io.ballerina.compiler.api.ModuleID;\n+import io.ballerina.compiler.api.symbols.IntSigned16TypeSymbol;\n+import io.ballerina.compiler.api.symbols.TypeDescKind;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BIntSubType;\n+import org.wso2.ballerinalang.compiler.util.CompilerContext;\n+import org.wso2.ballerinalang.compiler.util.Names;\n+\n+/**\n+ * Represents the int:Signed16 type descriptor.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BallerinaIntSigned16TypeSymbol extends AbstractTypeSymbol implements IntSigned16TypeSymbol {\n+\n+    public BallerinaIntSigned16TypeSymbol(CompilerContext context, ModuleID moduleID, BIntSubType signed16Type) {\n+        super(context, TypeDescKind.INT, moduleID, signed16Type);", "originalCommit": "bc6040b3327f5194aac42c038a2cd56903bbedff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MzgwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538073803", "bodyText": "We can include. The downside would be if we want to check if the type is an integer kind, we'll have to consider all the types and/or provide a util to check if the type is an integer kind", "author": "pubudu91", "createdAt": "2020-12-08T06:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDc5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538074794", "bodyText": "My suggestion is, that we keep a separate API for the subtype. We have to consider this when we order the suggestions with the priority", "author": "nadeeshaan", "createdAt": "2020-12-08T06:44:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI2MDI4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538260280", "bodyText": "Added the discussed APIs to the respective type symbols.", "author": "pubudu91", "createdAt": "2020-12-08T11:27:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk2NzU4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538967581", "bodyText": "What if we introduce a common interface for all subtypes?\nThat interface can have a method called subtype()", "author": "SupunS", "createdAt": "2020-12-09T02:58:03Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/StringTypeSymbol.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.symbols;\n+\n+/**\n+ * Represents the string type descriptor.\n+ *\n+ * @since 2.0.0\n+ */\n+public interface StringTypeSymbol extends TypeSymbol {\n+\n+    /**\n+     * Retrieves the string kind represented by the type symbol. Intended to be used when one needs to differentiate\n+     * between the different kinds of string subtypes.\n+     *\n+     * @return The kind of string represented\n+     */\n+    Kind stringKind();", "originalCommit": "5b47972208e13c27b1fe10e33bfe59e7f2c4f017", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwNzY5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r539107692", "bodyText": "What would the return type of subtype() be?", "author": "pubudu91", "createdAt": "2020-12-09T08:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk2NzU4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc4NzA1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r539787052", "bodyText": "I was thinking of returning a similar enum (a merged enum with all subtypes)", "author": "SupunS", "createdAt": "2020-12-10T02:01:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk2NzU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk2ODQwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r538968406", "bodyText": "What are the possible types that could fall on to this group?", "author": "SupunS", "createdAt": "2020-12-09T03:00:13Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeSymbol.java", "diffHunk": "@@ -17,29 +17,23 @@\n package io.ballerina.compiler.api.impl.symbols;\n \n import io.ballerina.compiler.api.ModuleID;\n-import io.ballerina.compiler.api.symbols.SimpleTypeSymbol;\n import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n import org.wso2.ballerinalang.compiler.util.CompilerContext;\n \n /**\n- * Represents the built-in simple type descriptor.\n+ * Represents type descriptors which do not fall in to any other type descriptor.", "originalCommit": "5b47972208e13c27b1fe10e33bfe59e7f2c4f017", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwOTQ5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r539109496", "bodyText": "With the changes introduced in this PR, this becomes a sort of a fall back type symbol for any typedescs we may have missed. Currently the only one I can think of is the \"dependent type\". Plan is to get rid of this altogether for alpha.", "author": "pubudu91", "createdAt": "2020-12-09T08:38:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk2ODQwNg=="}], "type": "inlineReview"}, {"oid": "13a3a323ffee4d951073d89985aac545ad1e26c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13a3a323ffee4d951073d89985aac545ad1e26c9", "message": "Sync with master and fix broken tests", "committedDate": "2020-12-09T09:10:26Z", "type": "forcePushed"}, {"oid": "34b44c334b6119b616708b8506d6b91769a16c3a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34b44c334b6119b616708b8506d6b91769a16c3a", "message": "Sync with master and fix broken tests", "committedDate": "2020-12-09T09:36:11Z", "type": "forcePushed"}, {"oid": "e3a4172f98ff63e25e0f47f0989bf6d353bbe0b4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e3a4172f98ff63e25e0f47f0989bf6d353bbe0b4", "message": "Add never type descriptor", "committedDate": "2020-12-14T11:52:35Z", "type": "commit"}, {"oid": "82869aadc05c09592cda29fe681420c061d51e92", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82869aadc05c09592cda29fe681420c061d51e92", "message": "Add intersection type descriptor", "committedDate": "2020-12-14T11:52:36Z", "type": "commit"}, {"oid": "8a49c192f24baf2526ab694a6462e7b31181a809", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a49c192f24baf2526ab694a6462e7b31181a809", "message": "Remove typeQualifiers() from object type symbol", "committedDate": "2020-12-14T11:52:36Z", "type": "commit"}, {"oid": "f09ccc21758c76aad215a2f940ef6a37a75d942d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f09ccc21758c76aad215a2f940ef6a37a75d942d", "message": "Fix qualifiers() in object type symbol", "committedDate": "2020-12-14T11:52:37Z", "type": "commit"}, {"oid": "875889ec7bb998453668afddca2b588b2fa0a0f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/875889ec7bb998453668afddca2b588b2fa0a0f9", "message": "Update qualifiers for classes", "committedDate": "2020-12-14T11:52:37Z", "type": "commit"}, {"oid": "888b2c12e2bd1621137f52d7c90075853b95249f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/888b2c12e2bd1621137f52d7c90075853b95249f", "message": "Add tests for distinct classes and objects", "committedDate": "2020-12-14T11:52:37Z", "type": "commit"}, {"oid": "e98db75013c3d8bb0685fbadf74f794d19fc53a5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e98db75013c3d8bb0685fbadf74f794d19fc53a5", "message": "Add an error type symbol for compilation errors", "committedDate": "2020-12-14T11:52:38Z", "type": "commit"}, {"oid": "180e31d0f679d5999a5d70c23afe1f3340ef6e89", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/180e31d0f679d5999a5d70c23afe1f3340ef6e89", "message": "Add separate type symbol for string", "committedDate": "2020-12-14T11:52:38Z", "type": "commit"}, {"oid": "f0aa01b9feca51b5ef4cbfbaa64142978a9f632d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0aa01b9feca51b5ef4cbfbaa64142978a9f632d", "message": "Add a separate type symbol for boolean", "committedDate": "2020-12-14T11:52:38Z", "type": "commit"}, {"oid": "763102fef2612fc03e0fb9c15c06b250604722f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/763102fef2612fc03e0fb9c15c06b250604722f8", "message": "Add a separate type symbol for int", "committedDate": "2020-12-14T11:52:38Z", "type": "commit"}, {"oid": "048f12c7742866b1d894b75c9cdbf15e3690a0cf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/048f12c7742866b1d894b75c9cdbf15e3690a0cf", "message": "Add a separate type symbol for float", "committedDate": "2020-12-14T11:52:39Z", "type": "commit"}, {"oid": "1b6c7c3d590f0fa35cba750ad5fa9cd05edf2254", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b6c7c3d590f0fa35cba750ad5fa9cd05edf2254", "message": "Add a separate type symbol for decimal", "committedDate": "2020-12-14T11:52:39Z", "type": "commit"}, {"oid": "42ec5817d6fd2c85daf2788e273cecd5a843b7af", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42ec5817d6fd2c85daf2788e273cecd5a843b7af", "message": "Add separate type symbols for int sub types", "committedDate": "2020-12-14T11:52:39Z", "type": "commit"}, {"oid": "aa790e76752221baf8759c0154b3f550c9a5561f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa790e76752221baf8759c0154b3f550c9a5561f", "message": "Add separate type symbols for XML sub types", "committedDate": "2020-12-14T11:52:39Z", "type": "commit"}, {"oid": "8f24761751faae8d9166d745b6ea942b36c47f08", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8f24761751faae8d9166d745b6ea942b36c47f08", "message": "Add a separate type symbol for Char", "committedDate": "2020-12-14T11:52:40Z", "type": "commit"}, {"oid": "702dfd0ad1fea1ffcea2504855e8586e183584d6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/702dfd0ad1fea1ffcea2504855e8586e183584d6", "message": "Remove SimpleTypeSymbol", "committedDate": "2020-12-14T11:52:40Z", "type": "commit"}, {"oid": "f71405e3320ffeb19704af23dff44b0c0725ac33", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f71405e3320ffeb19704af23dff44b0c0725ac33", "message": "Fix conflict", "committedDate": "2020-12-14T11:52:40Z", "type": "commit"}, {"oid": "ea42df6c48b4a3b60f2a81cce95c8fc8c4c16c81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea42df6c48b4a3b60f2a81cce95c8fc8c4c16c81", "message": "Fix lang server tests", "committedDate": "2020-12-14T11:52:41Z", "type": "commit"}, {"oid": "188f697821fd7b9149695f08e0c199494b917fec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/188f697821fd7b9149695f08e0c199494b917fec", "message": "Add an API to get the int subtype kinds", "committedDate": "2020-12-14T11:52:41Z", "type": "commit"}, {"oid": "6b516d6d69d226dba2ea56fbdc3aab270e288316", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b516d6d69d226dba2ea56fbdc3aab270e288316", "message": "Add an API to get XML subtype kinds", "committedDate": "2020-12-14T11:52:41Z", "type": "commit"}, {"oid": "32d89a551385c04bfef5c2a47e2c6eac530edebc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/32d89a551385c04bfef5c2a47e2c6eac530edebc", "message": "Add an API to get string subtype kinds", "committedDate": "2020-12-14T11:52:42Z", "type": "commit"}, {"oid": "62290c1b86e8f012efbd7b8c5d4662e51328e4a7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/62290c1b86e8f012efbd7b8c5d4662e51328e4a7", "message": "Add tests for subtype kinds", "committedDate": "2020-12-14T11:52:42Z", "type": "commit"}, {"oid": "0e1c4360c331f5fb2180d792fe59d2262c4f4423", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e1c4360c331f5fb2180d792fe59d2262c4f4423", "message": "Sync with master and fix broken tests", "committedDate": "2020-12-14T11:52:42Z", "type": "commit"}, {"oid": "d6b124ef20fdeb00723f567607654ab63b980adb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6b124ef20fdeb00723f567607654ab63b980adb", "message": "Add builtin subtype kinds as regular typedesc kinds", "committedDate": "2020-12-14T13:01:44Z", "type": "commit"}, {"oid": "13fb2cb18c371c32d79a876f7297090106da9749", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13fb2cb18c371c32d79a876f7297090106da9749", "message": "Rename CharTypeSymbol -> StringCharTypeSymbol", "committedDate": "2020-12-14T13:03:48Z", "type": "commit"}, {"oid": "063c9c0bf288540bde5a117f00d1b8fc0fe20612", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/063c9c0bf288540bde5a117f00d1b8fc0fe20612", "message": "Add APIs for checking type kinds for XML and string", "committedDate": "2020-12-14T13:33:04Z", "type": "forcePushed"}, {"oid": "7e7cec951d951a717cd4d1057b2eabc0451f22be", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7e7cec951d951a717cd4d1057b2eabc0451f22be", "message": "Add APIs for checking type kinds for XML and string", "committedDate": "2020-12-14T17:50:38Z", "type": "commit"}, {"oid": "7e7cec951d951a717cd4d1057b2eabc0451f22be", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7e7cec951d951a717cd4d1057b2eabc0451f22be", "message": "Add APIs for checking type kinds for XML and string", "committedDate": "2020-12-14T17:50:38Z", "type": "forcePushed"}, {"oid": "bbe668342542f6606862f9630eafa4529335a3e1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bbe668342542f6606862f9630eafa4529335a3e1", "message": "Add byte typedesc", "committedDate": "2020-12-14T18:41:03Z", "type": "commit"}, {"oid": "6e8df9e9e312980f16d4176ad49683fb14e66ea6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6e8df9e9e312980f16d4176ad49683fb14e66ea6", "message": "Include module prefix in subtype signature", "committedDate": "2020-12-14T19:16:36Z", "type": "commit"}, {"oid": "3449a37eee11a9b4f5c9019ba43dc309fa4da5ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3449a37eee11a9b4f5c9019ba43dc309fa4da5ed", "message": "Fix lang server tests", "committedDate": "2020-12-15T04:41:28Z", "type": "commit"}, {"oid": "3449a37eee11a9b4f5c9019ba43dc309fa4da5ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3449a37eee11a9b4f5c9019ba43dc309fa4da5ed", "message": "Fix lang server tests", "committedDate": "2020-12-15T04:41:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4ODU3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27189#discussion_r543288573", "bodyText": "can we use this.typeDescKind.getName()? would be better than hardcoding", "author": "SupunS", "createdAt": "2020-12-15T12:08:30Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaByteTypeSymbol.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.impl.symbols;\n+\n+import io.ballerina.compiler.api.ModuleID;\n+import io.ballerina.compiler.api.symbols.ByteTypeSymbol;\n+import io.ballerina.compiler.api.symbols.TypeDescKind;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n+import org.wso2.ballerinalang.compiler.util.CompilerContext;\n+\n+/**\n+ * Represents the byte type descriptor.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BallerinaByteTypeSymbol extends AbstractTypeSymbol implements ByteTypeSymbol {\n+\n+    public BallerinaByteTypeSymbol(CompilerContext context, ModuleID moduleID, BType byteType) {\n+        super(context, TypeDescKind.BYTE, moduleID, byteType);\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"byte\";", "originalCommit": "3449a37eee11a9b4f5c9019ba43dc309fa4da5ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}