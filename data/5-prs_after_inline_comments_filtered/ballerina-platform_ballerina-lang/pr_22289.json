{"pr_number": 22289, "pr_title": "Fix hasfiller value for BFiniteType created for const literals", "pr_createdAt": "2020-03-29T16:17:50Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0Mjc5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401142792", "bodyText": "Why are we doing these changes? IINM some of them are as per the style guidelines.", "author": "MaryamZi", "createdAt": "2020-03-31T18:57:29Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1887,18 +1843,15 @@ public Boolean visit(BServiceType t, BType s) {\n \n         @Override\n         public Boolean visit(BTypedescType t, BType s) {\n-\n             if (s.tag != TypeTags.TYPEDESC) {\n                 return false;\n             }\n             BTypedescType sType = ((BTypedescType) s);\n             return isSameType(sType.constraint, t.constraint, this.unresolvedTypes);\n         }\n \n-\n         @Override\n         public Boolean visit(BFiniteType t, BType s) {\n-", "originalCommit": "31c43acf21d221d5b0a60df10e82b5801493ccac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NzU3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401247576", "bodyText": "Leave your code better than you found it. Boy Scout Rule.\nreverted.  I will check the guidelines.", "author": "KRVPerera", "createdAt": "2020-03-31T22:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0Mjc5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0NTg0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401145849", "bodyText": "Type tags mean something else for the compiler right? Shall we use a different name?", "author": "MaryamZi", "createdAt": "2020-03-31T19:02:34Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -2893,14 +2843,27 @@ private boolean checkFillerValue(BUnionType type) {\n         if (type.isNullable()) {\n             return true;\n         }\n-        Iterator<BType> iterator = type.getMemberTypes().iterator();\n+        Set<BType> typeTags = new HashSet<>();", "originalCommit": "31c43acf21d221d5b0a60df10e82b5801493ccac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0OTI2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401149266", "bodyText": "The name of the function is not accurate right?\nAlso, this is like a specific scenario so I think this shouldn't be a method in BFiniteType.java. We can maybe introduce a method in the Types.java class itself instead.", "author": "MaryamZi", "createdAt": "2020-03-31T19:08:36Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BFiniteType.java", "diffHunk": "@@ -115,4 +116,16 @@ public void addValue(BLangExpression value) {\n             nullable = true;\n         }\n     }\n+\n+    public Set<BType> getUniqueValues() {", "originalCommit": "31c43acf21d221d5b0a60df10e82b5801493ccac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1MTQ2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401151462", "bodyText": "Can you please share an example where the member in the value space of a finite type is another finite type?", "author": "MaryamZi", "createdAt": "2020-03-31T19:12:21Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BFiniteType.java", "diffHunk": "@@ -115,4 +116,16 @@ public void addValue(BLangExpression value) {\n             nullable = true;\n         }\n     }\n+\n+    public Set<BType> getUniqueValues() {\n+        Set<BType> uniqueType = new HashSet<>();\n+        for (BLangExpression expression : this.valueSpace) {\n+            if (expression.type.tag != TypeTags.FINITE) {\n+                uniqueType.add(expression.type);\n+            } else {\n+                uniqueType.addAll(((BFiniteType) expression.type).getUniqueValues());", "originalCommit": "31c43acf21d221d5b0a60df10e82b5801493ccac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTQxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401245413", "bodyText": "Think I have confused this with the union type", "author": "KRVPerera", "createdAt": "2020-03-31T22:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1MTQ2Mg=="}], "type": "inlineReview"}, {"oid": "9360d49bd743b890cd22ec8132cb12474c389dc5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9360d49bd743b890cd22ec8132cb12474c389dc5", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-31T22:09:42Z", "type": "forcePushed"}, {"oid": "8ca2e8ba069d94e0511bc97bef7a82057638a72d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ca2e8ba069d94e0511bc97bef7a82057638a72d", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-31T22:28:36Z", "type": "forcePushed"}, {"oid": "0b912eccfa70fe70490e19528e531ee4496cfbe6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b912eccfa70fe70490e19528e531ee4496cfbe6", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-31T22:31:13Z", "type": "forcePushed"}, {"oid": "7d8c6b9b8a27dc232f9f3996ed8307c27ae87208", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d8c6b9b8a27dc232f9f3996ed8307c27ae87208", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity. Revert unwanted code changes.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-31T22:32:43Z", "type": "forcePushed"}, {"oid": "3f4b9c7ac9d2d224db4fe2216944593d3cb0d9bf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f4b9c7ac9d2d224db4fe2216944593d3cb0d9bf", "message": "Add test cases for union filling\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "e8d4a6c8202c9906d53e53d27d2981e8d77da2bc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8d4a6c8202c9906d53e53d27d2981e8d77da2bc", "message": "Fix list-expr filler value check for Union\n\nConst Types or singleton values were comparison does not check the type\nbut does a `==` check for BFiniteType.\n\nNow filler value check will specially handle Unions with BFiniteType.\nIts Types will be flattened and collected together and check for is same\ntype on the collected list. Default filler value check still process\nBFiniteType without flattening it.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "d8fd0cee4f0f4a2ffa37ea2be14773597c5a7cc2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8fd0cee4f0f4a2ffa37ea2be14773597c5a7cc2", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity. Revert unwanted code changes.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "93d8caaef728a03fafe25ff808dce87c03ef8116", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93d8caaef728a03fafe25ff808dce87c03ef8116", "message": "Add default filler value check for const unions\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "880e7af4ac473ae93b81aa57dfcc4882476b0142", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/880e7af4ac473ae93b81aa57dfcc4882476b0142", "message": "Fix code style\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "a0928ea34135e755b6a15bfb17ec1911b97e83d3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a0928ea34135e755b6a15bfb17ec1911b97e83d3", "message": "Update compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "60789aac7dbc9847a8c14fc2f082b9a153187c6a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60789aac7dbc9847a8c14fc2f082b9a153187c6a", "message": "Add test int literal int - filler value check\n[no ci]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "a9002903d01ad1d3c3655a31b9da67d0467190d0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a9002903d01ad1d3c3655a31b9da67d0467190d0", "message": "Code refactor hasFillerValue area\n[no ci]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "3935c00a60cf8d02f2be3328ba188faf57d32fd4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3935c00a60cf8d02f2be3328ba188faf57d32fd4", "message": "Add int subtype union\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "ed9d97de7b35f83b85b098db7961c55ce8e9421a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed9d97de7b35f83b85b098db7961c55ce8e9421a", "message": "Fix int subtype union filler value check issue\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "54766e1f9a45f17fd32a7be39fede4c6f6e4987f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54766e1f9a45f17fd32a7be39fede4c6f6e4987f", "message": "Add mistakenly removed test cases\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "63ca6e27a95701192a37d569969ab15705d7ff4e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/63ca6e27a95701192a37d569969ab15705d7ff4e", "message": "Add integer,string,xml subtypes filler value check\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "6717a280495752afa6459e355c717906021923e2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6717a280495752afa6459e355c717906021923e2", "message": "Remove xml subtypes and byte string\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "e2737276d251ce378ce2ff09242685b692045ae1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2737276d251ce378ce2ff09242685b692045ae1", "message": "Code style fix\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "commit"}, {"oid": "e2737276d251ce378ce2ff09242685b692045ae1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2737276d251ce378ce2ff09242685b692045ae1", "message": "Code style fix\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T10:30:27Z", "type": "forcePushed"}, {"oid": "bb39e254ae3b399a9536b9f39dfdfb18df240303", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb39e254ae3b399a9536b9f39dfdfb18df240303", "message": "Enable createSealedArraysOfIntSubtypes test case\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-04-02T11:00:16Z", "type": "commit"}, {"oid": "6190f385252dbc6dcf85c1086975a3d762e2b483", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6190f385252dbc6dcf85c1086975a3d762e2b483", "message": "Remove xml subtype commented filler value code", "committedDate": "2020-04-15T06:31:44Z", "type": "commit"}]}