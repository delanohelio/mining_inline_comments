{"pr_number": 26384, "pr_title": "[Formatter] Fix test cases and exception handling", "pr_createdAt": "2020-10-16T09:47:55Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384", "timeline": [{"oid": "e0fd246e4b28941552a29462d477896c6f903892", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0fd246e4b28941552a29462d477896c6f903892", "message": "Fix class_definition_declaration_5 test case", "committedDate": "2020-10-16T09:54:25Z", "type": "commit"}, {"oid": "f5a7a55e1992c295dc795fc93c0321c99853b1b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5a7a55e1992c295dc795fc93c0321c99853b1b0", "message": "Fix the indentation issue in query expressions", "committedDate": "2020-10-16T09:54:25Z", "type": "commit"}, {"oid": "323ba3e9839b57367d82f049620fc04c47b44343", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/323ba3e9839b57367d82f049620fc04c47b44343", "message": "Fix an incorrect assert file", "committedDate": "2020-10-16T09:54:25Z", "type": "commit"}, {"oid": "33b81054bcdb20b7f1637d55b0acfddfa02f46ec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33b81054bcdb20b7f1637d55b0acfddfa02f46ec", "message": "Handle exceptions while formatting", "committedDate": "2020-10-16T09:54:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0NjU5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506246591", "bodyText": "Reduce the two return statements (Within try and the catch blocks) to a single one.", "author": "nadeeshaan", "createdAt": "2020-10-16T10:00:49Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3630,33 +3635,39 @@ public Token transform(Token token) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private <T extends Node> T formatNode(T node, int trailingWS, int trailingNL) {\n-        if (node == null || node.isMissing()) {\n-            return node;\n-        }\n+        try {\n+            if (node == null || node.isMissing()) {\n+                return node;\n+            }\n \n-        if (!isInLineRange(node, lineRange)) {\n-            checkForNewline(node);\n-            return node;\n-        }\n+            if (!isInLineRange(node, lineRange)) {\n+                checkForNewline(node);\n+                return node;\n+            }\n \n-        int prevTrailingNL = env.trailingNL;\n-        int prevTrailingWS = env.trailingWS;\n-        env.trailingNL = trailingNL;\n-        env.trailingWS = trailingWS;\n+            int prevTrailingNL = env.trailingNL;\n+            int prevTrailingWS = env.trailingWS;\n+            env.trailingNL = trailingNL;\n+            env.trailingWS = trailingWS;\n \n-        // Cache the current node and parent before format.\n-        // Because reference to the nodes will change after modifying.\n-        T oldNode = node;\n-        Node parent = node.parent();\n+            // Cache the current node and parent before format.\n+            // Because reference to the nodes will change after modifying.\n+            T oldNode = node;\n+            Node parent = node.parent();\n \n-        node = (T) node.apply(this);\n-        if (shouldWrapLine(oldNode, parent)) {\n-            node = wrapLine(oldNode, parent);\n-        }\n+            node = (T) node.apply(this);\n+            if (shouldWrapLine(oldNode, parent)) {\n+                node = wrapLine(oldNode, parent);\n+            }\n \n-        env.trailingNL = prevTrailingNL;\n-        env.trailingWS = prevTrailingWS;\n-        return node;\n+            env.trailingNL = prevTrailingNL;\n+            env.trailingWS = prevTrailingWS;\n+            return node;", "originalCommit": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI3NjczMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506276730", "bodyText": "Fixed", "author": "IrushiL", "createdAt": "2020-10-16T10:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0NjU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0ODU0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506248544", "bodyText": "Only the starting line number will not be helpful when there are multiple nodes in a single line, shall we add at least the starting column as well?", "author": "nadeeshaan", "createdAt": "2020-10-16T10:02:31Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3630,33 +3635,39 @@ public Token transform(Token token) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private <T extends Node> T formatNode(T node, int trailingWS, int trailingNL) {\n-        if (node == null || node.isMissing()) {\n-            return node;\n-        }\n+        try {\n+            if (node == null || node.isMissing()) {\n+                return node;\n+            }\n \n-        if (!isInLineRange(node, lineRange)) {\n-            checkForNewline(node);\n-            return node;\n-        }\n+            if (!isInLineRange(node, lineRange)) {\n+                checkForNewline(node);\n+                return node;\n+            }\n \n-        int prevTrailingNL = env.trailingNL;\n-        int prevTrailingWS = env.trailingWS;\n-        env.trailingNL = trailingNL;\n-        env.trailingWS = trailingWS;\n+            int prevTrailingNL = env.trailingNL;\n+            int prevTrailingWS = env.trailingWS;\n+            env.trailingNL = trailingNL;\n+            env.trailingWS = trailingWS;\n \n-        // Cache the current node and parent before format.\n-        // Because reference to the nodes will change after modifying.\n-        T oldNode = node;\n-        Node parent = node.parent();\n+            // Cache the current node and parent before format.\n+            // Because reference to the nodes will change after modifying.\n+            T oldNode = node;\n+            Node parent = node.parent();\n \n-        node = (T) node.apply(this);\n-        if (shouldWrapLine(oldNode, parent)) {\n-            node = wrapLine(oldNode, parent);\n-        }\n+            node = (T) node.apply(this);\n+            if (shouldWrapLine(oldNode, parent)) {\n+                node = wrapLine(oldNode, parent);\n+            }\n \n-        env.trailingNL = prevTrailingNL;\n-        env.trailingWS = prevTrailingWS;\n-        return node;\n+            env.trailingNL = prevTrailingNL;\n+            env.trailingWS = prevTrailingWS;\n+            return node;\n+        } catch (Exception e) {\n+            LOGGER.error(String.format(\"Error while formatting [node: %s] [line: %s]: %s\",", "originalCommit": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI3Njg1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506276855", "bodyText": "Done", "author": "IrushiL", "createdAt": "2020-10-16T10:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0ODU0NA=="}], "type": "inlineReview"}, {"oid": "caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "message": "Fix query expression nodes", "committedDate": "2020-10-16T10:11:02Z", "type": "commit"}, {"oid": "caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "message": "Fix query expression nodes", "committedDate": "2020-10-16T10:11:02Z", "type": "forcePushed"}, {"oid": "e06dbeeddcbde122479252fb93cd7b0acacf5970", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e06dbeeddcbde122479252fb93cd7b0acacf5970", "message": "Fix review comments", "committedDate": "2020-10-16T10:36:19Z", "type": "commit"}]}