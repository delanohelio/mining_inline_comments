{"pr_number": 23838, "pr_title": "Add EnumDeclarationNode support for transformer", "pr_createdAt": "2020-06-09T08:43:13Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838", "timeline": [{"oid": "b265bdf70c3861bfadeeacf8aa26dcee2eda27b1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b265bdf70c3861bfadeeacf8aa26dcee2eda27b1", "message": "Add enum declaration node support", "committedDate": "2020-06-09T08:40:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NzcyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838#discussion_r437257724", "bodyText": "please use addToTop function instead. because compilationUnit can be null in lang-server", "author": "manuranga", "createdAt": "2020-06-09T09:11:15Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2297,6 +2304,99 @@ public BLangNode transform(ArrayTypeDescriptorNode arrayTypeDescriptorNode) {\n         return arrayTypeNode;\n     }\n \n+    public void addEnumDeclarationNode(\n+            EnumDeclarationNode enumDeclarationNode,\n+            BLangCompilationUnit compInit) {\n+\n+        Boolean publicQualifier = false;\n+        if (enumDeclarationNode.qualifier() != null &&\n+                enumDeclarationNode.qualifier().kind()\n+                        == SyntaxKind.PUBLIC_KEYWORD) {\n+            publicQualifier = true;\n+        }\n+        for (Node member : enumDeclarationNode.enumMemberList()) {\n+            compInit.addTopLevelNode(transformEnumMember(", "originalCommit": "b265bdf70c3861bfadeeacf8aa26dcee2eda27b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgzNTIzNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838#discussion_r437835236", "bodyText": "alright :)", "author": "m36dot", "createdAt": "2020-06-10T03:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NzcyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1ODQxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838#discussion_r437258416", "bodyText": "do we need a separate Boolean, can we set the flag then and there.", "author": "manuranga", "createdAt": "2020-06-09T09:12:25Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2297,6 +2304,99 @@ public BLangNode transform(ArrayTypeDescriptorNode arrayTypeDescriptorNode) {\n         return arrayTypeNode;\n     }\n \n+    public void addEnumDeclarationNode(\n+            EnumDeclarationNode enumDeclarationNode,\n+            BLangCompilationUnit compInit) {\n+\n+        Boolean publicQualifier = false;", "originalCommit": "b265bdf70c3861bfadeeacf8aa26dcee2eda27b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1OTI3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838#discussion_r437259277", "bodyText": "see if you can reuse the deSugarTypeAsUserDefType function instead.", "author": "manuranga", "createdAt": "2020-06-09T09:13:56Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2297,6 +2304,99 @@ public BLangNode transform(ArrayTypeDescriptorNode arrayTypeDescriptorNode) {\n         return arrayTypeNode;\n     }\n \n+    public void addEnumDeclarationNode(\n+            EnumDeclarationNode enumDeclarationNode,\n+            BLangCompilationUnit compInit) {\n+\n+        Boolean publicQualifier = false;\n+        if (enumDeclarationNode.qualifier() != null &&\n+                enumDeclarationNode.qualifier().kind()\n+                        == SyntaxKind.PUBLIC_KEYWORD) {\n+            publicQualifier = true;\n+        }\n+        for (Node member : enumDeclarationNode.enumMemberList()) {\n+            compInit.addTopLevelNode(transformEnumMember(\n+                    (EnumMemberNode) member,\n+                    publicQualifier));\n+        }\n+\n+        BLangTypeDefinition bLangTypeDefinition =\n+                (BLangTypeDefinition) TreeBuilder.createTypeDefinition();\n+        if (publicQualifier) {\n+            bLangTypeDefinition.flagSet.add(Flag.PUBLIC);\n+        }\n+\n+        bLangTypeDefinition.setName(\n+                (BLangIdentifier)transform(enumDeclarationNode.identifier()));\n+\n+        BLangUnionTypeNode bLangUnionTypeNode =\n+                (BLangUnionTypeNode) TreeBuilder.createUnionTypeNode();\n+        for (Node member : enumDeclarationNode.enumMemberList()) {\n+            bLangUnionTypeNode.memberTypeNodes.\n+                    add(createTypeNode(\n+                            ((EnumMemberNode) member).identifier()));\n+        }\n+        Collections.reverse(bLangUnionTypeNode.memberTypeNodes);\n+        bLangTypeDefinition.setTypeNode(bLangUnionTypeNode);\n+        compInit.addTopLevelNode(bLangTypeDefinition);\n+    }\n+\n+    public BLangConstant transformEnumMember(EnumMemberNode member,\n+                                             Boolean publicQualifier) {\n+        BLangConstant bLangConstant =\n+                (BLangConstant) TreeBuilder.createConstantNode();\n+\n+        bLangConstant.flagSet.add(Flag.CONSTANT);\n+\n+        if (publicQualifier) {\n+            bLangConstant.flagSet.add(Flag.PUBLIC);\n+        }\n+        BLangTypeDefinition assosiatedTypeDef =", "originalCommit": "b265bdf70c3861bfadeeacf8aa26dcee2eda27b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgzNTI5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23838#discussion_r437835295", "bodyText": "sure :)", "author": "m36dot", "createdAt": "2020-06-10T03:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1OTI3Nw=="}], "type": "inlineReview"}, {"oid": "4ce1d1f8e2e01a76982c6ba9e184b198ff9e712c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ce1d1f8e2e01a76982c6ba9e184b198ff9e712c", "message": "refactor code", "committedDate": "2020-06-09T10:37:31Z", "type": "commit"}, {"oid": "acdb6da6b1e8f88caaf9fd65a385a06a2b1ffbe8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acdb6da6b1e8f88caaf9fd65a385a06a2b1ffbe8", "message": "Fix checkstyle", "committedDate": "2020-06-09T11:18:10Z", "type": "commit"}, {"oid": "35716146dbd9ed4a66f54fd0d8cc448b4bf9dde7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/35716146dbd9ed4a66f54fd0d8cc448b4bf9dde7", "message": "Refactor Code", "committedDate": "2020-06-10T04:42:51Z", "type": "commit"}]}