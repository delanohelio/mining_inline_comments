{"pr_number": 26827, "pr_title": "Align error constructor parsing with swan lake spec version", "pr_createdAt": "2020-11-09T13:45:59Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26827", "timeline": [{"oid": "9dcbb0af50134887079a47ded1a63ddffdd3af53", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9dcbb0af50134887079a47ded1a63ddffdd3af53", "message": "Add syntax tree changes for error constructor", "committedDate": "2020-11-04T07:02:07Z", "type": "commit"}, {"oid": "c5dbad4db9c671714d046ca8e92dfb9b66ac45dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5dbad4db9c671714d046ca8e92dfb9b66ac45dd", "message": "Align error constructor with swan lake spec", "committedDate": "2020-11-06T11:18:40Z", "type": "commit"}, {"oid": "6731c6bad96667b3a73edec0ea28e62c2db013ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6731c6bad96667b3a73edec0ea28e62c2db013ed", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/diagnostics/DiagnosticErrorCode.java\n\u0001\tcompiler/ballerina-parser/src/main/resources/syntax_diagnostic_message.properties", "committedDate": "2020-11-06T11:23:00Z", "type": "commit"}, {"oid": "90aa61081682089aecc28769411d5f32f263ed76", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90aa61081682089aecc28769411d5f32f263ed76", "message": "Update/add error constructor parser tests", "committedDate": "2020-11-06T15:26:32Z", "type": "commit"}, {"oid": "2bb416d0b13ebe6877f8fc6473877eb93e0a280d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2bb416d0b13ebe6877f8fc6473877eb93e0a280d", "message": "Fix arg-list recovery and update error-constructor recovery tests", "committedDate": "2020-11-06T20:59:06Z", "type": "commit"}, {"oid": "18b3ff3b71bf1ecbcb6d8dbce37187d4e86be6bd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18b3ff3b71bf1ecbcb6d8dbce37187d4e86be6bd", "message": "Fix error-binding-pattern and error-constructor ambiguity", "committedDate": "2020-11-10T16:02:45Z", "type": "commit"}, {"oid": "2900a495b95c701a04a65bdb4f1b203f637c3c77", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2900a495b95c701a04a65bdb4f1b203f637c3c77", "message": "Add new error constructor node to BLangNodeTransformer", "committedDate": "2020-11-10T16:33:46Z", "type": "commit"}, {"oid": "3b71db5e69b46bf3c573b96d4d8eea9b838d8d26", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b71db5e69b46bf3c573b96d4d8eea9b838d8d26", "message": "Update ExprBodiedFunctionTest.testSyntaxErrors test", "committedDate": "2020-11-10T17:24:55Z", "type": "commit"}, {"oid": "8dea7976b8b5f1c5f56799dcbc659852b9287172", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8dea7976b8b5f1c5f56799dcbc659852b9287172", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor", "committedDate": "2020-11-10T17:34:31Z", "type": "commit"}, {"oid": "de9978c8761925e9d7e7fe01d1a8e9e30bfbdf5a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/de9978c8761925e9d7e7fe01d1a8e9e30bfbdf5a", "message": "Refactor code", "committedDate": "2020-11-10T18:12:23Z", "type": "commit"}, {"oid": "162f5810effddf210fdfd98f7a9e15d33e2958da", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/162f5810effddf210fdfd98f7a9e15d33e2958da", "message": "Add visitor for ErrorConstructorExpressionNode in formatter", "committedDate": "2020-11-11T06:05:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NDQzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26827#discussion_r521844439", "bodyText": "We need to restrict positional argument after named arg right? ie what if (namedArg, possitionalArg) ? I think we can use hasPositionalArg boolean for this with a better name like allowPositionalArg", "author": "rdulmina", "createdAt": "2020-11-12T05:15:36Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4832,15 +4843,107 @@ private STNode parseFuncCall(STNode identifier) {\n      * Parse error constructor expression.\n      * </p>\n      * <code>\n-     * error-constructor-expr := error ( arg-list )\n+     * error-constructor-expr := error [error-type-reference] ( error-arg-list )\n+     * error-arg-list := positional-arg [, positional-arg] (, named-arg)*\n      * </code>\n      *\n      * @return Error constructor expression\n      */\n     private STNode parseErrorConstructorExpr() {\n+        startContext(ParserRuleContext.ERROR_CONSTRUCTOR);\n         STNode errorKeyword = parseErrorKeyword();\n-        errorKeyword = createBuiltinSimpleNameReference(errorKeyword);\n-        return parseFuncCall(errorKeyword);\n+        STNode typeReference = parseErrorTypeReference(errorKeyword, ParserRuleContext.ERROR_CONSTRUCTOR_RHS);\n+        STNode openParen = parseOpenParenthesis(ParserRuleContext.ARG_LIST_OPEN_PAREN);\n+        return parseErrorConstructorExpr(errorKeyword, typeReference, openParen);\n+    }\n+\n+    private STNode parseErrorTypeReference(STNode errorKeyword, ParserRuleContext context) {\n+        STToken nextToken = peek();\n+        switch (nextToken.kind) {\n+            case IDENTIFIER_TOKEN:\n+                return parseTypeReference();\n+            case OPEN_PAREN_TOKEN:\n+                return STNodeFactory.createEmptyNode();\n+            default:\n+                recover(nextToken, context, errorKeyword);\n+                return parseErrorTypeReference(errorKeyword, context);\n+        }\n+    }\n+\n+    private STNode parseErrorConstructorExpr(STNode errorKeyword, STNode typeReference, STNode openParen) {\n+        STNode functionArgs = parseArgsList();\n+        STNode errorArgs = getErrorArgList(functionArgs);\n+        STNode closeParen = parseCloseParenthesis(ParserRuleContext.ARG_LIST_CLOSE_PAREN);\n+        endContext();\n+\n+        openParen = cloneWithDiagnosticIfListEmpty(errorArgs, openParen,\n+                DiagnosticErrorCode.ERROR_MISSING_POSITIONAL_ARG_IN_ERROR_CONSTRUCTOR);\n+        return STNodeFactory.createErrorConstructorExpressionNode(errorKeyword, typeReference, openParen, errorArgs,\n+                closeParen);\n+    }\n+\n+    /**\n+     * Validate function args and return error arg node list.\n+     *\n+     * @param functionArgs function args to be validated\n+     * @return Error arg list\n+     */\n+    private STNode getErrorArgList(STNode functionArgs) {\n+        STNodeList argList = (STNodeList) functionArgs;\n+        if (argList.isEmpty()) {\n+            return argList;\n+        }\n+\n+        List<STNode> errorArgList = new ArrayList<>();\n+        // Validate first arg\n+        STNode arg = argList.get(0);\n+        switch (arg.kind) {\n+            case POSITIONAL_ARG:\n+                errorArgList.add(arg);\n+                break;\n+            case NAMED_ARG:\n+                arg = SyntaxErrors.addDiagnostic(arg,\n+                        DiagnosticErrorCode.ERROR_MISSING_POSITIONAL_ARG_IN_ERROR_CONSTRUCTOR);\n+                errorArgList.add(arg);\n+                break;", "originalCommit": "162f5810effddf210fdfd98f7a9e15d33e2958da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1NTE0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26827#discussion_r522055142", "bodyText": "What we do here is validating function args. That order validation is already done when parsing function args.", "author": "lochana-chathura", "createdAt": "2020-11-12T12:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NDQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1NTg3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26827#discussion_r522055871", "bodyText": "ah cool.", "author": "rdulmina", "createdAt": "2020-11-12T12:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NDQzOQ=="}], "type": "inlineReview"}, {"oid": "7b710322c216b2af28a648977f17f329167e7052", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b710322c216b2af28a648977f17f329167e7052", "message": "Refactor code", "committedDate": "2020-11-13T09:33:58Z", "type": "commit"}, {"oid": "a08c1b9bd7ebd52829b9886f65bcda509375afe1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a08c1b9bd7ebd52829b9886f65bcda509375afe1", "message": "Update LS test assertions", "committedDate": "2020-11-13T09:39:52Z", "type": "commit"}, {"oid": "b4d54c36932502fb6d558f29efccba06b60638ab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b4d54c36932502fb6d558f29efccba06b60638ab", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor", "committedDate": "2020-11-20T05:56:00Z", "type": "commit"}, {"oid": "bb742d38d7617578bfd9822f371386970085a0d3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb742d38d7617578bfd9822f371386970085a0d3", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/diagnostics/DiagnosticErrorCode.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/tree/STNodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/tree/STNodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/tree/STNodeVisitor.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/tree/STTreeModifier.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/NodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/NodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/NodeVisitor.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/SyntaxKind.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/TreeModifier.java\n\u0001\tcompiler/ballerina-parser/src/main/resources/syntax_diagnostic_message.properties\n\u0001\tcompiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/ParserTestUtils.java\n\u0001\tcompiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/new/expression_context/config/query_expr_ctx_config18.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/new/expression_context/config/query_expr_ctx_join_clause_config2.json", "committedDate": "2020-11-25T06:44:25Z", "type": "commit"}, {"oid": "7244ea2b214debd2467d489fe29be103998ff7c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7244ea2b214debd2467d489fe29be103998ff7c9", "message": "Fix few issues and refactor", "committedDate": "2020-11-27T10:59:42Z", "type": "commit"}, {"oid": "1d61ffc937d015d49b6a86cace1e41fe0bc68b46", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d61ffc937d015d49b6a86cace1e41fe0bc68b46", "message": "Add test case for issue #27214", "committedDate": "2020-11-27T11:31:52Z", "type": "commit"}, {"oid": "b23649a2339ef2a6f298e8fc78a66966caa347c2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b23649a2339ef2a6f298e8fc78a66966caa347c2", "message": "Add test case for issue #26329", "committedDate": "2020-11-27T13:13:18Z", "type": "commit"}, {"oid": "85acc5e7e145e0163c4f07d3c0fad27f6567fbc6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/85acc5e7e145e0163c4f07d3c0fad27f6567fbc6", "message": "Fix formatting of added test cases", "committedDate": "2020-11-28T15:40:21Z", "type": "commit"}, {"oid": "00d1a5b5380e909ed76f1b746c51b8bd5a7e646d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/00d1a5b5380e909ed76f1b746c51b8bd5a7e646d", "message": "Properly fix ambiguous error-constructor/BP parsing", "committedDate": "2020-12-01T15:06:06Z", "type": "commit"}, {"oid": "7df11561970c28987ef3d815b6720747977934ba", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7df11561970c28987ef3d815b6720747977934ba", "message": "Refactor Code", "committedDate": "2020-12-01T15:50:36Z", "type": "commit"}, {"oid": "999a342a59cb4436db28c58ad4df1f33d9079c30", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/999a342a59cb4436db28c58ad4df1f33d9079c30", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor", "committedDate": "2020-12-01T16:01:42Z", "type": "commit"}, {"oid": "cf13cf0f61e46df9c2ba93ee8f2586293aa8c521", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf13cf0f61e46df9c2ba93ee8f2586293aa8c521", "message": "Clean up code", "committedDate": "2020-12-01T16:15:22Z", "type": "commit"}, {"oid": "9670df325ed94ea0cf9ee55a0b7c38bc168b2090", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9670df325ed94ea0cf9ee55a0b7c38bc168b2090", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into error-constructor\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/diagnostics/DiagnosticErrorCode.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/SyntaxKind.java\n\u0001\tcompiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/expressions/ObjectConstructorExpressionTest.java\n\u0001\tcompiler/ballerina-parser/src/test/resources/expressions/error-constructor-expr/error_constructor_expr_assert_03.json\n\u0001\tcompiler/ballerina-parser/src/test/resources/expressions/error-constructor-expr/error_constructor_expr_assert_04.json\n\u0001\tmisc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/ParserTestFormatter.java\n\u0001\ttests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/ExprBodiedFunctionTest.java", "committedDate": "2020-12-02T18:32:54Z", "type": "commit"}]}