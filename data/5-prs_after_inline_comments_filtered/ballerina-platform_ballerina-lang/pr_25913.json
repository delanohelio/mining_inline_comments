{"pr_number": 25913, "pr_title": "Remove CompileResultDiagnosticListener from tool-util and expand diagnostic API usage", "pr_createdAt": "2020-09-18T05:17:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913", "timeline": [{"oid": "70ec981218247c59f9718e514d439add83d30a83", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/70ec981218247c59f9718e514d439add83d30a83", "message": "Remove CompileResultDiagnosticListener from cli/ballerina-tool/util and align with new diagnostic API", "committedDate": "2020-09-18T03:27:37Z", "type": "commit"}, {"oid": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "message": "Remove CompileResultDiagnosticListener from org.ballerinalang.stdlib.utils.GenerateBalo", "committedDate": "2020-09-18T05:27:33Z", "type": "commit"}, {"oid": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "message": "Remove CompileResultDiagnosticListener from org.ballerinalang.stdlib.utils.GenerateBalo", "committedDate": "2020-09-18T05:27:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcwOTA2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490709060", "bodyText": "Do we need to use the fully qualified class name?", "author": "SupunS", "createdAt": "2020-09-18T05:23:40Z", "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/CompileResult.java", "diffHunk": "@@ -16,42 +16,58 @@\n  */\n package org.ballerinalang.tool.util;\n \n+import io.ballerina.tools.diagnostics.Diagnostic;\n import org.ballerinalang.model.tree.PackageNode;\n-import org.ballerinalang.util.diagnostic.Diagnostic;\n-import org.ballerinalang.util.diagnostic.DiagnosticListener;\n+import org.wso2.ballerinalang.compiler.PackageCache;\n+import org.wso2.ballerinalang.compiler.diagnostic.DiagnosticComparator;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+import org.wso2.ballerinalang.compiler.tree.BLangImportPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.util.CompilerContext;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n \n /**\n  * Represents the result of a ballerina file compilation.\n- * \n+ *\n  * @since 0.94\n  */\n public class CompileResult {\n \n     private PackageNode pkgNode;\n-    private CompileResultDiagnosticListener diagnosticListener;\n-\n-    public CompileResult(CompileResultDiagnosticListener diagnosticListener) {\n-        this.diagnosticListener = diagnosticListener;\n+    private CompilerContext context;\n+    private Diagnostic[] diagnostics = null;\n+    private int errorCount = 0;\n+    private int warnCount = 0;\n+\n+    public CompileResult(CompilerContext context, BLangPackage packageNode) {\n+        this.pkgNode = packageNode;\n+        this.context = context;\n     }\n \n-    public Diagnostic[] getDiagnostics() {\n-        List<Diagnostic> diagnostics = this.diagnosticListener.getDiagnostics();\n-        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.getSource().getCompilationUnitName()).\n-                thenComparingInt(d -> d.getPosition().getStartLine()));\n-        return diagnostics.toArray(new Diagnostic[diagnostics.size()]);\n+    public io.ballerina.tools.diagnostics.Diagnostic[] getDiagnostics() {", "originalCommit": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcwOTY1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490709659", "bodyText": "Can remove these", "author": "SupunS", "createdAt": "2020-09-18T05:25:55Z", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -111,8 +113,8 @@ private static void genBalo(String targetDir, String sourceRootDir, boolean repo\n         Files.createDirectories(Paths.get(targetDir));\n \n         CompilerContext context = new CompilerContext();\n-        CompileResult.CompileResultDiagnosticListener diagListner = new CompileResult.CompileResultDiagnosticListener();\n-        context.put(DiagnosticListener.class, diagListner);\n+//        CompileResult.CompileResultDiagnosticListener diagListner = new CompileResult.CompileResultDiagnosticListener();", "originalCommit": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490710011", "bodyText": "We shouldn't print the diags here. Since we are already printing them at the Compiler class, this will result in duplicate errors", "author": "SupunS", "createdAt": "2020-09-18T05:27:10Z", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {\n                     deprecatedWarnCount++;\n                 }\n             }\n         }\n-        if (diagListner.getErrorCount() > 0 ||\n-                (reportWarnings && (diagListner.getWarnCount() - deprecatedWarnCount) > 0)) {\n+        if (errorCount > 0 ||\n+                (reportWarnings && (warnCount - deprecatedWarnCount) > 0)) {\n             StringJoiner sj = new StringJoiner(\"\\n  \");\n             diagnostics.forEach(e -> sj.add(e.toString()));", "originalCommit": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDY5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490714695", "bodyText": "So, are we removing L185 ?", "author": "dulajdilshan", "createdAt": "2020-09-18T05:43:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNjgwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490716804", "bodyText": "yes, we can remove that.", "author": "SupunS", "createdAt": "2020-09-18T05:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNzc0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490717742", "bodyText": "okay", "author": "dulajdilshan", "createdAt": "2020-09-18T05:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMTAwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490711006", "bodyText": "This can result in a class-cast exception.\neg: syntax errors are not BLangDiagnostics. For anything other than BLangDiagnostic, we can simply skip", "author": "SupunS", "createdAt": "2020-09-18T05:30:35Z", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();", "originalCommit": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMTczMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490711731", "bodyText": "code can be null. That would result in a NPE inside the isIsolatedWarningLog() method", "author": "SupunS", "createdAt": "2020-09-18T05:33:16Z", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {", "originalCommit": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72b87f5743f8f7178fc91a450b062b09a90368c4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/72b87f5743f8f7178fc91a450b062b09a90368c4", "message": "Make changes according to the suggestion from the review", "committedDate": "2020-09-18T06:14:17Z", "type": "forcePushed"}, {"oid": "1ea756c0ac1b9e299ae13ae2bc71be40bffe9c95", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ea756c0ac1b9e299ae13ae2bc71be40bffe9c95", "message": "Make changes according to the suggestion from the review", "committedDate": "2020-09-18T06:17:31Z", "type": "commit"}, {"oid": "1ea756c0ac1b9e299ae13ae2bc71be40bffe9c95", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ea756c0ac1b9e299ae13ae2bc71be40bffe9c95", "message": "Make changes according to the suggestion from the review", "committedDate": "2020-09-18T06:17:31Z", "type": "forcePushed"}]}