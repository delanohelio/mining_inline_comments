{"pr_number": 24430, "pr_title": "Enable LangLib test that fail due to assert errors and positions", "pr_createdAt": "2020-06-23T07:51:31Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430", "timeline": [{"oid": "b9595502309454f457aca1171f61be94068a58db", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9595502309454f457aca1171f61be94068a58db", "message": "Fix position for unary expressions", "committedDate": "2020-06-23T07:47:17Z", "type": "commit"}, {"oid": "646740f71d04426057716e05e504bd1f90e3fdcc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/646740f71d04426057716e05e504bd1f90e3fdcc", "message": "Enabled testNegativeIntSubType", "committedDate": "2020-06-23T07:49:38Z", "type": "commit"}, {"oid": "63c2135338593835ea5d9b60b8cc6e04e89b6eda", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/63c2135338593835ea5d9b60b8cc6e04e89b6eda", "message": "Fix position of BLangXMLTextLiteral and BLangXMLProcInsLiteral Node;Enable testNegativeConstraint test", "committedDate": "2020-06-23T11:09:14Z", "type": "commit"}, {"oid": "d935c6ed62b91901bfc1aa95af44a010a551e37a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d935c6ed62b91901bfc1aa95af44a010a551e37a", "message": "Remove extra comment", "committedDate": "2020-06-23T11:09:43Z", "type": "commit"}, {"oid": "f479a72934ab740652145b5a3b57e0d1d0f5b9bc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f479a72934ab740652145b5a3b57e0d1d0f5b9bc", "message": "Fix position for restArgumentNode; enable testTypeParamNegative test", "committedDate": "2020-06-23T11:56:14Z", "type": "commit"}, {"oid": "d6de6b6e87a073fab62db31a4bd16f12f94b4f98", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6de6b6e87a073fab62db31a4bd16f12f94b4f98", "message": "Enable testForeachSemanticsNegative test by commenting out error binding pattern usages", "committedDate": "2020-06-24T04:07:01Z", "type": "commit"}, {"oid": "381afa2290f05daccf8b86acbc92613f853d4a90", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/381afa2290f05daccf8b86acbc92613f853d4a90", "message": "Enable testForeachVarTypeNegative and add position for BLangBuiltInRefTypeNode and BLangConstrainedType", "committedDate": "2020-06-24T04:40:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3Mjk5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444672995", "bodyText": "As discussed in the meeting, positions in the new tree should be correct.\nLet's verify that and update the test case  with the correct line/column number info.", "author": "SupunS", "createdAt": "2020-06-24T06:31:02Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2901,7 +2889,7 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n \n     private BLangNode createXMLLiteral(TemplateExpressionNode expressionNode) {\n         BLangXMLTextLiteral xmlTextLiteral = (BLangXMLTextLiteral) TreeBuilder.createXMLTextLiteralNode();\n-        xmlTextLiteral.pos = getPosition(expressionNode);\n+        xmlTextLiteral.pos = getPosition(expressionNode.content().get(0));", "originalCommit": "381afa2290f05daccf8b86acbc92613f853d4a90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NTE0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444675142", "bodyText": "ah alright", "author": "m36dot", "createdAt": "2020-06-24T06:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3Mjk5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NDUyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444674521", "bodyText": "I feel it's better to leave this disabled, since it has unsupported features (functional binding pattern).\nOtherwise we will lose the track of this, since this is enabled..", "author": "SupunS", "createdAt": "2020-06-24T06:34:58Z", "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/statements/foreach/ForeachNegativeTests.java", "diffHunk": "@@ -30,10 +30,10 @@\n  */\n public class ForeachNegativeTests {\n \n-    @Test(enabled = false)\n+    @Test", "originalCommit": "381afa2290f05daccf8b86acbc92613f853d4a90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NTA1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444675051", "bodyText": "we can make a note of it in the excel sheet and create an issue?", "author": "m36dot", "createdAt": "2020-06-24T06:36:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NDUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MTQ0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444761441", "bodyText": "docs tend to get lost in time :)\nLets keep it disabled for now.. Since we have done the same thing for error related langlib tests, I think its good to follow a single pattern..\nWe can enable it once we add the func-binding-pattern", "author": "SupunS", "createdAt": "2020-06-24T09:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NDUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwNTc3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r447405770", "bodyText": "alright :)", "author": "m36dot", "createdAt": "2020-06-30T04:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NDUyMQ=="}], "type": "inlineReview"}, {"oid": "ef427218e838a326c07a778901bdf1a6c1214be5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef427218e838a326c07a778901bdf1a6c1214be5", "message": "Refactor old test position to use up new position of parser", "committedDate": "2020-06-24T09:22:34Z", "type": "commit"}, {"oid": "b40b9e1ef1dc8f2ed459373ae9e103c0b4117f28", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b40b9e1ef1dc8f2ed459373ae9e103c0b4117f28", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into langlibTestAssertAndNullPointers", "committedDate": "2020-06-24T10:53:54Z", "type": "commit"}, {"oid": "5427a4a9b18c54712bcb7367c83085a572051754", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5427a4a9b18c54712bcb7367c83085a572051754", "message": "Disable Foreach sematic negative test since we dont have error-binding-pattern", "committedDate": "2020-06-30T04:53:19Z", "type": "commit"}, {"oid": "886674c8624ba325ad82c0dc3261f985e314e874", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/886674c8624ba325ad82c0dc3261f985e314e874", "message": "Disable Foreach sematic negative test since we dont have error-binding-pattern", "committedDate": "2020-06-30T04:54:02Z", "type": "commit"}, {"oid": "fc272cee9c3b6d4c77cad34c202464fbed1b662c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc272cee9c3b6d4c77cad34c202464fbed1b662c", "message": "Enabled tests from LangLibValueTest.java; corrected spec deviations in old parser", "committedDate": "2020-07-01T04:49:46Z", "type": "commit"}, {"oid": "dda10a94a795d3cc769b5e9a489eebe1c518a736", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dda10a94a795d3cc769b5e9a489eebe1c518a736", "message": "Merge from master", "committedDate": "2020-07-01T04:55:39Z", "type": "commit"}, {"oid": "49e276681332e562d21a88e77ea286a4f57018ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49e276681332e562d21a88e77ea286a4f57018ac", "message": "Fix checkstyle issues", "committedDate": "2020-07-01T05:37:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM1ODg4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r449358886", "bodyText": "do we need these whitespace changes?", "author": "SupunS", "createdAt": "2020-07-03T03:32:14Z", "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/statements/foreach/ForeachNegativeTests.java", "diffHunk": "@@ -36,31 +36,31 @@ public void testForeachSemanticsNegative() {\n         Assert.assertEquals(compile.getErrorCount(), 18);\n         int index = 0;\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  39, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                39, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  48, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                48, 17);\n         BAssertUtil.validateError(compile, index++, \"redeclared symbol 'i'\", 48, 18);\n         BAssertUtil.validateError(compile, index++, \"redeclared symbol 's'\", 48, 21);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  55, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                55, 17);\n         BAssertUtil.validateError(compile, index++, \"undefined symbol 'i'\", 58, 13);\n         BAssertUtil.validateError(compile, index++, \"incompatible types: 'int' is not an iterable collection\", 63,\n                 22);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  76, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                76, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  84, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                84, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'json'\",\n-                                  93, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'json'\",\n+                93, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  119, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                119, 17);", "originalCommit": "49e276681332e562d21a88e77ea286a4f57018ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3MTI0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r449371243", "bodyText": "will fix it", "author": "m36dot", "createdAt": "2020-07-03T04:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM1ODg4Ng=="}], "type": "inlineReview"}, {"oid": "3c42f88a476156a3e49b58b76f94421a5cf90dd2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c42f88a476156a3e49b58b76f94421a5cf90dd2", "message": "Add newline to EOF", "committedDate": "2020-07-03T05:41:58Z", "type": "commit"}, {"oid": "f64d24931f2201fa574f7d7bb6633d2c3f29c0e1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f64d24931f2201fa574f7d7bb6633d2c3f29c0e1", "message": "Fix whitespace change", "committedDate": "2020-07-03T05:46:19Z", "type": "commit"}, {"oid": "531bb16e71954e5b59004394b89bef178eafaed6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/531bb16e71954e5b59004394b89bef178eafaed6", "message": "Fix white spacing", "committedDate": "2020-07-03T06:20:07Z", "type": "commit"}]}