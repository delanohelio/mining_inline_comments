{"pr_number": 25228, "pr_title": "Remove public access modifier for parameters", "pr_createdAt": "2020-08-12T06:12:34Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228", "timeline": [{"oid": "4f75281823ce08bcd2547c5aad40e450fe8d57d8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f75281823ce08bcd2547c5aad40e450fe8d57d8", "message": "Fix usage of `public` in stdlib ballerina files", "committedDate": "2020-08-18T07:08:05Z", "type": "forcePushed"}, {"oid": "de02d6ec68b7f258572707711abd8cf55f667340", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/de02d6ec68b7f258572707711abd8cf55f667340", "message": "Fix error where invalid error was logged when return type of the function is a typedesc", "committedDate": "2020-08-21T06:50:01Z", "type": "forcePushed"}, {"oid": "da50404a8890ee098e0cefaa08e4a38f95c9d1e4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/da50404a8890ee098e0cefaa08e4a38f95c9d1e4", "message": "Fix error where invalid error was logged when return type of the function is a typedesc", "committedDate": "2020-08-21T06:58:08Z", "type": "forcePushed"}, {"oid": "5496d431dd44f86f4975bc55c3c916989ced74ab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5496d431dd44f86f4975bc55c3c916989ced74ab", "message": "Fix interop test", "committedDate": "2020-08-21T11:17:16Z", "type": "forcePushed"}, {"oid": "d05f1d69f3db38d164ceeebf6623f23e88a1f50a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d05f1d69f3db38d164ceeebf6623f23e88a1f50a", "message": "Fix missing bal file", "committedDate": "2020-08-24T06:45:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTU5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r476151593", "bodyText": "With this change we don't have alternative paths here ryt. Can remove PARAMETER_WITHOUT_ANNOTS as an alternative path and give TYPE_DESC_IN_PARAM as the next rule directly.", "author": "lochana-chathura", "createdAt": "2020-08-25T04:21:45Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -283,10 +283,10 @@\n             { ParserRuleContext.CLOSE_PARENTHESIS, ParserRuleContext.REQUIRED_PARAM };\n \n     private static final ParserRuleContext[] PARAMETER_START =\n-            { ParserRuleContext.ANNOTATIONS, ParserRuleContext.PUBLIC_KEYWORD, ParserRuleContext.TYPE_DESC_IN_PARAM };\n+            { ParserRuleContext.ANNOTATIONS, ParserRuleContext.TYPE_DESC_IN_PARAM };\n \n     private static final ParserRuleContext[] PARAMETER_WITHOUT_ANNOTS =\n-            { ParserRuleContext.PUBLIC_KEYWORD, ParserRuleContext.TYPE_DESC_IN_PARAM };\n+            { ParserRuleContext.TYPE_DESC_IN_PARAM };", "originalCommit": "d05f1d69f3db38d164ceeebf6623f23e88a1f50a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE4MDQ4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r476180482", "bodyText": "+1 will do that", "author": "dulvinw", "createdAt": "2020-08-25T05:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzOTYxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r477239619", "bodyText": "Fixdd in 785c34a", "author": "dulvinw", "createdAt": "2020-08-26T11:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0MDI1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r476240252", "bodyText": "Was there something specific that failed, requiring this change?", "author": "MaryamZi", "createdAt": "2020-08-25T07:38:36Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -1466,6 +1467,10 @@ private void checkForExportableType(BTypeSymbol symbol, DiagnosticPos pos) {\n                 }\n                 checkForExportableType(invokableType.retType.tsymbol, pos);\n                 return;\n+            case TypeTags.PARAMETERIZED_TYPE:", "originalCommit": "d05f1d69f3db38d164ceeebf6623f23e88a1f50a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3MzczNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r477173736", "bodyText": "Yes actually. I was getting an error for trying to export a non public symbol for something like\nfunction test(typedesc<object {}> T) returns T {}", "author": "dulvinw", "createdAt": "2020-08-26T09:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0MDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc3MjU3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r481772574", "bodyText": "Had an offline discussion with @dulvinw regarding this too, previously typedesc<object {}> T in this same example was marked as a public param, which is why we didn't get the error.\nWe will go ahead with this change.", "author": "MaryamZi", "createdAt": "2020-09-02T06:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0MDI1Mg=="}], "type": "inlineReview"}, {"oid": "711d427a802932711360291d3b6818e7579ed83c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/711d427a802932711360291d3b6818e7579ed83c", "message": "Fix review suggestions", "committedDate": "2020-09-02T06:10:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc3OTc1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r481779751", "bodyText": "sorry I didn't see this earlier.  Have to remove parsing of public keyword in\nparseParamGivenAnnots(SyntaxKind prevParamKind, STNode annots, boolean isParamNameOptional) method", "author": "lochana-chathura", "createdAt": "2020-09-02T06:24:16Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1302,7 +1302,6 @@ private STNode parseParameter(SyntaxKind prevParamKind, boolean isParamNameOptio\n             case AT_TOKEN:\n                 annots = parseOptionalAnnotations();\n                 break;\n-            case PUBLIC_KEYWORD:", "originalCommit": "711d427a802932711360291d3b6818e7579ed83c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgzMTk3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r481831973", "bodyText": "Will fix this!", "author": "dulvinw", "createdAt": "2020-09-02T07:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc3OTc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1NjI2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r482256265", "bodyText": "Since we don't parse any qualifiers here, this method simply does nothing.\n\nCan remove this entire method and direct call parseParamGivenAnnotsAndQualifier() beneath.\nrename: parseParamGivenAnnotsAndQualifier -> parseParamGivenAnnots", "author": "lochana-chathura", "createdAt": "2020-09-02T17:50:00Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1333,16 +1333,11 @@ private STNode parseParamGivenAnnots(SyntaxKind prevParamKind, STNode annots, bo\n         STNode qualifier;\n         STToken nextToken = peek();\n         switch (nextToken.kind) {\n-            case PUBLIC_KEYWORD:\n-                qualifier = parseQualifier();\n-                break;\n             case IDENTIFIER_TOKEN:\n-                qualifier = STNodeFactory.createEmptyNode();\n                 break;\n             case AT_TOKEN: // Annotations can't reach here\n             default:\n                 if (isTypeStartingToken(nextToken.kind) && nextToken.kind != SyntaxKind.IDENTIFIER_TOKEN) {\n-                    qualifier = STNodeFactory.createEmptyNode();\n                     break;\n                 }", "originalCommit": "eba9e6d2e3d141e103e640fa406f08549d806a24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1NzcyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r482257723", "bodyText": "Once we remove above mentioned method. We don't need this recovery rule at all.\nCan remove all usages of PARAMETER_WITHOUT_ANNOTS in error handler and remove it from the ParserRuleContex.java as well.", "author": "lochana-chathura", "createdAt": "2020-09-02T17:52:25Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -2422,6 +2415,8 @@ protected ParserRuleContext getNextRule(ParserRuleContext currentCtx, int nextLo\n             case DOUBLE_SLASH_DOUBLE_ASTERISK_LT_TOKEN:\n             case SLASH_LT_TOKEN:\n                 return ParserRuleContext.XML_NAME_PATTERN;\n+            case PARAMETER_WITHOUT_ANNOTS:\n+                return ParserRuleContext.TYPE_DESC_IN_PARAM;", "originalCommit": "eba9e6d2e3d141e103e640fa406f08549d806a24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1ODQ5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r482258495", "bodyText": "Update the above doc params for this chage as well", "author": "lochana-chathura", "createdAt": "2020-09-02T17:53:50Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1436,12 +1430,12 @@ private STNode parseEllipsis() {\n      * @param paramName Name of the parameter\n      * @return Parsed parameter node\n      */\n-    private STNode parseParameterRhs(SyntaxKind prevParamKind, STNode annots, STNode qualifier, STNode type,\n+    private STNode parseParameterRhs(SyntaxKind prevParamKind, STNode annots, STNode type,", "originalCommit": "eba9e6d2e3d141e103e640fa406f08549d806a24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY5NzQ2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25228#discussion_r482697463", "bodyText": "I think we no longer need this method. We can inline the content.", "author": "SupunS", "createdAt": "2020-09-03T04:32:23Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1329,54 +1329,21 @@ private STNode parseParameter(SyntaxKind prevParamKind, boolean isParamNameOptio\n         return parseParamGivenAnnots(prevParamKind, annots, isParamNameOptional);\n     }\n \n-    private STNode parseParamGivenAnnots(SyntaxKind prevParamKind, STNode annots, boolean isParamNameOptional) {\n-        STNode qualifier;\n-        STToken nextToken = peek();\n-        switch (nextToken.kind) {\n-            case PUBLIC_KEYWORD:\n-                qualifier = parseQualifier();\n-                break;\n-            case IDENTIFIER_TOKEN:\n-                qualifier = STNodeFactory.createEmptyNode();\n-                break;\n-            case AT_TOKEN: // Annotations can't reach here\n-            default:\n-                if (isTypeStartingToken(nextToken.kind) && nextToken.kind != SyntaxKind.IDENTIFIER_TOKEN) {\n-                    qualifier = STNodeFactory.createEmptyNode();\n-                    break;\n-                }\n-\n-                Solution solution = recover(nextToken, ParserRuleContext.PARAMETER_WITHOUT_ANNOTS, prevParamKind,\n-                        annots, isParamNameOptional);\n+    private STNode parseParamGivenAnnots(SyntaxKind prevParamKind, STNode annots,", "originalCommit": "882eb9c1c5f8644befa2b77eb5a7bedb9a8aa1eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a746b4e7b087c987c8a4cf152a637e0780648cb5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a746b4e7b087c987c8a4cf152a637e0780648cb5", "message": "Remove public parameters", "committedDate": "2020-09-04T05:17:00Z", "type": "commit"}, {"oid": "624d11c58e9241fe155720f1a148d13066bb42f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/624d11c58e9241fe155720f1a148d13066bb42f9", "message": "Fix parser to reject public keyword when parsing parameters", "committedDate": "2020-09-04T05:17:00Z", "type": "commit"}, {"oid": "142a8f47efe5ad5bed54d60277c7d61d93ec2aaf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/142a8f47efe5ad5bed54d60277c7d61d93ec2aaf", "message": "Fix usage of `public` in stdlib ballerina files", "committedDate": "2020-09-04T05:19:28Z", "type": "commit"}, {"oid": "b14a76b5be2101e0e54bd49f8606c6be4892c04e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b14a76b5be2101e0e54bd49f8606c6be4892c04e", "message": "Remove public parameter check from code analyzer", "committedDate": "2020-09-04T05:19:28Z", "type": "commit"}, {"oid": "40448464397a43bb3d6137bf0671927f3b0e7dd6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/40448464397a43bb3d6137bf0671927f3b0e7dd6", "message": "Fix public parameter usage in testfiles", "committedDate": "2020-09-04T05:19:48Z", "type": "commit"}, {"oid": "3eb59d567ff7501d4ef9805f2613cc17b8014204", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3eb59d567ff7501d4ef9805f2613cc17b8014204", "message": "Fix public parameter usage in testfiles", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "25913bcd896f60b71d88406eddd37e7e5f1ff7f0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/25913bcd896f60b71d88406eddd37e7e5f1ff7f0", "message": "Fix error where invalid error was logged when return type of the function is a typedesc", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "5610c6999c0f18880098d97587e326c845d2165b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5610c6999c0f18880098d97587e326c845d2165b", "message": "Fix interop test", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "9120497d7ffc00b3124d6bd83b85e1f624fa33de", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9120497d7ffc00b3124d6bd83b85e1f624fa33de", "message": "Fix missing bal file", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "01cc21f49c420b6d8309e615583ae5f28e57aea5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01cc21f49c420b6d8309e615583ae5f28e57aea5", "message": "Fix review suggestions", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "182843507b372c60a3a7e4091effdf771c09e588", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/182843507b372c60a3a7e4091effdf771c09e588", "message": "Remove qualifiers after annotations parsing", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "5d7ad98f144ec936b7d0370137888c423d012454", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d7ad98f144ec936b7d0370137888c423d012454", "message": "Remove qualifiers after annotations parsing", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "590711e59fc7409756eaf61cbb2b58349e23d171", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/590711e59fc7409756eaf61cbb2b58349e23d171", "message": "Add review suggestions", "committedDate": "2020-09-04T05:19:49Z", "type": "commit"}, {"oid": "590711e59fc7409756eaf61cbb2b58349e23d171", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/590711e59fc7409756eaf61cbb2b58349e23d171", "message": "Add review suggestions", "committedDate": "2020-09-04T05:19:49Z", "type": "forcePushed"}]}