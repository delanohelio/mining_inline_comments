{"pr_number": 21343, "pr_title": "Implement XML cycle detection and align xml namespace handling with the spec", "pr_createdAt": "2020-02-28T05:41:40Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343", "timeline": [{"oid": "73937f28f1e00d18d8652cc8b99466fa954b55bd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/73937f28f1e00d18d8652cc8b99466fa954b55bd", "message": "Stop passing xml endTag name to create xml elems", "committedDate": "2020-02-21T03:50:49Z", "type": "commit"}, {"oid": "21cfc2d775e4719036612d2c3222bd92a1d768a7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21cfc2d775e4719036612d2c3222bd92a1d768a7", "message": "Improve xml literal's namespace handling\n\nto align it with the xml proposal.", "committedDate": "2020-02-25T05:40:28Z", "type": "commit"}, {"oid": "ccbdb800a7e29260031e0d905a8af9c93db0ecd9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ccbdb800a7e29260031e0d905a8af9c93db0ecd9", "message": "Add xml cycle detection basic support", "committedDate": "2020-02-27T07:04:45Z", "type": "commit"}, {"oid": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "message": "Analyze child tree to detect cycles", "committedDate": "2020-02-28T05:40:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2MTk2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387461967", "bodyText": "Should we deprecate these public methods and add new ones instead?", "author": "MaryamZi", "createdAt": "2020-03-04T05:56:23Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/XMLFactory.java", "diffHunk": "@@ -270,10 +262,10 @@ public static XMLValue createXMLElement(XMLQName startTagName, XMLQName endTagNa\n         }\n     }\n \n-    public static XMLValue createXMLElement(XMLQName startTagName, XMLQName endTagName,\n-                                               BString defaultNsUriVal) {\n-        return createXMLElement(startTagName, endTagName,\n-                                defaultNsUriVal == null ? XMLConstants.NULL_NS_URI : defaultNsUriVal.getValue());\n+    public static XMLValue createXMLElement(XMLQName startTagName,", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4NDY3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387484675", "bodyText": "+1", "author": "rdhananjaya", "createdAt": "2020-03-04T07:17:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2MTk2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDIxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387464214", "bodyText": "Should this be a comment or should this go into L339-L341?", "author": "MaryamZi", "createdAt": "2020-03-04T06:05:23Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLItem.java", "diffHunk": "@@ -327,6 +341,10 @@ public void setChildren(BXML seq) {\n      */\n     @Override\n     @Deprecated\n+    /**", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDc2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387464762", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void ensureAcyclicParentGraph(BXML newSubTree, XMLItem current,\n          \n          \n            \n                                                      Map<XMLItem, XMLItem> lineageSet) {\n          \n          \n            \n                private void ensureAcyclicParentGraph(BXML newSubTree, XMLItem current, Map<XMLItem, XMLItem> lineageSet) {", "author": "MaryamZi", "createdAt": "2020-03-04T06:07:21Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLItem.java", "diffHunk": "@@ -346,14 +364,59 @@ public void addChildren(BXML seq) {\n                     && appendingList.get(0).getNodeType() == TEXT) {\n                 mergeAdjoiningTextNodesIntoList(leftList, appendingList);\n             } else {\n+                for (BXML bxml : appendingList) {\n+                    addParent(bxml, this);\n+                }\n                 leftList.addAll(appendingList);\n             }\n         } else {\n+            addParent(seq, this);\n             leftList.add(seq);\n         }\n         this.children = new XMLSequence(leftList);\n     }\n \n+\n+    private void addParent(BXML child) {\n+        ensureAcyclicGraph(child, this);\n+        addParent(child, this);\n+    }\n+\n+    // This method does not ensure acyclicness of tree after adding the children. Hence this method shold only be\n+    // use in scenarios where cyclic xml construction is impossible, that is only when constructing xml tree from\n+    // xml literal syntax, or after ensuring the new xml tree is not cyclic.\n+    private void addParent(BXML child, XMLItem thisElem) {\n+        if (child.getNodeType() == ELEMENT) {\n+            ((XMLItem) child).probableParents.add(new WeakReference<>(thisElem));\n+        }\n+    }\n+\n+    private void ensureAcyclicGraph(BXML newSubTree, XMLItem current) {\n+        IdentityHashMap<XMLItem, XMLItem> lineageSet = new IdentityHashMap<>();\n+        lineageSet.put(this, this);\n+        ensureAcyclicParentGraph(newSubTree, current, lineageSet);\n+    }\n+\n+    private void ensureAcyclicParentGraph(BXML newSubTree, XMLItem current,\n+                                          Map<XMLItem, XMLItem> lineageSet) {", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NjIwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387466202", "bodyText": "We only seem to be putting to this lineageSet?", "author": "MaryamZi", "createdAt": "2020-03-04T06:13:01Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLItem.java", "diffHunk": "@@ -346,14 +364,59 @@ public void addChildren(BXML seq) {\n                     && appendingList.get(0).getNodeType() == TEXT) {\n                 mergeAdjoiningTextNodesIntoList(leftList, appendingList);\n             } else {\n+                for (BXML bxml : appendingList) {\n+                    addParent(bxml, this);\n+                }\n                 leftList.addAll(appendingList);\n             }\n         } else {\n+            addParent(seq, this);\n             leftList.add(seq);\n         }\n         this.children = new XMLSequence(leftList);\n     }\n \n+\n+    private void addParent(BXML child) {\n+        ensureAcyclicGraph(child, this);\n+        addParent(child, this);\n+    }\n+\n+    // This method does not ensure acyclicness of tree after adding the children. Hence this method shold only be\n+    // use in scenarios where cyclic xml construction is impossible, that is only when constructing xml tree from\n+    // xml literal syntax, or after ensuring the new xml tree is not cyclic.\n+    private void addParent(BXML child, XMLItem thisElem) {\n+        if (child.getNodeType() == ELEMENT) {\n+            ((XMLItem) child).probableParents.add(new WeakReference<>(thisElem));\n+        }\n+    }\n+\n+    private void ensureAcyclicGraph(BXML newSubTree, XMLItem current) {\n+        IdentityHashMap<XMLItem, XMLItem> lineageSet = new IdentityHashMap<>();\n+        lineageSet.put(this, this);\n+        ensureAcyclicParentGraph(newSubTree, current, lineageSet);\n+    }\n+\n+    private void ensureAcyclicParentGraph(BXML newSubTree, XMLItem current,\n+                                          Map<XMLItem, XMLItem> lineageSet) {\n+        for (WeakReference<XMLItem> probableParentRef : current.probableParents) {\n+            XMLItem parent = probableParentRef.get();\n+            // probable parent is the actual parent.\n+            if (parent.children.children.contains(current)) {\n+                // If new subtree is in the lineage of current node, adding this newSubTree forms a cycle.\n+                if (parent == newSubTree) {\n+                    throw createXMLCycleError();\n+                }\n+                lineageSet.put(parent, parent);", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MjUwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387492501", "bodyText": "Thanks for pointing this out, this was bits remaining from a previous attempt.", "author": "rdhananjaya", "createdAt": "2020-03-04T07:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NjIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NjQ4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387466481", "bodyText": "Shall we return early by checking\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (removedItem.getNodeType() == ELEMENT) {\n          \n          \n            \n                    if (removedItem.getNodeType() != ELEMENT) {", "author": "MaryamZi", "createdAt": "2020-03-04T06:14:02Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLItem.java", "diffHunk": "@@ -571,7 +634,22 @@ public void removeChildren(String qname) {\n \n         Collections.reverse(toRemove);\n         for (Integer index : toRemove) {\n-            children.remove(index.intValue());\n+            BXML removed = children.remove(index.intValue());\n+            removeParentReference(removed);\n+        }\n+    }\n+\n+    private void removeParentReference(BXML removedItem) {\n+        if (removedItem.getNodeType() == ELEMENT) {", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NjgyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387466829", "bodyText": "Why do we need this() since we are doing this.children = new ArrayList<>(); after anyway?", "author": "MaryamZi", "createdAt": "2020-03-04T06:15:26Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -70,6 +70,12 @@ public XMLSequence(List<BXML> children) {\n         this.children = children;\n     }\n \n+    public XMLSequence(BXML child) {\n+        this();", "originalCommit": "5b15f88baeefe3d489ba9422f1ac5ed13516bbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5NjI1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21343#discussion_r387496253", "bodyText": "Will remove extra calls", "author": "rdhananjaya", "createdAt": "2020-03-04T07:50:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NjgyOQ=="}], "type": "inlineReview"}, {"oid": "180b7736e6d250e423d3a92cfe7fd5a33af7b12e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/180b7736e6d250e423d3a92cfe7fd5a33af7b12e", "message": "Apply review suggestions", "committedDate": "2020-03-04T08:24:08Z", "type": "commit"}, {"oid": "f707e03ce24f10b20ddbe1d6fad0100bd6a3b15f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f707e03ce24f10b20ddbe1d6fad0100bd6a3b15f", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into xml-prop-impl-xml-literal-build-change", "committedDate": "2020-03-05T01:47:23Z", "type": "commit"}, {"oid": "19bbe20fc9596a41d422ec70135ad60382071ac0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19bbe20fc9596a41d422ec70135ad60382071ac0", "message": "Fix JVM codegen", "committedDate": "2020-03-05T04:37:12Z", "type": "commit"}, {"oid": "19bbe20fc9596a41d422ec70135ad60382071ac0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19bbe20fc9596a41d422ec70135ad60382071ac0", "message": "Fix JVM codegen", "committedDate": "2020-03-05T04:37:12Z", "type": "forcePushed"}]}