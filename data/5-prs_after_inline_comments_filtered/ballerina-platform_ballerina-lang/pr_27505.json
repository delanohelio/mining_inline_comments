{"pr_number": 27505, "pr_title": "[Formatter] Fix Review Changes of Test Case Addition for Range formatting", "pr_createdAt": "2020-12-15T13:42:11Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505", "timeline": [{"oid": "71967c1aaa6b1309bd0dd27a15e3b88f3031d875", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71967c1aaa6b1309bd0dd27a15e3b88f3031d875", "message": "Fix review suggestions in range formatting test case addition", "committedDate": "2020-11-27T04:20:41Z", "type": "commit"}, {"oid": "bddf8b7a909ad83b19aabe60d69d9af255b0f8b8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bddf8b7a909ad83b19aabe60d69d9af255b0f8b8", "message": "Merge branch 'master' into range-formatting", "committedDate": "2020-12-01T07:41:29Z", "type": "commit"}, {"oid": "b3697b859674451ba4d69ab17332e19d6a9cd043", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3697b859674451ba4d69ab17332e19d6a9cd043", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-15T12:48:40Z", "type": "commit"}, {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "message": "Optimize RangeFormatterTest.java to re-use pre-calculated source paths", "committedDate": "2020-12-15T13:30:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg2ODE5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543868199", "bodyText": "Do we need this method?", "author": "SupunS", "createdAt": "2020-12-16T03:04:42Z", "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/TextDocument.java", "diffHunk": "@@ -50,6 +50,10 @@ public int textPositionFrom(LinePosition linePosition) {\n         return lines().textPositionFrom(linePosition);\n     }\n \n+    public LineMap getLines() {\n+        return this.lines();\n+    }\n+", "originalCommit": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTY5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546495693", "bodyText": "Removed this function since it was not necessary in the newly proposed approach.", "author": "sanjana", "createdAt": "2020-12-21T03:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg2ODE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NjcyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543886721", "bodyText": "As a practice, we don't really need to use this for function calls. It's fine to use it for instance variables, to distinguish them with local variables. But since functions doesn't have such a concept, using this for function calls can be an overkill.", "author": "SupunS", "createdAt": "2020-12-16T03:29:13Z", "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -113,26 +105,34 @@ public void testParserResources(String sourcePath) throws IOException, Formatter\n      */\n     public abstract String getTestResourceDir();\n \n+    public abstract String getConfigJsonFileName();\n+\n     protected Object[][] getConfigsList() {\n         if (this.testSubset().length != 0) {\n             return this.testSubset();\n         }\n         List<String> skippedTests = this.skipList();\n         try {\n-            return Files.walk(this.resourceDirectory.resolve(this.getTestResourceDir()).resolve(ASSERT_DIR))\n-                    .filter(path -> {\n-                        File file = path.toFile();\n-                        return file.isFile() && file.getName().endsWith(\".bal\")\n-                                && !skippedTests.contains(file.getName());\n-                    })\n-                    .map(path -> new Object[]{path.toFile().getName(), this.getTestResourceDir()})\n-                    .toArray(size -> new Object[size][2]);\n-        } catch (IOException e) {\n+            File jsonConfigFile = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(),\n+                    this.getConfigJsonFileName()).toFile();", "originalCommit": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTkyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546495922", "bodyText": "Removed all the this for function calls.", "author": "sanjana", "createdAt": "2020-12-21T03:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NjcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NzM5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543887392", "bodyText": "What is the difference between the source and the sourcePath?", "author": "SupunS", "createdAt": "2020-12-16T03:30:10Z", "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,32 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n+    private static final Gson gson = new Gson();\n+\n     @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n+    public void test(String sourcePath, String source, JsonArray positions)", "originalCommit": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NzkzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546497939", "bodyText": "The method signature was referred from the currently implemented FormatterTest class as following:\n\n  \n    \n      ballerina-lang/misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/FormatterTest.java\n    \n    \n         Line 56\n      in\n      155a495\n    \n    \n    \n    \n\n        \n          \n           public void test(String source, String sourcePath) throws IOException { \n        \n    \n  \n\n\n\n\nThe source is the file name.\n\ne.g.: \"checking_action_01.bal\"\n\n\n\nThe sourcePath is the relative directory where the testcase related files are in (relative to the resource directory).\n\ne.g.: \"actions/checking\"", "author": "sanjana", "createdAt": "2020-12-21T04:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NzM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUwNzY2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546507664", "bodyText": "In the newly suggested approach, this test function signature was changed to test(Path sourceFilePath, Path assertFilePath, ArrayList<LineRange> lineRanges) whereas it has been implemented here.", "author": "sanjana", "createdAt": "2020-12-21T04:50:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NzM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4OTI1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543889259", "bodyText": "Converting JSON to  LineRange is not part of the test case. Can we do this calculation at the data-provider's side?", "author": "SupunS", "createdAt": "2020-12-16T03:32:27Z", "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,32 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n+    private static final Gson gson = new Gson();\n+\n     @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n+    public void test(String sourcePath, String source, JsonArray positions)\n             throws IOException, FormatterException {\n-        Path assertFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), ASSERT_DIR, source);\n-        Path sourceFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), SOURCE_DIR, source);\n-\n-        String content = getSourceText(sourceFilePath);\n+        Path assertFilePath = Paths.get(resourceDirectory.toString(), sourcePath, ASSERT_DIR, source);\n+        Path sourceFilePath = Paths.get(resourceDirectory.toString(), sourcePath, SOURCE_DIR, source);\n+        String content = getFileContent(sourceFilePath);\n         TextDocument textDocument = TextDocuments.from(content);\n         SyntaxTree syntaxTree = SyntaxTree.from(textDocument, sourceFilePath.toString());\n-        for (int[] position : positions) {\n-            LinePosition startPos = LinePosition.from(position[0], position[1]);\n-            LinePosition endPos = LinePosition.from(position[2], position[3]);\n-            LineRange lineRange = LineRange.from(null, startPos, endPos);\n+        for (JsonElement position : positions) {\n+            JsonObject start = position.getAsJsonObject().get(\"startPos\").getAsJsonObject();\n+            LinePosition startPos = LinePosition.from(start.get(\"lineNo\").getAsInt(), start.get(\"colNo\").getAsInt());\n+            JsonObject end = position.getAsJsonObject().get(\"endPos\").getAsJsonObject();\n+            LinePosition endPos = LinePosition.from(end.get(\"lineNo\").getAsInt(), end.get(\"colNo\").getAsInt());\n+            LineRange lineRange = LineRange.from(sourceFilePath.toString(), startPos, endPos);", "originalCommit": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5ODIwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546498205", "bodyText": "Moved to the data-provider's side. Now it's being calculated in the getConfigsList() method.", "author": "sanjana", "createdAt": "2020-12-21T04:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4OTI1OQ=="}], "type": "inlineReview"}, {"oid": "8aea073d64262fa7ccab078180b0197bc9323cdc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aea073d64262fa7ccab078180b0197bc9323cdc", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-16T03:42:21Z", "type": "commit"}, {"oid": "d96f8531fabdc1f8199ad160f6bc93c51b211525", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d96f8531fabdc1f8199ad160f6bc93c51b211525", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-16T04:21:28Z", "type": "commit"}, {"oid": "003d383591c2903e0607ba2416a8dd9e6530d7d3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/003d383591c2903e0607ba2416a8dd9e6530d7d3", "message": "Modify range-test-config.json and remove unused getLines() method in TextDocument.java", "committedDate": "2020-12-16T10:16:03Z", "type": "commit"}, {"oid": "d7cbd5d90c3e7fb024dccea770680544b8235906", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d7cbd5d90c3e7fb024dccea770680544b8235906", "message": "Re-structure RangeFormatterTest and optimize data-provider", "committedDate": "2020-12-16T13:55:19Z", "type": "commit"}, {"oid": "94ced91ffdf1dace2ab3c7686945f5cf43714edc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94ced91ffdf1dace2ab3c7686945f5cf43714edc", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-18T08:05:52Z", "type": "commit"}, {"oid": "6c7b3e7a8fe5ad0fcfe34f76c0716cbcac953c59", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c7b3e7a8fe5ad0fcfe34f76c0716cbcac953c59", "message": "Reformat RangeFormatterTest.java", "committedDate": "2020-12-21T03:42:53Z", "type": "commit"}, {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7d999df8c2e8b4930d95076050885dcc727380c", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-21T03:43:19Z", "type": "commit"}, {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7d999df8c2e8b4930d95076050885dcc727380c", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-21T03:43:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDE2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546574166", "bodyText": "Is there a reason for using this overloaded SyntaxTree.from method?", "author": "IrushiL", "createdAt": "2020-12-21T08:36:10Z", "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,25 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n-    @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n-            throws IOException, FormatterException {\n-        Path assertFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), ASSERT_DIR, source);\n-        Path sourceFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), SOURCE_DIR, source);\n+    private static final Gson gson = new Gson();\n \n-        String content = getSourceText(sourceFilePath);\n+    @Test(dataProvider = \"test-file-provider\")\n+    public void test(Path sourceFilePath, Path assertFilePath, ArrayList<LineRange> lineRanges) throws IOException,\n+            FormatterException {\n+        String content = getFileContent(sourceFilePath);\n         TextDocument textDocument = TextDocuments.from(content);\n         SyntaxTree syntaxTree = SyntaxTree.from(textDocument, sourceFilePath.toString());", "originalCommit": "b7d999df8c2e8b4930d95076050885dcc727380c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwNDc4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546604784", "bodyText": "It was used as the previous approach required to access the positions of the syntax tree.\nThe revised approach no longer requires the overloaded method call.\nFixed it.", "author": "sanjana", "createdAt": "2020-12-21T09:42:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDE2Ng=="}], "type": "inlineReview"}, {"oid": "934962c741995a683cb17d88cabc2b346b7182ff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/934962c741995a683cb17d88cabc2b346b7182ff", "message": "Fix overloaded SyntaxTree.from() method in RangeFormatterTest.java", "committedDate": "2020-12-21T09:37:58Z", "type": "commit"}, {"oid": "27d47617ebaea0d82fd2ed9587414f2b0c923d84", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27d47617ebaea0d82fd2ed9587414f2b0c923d84", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting", "committedDate": "2020-12-21T09:38:50Z", "type": "commit"}]}