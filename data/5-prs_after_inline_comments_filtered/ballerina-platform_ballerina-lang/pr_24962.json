{"pr_number": 24962, "pr_title": "Allow users to define custom remote maven repositories", "pr_createdAt": "2020-07-27T16:13:09Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962", "timeline": [{"oid": "c6ac3469975ee3d15534772b4e4917a915c08d36", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6ac3469975ee3d15534772b4e4917a915c08d36", "message": "Allow users to define custom remote maven repositories", "committedDate": "2020-07-27T16:10:31Z", "type": "commit"}, {"oid": "b4dce86a596a1830db9e6fe1c94bd4b1ac103235", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b4dce86a596a1830db9e6fe1c94bd4b1ac103235", "message": "Add tests for resolving custom remote maven repositories", "committedDate": "2020-07-27T16:32:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0NjM3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461346376", "bodyText": "If this step is done only if the id and url are not null, then the initialization of username and password variables can be done within the if condition.", "author": "azinneera", "createdAt": "2020-07-28T06:26:14Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -51,6 +52,22 @@ public void execute(BuildContext buildContext) {\n                 + \"platform-libs\";\n         MavenResolver resolver = new MavenResolver(targetRepo);\n \n+        if (manifest.getPlatform().getRepositories() != null && manifest.getPlatform().getRepositories().size() > 0) {\n+            for (Repository repository : manifest.getPlatform().getRepositories()) {\n+                String id = repository.getId();\n+                String url = repository.getUrl();\n+                String username = repository.getUser();\n+                String password = repository.getToken();\n+                if (id != null && url != null) {\n+                    if (username != null && password != null) {", "originalCommit": "b4dce86a596a1830db9e6fe1c94bd4b1ac103235", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461355034", "bodyText": "Let's append the exception value (e) also to the error here.", "author": "azinneera", "createdAt": "2020-07-28T06:47:05Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -60,16 +77,15 @@ public void execute(BuildContext buildContext) {\n         if (mavenDependencies.size() > 0) {\n             buildContext.out().println(\"Resolving Maven dependencies\\n\\tDownloading dependencies into \" + targetRepo);\n             for (Library library : mavenDependencies) {\n-                if (library.getPath() == null) {\n-                    try {\n-                        Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n-                                library.getVersion(), false);\n-                        library.setPath(Utils.getJarPath(targetRepo, dependency));\n-                    } catch (MavenResolverException e) {\n-                        buildContext.err().print(\"cannot resolve \" + library.getArtifactId());\n-                    }\n+                try {\n+                    Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n+                            library.getVersion(), false);\n+                    library.setPath(Utils.getJarPath(targetRepo, dependency));\n+                } catch (MavenResolverException e) {\n+                    buildContext.err().print(\"cannot resolve \" + library.getArtifactId());", "originalCommit": "f1113d229a209910a7f2869f61a92e7e8bd33ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NjczNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461356736", "bodyText": "Also shouldn't we be throwing a LauncherException if there is an exception? Are we continuing even if the dependency resolution fails?", "author": "azinneera", "createdAt": "2020-07-28T06:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3OTg5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r462379899", "bodyText": "We should terminate the build if dependency resolution fails. Fixed in 65d2559", "author": "suganyasuven", "createdAt": "2020-07-29T15:16:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NzY3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461357676", "bodyText": "Let's use Paths.get since File.sperator is the pre-1.7 JDKs way", "author": "azinneera", "createdAt": "2020-07-28T06:53:01Z", "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+\n+    public static String getJarPath(String targetPath, String groupId, String artifactId, String version) {\n+        return targetPath + File.separator + groupId.replace('.', File.separatorChar) + File.separator +", "originalCommit": "f1113d229a209910a7f2869f61a92e7e8bd33ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxNjA1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r463516055", "bodyText": "Fixed in 65d2559", "author": "suganyasuven", "createdAt": "2020-07-31T09:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NzY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1ODYxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461358619", "bodyText": "Shall we add a test case to check the expected behavior when only the group [[platform.repositories]] is given without any entries?", "author": "azinneera", "createdAt": "2020-07-28T06:55:14Z", "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+", "originalCommit": "f1113d229a209910a7f2869f61a92e7e8bd33ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxNTk0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r463515941", "bodyText": "Added test for this scenario in 65d2559", "author": "suganyasuven", "createdAt": "2020-07-31T09:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1ODYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDEzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461360132", "bodyText": "Why have we disabled this test?", "author": "azinneera", "createdAt": "2020-07-28T06:58:42Z", "path": "misc/maven-resolver/src/test/java/org/ballerinalang/maven/MavenResolverTest.java", "diffHunk": "@@ -52,4 +52,33 @@ public void testTransitiveDependency() {\n             Assert.fail(e.getMessage());\n         }\n     }\n+\n+    @Test\n+    public void testAddRemoteRepository() {\n+        try {\n+            resolver.addRepository(\"wso2-releases\", \"http://maven.wso2.org/nexus/content/repositories/releases/\");\n+            Dependency dependency = resolver.resolve(\"org.ballerinalang\", \"wso2-cassandra\",\n+                    \"0.8.3\", true);\n+            String jarPath = Utils.getJarPath(targetRepo, dependency.getDepedencies().get(0));\n+            Assert.assertTrue(new File(jarPath).exists());\n+        } catch (MavenResolverException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test(enabled = false)", "originalCommit": "f1113d229a209910a7f2869f61a92e7e8bd33ac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMzYzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461403637", "bodyText": "Credentials are not added. Thus, it is temporarily disabled.", "author": "suganyasuven", "createdAt": "2020-07-28T08:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDEzMg=="}], "type": "inlineReview"}, {"oid": "65d2559295475f7c7ef375e674939046165b74fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65d2559295475f7c7ef375e674939046165b74fc", "message": "Address review suggestions", "committedDate": "2020-07-29T17:31:09Z", "type": "commit"}, {"oid": "414bbee03b692d201e17966ce6118d004198e767", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/414bbee03b692d201e17966ce6118d004198e767", "message": "Fix test failures", "committedDate": "2020-07-29T19:42:34Z", "type": "commit"}, {"oid": "548699032c80f3db8579441beeb3b97617900c7b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/548699032c80f3db8579441beeb3b97617900c7b", "message": "Add validation for platform libraries and repositories", "committedDate": "2020-07-30T16:27:46Z", "type": "commit"}, {"oid": "1a91496f0b93d8cdbc9223b0bc55740aff8c231b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1a91496f0b93d8cdbc9223b0bc55740aff8c231b", "message": "Add review suggestions", "committedDate": "2020-07-31T14:51:24Z", "type": "commit"}]}