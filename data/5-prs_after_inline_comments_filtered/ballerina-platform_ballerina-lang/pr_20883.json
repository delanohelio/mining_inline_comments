{"pr_number": 20883, "pr_title": "Add support to enable, disable and list groups in test command", "pr_createdAt": "2020-02-06T06:01:55Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375721837", "bodyText": "Do we need -lg? I'm not sure if it's a common practice to use two chars as a shorter option.", "author": "MaryamZi", "createdAt": "2020-02-06T09:26:10Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags\n+    @CommandLine.Option(names = {\"--list-groups\", \"-lg\"}, description = \"list the groups available in the tests\")", "originalCommit": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4NTE1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375785154", "bodyText": "-lg was the short option used until 0.991.x. Therefore we are providing the same in 1.1.x", "author": "azinneera", "createdAt": "2020-02-06T11:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjU4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452582", "bodyText": "IMO, we don't need this. We have other similar options for which we don't have shorter versions.", "author": "MaryamZi", "createdAt": "2020-02-11T05:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2Njg1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378066857", "bodyText": "+1 to remove -lg. @hevayo", "author": "warunalakshitha", "createdAt": "2020-02-12T06:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMjIxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375722216", "bodyText": "Do we need this comment?", "author": "MaryamZi", "createdAt": "2020-02-06T09:26:53Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags", "originalCommit": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4NTU4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375785582", "bodyText": "We can remove it. Removed in 843a452", "author": "azinneera", "createdAt": "2020-02-06T11:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMjIxNg=="}], "type": "inlineReview"}, {"oid": "09f87757851d59e9e490d578923d6ddb8522f734", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/09f87757851d59e9e490d578923d6ddb8522f734", "message": "Add support to enable, disable and list groups in test command", "committedDate": "2020-02-06T11:33:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjY3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452675", "bodyText": "Shall we add @since to the new classes?", "author": "MaryamZi", "createdAt": "2020-02-11T05:38:43Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.", "originalCommit": "843a4527564dbd04de2720695ac27e721221009c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjcxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452716", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public RunTestsTask(){\n          \n          \n            \n                public RunTestsTask() {", "author": "MaryamZi", "createdAt": "2020-02-11T05:38:56Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -34,11 +34,33 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n /**\n  * Task for executing tests.\n  */\n public class RunTestsTask implements Task {\n \n+    private List<String> groupList;\n+    private List<String> disableGroupList;\n+    private TesterinaRegistry testerinaRegistry = TesterinaRegistry.getInstance();\n+\n+    public RunTestsTask(List<String> groupList, List<String> disableGroupList) {\n+        this.groupList = groupList;\n+        this.disableGroupList = disableGroupList;\n+        if (disableGroupList != null) {\n+            testerinaRegistry.setGroups(this.disableGroupList);\n+            testerinaRegistry.setShouldIncludeGroups(false);\n+        } else if (groupList != null) {\n+            testerinaRegistry.setGroups(this.groupList);\n+            testerinaRegistry.setShouldIncludeGroups(true);\n+        }\n+    }\n+\n+    public RunTestsTask(){", "originalCommit": "843a4527564dbd04de2720695ac27e721221009c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NTU1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378065555", "bodyText": "Do we need this?", "author": "warunalakshitha", "createdAt": "2020-02-12T06:48:30Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -34,11 +34,33 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n /**\n  * Task for executing tests.\n  */\n public class RunTestsTask implements Task {\n \n+    private List<String> groupList;\n+    private List<String> disableGroupList;\n+    private TesterinaRegistry testerinaRegistry = TesterinaRegistry.getInstance();\n+\n+    public RunTestsTask(List<String> groupList, List<String> disableGroupList) {\n+        this.groupList = groupList;\n+        this.disableGroupList = disableGroupList;\n+        if (disableGroupList != null) {\n+            testerinaRegistry.setGroups(this.disableGroupList);\n+            testerinaRegistry.setShouldIncludeGroups(false);\n+        } else if (groupList != null) {\n+            testerinaRegistry.setGroups(this.groupList);\n+            testerinaRegistry.setShouldIncludeGroups(true);\n+        }\n+    }\n+\n+    public RunTestsTask() {", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE3MTEyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378171129", "bodyText": "We have it for build command. The reason is that the groups options are not relevant for build command.", "author": "azinneera", "createdAt": "2020-02-12T10:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NTU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODY3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378068670", "bodyText": "Shall we add \"addTask(new ListTestGroupsTask(), listGroups)\" and addTask(new RunTestTask(), !listGroups)", "author": "warunalakshitha", "createdAt": "2020-02-12T06:58:29Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -276,7 +312,7 @@ public void execute() {\n                 .addTask(new CreateJarTask(this.dumpBIR, this.skipCopyLibsFromDist, this.nativeBinary, this.dumpLLVMIR,\n                         this.noOptimizeLLVM))\n                 .addTask(new CopyModuleJarTask(skipCopyLibsFromDist))\n-                .addTask(new RunTestsTask()) // run tests\n+                .addTask(testTask) // run tests", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzODAxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378238011", "bodyText": "This is also fine but use comments to explain what is happening", "author": "hevayo", "createdAt": "2020-02-12T13:07:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODc5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378068794", "bodyText": "We can use skip when adding tasks so this logic we can omit.", "author": "warunalakshitha", "createdAt": "2020-02-12T06:58:56Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -265,6 +295,12 @@ public void execute() {\n         boolean isSingleFileBuild = buildContext.getSourceType().equals(SINGLE_BAL_FILE);\n         // output path is the current directory if -o flag is not given.\n \n+        if (listGroups) {", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNTA2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378235064", "bodyText": "+1 for having the if then the logic is more clear for the reader. A comment above the if will also help for reading the code", "author": "hevayo", "createdAt": "2020-02-12T13:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODc5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070159", "bodyText": "Do we need jar paths and class loader for list commands?", "author": "warunalakshitha", "createdAt": "2020-02-12T07:03:36Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMyMDQ5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378320498", "bodyText": "Yes, the test suite is built for listing groups as well and due to this as per the current implementation, the classloader and jar paths are required to build the test suite.", "author": "azinneera", "createdAt": "2020-02-12T15:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTI4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378071280", "bodyText": "Do we need this task to build command. ( AFAIK groups works only with test)", "author": "warunalakshitha", "createdAt": "2020-02-12T07:07:35Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MjUyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378072529", "bodyText": "No it is only used in the test command. Are there any changes we need to do?", "author": "azinneera", "createdAt": "2020-02-12T07:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTI4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2OTczNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378069737", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n          \n          \n            \n                    // Only tests in packages are executed so that the default packages (i.e. single BAL files), which have the package name", "author": "praneesha", "createdAt": "2020-02-12T07:02:20Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2OTgwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378069801", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n          \n          \n            \n                    // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command, which only executes tests", "author": "praneesha", "createdAt": "2020-02-12T07:02:32Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070001", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // todo following is some legacy logic check if we need to do this.\n          \n          \n            \n                        // Following is some legacy logic to check if we need to do this.", "author": "praneesha", "createdAt": "2020-02-12T07:03:07Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNjM1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378236355", "bodyText": "@praneesha having todo is a practice to keep track of todo items in code", "author": "hevayo", "createdAt": "2020-02-12T13:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0MTk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378641990", "bodyText": "@praneesha having todo is a practice to keep track of todo items in code\n\nAck. Thanks for the explanation.", "author": "praneesha", "createdAt": "2020-02-13T04:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070147", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // In this package there are no tests to be executed. But we need to say to the users that\n          \n          \n            \n                        // In this package there are no tests to be executed. However, we need to say to the users that", "author": "praneesha", "createdAt": "2020-02-12T07:03:33Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDM0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070349", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // subsitute test jar if module jar if tests not exists\n          \n          \n            \n                        // Substitute test JAR if the module JAR if tests not exists\n          \n      \n    \n    \n  \n\nThe idea is not clear.", "author": "praneesha", "createdAt": "2020-02-12T07:04:16Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDQxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070419", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // create a new set so that original set is not affected with test dependencies\n          \n          \n            \n                        // Create a new set so that the original set is not affected with the test dependencies.", "author": "praneesha", "createdAt": "2020-02-12T07:04:33Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDQ5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094495", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // find the set of dependency jar paths for running test for this module and update\n          \n          \n            \n                                // Find the set of dependency JAR paths for running the test for this module and update", "author": "praneesha", "createdAt": "2020-02-12T08:16:15Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);\n+\n+            if (bLangPackage.containsTestablePkg()) {\n+                for (BLangTestablePackage testablePackage : bLangPackage.getTestablePkgs()) {\n+                    // find the set of dependency jar paths for running test for this module and update", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDU3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094574", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Create a class loader to run tests.\n          \n          \n            \n                        // Create a class loader to run the tests.", "author": "praneesha", "createdAt": "2020-02-12T08:16:23Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);\n+\n+            if (bLangPackage.containsTestablePkg()) {\n+                for (BLangTestablePackage testablePackage : bLangPackage.getTestablePkgs()) {\n+                    // find the set of dependency jar paths for running test for this module and update\n+                    updateDependencyJarPaths(testablePackage.symbol.imports, buildContext, dependencyJarPaths);\n+                }\n+            }\n+\n+            // Create a class loader to run tests.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDcxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094717", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Updates paths of dependency jars for test execution.\n          \n          \n            \n                 * Updates paths of dependency JARs for test execution.", "author": "praneesha", "createdAt": "2020-02-12T08:16:40Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDkwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094907", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // add imported module's dependent jar paths\n          \n          \n            \n                        // Add the dependent JAR paths of the imported modules", "author": "praneesha", "createdAt": "2020-02-12T08:17:04Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.\n+     *\n+     * @param importPackageSymbols  list of import package symbols\n+     * @param buildContext build context\n+     * @param dependencyJarPaths paths of dependency jars\n+     */\n+    public static void updateDependencyJarPaths(List<BPackageSymbol> importPackageSymbols, BuildContext buildContext,\n+                                          HashSet<Path> dependencyJarPaths) {\n+        for (BPackageSymbol importPackageSymbol : importPackageSymbols) {\n+            PackageID importPkgId = importPackageSymbol.pkgID;\n+            if (!buildContext.moduleDependencyPathMap.containsKey(importPkgId)) {\n+                continue;\n+            }\n+            // add imported module's dependent jar paths", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTA1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // add imported module's jar path\n          \n          \n            \n                        // Add the JAR path of the imported module\n          \n      \n    \n    \n  \n\nIt seems this is the same comment as the above one. Please check.", "author": "praneesha", "createdAt": "2020-02-12T08:17:27Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.\n+     *\n+     * @param importPackageSymbols  list of import package symbols\n+     * @param buildContext build context\n+     * @param dependencyJarPaths paths of dependency jars\n+     */\n+    public static void updateDependencyJarPaths(List<BPackageSymbol> importPackageSymbols, BuildContext buildContext,\n+                                          HashSet<Path> dependencyJarPaths) {\n+        for (BPackageSymbol importPackageSymbol : importPackageSymbols) {\n+            PackageID importPkgId = importPackageSymbol.pkgID;\n+            if (!buildContext.moduleDependencyPathMap.containsKey(importPkgId)) {\n+                continue;\n+            }\n+            // add imported module's dependent jar paths\n+            HashSet<Path> testDependencies = buildContext.moduleDependencyPathMap.get(importPkgId).platformLibs;\n+            dependencyJarPaths.addAll(testDependencies);\n+\n+            // add imported module's jar path", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjEyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096125", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Executes a given set of ballerina program files when running tests in unit tests.\n          \n          \n            \n                 * Executes a given set of Ballerina program files when running tests in the unit tests.", "author": "praneesha", "createdAt": "2020-02-12T08:20:01Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -126,7 +126,7 @@ public void runTest(String sourceRoot, Path[] sourceFilePaths, List<String> grou\n     }\n \n     /**\n-     * Executes a given set of ballerina program files when running tests using the test command.\n+     * Executes a given set of ballerina program files when running tests in unit tests.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjE5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096190", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Executes a given set of ballerina program files when running tests using the build/test command.\n          \n          \n            \n                 * Executes a given set of Ballerina program files when running tests using the build/test command.", "author": "praneesha", "createdAt": "2020-02-12T08:20:12Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -146,7 +146,7 @@ public void runTest(String sourceRoot, Path[] sourceFilePaths, List<String> grou\n     }\n \n     /**\n-     * Executes a given set of ballerina program files when running tests using the build command.\n+     * Executes a given set of ballerina program files when running tests using the build/test command.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjI5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096292", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Build the test suites\n          \n          \n            \n                    //Builds the test suites.", "author": "praneesha", "createdAt": "2020-02-12T08:20:27Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjM4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096381", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Lists the groups available in tests. This method is used for unit testing.\n          \n          \n            \n                 * Lists the groups available in the tests. This method is used for unit testing.", "author": "praneesha", "createdAt": "2020-02-12T08:20:38Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites\n+        buildSuites(packageList);\n+        List<String> groupList = getGroupList();\n+        if (groupList.size() == 0) {\n+            outStream.println(\"There are no groups available!\");\n+        } else {\n+            outStream.println(\"Following groups are available : \");\n+            outStream.println(groupList);\n+        }\n+    }\n+\n+    /**\n+     * Lists the groups available in tests. This method is used for unit testing.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjUyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096522", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param sourceFilePaths module or program file paths\n          \n          \n            \n                 * @param sourceFilePaths file paths of the module or program", "author": "praneesha", "createdAt": "2020-02-12T08:20:55Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites\n+        buildSuites(packageList);\n+        List<String> groupList = getGroupList();\n+        if (groupList.size() == 0) {\n+            outStream.println(\"There are no groups available!\");\n+        } else {\n+            outStream.println(\"Following groups are available : \");\n+            outStream.println(groupList);\n+        }\n+    }\n+\n+    /**\n+     * Lists the groups available in tests. This method is used for unit testing.\n+     *\n+     * @param sourceRoot source root of the project\n+     * @param sourceFilePaths module or program file paths", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjYyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096627", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param outStream      error stream for logging.\n          \n          \n            \n                 * @param outStream      error stream for logging", "author": "praneesha", "createdAt": "2020-02-12T08:21:10Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjY3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096678", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param errStream      info stream for logging.\n          \n          \n            \n                 * @param errStream      info stream for logging", "author": "praneesha", "createdAt": "2020-02-12T08:21:18Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5Njc4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096782", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Set org-name and version to the Testerina Registry.\n          \n          \n            \n                    // Sets the org-name and version to the Testerina Registry.", "author": "praneesha", "createdAt": "2020-02-12T08:21:32Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.\n      */\n-    public static void executeTests(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader>\n-            programFileMap) {\n-        executeTests(sourceRootPath, programFileMap, System.out, System.err);\n+    public static void listTestGroups(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader> programFileMap,\n+                                      PrintStream outStream, PrintStream errStream) {\n+        // Set org-name and version to the Testerina Registry.", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5Njg0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096840", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Run the tests\n          \n          \n            \n                    // Runs the tests.", "author": "praneesha", "createdAt": "2020-02-12T08:21:39Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.\n      */\n-    public static void executeTests(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader>\n-            programFileMap) {\n-        executeTests(sourceRootPath, programFileMap, System.out, System.err);\n+    public static void listTestGroups(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader> programFileMap,\n+                                      PrintStream outStream, PrintStream errStream) {\n+        // Set org-name and version to the Testerina Registry.\n+        setManifestConfigs(sourceRootPath);\n+\n+        BTestRunner testRunner = new BTestRunner(outStream, errStream);\n+        // Run the tests", "originalCommit": "3a2dffe7b090af16b24d5c7c1b14c033450d578c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7d35661beadf8ffc1e2ddc1ea32d9c04901f15c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d35661beadf8ffc1e2ddc1ea32d9c04901f15c3", "message": "Fix typo and review suggestions related to test command", "committedDate": "2020-02-12T15:13:18Z", "type": "forcePushed"}, {"oid": "3eb66bb616c2eaffca1b5d8588bd449ebf988be9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3eb66bb616c2eaffca1b5d8588bd449ebf988be9", "message": "Add support to enable, disable and list groups in test command", "committedDate": "2020-02-12T15:24:00Z", "type": "commit"}, {"oid": "82afdc3ec819cf49d961e6cda4930c0a9dce20b8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82afdc3ec819cf49d961e6cda4930c0a9dce20b8", "message": "Add new test command options to help text", "committedDate": "2020-02-12T15:26:19Z", "type": "commit"}, {"oid": "546a9c4c22ac90473d523a0b42ebca1b113d15eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/546a9c4c22ac90473d523a0b42ebca1b113d15eb", "message": "Fix typo and review suggestions related to test command", "committedDate": "2020-02-12T15:29:28Z", "type": "commit"}, {"oid": "546a9c4c22ac90473d523a0b42ebca1b113d15eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/546a9c4c22ac90473d523a0b42ebca1b113d15eb", "message": "Fix typo and review suggestions related to test command", "committedDate": "2020-02-12T15:29:28Z", "type": "forcePushed"}, {"oid": "89f9a6baa15d50af25df3acf4214a7f9370f1f52", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89f9a6baa15d50af25df3acf4214a7f9370f1f52", "message": "Remove -lg short command as per the review suggestion", "committedDate": "2020-02-13T05:32:43Z", "type": "commit"}, {"oid": "89f9a6baa15d50af25df3acf4214a7f9370f1f52", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89f9a6baa15d50af25df3acf4214a7f9370f1f52", "message": "Remove -lg short command as per the review suggestion", "committedDate": "2020-02-13T05:32:43Z", "type": "forcePushed"}]}