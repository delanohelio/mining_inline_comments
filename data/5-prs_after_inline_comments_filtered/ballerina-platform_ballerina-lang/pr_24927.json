{"pr_number": 24927, "pr_title": " Fix test execution logic when before/after functions fail ", "pr_createdAt": "2020-07-24T08:20:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24927", "timeline": [{"oid": "d852195ad456fd7d5860208c05d9a493fb1af178", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d852195ad456fd7d5860208c05d9a493fb1af178", "message": "Refactor AfterSuite annotation in test bal files", "committedDate": "2020-07-27T17:59:27Z", "type": "forcePushed"}, {"oid": "dc9f58de577d9162635e355c67cf229f416537a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dc9f58de577d9162635e355c67cf229f416537a0", "message": "Refactor AfterSuite annotation in test bal files", "committedDate": "2020-07-27T18:01:36Z", "type": "forcePushed"}, {"oid": "b2ab0b593739e84148e105126f56651b821fca91", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2ab0b593739e84148e105126f56651b821fca91", "message": "Refactor AfterSuite annotation in test bal files", "committedDate": "2020-07-27T19:20:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1NTQ2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24927#discussion_r461455462", "bodyText": "Instead of instanceof can we check the node kind? i.e. attachmentNode.getExpression().getKind() == NodeKind.RECORD_LITERAL_EXP", "author": "anupama-pathirage", "createdAt": "2020-07-28T09:43:13Z", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestAnnotationProcessor.java", "diffHunk": "@@ -148,7 +149,22 @@ public void process(FunctionNode functionNode, List<AnnotationAttachmentNode> an\n             if (BEFORE_SUITE_ANNOTATION_NAME.equals(annotationName)) {\n                 suite.addBeforeSuiteFunction(functionName);\n             } else if (AFTER_SUITE_ANNOTATION_NAME.equals(annotationName)) {\n-                suite.addAfterSuiteFunction(functionName);\n+                AtomicBoolean alwaysRun = new AtomicBoolean(false);\n+                if (attachmentNode.getExpression() instanceof BLangRecordLiteral) {", "originalCommit": "f6db6befef8716d1b1ee73a377f41b6f2a9145ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMDIyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24927#discussion_r462100220", "bodyText": "Fixed in f9d41bc", "author": "azinneera", "createdAt": "2020-07-29T07:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1NTQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1NjYzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24927#discussion_r461456630", "bodyText": "Shall we have a more meaningful variable name here or simply avoid 2 at the end?", "author": "anupama-pathirage", "createdAt": "2020-07-28T09:45:10Z", "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/BTestRunner.java", "diffHunk": "@@ -406,41 +411,53 @@ private void executeFunction(Test test, TestSuite suite, String packageName, Cla\n         }\n     }\n \n-    private void executeAfterFunction(Test test, TestSuite suite, ClassLoader classLoader, Scheduler scheduler)  {\n-        try {\n-            if (test.getAfterTestFunction() != null) {\n-                invokeTestFunction(suite, test.getAfterTestFunction(), classLoader, scheduler);\n+    private void executeAfterFunction(Test test, TestSuite suite, ClassLoader classLoader, Scheduler scheduler,\n+                                      AtomicBoolean shouldSkip, AtomicBoolean shouldSkipTest,\n+                                      List<String> failedAfterFuncTests)  {\n+        if (!shouldSkip.get() && !shouldSkipTest.get()) {\n+            try {\n+                if (test.getAfterTestFunction() != null) {\n+                    invokeTestFunction(suite, test.getAfterTestFunction(), classLoader, scheduler);\n+                }\n+            } catch (Throwable e) {\n+                failedAfterFuncTests.add(test.getTestName());\n+                String error = String.format(\"\\t[fail] \" + test + \" [after test function for the test %s] :\\n\\t    %s\",\n+                        test, formatErrorMessage(e));\n+                errStream.println(error);\n             }\n-        } catch (Throwable e) {\n-            String error = String.format(\"\\t[fail] \" + test + \" [after test function for the test %s] :\\n\\t    %s\",\n-                                  test, formatErrorMessage(e));\n-            errStream.println(error);\n         }\n     }\n \n-    private void executeAfterEachFunction(Test test, TestSuite suite, ClassLoader classLoader, Scheduler scheduler) {\n-        suite.getAfterEachFunctionNames().forEach(afterEachTest -> {\n-            String errorMsg2;\n-            try {\n-                invokeTestFunction(suite, afterEachTest, classLoader, scheduler);\n-            } catch (Throwable e) {\n-                errorMsg2 = String.format(\"\\t[fail] \" + afterEachTest +\n-                                                  \" [after each test function for the test %s] :\\n\\t    %s\",\n-                                          test, formatErrorMessage(e));\n-                errStream.println(errorMsg2);\n-            }\n-        });\n+    private void executeAfterEachFunction(Test test, TestSuite suite, ClassLoader classLoader, Scheduler scheduler,\n+                                          AtomicBoolean shouldSkip, AtomicBoolean shouldSkipTest) {\n+        if (!shouldSkip.get() && !shouldSkipTest.get()) {\n+            suite.getAfterEachFunctionNames().forEach(afterEachTest -> {\n+                String errorMsg2;", "originalCommit": "f6db6befef8716d1b1ee73a377f41b6f2a9145ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5OTk3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24927#discussion_r462099977", "bodyText": "Fixed in f9d41bc", "author": "azinneera", "createdAt": "2020-07-29T07:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1NjYzMA=="}], "type": "inlineReview"}, {"oid": "b4e9ea4a7b5915f888d8848dcd19679a7505e762", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b4e9ea4a7b5915f888d8848dcd19679a7505e762", "message": "Add review suggestions", "committedDate": "2020-07-29T07:27:09Z", "type": "forcePushed"}, {"oid": "f9d41bce41b8b0bf906d682a5815dc344e391137", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9d41bce41b8b0bf906d682a5815dc344e391137", "message": "Add review suggestions", "committedDate": "2020-07-29T07:35:30Z", "type": "forcePushed"}, {"oid": "8ba520497bfedb1a58d9cac5b320bb2f7bbbaee7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ba520497bfedb1a58d9cac5b320bb2f7bbbaee7", "message": "Fix test execution logic when before/after functions fail", "committedDate": "2020-07-29T18:00:50Z", "type": "commit"}, {"oid": "95fd6bd828082889ebe5cb88e09971be39c4f306", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95fd6bd828082889ebe5cb88e09971be39c4f306", "message": "Add alwaysRun field to AfterSuite annotation", "committedDate": "2020-07-29T18:00:50Z", "type": "commit"}, {"oid": "12ac4129cda92a2bf78b070e5e0248e3a40f49dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/12ac4129cda92a2bf78b070e5e0248e3a40f49dd", "message": "Update testerina before after failure tests", "committedDate": "2020-07-29T18:02:21Z", "type": "commit"}, {"oid": "30ab83da4ff8afb283068164004abb5951e9040e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30ab83da4ff8afb283068164004abb5951e9040e", "message": "Refactor AfterSuite annotation in test bal files", "committedDate": "2020-07-29T18:02:22Z", "type": "commit"}, {"oid": "2f480554fa9a80211a5216c12bb51f7395d72dc8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f480554fa9a80211a5216c12bb51f7395d72dc8", "message": "Fix lang-server-core test failures related to aftersuite annotation", "committedDate": "2020-07-29T18:02:22Z", "type": "commit"}, {"oid": "2a228e1cbc550eeffbfc6f9347cd193a8228509b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a228e1cbc550eeffbfc6f9347cd193a8228509b", "message": "Add review suggestions", "committedDate": "2020-07-29T18:02:22Z", "type": "commit"}, {"oid": "2a228e1cbc550eeffbfc6f9347cd193a8228509b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a228e1cbc550eeffbfc6f9347cd193a8228509b", "message": "Add review suggestions", "committedDate": "2020-07-29T18:02:22Z", "type": "forcePushed"}]}