{"pr_number": 22182, "pr_title": "Add compiler test suite", "pr_createdAt": "2020-03-25T11:00:13Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182", "timeline": [{"oid": "de4a815b622d44d0d7e607d81e2cb38e7db818ff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/de4a815b622d44d0d7e607d81e2cb38e7db818ff", "message": "Resolve conflicts", "committedDate": "2020-03-26T04:27:22Z", "type": "forcePushed"}, {"oid": "57e57ad43362e6fd19692934a70923c9233630ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57e57ad43362e6fd19692934a70923c9233630ac", "message": "Fix checkstyleMain issue", "committedDate": "2020-03-26T05:52:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgzOTM0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r400839347", "bodyText": "Shall we rename java package name to org.ballerinalang.langlib.test and ballerina module name to ballerina/lang.test", "author": "hasithaa", "createdAt": "2020-03-31T11:30:32Z", "path": "langlib/lang.compilertest/src/main/java/org/ballerinalang/langlib/compilertest/AssertError.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.compilertest;", "originalCommit": "57e57ad43362e6fd19692934a70923c9233630ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgzOTYxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r400839616", "bodyText": "Wrong version, Let's change this to 1.3.0", "author": "hasithaa", "createdAt": "2020-03-31T11:31:06Z", "path": "langlib/lang.compilertest/src/main/java/org/ballerinalang/langlib/compilertest/AssertError.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.compilertest;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.ErrorValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+\n+/**\n+ * Native implementation of assertError(anydata|error value).\n+ *\n+ * @since 2.0", "originalCommit": "57e57ad43362e6fd19692934a70923c9233630ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0MTI1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r400841255", "bodyText": "Check this for other functions as well.", "author": "hasithaa", "createdAt": "2020-03-31T11:34:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgzOTYxNg=="}], "type": "inlineReview"}, {"oid": "778d8a74ab89154a3551c671fca03c7b939794f6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/778d8a74ab89154a3551c671fca03c7b939794f6", "message": "Fix the suggested changes", "committedDate": "2020-04-01T06:56:17Z", "type": "forcePushed"}, {"oid": "9e294e25cec3abf2ccea084256a5b13146c1cad2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e294e25cec3abf2ccea084256a5b13146c1cad2", "message": "Remove extra lines", "committedDate": "2020-04-01T15:17:01Z", "type": "forcePushed"}, {"oid": "50f79ebee77ec0582ebd291fee8ce7651bc88441", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/50f79ebee77ec0582ebd291fee8ce7651bc88441", "message": "Fix the suggested changes", "committedDate": "2020-04-01T15:17:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3OTEzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r402079134", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (TypeChecker.isEqual(expected, actual)) {\n          \n          \n            \n                    } else {\n          \n          \n            \n                        throw BallerinaErrors.createError(\"Not Equal\");\n          \n          \n            \n                    }\n          \n          \n            \n                    if (!TypeChecker.isEqual(expected, actual)) {\n          \n          \n            \n                        throw BallerinaErrors.createError(\"Not Equal\");\n          \n          \n            \n                    }", "author": "MaryamZi", "createdAt": "2020-04-02T06:29:42Z", "path": "langlib/lang.test/src/main/java/org/ballerinalang/langlib/test/AssertValueEqual.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.test;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+\n+/**\n+ * Native implementation of assertValueEqual(anydata expected, anydata actual).\n+ *\n+ * @since 1.3.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.test\", functionName = \"assertValueEqual\",\n+        args = {@Argument(name = \"expected\", type = TypeKind.ANYDATA),\n+                @Argument(name = \"actual\", type = TypeKind.ANYDATA)},\n+        isPublic = true\n+)\n+public class AssertValueEqual {\n+    public static void assertValueEqual(Strand strand, Object expected, Object actual) {\n+        if (TypeChecker.isEqual(expected, actual)) {\n+        } else {\n+            throw BallerinaErrors.createError(\"Not Equal\");\n+        }", "originalCommit": "50f79ebee77ec0582ebd291fee8ce7651bc88441", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4MDUwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r402080506", "bodyText": "Also the format we use for error reasons is\n{org-name/module-name}specific-reason-with-no-spaces\nSo shall we use something like,\n{ballerina/lang.test}AssertionError\nor if we want to be specific for each error\n{ballerina/lang.test}NotEqualError\nAnd I think we need to add more details specifically in equality checks (vs true/false checks).\nI think we should add the message field with something along the lines of \"expected this, found that\".\nPlease check these for all errors created.", "author": "MaryamZi", "createdAt": "2020-04-02T06:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3OTEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4NDQ3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r402084479", "bodyText": "We don't usually use instanceof checks. Shall we do something like\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(value instanceof ErrorValue)) {\n          \n          \n            \n                        throw BallerinaErrors.createError(\"Not an Error\");\n          \n          \n            \n                    }\n          \n          \n            \n                    if (TypeChecker.getType(objVal).getTag() != TypeTags.ERROR) {\n          \n          \n            \n                        throw BallerinaErrors.createError(ERR_REASON);\n          \n          \n            \n                    }", "author": "MaryamZi", "createdAt": "2020-04-02T06:43:32Z", "path": "langlib/lang.test/src/main/java/org/ballerinalang/langlib/test/AssertError.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.test;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.ErrorValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+\n+/**\n+ * Native implementation of assertError(anydata|error value).\n+ *\n+ * @since 1.3.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.test\", functionName = \"assertError\",\n+        args = {@Argument(name = \"value\", type = TypeKind.UNION)},\n+        isPublic = true\n+)\n+public class AssertError {\n+    public static void assertError(Strand strand, Object value) {\n+        if (!(value instanceof ErrorValue)) {\n+            throw BallerinaErrors.createError(\"Not an Error\");\n+        }", "originalCommit": "50f79ebee77ec0582ebd291fee8ce7651bc88441", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f857ec6171c99448609b4560d95b2f49b3e2249e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f857ec6171c99448609b4560d95b2f49b3e2249e", "message": "Add compiler test suite", "committedDate": "2020-04-02T17:14:38Z", "type": "commit"}, {"oid": "c8f546fe2692bdbaa0cad67fa01a3cda8d48635d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c8f546fe2692bdbaa0cad67fa01a3cda8d48635d", "message": "Resolve conflicts", "committedDate": "2020-04-02T17:14:38Z", "type": "commit"}, {"oid": "aefa3d0f15d316658aef9828dd5fda8a4842ece5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aefa3d0f15d316658aef9828dd5fda8a4842ece5", "message": "Fix checkstyleMain issue", "committedDate": "2020-04-02T17:14:38Z", "type": "commit"}, {"oid": "c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "message": "Fix the suggested changes", "committedDate": "2020-04-02T17:14:38Z", "type": "commit"}, {"oid": "2a568b71b7818873ee2bcadf6e50f96f5e4d1a64", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a568b71b7818873ee2bcadf6e50f96f5e4d1a64", "message": "Add detailed error messages", "committedDate": "2020-04-02T17:14:39Z", "type": "forcePushed"}, {"oid": "c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "message": "Fix the suggested changes", "committedDate": "2020-04-02T17:14:38Z", "type": "forcePushed"}, {"oid": "c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0a35cbb39d0c531da0c23884e5f0a9149eb6615", "message": "Fix the suggested changes", "committedDate": "2020-04-02T17:14:38Z", "type": "forcePushed"}, {"oid": "9b0f2fed4343edfa6837b1301fd4f8877a3f43fa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b0f2fed4343edfa6837b1301fd4f8877a3f43fa", "message": "Add detailed error messages", "committedDate": "2020-04-03T03:51:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyOTU1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22182#discussion_r404729553", "bodyText": "As this can be string data better to differentiate value with its name\neg: expected 'value' but found 'value'\nI can see the previous one has :. eg : expected: 'value' but found: 'value'.", "author": "KRVPerera", "createdAt": "2020-04-07T11:15:47Z", "path": "langlib/lang.test/src/main/java/org/ballerinalang/langlib/test/AssertValueEqual.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.test;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+\n+/**\n+ * Native implementation of assertValueEqual(anydata expected, anydata actual).\n+ *\n+ * @since 1.3.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.test\", functionName = \"assertValueEqual\",\n+        args = {@Argument(name = \"expected\", type = TypeKind.ANYDATA),\n+                @Argument(name = \"actual\", type = TypeKind.ANYDATA)},\n+        isPublic = true\n+)\n+public class AssertValueEqual {\n+    public static void assertValueEqual(Strand strand, Object expected, Object actual) {\n+        if (!TypeChecker.isEqual(expected, actual)) {\n+            String reason = \"{ballerina/lang.test}AssertionError\";\n+            String msg = \"expected \" + expected.toString() + \" but found \" + actual.toString();", "originalCommit": "9b0f2fed4343edfa6837b1301fd4f8877a3f43fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}