{"pr_number": 26319, "pr_title": "Fix issue when calling function with error return in service", "pr_createdAt": "2020-10-12T14:58:12Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319", "timeline": [{"oid": "e19c7e9b0d10365c1b365f3dcbb65d57e4b0d4b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e19c7e9b0d10365c1b365f3dcbb65d57e4b0d4b0", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-13T04:52:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2Nzk2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319#discussion_r503667961", "bodyText": "Can you use the BRuntime api's to do this invocation? BExecutor will be removed.", "author": "Kishanthan", "createdAt": "2020-10-13T05:01:15Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/nativeimpl/jvm/tests/MockListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.nativeimpl.jvm.tests;\n+\n+import org.ballerinalang.jvm.api.BExecutor;\n+import org.ballerinalang.jvm.api.connector.CallableUnitCallback;\n+import org.ballerinalang.jvm.api.values.BError;\n+import org.ballerinalang.jvm.api.values.BObject;\n+import org.ballerinalang.jvm.api.values.BString;\n+import org.ballerinalang.jvm.scheduling.Scheduler;\n+\n+import java.util.HashMap;\n+import java.util.concurrent.CountDownLatch;\n+\n+/**\n+ * A mock listener for testing services. It can be used to invoke a resource in the service.\n+ */\n+public class MockListener {\n+\n+    private static BObject service;\n+    private static BError err;\n+\n+    public static Object attach(BObject servObj) {\n+        service = servObj;\n+        return null;\n+    }\n+\n+    public static Object invokeResource(BString name) throws InterruptedException {\n+        if (service != null) {\n+            CountDownLatch latch = new CountDownLatch(1);\n+            BExecutor.submit(Scheduler.getStrand().scheduler, service, name.getValue(), null, null,\n+                             new CallableUnitCallback() {\n+                                 @Override\n+                                 public void notifySuccess() {\n+                                     latch.countDown();\n+                                 }\n+\n+                                 @Override\n+                                 public void notifyFailure(BError error) {\n+                                     err = error;\n+                                     latch.countDown();\n+                                 }\n+                             }, new HashMap<>(), null);\n+            latch.await();", "originalCommit": "e19c7e9b0d10365c1b365f3dcbb65d57e4b0d4b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2ODYyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319#discussion_r503668621", "bodyText": "The BRuntime apis allow executing functions. Can they also be used for executing resources? I found the http code uses the above function", "author": "riyafa", "createdAt": "2020-10-13T05:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2Nzk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2OTcwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319#discussion_r503669700", "bodyText": "Yes can be done. Thats what @manuranga is changing and http/stdlib will not be using this BExecutor api's anymore and they will be migrated to use BRuntime api's.\nCheck the invokeMethodAsync method in BRuntime. It should do the above.", "author": "Kishanthan", "createdAt": "2020-10-13T05:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2Nzk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3MjE2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319#discussion_r503672169", "bodyText": "And this class BExecutor is no longer there as it has been just removed :)", "author": "Kishanthan", "createdAt": "2020-10-13T05:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2Nzk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc0MTQ5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26319#discussion_r503741491", "bodyText": "I have fixed this", "author": "riyafa", "createdAt": "2020-10-13T07:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2Nzk2MQ=="}], "type": "inlineReview"}, {"oid": "954c3642a764be1c56f6ea887eb62a6588129d7a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/954c3642a764be1c56f6ea887eb62a6588129d7a", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-13T07:53:32Z", "type": "forcePushed"}, {"oid": "e1ffc76aac0cef9af9f12c43e17e03fe6450ccbf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e1ffc76aac0cef9af9f12c43e17e03fe6450ccbf", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-14T09:05:22Z", "type": "forcePushed"}, {"oid": "6c23db1ad20c3b3b6f2cee3485713d49071e8f6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c23db1ad20c3b3b6f2cee3485713d49071e8f6e", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-14T10:29:16Z", "type": "forcePushed"}, {"oid": "36be68c8eb0a359171e60a7a28d52d7f7f4489d3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36be68c8eb0a359171e60a7a28d52d7f7f4489d3", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-15T00:53:44Z", "type": "commit"}, {"oid": "36be68c8eb0a359171e60a7a28d52d7f7f4489d3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36be68c8eb0a359171e60a7a28d52d7f7f4489d3", "message": "Fix issue when calling function with error return in service\n\nThe issue is in generating the method call of a function in a service. Earlier since only resources were allowed in a service the method calls of all functions in a service were throwing errors when it has an error return. Now a check has been added to throw an error only for a resource.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/24795", "committedDate": "2020-10-15T00:53:44Z", "type": "forcePushed"}]}