{"pr_number": 20895, "pr_title": "Handle the exception thrown when user lacks permission to bal files", "pr_createdAt": "2020-02-06T11:54:58Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20895", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzMDcwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20895#discussion_r377430706", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (e.getCause() instanceof AccessDeniedException) {\n          \n          \n            \n                     if (e.getCause() instanceof AccessDeniedException) {\n          \n          \n            \n                        throw new BLangCompilerException(\"permission denied for path \" + \n          \n          \n            \n                                                                 pkgPath.toString() + \", cause: \" + e.getMessage());\n          \n          \n            \n                    } else {\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }", "author": "warunalakshitha", "createdAt": "2020-02-11T03:14:45Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/ProjectDirs.java", "diffHunk": "@@ -78,14 +80,23 @@ public static BLangCompilerException getPackageNotFoundError(String sourcePackag\n      * @param pkgPath package path\n      * @return true if source files exists else false\n      */\n-    public static boolean containsSourceFiles(Path pkgPath) {\n+    public static boolean containsSourceFiles(Path pkgPath) throws BLangCompilerException {\n         List<Path> sourceFiles = new ArrayList<>();\n         try {\n             sourceFiles = Files.find(pkgPath, Integer.MAX_VALUE, (path, attrs) ->\n                     path.toString().endsWith(ProjectDirConstants.BLANG_SOURCE_EXT)).collect(Collectors.toList());\n         } catch (IOException ignored) {\n             // Here we are trying to check if there are source files inside the package to be compiled. If an error\n             // occurs when trying to visit the files inside the package then we simply return the empty list created.\n+        } catch (UncheckedIOException e) {\n+            // Files#find returns an UncheckedIOException instead of an AccessDeniedException when there is a file to\n+            // which user doesnt have required permission.\n+            if (e.getCause() instanceof AccessDeniedException) {", "originalCommit": "bb8c695dfacede30e003f4821b5ccd4a47a6868f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "055b8a6ef0277d1f8da8d1a56d91c8ff0cfadf21", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/055b8a6ef0277d1f8da8d1a56d91c8ff0cfadf21", "message": "Handle the exception thrown when user lacks permission to bal files", "committedDate": "2020-02-12T06:07:38Z", "type": "forcePushed"}, {"oid": "1aadbf72ba091e3008c92fad9f8ac85d1b5891c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1aadbf72ba091e3008c92fad9f8ac85d1b5891c3", "message": "Handle the exception thrown when user lacks permission to bal files", "committedDate": "2020-02-12T07:14:21Z", "type": "commit"}, {"oid": "1aadbf72ba091e3008c92fad9f8ac85d1b5891c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1aadbf72ba091e3008c92fad9f8ac85d1b5891c3", "message": "Handle the exception thrown when user lacks permission to bal files", "committedDate": "2020-02-12T07:14:21Z", "type": "forcePushed"}]}