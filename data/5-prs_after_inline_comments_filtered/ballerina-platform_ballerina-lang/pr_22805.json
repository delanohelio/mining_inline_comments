{"pr_number": 22805, "pr_title": "Add worker-decl, annotation-decl and XML-namespace-decl parsing support", "pr_createdAt": "2020-04-21T06:25:35Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22805", "timeline": [{"oid": "d159e964e04b7c0cdb52ed9e80875fe3a11b0935", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d159e964e04b7c0cdb52ed9e80875fe3a11b0935", "message": "Clean up end of statements logic", "committedDate": "2020-04-18T03:12:19Z", "type": "commit"}, {"oid": "3a2d3941c4709e84c5d0b6186f27afedc72369a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3a2d3941c4709e84c5d0b6186f27afedc72369a1", "message": "Cleanup record field parsing and recovery", "committedDate": "2020-04-18T05:46:06Z", "type": "commit"}, {"oid": "bd1fecbd8c93b572a635b125e5077b1a85b127aa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bd1fecbd8c93b572a635b125e5077b1a85b127aa", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into module-level-decl", "committedDate": "2020-04-18T05:48:38Z", "type": "commit"}, {"oid": "9911a7b7cd2b0b2fbf0ac1cd69eb79d9be88b05d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9911a7b7cd2b0b2fbf0ac1cd69eb79d9be88b05d", "message": "Annotation decl parsing", "committedDate": "2020-04-19T06:15:17Z", "type": "commit"}, {"oid": "6620be90299bd04ee89fb6f20f1bfcfec5e4a74d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6620be90299bd04ee89fb6f20f1bfcfec5e4a74d", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into module-level-decl", "committedDate": "2020-04-19T06:15:32Z", "type": "commit"}, {"oid": "aab8e92993f3aec20578ea358b00f037e1b0df81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aab8e92993f3aec20578ea358b00f037e1b0df81", "message": "Add XML namespace declaration parsing", "committedDate": "2020-04-19T08:52:47Z", "type": "commit"}, {"oid": "b68cfb212161405430548a1f2b147925d06549d2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b68cfb212161405430548a1f2b147925d06549d2", "message": "Improve doc comments", "committedDate": "2020-04-19T12:54:04Z", "type": "commit"}, {"oid": "2b65d5efe6178f4e1978543395107ad6656dd896", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b65d5efe6178f4e1978543395107ad6656dd896", "message": "Add wroker decl basic parsing", "committedDate": "2020-04-20T06:07:52Z", "type": "commit"}, {"oid": "f0a0db336bf49f536b1cf3f507ff838582960b0d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0a0db336bf49f536b1cf3f507ff838582960b0d", "message": "Add worker-decl parsing tests", "committedDate": "2020-04-20T08:25:26Z", "type": "commit"}, {"oid": "0bb00cb51e90f107de380c05a4f1f8611e4e4dfa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0bb00cb51e90f107de380c05a4f1f8611e4e4dfa", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into module-level-decl", "committedDate": "2020-04-20T09:39:07Z", "type": "commit"}, {"oid": "59936612db4c8b5e6326798df17580804b24cbe4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59936612db4c8b5e6326798df17580804b24cbe4", "message": "Add documentation string basic parsing", "committedDate": "2020-04-20T13:26:09Z", "type": "commit"}, {"oid": "b972b9577bbb0c7b141bfa669392e031f13ec142", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b972b9577bbb0c7b141bfa669392e031f13ec142", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into module-level-decl", "committedDate": "2020-04-21T02:55:33Z", "type": "commit"}, {"oid": "7b5ce4d718ee62fa3eef64bc4dfd21b8234ef721", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b5ce4d718ee62fa3eef64bc4dfd21b8234ef721", "message": "Add annotation declaration tests", "committedDate": "2020-04-21T06:21:46Z", "type": "commit"}, {"oid": "1f39fc9c3abf819b37d38fc24356dec8b60c34a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f39fc9c3abf819b37d38fc24356dec8b60c34a2", "message": "Add test cases and clean up code", "committedDate": "2020-04-21T06:59:47Z", "type": "commit"}, {"oid": "1f39fc9c3abf819b37d38fc24356dec8b60c34a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f39fc9c3abf819b37d38fc24356dec8b60c34a2", "message": "Add test cases and clean up code", "committedDate": "2020-04-21T06:59:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNzQ1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22805#discussion_r411937451", "bodyText": "Is this an optional filed?", "author": "sameerajayasoma", "createdAt": "2020-04-21T07:24:49Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeFactory.java", "diffHunk": "@@ -1155,5 +1155,132 @@ public static NilLiteralNode createNilLiteralNode(\n                 closeParenToken.internalNode());\n         return stNilLiteralNode.createUnlinkedFacade();\n     }\n+\n+    public static AnnotationDeclarationNode createAnnotationDeclarationNode(\n+            MetadataNode metadata,\n+            Token visibilityQualifier,\n+            Token constKeyword,\n+            Token annotationKeyword,\n+            Node typeDescriptor,\n+            Token annotationTag,\n+            Token onKeyword,\n+            SeparatedNodeList<Node> attachPoints,\n+            Token semicolonToken) {\n+        Objects.requireNonNull(metadata, \"metadata must not be null\");\n+        Objects.requireNonNull(visibilityQualifier, \"visibilityQualifier must not be null\");\n+        Objects.requireNonNull(constKeyword, \"constKeyword must not be null\");\n+        Objects.requireNonNull(annotationKeyword, \"annotationKeyword must not be null\");\n+        Objects.requireNonNull(typeDescriptor, \"typeDescriptor must not be null\");\n+        Objects.requireNonNull(annotationTag, \"annotationTag must not be null\");\n+        Objects.requireNonNull(onKeyword, \"onKeyword must not be null\");\n+        Objects.requireNonNull(attachPoints, \"attachPoints must not be null\");\n+        Objects.requireNonNull(semicolonToken, \"semicolonToken must not be null\");\n+\n+        STNode stAnnotationDeclarationNode = STNodeFactory.createAnnotationDeclarationNode(\n+                metadata.internalNode(),\n+                visibilityQualifier.internalNode(),\n+                constKeyword.internalNode(),\n+                annotationKeyword.internalNode(),\n+                typeDescriptor.internalNode(),\n+                annotationTag.internalNode(),\n+                onKeyword.internalNode(),\n+                attachPoints.underlyingListNode().internalNode(),\n+                semicolonToken.internalNode());\n+        return stAnnotationDeclarationNode.createUnlinkedFacade();\n+    }\n+\n+    public static AnnotationAttachPointNode createAnnotationAttachPointNode(\n+            Token sourceKeyword,\n+            Token firstIdent,\n+            Token secondIdent) {\n+        Objects.requireNonNull(sourceKeyword, \"sourceKeyword must not be null\");\n+        Objects.requireNonNull(firstIdent, \"firstIdent must not be null\");\n+        Objects.requireNonNull(secondIdent, \"secondIdent must not be null\");\n+\n+        STNode stAnnotationAttachPointNode = STNodeFactory.createAnnotationAttachPointNode(\n+                sourceKeyword.internalNode(),\n+                firstIdent.internalNode(),\n+                secondIdent.internalNode());\n+        return stAnnotationAttachPointNode.createUnlinkedFacade();\n+    }\n+\n+    public static XMLNamespaceDeclarationNode createXMLNamespaceDeclarationNode(\n+            Token xmlnsKeyword,\n+            ExpressionNode namespaceuri,\n+            Token asKeyword,\n+            IdentifierToken namespacePrefix,\n+            Token semicolonToken) {\n+        Objects.requireNonNull(xmlnsKeyword, \"xmlnsKeyword must not be null\");\n+        Objects.requireNonNull(namespaceuri, \"namespaceuri must not be null\");\n+        Objects.requireNonNull(asKeyword, \"asKeyword must not be null\");\n+        Objects.requireNonNull(namespacePrefix, \"namespacePrefix must not be null\");\n+        Objects.requireNonNull(semicolonToken, \"semicolonToken must not be null\");\n+\n+        STNode stXMLNamespaceDeclarationNode = STNodeFactory.createXMLNamespaceDeclarationNode(\n+                xmlnsKeyword.internalNode(),\n+                namespaceuri.internalNode(),\n+                asKeyword.internalNode(),\n+                namespacePrefix.internalNode(),\n+                semicolonToken.internalNode());\n+        return stXMLNamespaceDeclarationNode.createUnlinkedFacade();\n+    }\n+\n+    public static FunctionBodyBlockNode createFunctionBodyBlockNode(\n+            Token openBraceToken,\n+            NamedWorkerDeclarator namedWorkerDeclarator,", "originalCommit": "1f39fc9c3abf819b37d38fc24356dec8b60c34a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0MzY0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22805#discussion_r411943641", "bodyText": "yes", "author": "SupunS", "createdAt": "2020-04-21T07:34:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNzQ1MQ=="}], "type": "inlineReview"}, {"oid": "51df4cbae6892aaab280712a7793cc333f6951a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/51df4cbae6892aaab280712a7793cc333f6951a0", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into module-level-decl", "committedDate": "2020-04-21T14:41:24Z", "type": "commit"}]}