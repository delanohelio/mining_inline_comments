{"pr_number": 22605, "pr_title": "Enable dependency paths and native-lib paths work across Operating Systems", "pr_createdAt": "2020-04-14T10:56:26Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2NzE5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409267194", "bodyText": "You can probably return the method without adding a flag and a if", "author": "hevayo", "createdAt": "2020-04-16T03:59:12Z", "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -126,20 +129,52 @@ public void testLicenseDescription() throws TomlException {\n         Assert.assertEquals(manifest.getProject().getLicense().get(1), \"Apache-2.0\");\n     }\n \n-    @Test(description = \"One dependency added to the dependencies section has an effect\")\n-    public void testSingleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = {path = \\\"\" + baloPath + \"\\\", version = \\\"1.1.5\\\"} \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(), baloPath.toString());\n-        \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"One dependency added to the dependencies section has an effect except on Windows\")\n+    public void testSingleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;", "originalCommit": "035fcef0e1df7f571aa0d294099151aca14db863", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2NzI4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409267280", "bodyText": "Same as above you can return the function", "author": "hevayo", "createdAt": "2020-04-16T03:59:39Z", "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -126,20 +129,52 @@ public void testLicenseDescription() throws TomlException {\n         Assert.assertEquals(manifest.getProject().getLicense().get(1), \"Apache-2.0\");\n     }\n \n-    @Test(description = \"One dependency added to the dependencies section has an effect\")\n-    public void testSingleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = {path = \\\"\" + baloPath + \"\\\", version = \\\"1.1.5\\\"} \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(), baloPath.toString());\n-        \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"One dependency added to the dependencies section has an effect except on Windows\")\n+    public void testSingleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;\n+        }\n+        if (flag) {\n+            Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n+            Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n+            Files.createFile(baloPath);\n+\n+            // Set tomlData replaced with proper path\n+            String tomlData = this.validProjectBlock + \"[dependencies] \\n string-utils = { path = \\\"\"\n+                    + baloPath + \"\\\", version = \\\"1.1.5\\\" } \\n \";\n+            Manifest manifest = ManifestProcessor.parseTomlContentFromString(tomlData);\n+            Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(),\n+                    baloPath.toString());\n+\n+            Files.delete(baloPath);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+\n+    @Test(description = \"One dependency added to the dependencies section has an effect only on Windows\")\n+    public void testSingleDependenciesWindows() throws TomlException, IOException {\n+        if (!OS.contains(\"win\")) {\n+            flag = false;", "originalCommit": "035fcef0e1df7f571aa0d294099151aca14db863", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2OTEyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409269129", "bodyText": "We can have same test for both windows and linux since we use resolve to get the path of the balo and skip the test if it is windows.", "author": "hevayo", "createdAt": "2020-04-16T04:07:12Z", "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -149,21 +184,53 @@ public void testSingleEmptyDependencies() throws TomlException {\n         Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n     }\n \n-    @Test(description = \"Multiple dependencies added to the dependencies section has an effect\")\n-    public void testMultipleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = { path = \\\"\" + baloPath + \"\\\", version = \\\"1.0.5\\\" } \\n \" +\n-                \"jquery = { version = \\\"2.2.3\\\" } \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.0.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(1).getModuleID(), \"jquery\");\n-        Assert.assertEquals(manifest.getDependencies().get(1).getMetadata().getVersion(), \"2.2.3\");\n-    \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"Multiple dependencies added to the dependencies section has an effect except on Windows\")\n+    public void testMultipleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;\n+        }\n+        if (flag) {\n+            Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n+            Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n+            Files.createFile(baloPath);\n+\n+            String tomlData = this.validProjectBlock + \"[dependencies] \\n string-utils = { path = \\\"\"\n+                    + baloPath + \"\\\", version = \\\"1.0.5\\\" } \\n \"\n+                    + \"jquery = { version = \\\"2.2.3\\\" } \\n\";\n+\n+            Manifest manifest = ManifestProcessor.parseTomlContentFromString(tomlData);\n+            Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.0.5\");\n+            Assert.assertEquals(manifest.getDependencies().get(1).getModuleID(), \"jquery\");\n+            Assert.assertEquals(manifest.getDependencies().get(1).getMetadata().getVersion(), \"2.2.3\");\n+\n+            Files.delete(baloPath);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+\n+    @Test(description = \"Multiple dependencies added to the dependencies section has an effect only on Windows\")\n+    public void testMultipleDependenciesWindows() throws TomlException, IOException {\n+        if (!OS.contains(\"win\")) {", "originalCommit": "035fcef0e1df7f571aa0d294099151aca14db863", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e8b2e64e20aca7ab0fc028c86412d655e88b5b8a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8b2e64e20aca7ab0fc028c86412d655e88b5b8a", "message": "Fix failing toml parser test cases on Windows", "committedDate": "2020-04-17T15:07:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwMTEwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r419201100", "bodyText": "Can we move this logic in to the model instead of having it at the balo writer.", "author": "hevayo", "createdAt": "2020-05-04T03:29:27Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/writer/BaloFileWriter.java", "diffHunk": "@@ -310,6 +312,11 @@ private void addPlatformLibs(Path root, Path projectDirectory, String moduleName\n                     .map(lib -> Paths.get(lib.getPath())).collect(Collectors.toList());\n \n             for (Path lib : libs) {\n+                if (os.contains(\"win\")) {", "originalCommit": "63731e9b000c49b609418a2210db1c5dbd107aae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI2ODM2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r419268366", "bodyText": "yes, moved to model", "author": "parkavi11", "createdAt": "2020-05-04T07:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwMTEwMA=="}], "type": "inlineReview"}, {"oid": "9cbcfd47fe9cdabb459bf15010884fc27cc351c0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cbcfd47fe9cdabb459bf15010884fc27cc351c0", "message": "Enable native lib paths n toml across OS", "committedDate": "2020-05-08T07:31:33Z", "type": "commit"}, {"oid": "5788ff669253d3c8aa532bf9822b5c5e349e0fac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5788ff669253d3c8aa532bf9822b5c5e349e0fac", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-06-06T08:00:38Z", "type": "commit"}, {"oid": "1d69eb1d47f3c9a547930a2289907cbdc00aa033", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d69eb1d47f3c9a547930a2289907cbdc00aa033", "message": "Move native lib test cases to ManifestProcessorTest", "committedDate": "2020-06-06T10:25:17Z", "type": "commit"}, {"oid": "9fac4425e9db4108cc078d0089f489e94c1a9298", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fac4425e9db4108cc078d0089f489e94c1a9298", "message": "Remove unwanted resources added", "committedDate": "2020-06-06T10:26:38Z", "type": "commit"}, {"oid": "9956a06e910250245c75462285e8502e86151f8e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9956a06e910250245c75462285e8502e86151f8e", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-06-15T04:00:52Z", "type": "commit"}, {"oid": "208a6b57182065f9abc1511543236be6faf16e44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/208a6b57182065f9abc1511543236be6faf16e44", "message": "check null path in getPath", "committedDate": "2020-06-15T04:03:09Z", "type": "commit"}, {"oid": "c104645f37674ac96fc0ef0d16dd7a81f5cb1663", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c104645f37674ac96fc0ef0d16dd7a81f5cb1663", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-06-15T17:02:17Z", "type": "commit"}, {"oid": "96934be5f93f6d6d3db9941710a9877b93a73a60", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/96934be5f93f6d6d3db9941710a9877b93a73a60", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-07-02T03:38:12Z", "type": "commit"}, {"oid": "5c5af89e733539538a0595f3f63de80dcfda7369", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5c5af89e733539538a0595f3f63de80dcfda7369", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-07-09T08:41:53Z", "type": "commit"}, {"oid": "f5ee1b5de2f11fad4568d81aa5fba846e9ed3882", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5ee1b5de2f11fad4568d81aa5fba846e9ed3882", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-07-10T07:41:39Z", "type": "commit"}, {"oid": "23cc376cca7239a45945fbadf072b059b9afd5b8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23cc376cca7239a45945fbadf072b059b9afd5b8", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x", "committedDate": "2020-08-02T13:17:32Z", "type": "commit"}]}