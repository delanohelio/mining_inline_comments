{"pr_number": 22519, "pr_title": "Add readonly type - Phase I", "pr_createdAt": "2020-04-08T09:11:12Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22519", "timeline": [{"oid": "714bb1b56a4af2277bdb3d75e0c83eb9e1e4c15e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/714bb1b56a4af2277bdb3d75e0c83eb9e1e4c15e", "message": "Add grammar change for readonly type", "committedDate": "2020-04-04T13:09:05Z", "type": "commit"}, {"oid": "48936045aa70446e09201967a2f65ece035b49eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/48936045aa70446e09201967a2f65ece035b49eb", "message": "Implement compiler changes for the readonly type", "committedDate": "2020-04-05T14:46:43Z", "type": "commit"}, {"oid": "b9e3733cf1feaccdd516cc12b3762b0f4dc9eb50", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9e3733cf1feaccdd516cc12b3762b0f4dc9eb50", "message": "Intro runtime changes for readonly and fix tests", "committedDate": "2020-04-08T10:24:01Z", "type": "commit"}, {"oid": "b9e3733cf1feaccdd516cc12b3762b0f4dc9eb50", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9e3733cf1feaccdd516cc12b3762b0f4dc9eb50", "message": "Intro runtime changes for readonly and fix tests", "committedDate": "2020-04-08T10:24:01Z", "type": "forcePushed"}, {"oid": "851827a502500f52a3e6dfac1d787cd2b5e743bb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/851827a502500f52a3e6dfac1d787cd2b5e743bb", "message": "Fix JvmCastGen for readonly and add basic tests", "committedDate": "2020-04-09T13:40:17Z", "type": "commit"}, {"oid": "ca3fe798c523af279bd93d4092a9a98a9303f1a9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca3fe798c523af279bd93d4092a9a98a9303f1a9", "message": "Merge master", "committedDate": "2020-04-10T08:12:28Z", "type": "commit"}, {"oid": "7328c77961cdcadd08dbe96dc29f51ba1689338f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7328c77961cdcadd08dbe96dc29f51ba1689338f", "message": "Fix langserver tests", "committedDate": "2020-04-10T11:20:08Z", "type": "commit"}, {"oid": "47ac80e7f638f262d231cd7d9efb7401ae6ab252", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47ac80e7f638f262d231cd7d9efb7401ae6ab252", "message": "Fix map spread field analysis and field assignmt type", "committedDate": "2020-04-14T11:10:12Z", "type": "commit"}, {"oid": "002a744d0c419da0b53d9f2d8039e07957b8e017", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/002a744d0c419da0b53d9f2d8039e07957b8e017", "message": "Intro grammar changes for readonly record fields", "committedDate": "2020-04-14T17:26:56Z", "type": "commit"}, {"oid": "735fd62a27ef1b5409059bb5ffe08992f5bd576e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/735fd62a27ef1b5409059bb5ffe08992f5bd576e", "message": "Intro initial compiler changes for readonly fields in record typedesc", "committedDate": "2020-04-14T17:34:34Z", "type": "commit"}, {"oid": "d04f4ad5f9888455cafeef71425fc3f08888be03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d04f4ad5f9888455cafeef71425fc3f08888be03", "message": "Intro runtime changes for readonly fields in record typedesc", "committedDate": "2020-04-14T17:39:16Z", "type": "commit"}, {"oid": "58d8667a4bccbdc8018c0ff659c0181fc507c170", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/58d8667a4bccbdc8018c0ff659c0181fc507c170", "message": "Add compile-time validations for readonly record fields", "committedDate": "2020-04-15T12:06:58Z", "type": "commit"}, {"oid": "96678ee2b48ea1bc8fa36253e59a9b41ffc85e93", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/96678ee2b48ea1bc8fa36253e59a9b41ffc85e93", "message": "Resolve conflicts and merge master", "committedDate": "2020-04-15T12:57:04Z", "type": "commit"}, {"oid": "44a6c62fa27bcc033766dde44499bb28c5b25c66", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44a6c62fa27bcc033766dde44499bb28c5b25c66", "message": "Fix langserver tests", "committedDate": "2020-04-15T19:34:04Z", "type": "commit"}, {"oid": "7799af32045bbc8c32a3a708a2e704f5c37ac4d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7799af32045bbc8c32a3a708a2e704f5c37ac4d5", "message": "Fix extra separation error", "committedDate": "2020-04-15T20:51:29Z", "type": "commit"}, {"oid": "e46fc06c0d716a5c6caf1b069395b53cb8eb5cfe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e46fc06c0d716a5c6caf1b069395b53cb8eb5cfe", "message": "Merge master", "committedDate": "2020-04-16T10:32:28Z", "type": "commit"}, {"oid": "65d005938b9b5885b1eb65b2fa751fca956b2b96", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65d005938b9b5885b1eb65b2fa751fca956b2b96", "message": "Fix jballerina-bstring-unit tests", "committedDate": "2020-04-16T11:26:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0MjE2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22519#discussion_r410042163", "bodyText": "Can this be null here, if the mapping constructor contains the field?", "author": "pubudu91", "createdAt": "2020-04-17T07:30:08Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1054,22 +1054,107 @@ private boolean validateSpecifiedFields(BLangRecordLiteral mappingConstructor, B\n         return isFieldsValid;\n     }\n \n-    private boolean validateRequiredFields(BRecordType type, List<RecordLiteralNode.RecordField> specifiedFields,\n-                                           DiagnosticPos pos) {\n+    private boolean validateRequiredAndReadonlyFields(BRecordType type,\n+                                                      List<RecordLiteralNode.RecordField> specifiedFields,\n+                                                      DiagnosticPos pos) {\n         HashSet<String> specFieldNames = getFieldNames(specifiedFields);\n         boolean hasAllRequiredFields = true;\n+        boolean hasValidReadonlyFields = true;\n \n         for (BField field : type.fields) {\n-            // Check if `field` is explicitly assigned a value in the record literal\n-            // If a required field is missing, it's a compile error\n-            if (!specFieldNames.contains(field.name.value) && Symbols.isFlagOn(field.symbol.flags, Flags.REQUIRED)) {\n+            String fieldName = field.name.value;\n+            BType fieldType = symTable.semanticError;\n+            DiagnosticPos fieldPos;\n+\n+            if (specFieldNames.contains(fieldName)) {\n+                RecordLiteralNode.RecordField recordField = getRecordFieldByName(specifiedFields, fieldName);\n+                if (recordField == null) {", "originalCommit": "65d005938b9b5885b1eb65b2fa751fca956b2b96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNTAwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22519#discussion_r410235009", "bodyText": "Yeah not in this context, I've removed the null check.", "author": "MaryamZi", "createdAt": "2020-04-17T13:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0MjE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0NDU5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22519#discussion_r410044597", "bodyText": "Isn't this part duplicate of the logic in getRecordFieldByName()? Do we need to do the same here, after calling that method? Should be able to directly take the type of the spread field right?", "author": "pubudu91", "createdAt": "2020-04-17T07:35:22Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1054,22 +1054,107 @@ private boolean validateSpecifiedFields(BLangRecordLiteral mappingConstructor, B\n         return isFieldsValid;\n     }\n \n-    private boolean validateRequiredFields(BRecordType type, List<RecordLiteralNode.RecordField> specifiedFields,\n-                                           DiagnosticPos pos) {\n+    private boolean validateRequiredAndReadonlyFields(BRecordType type,\n+                                                      List<RecordLiteralNode.RecordField> specifiedFields,\n+                                                      DiagnosticPos pos) {\n         HashSet<String> specFieldNames = getFieldNames(specifiedFields);\n         boolean hasAllRequiredFields = true;\n+        boolean hasValidReadonlyFields = true;\n \n         for (BField field : type.fields) {\n-            // Check if `field` is explicitly assigned a value in the record literal\n-            // If a required field is missing, it's a compile error\n-            if (!specFieldNames.contains(field.name.value) && Symbols.isFlagOn(field.symbol.flags, Flags.REQUIRED)) {\n+            String fieldName = field.name.value;\n+            BType fieldType = symTable.semanticError;\n+            DiagnosticPos fieldPos;\n+\n+            if (specFieldNames.contains(fieldName)) {\n+                RecordLiteralNode.RecordField recordField = getRecordFieldByName(specifiedFields, fieldName);\n+                if (recordField == null) {\n+                    continue;\n+                }\n+\n+                switch (recordField.getKind()) {\n+                    case RECORD_LITERAL_KEY_VALUE:\n+                        BLangRecordKeyValueField keyValueField = (BLangRecordKeyValueField) recordField;\n+                        fieldType = keyValueField.type;\n+                        fieldPos = keyValueField.valueExpr.pos;\n+                        break;\n+                    case SIMPLE_VARIABLE_REF:\n+                        BLangRecordLiteral.BLangRecordVarNameField varNameField =\n+                                (BLangRecordLiteral.BLangRecordVarNameField) recordField;\n+                        fieldType = varNameField.type;\n+                        fieldPos = varNameField.pos;\n+                        break;\n+                    default:\n+                        BLangRecordLiteral.BLangRecordSpreadOperatorField spreadOpField =\n+                                (BLangRecordLiteral.BLangRecordSpreadOperatorField) recordField;\n+                        BRecordType recordType = (BRecordType) spreadOpField.expr.type;\n+\n+                        for (BField bField : recordType.fields) {\n+                            if (fieldName.equals(bField.name.value)) {\n+                                fieldType = bField.type;\n+                                break;\n+                            }\n+                        }", "originalCommit": "65d005938b9b5885b1eb65b2fa751fca956b2b96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MDk2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22519#discussion_r410240961", "bodyText": "Yeah, noticed the duplication, but the issue was that we basically needed the type and pos, and for key-value and variable name fields we can retrieve a RecordField and get the type and pos from it. But for a spread-field the type is from a BField and the pos is still from the spread field.\nI've refactored this a bit with an inner class.", "author": "MaryamZi", "createdAt": "2020-04-17T13:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0NDU5Nw=="}], "type": "inlineReview"}, {"oid": "8e08a6a702a65012987aff793a35c88199784bf2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e08a6a702a65012987aff793a35c88199784bf2", "message": "Refactor readonly field validation", "committedDate": "2020-04-17T13:43:19Z", "type": "commit"}, {"oid": "d3f7ee44c5da0c4ca4e6c965c417349f53c06d73", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3f7ee44c5da0c4ca4e6c965c417349f53c06d73", "message": "Merge master", "committedDate": "2020-04-17T18:20:40Z", "type": "commit"}, {"oid": "34f5a8f99bb1bfe7af4e235cba041a49d715b10a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34f5a8f99bb1bfe7af4e235cba041a49d715b10a", "message": "Resolve conflicts and merge master", "committedDate": "2020-04-19T09:36:03Z", "type": "commit"}, {"oid": "e29cf50fd91c09818a2e7603860606def0a5a90c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e29cf50fd91c09818a2e7603860606def0a5a90c", "message": "Regenerate BallerinaLexer", "committedDate": "2020-04-19T09:39:17Z", "type": "commit"}]}