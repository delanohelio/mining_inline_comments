{"pr_number": 25314, "pr_title": "Fix modifySeparatedNodeList", "pr_createdAt": "2020-08-18T12:01:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314", "timeline": [{"oid": "b89de8b238fd1973cada7648103bcfef097012eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b89de8b238fd1973cada7648103bcfef097012eb", "message": "Fix modifySeparatedNodeList\n\nfix modifySeparatedNodeList returning NodeList instead of\nSeperatedNodeList when SeperatedNodeList is modified.", "committedDate": "2020-08-18T11:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0MDU3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472640574", "bodyText": "Can we use separate methods for modifying NodeList and SeparatedNodeList?", "author": "SupunS", "createdAt": "2020-08-19T03:28:15Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/TreeModifier.java", "diffHunk": "@@ -3070,14 +3070,23 @@ protected Node transformSyntaxNode(Node node) {\n         }\n \n         boolean nodeModified = false;\n-        STNode[] newSTNodes = new STNode[nodeList.size()];\n+        STNode[] newSTNodes = new STNode[nodeList.internalListNode.size()];\n+\n         for (int index = 0; index < nodeList.size(); index++) {\n             T oldNode = nodeList.get(index);\n             T newNode = modifyNode(oldNode);\n             if (oldNode != newNode) {\n                 nodeModified = true;\n             }\n-            newSTNodes[index] = newNode.internalNode();\n+\n+            if (nodeList instanceof SeparatedNodeList && index < nodeList.size() - 1) {", "originalCommit": "b89de8b238fd1973cada7648103bcfef097012eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY5NDE0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472694147", "bodyText": "ok", "author": "m36dot", "createdAt": "2020-08-19T04:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0MDU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0MjU1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472642555", "bodyText": "Looks like the separator is not modified.\nShall we add a test case to check whether the separator is also modified? e.g: remove all whitespaces", "author": "SupunS", "createdAt": "2020-08-19T03:31:32Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/TreeModifier.java", "diffHunk": "@@ -3070,14 +3070,23 @@ protected Node transformSyntaxNode(Node node) {\n         }\n \n         boolean nodeModified = false;\n-        STNode[] newSTNodes = new STNode[nodeList.size()];\n+        STNode[] newSTNodes = new STNode[nodeList.internalListNode.size()];\n+\n         for (int index = 0; index < nodeList.size(); index++) {\n             T oldNode = nodeList.get(index);\n             T newNode = modifyNode(oldNode);\n             if (oldNode != newNode) {\n                 nodeModified = true;\n             }\n-            newSTNodes[index] = newNode.internalNode();\n+\n+            if (nodeList instanceof SeparatedNodeList && index < nodeList.size() - 1) {\n+                newSTNodes[2 * index] = newNode.internalNode();\n+                newSTNodes[(2 * index) + 1] = ((SeparatedNodeList<?>) nodeList).getSeparator(index).internalNode();", "originalCommit": "b89de8b238fd1973cada7648103bcfef097012eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY5Mzg1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472693852", "bodyText": "alright", "author": "m36dot", "createdAt": "2020-08-19T04:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0MjU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc2MjMxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472762317", "bodyText": "ok", "author": "m36dot", "createdAt": "2020-08-19T06:37:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0MjU1NQ=="}], "type": "inlineReview"}, {"oid": "fb4812c58058d2a5c6f5dffa1669b4410987f9c7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb4812c58058d2a5c6f5dffa1669b4410987f9c7", "message": "Refactor Code", "committedDate": "2020-08-19T07:39:01Z", "type": "commit"}, {"oid": "3ba9261e0b2a9aae7b4831aa9dafd8e3066d8f48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ba9261e0b2a9aae7b4831aa9dafd8e3066d8f48", "message": "Fix CheckstyleTest", "committedDate": "2020-08-19T08:13:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNTc3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r472935772", "bodyText": "These two asserts only checks for the counts.\nWe need to assert the content as well, to see whether they were updated correctly or not.", "author": "SupunS", "createdAt": "2020-08-19T10:44:55Z", "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/tree/SyntaxTreeModifierTest.java", "diffHunk": "@@ -109,6 +115,54 @@ public void testBinaryExprModification() {\n         Assert.assertEquals(minusOrSlashCounter.transform(newRoot), new Integer(4));\n     }\n \n+    @Test\n+    public void testSeparatedListNodeNonSeperatorModification() {\n+        SyntaxTree syntaxTree = parseFile(\"separated_node_list_modify_all_nodes.bal\");\n+        ModulePartNode oldRoot = syntaxTree.rootNode();\n+\n+        ModuleVariableDeclarationNode oldModuleVariableDeclarationNode =\n+                (ModuleVariableDeclarationNode) oldRoot.members().get(0);\n+        ListConstructorExpressionNode oldSeperatedlistNode =\n+                (ListConstructorExpressionNode) oldModuleVariableDeclarationNode.initializer();\n+\n+        IdentifierModifier identifierModifier = new IdentifierModifier();\n+        ModulePartNode newRoot = (ModulePartNode) oldRoot.apply(identifierModifier);\n+\n+        ModuleVariableDeclarationNode newModuleVariableDeclarationNode =\n+                (ModuleVariableDeclarationNode) newRoot.members().get(0);\n+        ListConstructorExpressionNode newSeperatedlistNode =\n+                (ListConstructorExpressionNode) newModuleVariableDeclarationNode.initializer();\n+\n+        Assert.assertEquals(oldSeperatedlistNode.expressions().separatorSize(),\n+                newSeperatedlistNode.expressions().separatorSize());\n+        Assert.assertEquals(oldSeperatedlistNode.expressions().size(),\n+                newSeperatedlistNode.expressions().size());\n+    }\n+\n+    @Test\n+    public void testSeparatedListNodeAllNodeModification() {\n+        SyntaxTree syntaxTree = parseFile(\"separated_node_list_modify.bal\");\n+        ModulePartNode oldRoot = syntaxTree.rootNode();\n+\n+        ModuleVariableDeclarationNode oldModuleVariableDeclarationNode =\n+                (ModuleVariableDeclarationNode) oldRoot.members().get(0);\n+        ListConstructorExpressionNode oldSeperatedlistNode =\n+                (ListConstructorExpressionNode) oldModuleVariableDeclarationNode.initializer();\n+\n+        TokenModifier tokenModifier = new TokenModifier();\n+        ModulePartNode newRoot = (ModulePartNode) oldRoot.apply(tokenModifier);\n+\n+        ModuleVariableDeclarationNode newModuleVariableDeclarationNode =\n+                (ModuleVariableDeclarationNode) newRoot.members().get(0);\n+        ListConstructorExpressionNode newSeperatedlistNode =\n+                (ListConstructorExpressionNode) newModuleVariableDeclarationNode.initializer();\n+\n+        Assert.assertEquals(oldSeperatedlistNode.expressions().separatorSize(),\n+                newSeperatedlistNode.expressions().separatorSize());\n+        Assert.assertEquals(oldSeperatedlistNode.expressions().size(),\n+                newSeperatedlistNode.expressions().size());", "originalCommit": "3ba9261e0b2a9aae7b4831aa9dafd8e3066d8f48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYxMTk1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25314#discussion_r473611958", "bodyText": "ok", "author": "m36dot", "createdAt": "2020-08-20T05:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNTc3Mg=="}], "type": "inlineReview"}, {"oid": "b90f75176dde824497c6a4089361c3aca9ccdc61", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b90f75176dde824497c6a4089361c3aca9ccdc61", "message": "Refactor Code", "committedDate": "2020-08-19T11:14:28Z", "type": "commit"}, {"oid": "338c8942ddfd0021e42f4dd80bbc986051ef843e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/338c8942ddfd0021e42f4dd80bbc986051ef843e", "message": "Refactor Code", "committedDate": "2020-08-19T11:55:31Z", "type": "commit"}, {"oid": "ff761448cb216b32dc053a7e4fdeed3f668ccbff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff761448cb216b32dc053a7e4fdeed3f668ccbff", "message": "Fix Checkstyle", "committedDate": "2020-08-19T12:14:32Z", "type": "commit"}, {"oid": "cc2075ed6b5f58704369e03560e06a5193677494", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc2075ed6b5f58704369e03560e06a5193677494", "message": "Fix seperatedNodeList Modify test", "committedDate": "2020-08-20T06:49:37Z", "type": "commit"}, {"oid": "efbae4cd5494e1fe4e54fac8f1f8bf385cae8a6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/efbae4cd5494e1fe4e54fac8f1f8bf385cae8a6e", "message": "Remove Unused Imports", "committedDate": "2020-08-20T07:01:13Z", "type": "commit"}, {"oid": "367231e08ed90b262178b99071a38981ec5588ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/367231e08ed90b262178b99071a38981ec5588ef", "message": "Fix removeWhiteSpaceMinutiate to remove all whiteSpaceMinutiae", "committedDate": "2020-08-20T08:06:41Z", "type": "commit"}, {"oid": "5e1f36ffb350e3eeee2420a597f663d7148de789", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5e1f36ffb350e3eeee2420a597f663d7148de789", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixbadSadSaif", "committedDate": "2020-08-21T04:43:32Z", "type": "commit"}]}