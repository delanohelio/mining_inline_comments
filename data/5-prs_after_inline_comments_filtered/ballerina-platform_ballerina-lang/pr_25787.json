{"pr_number": 25787, "pr_title": "Add BalEnv special parameter support for interop functions", "pr_createdAt": "2020-09-15T03:50:31Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787", "timeline": [{"oid": "98cd8f0b2589c6f0d092f1db6786421a8e50d060", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/98cd8f0b2589c6f0d092f1db6786421a8e50d060", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T04:17:04Z", "type": "forcePushed"}, {"oid": "b8537abfdf54b7f3a83a7872da8b95143f8e335e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8537abfdf54b7f3a83a7872da8b95143f8e335e", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T04:39:36Z", "type": "forcePushed"}, {"oid": "a750f8181b1e4fcf319be5453c003814512e5fb7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a750f8181b1e4fcf319be5453c003814512e5fb7", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T05:26:32Z", "type": "forcePushed"}, {"oid": "9fc9cc1b646d5f5180efac78713e942605a918d8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fc9cc1b646d5f5180efac78713e942605a918d8", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T06:31:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMzYzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488433635", "bodyText": "lets add @ since 2.0.0 version", "author": "Kishanthan", "createdAt": "2020-09-15T07:05:00Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalEnv.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.scheduling.Scheduler;\n+import org.ballerinalang.jvm.scheduling.State;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+\n+/**\n+ * When this class is used as the first argument of an interop method, Ballerina\n+ * will inject an instance of the class when calling. That instance can be used to\n+ * communicate with currently executing Ballerina runtime.", "originalCommit": "9fc9cc1b646d5f5180efac78713e942605a918d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMzc2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488433769", "bodyText": "missing license header", "author": "Kishanthan", "createdAt": "2020-09-15T07:05:15Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalEnv.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.ballerinalang.jvm.api;", "originalCommit": "9fc9cc1b646d5f5180efac78713e942605a918d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMzkyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488433924", "bodyText": "missing license header", "author": "Kishanthan", "createdAt": "2020-09-15T07:05:33Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalFuture.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.ballerinalang.jvm.api;", "originalCommit": "9fc9cc1b646d5f5180efac78713e942605a918d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzNDA1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488434057", "bodyText": "lets add @ since 2.0.0 version", "author": "Kishanthan", "createdAt": "2020-09-15T07:05:48Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalFuture.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+\n+/**\n+ * A future that will resume the underling strand when completed.\n+ */", "originalCommit": "9fc9cc1b646d5f5180efac78713e942605a918d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1791c38358d36b58cb385c42e0c83776de764d14", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1791c38358d36b58cb385c42e0c83776de764d14", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T07:15:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjQ0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488572449", "bodyText": "looks like these two line are not formatted", "author": "Kishanthan", "createdAt": "2020-09-15T10:53:30Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalFuture.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+\n+/**\n+ * A future that will resume the underling strand when completed.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BalFuture {\n+    private final Strand strand;\n+\n+    public BalFuture(Strand strand) {\n+        this.strand = strand;\n+    }\n+\n+    public void complete(Object returnValue) {\n+            strand.returnValue = returnValue;\n+            strand.scheduler.unblockStrand(strand);", "originalCommit": "1791c38358d36b58cb385c42e0c83776de764d14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjY1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25787#discussion_r488572656", "bodyText": "Should there be a new line break between in here?", "author": "Kishanthan", "createdAt": "2020-09-15T10:53:53Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BalEnv.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.scheduling.Scheduler;\n+import org.ballerinalang.jvm.scheduling.State;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+\n+/**\n+ * When this class is used as the first argument of an interop method, Ballerina\n+ * will inject an instance of the class when calling. That instance can be used to\n+ * communicate with currently executing Ballerina runtime.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BalEnv {\n+    private Strand strand;\n+\n+    public BalEnv(Strand strand) {\n+        this.strand = strand;\n+    }\n+\n+    /**\n+     * Mark the current executing strand as async. Execution of Ballerina code after the current\n+     * interop will stop until given BalFuture is completed. However the java thread will not be blocked\n+     * and will be reused for running other Ballerina code in the meantime. Therefor callee of this method\n+     * must return as soon as possible to avoid starvation of ballerina code execution.", "originalCommit": "1791c38358d36b58cb385c42e0c83776de764d14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a9594383e32b0a2a12b22aa2fa1997b41fca48d7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a9594383e32b0a2a12b22aa2fa1997b41fca48d7", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T11:03:13Z", "type": "commit"}, {"oid": "a9594383e32b0a2a12b22aa2fa1997b41fca48d7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a9594383e32b0a2a12b22aa2fa1997b41fca48d7", "message": "Add BalEnv special parameter support for interop functions", "committedDate": "2020-09-15T11:03:13Z", "type": "forcePushed"}]}