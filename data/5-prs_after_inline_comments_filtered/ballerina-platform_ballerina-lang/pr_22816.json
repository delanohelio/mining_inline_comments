{"pr_number": 22816, "pr_title": "Add type cast action and separate function/method calls and actions", "pr_createdAt": "2020-04-21T12:59:02Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDMxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413540314", "bodyText": "WDYT of using a method instead of all these. Looks a bit too verbose for this method for me :)", "author": "dulvinw", "createdAt": "2020-04-23T06:22:10Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1816,6 +1811,63 @@ public void visit(BLangInvocation iExpr) {\n         }\n     }\n \n+    public void visit(BLangInvocation.BLangActionInvocation aInv) {\n+        // For an action invocation, this will only be satisfied when it's an async call of a function.\n+        // e.g., start foo();\n+        if (aInv.expr == null) {\n+            checkFunctionInvocationExpr(aInv);\n+            return;\n+        }\n+\n+        // Module aliases cannot be used with remote method call actions\n+        if (!validateModuleAliasUsage(aInv)) {\n+            return;\n+        }\n+\n+        // Find the variable reference expression type\n+        BType exprType = checkExpr(aInv.expr, this.env, symTable.noType);\n+        BType actualType = symTable.semanticError;\n+        BLangVariableReference varRef = (BLangVariableReference) aInv.expr;\n+\n+        if (exprType == symTable.semanticError || exprType.tag != TypeTags.OBJECT ||\n+                ((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {", "originalCommit": "53f3ab7779ecc575af947812020f9e8380eb57c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NTU3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413595573", "bodyText": "Just the (varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) part or the whole thing? The expression as a whole, checks whether it's a remote method call or an async method call.", "author": "pubudu91", "createdAt": "2020-04-23T07:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NjQxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413596419", "bodyText": "On second thoughts, that's probably not the correct way to check for a remote method call", "author": "pubudu91", "createdAt": "2020-04-23T07:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MzI5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413543296", "bodyText": "Wrong year?", "author": "irshadnilam", "createdAt": "2020-04-23T06:29:01Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/ActionNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *", "originalCommit": "53f3ab7779ecc575af947812020f9e8380eb57c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae2e123761b357260af4b9edeaf6da84ce644605", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae2e123761b357260af4b9edeaf6da84ce644605", "message": "Allow async record field function pointer invocations", "committedDate": "2020-04-24T14:14:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NjcxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415446713", "bodyText": "Shall we use\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void visit(BLangInvocation.BLangActionInvocation remoteMethodCallNode) {\n          \n          \n            \n                public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {\n          \n      \n    \n    \n  \n\ninstead?", "author": "MaryamZi", "createdAt": "2020-04-27T01:06:52Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ConstantPropagation.java", "diffHunk": "@@ -274,6 +274,14 @@ public void visit(BLangInvocation bLangInvocationNode) {\n         result = bLangInvocationNode;\n     }\n \n+    @Override\n+    public void visit(BLangInvocation.BLangActionInvocation remoteMethodCallNode) {", "originalCommit": "28cd437150535ae0b72602f492912aee4f571627", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzM5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415447397", "bodyText": "Aren't we duplicating most of the logic from visit(BLangInvocation iExpr) here? Can't we use a common method instead?", "author": "MaryamZi", "createdAt": "2020-04-27T01:10:05Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -3615,6 +3614,58 @@ public void visit(BLangInvocation iExpr) {\n         fixTypeCastInTypeParamInvocation(iExpr, genIExpr);\n     }\n \n+    @Override\n+    public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {", "originalCommit": "28cd437150535ae0b72602f492912aee4f571627", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMTIyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415531224", "bodyText": "Yeah, it's duplicated. Will see about moving it to a common place", "author": "pubudu91", "createdAt": "2020-04-27T05:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMzUwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415713503", "bodyText": "Addressed with ccf1fe7", "author": "pubudu91", "createdAt": "2020-04-27T10:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzM5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzkyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415447925", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                              boolean remoteMethodCall) {\n          \n          \n            \n                                              boolean actionInvocation) {", "author": "MaryamZi", "createdAt": "2020-04-27T01:12:10Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java", "diffHunk": "@@ -1654,8 +1655,16 @@ private void createSimpleVariableReference(DiagnosticPos pos, Set<Whitespace> ws\n         this.exprNodeStack.push(varRef);\n     }\n \n-    void createFunctionInvocation(DiagnosticPos pos, Set<Whitespace> ws, boolean argsAvailable) {\n-        BLangInvocation invocationNode = (BLangInvocation) TreeBuilder.createInvocationNode();\n+    void createFunctionInvocation(DiagnosticPos pos, Set<Whitespace> ws, boolean argsAvailable,\n+                                  boolean remoteMethodCall) {", "originalCommit": "28cd437150535ae0b72602f492912aee4f571627", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0ODQzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415448435", "bodyText": "Not sure if the changes to support multiple-receive-action will remove the key from normal worker receive. But shall we remove this and create an issue anyway?", "author": "MaryamZi", "createdAt": "2020-04-27T01:14:23Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java", "diffHunk": "@@ -3194,6 +3213,7 @@ void addWorkerReceiveExpr(DiagnosticPos pos, Set<Whitespace> ws, String workerNa\n         workerReceiveExpr.pos = pos;\n         workerReceiveExpr.addWS(ws);\n         //if there are two expressions, this is a channel receive and the top expression is the key\n+        // TODO: Not needed?", "originalCommit": "28cd437150535ae0b72602f492912aee4f571627", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f4ee1bd8603d72c3142ce028967640c4ed472514", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4ee1bd8603d72c3142ce028967640c4ed472514", "message": "Improve type checking logic and error messages related to actions", "committedDate": "2020-04-27T10:52:07Z", "type": "forcePushed"}, {"oid": "e46f4344206ca5931e65530cb5686551f2ec670d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e46f4344206ca5931e65530cb5686551f2ec670d", "message": "Separate function/method calls and actions", "committedDate": "2020-04-27T15:47:52Z", "type": "commit"}, {"oid": "42e0b27a095bbfdd42e8d8d1e3397ad0936a738d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42e0b27a095bbfdd42e8d8d1e3397ad0936a738d", "message": "Separate async function calls from regular function calls", "committedDate": "2020-04-27T15:56:36Z", "type": "commit"}, {"oid": "47d2c5dfe46dcc00beb5ea0eb824c42d23ee0e57", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47d2c5dfe46dcc00beb5ea0eb824c42d23ee0e57", "message": "Refactor nested action validation logic", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "3162235e2de6adbe8c6b7fc9ec47c72a5fa87041", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3162235e2de6adbe8c6b7fc9ec47c72a5fa87041", "message": "Fix broken tests", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "4c9eb77f757acd5b18fc7053e613ce1a9491c06c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c9eb77f757acd5b18fc7053e613ce1a9491c06c", "message": "Disallow async invocation of functional constructors", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "ed36884f29ba659f73b9d58dbe79a5a80c7b78d8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed36884f29ba659f73b9d58dbe79a5a80c7b78d8", "message": "Remove isActionInvocation() method", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "c6df36e3312306058aedd0664bb18f7b9dff07d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6df36e3312306058aedd0664bb18f7b9dff07d5", "message": "Restrict ability to nest actions to align with the spec", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "08a30223eec76825dbaa04053a87cd709b67afdd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/08a30223eec76825dbaa04053a87cd709b67afdd", "message": "Add test cases for type cast action", "committedDate": "2020-04-27T15:56:37Z", "type": "commit"}, {"oid": "838295e6760913608725f9c42b889690e83bc44e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/838295e6760913608725f9c42b889690e83bc44e", "message": "Fix checkstyle issues", "committedDate": "2020-04-27T15:56:38Z", "type": "commit"}, {"oid": "2db27ffd0d349f3ef6de6dd5fa4c79555dfffdbd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2db27ffd0d349f3ef6de6dd5fa4c79555dfffdbd", "message": "fix definition test failures", "committedDate": "2020-04-27T15:56:38Z", "type": "commit"}, {"oid": "bea542efcbaf76d6de348617931d3c88ad8d1d9e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bea542efcbaf76d6de348617931d3c88ad8d1d9e", "message": "Fix failing tests (#20)", "committedDate": "2020-04-27T15:56:38Z", "type": "commit"}, {"oid": "5a5025d97c12c3baef1431361f98138868561776", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a5025d97c12c3baef1431361f98138868561776", "message": "Allow async record field function pointer invocations", "committedDate": "2020-04-27T15:56:38Z", "type": "commit"}, {"oid": "ca3d9fced304b9e3e8e243b3674e1a44761dc186", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca3d9fced304b9e3e8e243b3674e1a44761dc186", "message": "Add test cases for start action", "committedDate": "2020-04-27T15:56:38Z", "type": "commit"}, {"oid": "305359bafd7d27ce38b0389e68f5aa9e03d46fc3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/305359bafd7d27ce38b0389e68f5aa9e03d46fc3", "message": "Move common code to a method for function and action invocations", "committedDate": "2020-04-27T15:56:39Z", "type": "commit"}, {"oid": "667f71a867ef8935572617dca2536786c5a185e1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/667f71a867ef8935572617dca2536786c5a185e1", "message": "Improve type checking logic and error messages related to actions", "committedDate": "2020-04-27T15:56:39Z", "type": "commit"}, {"oid": "3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "message": "Fix checkstyle issues", "committedDate": "2020-04-27T15:56:39Z", "type": "commit"}, {"oid": "3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "message": "Fix checkstyle issues", "committedDate": "2020-04-27T15:56:39Z", "type": "forcePushed"}, {"oid": "ce084e7bd0167cb07a968d90f80959b908bd8809", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce084e7bd0167cb07a968d90f80959b908bd8809", "message": "Fix test failures in bstring suite", "committedDate": "2020-04-28T07:03:39Z", "type": "commit"}]}