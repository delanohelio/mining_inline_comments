{"pr_number": 27265, "pr_title": "Restructure debugger test utils", "pr_createdAt": "2020-12-01T06:06:13Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265", "timeline": [{"oid": "e397208e2d77e6a02a4e94f344feef2858809baa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e397208e2d77e6a02a4e94f344feef2858809baa", "message": "Move utils from test to main", "committedDate": "2020-11-28T02:05:50Z", "type": "commit"}, {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b62d96add7a5985bb9f5a30b161926867e897a04", "message": "Move DebugAdapterBaseTestCase utils to TestUtils\n\nMove resumeProgram() and waitForDebugHit() to TestUtils\n\nMove remaining utils\n\nMove BaseTestCase utils to DebugAdapterBaseTestCase\n\nMove all utils completely from test to main\n\nFix code warning issues\n\nFix initial SpotBugs issues\n\nAdd spotbugs-exclude.xml\n\nFix spotbug issue\n\nRename util package\n\nFix minor issues", "committedDate": "2020-12-02T03:46:37Z", "type": "commit"}, {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b62d96add7a5985bb9f5a30b161926867e897a04", "message": "Move DebugAdapterBaseTestCase utils to TestUtils\n\nMove resumeProgram() and waitForDebugHit() to TestUtils\n\nMove remaining utils\n\nMove BaseTestCase utils to DebugAdapterBaseTestCase\n\nMove all utils completely from test to main\n\nFix code warning issues\n\nFix initial SpotBugs issues\n\nAdd spotbugs-exclude.xml\n\nFix spotbug issue\n\nRename util package\n\nFix minor issues", "committedDate": "2020-12-02T03:46:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc0NTQ2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534745463", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DebugHitListener.connector = connector;\n          \n          \n            \n                    this.connector = connector;", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T06:45:49Z", "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/DebugHitListener.java", "diffHunk": "@@ -45,7 +45,7 @@\n     private boolean debugHitFound;\n \n     public DebugHitListener(TestDAPClientConnector connector) {\n-        this.connector = connector;\n+        DebugHitListener.connector = connector;", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NDEzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535844132", "bodyText": "connector is a static variable. Therefore I'm accessing here with static DebugHitListener.connector via class DebugHitListener reference instead of accessing via instance reference. Even the IntelliJ IDEA suggests the same.", "author": "praveennadarajah", "createdAt": "2020-12-04T05:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc0NTQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAyODg3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537028871", "bodyText": "Changed to this.connector = connector; after restructuring the test utils.", "author": "praveennadarajah", "createdAt": "2020-12-06T12:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc0NTQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1NTEzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534755134", "bodyText": "With this implementation using static variables, the framework will not support parallel test execution. Better if we can refactor to have instance variables instead.", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T06:53:58Z", "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/TestUtils.java", "diffHunk": "@@ -0,0 +1,563 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.utils;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.utils.client.TestDAPClientConnector;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BalServer;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.eclipse.lsp4j.debug.ConfigurationDoneArguments;\n+import org.eclipse.lsp4j.debug.ContinueArguments;\n+import org.eclipse.lsp4j.debug.EvaluateArguments;\n+import org.eclipse.lsp4j.debug.EvaluateResponse;\n+import org.eclipse.lsp4j.debug.NextArguments;\n+import org.eclipse.lsp4j.debug.ScopesArguments;\n+import org.eclipse.lsp4j.debug.ScopesResponse;\n+import org.eclipse.lsp4j.debug.SetBreakpointsArguments;\n+import org.eclipse.lsp4j.debug.Source;\n+import org.eclipse.lsp4j.debug.SourceBreakpoint;\n+import org.eclipse.lsp4j.debug.StackFrame;\n+import org.eclipse.lsp4j.debug.StackTraceArguments;\n+import org.eclipse.lsp4j.debug.StackTraceResponse;\n+import org.eclipse.lsp4j.debug.StepInArguments;\n+import org.eclipse.lsp4j.debug.StepOutArguments;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.eclipse.lsp4j.debug.Variable;\n+import org.eclipse.lsp4j.debug.VariablesArguments;\n+import org.eclipse.lsp4j.debug.VariablesResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Timer;\n+import java.util.stream.Collectors;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test util class for all debugger integration test cases.\n+ */\n+public class TestUtils {\n+\n+    public static BalServer balServer;\n+    public static TestDAPClientConnector debugClientConnector;\n+    public static List<BallerinaTestDebugPoint> testBreakpoints = new ArrayList<>();\n+    public static boolean isConnected = false;\n+    public static int port;\n+    private static final Logger LOGGER = LoggerFactory.getLogger(TestUtils.class);\n+    protected static final int MAX_RETRY_COUNT = 3;\n+    private static BMainInstance balClient = null;\n+    private static Process debuggeeProcess;\n+\n+    public static Path testProjectBaseDir;\n+    public static Path testSingleFileBaseDir;\n+    public static String testProjectPath;\n+    public static String testEntryFilePath;", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MjY2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535842662", "bodyText": "These variables are used in static methods. Therefore cannot used as instance variables. Also all the debug tests are run in sequential, not in parallel.\nPlease refer test.xml", "author": "praveennadarajah", "createdAt": "2020-12-04T05:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1NTEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAyOTI5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537029290", "bodyText": "Changed most of the static variables to non-static variables after restructuring the test utils.", "author": "praveennadarajah", "createdAt": "2020-12-06T12:32:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1NTEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1ODU1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534758555", "bodyText": "Shall we consider renaming this class as DebugTestRunner or DebugTestFramework? WDYT?", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T06:56:18Z", "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/TestUtils.java", "diffHunk": "@@ -0,0 +1,563 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.utils;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.utils.client.TestDAPClientConnector;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BalServer;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.eclipse.lsp4j.debug.ConfigurationDoneArguments;\n+import org.eclipse.lsp4j.debug.ContinueArguments;\n+import org.eclipse.lsp4j.debug.EvaluateArguments;\n+import org.eclipse.lsp4j.debug.EvaluateResponse;\n+import org.eclipse.lsp4j.debug.NextArguments;\n+import org.eclipse.lsp4j.debug.ScopesArguments;\n+import org.eclipse.lsp4j.debug.ScopesResponse;\n+import org.eclipse.lsp4j.debug.SetBreakpointsArguments;\n+import org.eclipse.lsp4j.debug.Source;\n+import org.eclipse.lsp4j.debug.SourceBreakpoint;\n+import org.eclipse.lsp4j.debug.StackFrame;\n+import org.eclipse.lsp4j.debug.StackTraceArguments;\n+import org.eclipse.lsp4j.debug.StackTraceResponse;\n+import org.eclipse.lsp4j.debug.StepInArguments;\n+import org.eclipse.lsp4j.debug.StepOutArguments;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.eclipse.lsp4j.debug.Variable;\n+import org.eclipse.lsp4j.debug.VariablesArguments;\n+import org.eclipse.lsp4j.debug.VariablesResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Timer;\n+import java.util.stream.Collectors;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test util class for all debugger integration test cases.\n+ */\n+public class TestUtils {", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MTIxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535841217", "bodyText": "+1 for DebugTestRunner", "author": "praveennadarajah", "createdAt": "2020-12-04T05:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1ODU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2NDY4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534764688", "bodyText": "Shall we check equality of address and port as well?", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T07:00:13Z", "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/client/connection/TestSocketStreamConnectionProvider.java", "diffHunk": "@@ -128,6 +128,11 @@ public void stop() {\n         }\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        return super.equals(obj);\n+    }\n+", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAyOTM1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537029356", "bodyText": "This is done.", "author": "praveennadarajah", "createdAt": "2020-12-06T12:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2NDY4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2Njk4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534766980", "bodyText": "Shall we import the static method instead of using qualified method calls everywhere? Check other places as well", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T07:01:42Z", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/CallStackDebugTest.java", "diffHunk": "@@ -32,59 +33,63 @@\n import java.io.File;\n import java.nio.file.Paths;\n \n+import static org.ballerinalang.debugger.test.utils.TestUtils.DebugResumeKind;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testEntryFilePath;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectBaseDir;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectPath;\n+\n /**\n  * Test class for debug hit call stack representation.\n  */\n public class CallStackDebugTest extends DebugAdapterBaseTestCase {\n \n     @BeforeClass\n     public void setup() throws BallerinaTestException {\n-        testProjectName = \"callstack-tests\";\n-        testModuleFileName = \"main.bal\";\n+        String testProjectName = \"callstack-tests\";\n+        String testModuleFileName = \"main.bal\";\n         testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n         testEntryFilePath = Paths.get(testProjectPath, testModuleFileName).toString();\n \n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 35));\n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 44));\n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 40));\n-        initDebugSession(DebugUtils.DebuggeeExecutionKind.RUN);\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 35));\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 44));\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 40));\n+        TestUtils.initDebugSession(DebugUtils.DebuggeeExecutionKind.RUN);", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MTA4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535841081", "bodyText": "+1 for importing as static methods.", "author": "praveennadarajah", "createdAt": "2020-12-04T05:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2Njk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAzMDA1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537030050", "bodyText": "I'm referring debug test utilities(DebugTestRunner) with reference variable. Therefore using debugTestRunner variable now to call the debug test utility methods.", "author": "praveennadarajah", "createdAt": "2020-12-06T12:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2Njk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxNjA0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537316048", "bodyText": "+1", "author": "NipunaRanasinghe", "createdAt": "2020-12-07T08:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2Njk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc4NjExMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534786110", "bodyText": "Why have we extended remote debugging tests from DebuggerAdapterBaseTestCase? remote debugging tests are not using the debug adapter.", "author": "NipunaRanasinghe", "createdAt": "2020-12-03T07:15:49Z", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/remote/BallerinaTestRemoteDebugTest.java", "diffHunk": "@@ -27,19 +27,21 @@\n import java.io.File;\n \n import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.balServer;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectBaseDir;\n \n /**\n  * Test class to test positive scenarios of remote debugging ballerina test command.\n  */\n-public class BallerinaTestRemoteDebugTest extends BaseTestCase {\n+public class BallerinaTestRemoteDebugTest extends DebugAdapterBaseTestCase {", "originalCommit": "b62d96add7a5985bb9f5a30b161926867e897a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MDkxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535840916", "bodyText": "We have moved all the BaseTestCase methods to DebugAdapterBaseTestCase and completely removed BaseTestCase class. Therefore earlier whatever classes extended with BaseTestCase are now extended with DebugAdapterBaseTestCase", "author": "praveennadarajah", "createdAt": "2020-12-04T05:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc4NjExMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NTAyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r535845022", "bodyText": "Then we need to rename the base class name, as like I mentioned, remote debugging tests are NOT based on debugger adapter", "author": "NipunaRanasinghe", "createdAt": "2020-12-04T05:25:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc4NjExMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAzMDE3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r537030173", "bodyText": "Changed the name back to BaseTestCase", "author": "praveennadarajah", "createdAt": "2020-12-06T12:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc4NjExMA=="}], "type": "inlineReview"}, {"oid": "9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "message": "Rename TestUtils to DebugTestRunner\n\nFix spotbug issues\n\nRestructure debug test with instance variable\n\nFix all spotbug issues\n\nRename DebugAdapterBaseTestCase to BaseTestCase\n\nFix build failure issue", "committedDate": "2020-12-06T12:51:12Z", "type": "commit"}, {"oid": "9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "message": "Rename TestUtils to DebugTestRunner\n\nFix spotbug issues\n\nRestructure debug test with instance variable\n\nFix all spotbug issues\n\nRename DebugAdapterBaseTestCase to BaseTestCase\n\nFix build failure issue", "committedDate": "2020-12-06T12:51:12Z", "type": "forcePushed"}]}