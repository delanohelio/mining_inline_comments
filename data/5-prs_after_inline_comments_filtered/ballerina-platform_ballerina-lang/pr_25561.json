{"pr_number": 25561, "pr_title": "Update BIR spec with types related information and tests", "pr_createdAt": "2020-09-02T09:17:25Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25561", "timeline": [{"oid": "c2e2fa4244312d119fb0681adce080483fef7339", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c2e2fa4244312d119fb0681adce080483fef7339", "message": "Update BIR spec with types related infomation", "committedDate": "2020-09-02T09:07:36Z", "type": "commit"}, {"oid": "e72188900e285750d12eb0cdafb727a5fbebcceb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e72188900e285750d12eb0cdafb727a5fbebcceb", "message": "Fix a bug with null type tag value", "committedDate": "2020-09-02T09:08:19Z", "type": "commit"}, {"oid": "73a554249b2969f91e64729d9a87e75325f7fbc6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/73a554249b2969f91e64729d9a87e75325f7fbc6", "message": "Fix compilation issues in typed-binding-pattern test file", "committedDate": "2020-09-02T09:09:39Z", "type": "commit"}, {"oid": "f02bc50d1f3a542f7aa57f61e09c363c2233fa0e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f02bc50d1f3a542f7aa57f61e09c363c2233fa0e", "message": "Add chunk length for type values to skip reading", "committedDate": "2020-09-02T09:11:21Z", "type": "commit"}, {"oid": "f6a78371e4d7d6f42cbcb5771c8356241580be85", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f6a78371e4d7d6f42cbcb5771c8356241580be85", "message": "Read and skip bytes that are now being written", "committedDate": "2020-09-02T09:11:51Z", "type": "commit"}, {"oid": "4eb1715466695eeef1b5bd2592fd98cd5fe0d276", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4eb1715466695eeef1b5bd2592fd98cd5fe0d276", "message": "Add validation test using lang-lib test sources", "committedDate": "2020-09-02T09:13:06Z", "type": "commit"}, {"oid": "f2bb420a8fc83ba6bdcf66667dc89930712a1ee2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2bb420a8fc83ba6bdcf66667dc89930712a1ee2", "message": "Improve test coverage with basic-blocks and instructions", "committedDate": "2020-09-02T09:13:44Z", "type": "commit"}, {"oid": "1032ece5b318a07bc0b41c0a63e01a5860479631", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1032ece5b318a07bc0b41c0a63e01a5860479631", "message": "Add values test source", "committedDate": "2020-09-02T09:14:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzNDQyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25561#discussion_r481934424", "bodyText": "Better to break this into two methods and use  @DataProvider to link them. that way you can run one file by file if there is a failed one.", "author": "manuranga", "createdAt": "2020-09-02T09:31:37Z", "path": "docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java", "diffHunk": "@@ -42,9 +53,44 @@\n \n     private static final String TEST_RESOURCE_ROOT = \"test-src/\";\n \n+    private static final String LANG_LIB_TEST_SRC_ROOT = \"../../langlib/langlib-test/src/test/resources/test-src\";\n+\n+    private static final Path TEST_ROOT_PATH = Paths.get(LANG_LIB_TEST_SRC_ROOT);\n+\n+    static void validateBIRSpec() throws IOException {\n+\n+        assert TEST_ROOT_PATH.toFile().exists();\n+        List<String> testSources = Files.walk(TEST_ROOT_PATH)\n+                .filter(file -> Files.isRegularFile(file))\n+                .map(file -> file.toAbsolutePath().normalize().toString())\n+                .filter(file -> file.endsWith(\".bal\") && !file.contains(\"negative\") && !file.contains(\"subtype\"))\n+                .collect(Collectors.toList());", "originalCommit": "1032ece5b318a07bc0b41c0a63e01a5860479631", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzNzQwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25561#discussion_r481937405", "bodyText": "ack, will check on it.", "author": "Kishanthan", "createdAt": "2020-09-02T09:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzNDQyNA=="}], "type": "inlineReview"}, {"oid": "d860a805dc7535fb2d46ffdbf26f261961251e44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d860a805dc7535fb2d46ffdbf26f261961251e44", "message": "Use dataprovider approch to run all the tests", "committedDate": "2020-09-03T03:34:32Z", "type": "commit"}, {"oid": "d860a805dc7535fb2d46ffdbf26f261961251e44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d860a805dc7535fb2d46ffdbf26f261961251e44", "message": "Use dataprovider approch to run all the tests", "committedDate": "2020-09-03T03:34:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTkxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25561#discussion_r482715912", "bodyText": "@Kishanthan I checked the code space and I think only you have used a blank line at the beginning of methods. I think it would be nice to follow the same practice everywhere and have no blank lines at the beginning of methods. WDYT?\nhttps://www.oracle.com/java/technologies/javase/codeconventions-whitespace.html", "author": "riyafa", "createdAt": "2020-09-03T05:40:06Z", "path": "docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java", "diffHunk": "@@ -21,30 +21,93 @@\n import io.kaitai.struct.KaitaiStruct;\n import org.ballerinalang.build.kaitai.Bir;\n import org.ballerinalang.model.elements.AttachPoint;\n+import org.ballerinalang.model.elements.PackageID;\n import org.ballerinalang.test.util.BCompileUtil;\n import org.ballerinalang.test.util.CompileResult;\n import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRInstruction;\n import org.wso2.ballerinalang.compiler.bir.model.BIRNode;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRNonTerminator;\n+import org.wso2.ballerinalang.compiler.bir.model.BIROperand;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRTerminator;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n import org.wso2.ballerinalang.compiler.util.diagnotic.DiagnosticPos;\n import org.wso2.ballerinalang.programfile.CompiledBinaryFile.BIRPackageFile;\n \n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n+import java.util.stream.Collectors;\n \n /**\n  * Utility methods to help with testing BIR model.\n  */\n class BIRTestUtils {\n \n-    private static final String TEST_RESOURCE_ROOT = \"test-src/\";\n+    private static final String TEST_RESOURCES_ROOT = \"src/test/resources/test-src\";\n+    private static final Path TEST_RESOURCES_ROOT_PATH = Paths.get(TEST_RESOURCES_ROOT);\n+\n+    private static final String LANG_LIB_TEST_SRC_ROOT = \"../../langlib/langlib-test/src/test/resources/test-src\";\n+    private static final Path LANG_LIB_TEST_ROOT_PATH = Paths.get(LANG_LIB_TEST_SRC_ROOT);\n+\n+    @DataProvider(name = \"createTestSources\")\n+    public static Object[][] createTestDataProvider() throws IOException {\n+", "originalCommit": "d860a805dc7535fb2d46ffdbf26f261961251e44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwODc0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25561#discussion_r482908745", "bodyText": "ack, removed.", "author": "Kishanthan", "createdAt": "2020-09-03T11:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTkxMg=="}], "type": "inlineReview"}, {"oid": "be68e87da0b07dc01ae7927933fa69a3d026fa4d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be68e87da0b07dc01ae7927933fa69a3d026fa4d", "message": "Reorder top level tag type enum", "committedDate": "2020-09-03T11:05:58Z", "type": "commit"}, {"oid": "0ca14b11a9b66faf23b8d7f11b3cf3baeffcd12c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ca14b11a9b66faf23b8d7f11b3cf3baeffcd12c", "message": "Update bir spec hbs with WIP text", "committedDate": "2020-09-03T11:06:33Z", "type": "commit"}, {"oid": "77fd22481de537979a347bd802a22ef6eed3ac56", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77fd22481de537979a347bd802a22ef6eed3ac56", "message": "Remove extra new lines before the method body", "committedDate": "2020-09-03T11:33:46Z", "type": "commit"}, {"oid": "77fd22481de537979a347bd802a22ef6eed3ac56", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77fd22481de537979a347bd802a22ef6eed3ac56", "message": "Remove extra new lines before the method body", "committedDate": "2020-09-03T11:33:46Z", "type": "forcePushed"}]}