{"pr_number": 26763, "pr_title": "Add configs for transaction log properties and allow disabling Atomikos transaction manager", "pr_createdAt": "2020-11-05T05:24:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763", "timeline": [{"oid": "c7e31b2348befab5f1eea4cf7c2b3aff29a277f6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7e31b2348befab5f1eea4cf7c2b3aff29a277f6", "message": "Add configs for log properties and allow disabling atomikos transaction manager", "committedDate": "2020-11-05T05:21:45Z", "type": "commit"}, {"oid": "f9e07910043b2d8b81078cb79773d468864d4e88", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9e07910043b2d8b81078cb79773d468864d4e88", "message": "Refactor code", "committedDate": "2020-11-05T13:34:38Z", "type": "commit"}, {"oid": "6dd20de041156ec4354ad41a47a4833c2cfbb43c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6dd20de041156ec4354ad41a47a4833c2cfbb43c", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos\n\n\u0001 Conflicts:\n\u0001\tbvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "committedDate": "2020-11-27T04:33:52Z", "type": "commit"}, {"oid": "55e08c86478085321517cad140fc930236005f9a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/55e08c86478085321517cad140fc930236005f9a", "message": "Resolve conflicts", "committedDate": "2020-11-27T05:01:05Z", "type": "commit"}, {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/296fca3d565b28a6ee89ad8a88d157d833e3124e", "message": "Fix checkstyle issues", "committedDate": "2020-11-27T05:05:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDg0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534920847", "bodyText": "Can't we move this line out of for loop?", "author": "mohanvive", "createdAt": "2020-12-03T08:34:28Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);", "originalCommit": "296fca3d565b28a6ee89ad8a88d157d833e3124e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534924197", "bodyText": "Why don't we throw this exception? Any reason to handle it and return falase?", "author": "mohanvive", "createdAt": "2020-12-03T08:36:25Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);\n+                        xaResource.prepare(xid);\n+                    }\n+                } catch (Throwable e) {\n+                    log.error(\"error in prepare the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n+                    return false;", "originalCommit": "296fca3d565b28a6ee89ad8a88d157d833e3124e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNjcxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534926716", "bodyText": "Again, error message does not looks good. Shall we change it as \"Error at transaction prepare phase\" ?", "author": "mohanvive", "createdAt": "2020-12-03T08:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyOTkxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534929919", "bodyText": "Also, whether printing combinedid makes sense? Don't we need to print transaction id and transaction block id separately?", "author": "mohanvive", "createdAt": "2020-12-03T08:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzMjQ1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r537232451", "bodyText": "@lasinicl Need this change in other places as well.", "author": "mohanvive", "createdAt": "2020-12-07T05:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0NTQzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r537245438", "bodyText": "Fixed", "author": "lasinicl", "createdAt": "2020-12-07T05:44:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4ODU3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538088575", "bodyText": "TransactionBlockId is something internal right? it is ok to print it in error log? May be ok as a debug log.", "author": "gimantha", "createdAt": "2020-12-08T07:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1OTAyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r543159024", "bodyText": "Fixed", "author": "lasinicl", "createdAt": "2020-12-15T08:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}], "type": "inlineReview"}, {"oid": "267fe93485bd0524fc4eed85f196ba1d35b56db7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/267fe93485bd0524fc4eed85f196ba1d35b56db7", "message": "Fix handling the exception", "committedDate": "2020-12-04T11:34:24Z", "type": "commit"}, {"oid": "c5475e76be596f0b06e6aedac82b0b055f009705", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5475e76be596f0b06e6aedac82b0b055f009705", "message": "Log exceptions", "committedDate": "2020-12-07T05:17:42Z", "type": "commit"}, {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/83d2d6f17e6b4c25cdb0626be931af7c753c0008", "message": "Improve error log", "committedDate": "2020-12-07T05:32:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MDIyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538090220", "bodyText": "shall we add a test case for this in transaction repo as a unit test?", "author": "gimantha", "createdAt": "2020-12-08T07:16:14Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {", "originalCommit": "83d2d6f17e6b4c25cdb0626be931af7c753c0008", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MDY3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538090670", "bodyText": "merge the ifs", "author": "pcnfernando", "createdAt": "2020-12-08T07:17:03Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {\n+        // Path to log directory given for atomikos log path property should exist.\n+        // Therefore create a transaction_log_dir in root directory if not exists.\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/transaction_log_dir\";\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            CONFIG_REGISTRY.addConfiguration(\"b7a.transaction.log.base\", logPath);\n+            CONFIG_REGISTRY.addConfiguration(\"b7a.transaction.log.name\", \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        String logDirPath = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.base\");\n+        String logFileName = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.name\");\n+        if (logDirPath != null && logFileName != null) {\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logDirPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, logFileName);\n+        }\n+    }\n+\n+    /**\n+     * This method check whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        String transactionManagerEnabled = CONFIG_REGISTRY.getAsString(\"b7a.transaction.manager.enabled\");\n+        if (transactionManagerEnabled != null) {", "originalCommit": "83d2d6f17e6b4c25cdb0626be931af7c753c0008", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1OTEyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r543159128", "bodyText": "fixed", "author": "lasinicl", "createdAt": "2020-12-15T08:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MDY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MTU3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538091572", "bodyText": "Is it possible for user to define the log directory as well? if he as not set it, we will use this name as the default one. may be we will have to give another property to set the directory as well", "author": "gimantha", "createdAt": "2020-12-08T07:19:05Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {\n+        // Path to log directory given for atomikos log path property should exist.\n+        // Therefore create a transaction_log_dir in root directory if not exists.\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/transaction_log_dir\";", "originalCommit": "83d2d6f17e6b4c25cdb0626be931af7c753c0008", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1OTI0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r543159242", "bodyText": "fixed", "author": "lasinicl", "createdAt": "2020-12-15T08:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MTU3Mg=="}], "type": "inlineReview"}, {"oid": "b29edd52b3d02e2869a06955cfa57594c48f4477", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b29edd52b3d02e2869a06955cfa57594c48f4477", "message": "Add suggested changes", "committedDate": "2020-12-09T14:07:36Z", "type": "commit"}, {"oid": "36609cb4237ffedcc908a7822823ea0f36176b27", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36609cb4237ffedcc908a7822823ea0f36176b27", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos", "committedDate": "2020-12-10T14:55:56Z", "type": "commit"}, {"oid": "8bf94f5c6d4c78c8480fe5a73570467e57a5b273", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8bf94f5c6d4c78c8480fe5a73570467e57a5b273", "message": "Refactor code", "committedDate": "2020-12-11T05:16:13Z", "type": "commit"}, {"oid": "0cd1a64b17b84d80191dedff46546309c91af0e8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0cd1a64b17b84d80191dedff46546309c91af0e8", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos", "committedDate": "2020-12-15T07:14:36Z", "type": "commit"}, {"oid": "bf0f32799424d45bc88f66fba0ba6622c258a101", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bf0f32799424d45bc88f66fba0ba6622c258a101", "message": "Disable atomikos coordinator", "committedDate": "2020-12-15T07:44:27Z", "type": "commit"}, {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "message": "Disable atomikos coordinator", "committedDate": "2020-12-15T08:54:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI0OTQ5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544249494", "bodyText": "Use File.separatorChar for platform independent coding while joining paths", "author": "pcnfernando", "createdAt": "2020-12-16T12:12:43Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODA2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908066", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI0OTQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MDkxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544250914", "bodyText": "Improve the error to include the directory and the message", "author": "pcnfernando", "createdAt": "2020-12-16T12:15:07Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODE4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908184", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MDkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjIyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544252220", "bodyText": "Let's move b7a.transaction.manager.enabled to a constant", "author": "pcnfernando", "createdAt": "2020-12-16T12:17:16Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method checks whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        boolean transactionManagerEnabled = CONFIG_REGISTRY.getAsBoolean(\"b7a.transaction.manager.enabled\");", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODI2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908263", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjUyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544252524", "bodyText": "Here as well", "author": "pcnfernando", "createdAt": "2020-12-16T12:17:40Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method checks whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        boolean transactionManagerEnabled = CONFIG_REGISTRY.getAsBoolean(\"b7a.transaction.manager.enabled\");\n+        return transactionManagerEnabled;\n+    }\n+\n+    /**\n+     * This method gets the user specified config for log directory name.\n+     *\n+     * @return string log directory name\n+     */\n+    private String getTransactionLogDirectory() {\n+        String transactionLogDirectory = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.base\");", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODM1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908352", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjA0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544256040", "bodyText": "merge the two if stmnts", "author": "pcnfernando", "createdAt": "2020-12-16T12:23:09Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -171,25 +265,36 @@ public boolean notifyCommit(String transactionId, String transactionBlockId) {\n         boolean commitSuccess = true;\n         List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n         if (txContextList != null) {\n-            Transaction trx = trxRegistry.get(combinedId);\n-            try {\n-                if (trx != null) {\n-                    trx.commit();\n+            if (transactionManagerEnabled) {\n+                Transaction trx = trxRegistry.get(combinedId);\n+                try {\n+                    if (trx != null) {\n+                        trx.commit();\n+                    }\n+                } catch (SystemException | HeuristicMixedException | HeuristicRollbackException\n+                        | RollbackException e) {\n+                    log.error(\"error when committing transaction \" + transactionId + \":\" + e.getMessage(), e);\n+                    commitSuccess = false;\n                 }\n-\n-            } catch (SystemException | HeuristicMixedException | HeuristicRollbackException | RollbackException e) {\n-                log.error(\"error when committing the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n-                commitSuccess = false;\n             }\n \n             for (BallerinaTransactionContext ctx : txContextList) {\n                 try {\n                     XAResource xaResource = ctx.getXAResource();\n-                    if (xaResource == null) {\n-                        ctx.commit();\n+                    if (transactionManagerEnabled) {", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODQ4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908480", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjA0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjU4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544256586", "bodyText": "merge these ifs as well", "author": "pcnfernando", "createdAt": "2020-12-16T12:24:09Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -219,25 +324,35 @@ public boolean notifyAbort(String transactionId, String transactionBlockId, Obje\n         List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n \n         if (txContextList != null) {\n-            Transaction trx = trxRegistry.get(combinedId);\n-            try {\n-                if (trx != null) {\n-                    trx.rollback();\n+            if (transactionManagerEnabled) {\n+                Transaction trx = trxRegistry.get(combinedId);\n+                try {\n+                    if (trx != null) {\n+                        trx.rollback();\n+                    }\n+                } catch (SystemException e) {\n+                    log.error(\"error when aborting transaction \" + transactionId + \":\" + e.getMessage(), e);\n+                    abortSuccess = false;\n                 }\n-\n-            } catch (SystemException e) {\n-                log.error(\"error when aborting the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n-                abortSuccess = false;\n             }\n \n             for (BallerinaTransactionContext ctx : txContextList) {\n                 try {\n                     XAResource xaResource = ctx.getXAResource();\n-                    if (xaResource == null) {\n-                        ctx.rollback();\n+                    if (transactionManagerEnabled) {", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODg0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908842", "bodyText": "Fixed in91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2MTE0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544261148", "bodyText": "merge xid and txContextList != null checks", "author": "pcnfernando", "createdAt": "2020-12-16T12:31:46Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -359,19 +486,38 @@ public TransactionLocalContext getCurrentTransactionContext() {\n      */\n     void endXATransaction(String transactionId, String transactionBlockId) {\n         String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n-        Transaction trx = trxRegistry.get(combinedId);\n-        if (trx != null) {\n-            List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n-            if (txContextList != null) {\n-                for (BallerinaTransactionContext ctx : txContextList) {\n-                    try {\n-                        XAResource xaResource = ctx.getXAResource();\n-                        if (xaResource != null) {\n-                            trx.delistResource(xaResource, TMSUCCESS);\n+        if (transactionManagerEnabled) {\n+            Transaction trx = trxRegistry.get(combinedId);\n+            if (trx != null) {\n+                List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+                if (txContextList != null) {\n+                    for (BallerinaTransactionContext ctx : txContextList) {\n+                        try {\n+                            XAResource xaResource = ctx.getXAResource();\n+                            if (xaResource != null) {\n+                                trx.delistResource(xaResource, TMSUCCESS);\n+                            }\n+                        } catch (IllegalStateException | SystemException e) {\n+                            log.error(\"error in ending the XA transaction \" + transactionId\n+                                    + \":\" + e.getMessage(), e);\n+                        }\n+                    }\n+                }\n+            }\n+        } else {\n+            Xid xid = xidRegistry.get(combinedId);\n+            if (xid != null) {", "originalCommit": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwODYxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544908615", "bodyText": "Fixed in 91ca624", "author": "lasinicl", "createdAt": "2020-12-17T08:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2MTE0OA=="}], "type": "inlineReview"}]}