{"pr_number": 21459, "pr_title": "Add removeIfHasKey", "pr_createdAt": "2020-03-04T04:56:10Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDQzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387464437", "bodyText": "Shall we add @since annotation for this?", "author": "anupama-pathirage", "createdAt": "2020-03-04T06:06:07Z", "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)", "originalCommit": "0b7aca57f46737731b1a532b175cf0022d7c3760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3MzM4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387473387", "bodyText": "Added.", "author": "KavinduZoysa", "createdAt": "2020-03-04T06:39:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDQzNw=="}], "type": "inlineReview"}, {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "message": "Add tests to langlib tests", "committedDate": "2020-03-04T06:37:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwOTkxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387509918", "bodyText": "Shall we move this to a constant?", "author": "pubudu91", "createdAt": "2020-03-04T08:24:28Z", "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)\n+ *\n+ * @since 1.2.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.map\", functionName = \"removeIfHasKey\",\n+        args = {@Argument(name = \"m\", type = TypeKind.MAP), @Argument(name = \"k\", type = TypeKind.STRING)},\n+        returnType = {@ReturnType(type = TypeKind.ANY)},\n+        isPublic = true\n+)\n+public class RemoveIfHasKey {\n+\n+    public static Object removeIfHasKey(Strand strand, MapValue<?, ?> m, String k) {\n+        String op = \"removeIfHasKey()\";", "originalCommit": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3MjMxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r388072316", "bodyText": "Added.", "author": "KavinduZoysa", "createdAt": "2020-03-05T04:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwOTkxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMDU2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387510560", "bodyText": "Need to verify whether this is consistent with how freeze panics are handled in other places. (i.e., the error message and its format)", "author": "pubudu91", "createdAt": "2020-03-04T08:25:52Z", "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)\n+ *\n+ * @since 1.2.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.map\", functionName = \"removeIfHasKey\",\n+        args = {@Argument(name = \"m\", type = TypeKind.MAP), @Argument(name = \"k\", type = TypeKind.STRING)},\n+        returnType = {@ReturnType(type = TypeKind.ANY)},\n+        isPublic = true\n+)\n+public class RemoveIfHasKey {\n+\n+    public static Object removeIfHasKey(Strand strand, MapValue<?, ?> m, String k) {\n+        String op = \"removeIfHasKey()\";\n+\n+        checkIsMapOnlyOperation(m.getType(), op);\n+        checkValidFieldForRecord(m, k, op);\n+        try {\n+            return m.remove(k);\n+        } catch (org.ballerinalang.jvm.util.exceptions.BLangFreezeException e) {\n+            throw BallerinaErrors.createError(e.getMessage(),\n+                    \"Failed to remove element from map: \" + e.getDetail());", "originalCommit": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3MjMyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r388072326", "bodyText": "Yes, this is consistent with other places where the freeze panics are handled.", "author": "KavinduZoysa", "createdAt": "2020-03-05T04:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMDU2MA=="}], "type": "inlineReview"}, {"oid": "04fec55142654310bb492463e38836d6e61ca3e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04fec55142654310bb492463e38836d6e61ca3e9", "message": "Add removeIfHasKey to map", "committedDate": "2020-03-05T05:28:59Z", "type": "commit"}, {"oid": "252c3bee4a939a7cc4f1ff29c11f153403a42d1b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/252c3bee4a939a7cc4f1ff29c11f153403a42d1b", "message": "fix failing language server completion tests", "committedDate": "2020-03-05T05:28:59Z", "type": "commit"}, {"oid": "fb38104f721152fe1e0e41c65d9018f439b792a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb38104f721152fe1e0e41c65d9018f439b792a1", "message": "Add support for record", "committedDate": "2020-03-05T05:28:59Z", "type": "commit"}, {"oid": "ee20a950d44acfc12ff41f7e0e0b0eed38780044", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee20a950d44acfc12ff41f7e0e0b0eed38780044", "message": "Add tests for records", "committedDate": "2020-03-05T05:28:59Z", "type": "commit"}, {"oid": "54c5692fdb6bf6524133277af4a8719f4849b68d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54c5692fdb6bf6524133277af4a8719f4849b68d", "message": "Add tests to langlib tests", "committedDate": "2020-03-05T05:28:59Z", "type": "commit"}, {"oid": "ba0698bc170af433b86279e2b832b9d00ea03b45", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba0698bc170af433b86279e2b832b9d00ea03b45", "message": "Add method to a constant", "committedDate": "2020-03-05T05:30:07Z", "type": "commit"}, {"oid": "ba0698bc170af433b86279e2b832b9d00ea03b45", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba0698bc170af433b86279e2b832b9d00ea03b45", "message": "Add method to a constant", "committedDate": "2020-03-05T05:30:07Z", "type": "forcePushed"}]}