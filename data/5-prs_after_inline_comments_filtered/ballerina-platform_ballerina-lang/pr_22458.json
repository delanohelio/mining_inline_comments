{"pr_number": 22458, "pr_title": "Add compound assignment statement support", "pr_createdAt": "2020-04-03T12:53:35Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458", "timeline": [{"oid": "84aedc1d91c70f0090f3cc42a93c2c740e87c15c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/84aedc1d91c70f0090f3cc42a93c2c740e87c15c", "message": "Add compoundAssignmentStatement", "committedDate": "2020-04-01T12:50:15Z", "type": "commit"}, {"oid": "5a89a927d50c2ecb583128d1eb0d779bf6a5dd19", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a89a927d50c2ecb583128d1eb0d779bf6a5dd19", "message": "Add public tree node for compoundAssignmentStatement", "committedDate": "2020-04-01T12:51:34Z", "type": "commit"}, {"oid": "a93fb6ec4121b5acec321024afafc35085f95faf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a93fb6ec4121b5acec321024afafc35085f95faf", "message": "Add new binary operator method", "committedDate": "2020-04-02T09:33:55Z", "type": "commit"}, {"oid": "b3e94fdd1fc6f9e201f5cce2286dd2a477fc9525", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3e94fdd1fc6f9e201f5cce2286dd2a477fc9525", "message": "Add recovery logic for compound assignment statement", "committedDate": "2020-04-02T12:21:44Z", "type": "commit"}, {"oid": "043481e77847feb75b7c7f667b01871e447332a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/043481e77847feb75b7c7f667b01871e447332a0", "message": "Fix checkstyle failures", "committedDate": "2020-04-02T12:24:56Z", "type": "commit"}, {"oid": "0c0b85b0643be3148a2ca2f00afad3525d06ce12", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c0b85b0643be3148a2ca2f00afad3525d06ce12", "message": "Fix binary operator checker", "committedDate": "2020-04-02T13:12:15Z", "type": "commit"}, {"oid": "2d52665be2ca83563469aae9364068fa486fd438", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d52665be2ca83563469aae9364068fa486fd438", "message": "Fix syntaxkind typo", "committedDate": "2020-04-03T09:06:34Z", "type": "commit"}, {"oid": "721b9be21e544e87e4fe707df604f824ad8a9a48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/721b9be21e544e87e4fe707df604f824ad8a9a48", "message": "declared compound-assignment-operator as non-terminal", "committedDate": "2020-04-03T10:12:25Z", "type": "commit"}, {"oid": "acf2319db85e113e571967b3de5b81c3675c7951", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acf2319db85e113e571967b3de5b81c3675c7951", "message": "Add compound assignment operator and statement", "committedDate": "2020-04-03T10:13:35Z", "type": "commit"}, {"oid": "dd0054de4d8f16427e6fe96cd87f836f9ac0d248", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dd0054de4d8f16427e6fe96cd87f836f9ac0d248", "message": "Fix comund assignment statement for all lvlexp", "committedDate": "2020-04-03T11:59:04Z", "type": "commit"}, {"oid": "66614daaeb838a58496f10b659e85328e7c29485", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/66614daaeb838a58496f10b659e85328e7c29485", "message": "Add compound assignment statement tests", "committedDate": "2020-04-03T12:09:30Z", "type": "commit"}, {"oid": "5984f4de24a7b4b63a709ab8b6a22b7445a709a6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5984f4de24a7b4b63a709ab8b6a22b7445a709a6", "message": "Fix merge conflicts", "committedDate": "2020-04-03T12:44:42Z", "type": "commit"}, {"oid": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dad18e8b0dc6dc730229729e40ca1e16e1989f58", "message": "Rebase code for new style", "committedDate": "2020-04-03T12:51:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5OTg0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r402999847", "bodyText": "Parameters can have only assignment-op", "author": "SupunS", "createdAt": "2020-04-03T13:20:48Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -1578,19 +1587,19 @@ private ParserRuleContext getNextRuleForVarName(int nextLookahead) {\n                 // Currently processing a required param, but now switch\n                 // to a defaultable param\n                 switchContext(ParserRuleContext.DEFAULTABLE_PARAM);\n-                return ParserRuleContext.ASSIGN_OP;\n+                return compoundOrNot(nextToken);\n             }\n         } else if (parentCtx == ParserRuleContext.DEFAULTABLE_PARAM) {\n             if (isEndOfParametersList(nextToken)) {\n                 return ParserRuleContext.CLOSE_PARENTHESIS;\n             } else {\n-                return ParserRuleContext.ASSIGN_OP;\n+                return compoundOrNot(nextToken);", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMTEyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403001127", "bodyText": "Once we fix the above comment, this method will be used at only one place.\nSo we can write this logic then and there", "author": "SupunS", "createdAt": "2020-04-03T13:22:55Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -1603,6 +1612,33 @@ private ParserRuleContext getNextRuleForVarName(int nextLookahead) {\n         }\n     }\n \n+    /**\n+     * Check whether the given token kind is a compound binary operator.\n+     * \n+     * @param kind STToken kind\n+     * @return <code>true</code> if the token kind refers to a binary operator. <code>false</code> otherwise\n+     */\n+    private boolean isCompoundBinaryOperator(SyntaxKind kind) {\n+        switch (kind) {\n+            case PLUS_TOKEN:\n+            case MINUS_TOKEN:\n+            case SLASH_TOKEN:\n+            case ASTERISK_TOKEN:\n+                return true;\n+            default:\n+                return false;\n+        }\n+    }\n+\n+    //return whether we choose a assignment op or a compund binary one\n+    private ParserRuleContext compoundOrNot(STToken token) {\n+        if (isCompoundBinaryOperator(token.kind)) {", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTQ3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403005472", "bodyText": "should be /**", "author": "SupunS", "createdAt": "2020-04-03T13:29:20Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3782,7 +3806,7 @@ private STNode parseStringLiteral() {\n         }\n     }\n \n-    /**\n+    /*", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNjg2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403006868", "bodyText": "unwanted comment?", "author": "SupunS", "createdAt": "2020-04-03T13:31:34Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -1160,6 +1163,8 @@ private ParserRuleContext getNextRule(ParserRuleContext currentCtx, int nextLook\n             case IMPORT_DECL:\n             case RETURN_STMT:\n             case COMPUTED_FIELD_NAME:\n+            case COMPOUND_ASSIGNMENT_STMT:\n+                // case EXPRESSION:", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwODM4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403008389", "bodyText": "Seems this is not used?", "author": "SupunS", "createdAt": "2020-04-03T13:34:00Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -164,6 +164,9 @@\n     private static final ParserRuleContext[] SPECIFIC_FIELD_RHS =\n             { ParserRuleContext.COLON, ParserRuleContext.COMMA, ParserRuleContext.CLOSE_PARENTHESIS };\n \n+    private static final ParserRuleContext[] COMPOUND_ASSIGNMENT_STATEMENT =", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDMxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403010314", "bodyText": "Do we need this node? Can the two fields private Token binaryOperator and private Token equalsToken  be embedded to the CompoundAssignmentStatement node itself?", "author": "SupunS", "createdAt": "2020-04-03T13:37:08Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/CompoundAssignmentOperator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+public class CompoundAssignmentOperator extends Statement {", "originalCommit": "dad18e8b0dc6dc730229729e40ca1e16e1989f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2NjU3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403866572", "bodyText": "I put it as a node, since in the grammar it is specified separately", "author": "m36dot", "createdAt": "2020-04-06T06:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3MTk5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403871997", "bodyText": "yea, but we can merge the two right, since CompoundAssignmentOperator is not re-used?", "author": "SupunS", "createdAt": "2020-04-06T07:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4NDUzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22458#discussion_r403884530", "bodyText": "alright, I ll merge the two :)", "author": "m36dot", "createdAt": "2020-04-06T07:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDMxNA=="}], "type": "inlineReview"}, {"oid": "5cb8b047d1fbe90b07e0838db12d1b209542958e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5cb8b047d1fbe90b07e0838db12d1b209542958e", "message": "reformatted code", "committedDate": "2020-04-06T06:58:16Z", "type": "commit"}, {"oid": "a822b8c43e5c68f4526bee517d7ca0c4a772cd6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a822b8c43e5c68f4526bee517d7ca0c4a772cd6e", "message": "fix merge conflicts", "committedDate": "2020-04-06T07:27:25Z", "type": "commit"}, {"oid": "8748ef8663b54f8cf3461b02e80c2197e24133a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8748ef8663b54f8cf3461b02e80c2197e24133a0", "message": "Merge compoundAssignmentOperator into compoundAssignmentStatement", "committedDate": "2020-04-06T08:04:36Z", "type": "commit"}, {"oid": "dbb5c3dddf08d7563d860708c0e23599010ac3ff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbb5c3dddf08d7563d860708c0e23599010ac3ff", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser", "committedDate": "2020-04-08T06:18:27Z", "type": "commit"}]}