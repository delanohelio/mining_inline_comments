{"pr_number": 26003, "pr_title": "Capture dependencies of global variables", "pr_createdAt": "2020-09-22T07:08:03Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003", "timeline": [{"oid": "2130cbe5996dbc26c25dcf352fc36ea6cd73a609", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2130cbe5996dbc26c25dcf352fc36ea6cd73a609", "message": "Capture dependencies of global variables", "committedDate": "2020-09-22T06:58:47Z", "type": "commit"}, {"oid": "07650f3b5904e3460cd4800b2df0eea7590ce339", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07650f3b5904e3460cd4800b2df0eea7590ce339", "message": "Improve tests", "committedDate": "2020-09-23T05:55:30Z", "type": "commit"}, {"oid": "07650f3b5904e3460cd4800b2df0eea7590ce339", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07650f3b5904e3460cd4800b2df0eea7590ce339", "message": "Improve tests", "committedDate": "2020-09-23T05:55:30Z", "type": "forcePushed"}, {"oid": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "message": "Refactor", "committedDate": "2020-10-06T06:22:19Z", "type": "commit"}, {"oid": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "message": "Refactor", "committedDate": "2020-10-06T06:22:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1NzU0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003#discussion_r500757546", "bodyText": "Can ignore the return values, right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(parallelCompileResult, \"testLocksWhenGlobalVariablesReferToSameValue\");\n          \n          \n            \n                    BRunUtil.invoke(parallelCompileResult, \"testLocksWhenGlobalVariablesReferToSameValue\");", "author": "MaryamZi", "createdAt": "2020-10-07T06:06:05Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/lock/LocksInMainTest.java", "diffHunk": "@@ -279,8 +279,23 @@ public void testParallelRunWithRecursiveInvocationDependencies() {\n     @Test(description = \"Test for parallel run when invocations are imported and contains global var dependencies\")\n     public void testParallelRunWithImportInvocationDependencies() {\n         CompileResult importInvocationDependencies = BCompileUtil.compile(\"test-src/lock/locks-in-imports-test\",\n-                \"mod1\", true);\n+                                                                          \"mod1\", true);\n \n         BRunUtil.invoke(importInvocationDependencies, \"testLockWIthInvokableChainsAccessingGlobal\");\n     }\n+\n+    @Test(description = \"Test for locks on global references\")\n+    public void testLocksWhenGlobalVariablesReferToSameValue() {\n+        BValue[] returns = BRunUtil.invoke(parallelCompileResult, \"testLocksWhenGlobalVariablesReferToSameValue\");", "originalCommit": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1Nzg4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003#discussion_r500757886", "bodyText": "What about calling this\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public boolean addAllLockVariable(Set<BVarSymbol> variables) {\n          \n          \n            \n                    public boolean addLockVariables(Set<BVarSymbol> variables) {", "author": "MaryamZi", "createdAt": "2020-10-07T06:07:07Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangLock.java", "diffHunk": "@@ -108,6 +108,10 @@ public String toString() {\n         public boolean addLockVariable(BVarSymbol variable) {\n             return lockVariables.add(variable);\n         }\n+\n+        public boolean addAllLockVariable(Set<BVarSymbol> variables) {", "originalCommit": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2Njk0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003#discussion_r500766947", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Hold global variable dependencies identified from DataflowAnalyzer\n          \n          \n            \n                // Hold global variable dependencies identified in DataflowAnalyzer.", "author": "MaryamZi", "createdAt": "2020-10-07T06:31:21Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangPackage.java", "diffHunk": "@@ -72,6 +74,9 @@\n     public Queue<BLangLambdaFunction> lambdaFunctions = new ArrayDeque<>();\n     public List<BLangClassDefinition> classDefinitions;\n \n+    // Hold global variable dependencies identified from DataflowAnalyzer", "originalCommit": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNTMwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003#discussion_r500835301", "bodyText": "Can we access this via env.enclPkg when visiting BLangSimpleVarRef instead?", "author": "MaryamZi", "createdAt": "2020-10-07T08:35:59Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -393,6 +396,7 @@ public BLangPackage perform(BLangPackage pkgNode) {\n         // Initialize the annotation map\n         annotationDesugar.initializeAnnotationMap(pkgNode);\n         SymbolEnv env = this.symTable.pkgEnvMap.get(pkgNode.symbol);\n+        this.globalVariablesDependsOn = pkgNode.globalVariableDependsOn;", "originalCommit": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MDE1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26003#discussion_r500950154", "bodyText": "Can't we just call this globalVariableDependencies?", "author": "MaryamZi", "createdAt": "2020-10-07T11:53:14Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangPackage.java", "diffHunk": "@@ -72,6 +74,9 @@\n     public Queue<BLangLambdaFunction> lambdaFunctions = new ArrayDeque<>();\n     public List<BLangClassDefinition> classDefinitions;\n \n+    // Hold global variable dependencies identified from DataflowAnalyzer\n+    public Map<BSymbol, Set<BVarSymbol>> globalVariableDependsOn;", "originalCommit": "b78ea697fa4d880f3fbfb63c5e92b3f43e2bdeaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c89cfe3ce527ce25d7b082eb30ff9895d82773cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c89cfe3ce527ce25d7b082eb30ff9895d82773cd", "message": "Add review suggestions\n\nNo functional changes. Improved code formatting along with review suggestions.", "committedDate": "2020-10-20T04:53:33Z", "type": "commit"}]}