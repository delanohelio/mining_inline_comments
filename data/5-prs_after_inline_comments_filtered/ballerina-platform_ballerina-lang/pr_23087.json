{"pr_number": 23087, "pr_title": "Instantiate record values using closures values captured is typedesc", "pr_createdAt": "2020-05-04T16:19:04Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23087", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNzc1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23087#discussion_r420607759", "bodyText": "remove this new line", "author": "Kishanthan", "createdAt": "2020-05-06T07:56:32Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmValueGen.java", "diffHunk": "@@ -568,17 +573,80 @@ private void createInstantiateMethod(ClassWriter cw, BRecordType recordType) {\n         loadType(mv, recordType);\n         mv.visitMethodInsn(INVOKESPECIAL, className, \"<init>\", String.format(\"(L%s;)V\", BTYPE), false);\n \n+\n+        BAttachedFunction initializer = ((BRecordTypeSymbol) recordType.tsymbol).initializerFunc;\n+        StringBuilder closureParamSignature = calcClosureMapSignature(initializer.type.paramTypes.size());\n+\n         // Invoke the init-function of this type.\n         mv.visitVarInsn(ALOAD, 1);\n         mv.visitInsn(SWAP);\n-        mv.visitMethodInsn(INVOKESTATIC, className, \"$init\",\n-                String.format(\"(L%s;L%s;)V\", STRAND, MAP_VALUE), false);\n \n+\n+        // Invoke the init-functions of referenced types. This is done to initialize the\n+        // defualt values of the fields coming from the referenced types.\n+        for (BType typeRef : typeDef.referencedTypes) {\n+            if (typeRef.tag == TypeTags.RECORD) {\n+                String refTypeClassName = getTypeValueClassName(typeRef.tsymbol.pkgID, toNameString(typeRef));\n+                mv.visitInsn(DUP2);\n+                mv.visitMethodInsn(INVOKESTATIC, refTypeClassName, \"$init\",\n+                                   String.format(\"(L%s;L%s;)V\", STRAND, MAP_VALUE), false);\n+            }\n+        }\n+\n+\n+        mv.visitVarInsn(ALOAD, 0);\n+        mv.visitFieldInsn(GETFIELD, TYPEDESC_VALUE_IMPL, TYPEDESC_VALUE_IMPL_CLOSURES,\n+                          String.format(\"[L%s;\", MAP_VALUE));\n+\n+        for (int i = 0; i < initializer.type.paramTypes.size(); i++) {\n+            mv.visitInsn(DUP);\n+            mv.visitIntInsn(BIPUSH, i);\n+            mv.visitInsn(AALOAD);\n+            mv.visitInsn(SWAP);\n+\n+            mv.visitInsn(ICONST_1);\n+            mv.visitInsn(SWAP);\n+        }\n+        mv.visitInsn(POP);\n+\n+\n+        // Invoke the init-function of this type.\n+        String initFuncName;\n+        String valueClassName;\n+        List<BIRFunction> attachedFuncs = typeDef.attachedFuncs;\n+\n+        // Attached functions are empty for type-labeling. In such cases, call the __init() of\n+        // the original type value;\n+        if (attachedFuncs.size() != 0) {\n+            initFuncName = attachedFuncs.get(0).name.value;\n+            valueClassName = className;\n+        } else {\n+            // record type is the original record-type of this type-label\n+            valueClassName = getTypeValueClassName(recordType.tsymbol.pkgID, toNameString(recordType));\n+            initFuncName = cleanupFunctionName(recordType.name + \"__init_\");\n+        }\n+\n+        mv.visitMethodInsn(INVOKESTATIC, valueClassName, initFuncName,\n+                           String.format(\"(L%s;L%s;%s)L%s;\", STRAND, MAP_VALUE, closureParamSignature, OBJECT),\n+                           false);\n+\n+        mv.visitInsn(POP);\n         mv.visitInsn(ARETURN);\n         mv.visitMaxs(0, 0);\n         mv.visitEnd();\n     }\n \n+    private StringBuilder calcClosureMapSignature(int size) {\n+        StringBuilder closureParamSignature = new StringBuilder();\n+        for (int i = 0; i < size; i++) {\n+            closureParamSignature.append('L');\n+            closureParamSignature.append(MAP_VALUE);\n+            closureParamSignature.append(\";Z\");\n+", "originalCommit": "56248cd7fe8bdb2369d6352ffe5bd03f7c2183cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODczMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23087#discussion_r420608730", "bodyText": "commented out sections? do we need them?", "author": "Kishanthan", "createdAt": "2020-05-06T07:58:30Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureDesugar.java", "diffHunk": "@@ -1245,6 +1249,13 @@ public void visit(BLangRecordLiteral.BLangMapLiteral mapLiteral) {\n \n     @Override\n     public void visit(BLangRecordLiteral.BLangStructLiteral structLiteral) {\n+        SymbolEnv symbolEnv = env.createClone();\n+//        bLangLambdaFunction.capturedClosureEnv = symbolEnv;\n+        BLangFunction enclInvokable = (BLangFunction) symbolEnv.enclInvokable;\n+        // Save param closure map of the encl invokable.\n+//        bLangLambdaFunction.paramMapSymbolsOfEnclInvokable = enclInvokable.paramClosureMap;\n+//        boolean isWorker = bLangLambdaFunction.function.flagSet.contains(Flag.WORKER);", "originalCommit": "56248cd7fe8bdb2369d6352ffe5bd03f7c2183cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMjIzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23087#discussion_r420612237", "bodyText": "no, my bad, I though I removed before committing. will remove.", "author": "manuranga", "createdAt": "2020-05-06T08:05:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODczMA=="}], "type": "inlineReview"}, {"oid": "0ee33664c6448286038270823d4e32f3644d19e2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ee33664c6448286038270823d4e32f3644d19e2", "message": "Instantiate record values using closures values captured is typedesc\n\nFixes #22908 sub task of #20851", "committedDate": "2020-05-06T08:18:57Z", "type": "commit"}, {"oid": "0ee33664c6448286038270823d4e32f3644d19e2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ee33664c6448286038270823d4e32f3644d19e2", "message": "Instantiate record values using closures values captured is typedesc\n\nFixes #22908 sub task of #20851", "committedDate": "2020-05-06T08:18:57Z", "type": "forcePushed"}]}