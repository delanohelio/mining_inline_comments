{"pr_number": 26614, "pr_title": "Replace DiagnosticPos, DiagnosticSource, and Diagnostic Kind with new diagnostic API", "pr_createdAt": "2020-10-27T04:21:08Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxNjYxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512416613", "bodyText": "We shouldn't expose this API in the interface, since this is temporary.", "author": "SupunS", "createdAt": "2020-10-27T04:56:18Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticLog.java", "diffHunk": "@@ -30,12 +32,19 @@\n \n \n     /**\n-     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link DiagnosticPosition}.\n+     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link Location}.\n      *\n      * @param kind    the kind of the diagnostic\n-     * @param pos     the position of the source code element.\n+     * @param location  the location of the source code element.\n      * @param message the message\n      */\n-    void logDiagnostic(Kind kind, DiagnosticPosition pos, CharSequence message);\n+    void logDiagnostic(Kind kind, Location location, CharSequence message);\n+\n+    /**\n+     * Set the working package id for logging.\n+     *\n+     * @param packageID Package Id specified in the {@link BLangPackage}\n+     */\n+    void setCurrentPackageId(PackageID packageID);", "originalCommit": "885ca46480a3d83044206f9f1bb76257aae71515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyODY0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512428642", "bodyText": "Okay", "author": "dulajdilshan", "createdAt": "2020-10-27T05:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxNjYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxNzIxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512417216", "bodyText": "Let's deprecate this API, and introduce an overloaded API, that accepts the package ID as a parameter.\nvoid logDiagnostic(Kind kind, PackageID pkgId, Location location, CharSequence message);\nWe should eventually migrate everything to use this API", "author": "SupunS", "createdAt": "2020-10-27T04:58:40Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticLog.java", "diffHunk": "@@ -30,12 +32,19 @@\n \n \n     /**\n-     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link DiagnosticPosition}.\n+     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link Location}.\n      *\n      * @param kind    the kind of the diagnostic\n-     * @param pos     the position of the source code element.\n+     * @param location  the location of the source code element.\n      * @param message the message\n      */\n-    void logDiagnostic(Kind kind, DiagnosticPosition pos, CharSequence message);\n+    void logDiagnostic(Kind kind, Location location, CharSequence message);", "originalCommit": "885ca46480a3d83044206f9f1bb76257aae71515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyODgxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512428816", "bodyText": "\ud83d\udc4d", "author": "dulajdilshan", "createdAt": "2020-10-27T05:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxNzIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDcxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512420711", "bodyText": "Shall we remove this interface? The changes we are introducing with this PR are breaking-changes anyway, so I feel its good to do all these changes at one go.\nLets remove DiagnosticListener.class also", "author": "SupunS", "createdAt": "2020-10-27T05:12:07Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/Diagnostic.java", "diffHunk": "@@ -17,6 +17,9 @@\n */\n package org.ballerinalang.util.diagnostic;\n \n+import io.ballerina.tools.diagnostics.Location;\n+import org.ballerinalang.model.elements.PackageID;\n+", "originalCommit": "885ca46480a3d83044206f9f1bb76257aae71515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2NTc5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512465791", "bodyText": "Do you mean the DiagnosticPosition interface or Diagnostic interface?.", "author": "dulajdilshan", "createdAt": "2020-10-27T07:29:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4MzI1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512483258", "bodyText": "both", "author": "SupunS", "createdAt": "2020-10-27T08:05:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE5MTU1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r513191556", "bodyText": "Removed the whole Diagnostic interface. Shall I changing all DiagnosticKind usages to DiagnosticSeverity?", "author": "dulajdilshan", "createdAt": "2020-10-28T05:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMjEyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r513202120", "bodyText": "+1", "author": "SupunS", "createdAt": "2020-10-28T06:13:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDcxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMjM1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512422356", "bodyText": "cUnitName is unused", "author": "SupunS", "createdAt": "2020-10-27T05:18:16Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "diffHunk": "@@ -117,30 +114,25 @@ private CompilationUnitNode generateCompilationUnitNew(CompilerInput sourceEntry\n             return compilationUnit;\n         }\n \n-        BLangNodeTransformer bLangNodeTransformer = new BLangNodeTransformer(this.context, diagnosticSource);\n+        BLangNodeTransformer bLangNodeTransformer = new BLangNodeTransformer(this.context, packageID, entryName);\n         compilationUnit = (BLangCompilationUnit) bLangNodeTransformer.accept(tree.rootNode()).get(0);\n+        compilationUnit.setPackageID(packageID);\n         parserCache.put(packageID, entryName, hash, length, compilationUnit);\n         // Node cloner will run for valid ASTs.\n         // This will verify, any modification done to the AST will get handled properly.\n         compilationUnit = nodeCloner.cloneCUnit(compilationUnit);\n         return compilationUnit;\n     }\n \n-    private BDiagnosticSource getDiagnosticSource(CompilerInput sourceEntry, PackageID packageID) {\n-        String entryName = sourceEntry.getEntryName();\n-        return new BDiagnosticSource(packageID, entryName);\n-    }\n-\n-\n     private static int getHash(byte[] code) {\n         // Assuming hash collision is unlikely in a modified source.\n         // Additionally code.Length is considered to avoid hash collision.\n         return Arrays.hashCode(code);\n     }\n \n-    private void reportSyntaxDiagnostics(BDiagnosticSource diagnosticSource, SyntaxTree tree) {\n+    private void reportSyntaxDiagnostics(String cUnitName, PackageID pkgID, SyntaxTree tree) {", "originalCommit": "885ca46480a3d83044206f9f1bb76257aae71515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2NjM3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512466377", "bodyText": "\ud83d\udc4d", "author": "dulajdilshan", "createdAt": "2020-10-27T07:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMjM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMzcyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512423729", "bodyText": "I think we don't need this method, if we always pass the package ID when logging. Since we would eventually move to that, this method won't be needed.", "author": "SupunS", "createdAt": "2020-10-27T05:23:30Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnosticLog.java", "diffHunk": "@@ -65,40 +66,58 @@ public static BLangDiagnosticLog getInstance(CompilerContext context) {\n         return dLogger;\n     }\n \n+    public static BLangDiagnosticLog getInstance(CompilerContext context, PackageID packageID) {\n+        BLangDiagnosticLog dLogger = context.get(DIAGNOSTIC_LOG_KEY);\n+        if (dLogger == null) {\n+            dLogger = new BLangDiagnosticLog(context);\n+        }\n+\n+        if (packageID != null) {\n+            dLogger.setCurrentPackageId(packageID);\n+        }\n+\n+        return dLogger;\n+    }\n+\n+    @Override\n+    public void setCurrentPackageId(PackageID packageID) {\n+        this.currentPackageId = packageID;\n+    }", "originalCommit": "885ca46480a3d83044206f9f1bb76257aae71515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNDIyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512524227", "bodyText": "But we need this for now as we use error() , warning() and note() methods in BLangDiagnosticLog class to log diagnostics. Right?", "author": "dulajdilshan", "createdAt": "2020-10-27T09:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMzcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzMTc5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r512531793", "bodyText": "Sorry I meant, we don't need the overloaded getInstance() method", "author": "SupunS", "createdAt": "2020-10-27T09:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMzcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzODYwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26614#discussion_r513338608", "bodyText": "ah \ud83d\ude04 okay", "author": "dulajdilshan", "createdAt": "2020-10-28T10:35:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMzcyOQ=="}], "type": "inlineReview"}, {"oid": "8b0794036cf9f24b6a4f94fcb176bf1cfe709890", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8b0794036cf9f24b6a4f94fcb176bf1cfe709890", "message": "Replace DiagnosticKind with DiagnosticSeverity", "committedDate": "2020-10-29T05:35:40Z", "type": "forcePushed"}, {"oid": "e94d053f5b4cb9f4008b7e3d7b60279c09136047", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e94d053f5b4cb9f4008b7e3d7b60279c09136047", "message": "Replace DiagnosticKind with DiagnosticSeverity", "committedDate": "2020-10-29T06:23:46Z", "type": "forcePushed"}, {"oid": "95140444b2eb28b8150787d4c4fec08b6328ff0b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95140444b2eb28b8150787d4c4fec08b6328ff0b", "message": "Apply again \"Remove DiagnosticSource and DiagnosticPos usages\"", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "fe49dca722fe0f88f2c4dac1c35927911a124cf0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fe49dca722fe0f88f2c4dac1c35927911a124cf0", "message": "Fix errors", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "54c5dae6b7672f6e8b18fc7d7825bd670f3ef52e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54c5dae6b7672f6e8b18fc7d7825bd670f3ef52e", "message": "Move DiagnosticKind to outside", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "1c5b598bcc19ac32073189c0923b60c70aa0c90b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1c5b598bcc19ac32073189c0923b60c70aa0c90b", "message": "Remove Diagnostic interface", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "bc9bae3e44658f94506e0f0074d6b4c07380b7ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc9bae3e44658f94506e0f0074d6b4c07380b7ed", "message": "Refactor according to the review", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "1e05f715f7fc571975b43b850c5c8a561b71e764", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e05f715f7fc571975b43b850c5c8a561b71e764", "message": "Replace DiagnosticKind with DiagnosticSeverity", "committedDate": "2020-10-30T05:27:09Z", "type": "commit"}, {"oid": "1e05f715f7fc571975b43b850c5c8a561b71e764", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e05f715f7fc571975b43b850c5c8a561b71e764", "message": "Replace DiagnosticKind with DiagnosticSeverity", "committedDate": "2020-10-30T05:27:09Z", "type": "forcePushed"}, {"oid": "f74a64df38d7232ebac7a55eb93b3d76cd7b8745", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f74a64df38d7232ebac7a55eb93b3d76cd7b8745", "message": "Merge branch 'master' into diag-new\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "committedDate": "2020-11-02T06:49:03Z", "type": "commit"}, {"oid": "c97cd44db93632da8eb6fdc5fabfb2295d420217", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c97cd44db93632da8eb6fdc5fabfb2295d420217", "message": "Resolve conflicts", "committedDate": "2020-11-02T07:21:05Z", "type": "commit"}]}