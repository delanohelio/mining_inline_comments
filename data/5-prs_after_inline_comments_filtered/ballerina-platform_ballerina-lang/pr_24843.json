{"pr_number": 24843, "pr_title": "Fix the error on auth failure in the WebSocket", "pr_createdAt": "2020-07-20T06:58:11Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843", "timeline": [{"oid": "9847d3788caf9843db517207f972ce1628d06d54", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9847d3788caf9843db517207f972ce1628d06d54", "message": "Fix the issue\n\nRemove the code duplication\n\nAdd error message\n\nRemove constant duplication", "committedDate": "2020-07-20T07:40:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI5OTU3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r457299577", "bodyText": "What is this message_datasource for?", "author": "daneshk", "createdAt": "2020-07-20T11:31:35Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketConstants.java", "diffHunk": "@@ -72,6 +72,7 @@\n     public static final String RESOURCE_NAME_UPGRADE = \"upgrade\";\n \n     public static final String WEBSOCKET_HANDSHAKER = \"WEBSOCKET_MESSAGE\";\n+    public static final String MESSAGE_DATA_SOURCE = \"message_datasource\";", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMyNjk3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r457326974", "bodyText": "In the entity, the payload is set by the message_datasource key as native data. So, I use it to get the response's payload from the entity.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-20T12:13:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI5OTU3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMwNjAwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r457306008", "bodyText": "Shall we have a meaningful message instead of e.getPrintableStackTrace(), since it is there in the e", "author": "daneshk", "createdAt": "2020-07-20T11:41:51Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -108,14 +113,30 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n             }\n         } catch (ErrorValue e) {\n             unBlockStrand(strand);\n-            log.debug(e.getPrintableStackTrace(), e);\n-            return e;\n+            if (log.isDebugEnabled()) {\n+                log.debug(e.getPrintableStackTrace(), e);", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjIwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r460042200", "bodyText": "These changes have been reverted in a30ea6f", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-24T13:10:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMwNjAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMzNjQyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r457336428", "bodyText": "this change seems like a new addition to the error message. With the brackets, I feel like the shape of the error syntax has changed. WDYT?", "author": "chamil321", "createdAt": "2020-07-20T12:27:23Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketUtil.java", "diffHunk": "@@ -578,7 +578,7 @@ public static void countDownForHandshake(ObjectValue webSocketClient) {\n     public static WebSocketException getWebSocketException(String msg, Throwable throwable, String errorCode,\n                                                            ErrorValue cause) {\n         WebSocketException exception;\n-        String message = errorCode.substring(2) + \": \" + msg;\n+        String message = \"[\" + errorCode.substring(2) + \"] \" + msg;", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyNTAxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458025019", "bodyText": "At some places,  colon comes in more than once places. I thought that it is not a good format. So, I have changed it to the bracket.\n\nhttps://github.com/ballerina-platform/ballerina-lang/blob/master/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/CookieTest.java#L56\nhttps://github.com/ballerina-platform/ballerina-lang/blob/master/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/ClientErrorsTest.java#L74", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-21T11:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMzNjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjI2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r460042266", "bodyText": "These changes have been reverted in a30ea6f", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-24T13:10:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMzNjQyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTQ1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r457831458", "bodyText": "Throwing WebSocket exception during the HTTP flow seems incorrect. Still, the upgrade has not happed to WebSocket and this is a response flow to the HTTP request. 401 should go to the client without an exception thrown IMO", "author": "chamil321", "createdAt": "2020-07-21T04:39:17Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -108,14 +113,30 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n             }\n         } catch (ErrorValue e) {\n             unBlockStrand(strand);\n-            log.debug(e.getPrintableStackTrace(), e);\n-            return e;\n+            if (log.isDebugEnabled()) {\n+                log.debug(e.getPrintableStackTrace(), e);\n+            }\n+            if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n+                throw getWebSocketException(outboundResponseObj);\n+            } else {\n+                return e;\n+            }\n         } catch (Throwable e) {\n             unBlockStrand(strand);\n-            //Exception is already notified by http transport.\n-            String errorMessage = \"Couldn't complete outbound response\";\n-            log.debug(errorMessage, e);\n-            return HttpUtil.createHttpError(errorMessage, HttpErrorType.GENERIC_LISTENER_ERROR);\n+            String errorMessage = \"\";\n+            if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(message, e);\n+                }\n+                throw getWebSocketException(outboundResponseObj);", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNjQ4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458016480", "bodyText": "According to the current implementation, Success and Errors are handled by OnUpgradeResourceCallback during the Websocket upgrade connection. So If we will throw the exception, OnError can handle that.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-21T11:08:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMzA3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458613071", "bodyText": "Had a call with @kalaiyarasiganeshalingam and cleared the flow. (Ignore the above comment)\nIt seems like from the Auth filter an HTTP response(401) is sent to the WSClient instead of WebSocket response.\nIMO at AuthFilter level, this should be handled not in the Respond method. If the Auth filter can identify the WebSocket upgrade request and respond appropriately then this exception will not have occurred.\n@ldclakmal @daneshk WDYT?", "author": "chamil321", "createdAt": "2020-07-22T08:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0NDg1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458744853", "bodyText": "In HTTP filter level, I don't think we have a way to identify whether this is an WS upgrade request. IMO, the transport pipeline should get updated to WS after authentication filters. Then we can simply respond (HTTP responses) with 401 or 403. Seems like, here the transport get updated before engaging filters. Shall we schedule a meeting and discuss this? WDYT?", "author": "ldclakmal", "createdAt": "2020-07-22T12:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1MDc2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458750765", "bodyText": "+1 Let's have a meeting and discuss", "author": "daneshk", "createdAt": "2020-07-22T12:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3NDI0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458074246", "bodyText": "We don't need this check here since this is checked at the library itself. We usually add this only if the message has any sting concatenation since that is heavy processing.", "author": "niveathika", "createdAt": "2020-07-21T12:57:09Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -108,14 +113,30 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n             }\n         } catch (ErrorValue e) {\n             unBlockStrand(strand);\n-            log.debug(e.getPrintableStackTrace(), e);\n-            return e;\n+            if (log.isDebugEnabled()) {", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjMzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r460042330", "bodyText": "These changes have been reverted in a30ea6f", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-24T13:11:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3NDI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3NjE3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458076179", "bodyText": "Is there a specific use case when connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) can be null?", "author": "niveathika", "createdAt": "2020-07-21T13:00:02Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -108,14 +113,30 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n             }\n         } catch (ErrorValue e) {\n             unBlockStrand(strand);\n-            log.debug(e.getPrintableStackTrace(), e);\n-            return e;\n+            if (log.isDebugEnabled()) {\n+                log.debug(e.getPrintableStackTrace(), e);\n+            }\n+            if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n+                throw getWebSocketException(outboundResponseObj);\n+            } else {\n+                return e;", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxOTEzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458519137", "bodyText": "Yes. That is indicated this is not a request of the http Websocket upgrade.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-22T03:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3NjE3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MDc3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r458590772", "bodyText": "We dont usually return Exceptions. Use throw. Also add a comment for the specific null check\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n          \n          \n            \n                            throw getWebSocketException(outboundResponseObj);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            return e;\n          \n          \n            \n                        }\n          \n          \n            \n                        if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n          \n          \n            \n                            throw getWebSocketException(outboundResponseObj);\n          \n          \n            \n                        } \n          \n          \n            \n                         throw e;", "author": "niveathika", "createdAt": "2020-07-22T07:29:44Z", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -108,14 +113,30 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n             }\n         } catch (ErrorValue e) {\n             unBlockStrand(strand);\n-            log.debug(e.getPrintableStackTrace(), e);\n-            return e;\n+            if (log.isDebugEnabled()) {\n+                log.debug(e.getPrintableStackTrace(), e);\n+            }\n+            if (connectionObj.getNativeData(WebSocketConstants.WEBSOCKET_HANDSHAKER) != null) {\n+                throw getWebSocketException(outboundResponseObj);\n+            } else {\n+                return e;\n+            }", "originalCommit": "847ab18a7bcaa876a332ecd680de5142b1727119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjM5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r460042391", "bodyText": "These changes have been reverted in a30ea6f", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-24T13:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MDc3Mg=="}], "type": "inlineReview"}, {"oid": "a30ea6fe66758a2e7ed37f42d6754be0cf37e8c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a30ea6fe66758a2e7ed37f42d6754be0cf37e8c5", "message": "Improve the fix", "committedDate": "2020-07-24T12:46:00Z", "type": "commit"}, {"oid": "f2aa77833908498f68b886d48a62febaa5b836e1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2aa77833908498f68b886d48a62febaa5b836e1", "message": "Remove the extra changes", "committedDate": "2020-07-24T12:59:51Z", "type": "commit"}, {"oid": "037ac3cef8bbd1dab77d4e934cc1059e4bf79a4e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/037ac3cef8bbd1dab77d4e934cc1059e4bf79a4e", "message": "Merge with master", "committedDate": "2020-07-24T13:03:35Z", "type": "commit"}, {"oid": "9e6b688477810ca9600fb3c7b75eded4fa544750", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e6b688477810ca9600fb3c7b75eded4fa544750", "message": "Remove the duplicate test in testnd", "committedDate": "2020-07-27T04:29:59Z", "type": "commit"}, {"oid": "c7ee2de16cfc9605929da4f944965a2e58650021", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7ee2de16cfc9605929da4f944965a2e58650021", "message": "Fix the suggested changes", "committedDate": "2020-07-29T05:56:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQ3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r462056475", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBasicAuthentication() throws URISyntaxException, InterruptedException, BallerinaTestException {\n          \n          \n            \n                public void testBasicAuthenticationSuccess() throws URISyntaxException, InterruptedException, BallerinaTestException {", "author": "ldclakmal", "createdAt": "2020-07-29T05:59:30Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.service.websocket;\n+\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.ballerinalang.test.util.websocket.client.WebSocketTestClient;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.net.URISyntaxException;\n+\n+/**\n+ * Tests the authentication support of the WebSocket client.\n+ */\n+@Test(groups = {\"websocket-test\"})\n+public class AuthenticationTest {\n+\n+    private WebSocketTestClient client;\n+    private LogLeecher logLeecher;\n+    String expectingErrorLog;\n+\n+    @Test(description = \"Tests with correct credential\")\n+    public void testBasicAuthentication() throws URISyntaxException, InterruptedException, BallerinaTestException {", "originalCommit": "c7ee2de16cfc9605929da4f944965a2e58650021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjYzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24843#discussion_r462056639", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void negativeTestcase() throws URISyntaxException, InterruptedException, BallerinaTestException {\n          \n          \n            \n                public void testBasicAuthenticationFailure() throws URISyntaxException, InterruptedException, BallerinaTestException {", "author": "ldclakmal", "createdAt": "2020-07-29T05:59:47Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.service.websocket;\n+\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.ballerinalang.test.util.websocket.client.WebSocketTestClient;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.net.URISyntaxException;\n+\n+/**\n+ * Tests the authentication support of the WebSocket client.\n+ */\n+@Test(groups = {\"websocket-test\"})\n+public class AuthenticationTest {\n+\n+    private WebSocketTestClient client;\n+    private LogLeecher logLeecher;\n+    String expectingErrorLog;\n+\n+    @Test(description = \"Tests with correct credential\")\n+    public void testBasicAuthentication() throws URISyntaxException, InterruptedException, BallerinaTestException {\n+        expectingErrorLog = \"Hello World!\";\n+        logLeecher = new LogLeecher(expectingErrorLog);\n+        WebSocketTestCommons.serverInstance.addLogLeecher(logLeecher);\n+        client = new WebSocketTestClient(\"ws://localhost:21039\");\n+        client.handshake();\n+        logLeecher.waitForText(WebSocketTestCommons.TIMEOUT_IN_SECS * 1000);\n+        client.shutDown();\n+    }\n+\n+    @Test(description = \"Tests with wrong credential\")\n+    public void negativeTestcase() throws URISyntaxException, InterruptedException, BallerinaTestException {", "originalCommit": "c7ee2de16cfc9605929da4f944965a2e58650021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbf5805dbe62d7d8f3fbd25c73cf60795e35ba68", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbf5805dbe62d7d8f3fbd25c73cf60795e35ba68", "message": "Update tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/AuthenticationTest.java\n\nCo-authored-by: Chanaka Lakmal <ldclakmal@gmail.com>", "committedDate": "2020-07-29T06:00:23Z", "type": "commit"}, {"oid": "1e62dc307aeadaaa7693063834cbdabf0e498de1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e62dc307aeadaaa7693063834cbdabf0e498de1", "message": "Update tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/websocket/AuthenticationTest.java\n\nCo-authored-by: Chanaka Lakmal <ldclakmal@gmail.com>", "committedDate": "2020-07-29T06:00:42Z", "type": "commit"}, {"oid": "0b24c30d63681e2df7cbdcf08eba96179bae212b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b24c30d63681e2df7cbdcf08eba96179bae212b", "message": "Fix the build fauilure", "committedDate": "2020-07-29T06:33:48Z", "type": "commit"}, {"oid": "a79bbae0fd5e751c078fe3f938186726c48344d7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a79bbae0fd5e751c078fe3f938186726c48344d7", "message": "Remove unwanted changes", "committedDate": "2020-07-29T09:54:39Z", "type": "commit"}, {"oid": "04626c6288f90e6f902912ba31cd0a1b6967436a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04626c6288f90e6f902912ba31cd0a1b6967436a", "message": "Merge https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-07-29T09:55:21Z", "type": "commit"}, {"oid": "cd100560e4cc9de195a53a7e65f276c6f717ae42", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd100560e4cc9de195a53a7e65f276c6f717ae42", "message": "Improve the if clause", "committedDate": "2020-07-30T06:08:39Z", "type": "commit"}]}