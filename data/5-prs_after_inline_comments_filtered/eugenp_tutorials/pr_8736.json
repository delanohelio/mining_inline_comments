{"pr_number": 8736, "pr_title": "lazy_load_no_trans init commit", "pr_createdAt": "2020-02-16T16:43:07Z", "pr_url": "https://github.com/eugenp/tutorials/pull/8736", "timeline": [{"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a", "url": "https://github.com/eugenp/tutorials/commit/f2834b3396e527ae2749bf5d3badf6f57938f71a", "message": "lazy_load_no_trans init commit", "committedDate": "2020-02-16T16:41:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzQ1MA==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387450", "bodyText": "You don't need to collect to a list and then return the size of the list. You can go\nreturn userRepository.findAll()\n    .stream()\n    .map(User::getDocs)\n    .flatMap(Document::stream)\n    .count();\nOr similar.", "author": "ashleyfrieze", "createdAt": "2020-02-17T22:38:37Z", "path": "persistence-modules/spring-boot-persistence-h2/src/main/java/com/baeldung/h2db/lazy_load_no_trans/service/ServiceLayer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.baeldung.h2db.lazy_load_no_trans.service;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.entity.Document;\n+import com.baeldung.h2db.lazy_load_no_trans.entity.User;\n+import com.baeldung.h2db.lazy_load_no_trans.repository.UserRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Service\n+public class ServiceLayer {\n+\n+    @Autowired\n+    private UserRepository userRepository;\n+\n+    @Transactional(readOnly = true)\n+    public int countAllDocsTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    public int countAllDocsNonTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    private int countAllDocs() {\n+        List<Document> docs = userRepository\n+            .findAll().stream()\n+            .flatMap(user -> user.getDocs().stream())\n+            .collect(Collectors.toList());\n+        return docs.size();", "originalCommit": "f2834b3396e527ae2749bf5d3badf6f57938f71a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1MDI4OQ==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380750289", "bodyText": "That's right, fixed", "author": "petershatunov", "createdAt": "2020-02-18T15:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzYzMw==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387633", "bodyText": "Static import assertEquals", "author": "ashleyfrieze", "createdAt": "2020-02-17T22:39:27Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.hibernate.LazyInitializationException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-off\")\n+public class LazyLoadNoTransPropertyOffIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test(expected = LazyInitializationException.class)\n+    public void should_call_non_transactional_method() {\n+        serviceLayer.countAllDocsNonTransactional();\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "originalCommit": "f2834b3396e527ae2749bf5d3badf6f57938f71a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTczMA==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749730", "bodyText": "fixed", "author": "petershatunov", "createdAt": "2020-02-18T15:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzYzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4Nzc4Mg==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387782", "bodyText": "static import assertEquals", "author": "ashleyfrieze", "createdAt": "2020-02-17T22:40:10Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "originalCommit": "f2834b3396e527ae2749bf5d3badf6f57938f71a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTY4MA==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749680", "bodyText": "fixed", "author": "petershatunov", "createdAt": "2020-02-18T15:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4Nzc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzgwOA==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387808", "bodyText": "and here", "author": "ashleyfrieze", "createdAt": "2020-02-17T22:40:16Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);\n+        SQLStatementCountValidator.assertSelectCount(EXPECTED_USERS_COUNT + 1);\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "originalCommit": "f2834b3396e527ae2749bf5d3badf6f57938f71a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTU5Ng==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749596", "bodyText": "fixed", "author": "petershatunov", "createdAt": "2020-02-18T15:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzgwOA=="}], "type": "inlineReview"}, {"oid": "565aab9e2247806cd1a93ded30b0b52a32aeaac3", "url": "https://github.com/eugenp/tutorials/commit/565aab9e2247806cd1a93ded30b0b52a32aeaac3", "message": "refactoring", "committedDate": "2020-02-18T15:33:12Z", "type": "commit"}, {"oid": "8f894410aee1b2d169da418d3115766c263d3cb9", "url": "https://github.com/eugenp/tutorials/commit/8f894410aee1b2d169da418d3115766c263d3cb9", "message": "methods naming", "committedDate": "2020-02-29T05:58:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NjY3NQ==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686675", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOffThenTestPass() {\n          \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOff_thenTestPass() {", "author": "KevinGilmore", "createdAt": "2020-03-15T15:51:58Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.hibernate.LazyInitializationException;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-off\")\n+public class LazyLoadNoTransPropertyOffIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+\n+    @Test(expected = LazyInitializationException.class)\n+    public void whenCallNonTransactionalMethodWithPropertyOffThenThrowException() {\n+        serviceLayer.countAllDocsNonTransactional();\n+    }\n+\n+    @Test\n+    public void whenCallTransactionalMethodWithPropertyOffThenTestPass() {", "originalCommit": "8f894410aee1b2d169da418d3115766c263d3cb9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NjcyMw==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {\n          \n          \n            \n                public void whenCallNonTransactionalMethodWithPropertyOn_thenGetNplusOne() {", "author": "KevinGilmore", "createdAt": "2020-03-15T15:52:23Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Test\n+    public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {", "originalCommit": "8f894410aee1b2d169da418d3115766c263d3cb9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4Njc1NA==", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686754", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOnThenTestPass() {\n          \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOn_thenTestPass() {", "author": "KevinGilmore", "createdAt": "2020-03-15T15:52:42Z", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Test\n+    public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);\n+        SQLStatementCountValidator.assertSelectCount(EXPECTED_USERS_COUNT + 1);\n+    }\n+\n+    @Test\n+    public void whenCallTransactionalMethodWithPropertyOnThenTestPass() {", "originalCommit": "8f894410aee1b2d169da418d3115766c263d3cb9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8d82bb8dda6e192cad2250344dc7133cc01cdfbd", "url": "https://github.com/eugenp/tutorials/commit/8d82bb8dda6e192cad2250344dc7133cc01cdfbd", "message": "Update persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-03-15T19:44:50Z", "type": "commit"}, {"oid": "019b36bd5d6a8fd8f57ab04670ecf0f85a876c35", "url": "https://github.com/eugenp/tutorials/commit/019b36bd5d6a8fd8f57ab04670ecf0f85a876c35", "message": "Update persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-03-15T19:45:07Z", "type": "commit"}, {"oid": "fbea4228dabf0a66a15845a7bbd11e82e850f9f5", "url": "https://github.com/eugenp/tutorials/commit/fbea4228dabf0a66a15845a7bbd11e82e850f9f5", "message": "Update persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-03-15T19:45:18Z", "type": "commit"}, {"oid": "9a6155a3805ce35abd76f2f53580d07a0432675b", "url": "https://github.com/eugenp/tutorials/commit/9a6155a3805ce35abd76f2f53580d07a0432675b", "message": "Merge remote-tracking branch 'upstream/master' into lazy_load_no_trans", "committedDate": "2020-03-15T19:49:01Z", "type": "commit"}, {"oid": "01b89482b8a4b06e64fa92ba5e08ddfa8b684081", "url": "https://github.com/eugenp/tutorials/commit/01b89482b8a4b06e64fa92ba5e08ddfa8b684081", "message": "Merge remote-tracking branch 'origin/lazy_load_no_trans' into lazy_load_no_trans", "committedDate": "2020-03-15T20:06:12Z", "type": "commit"}, {"oid": "7e2f8b148af9d209343e393114cd732b1bf7f582", "url": "https://github.com/eugenp/tutorials/commit/7e2f8b148af9d209343e393114cd732b1bf7f582", "message": "naming", "committedDate": "2020-03-15T20:07:59Z", "type": "commit"}, {"oid": "ecdba6b5fc791b5628504a5109ab90dd8a9fefbd", "url": "https://github.com/eugenp/tutorials/commit/ecdba6b5fc791b5628504a5109ab90dd8a9fefbd", "message": "code readability", "committedDate": "2020-03-15T20:14:28Z", "type": "commit"}]}