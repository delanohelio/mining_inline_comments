{"pr_number": 9593, "pr_title": "[BAEL-4123] What is the purpose of 'Class.forName(\u201cMY_JDBC_DRIVER\u201d)'?", "pr_createdAt": "2020-06-27T17:30:05Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9593", "timeline": [{"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f", "url": "https://github.com/eugenp/tutorials/commit/6decb04a6f9d9036b85bf11472139255b4863a4f", "message": "Loading JDBC driver unit test", "committedDate": "2020-06-27T17:27:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjE2OA==", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r448106168", "bodyText": "Remove extra space before the =", "author": "eric-martin", "createdAt": "2020-07-01T04:19:41Z", "path": "persistence-modules/core-java-persistence/src/test/java/com/baeldung/jdbc/JdbcDriverLoadingUnitTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.baeldung.jdbc;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+public class JdbcDriverLoadingUnitTest {\n+\n+    @Before\n+    public void setup() throws SQLException {\n+        if(!org.postgresql.Driver.isRegistered()) {\n+            org.postgresql.Driver.register();\n+        }\n+    }\n+    /**\n+     * Driver is registered automatically with the service provider mechanism.\n+     */\n+    @Test\n+    public void givenJdbcDriverWithSP_whenGettingDriver_thenDriverIsReturned() throws SQLException {\n+        Driver driver = getDriver();\n+        assertNotNull(\"Expected initialized postgres driver\", driver);\n+    }\n+\n+    /**\n+     * Driver is registered automatically, then deregistered.\n+     * @throws SQLException\n+     */\n+    @Test(expected = SQLException.class)\n+    public void givenRegisteredJdbcDriver_whenDeregister_thenNoDriverIsReturned() throws SQLException {\n+        Driver driver = getDriver();\n+        DriverManager.deregisterDriver(driver);\n+        driver = getDriver();\n+        assertNull(driver);\n+    }\n+\n+    /**\n+     * Driver is automatically by the JVM, then deregistered, then registered again.\n+     * @throws SQLException\n+     * @throws ClassNotFoundException\n+     */\n+    @Test\n+    public void givenNoRegisteredDriver_whenClassForName_thenDriverIsReturned() throws SQLException, ClassNotFoundException {\n+        deregisterDriver();\n+\n+        Driver driver = null;\n+        try {\n+            driver = getDriver();\n+        }\n+        catch (SQLException e) {\n+            // expected\n+        }\n+        assertNull(\"Must fail on attempt to get a deregistered driver\", driver);\n+\n+        org.postgresql.Driver.register(); // This is invoked as part of Class.forName() logic\n+\n+        driver  = getDriver();", "originalCommit": "6decb04a6f9d9036b85bf11472139255b4863a4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM2MDc1Nw==", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r449360757", "bodyText": "removed", "author": "shapirov103", "createdAt": "2020-07-03T03:42:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjI2Ng==", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r448106266", "bodyText": "Add a space between the if and the (", "author": "eric-martin", "createdAt": "2020-07-01T04:20:02Z", "path": "persistence-modules/core-java-persistence/src/test/java/com/baeldung/jdbc/JdbcDriverLoadingUnitTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.baeldung.jdbc;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+public class JdbcDriverLoadingUnitTest {\n+\n+    @Before\n+    public void setup() throws SQLException {\n+        if(!org.postgresql.Driver.isRegistered()) {", "originalCommit": "6decb04a6f9d9036b85bf11472139255b4863a4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM2MDgwNg==", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r449360806", "bodyText": "space added", "author": "shapirov103", "createdAt": "2020-07-03T03:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjI2Ng=="}], "type": "inlineReview"}, {"oid": "9f3b5b00c9d71972e1caa8c70027f1304392331d", "url": "https://github.com/eugenp/tutorials/commit/9f3b5b00c9d71972e1caa8c70027f1304392331d", "message": "addressing code review comments", "committedDate": "2020-07-03T03:40:28Z", "type": "commit"}]}