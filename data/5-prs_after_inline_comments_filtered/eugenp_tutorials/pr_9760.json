{"pr_number": 9760, "pr_title": "BAEL-4329: Set field value with reflection", "pr_createdAt": "2020-07-24T14:50:53Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9760", "timeline": [{"oid": "3a921ccdca2495964eb332c0420efc5138277f49", "url": "https://github.com/eugenp/tutorials/commit/3a921ccdca2495964eb332c0420efc5138277f49", "message": "Merge pull request #1 from eugenp/master\n\nPR: Fork update", "committedDate": "2020-05-28T17:52:55Z", "type": "commit"}, {"oid": "e3f50c285185d39e4314e064fdaba0898f4aa220", "url": "https://github.com/eugenp/tutorials/commit/e3f50c285185d39e4314e064fdaba0898f4aa220", "message": "Added code to access private properties of a class", "committedDate": "2020-06-05T18:26:54Z", "type": "commit"}, {"oid": "08d0ac44acd1aacedeeedd67dea7ad9c5f0fbc50", "url": "https://github.com/eugenp/tutorials/commit/08d0ac44acd1aacedeeedd67dea7ad9c5f0fbc50", "message": "Removed abstractions to increase simplicity.", "committedDate": "2020-06-10T17:53:29Z", "type": "commit"}, {"oid": "bd6103a2b0de3eaf25216fe0ed6bd92c35416a54", "url": "https://github.com/eugenp/tutorials/commit/bd6103a2b0de3eaf25216fe0ed6bd92c35416a54", "message": "Added unit test cases in givenX_whenY_thenZ format.", "committedDate": "2020-06-10T17:57:42Z", "type": "commit"}, {"oid": "5bb0000ac10db6a567369bb0fd1961bd22c7f7fc", "url": "https://github.com/eugenp/tutorials/commit/5bb0000ac10db6a567369bb0fd1961bd22c7f7fc", "message": "Included test cases for NoSuchFieldException, NoSuchMethodException and\nNullPointerException.", "committedDate": "2020-06-15T18:02:09Z", "type": "commit"}, {"oid": "8e4ff1d9307212eeda8d9781a77313623aaa87ff", "url": "https://github.com/eugenp/tutorials/commit/8e4ff1d9307212eeda8d9781a77313623aaa87ff", "message": "Added new test case for IllegalArgumentException", "committedDate": "2020-06-19T16:50:57Z", "type": "commit"}, {"oid": "55f47778a25dd0325f8f94e09cc01b0061d85b6a", "url": "https://github.com/eugenp/tutorials/commit/55f47778a25dd0325f8f94e09cc01b0061d85b6a", "message": "Removed test cases for getting private methods", "committedDate": "2020-06-23T16:18:01Z", "type": "commit"}, {"oid": "5dd3417b7746af245d862754a21e4e87741976e2", "url": "https://github.com/eugenp/tutorials/commit/5dd3417b7746af245d862754a21e4e87741976e2", "message": "Added test cases for accessing all data types.", "committedDate": "2020-06-23T16:19:35Z", "type": "commit"}, {"oid": "b48eb6ccb2f790aebf6b53603e6d0ae4f670ba8e", "url": "https://github.com/eugenp/tutorials/commit/b48eb6ccb2f790aebf6b53603e6d0ae4f670ba8e", "message": "Segregated test cases for primitive and object types. Added test case\nfor Autoboxing.", "committedDate": "2020-06-27T11:03:20Z", "type": "commit"}, {"oid": "7ebdd6acc060adbf7c1ccf6593cb1e55c69e5c66", "url": "https://github.com/eugenp/tutorials/commit/7ebdd6acc060adbf7c1ccf6593cb1e55c69e5c66", "message": "Condensed fields by removing extra space.", "committedDate": "2020-06-27T11:09:16Z", "type": "commit"}, {"oid": "30a2ca14c81b67ae4b517e9597e2c144bf39f99a", "url": "https://github.com/eugenp/tutorials/commit/30a2ca14c81b67ae4b517e9597e2c144bf39f99a", "message": "Added test case for widening.", "committedDate": "2020-06-29T16:57:35Z", "type": "commit"}, {"oid": "52fc2f68f0ad08335949722874095ea79c6ffb79", "url": "https://github.com/eugenp/tutorials/commit/52fc2f68f0ad08335949722874095ea79c6ffb79", "message": "Refactored test cases to throw generic Exception", "committedDate": "2020-07-04T16:23:43Z", "type": "commit"}, {"oid": "9568663bb2e176eacc2119e605be76577f90b9c6", "url": "https://github.com/eugenp/tutorials/commit/9568663bb2e176eacc2119e605be76577f90b9c6", "message": "Created new module core-java-reflection-2", "committedDate": "2020-07-10T14:36:12Z", "type": "commit"}, {"oid": "5f8305ff704a3eb2b23aaddaba06b18f0b438018", "url": "https://github.com/eugenp/tutorials/commit/5f8305ff704a3eb2b23aaddaba06b18f0b438018", "message": "Revert \"Created new module core-java-reflection-2\"\n\nThis reverts commit 9568663bb2e176eacc2119e605be76577f90b9c6.", "committedDate": "2020-07-10T14:57:38Z", "type": "commit"}, {"oid": "e7733c14d687239ecffb39cd96f1bd637045f290", "url": "https://github.com/eugenp/tutorials/commit/e7733c14d687239ecffb39cd96f1bd637045f290", "message": "Merge pull request #2 from eugenp/master\n\nUpdating local repo", "committedDate": "2020-07-10T15:01:57Z", "type": "commit"}, {"oid": "6ac390998c3bbbab7062e7ffe1cd456637d9e90f", "url": "https://github.com/eugenp/tutorials/commit/6ac390998c3bbbab7062e7ffe1cd456637d9e90f", "message": "Added new module core-java-reflection-2", "committedDate": "2020-07-10T15:17:46Z", "type": "commit"}, {"oid": "c0d1e557cba0069734e0da54efe46a0bbdcddd50", "url": "https://github.com/eugenp/tutorials/commit/c0d1e557cba0069734e0da54efe46a0bbdcddd50", "message": "Removed README.MD", "committedDate": "2020-07-12T06:58:38Z", "type": "commit"}, {"oid": "1c26015c402b4cece2c836f50ed9ce9f334afc87", "url": "https://github.com/eugenp/tutorials/commit/1c26015c402b4cece2c836f50ed9ce9f334afc87", "message": "Merge pull request #3 from eugenp/master\n\nUpdate local repo", "committedDate": "2020-07-23T14:35:01Z", "type": "commit"}, {"oid": "fa6d3e5b0f60afac303a0449f88b05aa7c002f56", "url": "https://github.com/eugenp/tutorials/commit/fa6d3e5b0f60afac303a0449f88b05aa7c002f56", "message": "Added code to set a field using Reflection.", "committedDate": "2020-07-24T14:43:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5MTgxMQ==", "url": "https://github.com/eugenp/tutorials/pull/9760#discussion_r464091811", "bodyText": "Don't need a wrapper class to demonstrate narrowing. Use the short primitive.", "author": "KevinGilmore", "createdAt": "2020-08-02T15:37:09Z", "path": "core-java-modules/core-java-reflection-2/src/test/java/com/baeldung/reflection/set/fields/SetFieldsUsingReflectionUnitTest.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package com.baeldung.reflection.set.fields;\n+\n+import java.lang.reflect.Field;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+public class SetFieldsUsingReflectionUnitTest {\n+\n+    @Test\n+    public void whenSetIntegerFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field ageField = person.getClass()\n+            .getDeclaredField(\"age\");\n+        ageField.setAccessible(true);\n+\n+        byte age = 26;\n+        ageField.setByte(person, age);\n+        Assertions.assertEquals(26, person.getAge());\n+\n+        Field uidNumberField = person.getClass()\n+            .getDeclaredField(\"uidNumber\");\n+        uidNumberField.setAccessible(true);\n+\n+        short uidNumber = 5555;\n+        uidNumberField.setShort(person, uidNumber);\n+        Assertions.assertEquals(5555, person.getUidNumber());\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        int pinCode = 411057;\n+        pinCodeField.setInt(person, pinCode);\n+        Assertions.assertEquals(411057, person.getPinCode());\n+\n+        Field contactNumberField = person.getClass()\n+            .getDeclaredField(\"contactNumber\");\n+        contactNumberField.setAccessible(true);\n+\n+        long contactNumber = 123456789L;\n+        contactNumberField.setLong(person, contactNumber);\n+        Assertions.assertEquals(123456789L, person.getContactNumber());\n+\n+    }\n+\n+    @Test\n+    public void whenDoUnboxing_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        Integer pinCode = 411057;\n+        pinCodeField.setInt(person, pinCode);\n+        Assertions.assertEquals(411057, person.getPinCode());\n+    }\n+\n+    @Test\n+    public void whenDoNarrowing_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        Short pinCode = 4110;", "originalCommit": "fa6d3e5b0f60afac303a0449f88b05aa7c002f56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "369caa555f64d6d48f0c54dc6dc589b259f5e781", "url": "https://github.com/eugenp/tutorials/commit/369caa555f64d6d48f0c54dc6dc589b259f5e781", "message": "Refactored code to use short primitive instead of Short wrapper class.", "committedDate": "2020-08-02T17:06:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyNzg1Ng==", "url": "https://github.com/eugenp/tutorials/pull/9760#discussion_r464127856", "bodyText": "Change to Assertions.assertEquals(uidNumber, person.getUidNumber());. Similarly, change in other places as well", "author": "rahilsh", "createdAt": "2020-08-02T21:53:19Z", "path": "core-java-modules/core-java-reflection-2/src/test/java/com/baeldung/reflection/set/fields/SetFieldsUsingReflectionUnitTest.java", "diffHunk": "@@ -0,0 +1,184 @@\n+package com.baeldung.reflection.set.fields;\n+\n+import java.lang.reflect.Field;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.baeldung.reflection.access.privatefields.Person;\n+\n+public class SetFieldsUsingReflectionUnitTest {\n+\n+    @Test\n+    public void whenSetIntegerFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field ageField = person.getClass()\n+            .getDeclaredField(\"age\");\n+        ageField.setAccessible(true);\n+\n+        byte age = 26;\n+        ageField.setByte(person, age);\n+        Assertions.assertEquals(26, person.getAge());\n+\n+        Field uidNumberField = person.getClass()\n+            .getDeclaredField(\"uidNumber\");\n+        uidNumberField.setAccessible(true);\n+\n+        short uidNumber = 5555;\n+        uidNumberField.setShort(person, uidNumber);\n+        Assertions.assertEquals(5555, person.getUidNumber());", "originalCommit": "369caa555f64d6d48f0c54dc6dc589b259f5e781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyODAxNQ==", "url": "https://github.com/eugenp/tutorials/pull/9760#discussion_r464128015", "bodyText": "Avoid unnecessary variable declaration, change to just activeField.setBoolean(person, true);", "author": "rahilsh", "createdAt": "2020-08-02T21:55:00Z", "path": "core-java-modules/core-java-reflection-2/src/test/java/com/baeldung/reflection/set/fields/SetFieldsUsingReflectionUnitTest.java", "diffHunk": "@@ -0,0 +1,184 @@\n+package com.baeldung.reflection.set.fields;\n+\n+import java.lang.reflect.Field;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.baeldung.reflection.access.privatefields.Person;\n+\n+public class SetFieldsUsingReflectionUnitTest {\n+\n+    @Test\n+    public void whenSetIntegerFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field ageField = person.getClass()\n+            .getDeclaredField(\"age\");\n+        ageField.setAccessible(true);\n+\n+        byte age = 26;\n+        ageField.setByte(person, age);\n+        Assertions.assertEquals(26, person.getAge());\n+\n+        Field uidNumberField = person.getClass()\n+            .getDeclaredField(\"uidNumber\");\n+        uidNumberField.setAccessible(true);\n+\n+        short uidNumber = 5555;\n+        uidNumberField.setShort(person, uidNumber);\n+        Assertions.assertEquals(5555, person.getUidNumber());\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        int pinCode = 411057;\n+        pinCodeField.setInt(person, pinCode);\n+        Assertions.assertEquals(411057, person.getPinCode());\n+\n+        Field contactNumberField = person.getClass()\n+            .getDeclaredField(\"contactNumber\");\n+        contactNumberField.setAccessible(true);\n+\n+        long contactNumber = 123456789L;\n+        contactNumberField.setLong(person, contactNumber);\n+        Assertions.assertEquals(123456789L, person.getContactNumber());\n+\n+    }\n+\n+    @Test\n+    public void whenDoUnboxing_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        Integer pinCode = 411057;\n+        pinCodeField.setInt(person, pinCode);\n+        Assertions.assertEquals(411057, person.getPinCode());\n+    }\n+\n+    @Test\n+    public void whenDoNarrowing_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field pinCodeField = person.getClass()\n+            .getDeclaredField(\"pinCode\");\n+        pinCodeField.setAccessible(true);\n+\n+        short pinCode = 4110;\n+        pinCodeField.setInt(person, pinCode);\n+        Assertions.assertEquals(4110, person.getPinCode());\n+    }\n+\n+    @Test\n+    public void whenSetFloatingTypeFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field heightField = person.getClass()\n+            .getDeclaredField(\"height\");\n+        heightField.setAccessible(true);\n+\n+        float height = 6.1242f;\n+        heightField.setFloat(person, height);\n+        Assertions.assertEquals(6.1242f, person.getHeight());\n+\n+        Field weightField = person.getClass()\n+            .getDeclaredField(\"weight\");\n+        weightField.setAccessible(true);\n+\n+        double weight = 75.2564;\n+        weightField.setDouble(person, weight);\n+        Assertions.assertEquals(75.2564, person.getWeight());\n+    }\n+\n+    @Test\n+    public void whenSetCharacterFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field genderField = person.getClass()\n+            .getDeclaredField(\"gender\");\n+        genderField.setAccessible(true);\n+\n+        char gender = 'M';\n+        genderField.setChar(person, gender);\n+        Assertions.assertEquals('M', person.getGender());\n+    }\n+\n+    @Test\n+    public void whenSetBooleanFields_thenSuccess() throws Exception {\n+        Person person = new Person();\n+\n+        Field activeField = person.getClass()\n+            .getDeclaredField(\"active\");\n+        activeField.setAccessible(true);\n+\n+        boolean active = true;\n+        activeField.setBoolean(person, active);", "originalCommit": "369caa555f64d6d48f0c54dc6dc589b259f5e781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9837877c92722b699311f42a6f74f64b79c3cc9e", "url": "https://github.com/eugenp/tutorials/commit/9837877c92722b699311f42a6f74f64b79c3cc9e", "message": "Refactored code to use existing variables.", "committedDate": "2020-08-03T15:31:57Z", "type": "commit"}]}