{"pr_number": 9894, "pr_title": "[BAEL-4471] Quarkus Testing", "pr_createdAt": "2020-08-18T20:12:43Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9894", "timeline": [{"oid": "963b9dfffd1e291661365f1a0a8ecd270f9b0686", "url": "https://github.com/eugenp/tutorials/commit/963b9dfffd1e291661365f1a0a8ecd270f9b0686", "message": "[BAEL-4471] initial commit\n\n[BAEL-4471] commit\n\n[BAEL-4471] commit\n\n[BAEL-4471] commit\n\n[BAEL-4471] commit", "committedDate": "2020-08-18T19:57:17Z", "type": "commit"}, {"oid": "d181d9503069d0deaf3c6e4a0925155f7b1821a3", "url": "https://github.com/eugenp/tutorials/commit/d181d9503069d0deaf3c6e4a0925155f7b1821a3", "message": "[BAEL-4471] cosmetic fixes", "committedDate": "2020-08-18T20:11:21Z", "type": "commit"}, {"oid": "7cee3657cb61128db07b56d738284dfdf446f405", "url": "https://github.com/eugenp/tutorials/commit/7cee3657cb61128db07b56d738284dfdf446f405", "message": "[BAEL-4471] remove testcontainers", "committedDate": "2020-08-18T21:25:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTYwNw==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575607", "bodyText": "Use 4-space indent per level", "author": "KevinGilmore", "createdAt": "2020-08-20T04:06:13Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/CustomLibraryResourceIntegrationTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.baeldung.quarkus;\n+\n+import com.baeldung.quarkus.utils.CustomTestProfile;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.TestProfile;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.hasItems;\n+\n+@QuarkusTest\n+@TestProfile(CustomTestProfile.class)\n+class CustomLibraryResourceIntegrationTest {\n+\n+    public static final String BOOKSTORE_ENDPOINT = \"/custom/library/book\";\n+\n+    @Test\n+    void testGetBookEndpoint() {\n+        given().contentType(ContentType.JSON)\n+               .when().get(BOOKSTORE_ENDPOINT)\n+               .then()\n+               .statusCode(200)\n+               .body(\"size()\", is(2))\n+               .body(\"title\", hasItems(\"Foundation\", \"Dune\"));", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTY2MA==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575660", "bodyText": "4-space indent", "author": "KevinGilmore", "createdAt": "2020-08-20T04:06:23Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/LibraryHttpEndpointIntegrationTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.baeldung.quarkus;\n+\n+import io.quarkus.test.common.http.TestHTTPEndpoint;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+\n+@QuarkusTest\n+@TestHTTPEndpoint(LibraryResource.class)\n+class LibraryHttpEndpointIntegrationTest {\n+\n+    @Test\n+    void testGetBookEndpoint() {\n+        given().contentType(ContentType.JSON)\n+               .when()\n+               .get(\"book\")\n+               .then()\n+               .statusCode(200);", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTcyOA==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575728", "bodyText": "4-space indent", "author": "KevinGilmore", "createdAt": "2020-08-20T04:06:36Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/LibraryResourceInjectSpyIntegrationTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.baeldung.quarkus;\n+\n+import com.baeldung.quarkus.service.LibraryService;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.mockito.InjectSpy;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.mockito.Mockito.verify;\n+\n+@QuarkusTest\n+class LibraryResourceInjectSpyIntegrationTest {\n+\n+    @InjectSpy\n+    LibraryService libraryService;\n+\n+    @Test\n+    void whenFindByAuthor_thenBookShouldBeFound() {\n+        given().contentType(ContentType.JSON).param(\"query\", \"Asimov\")\n+               .when().get(\"/library/book\")\n+               .then()\n+               .statusCode(200);", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTc5Ng==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575796", "bodyText": "4-space indent", "author": "KevinGilmore", "createdAt": "2020-08-20T04:06:46Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/LibraryResourceIntegrationTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.baeldung.quarkus;\n+\n+import io.quarkus.test.common.http.TestHTTPEndpoint;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.URL;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.hasItem;\n+\n+@QuarkusTest\n+class LibraryResourceIntegrationTest {\n+\n+    @TestHTTPEndpoint(LibraryResource.class)\n+    @TestHTTPResource(\"book\")\n+    URL libraryEndpoint;\n+\n+    @Test\n+    void testGetBookEndpoint() {\n+        given().contentType(ContentType.JSON).param(\"query\", \"Dune\")\n+               .when().get(libraryEndpoint)\n+               .then()\n+               .statusCode(200)\n+               .body(\"size()\", is(1))\n+               .body(\"title\", hasItem(\"Dune\"))\n+               .body(\"author\", hasItem(\"Frank Herbert\"));", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTg5Ng==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575896", "bodyText": "4-space indent per level", "author": "KevinGilmore", "createdAt": "2020-08-20T04:07:04Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/service/LibraryServiceInjectMockUnitTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.baeldung.quarkus.service;\n+\n+import com.baeldung.quarkus.model.Book;\n+import com.baeldung.quarkus.repository.BookRepository;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.mockito.InjectMock;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import javax.inject.Inject;\n+import java.util.Arrays;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+@QuarkusTest\n+class LibraryServiceInjectMockUnitTest {\n+\n+    @Inject\n+    LibraryService libraryService;\n+\n+    @InjectMock\n+    BookRepository bookRepository;\n+\n+    @BeforeEach\n+    void setUp() {\n+        when(bookRepository.findBy(\"Frank Herbert\"))\n+                .thenReturn(Arrays.stream(new Book[] {\n+                        new Book(\"Dune\", \"Frank Herbert\"),\n+                        new Book(\"Children of Dune\", \"Frank Herbert\")}));", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NTk1Ng==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473575956", "bodyText": "4-space indent per level", "author": "KevinGilmore", "createdAt": "2020-08-20T04:07:17Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/service/LibraryServiceQuarkusMockUnitTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.baeldung.quarkus.service;\n+\n+import com.baeldung.quarkus.model.Book;\n+import com.baeldung.quarkus.repository.BookRepository;\n+import com.baeldung.quarkus.utils.TestBookRepository;\n+import io.quarkus.test.junit.QuarkusMock;\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+\n+import javax.inject.Inject;\n+import java.util.Arrays;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@QuarkusTest\n+class LibraryServiceQuarkusMockUnitTest {\n+\n+    @Inject\n+    LibraryService libraryService;\n+\n+    @BeforeEach\n+    void setUp() {\n+        BookRepository mock = Mockito.mock(TestBookRepository.class);\n+        Mockito.when(mock.findBy(\"Asimov\"))\n+                .thenReturn(Arrays.stream(new Book[] {\n+                        new Book(\"Foundation\", \"Isaac Asimov\"),\n+                        new Book(\"I Robot\", \"Isaac Asimov\")}));", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NjAwMw==", "url": "https://github.com/eugenp/tutorials/pull/9894#discussion_r473576003", "bodyText": "4-space indent", "author": "KevinGilmore", "createdAt": "2020-08-20T04:07:30Z", "path": "quarkus/src/test/java/com/baeldung/quarkus/utils/TestBookRepository.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.baeldung.quarkus.utils;\n+\n+import com.baeldung.quarkus.model.Book;\n+import com.baeldung.quarkus.repository.BookRepository;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.Priority;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+\n+@Priority(1)\n+@Alternative\n+@ApplicationScoped\n+public class TestBookRepository extends BookRepository {\n+\n+    @PostConstruct\n+    public void init() {\n+        persist(new Book(\"Dune\", \"Frank Herbert\"),\n+                new Book(\"Foundation\", \"Isaac Asimov\"));", "originalCommit": "7cee3657cb61128db07b56d738284dfdf446f405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1486cabd1125e55a906488a58f126de93df5f449", "url": "https://github.com/eugenp/tutorials/commit/1486cabd1125e55a906488a58f126de93df5f449", "message": "[BAEL-4471] PR comments fixes", "committedDate": "2020-08-20T12:38:21Z", "type": "commit"}, {"oid": "1486cabd1125e55a906488a58f126de93df5f449", "url": "https://github.com/eugenp/tutorials/commit/1486cabd1125e55a906488a58f126de93df5f449", "message": "[BAEL-4471] PR comments fixes", "committedDate": "2020-08-20T12:38:21Z", "type": "forcePushed"}, {"oid": "b6f84a320cafec321b0eab8bc6fdbcc2691bb43c", "url": "https://github.com/eugenp/tutorials/commit/b6f84a320cafec321b0eab8bc6fdbcc2691bb43c", "message": "[BAEL-4471] PR comments fixes", "committedDate": "2020-08-25T16:08:48Z", "type": "commit"}, {"oid": "b6f84a320cafec321b0eab8bc6fdbcc2691bb43c", "url": "https://github.com/eugenp/tutorials/commit/b6f84a320cafec321b0eab8bc6fdbcc2691bb43c", "message": "[BAEL-4471] PR comments fixes", "committedDate": "2020-08-25T16:08:48Z", "type": "forcePushed"}, {"oid": "6691dc7235dc434ae7a480553b74d5dbfd493b6b", "url": "https://github.com/eugenp/tutorials/commit/6691dc7235dc434ae7a480553b74d5dbfd493b6b", "message": "[BAEL-4471] assign different port while testing", "committedDate": "2020-08-25T16:30:04Z", "type": "forcePushed"}, {"oid": "bfe2a7cfaa92c7ef370d47cf864bae681d36e765", "url": "https://github.com/eugenp/tutorials/commit/bfe2a7cfaa92c7ef370d47cf864bae681d36e765", "message": "[BAEL-4471] assign different port per profile while testing", "committedDate": "2020-08-25T16:41:46Z", "type": "forcePushed"}, {"oid": "56801b64b6707a40a935d77060664f9501ae336a", "url": "https://github.com/eugenp/tutorials/commit/56801b64b6707a40a935d77060664f9501ae336a", "message": "[BAEL-4471] assign different port per profile while testing", "committedDate": "2020-08-25T17:21:50Z", "type": "forcePushed"}, {"oid": "6414d8b87024a3034fc60216aa8871e108beac2e", "url": "https://github.com/eugenp/tutorials/commit/6414d8b87024a3034fc60216aa8871e108beac2e", "message": "[BAEL-4471] assign different port per profile while testing", "committedDate": "2020-08-25T20:31:33Z", "type": "forcePushed"}, {"oid": "d338c71812ee29b53375ee5eeeb9912434710bf0", "url": "https://github.com/eugenp/tutorials/commit/d338c71812ee29b53375ee5eeeb9912434710bf0", "message": "[BAEL-4471] assign different port per profile while testing", "committedDate": "2020-08-25T21:50:39Z", "type": "commit"}, {"oid": "d338c71812ee29b53375ee5eeeb9912434710bf0", "url": "https://github.com/eugenp/tutorials/commit/d338c71812ee29b53375ee5eeeb9912434710bf0", "message": "[BAEL-4471] assign different port per profile while testing", "committedDate": "2020-08-25T21:50:39Z", "type": "forcePushed"}, {"oid": "cc69f0a8178de8777c6ea20455cea9bc06df4931", "url": "https://github.com/eugenp/tutorials/commit/cc69f0a8178de8777c6ea20455cea9bc06df4931", "message": "[BAEL-4471] rename unit to integration test", "committedDate": "2020-08-28T14:18:37Z", "type": "commit"}]}