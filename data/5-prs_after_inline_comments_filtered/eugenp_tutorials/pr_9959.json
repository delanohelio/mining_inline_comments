{"pr_number": 9959, "pr_title": "Added code examples for BAEL-4534", "pr_createdAt": "2020-08-31T18:44:01Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9959", "timeline": [{"oid": "421bfc694f5ccd3bd7ecadc3e31c43acfcf5895a", "url": "https://github.com/eugenp/tutorials/commit/421bfc694f5ccd3bd7ecadc3e31c43acfcf5895a", "message": "Added code examples for BAEL-4534", "committedDate": "2020-08-31T18:42:50Z", "type": "commit"}, {"oid": "18a08cedd9b5e1dcb608063086751c6024bcd3b2", "url": "https://github.com/eugenp/tutorials/commit/18a08cedd9b5e1dcb608063086751c6024bcd3b2", "message": "Added braces to the if block", "committedDate": "2020-09-02T14:00:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMwODc2MQ==", "url": "https://github.com/eugenp/tutorials/pull/9959#discussion_r485308761", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenNonExistingClass_whenUsingForName_classNotFound() throws ClassNotFoundException {\n          \n          \n            \n                public void givenNonExistingClass_whenUsingForName_thenClassNotFound() throws ClassNotFoundException {", "author": "KevinGilmore", "createdAt": "2020-09-09T03:01:42Z", "path": "core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.checkclassexistence;\n+\n+import org.junit.Test;\n+\n+public class CheckClassExistenceUnitTest {\n+\n+    public static class InitializingClass {\n+        static {\n+            if (true) { //enable throwing of an exception in a static initialization block\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+\n+    @Test(expected = ClassNotFoundException.class) //thrown when class does not exist\n+    public void givenNonExistingClass_whenUsingForName_classNotFound() throws ClassNotFoundException {", "originalCommit": "18a08cedd9b5e1dcb608063086751c6024bcd3b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMwODg2MQ==", "url": "https://github.com/eugenp/tutorials/pull/9959#discussion_r485308861", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenExistingClass_whenUsingForName_noException() throws ClassNotFoundException {\n          \n          \n            \n                public void givenExistingClass_whenUsingForName_thenNoException() throws ClassNotFoundException {", "author": "KevinGilmore", "createdAt": "2020-09-09T03:01:58Z", "path": "core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.checkclassexistence;\n+\n+import org.junit.Test;\n+\n+public class CheckClassExistenceUnitTest {\n+\n+    public static class InitializingClass {\n+        static {\n+            if (true) { //enable throwing of an exception in a static initialization block\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+\n+    @Test(expected = ClassNotFoundException.class) //thrown when class does not exist\n+    public void givenNonExistingClass_whenUsingForName_classNotFound() throws ClassNotFoundException {\n+        Class.forName(\"class.that.does.not.exist\");\n+    }\n+\n+    @Test\n+    public void givenExistingClass_whenUsingForName_noException() throws ClassNotFoundException {", "originalCommit": "18a08cedd9b5e1dcb608063086751c6024bcd3b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMwODkwNw==", "url": "https://github.com/eugenp/tutorials/pull/9959#discussion_r485308907", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenInitializingClass_whenUsingForName_initializationError() throws ClassNotFoundException {\n          \n          \n            \n                public void givenInitializingClass_whenUsingForName_thenInitializationError() throws ClassNotFoundException {", "author": "KevinGilmore", "createdAt": "2020-09-09T03:02:12Z", "path": "core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.checkclassexistence;\n+\n+import org.junit.Test;\n+\n+public class CheckClassExistenceUnitTest {\n+\n+    public static class InitializingClass {\n+        static {\n+            if (true) { //enable throwing of an exception in a static initialization block\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+\n+    @Test(expected = ClassNotFoundException.class) //thrown when class does not exist\n+    public void givenNonExistingClass_whenUsingForName_classNotFound() throws ClassNotFoundException {\n+        Class.forName(\"class.that.does.not.exist\");\n+    }\n+\n+    @Test\n+    public void givenExistingClass_whenUsingForName_noException() throws ClassNotFoundException {\n+        Class.forName(\"java.lang.String\");\n+    }\n+\n+    @Test(expected = ExceptionInInitializerError.class) //thrown when exception occurs inside of a static initialization block\n+    public void givenInitializingClass_whenUsingForName_initializationError() throws ClassNotFoundException {", "originalCommit": "18a08cedd9b5e1dcb608063086751c6024bcd3b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMwODk2Mw==", "url": "https://github.com/eugenp/tutorials/pull/9959#discussion_r485308963", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenInitializingClass_whenUsingForNameWithoutInitialization_noException() throws ClassNotFoundException {\n          \n          \n            \n                public void givenInitializingClass_whenUsingForNameWithoutInitialization_thenNoException() throws ClassNotFoundException {", "author": "KevinGilmore", "createdAt": "2020-09-09T03:02:27Z", "path": "core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.checkclassexistence;\n+\n+import org.junit.Test;\n+\n+public class CheckClassExistenceUnitTest {\n+\n+    public static class InitializingClass {\n+        static {\n+            if (true) { //enable throwing of an exception in a static initialization block\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+\n+    @Test(expected = ClassNotFoundException.class) //thrown when class does not exist\n+    public void givenNonExistingClass_whenUsingForName_classNotFound() throws ClassNotFoundException {\n+        Class.forName(\"class.that.does.not.exist\");\n+    }\n+\n+    @Test\n+    public void givenExistingClass_whenUsingForName_noException() throws ClassNotFoundException {\n+        Class.forName(\"java.lang.String\");\n+    }\n+\n+    @Test(expected = ExceptionInInitializerError.class) //thrown when exception occurs inside of a static initialization block\n+    public void givenInitializingClass_whenUsingForName_initializationError() throws ClassNotFoundException {\n+        Class.forName(\"com.baeldung.checkclassexistence.CheckClassExistenceUnitTest$InitializingClass\");\n+    }\n+\n+    @Test\n+    public void givenInitializingClass_whenUsingForNameWithoutInitialization_noException() throws ClassNotFoundException {", "originalCommit": "18a08cedd9b5e1dcb608063086751c6024bcd3b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b43b20aa9bee13a70c623129cd456eb6409c625c", "url": "https://github.com/eugenp/tutorials/commit/b43b20aa9bee13a70c623129cd456eb6409c625c", "message": "Update core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java\n\nCo-authored-by: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-09-09T13:18:38Z", "type": "commit"}, {"oid": "47c6aaf7cd195b2227ac8b9a714acacf74b38fd0", "url": "https://github.com/eugenp/tutorials/commit/47c6aaf7cd195b2227ac8b9a714acacf74b38fd0", "message": "Update core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java\n\nCo-authored-by: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-09-09T13:18:46Z", "type": "commit"}, {"oid": "0513be3730e5fd3a5a95f4530a32faf8c7724da2", "url": "https://github.com/eugenp/tutorials/commit/0513be3730e5fd3a5a95f4530a32faf8c7724da2", "message": "Update core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java\n\nCo-authored-by: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-09-09T13:18:51Z", "type": "commit"}, {"oid": "3ac474edcf2a2769ef863f1969756965c8682424", "url": "https://github.com/eugenp/tutorials/commit/3ac474edcf2a2769ef863f1969756965c8682424", "message": "Update core-java-modules/core-java-lang-3/src/test/java/com/baeldung/checkclassexistence/CheckClassExistenceUnitTest.java\n\nCo-authored-by: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-09-09T13:18:57Z", "type": "commit"}]}