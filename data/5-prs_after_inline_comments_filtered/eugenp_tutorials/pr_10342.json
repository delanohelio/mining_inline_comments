{"pr_number": 10342, "pr_title": "Added changes to show transaction roll back", "pr_createdAt": "2020-12-25T07:01:40Z", "pr_url": "https://github.com/eugenp/tutorials/pull/10342", "timeline": [{"oid": "9f76afc4404d4018f44abfd72c2b5a1a688dd634", "url": "https://github.com/eugenp/tutorials/commit/9f76afc4404d4018f44abfd72c2b5a1a688dd634", "message": "Added changes to show transaction roll back", "committedDate": "2020-12-25T03:36:51Z", "type": "commit"}, {"oid": "97ceb5bf4188a84f187495b6142c26f9f154c6cd", "url": "https://github.com/eugenp/tutorials/commit/97ceb5bf4188a84f187495b6142c26f9f154c6cd", "message": "Removed unwanted method", "committedDate": "2020-12-26T00:44:52Z", "type": "commit"}, {"oid": "54d5253dc28783e50105c37766912b1d7cf56a81", "url": "https://github.com/eugenp/tutorials/commit/54d5253dc28783e50105c37766912b1d7cf56a81", "message": "BAEL-4624: Review comments", "committedDate": "2021-01-04T03:35:55Z", "type": "commit"}, {"oid": "91c847610ea920c319fa8f30538a9e0a2e615465", "url": "https://github.com/eugenp/tutorials/commit/91c847610ea920c319fa8f30538a9e0a2e615465", "message": "Added no roll back example", "committedDate": "2021-01-05T14:47:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMzNjI2NQ==", "url": "https://github.com/eugenp/tutorials/pull/10342#discussion_r552336265", "bodyText": "Let's change the message to \"Throwing exception without rollback\"", "author": "eric-martin", "createdAt": "2021-01-06T02:54:36Z", "path": "persistence-modules/spring-jpa-2/src/main/java/com/baeldung/spring/transaction/CourseService.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.baeldung.spring.transaction;\n+\n+import java.sql.SQLException;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.DataIntegrityViolationException;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.transaction.interceptor.TransactionAspectSupport;\n+\n+@Service\n+public class CourseService {\n+    \n+    @Autowired\n+    private CourseDao courseDao;\n+    \n+    @Transactional\n+    public void createCourseDeclarativeWithRuntimeException(Course course) {\n+        courseDao.create(course);\n+        throw new DataIntegrityViolationException(\"Throwing exception for demoing Rollback!!!\");\n+    }\n+    \n+    @Transactional(rollbackFor = { SQLException.class })\n+    public void createCourseDeclarativeWithCheckedException(Course course) throws SQLException {\n+        courseDao.create(course);\n+        throw new SQLException(\"Throwing exception for demoing Rollback!!!\");\n+    }\n+    \n+    public void createCourseDefaultRatingProgramatic(Course course) {\n+        try {\n+            courseDao.create(course);\n+            throw new DataIntegrityViolationException(\"Throwing exception for demoing Rollback!!!\");\n+        } catch (Exception e) {\n+            TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();\n+        }\n+    }\n+    \n+    @Transactional(noRollbackFor = { SQLException.class })\n+    public void createCourseDeclarativeWithNoRollBack(Course course) throws SQLException {\n+        courseDao.create(course);\n+        throw new SQLException(\"Throwing exception for demoing Rollback!!!\");", "originalCommit": "91c847610ea920c319fa8f30538a9e0a2e615465", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}