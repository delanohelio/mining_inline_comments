{"pr_number": 4112, "pr_title": "Block Forge improvements", "pr_createdAt": "2020-12-25T03:53:18Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/4112", "timeline": [{"oid": "296749d9ffa08a220db10dfef88fed333da56dd5", "url": "https://github.com/Anuken/Mindustry/commit/296749d9ffa08a220db10dfef88fed333da56dd5", "message": "minBlockSize, maxBlockSize, icon", "committedDate": "2020-12-25T03:49:22Z", "type": "commit"}, {"oid": "1fab06ee594a06182d66fc42bca9bb4aff041862", "url": "https://github.com/Anuken/Mindustry/commit/1fab06ee594a06182d66fc42bca9bb4aff041862", "message": "removed fixed size", "committedDate": "2020-12-25T03:50:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTAyMA==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548799020", "bodyText": "I don't see a good reason to remove this; block forges should still be 3x3 by default, as anything smaller wouldn't be particularly useful - I'm not sure if it would even work with the payload system. Likewise with block loaders.", "author": "Anuken", "createdAt": "2020-12-25T04:38:02Z", "path": "core/src/mindustry/world/blocks/experimental/BlockForge.java", "diffHunk": "@@ -18,13 +19,16 @@\n import mindustry.world.blocks.production.*;\n import mindustry.world.consumers.*;\n \n+import static mindustry.Vars.*;\n+\n public class BlockForge extends PayloadAcceptor{\n     public float buildSpeed = 0.4f;\n+    public int minBlockSize = 1;\n+    public int maxBlockSize = 2;\n \n     public BlockForge(String name){\n         super(name);\n \n-        size = 3;", "originalCommit": "1fab06ee594a06182d66fc42bca9bb4aff041862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTMxMg==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548799312", "bodyText": "It allows you to make bigger block forges(T2 or higher) that will craft larger blocks.\n\nI'm not sure if it would even work with the payload system.\n\nWell it is experimental, and besides, in vanilla the only versions will be the 3x3 ones. higher ones are for mods!", "author": "sk7725", "createdAt": "2020-12-25T04:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTc0Ng==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548799746", "bodyText": "I'l commit follow-up PRs if the higher ones misbehave. Also by the same line, you also allow 2x2 or higher conveyors, despite them never working.", "author": "sk7725", "createdAt": "2020-12-25T04:44:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwMDQxNg==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548800416", "bodyText": "It allows you to make bigger block forges(T2 or higher) that will craft larger blocks.\n\nIt changes nothing. Super-constructors run before any user code can interact with the object.", "author": "Anuken", "createdAt": "2020-12-25T04:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwMDg0Mw==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548800843", "bodyText": "It changes nothing. Super-constructors run before any user code can interact with the object.\n\nI literally do not know what that means but ok lemme revert", "author": "sk7725", "createdAt": "2020-12-25T04:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTIyMQ==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548799221", "bodyText": "also these two vars should be on the same line", "author": "Anuken", "createdAt": "2020-12-25T04:39:36Z", "path": "core/src/mindustry/world/blocks/experimental/BlockForge.java", "diffHunk": "@@ -18,13 +19,16 @@\n import mindustry.world.blocks.production.*;\n import mindustry.world.consumers.*;\n \n+import static mindustry.Vars.*;\n+\n public class BlockForge extends PayloadAcceptor{\n     public float buildSpeed = 0.4f;\n+    public int minBlockSize = 1;", "originalCommit": "1fab06ee594a06182d66fc42bca9bb4aff041862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTU0NQ==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548799545", "bodyText": "Done.", "author": "sk7725", "createdAt": "2020-12-25T04:42:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5OTIyMQ=="}], "type": "inlineReview"}, {"oid": "9b020c561f4e19e312c9c50476c5d4b7c7a84758", "url": "https://github.com/Anuken/Mindustry/commit/9b020c561f4e19e312c9c50476c5d4b7c7a84758", "message": "same line", "committedDate": "2020-12-25T04:41:48Z", "type": "commit"}, {"oid": "24fa473cc86e4adf28d97b726afed33a35f81c29", "url": "https://github.com/Anuken/Mindustry/commit/24fa473cc86e4adf28d97b726afed33a35f81c29", "message": "revert to 3", "committedDate": "2020-12-25T04:54:21Z", "type": "commit"}, {"oid": "e75518891d5e63519ee555014a7f91117a3c9f42", "url": "https://github.com/Anuken/Mindustry/commit/e75518891d5e63519ee555014a7f91117a3c9f42", "message": "I almost forgot", "committedDate": "2020-12-25T04:55:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDk0OQ==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r548894949", "bodyText": "\ud83d\udc40", "author": "Quezler", "createdAt": "2020-12-25T17:23:43Z", "path": "core/src/mindustry/world/blocks/experimental/BlockLoader.java", "diffHunk": "@@ -21,7 +21,7 @@\n \n     public BlockLoader(String name){\n         super(name);\n-\n+ ", "originalCommit": "e75518891d5e63519ee555014a7f91117a3c9f42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA1NTI4Mg==", "url": "https://github.com/Anuken/Mindustry/pull/4112#discussion_r549055282", "bodyText": "\ud83d\udc40", "author": "sk7725", "createdAt": "2020-12-27T02:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDk0OQ=="}], "type": "inlineReview"}]}