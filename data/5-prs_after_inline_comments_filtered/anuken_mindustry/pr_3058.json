{"pr_number": 3058, "pr_title": "v5 Javelin Movement Lightning Ability", "pr_createdAt": "2020-10-22T04:06:27Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/3058", "timeline": [{"oid": "43d1f363e56cd64026f17bc21ee2a43255f767b2", "url": "https://github.com/Anuken/Mindustry/commit/43d1f363e56cd64026f17bc21ee2a43255f767b2", "message": "Lightning Ability", "committedDate": "2020-10-22T02:12:24Z", "type": "commit"}, {"oid": "2dd234d96029f871fa5130b1024a61608b901d34", "url": "https://github.com/Anuken/Mindustry/commit/2dd234d96029f871fa5130b1024a61608b901d34", "message": "oopeth", "committedDate": "2020-10-22T02:32:29Z", "type": "commit"}, {"oid": "0bd07866d8bdcd427fdd684f502d7b49914506c8", "url": "https://github.com/Anuken/Mindustry/commit/0bd07866d8bdcd427fdd684f502d7b49914506c8", "message": "m hm", "committedDate": "2020-10-22T02:51:32Z", "type": "commit"}, {"oid": "50410be90a971b0089b7ba07b503ab33f731b6a0", "url": "https://github.com/Anuken/Mindustry/commit/50410be90a971b0089b7ba07b503ab33f731b6a0", "message": "Define color instead of based on team", "committedDate": "2020-10-22T04:33:57Z", "type": "commit"}, {"oid": "ed2825b0d9c49d023b73b0f1ccd0506a9f25a30f", "url": "https://github.com/Anuken/Mindustry/commit/ed2825b0d9c49d023b73b0f1ccd0506a9f25a30f", "message": "doot", "committedDate": "2020-10-22T04:37:52Z", "type": "commit"}, {"oid": "e7b6013d8d704337fcfef2c819801827726e38f8", "url": "https://github.com/Anuken/Mindustry/commit/e7b6013d8d704337fcfef2c819801827726e38f8", "message": "doot", "committedDate": "2020-10-22T04:39:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4NDQ2Nw==", "url": "https://github.com/Anuken/Mindustry/pull/3058#discussion_r509884467", "bodyText": "Is this constructor really needed?", "author": "summetdev", "createdAt": "2020-10-22T05:15:05Z", "path": "core/src/mindustry/entities/abilities/MovementLightningAbility.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package mindustry.entities.abilities;\n+\n+import arc.graphics.*;\n+import arc.math.*;\n+import arc.util.*;\n+import arc.audio.*;\n+import mindustry.content.*;\n+import mindustry.entities.*;\n+import mindustry.gen.*;\n+\n+public class MovementLightningAbility extends Ability{\n+    public float damage = 35f, reload = 0.15f;\n+    public int length = 12;\n+    public float minSpeed = 0.8f, maxSpeed = 1.2f;\n+    public Effect shootEffect = Fx.sparkShoot;\n+    public Sound shootSound = Sounds.spark;\n+    public Color color = Color.valueOf(\"a9d8ff\");\n+    \n+    MovementLightningAbility(){}", "originalCommit": "e7b6013d8d704337fcfef2c819801827726e38f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwMTEyNg==", "url": "https://github.com/Anuken/Mindustry/pull/3058#discussion_r509901126", "bodyText": "Well, The blank constructor is found in the other ability .javas.", "author": "MEEPofFaith", "createdAt": "2020-10-22T06:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4NDQ2Nw=="}], "type": "inlineReview"}, {"oid": "da3c11a20120982be081072b31089c70e4fc13da", "url": "https://github.com/Anuken/Mindustry/commit/da3c11a20120982be081072b31089c70e4fc13da", "message": "Comments", "committedDate": "2020-10-22T06:14:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1MzkxMA==", "url": "https://github.com/Anuken/Mindustry/pull/3058#discussion_r510153910", "bodyText": "Yes, I can see that the variable is called \"shootEffect\", you don't need to write \"Shoot effect\" above it. Either add more descriptive comments (\"effect created at unit position when shooting\"), or don't add anything. Same for the sound.", "author": "Anuken", "createdAt": "2020-10-22T13:18:32Z", "path": "core/src/mindustry/entities/abilities/MovementLightningAbility.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package mindustry.entities.abilities;\n+\n+import arc.graphics.*;\n+import arc.math.*;\n+import arc.util.*;\n+import arc.audio.*;\n+import mindustry.content.*;\n+import mindustry.entities.*;\n+import mindustry.gen.*;\n+\n+public class MovementLightningAbility extends Ability{\n+    //Lightning damage\n+    public float damage = 35f;\n+    //Ticks between firing\n+    public float reload = 15f;\n+    //Length of lightning\n+    public int length = 12;\n+    //Speeds for when to start lightninging and when to stop getting faster\n+    public float minSpeed = 0.8f, maxSpeed = 1.2f;\n+    //Shoot effect\n+    public Effect shootEffect = Fx.sparkShoot;", "originalCommit": "da3c11a20120982be081072b31089c70e4fc13da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5203d17910840c911eb9ae10b2793fcac41b10bf", "url": "https://github.com/Anuken/Mindustry/commit/5203d17910840c911eb9ae10b2793fcac41b10bf", "message": "Comment stuff", "committedDate": "2020-10-22T22:18:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgzMDkzNw==", "url": "https://github.com/Anuken/Mindustry/pull/3058#discussion_r513830937", "bodyText": "This isn't correct. \"Ticks between firing\" is not what reload is. For example, if reload = 15, this will happen every frame, because scl = 1 (at max sped) and 15/10 > 1.", "author": "Anuken", "createdAt": "2020-10-28T23:58:38Z", "path": "core/src/mindustry/entities/abilities/MovementLightningAbility.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package mindustry.entities.abilities;\n+\n+import arc.graphics.*;\n+import arc.math.*;\n+import arc.util.*;\n+import arc.audio.*;\n+import mindustry.content.*;\n+import mindustry.entities.*;\n+import mindustry.gen.*;\n+\n+public class MovementLightningAbility extends Ability{\n+    //Lightning damage\n+    public float damage = 35f;\n+    //Ticks between firing\n+    public float reload = 15f;\n+    //Length of the lightning\n+    public int length = 12;\n+    //Speeds for when to start lightninging and when to stop getting faster\n+    public float minSpeed = 0.8f, maxSpeed = 1.2f;\n+    //Lightning Color\n+    public Color color = Color.valueOf(\"a9d8ff\");\n+    \n+    public Effect shootEffect = Fx.sparkShoot;\n+    public Sound shootSound = Sounds.spark;\n+    \n+    MovementLightningAbility(){}\n+    \n+    public MovementLightningAbility(float damage, int length, float reload, float minSpeed, float maxSpeed, Color color){\n+        this.damage = damage;\n+        this.length = length;\n+        this.reload = reload;\n+        this.minSpeed = minSpeed;\n+        this.maxSpeed = maxSpeed;\n+        this.color = color;\n+    }\n+    \n+    @Override\n+    public void update(Unit unit){\n+        float scl = Mathf.clamp((unit.vel().len() - minSpeed) / (maxSpeed - minSpeed));\n+        if(Mathf.chance(Time.delta * (reload/10 * scl))){", "originalCommit": "5203d17910840c911eb9ae10b2793fcac41b10bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a14ae1bdf8d167621840586c1c52ced177d3c8b5", "url": "https://github.com/Anuken/Mindustry/commit/a14ae1bdf8d167621840586c1c52ced177d3c8b5", "message": "Lightning chance fix.", "committedDate": "2020-10-29T04:00:24Z", "type": "commit"}]}