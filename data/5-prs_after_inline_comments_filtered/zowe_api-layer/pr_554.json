{"pr_number": 554, "pr_title": "Catalog health status depends on authorization service availability", "pr_createdAt": "2020-03-12T16:04:26Z", "pr_url": "https://github.com/zowe/api-layer/pull/554", "timeline": [{"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "url": "https://github.com/zowe/api-layer/commit/8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "message": "Minor fix and tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-12T16:07:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyOTM3OQ==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391729379", "bodyText": "Use  the given_when_then convention if possible for all the new tests", "author": "taban03", "createdAt": "2020-03-12T16:10:49Z", "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczNTY1MA==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391735650", "bodyText": "My bad, I am on it.", "author": "cZikos", "createdAt": "2020-03-12T16:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyOTM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMzA1OA==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391733058", "bodyText": "Not sure, should it be debug?\nConsider maybe using   the already existing message\n- key: org.zowe.apiml.security.zosmfInstanceNotFound number: ZWEAG108 with apimlLog.log", "author": "taban03", "createdAt": "2020-03-12T16:16:30Z", "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){\n+            authServiceId = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_ID);\n+            authServiceProvider = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_PROVIDER);\n+        }\n+        boolean authServiceUp = false;\n+        try {\n+            if (authServiceProvider.equalsIgnoreCase(ZOSMF)) {\n+                authServiceUp = !this.discoveryClient.getInstances(authServiceId).isEmpty();\n+            } else if (authServiceProvider.equalsIgnoreCase(\"dummy\")) {\n+                authServiceUp = true;\n+            }\n+        } catch (AuthenticationServiceException ex) {\n+            log.debug(\"The parameter 'zosmfServiceId' is not configured.\", ex);", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczODMxOA==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391738318", "bodyText": "This is actually not needed anymore, it's a leftover and it does not throw the exception anymore. I will change this.", "author": "cZikos", "createdAt": "2020-03-12T16:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMzA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDE1Nw==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391730157", "bodyText": "Can you move the preparation of the metadata into the small private method?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:12:04Z", "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.UP, builder.build().getStatus());\n+    }\n \n+    @Test\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsDummy() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, \"dummy\");\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n         apiCatalogHealthIndicator.doHealthCheck(builder);\n \n         assertEquals(Status.UP, builder.build().getStatus());\n     }\n \n     @Test\n-    public void testStatusIsDownWhenGatewayIsNotAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(Collections.emptyList());\n+    public void testStatusIsDownWhenGatewayIsAvailableAndProviderIsWrong() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"notzosmf\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.DOWN, builder.build().getStatus());\n+    }\n+\n+    @Test\n+    public void testStatusIsDownWhenGatewayIsAvailableAndProviderIsEmpty() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTA2NQ==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391731065", "bodyText": "Following four lines are duplicates. What about moving them in the private method?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:13:34Z", "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/GatewayHomepageControllerTest.java", "diffHunk": "@@ -120,6 +172,15 @@ public void givenApiCatalogWithEmptyInstances_whenHomePageCalled_thenHomePageMod\n \n     @Test\n     public void givenApiCatalogInstance_whenHomePageCalled_thenHomePageModelShouldContain() {\n+        ServiceInstance authserviceInstance = new DefaultServiceInstance(\"instanceId\", \"serviceId\",\n+            \"host\", 10000, true);\n+        when(discoveryClient.getInstances(\"zosmf\")).thenReturn(", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTY4Mw==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391731683", "bodyText": "Is it safe to strictly link to specific authentication provider?\nIn future plans we should support SSO, wouldn't this have impact here?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:14:26Z", "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0ODg5Mw==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r392848893", "bodyText": "I see that this is just a link to configuration. As such this is going to be fine.\nWhen I was going through the code, I was confused why add these parameters when there are already the parameters:\napiml.security.auth.provider\napiml.security.auth.zosmfServiceId", "author": "balhar-jakub", "createdAt": "2020-03-16T08:23:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMjE1MQ==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391732151", "bodyText": "Would it be possible to modify to remove the duplicities and deep chains?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:15:13Z", "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){\n+            authServiceId = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_ID);\n+            authServiceProvider = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_PROVIDER);\n+        }", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMjcyNg==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391732726", "bodyText": "Would it be possible to move the check for whether authorization is up at least to separate private function?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:16:01Z", "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMzgzNQ==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391733835", "bodyText": "There is a duplication with previous test. Move to private method?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:17:37Z", "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.UP, builder.build().getStatus());\n+    }\n \n+    @Test\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsDummy() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, \"dummy\");\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczNDQ1OA==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391734458", "bodyText": "Few lines duplication with next method. Maybe extract to small private method?", "author": "balhar-jakub", "createdAt": "2020-03-12T16:18:36Z", "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/GatewayHomepageControllerTest.java", "diffHunk": "@@ -103,8 +103,60 @@ public void givenApiCatalogWithNullInstances_whenHomePageCalled_thenHomePageMode\n         assertThat(actualModelMap, not(hasKey(\"catalogLink\")));\n     }\n \n+    @Test\n+    public void givenApiCatalogInstanceWithEmptyAuthService_whenHomePageCalled_thenHomePageModelShouldBeReportedDown() {\n+        Map<String, String> metadataMap = new HashMap<>();\n+        metadataMap.put(\"apiml.routes.ui_v1.gatewayUrl\", \"ui/v1\");\n+        metadataMap.put(\"apiml.routes.ui_v1.serviceUrl\", \"/apicatalog\");\n+        ServiceInstance serviceInstance = new DefaultServiceInstance(\"instanceId\", \"serviceId\",\n+            \"host\", 10000, true, metadataMap);\n+\n+        when(discoveryClient.getInstances(\"apicatalog\")).thenReturn(Arrays.asList(serviceInstance));\n+        when(discoveryClient.getInstances(\"zosmf\")).thenReturn(Collections.EMPTY_LIST);\n+\n+        authConfigurationProperties.setProvider(\"zosmf\");", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDQ0Mw==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391800443", "bodyText": "How about replace this with:\nboolean gatewayUp = !this.discoveryClient.getInstances(gatewayServiceId).isEmpty();\nif (gatewayUp ) {\nBecause below we use the same check, in line 55.", "author": "arxioly", "createdAt": "2020-03-12T18:05:15Z", "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){", "originalCommit": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4MTM3NQ==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391981375", "bodyText": "I merged the two logic checks.", "author": "cZikos", "createdAt": "2020-03-13T01:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMzQwMw==", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r392303403", "bodyText": "Thanks!", "author": "arxioly", "createdAt": "2020-03-13T15:35:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDQ0Mw=="}], "type": "inlineReview"}, {"oid": "242727b1c69d700772266c63d1e12a6c3f4c17ff", "url": "https://github.com/zowe/api-layer/commit/242727b1c69d700772266c63d1e12a6c3f4c17ff", "message": "revert changes of catalog health status\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-16T13:26:32Z", "type": "forcePushed"}, {"oid": "f43333374bb43d1ae1f7888a385ba966b72a50d2", "url": "https://github.com/zowe/api-layer/commit/f43333374bb43d1ae1f7888a385ba966b72a50d2", "message": "Link authorization service availability with api catalog availability on Gateway Controller (+ Tests)\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:53Z", "type": "commit"}, {"oid": "8a968cb4d45a5496bb2b6a9b1b1bdc0a7f2e88f5", "url": "https://github.com/zowe/api-layer/commit/8a968cb4d45a5496bb2b6a9b1b1bdc0a7f2e88f5", "message": "Link authorization service health status with api catalog\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:53Z", "type": "commit"}, {"oid": "c23a259ea09084e6d158ff212d25b5330c3fc81f", "url": "https://github.com/zowe/api-layer/commit/c23a259ea09084e6d158ff212d25b5330c3fc81f", "message": "Minor fix and tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "6b8c1afc33eddba63e0edee31f36a599d9872e5f", "url": "https://github.com/zowe/api-layer/commit/6b8c1afc33eddba63e0edee31f36a599d9872e5f", "message": "clear up health indicator code\nrestore zosmf-sample.yml_\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "320966650314d86259e3b7753888382106cf7a9d", "url": "https://github.com/zowe/api-layer/commit/320966650314d86259e3b7753888382106cf7a9d", "message": "Simplify the tests and remove duplicities\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "2e088fe1d8cc3a1d29dd2a0eb70dd9e0aa64de98", "url": "https://github.com/zowe/api-layer/commit/2e088fe1d8cc3a1d29dd2a0eb70dd9e0aa64de98", "message": "Remove duplicates in tests.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "a825324626f826827c7b01a49fe389647ee9d752", "url": "https://github.com/zowe/api-layer/commit/a825324626f826827c7b01a49fe389647ee9d752", "message": "Improve style\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "6bbf00a2a6b74a4c22a0c91ee09a2b415188d020", "url": "https://github.com/zowe/api-layer/commit/6bbf00a2a6b74a4c22a0c91ee09a2b415188d020", "message": "remove non thrown exception test\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "0ec2a25dda82f6e2be6c5c391b4d53c394c55649", "url": "https://github.com/zowe/api-layer/commit/0ec2a25dda82f6e2be6c5c391b4d53c394c55649", "message": "revert changes of catalog health status\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "c462cedbebc5e736ead07c417e36468e670695ec", "url": "https://github.com/zowe/api-layer/commit/c462cedbebc5e736ead07c417e36468e670695ec", "message": "fix unit tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "a3a7c0aef6421b227b8df92fa7d29f367b69043b", "url": "https://github.com/zowe/api-layer/commit/a3a7c0aef6421b227b8df92fa7d29f367b69043b", "message": "Unify approach to hasItems\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "commit"}, {"oid": "a3a7c0aef6421b227b8df92fa7d29f367b69043b", "url": "https://github.com/zowe/api-layer/commit/a3a7c0aef6421b227b8df92fa7d29f367b69043b", "message": "Unify approach to hasItems\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-03-17T08:43:54Z", "type": "forcePushed"}, {"oid": "bb4fee6f38b0ed31755100bc443b2530f499b061", "url": "https://github.com/zowe/api-layer/commit/bb4fee6f38b0ed31755100bc443b2530f499b061", "message": "Merge branch 'master' into ptivate/DE434638/link_catalog_authService_availability", "committedDate": "2020-03-17T09:46:07Z", "type": "commit"}]}