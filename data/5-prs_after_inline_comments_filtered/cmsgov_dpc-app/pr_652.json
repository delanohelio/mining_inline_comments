{"pr_number": 652, "pr_title": "add ability to configure practitioner limit per environment", "pr_createdAt": "2020-02-26T15:08:49Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/652", "timeline": [{"oid": "107306e8ad1d4d3913ccd9c4de2d52715494f145", "url": "https://github.com/CMSgov/dpc-app/commit/107306e8ad1d4d3913ccd9c4de2d52715494f145", "message": "add ability to configure practitioner limit per environment", "committedDate": "2020-02-26T11:18:51Z", "type": "commit"}, {"oid": "245832461f44bb52e5afa0df181d6ed7e229a0fe", "url": "https://github.com/CMSgov/dpc-app/commit/245832461f44bb52e5afa0df181d6ed7e229a0fe", "message": "update swagger annotations", "committedDate": "2020-02-26T15:05:08Z", "type": "commit"}, {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075", "url": "https://github.com/CMSgov/dpc-app/commit/196e392c9de781b1a48dbf2daba0bce45a3a0075", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-02-26T15:09:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384589989", "bodyText": "Can we put a javax validation on this property? Add the null check at startup rather than on each resource call?", "author": "nickrobison-usds", "createdAt": "2020-02-26T15:59:54Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/DPCAttributionConfiguration.java", "diffHunk": "@@ -43,6 +43,8 @@\n     @JsonProperty(\"swagger\")\n     private SwaggerBundleConfiguration swaggerBundleConfiguration;\n \n+    private Integer providerLimit;", "originalCommit": "196e392c9de781b1a48dbf2daba0bce45a3a0075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NjcyNw==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384646727", "bodyText": "Wouldn\u2019t that make it required to always define it in the configuration file?  I thought in some environments we didn\u2019t want to have a limit.", "author": "MrBilnon", "createdAt": "2020-02-26T17:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODU0OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384708549", "bodyText": "Ah yes, that makes sense. Ignore me!", "author": "nickrobison-usds", "createdAt": "2020-02-26T19:20:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384638489", "bodyText": "I'm thinking more about the 304 return code, I'm wondering if it would more sense to return a 429 or a 422 error, not sure 304 is very informative. Thoughts @DeirdreHolub @EmBh?", "author": "nickrobison-usds", "createdAt": "2020-02-26T17:12:20Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")", "originalCommit": "196e392c9de781b1a48dbf2daba0bce45a3a0075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2NzY2NQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384667665", "bodyText": "Personally, I think a 429 should only be used if you are talking about rate limits, not sure if this would qualify as a rate limiting procedure. I\u2019d be more inclined towards 422 if 304 is not acceptable.", "author": "MrBilnon", "createdAt": "2020-02-26T18:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMjE3MQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r385812171", "bodyText": "Ok, I think 422 would work. Thoughts, @EmBh @DeirdreHolub", "author": "nickrobison-usds", "createdAt": "2020-02-28T17:03:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4MDYxNQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r386480615", "bodyText": "Agree on using 422.", "author": "em1", "createdAt": "2020-03-02T15:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTAzNg==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384639036", "bodyText": "This list could get really large in the future, I wonder if it would make sense to add a new method to the DAO to return a count, rather than all the resources themselves?", "author": "nickrobison-usds", "createdAt": "2020-02-26T17:13:12Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")\n     })\n     public Response submitProvider(Practitioner provider) {\n \n         final ProviderEntity entity = this.converter.fromFHIR(ProviderEntity.class, provider);\n-        final List<ProviderEntity> existingProviders = this.dao.getProviders(null, entity.getProviderNPI(), entity.getOrganization().getId());\n-        if (existingProviders.isEmpty()) {\n+        final List<ProviderEntity> existingProvidersByOrganization = this.dao.getProviders(null, null, entity.getOrganization().getId());", "originalCommit": "196e392c9de781b1a48dbf2daba0bce45a3a0075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NzEzOA==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384647138", "bodyText": "Yea that makes sense", "author": "MrBilnon", "createdAt": "2020-02-26T17:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTI1NQ==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384639255", "bodyText": "If we add the NonNull annotation to the config object, we can avoid the null check here.", "author": "nickrobison-usds", "createdAt": "2020-02-26T17:13:33Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")\n     })\n     public Response submitProvider(Practitioner provider) {\n \n         final ProviderEntity entity = this.converter.fromFHIR(ProviderEntity.class, provider);\n-        final List<ProviderEntity> existingProviders = this.dao.getProviders(null, entity.getProviderNPI(), entity.getOrganization().getId());\n-        if (existingProviders.isEmpty()) {\n+        final List<ProviderEntity> existingProvidersByOrganization = this.dao.getProviders(null, null, entity.getOrganization().getId());\n+        final List<ProviderEntity> existingProvidersByNPI = existingProvidersByOrganization.stream()\n+                .filter(providerEntity -> providerEntity.getProviderNPI().equals(entity.getProviderNPI()))\n+                .collect(Collectors.toList());\n+\n+        if (providerLimit != null && existingProvidersByOrganization.size() >= providerLimit) {", "originalCommit": "196e392c9de781b1a48dbf2daba0bce45a3a0075", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d6427be44304cfebd1b186a7ffbd2655cb630106", "url": "https://github.com/CMSgov/dpc-app/commit/d6427be44304cfebd1b186a7ffbd2655cb630106", "message": "add a count method to dao and use it for determining provider limit", "committedDate": "2020-02-26T19:43:43Z", "type": "commit"}, {"oid": "f64bf11de9b335c774146a8227722cc241646434", "url": "https://github.com/CMSgov/dpc-app/commit/f64bf11de9b335c774146a8227722cc241646434", "message": "Merge remote-tracking branch 'origin/willh/DPC-1083-add-practitioner-limit' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-02-28T16:48:46Z", "type": "commit"}, {"oid": "815868b5ac5eab2cfb4691d71ef1bc0cb1641a16", "url": "https://github.com/CMSgov/dpc-app/commit/815868b5ac5eab2cfb4691d71ef1bc0cb1641a16", "message": "change status code when provider limit is reached", "committedDate": "2020-02-28T19:38:21Z", "type": "commit"}, {"oid": "fd9bb9a90de953693fa56e4ffd9c5905b326c4a4", "url": "https://github.com/CMSgov/dpc-app/commit/fd9bb9a90de953693fa56e4ffd9c5905b326c4a4", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-02-28T19:57:58Z", "type": "commit"}, {"oid": "9dc97c4c94d0f66aaf8080dcdcc2438e7d31bd54", "url": "https://github.com/CMSgov/dpc-app/commit/9dc97c4c94d0f66aaf8080dcdcc2438e7d31bd54", "message": "Update PractitionerResource.java\n\nchange swagger doc", "committedDate": "2020-03-02T15:08:56Z", "type": "commit"}, {"oid": "bc4142fb022d4ae53dd43e5bd1778888cd6a6812", "url": "https://github.com/CMSgov/dpc-app/commit/bc4142fb022d4ae53dd43e5bd1778888cd6a6812", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-03-03T15:19:42Z", "type": "commit"}, {"oid": "e98811935087e1e870e48496b915782885d96121", "url": "https://github.com/CMSgov/dpc-app/commit/e98811935087e1e870e48496b915782885d96121", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-03-05T17:17:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUyODgwNg==", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r388528806", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"<p> If a provider has already registered providers past the provider limit, then an error is thrown\")\n          \n          \n            \n                        \"<p> If an organization has already reached the provider limit, then an error is thrown\")\n          \n      \n    \n    \n  \n\nThis might be a little clearer, since the number should never exceed the limit.", "author": "em1", "createdAt": "2020-03-05T19:56:27Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,28 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then an error is thrown\")", "originalCommit": "e98811935087e1e870e48496b915782885d96121", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba6a341725ae6ef38e0f9c930fc79ce6b7bfafea", "url": "https://github.com/CMSgov/dpc-app/commit/ba6a341725ae6ef38e0f9c930fc79ce6b7bfafea", "message": "Update dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java\n\nCo-Authored-By: Emily Hart <1923441+embh@users.noreply.github.com>", "committedDate": "2020-03-06T15:10:25Z", "type": "commit"}, {"oid": "59a3e914fd8a4eb088ce1f4cec49dd97fa3e4262", "url": "https://github.com/CMSgov/dpc-app/commit/59a3e914fd8a4eb088ce1f4cec49dd97fa3e4262", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-03-06T15:10:57Z", "type": "commit"}, {"oid": "1947b0a404fe07b5ef89b50923e9a16c123a516c", "url": "https://github.com/CMSgov/dpc-app/commit/1947b0a404fe07b5ef89b50923e9a16c123a516c", "message": "Merge branch 'master' into willh/DPC-1083-add-practitioner-limit", "committedDate": "2020-03-16T21:23:23Z", "type": "commit"}]}