{"pr_number": 935, "pr_title": "DPC-557 - add check to make sure _since parameter is not a future date", "pr_createdAt": "2020-07-29T16:02:15Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/935", "timeline": [{"oid": "db89f8927315056919eb1a4176c0bf34618fb236", "url": "https://github.com/CMSgov/dpc-app/commit/db89f8927315056919eb1a4176c0bf34618fb236", "message": "add check to make sure _since parameter is not a future date", "committedDate": "2020-07-21T19:48:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyOTA5NA==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r462429094", "bodyText": "Doesn't _since allow much more precision?  Only considering the day wouldn't allow _since to be set to a time earlier in the day of the query.  There might be cases where this is useful (such as a known data dump, unit tests, etc.).", "author": "dhgreene", "createdAt": "2020-07-29T16:27:13Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -337,6 +339,10 @@ private OffsetDateTime handleSinceQueryParam(String since) {\n         try {\n             var dt = new DateTimeDt();\n             dt.setValueAsString(since);\n+            LocalDate today = LocalDate.now( ZoneOffset.UTC );", "originalCommit": "db89f8927315056919eb1a4176c0bf34618fb236", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2OTI4Mw==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r462469283", "bodyText": "I think the precision is there.  I just named the variable \"today\", maybe should be called rightNow?", "author": "richbraman", "createdAt": "2020-07-29T17:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyOTA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3NTcxNg==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r462475716", "bodyText": "ahh maybe should be LocalDateTime.now().\ni am changing precision", "author": "richbraman", "createdAt": "2020-07-29T17:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyOTA5NA=="}], "type": "inlineReview"}, {"oid": "a7f52d99fee2e8ef34616569a53c9b071a7ab8ca", "url": "https://github.com/CMSgov/dpc-app/commit/a7f52d99fee2e8ef34616569a53c9b071a7ab8ca", "message": "changed since to use more precise data type for comparison", "committedDate": "2020-07-29T20:59:09Z", "type": "commit"}, {"oid": "e7a575480e2c37eb620f3a7a926bf0bf9124ce26", "url": "https://github.com/CMSgov/dpc-app/commit/e7a575480e2c37eb620f3a7a926bf0bf9124ce26", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-16T16:38:53Z", "type": "commit"}, {"oid": "6a649640e5b264ea6733eaaf22c87a1eecf3fdbd", "url": "https://github.com/CMSgov/dpc-app/commit/6a649640e5b264ea6733eaaf22c87a1eecf3fdbd", "message": "Updated _since to use OffsetDateTime, added unit tests", "committedDate": "2020-10-20T21:34:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3NTY4OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r508875689", "bodyText": "Refactor this method to not always return the same value.", "author": "codeclimate", "createdAt": "2020-10-20T22:23:35Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -331,24 +330,15 @@ private Group executeGroupOperation(UUID rosterID, Group groupUpdate, String ope\n         return resources;\n     }\n \n-    /**\n-     * Convert the '_since' {@link QueryParam} to a Date\n-     *\n-     * @param since - {@link String} an instant\n-     * @return - A {@link OffsetDateTime} for this since.\n-     */\n-    private OffsetDateTime handleSinceQueryParam(String since) {\n-        if (StringUtils.isEmpty(since)) {\n+    private OffsetDateTime handleSinceQueryParam(Optional<OffsetDateTimeParam> sinceParam) {", "originalCommit": "6a649640e5b264ea6733eaaf22c87a1eecf3fdbd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3NTY5Mw==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r508875693", "bodyText": "Call \"sinceParam.isPresent()\" before accessing the value.", "author": "codeclimate", "createdAt": "2020-10-20T22:23:35Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -331,24 +330,15 @@ private Group executeGroupOperation(UUID rosterID, Group groupUpdate, String ope\n         return resources;\n     }\n \n-    /**\n-     * Convert the '_since' {@link QueryParam} to a Date\n-     *\n-     * @param since - {@link String} an instant\n-     * @return - A {@link OffsetDateTime} for this since.\n-     */\n-    private OffsetDateTime handleSinceQueryParam(String since) {\n-        if (StringUtils.isEmpty(since)) {\n+    private OffsetDateTime handleSinceQueryParam(Optional<OffsetDateTimeParam> sinceParam) {\n+        if (sinceParam.isEmpty()) {\n             return null;\n         }\n-        // check that _since is a valid time\n-        try {\n-            var dt = new DateTimeDt();\n-            dt.setValueAsString(since);\n-            return dt.getValue().toInstant().atOffset(ZoneOffset.UTC);\n-        } catch (DataFormatException ex) {\n-            throw new BadRequestException(\"'_since' query parameter must be a valid date time value\");\n+        OffsetDateTime now = OffsetDateTime.now(ZoneId.systemDefault());\n+        if (sinceParam.get().get().isAfter(now)){", "originalCommit": "6a649640e5b264ea6733eaaf22c87a1eecf3fdbd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a111aac76180a846c85b48c8261eae6662ef7c13", "url": "https://github.com/CMSgov/dpc-app/commit/a111aac76180a846c85b48c8261eae6662ef7c13", "message": "Fixed code climate issues", "committedDate": "2020-10-20T23:01:40Z", "type": "commit"}, {"oid": "ee1d02054dea55e6889d2ef4f7180ac3e6534dcd", "url": "https://github.com/CMSgov/dpc-app/commit/ee1d02054dea55e6889d2ef4f7180ac3e6534dcd", "message": "Resolved merged conflicts", "committedDate": "2020-10-20T23:37:25Z", "type": "commit"}, {"oid": "8e8a3b0222767d44fc1306e8580137b382ffc451", "url": "https://github.com/CMSgov/dpc-app/commit/8e8a3b0222767d44fc1306e8580137b382ffc451", "message": "Fixed _since parse error message", "committedDate": "2020-10-21T14:32:30Z", "type": "commit"}, {"oid": "6fa27943fa33dad929d7627491ebb0ac7320b581", "url": "https://github.com/CMSgov/dpc-app/commit/6fa27943fa33dad929d7627491ebb0ac7320b581", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-22T07:27:33Z", "type": "commit"}, {"oid": "2f086a14fce9f8be60906933c6bc8a7a8b4c0eed", "url": "https://github.com/CMSgov/dpc-app/commit/2f086a14fce9f8be60906933c6bc8a7a8b4c0eed", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-23T03:27:02Z", "type": "commit"}, {"oid": "eee93c63a40ac669e8855421e8049fa88a360f8e", "url": "https://github.com/CMSgov/dpc-app/commit/eee93c63a40ac669e8855421e8049fa88a360f8e", "message": "Fixed merge issues", "committedDate": "2020-10-23T03:33:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4MzY4Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r510983687", "bodyText": "did you mean to delete the doc string?", "author": "jonfulk", "createdAt": "2020-10-23T15:57:56Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -331,24 +331,19 @@ private Group executeGroupOperation(UUID rosterID, Group groupUpdate, String ope\n         return resources;\n     }\n \n-    /**\n-     * Convert the '_since' {@link QueryParam} to a Date\n-     *\n-     * @param since - {@link String} an instant\n-     * @return - A {@link OffsetDateTime} for this since.\n-     */", "originalCommit": "eee93c63a40ac669e8855421e8049fa88a360f8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NDUxMQ==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r511144511", "bodyText": "Yea, it's a private method and doesn't tell anything more than the signature of the method does. Thought it was distracting.", "author": "MrMorie", "createdAt": "2020-10-23T20:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4MzY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjA3OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r511146079", "bodyText": "makes sense", "author": "jonfulk", "createdAt": "2020-10-23T20:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4MzY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4OTczMw==", "url": "https://github.com/CMSgov/dpc-app/pull/935#discussion_r510989733", "bodyText": "When Will's related PR gets merged, we might want to move this stuff into the setUp method.", "author": "jonfulk", "createdAt": "2020-10-23T16:08:03Z", "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/GroupResourceUnitTest.java", "diffHunk": "@@ -157,4 +171,112 @@ public void testCreateRosterProviderNotFound() {\n         Assertions.assertThrows(WebApplicationException.class, () -> resource.createRoster(organizationPrincipal, provenance, group));\n     }\n \n+    @Test\n+    public void testExportWithValidSinceParam(){\n+        UUID orgId = UUID.randomUUID();\n+        Organization organization = new Organization();\n+        organization.setId(orgId.toString());\n+        OrganizationPrincipal organizationPrincipal = new OrganizationPrincipal(organization);\n+\n+        String groupId = \"123456789\";\n+\n+        //Mock Group\n+        Group group = new Group();\n+        group.setId(groupId);\n+        group.addMember();\n+\n+        IReadExecutable<Group> readExec = Mockito.mock(IReadExecutable.class);\n+        Mockito.when(attributionClient.read().resource(Group.class).withId(new IdType(\"Group\", groupId)).encodedJson()).thenReturn(readExec);\n+        Mockito.when(readExec.execute()).thenReturn(group);\n+\n+        //Mock get bundle\n+        IOperationUntypedWithInput<Bundle> bundleOperation = Mockito.mock(IOperationUntypedWithInput.class);\n+        Mockito.when(attributionClient\n+                .operation()\n+                .onInstance(new IdType(groupId))\n+\n+                .named(\"patients\")\n+                .withParameters(Mockito.any(Parameters.class))\n+                .returnResourceType(Bundle.class)\n+                .useHttpGet()\n+                .encodedJson()).thenReturn(bundleOperation);\n+\n+        Mockito.when(bundleOperation.execute()).thenReturn(new Bundle());\n+        Meta bfdTransactionMeta = new Meta();\n+        Mockito.when(mockBfdClient.requestPatientFromServer(SYNTHETIC_BENE_ID, null).getMeta()).thenReturn(bfdTransactionMeta);\n+", "originalCommit": "eee93c63a40ac669e8855421e8049fa88a360f8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cc0aa2ef745547ffd6d54f575b11e87a385dc9de", "url": "https://github.com/CMSgov/dpc-app/commit/cc0aa2ef745547ffd6d54f575b11e87a385dc9de", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-26T15:32:27Z", "type": "commit"}, {"oid": "8bfb24ded79d3542e3302fa50b029213171d7c1a", "url": "https://github.com/CMSgov/dpc-app/commit/8bfb24ded79d3542e3302fa50b029213171d7c1a", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-28T23:43:37Z", "type": "commit"}, {"oid": "fbf9ab47d8aa6017fa05c771a7e19e11c9bfbc39", "url": "https://github.com/CMSgov/dpc-app/commit/fbf9ab47d8aa6017fa05c771a7e19e11c9bfbc39", "message": "Merge branch 'master' into rb/DPC-557", "committedDate": "2020-10-29T16:19:15Z", "type": "commit"}]}