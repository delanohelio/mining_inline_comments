{"pr_number": 739, "pr_title": "Use pathing jar to shorten command line", "pr_createdAt": "2020-08-10T18:09:24Z", "pr_url": "https://github.com/gluonhq/substrate/pull/739", "timeline": [{"oid": "1139e56fccf457f28b3b5edabb257eeae00cb4df", "url": "https://github.com/gluonhq/substrate/commit/1139e56fccf457f28b3b5edabb257eeae00cb4df", "message": "Use pathing jar to shorten command line", "committedDate": "2020-08-10T11:55:09Z", "type": "commit"}, {"oid": "0e62c6f4a3b05600458b143563141d76f90b193a", "url": "https://github.com/gluonhq/substrate/commit/0e62c6f4a3b05600458b143563141d76f90b193a", "message": "Don\u2019t use URI", "committedDate": "2020-08-10T17:49:52Z", "type": "commit"}, {"oid": "192bf5b1140267d009a07a1014b6c481fdd6d154", "url": "https://github.com/gluonhq/substrate/commit/192bf5b1140267d009a07a1014b6c481fdd6d154", "message": "Use replaceAll", "committedDate": "2020-08-10T18:06:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw==", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468403383", "bodyText": "One small remark. Wouldn't it be better to create the temporary pathing jar file in the directory provided by ProcessPaths.getTmpPath()?", "author": "tiainen", "createdAt": "2020-08-11T08:12:12Z", "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -671,6 +674,28 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n         }\n     }\n \n+    /**\n+     * Shorten the Java classpath with a pathing jar\n+     * @param classpath A string with the classpath of files that will be added to the\n+     *                 pathing jar Class-Path attribute\n+     * @return a String with the path to the created pathing jar\n+     * @throws IOException\n+     */\n+    public static String createPathingJar(String classpath) throws IOException {\n+        Objects.requireNonNull(classpath);\n+        Manifest manifest = new Manifest();\n+        Attributes attributes = manifest.getMainAttributes();\n+        attributes.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attributes.put(Attributes.Name.CLASS_PATH,\n+                classpath.replaceAll(File.pathSeparator, \" \"));\n+        File jarFile = File.createTempFile(\"classpathJar\", \".jar\");", "originalCommit": "192bf5b1140267d009a07a1014b6c481fdd6d154", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyMTE3OQ==", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468421179", "bodyText": "I don't see any difference?\ngvm/tmp is mainly for the native-image's TempDirectory flag. If we want to have it under the gvm build folder (for inspection, for instance), probably better under the gvm/<appname> folder where we add the launcher files?", "author": "jperedadnr", "createdAt": "2020-08-11T08:42:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUyNzI4NQ==", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468527285", "bodyText": "I was thinking about it because the build/target directory is cleaned up more regularly then the system temp directory? In any case, the file size is negligibly small, so it's not really a big issue.", "author": "tiainen", "createdAt": "2020-08-11T12:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw=="}], "type": "inlineReview"}]}