{"pr_number": 487, "pr_title": "Show download progress", "pr_createdAt": "2020-04-01T16:25:42Z", "pr_url": "https://github.com/gluonhq/substrate/pull/487", "timeline": [{"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "url": "https://github.com/gluonhq/substrate/commit/c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "message": "Show download progress", "committedDate": "2020-04-01T16:21:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDYxMg==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401754612", "bodyText": "Add that this might take a long time, and that you can press CTRL-C to stop the process.", "author": "johanvos", "createdAt": "2020-04-01T16:38:53Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -347,38 +346,37 @@ private void downloadJavaFXZip(String osarch) throws IOException {\n                 \"javafxStaticSdk\",\n                 configuration.getJavafxStaticSdkVersion(),\n                 configuration.getTargetTriplet().getOsArch());\n-\n-        Logger.logDebug(\"Process zip javafx done\");\n+        Logger.logInfo(\"JavaFX static libs downloaded successfully\");\n     }\n \n     /**\n      * Crafts Android SDK url and then downloads it \n      * @throws IOException in case anything goes wrong.\n      */\n     private void downloadAndroidSdkZip() throws IOException {\n+        Logger.logInfo(\"Downloading Android SDK...\");", "originalCommit": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3MDcxMw==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401870713", "bodyText": "We show the total size of the file and the current size that's being downloaded so far. Adding another line to tell that this will take a long time sounds redundant to me.", "author": "abhinayagarwal", "createdAt": "2020-04-01T19:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401830345", "bodyText": "This step doesn't use FileOps.downloadFile, and there is no feedback. In my case it takes up to 5 minutes without feedback.\nMight be convenient to use something like SubstrateDispatcher::startNativeCompileTimer?", "author": "jperedadnr", "createdAt": "2020-04-01T18:42:05Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "originalCommit": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMDY4Mg==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402200682", "bodyText": "I have added feedback by adding \".\" every second while the sdkmanager is running. This visual feedback should be enough for the user.", "author": "abhinayagarwal", "createdAt": "2020-04-02T10:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMxODM0Nw==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402318347", "bodyText": "no, a . is not enough. It is actually the most frustrating output one can get, unless you know how many dots are expected.", "author": "johanvos", "createdAt": "2020-04-02T13:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0NjM2MQ==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402346361", "bodyText": "What else would you suggest?", "author": "abhinayagarwal", "createdAt": "2020-04-02T14:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNzAzOQ==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r403037039", "bodyText": "If you don't know how far you are in the download (x%), adding the \"this might take 5 minutes or longer\" is better.", "author": "johanvos", "createdAt": "2020-04-03T14:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2MjIyMg==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r403262222", "bodyText": "Added a message which says, \"Downloading Android NDK and toolchain. It may take several minutes depending on your bandwidth\"", "author": "abhinayagarwal", "createdAt": "2020-04-03T19:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzc5Mw==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401893793", "bodyText": "Rename to Download progress:", "author": "jperedadnr", "createdAt": "2020-04-01T20:36:41Z", "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -526,4 +521,74 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n             oos.writeObject(hashes);\n         }\n     }\n+\n+    /**\n+     * Prints the progress of a file download\n+     */\n+    private static final class ProgressDownloader {\n+        \n+        public static void downloadFile(URL fileUrl, Path filePath) {\n+            new ProgressDownloader(fileUrl, filePath);\n+            System.out.println();\n+        }\n+\n+        private ProgressDownloader(URL fileUrl, Path filePath) {\n+            try (\n+                    ReadableByteChannel rbc = new RBCWrapper(Channels.newChannel(fileUrl.openStream()), contentLength(fileUrl), this);\n+                    FileOutputStream fos = new FileOutputStream(filePath.toFile())) {\n+                fos.getChannel().transferFrom( rbc, 0, Long.MAX_VALUE );\n+            } catch ( Exception e ) {\n+                Logger.logSevere(\"Downloading failed: \" + e.getMessage());\n+            }\n+        }\n+\n+        public void rbcProgressCallback(RBCWrapper rbc) {\n+            System.out.print(\"\\r\" + String.format(\"Download Progress: %.2f / %.2fM\", toMB(rbc.readSoFar), toMB(rbc.expectedSize)));", "originalCommit": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMTQzOQ==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402201439", "bodyText": "Done!", "author": "abhinayagarwal", "createdAt": "2020-04-02T10:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzc5Mw=="}], "type": "inlineReview"}, {"oid": "9d176a88db24a9aff6c21c93a55be35ce4f8a140", "url": "https://github.com/gluonhq/substrate/commit/9d176a88db24a9aff6c21c93a55be35ce4f8a140", "message": "Flush PrintStream after each print", "committedDate": "2020-04-02T10:07:30Z", "type": "commit"}, {"oid": "fe654575f0a389c5939468d3ed013f51449b7572", "url": "https://github.com/gluonhq/substrate/commit/fe654575f0a389c5939468d3ed013f51449b7572", "message": "Downloads via sdkmanager should have feeback", "committedDate": "2020-04-02T10:08:07Z", "type": "commit"}, {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "url": "https://github.com/gluonhq/substrate/commit/3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "message": "Change to string as per feedback", "committedDate": "2020-04-02T10:10:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNDY3Mw==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402214673", "bodyText": "Maybe move this to  ProcessRunner?", "author": "jperedadnr", "createdAt": "2020-04-02T10:35:09Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {", "originalCommit": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNTk1MA==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402215950", "bodyText": "Maybe convenient to set the time as parameter, with default one second.", "author": "jperedadnr", "createdAt": "2020-04-02T10:37:18Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);", "originalCommit": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNzAxMw==", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402217013", "bodyText": "when the process ends, print a new line, otherwise the next log message is printed in the same line after the dots.", "author": "jperedadnr", "createdAt": "2020-04-02T10:39:22Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);\n+            final int result = processRunner.runProcess(processName);\n+            timer.cancel();", "originalCommit": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "54188efdfe97ded2b3a1049a4a56b0de2a0455b3", "url": "https://github.com/gluonhq/substrate/commit/54188efdfe97ded2b3a1049a4a56b0de2a0455b3", "message": "Comment out unused variable", "committedDate": "2020-04-02T14:15:12Z", "type": "commit"}, {"oid": "c27012ad02984be2111f3202c791e56d3d49234b", "url": "https://github.com/gluonhq/substrate/commit/c27012ad02984be2111f3202c791e56d3d49234b", "message": "Move ProcessWithFeedback into ProcessRunner", "committedDate": "2020-04-02T14:33:29Z", "type": "commit"}, {"oid": "fea5c125ff494caa1c2c5be0f6661bb391e71a49", "url": "https://github.com/gluonhq/substrate/commit/fea5c125ff494caa1c2c5be0f6661bb391e71a49", "message": "Improve logger message for NDK and toolchain download", "committedDate": "2020-04-03T14:29:49Z", "type": "commit"}]}