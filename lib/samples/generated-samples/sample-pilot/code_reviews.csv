all-of-us/workbench	3065	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNzMzOA==	Naming nit: for consistency w/ the class name, prefer 'workspaceService' as the member variable name.	False
all-of-us/workbench	3040	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MDYxMw==	nit: I'd prefer ServerException to a RuntimeException, here and below	True
all-of-us/workbench	3091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMzc3OA==	nit: It takes a bit of getting used to, but I think it's cleaner to do Optional.ofNullable(dbDemographicSurvey.getGenderIdentityEnumList())     .map(g -> g.stream().map(RdrExportEnums::genderToRdrGender).collect(Collectors.toList()))     .ifPresent(researcher::setGender);  if, null, and != should generally be minimized IMO.	True
all-of-us/workbench	3887	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY4ODYzNg==	When renaming a concept set it calls this method and conceptSet.getConcepts throws a null pointer exception. Please wrap this in a null/empty check                         Suggested change                                                                                                    validateConceptSet(                                                        dbConceptSet,                                                        conceptSet.getConcepts().stream()                                                            .map(concept -> concept.getConceptId())                                                            .collect(Collectors.toList()));                                                   if (!CollectionUtils.isEmpty(conceptSet.getConcepts())) {                                                      validateConceptSet(                                                          dbConceptSet,                                                          conceptSet.getConcepts().stream()                                                              .map(concept -> concept.getConceptId())                                                              .collect(Collectors.toList()));                                                    }	False
alluxio/alluxio	11513	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NTEyNg==	Suggested change                                                                                                                    mMountTable.checkUnderWritableMountPoint(childPath.getUri());                                                                  mMountTable.checkUnderWritableMountPoint(childPath.getUri());                                 checkstyle is complaining with: error: 'if' child have incorrect indentation level 20, expected level should be 18.	False
ankidroid/anki-android	6372	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NjM0Nw==	nit                         Suggested change                                                                                                                    int startIndex = mCheckedCards.isEmpty() ? 0: mCheckedCards.iterator().next().getPosition();                                                                    int startIndex = mCheckedCards.isEmpty() ? 0 : mCheckedCards.iterator().next().getPosition();	True
ankidroid/anki-android	6750	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTQwMw==	nit: I feel a static method accepting a card and enum value, returning a class (name doesn't matter) would be better than a constructor here  Accepting a card makes the intent clear - it's the card that we care about, and getting the siblings is an implementation detail The intent of the method (revertToProvidedState) won't change, and that provides more meaning than the name of the class	True
ankidroid/anki-android	6027	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4MDgyMA==	oh wait - I forgot this - this happened to @david-allison-1 also, you should look in Android Studio preferences and set which packages to include in suggestions. The NotNull annotation should come from android.annotations package, not the jetbrains internal package (they are the company that makes IntelliJ IDE which is what Android Studio is based on - good people, but I want to depend on the android libraries not jetbrains)	True
anuken/mindustry	3267	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2OTMxMw==	Suggested change                                                                                                        Cons<String>[] rebuild = new Cons[]{null};                                                        Table[] pane = new Table[]{null};                                                        Cons<String>[] rebuild = {null};                                                        Table[] pane = {null};	False
apache/accumulo	1653	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAwMDc1OA==	Suggested change                                                                                                        TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);                                                        tabletMutator.deleteSuspension();                                                        tabletMutator.mutate();                                                        tabletsMutator.mutateTablet(tls.extent).deleteSuspension().mutate();	False
apache/beam	11749	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNjU5NQ==	Suggested change                                                                                                 * <h4>Initial Split</h4>                                                 * <h4>Splitting</h4>	False
apache/beam	11339	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjk3MA==	Suggested change                                                                                                 * {@link FhirIO.Read.Result} where one can call {@link Read.Result#getResources()} to retrieved a                                                 * {@link FhirIO.Read.Result} where one can call {@link Read.Result#getResources()} to retrieve a	False
apache/beam	12169	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0MDg4NQ==	Please avoid abbreviation here. I recommend userDefinedTableValuedFunctions (sql is probably redundant in this case). Also consider adding an explanatory comment.	False
apache/beam	13319	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NjkyMQ==	Nit: it might be better to list the BigTable reference: https://cloud.google.com/bigtable/docs/reference/data/rpc/google.bigtable.v2	True
apache/beam	11478	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNDU0MA==	nit: @VisibleForTesting	False
apache/beam	12232	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5MjQyNA==	Nit: name it PartitionKeySchema might be more readable.	True
apache/beam	10702	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzNzE5Mg==	nit: maybe this should be first and should read The type of restrictions, {@code R}, used in all restriction methods must be the same. Then you can reference R elsewhere without having to define it again. Up to you, just an idea I had that may increase clarity	True
apache/dolphinscheduler	3315	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MTI5MA==	Suggested change                                                                                                        if(start == null || end == null){                                                        if(start == null || end == null) {	False
apache/druid	10401	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyNDI0Nw==	If I'm reading this correctly, this change isn't really needed in this PR, but it's some consolidation that was done across the various aggregator factories	True
apache/druid	9384	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MjU1Mw==	nit: use (s1, s2) -> Integer.compare(s2.length(), s1.length()) instead. Less code to read / maintain.	True
apache/flink	10832	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3MzE5MA==	Suggested change                                                                                                  * is done immediately.                                                  * is completed immediately.	False
apache/flink	13175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NzQxOA==	I don't really see how @NicoK 's suggestion makes it clearer that it could also be a savepoint. My suggestion would be to encode the type checkpoint/savepoint into CompletedCheckpoint#toString and just use: LOG.info("Restoring job {} from  {}.", job, latest);. Then the full message would be 8004 [flink-akka.actor.default-dispatcher-3] INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator [] - Restoring job 36681198e38a2c91932eb131f47e3641 from Checkpoint 1 @ 1597663438566 for 36681198e38a2c91932eb131f47e3641 located at file:/var/folders/dm/5xn_h6n9135dwy4j27sr65zh0000gp/T/junit492898918775365121/junit2392379173263601046/checkpoints/36681198e38a2c91932eb131f47e3641/chk-1.  instead of 8004 [flink-akka.actor.default-dispatcher-3] INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator [] - Restoring job 36681198e38a2c91932eb131f47e3641 from checkpoint: Checkpoint 1 @ 1597663438566 for 36681198e38a2c91932eb131f47e3641 located at file:/var/folders/dm/5xn_h6n9135dwy4j27sr65zh0000gp/T/junit492898918775365121/junit2392379173263601046/checkpoints/36681198e38a2c91932eb131f47e3641/chk-1.	True
apache/flink	10736	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NDU0Mg==	nit: it already was -> it was already	True
apache/flink	13735	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk3NzQxMw==	nit: After removing the higher level cache, this field can also be computed eagerly think (as it will be used anyways if the is being object is constructed).	True
apache/flink	11353	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4MDIwMw==	nit:                         Suggested change                                                                                                 private final int minMemMB;                                                 private final int minVcore;                                                 private final int maxMemMB;                                                 private final int maxVcore;                                                 private final int minMemMB;                                                 private final int maxMemMB;                                                 private final int minVcore;                                                 private final int maxVcore;	False
apache/flink	12025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzODI5MQ==	A better way is first super., second do own works. same below.	False
apache/geode	5333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0NTM1NA==	This test name is a little misleading. It might be better as "getOwnerWithWaitReturnsNullIfNotInitializedWithWait"	False
apache/hadoop	2354	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NDcxOA==	as discussed: better to fix DirListingIterator to match RemoteIterator API; we can consider it's failure a bug	False
apache/helix	924	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5MTYxNw==	Nit, just make my point clear: this is kind of redundant, not what I meant. I meant return curSessionId != sessionId && curSessionId != 0;	True
apache/helix	1439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY0Njk3OA==	"default timeout" is not clear enough. Please mention the real timeout here. Maybe use java doc feature to link with the variable would be a good idea. But I'm not sure if it works fine. please have a try.	True
apache/helix	1441	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3OTkyMw==	I suggest covering all the accessor related calls inside the commit(). There should be 3 as I remember.	True
apache/helix	827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2MTM1OA==	The original logic is actually confusing here. Passing an empty new map here is much easier for people to understand. Since it won't change the logic, I suggest you just change it to make it clean : )	True
apache/hive	1275	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3NzcwOQ==	What happens if one of the futures throws the exception? Are the others continue to execute? Will we wait until all of the tasks are finished one way or another? We do not want multiple Cleaning tasks running concurrently on the same partition. Seeing this the same problem might arise with the Initiator too. What do you think @deniskuzZ ?	True
apache/hudi	1210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3MzE5OA==	😃 May be bellow is better: LOG.info("Hoodie consume mode pattern is : {}, mode is : {}", modePropertyName, mode);	True
apache/hudi	1360	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAwOTM4NQ==	it would be good to have a switch to differentiate the cases and refactor each case to different methods for readability. Note that though we only have 'hudi' and 'parquet' for now, there could be more cases in future when needs rise.	True
apache/iceberg	1875	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU0NzE2NQ==	When I suggested using SparkCatalog earlier, I didn't think about how it isn't defined for 2.4. Instead of this check, let's just check whether the catalog property is defined at all. As long as catalogName is non-null, it is a catalog for the purposes of this config. If the catalog doesn't have a valid type or implementation class then loading it will fail. Also, it would be catalogImpl not name because name is the catalog name.	True
apache/iceberg	1221	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMTUzOQ==	I just had an idea for an alternative solution to this. What about detecting that there are no filters and instead returning a value based on the total-records value in snapshot metadata? Usually, estimating stats based on the number of rows and a guess for the size of a row is much better than using the actual size anyway. So if you can get the number of rows and come up with an estimate for the size of each row based on the table schema, then you wouldn't need to disable stats at all.	True
apache/iceberg	1586	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ1Njc4MQ==	Style nit: we typically add an empty line after control flow statements. This removes one and doesn't add one after the new if.	False
apache/iceberg	854	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA4OTczMg==	Would it be simpler to call hasNext in next method instead? like so @Override       public E next() {         if (hasNext()) {           return currentIterator.next();         } else {           throw new NoSuchElementException();         }       }  My understanding is we can keep calling hasNext as many times as we want until we consume that element from the Iterator.	True
apache/iceberg	1098	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4MDUyNA==	nit: Would it make sense to move private classes to the bottom of the file so that people will focus on the main logic?	True
apache/incubator-doris	3063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1NjQyNg==	Suggested change                                                                                                 *      BuildGlobalDict.createHiveIntermediateTable()                                                 *      GlobalDictBuilder.createHiveIntermediateTable()	False
apache/iotdb	1090	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQwNjgyNw==	Recording the failed nodes is one way, but there is a chance that previously down nodes will go back online when the query proceeds, or maybe there is just a temporary network partition that caused the node time out. For example, the query reads data of [1, 100] from node1 and node2, when it is reading 10, node1 fails, but later when it is reading 90, node1 recovers but node2 fails and the current implementation will miss a chance to let the query go on. Such a situation is more common when the query is complicated and time-consuming. So I advise that do not record the visited node, but every time nextDataClient is called, traverse nodes once from the current position and only return null when the traverse ends but no nodes respond.	True
apache/iotdb	2184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5ODEwNA==	Better to use some final static fields to explain this. And is it really necessary to use the numbers from Marker? It is confusing when you have 1 and 4, but there are no 2 and 3.	False
apache/iotdb	818	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzODY2NQ==	Suggested change                                                                                                  TimeSeries next() throws IOException;                                                  TimeSeries nextTimeColumn() throws IOException;	False
apache/iotdb	2113	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5MDIyMQ==	All deviceIds are verified in every loop, which is unnecessary. It would be better to copy deviceIds into another list and remove them once verified, or use a boolean array to indicate whether the deviceId has been verified.	False
apache/jena	759	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwMTk3NA==	This method looks a lot like another method I'd read on this PR. Could they be merged into one and re-used? Or are they doing something different? (Will have another look after submitting the review)	True
apache/kafka	8330	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0MDY1Ng==	prop: Could you explain a bit better what the warning is about? If somebody does not know the code, it is hard to understand what is going on.	False
apache/kafka	8683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NzE3Mw==	nit: I would put connectionSetupTimeoutMaxMs first as it is the expected value. The same applies below.	True
apache/kafka	8589	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgyNjY0Mw==	Suggested change                                                                                                                        "Try set '--force' in the cmdline to force delete active members.");                                                                        + " You can use option '--force' to remove active members from the group.");	False
apache/kafka	8265	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzExMQ==	nit: if {} else {log.trace()}.	True
apache/kafka	8262	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMTY3OQ==	Suggested change                                                                                                     * Assigns task for which one or more caught-up clients exist to one of the caught-up clients.                                                     * Assigns tasks for which one or more caught-up clients exist to one of the caught-up clients.	False
apache/kafka	8478	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyMjU0Nw==	Nice clean, now we catch the exception in the caller.	False
apache/lucene-solr	1234	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMwNDM2OQ==	Suggested change                                                                                                    if ((version >= Lucene80DocValuesFormat.VERSION_BIN_COMPRESSED && entry.numDocsWithField >0)||  entry.minLength < entry.maxLength) {                                                    if ((version >= Lucene80DocValuesFormat.VERSION_BIN_COMPRESSED && entry.numDocsWithField > 0) ||  entry.minLength < entry.maxLength) {	False
apache/lucene-solr	1995	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU1MDk5NQ==	would't it be better to only have one hashmap, returning tuples of replacement and flags? You may use https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#entry-K-V- (e.g. Map.entry(replacement, flag) as a workaround to hold two values as a pair.	False
apache/ozone	503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzMDgzOA==	Suggested change                                                                                                    assertTrue(containers.get(0).equals(containerInfo));                                                    assertEquals(containerInfo, containers.get(0));	True
apache/ozone	1645	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NjA0Ng==	Changing this may break backward compatibility in the Datanode since the value of this constant is written down to and read from the Version file. We can either leave it as it is, or make sure that the writers always use "layoutVersion", and the readers fall back to "layOutVersion" if the default is not present.	False
apache/ozone	1701	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM4NTIzMQ==	NIT: you mean volume?	True
apache/ozone	504	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMzg4NQ==	Looks like checking keyTable is not required here. I feel we can ignore it here, as unnecessary extra DB read for all MPU initate cases.	False
apache/ozone	688	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNjM3Mw==	Nit: Fix typo	False
apache/ozone	1435	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3Mjg2MQ==	Instead of streams, use for loop and compute, as request execution is in hot code path. I see a few recent jira's to not to use streams and helped perf improvement. Can we use good old for loop here?	False
apache/ozone	1694	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxNDA0Mg==	Its better to add debug for CONTAINER_NOT_OPEN as well.	True
apache/pinot	6326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MzY0OA==	This is somewhat confusing to read - why does setup() call something named validate(), instead of setting up the cluster? One has to go to inside validate() to figure out what is going. Perhaps it can be named setupClusterAndValidate(), or something more readable?	True
apache/pinot	5617	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2ODM0NA==	Can you create an issue for this and reference the issue number? It is not clear what needs to be done here. I am guessing that the change is that if metadata is added, then we don't need to extract metadata?	True
apache/pinot	4955	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY1MTE4OA==	nit: one extra space between + and "-"	False
apache/pinot	6204	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTczNg==	(nit) Capitalize the first character for consistency	False
apache/rocketmq	1985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxMzQ1Mg==	what is a blacklist? It's just not allowed to send a message to this topic. It would be better to name it notAllowedSending.	True
apache/rocketmq	2376	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NjEzMQ==	Is it a necessary judgment here? Although you use the InetAddressValidator, I would like to recommend you solve the problem thoroughly. BTW, Hopefully, you could continue to optimize this class. There are many implementations that can be replaced by existing libs. I would like to follow your process.	True
apache/skywalking	5412	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1OTYzNQ==	Suggested change                                                                                                        if (enhanceInfo != null) {                                                        // The SendCallBackEnhanceInfo could be null when there is an internal exception in the client API,                                                        // such as MQClientException("no route info of this topic")                                                        if (enhanceInfo != null) {	True
apple/servicetalk	980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNTM5Mw==	nit: s/maybe/may be/	False
aws-amplify/amplify-android	497	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxMjE0MA==	Nit: AWSMobileClientAuthProvider instead?	True
aws-greengrass/aws-greengrass-nucleus	116	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwODg3Mw==	[nit] for	False
aws-greengrass/aws-greengrass-nucleus	128	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NTA4Nw==	This technically breaks the benchmark dashboard because it will interpret the primary metric as s/op instead of ops/s which this mode gives us. Either change this mode, or else change the python script to read the primary metric type/mode and handle it appropriately as ops/s instead of the execution time.	True
awslabs/smithy	337	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMjg2MQ==	Subtle tweak to the wording - "These shapes in the closure..." - to point that the sentence is referring to explicitly the listed shapes. I can foresee some reading the last part and being confused when encountering this taken from the test outputs, with one saying must and the other saying should worded to a general case: [DANGER] another.ns#ListC: Shape name `ListC` conflicts with `ns.foo#ListC` in the `ns.foo#MyService` service closure. Shapes in the closure of a service must have case-insensitively unique names regardless of their namespaces. | Service [NOTE] ns.foo#String: Shape name `String` conflicts with `smithy.api#String` in the `ns.foo#MyService` service closure. Shapes in the closure of a service should have case-insensitively unique names regardless of their namespaces. | Service	False
awslabs/smithy	318	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2MzE1NA==	nit: s/model.base/model	False
axonframework/axonframework	1330	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MDc5OA==	Suggested change                                                                                                     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying                                                     * @return return the estimated relative replay position this Segment represents	False
axonframework/axonframework	1337	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ1NTcwOA==	Suggested change                                                                                                     * Sends given {@code query} over the {@link QueryBus}, expecting a response in the form of {@code responseType}                                                     * from several sources. The flux is completed when a {@code timeout} occurs or when all results are received.                                                     * Execution may be asynchronous, depending on the QueryBus implementation.                                                     * <p><b>Do note that query will not be dispatched until there is a subscription to the resulting {@link                                                     * Mono}</b></p>                                                     * <b>Note</b>: Any {@code null} results will be filtered out by the QueryGateway. If you require the {@code null}                                                     * to be returned, we suggest using {@link QueryBus} instead.                                                     * Sends the given {@code query} over the {@link QueryBus}, expecting a response in the form of {@code responseType}                                                     * from several sources. The returned {@link Flux} is completed when a {@code timeout} occurs or when all results are received.                                                     * Execution may be asynchronous, depending on the {@code QueryBus} implementation.                                                     * <p><b>Do note that the {@code query} will not be dispatched until there is a subscription to the resulting {@link                                                     * Mono}</b></p>                                                     * <b>Note</b>: Any {@code null} results will be filtered out by the {@link ReactiveQueryGateway}. If you require the {@code null}                                                     * to be returned, we suggest using {@code QueryBus} instead.	False
azure/azure-sdk-for-android	252	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMjc0OQ==	Nit: Indentation.                         Suggested change                                                                                                    void getBlobsInPageWithRestResponse(String pageId,                                                                                               String containerName,                                                                                               String prefix,                                                                                               Integer maxResults,                                                                                               List<ListBlobsIncludeItem> include,                                                                                               Integer timeout,                                                                                               String requestId,                                                                                               CancellationToken cancellationToken,                                                    void getBlobsInPageWithRestResponse(String pageId,                                                                                        String containerName,                                                                                        String prefix,                                                                                        Integer maxResults,                                                                                        List<ListBlobsIncludeItem> include,                                                                                        Integer timeout,                                                                                        String requestId,                                                                                        CancellationToken cancellationToken,	False
azure/azure-sdk-for-android	252	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNDM1OQ==	Nit: Indentation.                         Suggested change                                                                                                    public void commitBlockList(String containerName,                                                                                       String blobName,                                                                                       List<String> base64BlockIds,                                                                                       boolean overwrite,                                                                                       Callback<BlockBlobItem> callback) {                                                    public void commitBlockList(String containerName,                                                                                String blobName,                                                                                List<String> base64BlockIds,                                                                                boolean overwrite,                                                                                Callback<BlockBlobItem> callback) {	False
azure/azure-sdk-for-android	346	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzNjQyNA==	Suggested change                                                                                                     * @param nextPageId id of the page next to this page                                                     * @param nextPageId id of the page after this page	False
azure/azure-sdk-for-android	237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyODU5NQ==	Suggested change                                                                                                                        "' is cannot be processed, failed to open the content to write.", t));                                                                        "' cannot be processed, failed to open the content to write.", t));	False
azure/azure-sdk-for-android	386	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzUwMg==	Suggested change                                                                                                        return storageBlobServiceClient.setTierWithRestResponse(containerName,                                                        return storageBlobServiceClient.setBlobTierWithRestResponse(containerName,	False
azure/azure-sdk-for-java	9654	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwOTY1OA==	nit: Could this be renamed dash to more closely follow the - character's name.	True
azure/azure-sdk-for-java	7589	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2NDczNQ==	I understand this is auto-generated, but it is hard to read. Can it be improved at all?	True
azure/azure-sdk-for-java	7254	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMDA5Mg==	nit: can remove final here and other examples.	False
azure/azure-sdk-for-java	13984	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwOTUxOA==	Lock ->  Message lock : To make it clear that it is message lock.	False
azure/azure-sdk-for-java	15735	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxODA1MQ==	NIT: the the indent same as above line?	True
azure/azure-sdk-for-java	14636	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MjM2NQ==	nit: missing trailing empty line.	True
azuread/microsoft-authentication-library-common-for-android	1179	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1NjA5OA==	Suggested change                                                                                                        Logger.i(TAG,"Enable Browser Access..");                                                        Logger.i(TAG, "Enable Browser Access..");	True
azuread/microsoft-authentication-library-common-for-android	880	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMzMTE2Mw==	nit: moving file in the middle of the change makes it harder to review IMO. (i.e. git could get drunk like what we're seeing in this file) Next time, let's move the files in a separate PR.	True
azuread/microsoft-authentication-library-common-for-android	1142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzNDcxMw==	That's how it seems to come up on my Pixel 3 (there may be difference in API 29 on Pixel 2 vs 3)....let's change it to this to get it to work on Pixel 3                         Suggested change                                                                                                            final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText("DONE");                                                            final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText("Done");	False
azuread/microsoft-authentication-library-common-for-android	954	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MzEyNA==	Suggested change                                                                                                         * Deprecated string of access token type.                                                         * <strong>Deprecated<strong> string of access token type.  Prefer {@link #TOKEN_TYPE} instead.	False
azuread/microsoft-authentication-library-common-for-android	1012	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2OTEzMg==	I was looking at this, I thought Future threw ExecutionExcepttion as well.  If it does, that's a better throw than runtime below.	True
azuread/microsoft-authentication-library-common-for-android	1108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTczNjI3MA==	Suggested change                                                                                                     * Generates {@link SharedPreferencesFileManager}'s key.                                                     * Generates {@link SharedPreferencesFileManager}'s cache key for the negotiated protocol version.	False
ballerina-platform/ballerina-lang	22439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3NDgxNw==	The error message should've been                         Suggested change                                                                                                                "never typed required fields not allowed, define 'y' as an optional field instead", 49, 5);                                                                "'never' typed required fields not allowed, define 'y' as an optional field instead", 49, 5);                                 right?	True
ballerina-platform/ballerina-lang	20914	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNTM5Mw==	If we consider security best practices, is it ok to have the keyPassword in error message and logs? @ldclakmal	True
ballerina-platform/ballerina-lang	24057	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY1OTkwMA==	Suggested change                                                                                                        BType targetJsonType = BTypes.typeJSON;                                                        try {                                                            return convert(value, targetJsonType, new ArrayList<>(), strand);                                                        try {                                                            return convert(value, BTypes.typeJSON, new ArrayList<>(), strand);	True
ballerina-platform/ballerina-lang	20690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NjM5OQ==	I believe you meant to say channel_close here :)                         Suggested change                                                                                                    public static final String ERROR_TYPE_CHANNEL_CLOSE = "create_channel";                                                    public static final String ERROR_TYPE_CHANNEL_CLOSE = "channel_close";	False
ballerina-platform/ballerina-lang	26422	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1NjgyMQ==	Inverting the condition would be better	False
ballerina-platform/ballerina-lang	21680	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMzMzMg==	Suggested change                                                                                                                    stubFileObject.setEnumList(enumList);                                                                    stubFileObject.setDescriptors(descriptors);                                                                    if (!stubRootDescriptor.isEmpty()) {                                                                        stubFileObject.setRootDescriptor(stubRootDescriptor);                                                                    }                                 This is already handled in line number 247	False
broadinstitute/gatk	6634	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1NzE5OA==	If this is legacy, make it clear in method name or javadoc for later deletion.	False
broadinstitute/picard	1463	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNjQ4Ng==	I think this should be                         Suggested change                                                                                                                    "java -jar picard.jar VcfToAdpc \\<br />" +                                                                    "java -jar picard.jar CombineGenotypingArrayVcfs \\<br />" +	True
broadinstitute/picard	1480	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEzODgwMA==	whitespace                         Suggested change                                                                                                        VariantContext firstVariant = null;// may be null if the vcf is empty                                                        VariantContext firstVariant = null;   // may be null if the vcf is empty	False
broadinstitute/picard	1603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1MTU2NA==	no need for this temp variable, b, just put the read....() statement in the if(.)	False
camunda-cloud/zeebe	4857	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5ODYzNQ==	Just to understand, what was previously happening here? Were the connections eventually closed (e.g. when they were garbage collected), or...?	False
camunda-cloud/zeebe	5343	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0ODY1MA==	Suggested change                                                                                                  public void shouldReturnNonZeroMessageKey() {                                                  public void shouldReturnTheMessageKey() {	False
cbioportal/cbioportal	8086	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA1Njc2OA==	here too (import java.util.* would be fine) The collapsing of our model class imports into a wildcard is something I feel loses some documentation power and could (for very general class names) lead to namespace ambiguities. For example, the "Select" class should probably never be imported via wildcard (I think I suggested moving it into the model class perhaps?)	True
cdapio/cdap	11925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3MDUzNg==	I think it's more understandable for this to be Collections.singletonList(fieldName)	False
cesnet/perun	2913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjAyMA==	Is there any reason why do you call this version of the method instead of this one?                         Suggested change                                                                                                  richMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers, null, true);                                                  richMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers);	True
checkstyle/checkstyle	7634	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDcwNQ==	Please remove class definition, the less  unnecessary code in example the better. Your code is not compilable, so extra code does no good.	True
commons-app/apps-android-commons	3905	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ2NDkwNw==	I know it is boring, but some simple Javadoc would be better for these methods too.	False
confluentinc/ksql	4581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyNTI5OQ==	Can .you move this to ConfigValidators please? Even better,  change the existing zeroOrPositive to be more flexible, e.g. to become equalToOrGreaterThan(0),  equalToOrGreaterThan(1), etc.	False
confluentinc/ksql	4320	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQwNTY1NA==	nit: null checks	False
confluentinc/ksql	6043	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAyNzE4MQ==	Rather than converting the the PhysicalSchema into a SchemaNode, would it not be better to convert the SchemaNode into the PhysicalSchema and then compare?  I guess it doesn't make much difference, just feels more type safe... e.g. if someone came along and added a new field to PhysicalSchema, then the comparison would still pass if comparing strings, but would fail if comparing PhysicalSchemas. SchemaNode is basically only there to serialize the parts of PhysicalSchema.  So, I'd suggest writing a Jackson serializer and deserializer for PhysicalSchema, and dropping SchemaNode.  Worth thinking about anyway.  Take a look at LogicalSchemaSerializer and LogicalSchemaDeserializer for examples of how this is done if you've not done it before.	True
consensys/teku	2270	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3NDY4MA==	nit: params should probably be final	True
consensys/teku	2097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MzM3Mw==	Suggested change                                                                                                      if (!reachedHead.get()) {                                                      if (reachedHead.compareAndSet(false, true)) {                                 Then drop the reachedHead.set(true).  That way you're using a single atomic operation to check and update so it's thread safe.	False
consensys/teku	3256	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxODk1Mg==	nit: I'd probably call this beaconNode and validatorNode1  validatorClient since that's the typical terms we'd use for this kind of setup.	False
consensys/teku	1238	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NDIzMg==	nit: if we're using this a lot, could static import UnsignedLong.ZERO...	True
consensys/teku	1083	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4MTYwOA==	checkNotNull returns the value provided so you can do this as: UnsignedLong blockTimestamp = checkNotNull(blockTimestampFuture.getNow(null)`  Not sure if it's actually better though...	True
consensys/teku	1426	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzMDI2NA==	nit; final modifier for the BLSPublicKeys	True
consensys/teku	2154	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkyMTY5Ng==	nit:                         Suggested change                                                                                                                assertTrue(storageClient.getBlockByRoot(root).isEmpty(), "!block_in_store");                                                                assertTrue(storageClient.getBlockByRoot(root).isEmpty(), "Block should not have been in store :" + root);	False
consensys/teku	1445	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTE4Mg==	nit: We probably don't need SlotEvent anymore - can just call onSlot(nodeSlot).  The dedicated event was just because EventBus didn't provide any other context so you had to search for all usages of whatever you posted, whereas the event channel interface makes it clear where this is being used.	True
corfudb/corfudb	2826	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5MDAzMA==	Is this class only required for logging purposes? If the these stats can't be accessed externally and only used for logging, then I would suggest converting it to a proper Metric so that we can collect it and log it as within our metrics performance library. This metric can be kept registered and kept in the StreamSubscription instance.	True
datadog/dd-trace-java	1365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5MTk4Ng==	I would suggest having this instrumentation use "grizzly-filterchain" and the old grizzly instrumentation use "grizzly", "grizzly-httphandler" as instrumentation names.  That way they can be configured independently.  Ideally this would also use grizzly but if someone already enabled the old one, this would potentially be enabled too.	False
datadog/dd-trace-java	1358	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MDU1Ng==	nit this should either be before end, or startCpuTime should be before begin	True
dhis2/dhis2-core	6165	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjU3NQ==	Suggested change                                                                                                                .map(ProgramStage::getDataElements)                                                                .map( ProgramStage::getDataElements )	False
dhis2/dhis2-core	6766	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NTM5OA==	Might be more readable:                         Suggested change                                                                                                        return this.trackedEntityInstanceUids != null && !this.trackedEntityInstanceUids.isEmpty();                                                        return CollectionUtils.isNotEmpty( this.trackedEntityInstanceUids );	False
dhis2/dhis2-core	6345	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc0MDQzMA==	Suggested change                                                                                                         NotificationTemplateService notificationTemplateService)                                                         NotificationTemplateService notificationTemplateService )	False
dhis2/dhis2-core	6843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzU1Nw==	I find this new code a bit hard to read (I would try to keep this method as tiny and lean as possible). What about encapsulating the call to the rule engine like so: @Override     public TrackerImportReport importTracker( TrackerImportParams params )     {         params.setUser( trackerUserService.getUser( params.getUserId() ) );          // Init the Notifier         ImportNotifier notifier = new ImportNotifier( this.notifier, params );          // Keeps track of the elapsed time of each Import stage         TrackerTimingsStats opsTimer = new TrackerTimingsStats();          notifier.startImport();          TrackerValidationReport validationReport = null;          TrackerBundleReport bundleReport;          try         {             //             // pre-heat             //             TrackerBundle trackerBundle = opsTimer.exec( PREHEAT_OPS,                 () -> preheatBundle( params ) );              Map<TrackerType, Integer> bundleSize = calculatePayloadSize( trackerBundle );              //             // preprocess             //             opsTimer.execVoid( PREPROCESS_OPS,                 () -> preProcessBundle( trackerBundle ) );              //             // validate             //             validationReport = opsTimer.exec( VALIDATION_OPS,                 () -> validateBundle( trackerBundle ) );              notifier.notifyOps( VALIDATION_OPS, opsTimer );              if ( exitOnError( validationReport, params ) )             {                 return buildReportAndNotify( validationReport, opsTimer, bundleSize, notifier );             }             else             {                 validationReport = execRuleEngine(opsTimer, trackerBundle, validationReport, notifier);                   if ( exitOnError( validationReport, params ) )                 {                     return buildReportAndNotify( validationReport, opsTimer, bundleSize, notifier );                 }                  //                 // commit                 //                 if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )                 {                     bundleReport = opsTimer.exec( COMMIT_OPS, () -> deleteBundle( trackerBundle ) );                 }                 else                 {                     bundleReport = opsTimer.exec( COMMIT_OPS, () -> commitBundle( trackerBundle ) );                 }                  notifier.notifyOps( COMMIT_OPS, opsTimer );                  TrackerImportReport trackerImportReport = TrackerImportReport.withImportCompleted( TrackerStatus.OK,                     bundleReport, validationReport,                     opsTimer.stopTimer(), bundleSize );                  notifier.endImport( trackerImportReport );                  return trackerImportReport;             }         }         catch ( Exception e )         {             log.error( "Exception thrown during import.", e );              TrackerImportReport report = TrackerImportReport.withError( "Exception:" + e.getMessage(),                 validationReport, opsTimer.stopTimer() );              notifier.endImportWithError( report, e );              return report;         }     }      private TrackerValidationReport execRuleEngine( TrackerTimingsStats opsTimer, TrackerBundle trackerBundle,         TrackerValidationReport report, ImportNotifier notifier )     {         //         // rule engine         //         opsTimer.execVoid( PROGRAMRULE_OPS,             () -> runRuleEngine( trackerBundle ) );          notifier.notifyOps( PROGRAMRULE_OPS, opsTimer );          //         // rule engine         //         TrackerValidationReport finalValidationReport = report;         report = opsTimer.exec( VALIDATE_PROGRAMRULE_OPS,             () -> validateRuleEngine( trackerBundle, finalValidationReport ) );          notifier.notifyOps( VALIDATE_PROGRAMRULE_OPS, opsTimer );          return report;     }      private TrackerImportReport buildReportAndNotify( TrackerValidationReport validationReport,         TrackerTimingsStats opsTimer, Map<TrackerType, Integer> bundleSize, ImportNotifier notifier )     {         TrackerImportReport trackerImportReport = TrackerImportReport                 .withValidationErrors( validationReport, opsTimer.stopTimer(),                         bundleSize.values().stream().mapToInt( Integer::intValue ).sum() );          notifier.endImport( trackerImportReport );          return trackerImportReport;     }      private boolean exitOnError( TrackerValidationReport validationReport, TrackerImportParams params )     {         return validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL;     }	False
dotcms/core	17791	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgxOTI0Mg==	I think is better idea move this logic to a private method something like: "validateUniqueField", I think is better than put a comment	True
dspace/dspace	2726	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzMTU4MA==	Again, please add JavaDocs.  It's important to also contrast this plugin with AuthenticationStatusRestPermissionEvaluatorPlugin, as they have very similar names. So, it'd be good to better understand what each is doing & why.	False
dspace/dspace	2726	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyOTYxMg==	Should we return an error here too?  I'm not sure I understand why this is just a warning if you've received an AccessDeniedException.  The comment above this is unclear to me though, so I'm not sure what to recommend here.	True
eclipse-openj9/openj9	11016	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxMzgxNA==	The possibility of InvalidOptionException should be documented. Better, just remove it from the throws clause - it doesn't appear to be possible.	True
eclipse/che-che4z-lsp-for-cobol	207	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE0NzA4MQ==	It would be better to mark this method @Nullable to show that null in configurationSettingsStorable is a valid case	True
eclipse/hono	1762	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4Mjg5NA==	It looks like the commandConsumerTracker is not used below in the sense that it is composed with other Futures, to handle command consumer creation failures. If I understand the intention here correctly, the command and control handling in doUploadMessage is similar to the one in the HTTP adapter, meaning that when the returned Future of  doUploadMessage  is finished, the created command consumer is to be closed again already, right? The line below: Optional.ofNullable(commandConsumerTracker.result()).ifPresent(consumer -> consumer.close(null)); means: If the command consumer creation was successfully finished, close the consumer. But what if at that point in time, the consumer creation wasn't finished yet. When the creation succeeds at a later point, the consumer will never get closed. Therefore the code here has to be adapted to make sure that a successfully created command consumer is closed under all circumstances. That means, making sure that some logic is done after the commandConsumerTracker is completed (using commandConsumerTracker.compose or CompositeFuture.join as done here).	True
eclipse/jkube	216	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MDU0MQ==	These urls can be converted into an array of strings and then we can use a loop for setting them here.. better than hardcoding	False
eclipse/rdf4j	2146	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI0Mjg3OA==	@aschwarte10 I could use your eyes on this problem. FedX is currently designed to instantiate the EvaluationStrategy once (unless the config changes). But in RDF4J Sails, it is generally assumed that each query gets its own EvaluationStategy - that is why the Dataset object is passed in on the constructor. I believe that this has caused some of the named graph queries to fail on FedX (basically because we don't pass the dataset along). I'd like to hear your opinion on the best way forward: can we just remove the assumption that the strategy is defined once and let FedX instantiate a new strategy for each query? I'm a little wary of doing something like just setting/overwriting the Dataset  assigned to the strategy on each query, as I'm not sure what the consequences would be in a multithreaded environment.	True
edx/edx-app-android	1405	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4NTk5Nw==	Nits:  Use a block comment instead of single-line comments. Please create a ticket for updating google services specifically mentioning the cast SDK in it. Once the ticket is created add an item in its acceptance criteria to revisit this part of code in it. Also the add the ticket's link to this TODO item.	True
edx/edx-app-android	1385	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyMjY0MQ==	it's better to check if the course is already enrolled before the service call of course enrollment and move to the course dashboard without calling an extra service.	False
elastic/apm-agent-java	1531	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDc4NQ==	[minor] The best practice would be to return an Object[] instead of using GlobalThreadLocal	True
elastic/apm-agent-java	1305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODY0MzY3MA==	[minor] Not clear - framework types are not visible from the boot CL	False
elastic/elasticsearch	66349	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQzNTU5Ng==	Suggested change                                                                                                        this.hyperparameters = Collections.unmodifiableList(hyperparameters);                                                        this.hyperparameters = hyperparameters == null ? Collections.emptyList() : Collections.unmodifiableList(hyperparameters);	True
elastic/elasticsearch	55473	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTE2Mg==	nit: It feels inconsistent that we compare one field using the accessor and the other one directly. Could you stick to one of those styles in equals and hashCode? Or maybe it would be possible to derive from AcknowledgedResponse (it would have to become configurable wrt acknowledged field name though...).	True
elastic/elasticsearch	58056	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ3NjM3MA==	Could also go for the write pool here (as suggested in #58018) but I figured I wouldn't change that in this PR.	True
elastic/elasticsearch	53463	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2NTA3OQ==	NIT: Save 2 lines via IOUtils.close(previous);?	False
elastic/elasticsearch	54439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxODA0Mw==	This also includes the time spent waiting for sequential reads to be requested by the caller. What do you think about timing each read call instead and adding all those timings up?	True
elastic/elasticsearch	61987	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MjkxOA==	nit: typeWithSubtype or or just get() or asString	True
elastic/elasticsearch	53033	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4NjIwNg==	Nit - I think it would be clearer that the aggregation isn't operating on this field if we used some completely different type, like a keyword or a number.	True
elastic/elasticsearch	62086	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0Njg5NQ==	Suggested change                                                                                                     * Call this if you need the indexer to fast forward a scheduled(throttled) search once in order to complete a full cycle.                                                     * Call this if you need the indexer to fast forward a scheduled (throttled) search once in order to complete a full cycle.	False
elastic/elasticsearch	54429	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1MDcwMg==	I'm moving this up under the reading ctor so it is easier to compare.	False
elastic/elasticsearch	57573	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2MjkxMg==	nit: not that it matters a lot, but I think runBefore is more logical in that we release the memory before responding.	False
essentialsx/essentials	3844	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTIyMzUzMA==	Suggested change                                                                                                 * A class which provides numerous methods to interact with EssentialsXDiscord.                                                 * A class which provides numerous methods to interact with EssentialsX Discord.	False
essentialsx/essentials	3408	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5Nzk5Mg==	Just for code consistency                         Suggested change                                                                                                    private static final Pattern REPLACE_ALL_RGB_PATTERN = Pattern.compile("(&)?&#([A-Fa-f0-9]{6})");                                                    private static final Pattern REPLACE_ALL_RGB_PATTERN = Pattern.compile("(&)?&#([0-9a-fA-F]{6})");	False
essentialsx/essentials	3404	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1MTA5Mg==	Suggested change                                                                                                public class PaperPlayerRecipeBookClickEventProvider extends EventProvider {                                                public class PaperRecipeBookListener extends ProviderListener {	False
fabric8io/kubernetes-client	2501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcyMzg2NQ==	Since this is not checking if the HTTP status code belongs to a server error family (code >= 500), and for our use-case we just want to retry if one of these status codes is returned by the server, it's probably a good idea to move the method to CreateOrReplaceHelper class. Maybe also rename it to shouldRetry or something like that, which suggests that the procedure is only retried for some specific status codes.	False
firebase/firebase-android-sdk	1333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAyMDM3MA==	It's usually a bad sign if you have to add a comment to a simple method like this one. How about you use the method name #currentTimeMillis since everybody will understand what it means?	False
firebase/firebase-android-sdk	1304	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjczNjA0OQ==	We are essentially doing a write-on-read. Developers are used to treating the get*() APIs as idempotent functions. This will no longer be true. Are you ok if GA counts these as independent events.	True
geoserver/geoserver	4479	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNTcwOQ==	Better practice, declare interface, create instance.                         Suggested change                                                                                                        HashSet<String> upperCase = new HashSet<>();                                                        Set<String> upperCase = new HashSet<>();	True
getodk/collect	3606	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NDYwOA==	Quick stylistic note you don't need to do anything about but I wanted to share for your consideration: assertThat(storageManager.getMainODKDirPath(), is("/storage/emulated/0/odk")) reads more like English. Here we have to go to the end of the assertions to find out what code is under test and then look at what the expected value is.	True
google/ground-android	473	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MDE0Mg==	I tried to get the height of the view from binding. But it always returns 0 for the first time. Anyone knows why? The reason we have to add top margin is to fit the preferences layout under the toolbar. There is no standard practice around how to add a toolbar because official docs recommend using the PreferenceFragment within an Activity. In our case, the activity doesn't have a toolbar. Any guidelines or suggestions are most welcome!	True
googleapis/java-spanner	576	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMDg1OA==	Suggested change                                                                                                          getExecuteBatchDmlRequestBuilder(                                                              statements,                                                              Options.fromUpdateOptions(options),                                                              this.options.hasTag() ? this.options.tag() : null);                                                          getExecuteBatchDmlRequestBuilder(statements, Options.fromUpdateOptions(options));	False
googlecloudplatform/cloud-opensource-java	1385	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MTYzNg==	Suggested change                                                                                                   * Parse the dependencyManagement section of an artifact and return the artifacts included there.                                                   * Parses the dependencyManagement section of an artifact and returns the artifacts included there.	True
googlecloudplatform/fda-mystudies	444	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzNTA3OA==	Some of these properties, like PATH, STATE, etc. don't have enough context to be useful. Other people reading this code aren't going to know what PATH is for. If they are being serialization just keep the field names in that class.	True
googlecloudplatform/fda-mystudies	656	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5NzExMQ==	Suggested change                                                                                                  public void shouldReturnStudyNotFoundForstudyParticipants() throws Exception {                                                  public void shouldReturnStudyNotFoundForStudyParticipants() throws Exception {	True
googlecloudplatform/fda-mystudies	981	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4MDc5Nw==	Since participant registry view is a whole page view, I would recommend using a higher default value, e.g. 50 to 100, depending on how much space each row takes.	True
googlecloudplatform/fda-mystudies	390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1OTE0OA==	this test is very dependent on the content of the implementation, checking the spacing would even break the test. It's better to assert more generic attributes, such as response status code in this case.	True
googlecontainertools/jib	2929	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4Njk2OQ==	very nit: don't need the Truth8 at the beginning. Same below.	False
googlecontainertools/jib	2701	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc4NjAzMA==	This is confusing                         Suggested change                                                                                                            () -> {                                                              List<Future<Image>> builtImages = new ArrayList<>();                                                              builtImages.addAll(results.builtImagesAndBaseImages.get().keySet());                                                              return new BuildManifestListStep(                                                                      buildContext, childProgressDispatcherFactory, realizeFutures(builtImages))                                                                  .call();                                                            });                                                            () ->                                                              new BuildManifestListStep(                                                                      buildContext,                                                                      childProgressDispatcherFactory,                                                                      realizeFutures(results.builtImagesAndBaseImages.get().keySet()))                                                                  .call());	True
googlecontainertools/jib	2555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNTYxNA==	nit: ditto. Let's put a newline after this.	True
graphhopper/graphhopper	2026	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTExNTY0Nw==	This is probably better in GraphHopperTest but mocking DataReader is a bit lengthy/ugly.	True
graylog2/graylog2-server	9790	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxMjc4MQ==	We need to make sure that older content packs (without this field) are still installable. I suggest you initialize the htmlBodyTemplate in the Builder.create() https://github.com/Graylog2/graylog2-server/pull/9790/files#diff-455b0c407c9c4eac48cf30ae314d1e2222e29fb27954534f291d6a84b3facf87L70 .htmlBodyTemplate(ValueReference.of(""))	False
grpc/grpc-java	6809	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3Njg1Nw==	Getters would be better. Ditto.	False
hashgraph/hedera-mirror-node	579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5OTU3OA==	nit: missing inputStream	True
hazelcast/hazelcast	17437	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzNzY4Ng==	i think it would be better and clearer to set it correctly at the factory in the first place, e.g. https://github.com/hazelcast/hazelcast/blob/master/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientExceptionFactory.java#L220 rather than trying to fix it here.	False
hmcts/ccd-data-store-api	1092	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxODE3Nw==	Suggested change                                                                                                                .forEach(field -> sourceFields.add(new TextNode(SUPPLEMENTARY_DATA_PREFIX + field.asText())));                                                                .forEach(sd -> sourceFields.add(new TextNode(SUPPLEMENTARY_DATA_PREFIX + sd.asText())));	False
hmcts/ccd-data-store-api	909	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzMjE4MA==	better to ignore as we agreed	False
hugegraph/hugegraph	854	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxOTY2MQ==	seems better to add a method checkGraphName()	False
ibm/fhir	1345	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDIwMQ==	Suggested change                                                                                                                                 extra whitespace	True
ibm/fhir	1603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NzcxNw==	same comment on the stubs, suggest removing them, but optional	False
ibm/fhir	761	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjg5Nw==	Suggested change                                                                                                     * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal the parameter                                                     * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal to the parameter	True
infinispan/infinispan	8925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMTk3Mw==	with response code 204, is is null and it will throw an NPE. You probably want better handling :)	True
iterable/iterable-android-sdk	236	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0OTUzOA==	Hmmm I'm wondering if we should put device attributes in iterablePushRegistrationData since we store everything else related to the push registration there.. I don't think this will make a significant difference, but could be better for consistency. Your call.	True
jabref/jabref	6407	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwOTIwNQ==	A better solution would be to Inject the StateManager and call clearSearchQuery (For how to inject see for example the LinkedFileEditDialogView dialog)	False
jellyfin/jellyfin-androidtv	632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxOTUxMA==	Suggested change                                                                                                        if (row.getProgress() > 0  && vh.mPoster.getDrawable() != null) {                                                        if (prog/*ress*/ > 0  && vh.mPoster.getDrawable() != null) {	False
jenkinsci/jenkins	4506	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0MDQ5MA==	Suggested change                                                                                                    default void checkAnyPermission(@Nonnull Permission... permission) throws AccessDeniedException {                                                    /**                                                     * Convenient short-cut for {@code getACL().checkAnyPermission(permission)}                                                     * @see ACL#checkAnyPermission(Permission)                                                     */                                                    default void checkAnyPermission(@Nonnull Permission... permission) throws AccessDeniedException {                                 (NB: untested suggestion link needs to be checked.)	True
keycloak/keycloak	7678	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc3NjgxNw==	Thank you for the change. You can completely get rid of the clientResource this way:                         Suggested change                                                                                                        ClientResource clientResource = ApiUtil.findClientResourceByClientId(adminClient.realm(realmName), clientId);                                                        assertThat(clientResource, notNullValue());                                                                                                        try (ProtocolMappersUpdater protocolMappers = new ProtocolMappersUpdater(clientResource.getProtocolMappers());                                                             ClientAttributeUpdater cau = ClientAttributeUpdater.forClient(adminClient, realmName, clientId).setDirectAccessGrantsEnabled(true)) {                                                        try (ClientAttributeUpdater cau = ClientAttributeUpdater.forClient(adminClient, realmName, clientId).setDirectAccessGrantsEnabled(true);                                                          ProtocolMappersUpdater protocolMappers = new ProtocolMappersUpdater(cau.getResource().getProtocolMappers())) {	False
keycloak/keycloak	7652	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NjIyNQ==	Could you please extract this forEach block to a separate method for better readability?	True
keycloak/keycloak	7302	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5Njc4MA==	Are we going to replace any other occurrence of RealmModel.getClientByClientId(String) with session.clients().getClientByClientId(RealmModel, String)? It's not clear to me why we update it here but not on all other places. Are all other occurrences used becouse we don't have access to keycloak session there? The same question applies to RealmModel.getClientById(String).	True
keycloak/keycloak	7278	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyNDYxMw==	I suggest to make the help text a bit more clear as it will be displayed in the UI and will be nice to make it a bit more obvious what exactly it means? For example "The condition checks the context how is client created/updated to determine whether the policy is applied. For example it checks if client is created with admin REST API or OIDC dynamic client registration. And for the letter case if it is ANONYMOUS client registration or AUTHENTICATED client registration with Initial access token or Registration access token and so on." Also my vote is to rename the class to "UpdatingClientContextCondition" (and similarly rename the provider ID) as the "source" implies that condition is interested about concrete user, who creates/updatest the client rather about the "context" how is the client created/updated (admin REST API, OIDC dynamic client registration etc). @stianst @valb3r What is your though on the above?	True
kiegroup/appformer	933	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1NTE2Ng==	Suggested change                                                                                                 * Copyright 202 Red Hat, Inc. and/or its affiliates.                                                 * Copyright 2020 Red Hat, Inc. and/or its affiliates.	False
kiegroup/appformer	995	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwOTg4Mw==	Consider appending the expected size into the constant name, like DEFAULT_UPLOAD_SIZE_KB. It'll improve the code readability.	False
kiegroup/drools	2808	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI5MDAzOA==	I don't understand what is going on here.	True
kiegroup/jbpm	1767	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjUwMQ==	same typo                         Suggested change                                                                                                     * @param correlationKey the process instance's unique correlation key                                                     * @param correlationKey the process instance unique correlation key	True
kiegroup/kogito-apps	265	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NTIyNA==	Suggested change                                                                                                 * Copyright 2019 Red Hat, Inc. and/or its affiliates.                                                 * Copyright 2020 Red Hat, Inc. and/or its affiliates.	False
kiegroup/kogito-runtimes	439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODExNzkyNw==	Probably would be better to omit it as if the value of the DEFAULT_WORKFLOW_VAR is changed, this comment becomes misleading.	True
kiegroup/kogito-runtimes	477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5MDc0OA==	Suggested change                                                                                                        BpmnProcess process = BpmnProcess.from(new ClassPathResource("BPMN2-UserTask.bpmn2"))                                                                                         .get(0);                                                        BpmnProcess process = BpmnProcess.from(new ClassPathResource("BPMN2-UserTask.bpmn2")).get(0);	False
kiegroup/kogito-runtimes	846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4MzczMA==	Suggested change                                                                                                                try {                                                                    InputStream svgStream = new ByteArrayInputStream(svg.getBytes());                                                                try (InputStream svgStream = new ByteArrayInputStream(svg.getBytes())) {	False
kiegroup/optaplanner	1030	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2OTA3Ng==	Suggested change                                                                                                     * Returns a collector that counts a number of unique elements in a group.                                                     * Returns a collector that counts the number of unique elements that are being grouped.	False
kiegroup/optaplanner	720	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MTgwNg==	For moment, I got confused that this test duplicates HardSoftScoreJsonbAdapterTest, but it doesn't. The jackson version of this has 2 Scores, including a "generic Score", something not supported by JSON-B (which is fine). Suggestion: Add a BendableScore too in this test (so it has 2 scores). Also add a BendableScore in the jackson version of this test (so it has 3 scores). This does give us some extra test code coverage, to prove that bendables also work without explicit annotations :)	True
knowm/xchange	3539	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4OTc2NA==	Better to throw new UnsupportedOperationException()	True
ldtteam/minecolonies	5728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwNjAxNw==	"i" might be bad, better stack	False
line/armeria	3110	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1ODY5MQ==	Suggested change                                                                                                    public HttpRequestBuilder content(MediaType mediaType, Publisher<HttpData> publisher) {                                                    public HttpRequestBuilder content(MediaType mediaType, Publisher<? extends HttpData> publisher) {	False
line/armeria	2999	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk3MDQxMw==	nit:                         Suggested change                                                                                                    private static class ContextAwareFlux extends Flux<Object> implements ContextHolder {                                                    private static final class ContextAwareFlux extends Flux<Object> implements ContextHolder {	True
line/armeria	2636	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwNzU1MA==	nit: it's	False
linkedin/ambry	1434	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyMjc3NQ==	Strongly recommend to use getMissingRemoteStoreKeys() or original getMissingStoreKeys(). getRemoteMissingStoreKeys() sounds like get the keys that were missing on remote.	True
linkedin/brooklin	773	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4MTk2MA==	nit:  when the tasks per instance exceeds the configured threshold	True
linkedin/brooklin	734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkzNjcxMw==	nit: invert if/else for simplicity	False
linkedin/cruise-control	1108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU5NjEwNw==	Sorry if my previous comment was not clear -- let me rephrase my question:  Why are we passing a parameter to loadCapacities function? This is a local private function and we already have the value assigned to _configFile. Is it possible to modify loadCapacities to have no parameter and use _configFile in its implementation?	False
linkedin/cruise-control	1368	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3ODYyNg==	Nit: I would use String.format to construct the exception messages to improve readability since these variable names are long. It applies to all ConfigException in this section.	False
linkedin/cruise-control	1381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2MjM5Mw==	Superfluous parentheses around (1) !configKey.equals(LEADER_THROTTLED_RATE) and (2) !configKey.equals(FOLLOWER_THROTTLED_RATE). Can we drop them for better readability?   Please see https://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html   Nit: This is a private function of the class -- i.e. no public / protected / package private access. Hence, I feel that this sanity check is redundant all together, but the decision to keep or remove it is up to you.	True
linkedin/rest.li	321	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1MDE0Mg==	can be more concise: "For simplicity, we refresh all strategies since we expect cluster updates to be rare and refresh to be cheap."	True
linkedin/rest.li	192	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg5NjA2Mg==	Use com.linkedin.data.schema.SchemaFormatType here rather than a String. It's more type-safe. This also gives you easy access to the parser factory instance.	False
linkedin/rest.li	484	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjUzNw==	This test is doing a LOT. With unit tests it's best to write small focused tests that exercise one condition/scenario/code path, which makes it easier to understand the purpose of the test as well as often making it easier to track down what is breaking (if one large test is failing but there are actually three asserts that are failing it's less obvious than three separate tests failing). I'd suggest pulling the multiple window scenarios into separate tests at least.	True
ls1intum/artemis	1581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0MTUyNw==	Suggested change                                                                                                    @JoinTable(name = "STUDENT_EXAM_EXERCISE", joinColumns = @JoinColumn(name = "STUDENT_EXAM_ID", referencedColumnName = "ID"), inverseJoinColumns = @JoinColumn(name = "EXERCISE_ID", referencedColumnName = "ID"))                                                    @JoinTable(name = "student_exam_exercise", joinColumns = @JoinColumn(name = "student_exam_id", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "exercise_id", referencedColumnName = "id"))	False
ls1intum/artemis	2307	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA==	Suggested change                                                                                                    @GetMapping("/video-units/{videoUnitId}")                                                    @GetMapping("/lectures/{lectureId}/video-units/{videoUnitId}")	True
marklogic/marklogic-data-hub	3450	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgzMTQ4MA==	Same thing here, let's use a constructor here instead of a setter so it's clear that a new object is being created that's specific to this HubConfig.	False
megamek/mekhq	2189	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk2MjE3Nw==	Suggested change                                                                                                                    getCampaign().getShoppingList().addShoppingItem((Armor)newArmorSupplies.getNewPart(),1,getCampaign());                                                                    getCampaign().getShoppingList().addShoppingItem((Armor) newArmorSupplies.getNewPart(), 1, getCampaign());	False
megamek/mekhq	2105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzUwOQ==	Suggested change                                                                                                                    if (null != replacement && partQuantity.get(replacement) > 0) {                                                                                                                    if ((null != replacement) && (partQuantity.get(replacement) > 0)) {	False
megamek/mekhq	2088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ3MzkyMA==	Suggested change                                                                                                        if (null == p.getUnit() && !p.hasParentPart()) {                                                        if ((null == p.getUnit()) && !p.hasParentPart()) {	False
micronaut-projects/micronaut-core	3168	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDQyMg==	Better error handling here please	False
minio/minio-java	1133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MTkzMA==	Suggested change                                                                                                          Assert.assertEquals(                                                          Assert.assertNotSame(	False
movingblocks/terasology	4089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyMDEzNQ==	I think the vertical spacing should be added here, instead:                         Suggested change                                                                                                                heightOffset += filledHeight;                                                                heightOffset += filledHeight;                                                                heightOffset += verticalSpacing;                                 This part of the code resets the filled width and height after increasing the height offset, e.g., after wrapping the line.	True
movingblocks/terasology	3948	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2Nzk1OQ==	I bet there's a way we can make this assertion method easier to read and give more useful output on fail. I think you're following established precedent here, so I certainly won't hold up a review on that, but maybe a little side project for sometime.	False
mulesoft/mule	9804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMzM4Mw==	Instead of getting the delegate, and checking if it is a Reconnectable, I think it is better to check if sourceAdapter.getReconnectionAction(exception) is empty.	False
netty/netty	10483	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1OTk3OA==	I wonder if we should better do the release in a finally block. Just in case if something goes wrong... otherwise we will leak memory	False
nordic-institute/x-road	344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1OTQ4NA==	So the try-with-resources will guarantee that process.inputStream gets closed, and is closed before this line (or line 80 if no exceptions)...right? I believe this is good. It is probably not necessary, but it seems nothing in the javadocs guarantees that the streams will be closed otherwise, and there were some sources that suggest closing. It is probably not necessary = looking at UNIXProcess.destroy() there's code that probably takes care of closing the streams. But again, I see no official guarantee and who knows what UnknownOSProcess.destroy() we could be using some day. Actually UNIXProcess.destroy will maybe try to close an already closed stream, but that is usually not a problem. Ugh, too much vagueness for my liking but what can you do. Now I am thinking if we should also close errorStream and outputStream the same way, as suggested by this https://stackoverflow.com/a/7100172/1469083? It is most likely not needed, but doing it in a fail safe way (IOUtils.closeQuietly maybe?) after destroy() should not hurt either... Sources talking about closing:  https://stackoverflow.com/a/7102717/1469083 (and it's comments, about destroy()) https://stackoverflow.com/a/7100172/1469083 and other answers to the question	True
nuxeo/nuxeo	4027	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0NTI1Mw==	Suggested change                                                                                                    protected void checkMigration(Migration migration) {                                                    protected void assertDummyMigration(Migration actual) {	False
open-telemetry/opentelemetry-java	2060	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3NTU0OQ==	Suggested change                                                                                                public class OpenTelemetryPropagationComponentImpl extends PropagationComponent {                                                class OpenTelemetryPropagationComponentImpl extends PropagationComponent {	False
open-telemetry/opentelemetry-java	1941	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1OTUxNw==	I'm not a fan of referring to commit messages in explanatory comments. Over time, finding the correct commit could be a pretty large chore for someone reading this. I think first sentence should suffice here (and in the meter case as well).	False
open-telemetry/opentelemetry-java	1301	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMzU1Mg==	Couple more test cases  Valid header with keys in different oder Valid header with additional params. We strip this right now but need to make sure this propagator can read any valid header	True
open-telemetry/opentelemetry-java	1003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxMTM1MQ==	Suggested change                                                                                                        .spanBuilder("#4 - SAMPLED this trace will be showed in the console output")                                                        .spanBuilder("#4 - SAMPLED this trace will be shown in the console output")	False
open-telemetry/opentelemetry-java	1835	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwOTkxOA==	This should probably fixed -- either remove the check and let an NPE occur "naturally" or use Objects.requireNonNull. Or we could change all propagators to do something like here (best with logging though). In any case, this should be a follow-up.	False
open-telemetry/opentelemetry-java-instrumentation	1236	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxMDYyNw==	Suggested change                                                                                                public class CouchbaseClientTracer extends DatabaseClientTracer<String, Method> {                                                public class CouchbaseClientTracer extends DatabaseClientTracer<Void, Method> {	False
open-telemetry/opentelemetry-java-instrumentation	75	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1ODMyNA==	Suggested change                                                                                                    if (parentSpan != null && parentSpan.getContext().isValid()) {                                                    if (parentSpan.getContext().isValid()) {                                 TRACER.getCurrentSpan() never returns null	False
open-telemetry/opentelemetry-java-instrumentation	1650	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk5MzUxNA==	Suggested change                                                                                                                  // one of the methods has last param context ?                                                                  // only one of the methods has last param context ?	True
open-telemetry/opentelemetry-java-instrumentation	827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MTQ4OA==	does this work?                         Suggested change                                                                                                    return null; // TODO flavor is on the request, not the connection for this tracer                                                    return request.getProtocolVersion().toString();	True
opencast/opencast	2125	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0Nzk5Mg==	Suggested change                                                                                                        } else {                                                          targetTagList.add(targetTag);                                                        }                                                        }                                                        targetTagList.add(targetTag);	False
opencast/opencast	2125	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0OTE3OA==	We don't need to check plus you check targetTagList:                         Suggested change                                                                                                        if (targetTagList.isEmpty()) {                                                          logger.warn("Configuration key '" + TARGET_FLAVORS + "and" + TARGET_FLAVOR + "' are empty");                                                        } else {                                                          for (String elem : targetFlavorList) {                                                            try {                                                              flavor = MediaPackageElementFlavor.parseFlavor(elem);                                                            } catch (IllegalArgumentException e) {                                                              throw new WorkflowOperationException(elem + " is not a valid flavor!");                                                            }                                                          }                                                        }                                                        for (String elem : targetFlavorList) {                                                          try {                                                            flavor = MediaPackageElementFlavor.parseFlavor(elem);                                                          } catch (IllegalArgumentException e) {                                                            throw new WorkflowOperationException(elem + " is not a valid flavor!");                                                          }                                                        }	False
opendistro-for-elasticsearch/anomaly-detection	84	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMzMwMQ==	Seems you design this general delegate listener not only for profile API. Can you add more comments? Suggest to use a more specific name like MultiResponsesDelegateActionListener ?	True
opendistro-for-elasticsearch/sql	577	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDQxNQ==	Could we use more readable argument name such as (num, fromBase, toBase) -> ?	True
openhab/openhab-addons	7178	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDM1Ng==	No need to edit until you know you might need to.                         Suggested change                                                                                                        ThingBuilder thingBuilder = editThing();                                                        if (thing.getChannel(currentDraw) == null) {                                                            try {                                                        if (thing.getChannel(currentDraw) == null) {                                                            ThingBuilder thingBuilder = editThing();                                                            try {	False
openhab/openhab-addons	7830	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4ODk0MA==	I should add the placeholder here ...                         Suggested change                                                                                                                    logger.warn("Error parsing 'location' parameter: ", e.getMessage());                                                                    logger.warn("Error parsing 'location' parameter: {}", e.getMessage());	False
openhab/openhab-addons	6911	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxNjMwNg==	Suggested change                                                                                                        StringBuffer buf = new StringBuffer();                                                        StringBuilder buf = new StringBuilder();	True
openhab/openhab-addons	6911	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODI5Mg==	Suggested change                                                                                                        logger.info("Shutting down Insteon bridge");                                                        logger.debug("Shutting down Insteon bridge");	True
openhab/openhab-addons	9259	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0NTc5NA==	Suggested change                                                                                                    @Nullable                                                    private Socket socket;                                                    @Nullable                                                    private AdbConnection connection;                                                    private @Nullable Socket socket;                                                    private @Nullable AdbConnection connection;	False
openhab/openhab-addons	7533	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxNTQwNw==	This should work I think... But the null checker and generic types might also collide in spectacular fashion so lets cross our finger.                         Suggested change                                                                                                        final Optional<SmartherAccountHandler> maybeListener = handlers.stream().filter(l -> l.equalsThingUID(thingUID))                                                                .findFirst();                                                        return (maybeListener.isPresent()) ? maybeListener.get() : null;                                                        handlers.stream().filter(l -> l.equalsThingUID(thingUID)).findFirst().orElse(null);	True
openhab/openhab-addons	8464	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNTQxNA==	Suggested change                                                                                                        timeUpdateJob = scheduler.scheduleWithFixedDelay(() -> {                                                        timeUpdateJob = scheduler.scheduleWithFixedDelay(this::updateDateTime, .....	True
openhab/openhab-addons	7509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkzMjY0OA==	Suggested change                                                                                                                fireUpdateAndReset(matcher, groupSuffix.orElse(i + ""), Variable.thrsIdToVar(registerNumber, i));                                                                fireUpdateAndReset(matcher, groupSuffix.orElse(String.valueOf(i)), Variable.thrsIdToVar(registerNumber, i));	False
openhab/openhab-addons	7266	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxODY0Mw==	The initialize() method should return fast. No network interaction is allowed here. Schedule a task with scheduleWithFixedDelay or even better, use async HTTP client: https://www.eclipse.org/jetty/documentation/current/http-client-api.html#http-client-async	True
openhab/openhab-addons	7858	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MTc2NA==	Since this does not affect the stability of openHAB, ERROR is too much. Please reduce to WARN. The question is: if this can't be read, the binding won't work, correct? I wonder if we should throw an exception so that the binding initialization fails. Sidenote: I know the log level is wrong in onewire. Will fix that.	False
openhab/openhab-addons	8576	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTUzMDQ4Mw==	The direct use of StringBuilder can get rather verbose. So try to avoid using it when only concatenating a small number of things.                         Suggested change                                                                                                        return new StringBuilder(viewport).append(Integer.toString(size)).toString();                                                        return viewport + size;	True
openhab/openhab-addons	7651	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNDkyMQ==	Do you mean 5000? If yes: Since this is called very often (and concurrently), better schedule a job to not clog openHAB's thread pools.	True
openhab/openhab-addons	7068	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5ODM5Nw==	Suggested change                                                                                                            refreshJob = scheduler.scheduleWithFixedDelay(runnable, 0, delay, TimeUnit.SECONDS);                                                            refreshJob = scheduler.scheduleWithFixedDelay(this::refresh, 0, delay, TimeUnit.SECONDS);                                 after you move the runnable to a method	False
openliberty/open-liberty	12243	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0NzcxNQ==	Suggested change                                                                                                 * Copyright (c) 2020 IBM Corporation and others.                                                 * Copyright (c) 2011, 2020 IBM Corporation and others.	False
openmrs/openmrs-core	3279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0ODYyMw==	Suggested change                                                                                                  APIException exception = assertThrows(APIException.class, () -> order.isDiscontinued(DateUtils.parseDate("2014-11-01 11:11:13", DATE_FORMAT)));                                                     assertThat(exception.getMessage(), is(Context.getMessageSourceService().getMessage("Order.error.invalidDateStoppedAndAutoExpireDate")));                                                  APIException exception = assertThrows(APIException.class, () -> order.isDiscontinued(DateUtils.parseDate("2014-11-01 11:11:13", DATE_FORMAT)));                                                         assertThat(exception.getMessage(), is(Context.getMessageSourceService().getMessage("Order.error.invalidDateStoppedAndAutoExpireDate")));	False
opennms/opennms	3025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTMxMw==	Suggested change                                                                                                            Map<String, String> attributesForResource = cache.get(meta.getResourceId(), HashMap::new);                                                            if(attributesForResource.get(meta.getName()) == null) {                                                            Map<String, String> attributesForResource = cache.getIfPresent(meta.getResourceId());                                                            if(attributesForResource != null && attributesForResource.contains(meta.getName())) {                                 To save the allocation	True
opensearch-project/security	560	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwMDYwMg==	Suggested change                                                                                                            log.error("Roles must not be null, injected string was '{}.' Roles injection failed.", injectedUserAndRoles);                                                            log.error("Roles must be provided, injected string was '{}.' Roles injection failed.", injectedUserAndRoles);	False
oracle/graal	2674	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwMjcwNQ==	Maybe boolean withoutCompilerInvoker = ExitAfterQueryCodeGeneration.getValue() ||                                  (UseCAPCache.getValue() && ExitAfterRelocatableImageWrite.getValue()); if (!withoutCompilerInvoker) {     ... for better readability.	False
oracle/opengrok	3328	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgyNTMxMA==	Suggested change                                                                                                 * Copyright (c) 2020 Anatoly Akkerman <akkerman@gmail.com>, <anatoly.akkerman@twosigma.com>.                                                 * Copyright (c) 2020, Anatoly Akkerman <akkerman@gmail.com>, <anatoly.akkerman@twosigma.com>.	False
oracle/weblogic-kubernetes-operator	1931	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxODQwMQ==	Suggested change                                                                                                @DisplayName("Test secure nodePort service through SSL port and default-secure channel in domain CRD in a mii domain")                                                @DisplayName("Test secure nodePort service through SSL port and default-secure channel in domain CR in a mii domain")	True
palantir/atlasdb	4512	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwMTIzNw==	based on @felixdesouza's suggestion above, we can just overload get/put here. Also I'd prefer to try to avoid unqualified Map<byte[], byte[]> as it's error-prone because byte arrays by default go by reference equality	True
palantir/atlasdb	4982	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4Mjg1Ng==	Suggested change                                                                                                    private TimeLockCorruptionStatus localCorruptionState = TimeLockCorruptionStatus.HEALTHY;                                                    private volatile TimeLockCorruptionStatus localCorruptionState = TimeLockCorruptionStatus.HEALTHY;	False
palantir/atlasdb	5088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NDA5Nw==	nit: would it be cleaner to add a method on SoakingDuration where you just pass a duration and it creates it with 1 set?	False
palantir/atlasdb	4996	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyNDQ4NA==	nit: It's strange that the use case assertion is in here but the client one is not. Maybe allow the user to pass in a client to this method?	False
palantir/atlasdb	4937	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3NzczNA==	Sorry I wasn't clear, I meant that we can remove this line entirely, but it doesn't hurt anything to leave around either.	False
palantir/atlasdb	5089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5OTA3NA==	nit: no need to hyphenate here.                         Suggested change                                                                                                        // We write logs in range - [1, 500]. The first range of sequences for corruption detection = [0, 499] since                                                        // We write logs in range [1, 500]. The first range of sequences for corruption detection = [0, 499] since	False
pgmdev/pgm	270	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5Mzk0Nw==	Suggested change                                                                                                    return 0;                                                    return 20;                                 Not sure on this one, may be 30?	False
pgmdev/pgm	758	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEzMDczMg==	Suggested change                                                                                                  public Set<SelfIdentifyingFeatureDefinition> getModeList() {                                                  public ImmutableSet<Mode> getModes() {                                 And make this change across the places with this set, it's a set of Modes, not a set of any type of feature definition, also just call it getModes, and the variable in the definition modes,  it's not a list to start with (it's a set) and that's also the naming used in the xml, so easiest to keep it consistent. You also need to move this up the hierarchy in interfaces to ModeChangeGoal, replacing isAffectedByModeChanges	False
pravega/pravega	5250	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxODEyOQ==	Nit: Pravega (starting with caps).	False
pravega/pravega	4716	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU5OTQyMw==	for better clarity, rename this to metadataSegments and make it a Set of String. There's no point in this being a TableKey here.	True
pravega/pravega	4881	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNzQxNg==	There is one problem with the logic here. And i realize this same problem is present for streams too. If we filter out unauthorized tables, then the response we send back may endup being empty while there may still be more records to be read from the continuation token. So any such filtering should invoke the call with filtered-out elements and keep doing it until we have collected limit number of elements or have nothing to read anymore.	True
prestodb/presto	14728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxODk2Nw==	nit: Either put the whole statement in one line or break at both ? and :.	False
quarkusio/quarkus	7339	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwOTA0OQ==	I suggest to use <> when creating the HashSet to suppress warnings about using raw types	False
quarkusio/quarkus	7270	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTI5Mg==	@kenfinnigan can you please re-review? I took your suggestion and moved the ITs to the "main" project, which exposed a new bug on the SSL builder path in native mode. I've included the fix on these highlighted lines which mirrors what is done in org.jboss.resteasy.microprofile.client.RestClientBuilderImpl.build(Class<T>)	False
quarkusio/quarkus	13601	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTYwMA==	Why does swagger-ui stay on the main router? I understand it's an asset, but that looks not totally right.	True
quarkusio/quarkus	11669	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxMzA1Ng==	Suggested change                                                                                                        // if the number of artifacts is less then the number of files then probably                                                        // if the number of artifacts is less than the number of files then probably	False
quarkusio/quarkus	6829	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI3NjA5Nw==	Suggested change                                                                                                 * Build item that registers a listener which gets notified as soon as CDI bean container is initialized.                                                 * Build item that registers a listener which gets notified as soon as the CDI bean container is initialized.	False
reactor/reactor-core	2326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjA4OA==	Suggested change                                                                                                  * @param snapshot                                                  * Reset the Factory and Schedulers with the ones saved in a                                                   * previously {@link #setFactoryWithSnapshot(Factory) captured} snapshot.                                                  * <p>Passing {@code null} re-applies the default factory.	False
rstudio/rstudio	6787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NzQ3NA==	Nit: I think this might be frustrating to update since you have to remember to increase the pass count here whenever you add a pass below. How about just putting the input/expected values in arrays, and looping over the arrays?	True
runelite/runelite	12354	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc5NjgzNw==	This seems like it is in an odd place since it is also used outside of the colorpicker but I'm not sure where a better place would be? Maybe just duplicate it both places?	True
runelite/runelite	10866	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA0ODg4OQ==	Suggested change                                                                                                 PENSIVE("V_V")                                                 PENSIVE("V_V"),	False
runelite/runelite	11852	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzOTgyMw==	Suggested change                                                                                                  new CrypticClue("I wouldn't wear this jean on my legs.", "Father Jean", new WorldPoint(1734, 3576, 0), "Talk to father Jean in the Hosidius church"),                                                  new CrypticClue("I wouldn't wear this jean on my legs.", "Father Jean", new WorldPoint(1734, 3576, 0), "Talk to father Jean in the Hosidius church."),	False
sakaiproject/sakai	8744	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyMDQxMQ==	Suggested change                                                                                                 public void insertMember(String userId, String roleId, boolean active, boolean provided) throws IllegalStateException, AuthzRealmLockException                                                 public void insertMember(String userId, String roleId, boolean active, boolean provided) throws AuthzRealmLockException	False
smallrye/smallrye-reactive-messaging	760	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NzU0Mg==	Might be worded a bit better:  It's recommended to NOT use auto-commit and let the connector handle commits	True
smartdevicelink/sdl_java_suite	1555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1NzcwNg==	Suggested change                                                                                                        assertNotNull(alertManager.defaultMainWindowCapability);                                                        assertNotNull(alertManager.currentWindowCapability);                                 Missed during a refactor	False
sonarsource/sonar-java	3365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA4NDgxMA==	I believe it would be easier to read if we had less if/return statements by adding an helper method to retrieve the string value: ex: getStringLiteralValue	False
strimzi/strimzi-kafka-operator	3653	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2ODE3Mw==	Suggested change                                                                                                            v1beta2Create(name, mapListener(), null);                                                            Exception e = assertThrows(() -> v1beta2Create(name, mapListener(), null))	False
strimzi/strimzi-kafka-operator	2389	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxNTg0NA==	This comment is confusing. It suggests that the if bellow is for pod dependent eentry. But that seems to be the else. Please fix.	False
telstra/open-kilda	3109	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyODc0Ng==	nit: I think, "protected" visibility fits better as the method will never be invoked by other components.	True
telstra/open-kilda	3313	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0ODI5OA==	nit: This could be a part of the generatedMap.	True
telstra/open-kilda	3133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzMzk4Mg==	it can be better. You can optimize it by getting only Flow Paths of Down and Degraded flows by Neo4j. To do it you need to add new method into flowPathRepository. Something like      @Override     public Collection<FlowPath> findInactiveBySegmentSwitch(SwitchId switchId) {         Map<String, Object> parameters = ImmutableMap.of(                 "switch_id", switchIdConverter.toGraphProperty(switchId));          Set<String> pathIds = new HashSet<>();         queryForStrings("MATCH (ps_src:switch)-[:source]-(ps:path_segment)-[:destination]-(ps_dst:switch)" +                 "WHERE ps_src.name = $switch_id OR ps_dst.name = $switch_id" +                 "MATCH (f:flow)-[:owns]-(fp:flow_path)-[:owns]-(ps)" +                 "WHERE f.status = 'down' or f.status = 'degraded'" +                 "RETURN fp.path_id as path_id", parameters, "path_id").forEach(pathIds::add);          if (pathIds.isEmpty()) {             return emptyList();         }          Filter pathIdsFilter = new Filter(PATH_ID_PROPERTY_NAME, new InOperatorWithNoConverterComparison(pathIds));          return loadAll(pathIdsFilter);     }	True
temporalio/sdk-java	172	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0MTIxMw==	and is this for explicitly reporting the local activity result? if so, can we have better naming for explicit event here?	True
tensorflow/java	178	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA3OTg1NA==	Nit: there is a missing space after if	False
testcontainers/testcontainers-java	3021	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczOTk5OA==	Consider adding @With(AccessLevel.PRIVATE) to otherImageName, so that we can do:                         Suggested change                                                                                                        return new DockerImageName(rawName, registry, repo, versioning, otherImageName);                                                        return withOtherImageName(otherImageName);	True
trinodb/trino	3206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3MDkxNw==	Suggested change                                                                                                                    String message = format("User [%s] not a member of the authorized group", user);                                                                    String message = format("User [%s] not a member of an authorized group", user);	False
vaadin/flow	9676	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNzMwNQ==	Suggested change                                                                                                                throw new ExecutionFailedException(String.format(errorMessage,                                                                        themeName, frontendDirectory.getName(),                                                                        APPLICATION_THEME_ROOT));                                                                throw new ExecutionFailedException(String.format(errorMessage,                                                                        themeName, mainThemesDir));	False
vmware/singleton	878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzNTg4OQ==	In this code lines, getting supported locales from cache are executed twice. It's redundant and inefficient. Please improve the design.	False
wso2/product-microgateway	1457	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyMDUwMQ==	Suggested change                                                                                                /*                                                 *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.                                                 *                                                 *  WSO2 Inc. licenses this file to you under the Apache License,                                                 *  Version 2.0 (the "License"); you may not use this file except                                                 *  in compliance with the License.                                                 *  You may obtain a copy of the License at                                                 *                                                 *    http://www.apache.org/licenses/LICENSE-2.0                                                 *                                                 * Unless required by applicable law or agreed to in writing,                                                 * software distributed under the License is distributed on an                                                 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY                                                 * KIND, either express or implied.  See the License for the                                                 * specific language governing permissions and limitations                                                 * under the License.                                                 */                                                /*                                                 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.                                                 *                                                 * WSO2 Inc. licenses this file to you under the Apache License,                                                 * Version 2.0 (the "License"); you may not use this file except                                                 * in compliance with the License.                                                 * You may obtain a copy of the License at                                                 *                                                 *    http://www.apache.org/licenses/LICENSE-2.0                                                 *                                                 * Unless required by applicable law or agreed to in writing,                                                 * software distributed under the License is distributed on an                                                 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY                                                 * KIND, either express or implied.  See the License for the                                                 * specific language governing permissions and limitations                                                 * under the License.                                                 */	False
wso2/product-microgateway	932	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ0MjI3OQ==	Suggested change                                                                                                    @SuppressFBWarnings(value = "URF_UNREAD_FIELD")                                                                                                    @SuppressFBWarnings(value = "URF_UNREAD_FIELD")	False
yahoo/elide	1259	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5OTY0MQ==	The initialization of standalone needs to be broken up into different pieces - similar to the Elide spring beans. There should be a configuration for getting the DataStore.  This function should not be creating and managing stores - but just setting up the ElideSettings object.  Let's break this apart so it is more extensible by someone - and simpler to grock.	False
yahoo/elide	1707	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNzUzOA==	Lots of casting like this makes the code hard to read (and generally can be removed through other means).	False
