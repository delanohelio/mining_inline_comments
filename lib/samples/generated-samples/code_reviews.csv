1c-syntax/bsl-language-server	1118	2020-04-27T17:35:37Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAxMjQ0Ng==	info.getMessage() не нужно передавать	True
alibaba/nacos	3138	2020-06-22T01:46:07Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI4MjQ1Mg==	When the latch will count down?	False
antennapod/antennapod	4486	2020-10-01T21:04:01Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMjIzOA==	Does this conflict with navigating the app using a dpad? (related: #445)	True
apache/accumulo	1519	2020-02-20T14:12:39Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyMjg0Mg==	I think Optional.of will throw an exception if null, so could drop the reqNonNull.                         Suggested change                                                                                                    this(new Path(metadataEntry), Optional.of(Objects.requireNonNull(metadataEntry)));                                                    this(new Path(metadataEntry), Optional.of(metadataEntry));	False
apache/calcite	2089	2020-07-31T03:29:16Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw==	Seems the toType should always be a Decimal type, we should add a check here. Also, can we add some doc to this method ?	True
apache/camel	3944	2020-06-25T07:40:59Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NjIxMg==	Instead of a default value that is _default. Then why not leave it as null/empty and then use that to know if a custom scope was set or not	True
apache/druid	9518	2021-01-06T07:29:52Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQxMTY3MA==	nit:                         Suggested change                                                                                                 * So, This class overrides,ummm copies due to lack of extensibility, the methods from base class in order to keep                                                 * track of connection properties and call {@link MetadataStorageConnectorConfig#getPassword()} everytime a new                                                 * So, This class overrides (and largely copies due to lack of extensibility), the methods from base class in order to keep                                                 * track of connection properties and call {@link MetadataStorageConnectorConfig#getPassword()} everytime a new	False
apache/hudi	2374	2021-03-04T03:38:45Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzA1MDU3NA==	So, model package should just contain pojos i.e data structure objects. Lets move TableService elsewhere	True
apache/ignite	8483	2020-12-01T10:22:45Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4NDk0Mw==	Space before  {	True
apache/incubator-doris	3454	2020-06-12T08:20:26Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3NzUzNg==	Suggested change                                                                                                public class EsFieldInfo {                                                public class EsFieldInfos {	False
apache/kafka	9098	2020-07-30T16:39:58Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyODM5OA==	Ah, after reading your test, I now see the issue. I'd overlooked the fact that users would independently construct the table config object AND the cache. I see now that this makes it impossible to reliably capture the cache, since users have to actually choose to pass our special table config to the Options and then pass the Cache to that table config. This doesn't seem ideal. What do you think about just using reflection instead?                         Suggested change                                                                                                        if (tableFormatConfig instanceof BlockBasedTableConfigWithAccessibleCache) {                                                            final Cache cache = ((BlockBasedTableConfigWithAccessibleCache) tableFormatConfig).blockCache();                                                            metricsRecorder.addValueProviders(name, db, cache, statistics);                                                        } else {                                                            metricsRecorder.addValueProviders(name, db, null, statistics);                                                            log.warn("A table format configuration is used that does not expose the block cache. This means " +                                                                "that metrics that relate to the block cache may be wrong if the block cache is shared.");                                                        }                                                        if (tableFormatConfig instanceof BlockBasedTableConfig) {                                                            final BlockBasedTableConfig blockBasedTableConfig = (BlockBasedTableConfig) tableFormatConfig;                                                            try {                                                                final Field blockCacheField = BlockBasedTableConfig.class.getDeclaredField("blockCache_");                                                                blockCacheField.setAccessible(true);                                                                final Cache nullableBlockCache = (Cache) blockCacheField.get(blockBasedTableConfig);                                                                metricsRecorder.addValueProviders(name, db, nullableBlockCache, statistics);                                                            } catch (final NoSuchFieldException | IllegalAccessException | ClassCastException e) {                                                                log.warn("Expected to find and access field 'blockCache_' in BlockBasedTableConfig. " +                                                                             "Probably, an incompatible version of RocksDB is being used. " +                                                                             "Cache will be missing from memory metrics.", e);                                                                metricsRecorder.addValueProviders(name, db, null, statistics);                                                            }                                                        } else {                                                            metricsRecorder.addValueProviders(name, db, null, statistics);                                                        }                                 We would obviously test all the branches here to de-risk the reflection. We can also add a test that searches the classpath for implementations of TableFormatConfig to ensure we don't miss the memo if RocksDB adds a new TableFormatConfig implementation. Alternative thought, if you don't like the reflection: We would also subclass Options and override org.rocksdb.Options#setTableFormatConfig to check if the passed TableFormatConfig is a BlockBasedTableConfig, and if so, then we wrap it with BlockBasedTableConfigWithAccessibleCache.	True
apache/kylin	1065	2020-02-07T09:59:34Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNjU2Mw==	metricsInputStream  should not be closed for the same reason.	False
apache/lucene-solr	1815	2020-09-03T21:01:28Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI1MTk0Mg==	Does this mean that every call to configSet.getIndexSchema() will create a new schema object (if shared schema is not enabled)?	True
apache/nifi	4627	2020-11-18T20:01:10Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MjQ2MA==	@tlsmith109 A new ticket should be opened if we want to modify TailFile as well as the ticket is specific to FetchSFTP That being said, it looks like there is code that already makes sure this is a directory [1].  Although, at first glance I am unsure why this wasn't handled here, as your code is suggesting. [1] https://github.com/apache/nifi/blob/main/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/TailFile.java#L277	True
apache/shardingsphere	7151	2020-08-30T15:17:25Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjEyMQ==	Please use static import for Assert.assertNotNull	True
apicurio/apicurio-registry	357	2020-04-02T11:52:41Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MzY5Ng==	We need to check how they now support different types, and extend this facade accordingly.	True
artipie/artipie	675	2020-10-08T13:19:59Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcxNDA1OQ==	@genryxy I think we may move this warning to class level, as both test methods in this class have @Timeout annotations	False
aws-greengrass/aws-greengrass-nucleus	70	2020-02-21T23:43:27Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg1NjA0Mg==	just call get which will return null anyway if the key isn't in the map.	True
axelor/axelor-open-suite	5515	2020-06-15T16:30:10Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwMDQ1NQ==	concerns --> concern (no s), "and will" --> with Error messages should be defined in static variables in a separate interface.	False
axonframework/axonframework	1317	2020-01-21T17:53:00Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1MTU2OQ==	"Interesting" class name ;-)	False
azure/azure-libraries-for-java	1013	2020-02-10T01:52:06Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg0MDg5Nw==	Not sure about proxy, or any other configure with origin restClient. If you are also not sure, add a TODO?	True
azure/azure-sdk-for-android	201	2020-02-25T21:21:32Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMzM1OA==	Renamed in favor of clarity.	False
azure/azure-sdk-for-java	12733	2020-07-02T02:31:01Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxNDExNQ==	should this test be renamed too? same the description of it?	True
bakdata/conquery	1395	2020-10-19T07:54:50Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU0MzMzNQ==	Ist header param hier richtig?	True
bisq-network/bisq	4504	2020-09-09T01:00:52Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3NTgzNg==	Are httpSeed still used by default in BitcoinJ? If so I would prefer to still make sure to not use http seeds as they have some privacy issues.	True
broadinstitute/gatk	6989	2021-03-10T18:36:44Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTc3MzQyNg==	I guess from reading the algorithm that only the ordering of this value between CutData instances is important, rather than the specific value, but it still makes me a little nervous to have this be a static class variable. Would you consider having a CutDataFactory object that keeps it as an instance variable, and could be scoped into the methods that are using it? That way if we ever multithreaded this or something we'd avoid some chaos.	False
broadinstitute/picard	1581	2020-09-24T20:14:13Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDA1MQ==	MMMMMMMMMMMMMMMMMssssssssss> should be: MMMMMMMMMMMMMMMMMSsssssssss>	False
candlepin/candlepin	2799	2020-09-24T13:38:02Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMyMzU0Mg==	This is an expensive way to fetch the product information for active pools. If the goal here is to fetch products for active pools, we should do exactly that: fetch active pools and then pull the products from them in code (functionally identical to what we're doing here), or write a new curator method that fetches only products from active entitlements of a given organization.	True
catrobat/catroid	3703	2020-08-13T17:59:04Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0NDIwMA==	please delete this comment :)	False
cloudfoundry-incubator/multiapps-controller	883	2020-06-26T11:02:35Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjExNjM0NA==	Rename to parametersList	True
cmsgov/dpc-app	753	2020-04-24T04:41:54Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI4NzkyNw==	If we know for sure the ID is a rosterID, do we need to go to the trouble of using an ambiguousID parameter to getProviderIDFromRoster()?  Why not call it rosterID?	False
confluentinc/schema-registry	1614	2020-09-08T18:46:26Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTI5Mw==	nit: fix indentation	False
constellation-app/constellation	400	2020-04-06T00:51:03Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MzE5MA==	Make name final.	False
corfudb/corfudb	2829	2021-01-05T23:51:26Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2ODgyMg==	Out of curiosity, why does this need to be mocked?	True
crate/crate	10402	2020-08-19T14:18:50Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NTI1NA==	Shouldn't we do this in apply instead, to account the used bytes earlier? Or does that make the abstractions more complex?	True
datadog/dd-trace-java	1979	2020-10-13T14:40:21Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwODQzMA==	👍	False
debezium/debezium	1401	2020-04-09T19:21:27Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNDM1NA==	Might add the @ThreadSafe marker here and elsewhere potentially? I feel we got bit lenient about using those lately.	False
dimagi/commcare-android	2216	2020-04-18T19:24:09Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MDAyOA==	not sure if todo is still required ?	False
dockstore/dockstore	3751	2020-08-20T22:12:12Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMDk0Nw==	interface methods should have javadoc	False
dotcms/core	18281	2020-04-13T23:26:39Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQ0NA==	Issue found: Avoid unused imports such as 'org.mockito.Matchers'	False
eclipse-ee4j/jersey	4503	2020-09-16T14:03:19Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ2MzAxNw==	This class is duplicated. One in SSE module, one in the test module. Does it make sense to move the test from SSE module to the test module to contain just a single copy of the class?	True
eclipse/che-che4z-lsp-for-cobol	126	2020-01-06T10:56:17Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0Njk0NA==	also something wrong with copyright here	False
eclipse/kapua	3003	2020-06-18T06:34:38Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5ODA5Mg==	Please rename variable to ""houseKeeperRun".	False
eclipse/sw360	887	2020-07-03T10:52:06Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUyMDAwNg==	Add error log	True
elastic/elasticsearch	65386	2020-11-26T03:30:30Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MzgxNg==	To me it'd be clearer to completely skip collectUnmapped if we don't need to handle unmapped fields. We expect this to be the common case, and it would make it clear we won't do extra work.	False
foundationdb/fdb-record-layer	820	2020-02-17T16:19:19Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3MTgxOQ==	@alecgrieser did not raise this as an issue, so I doubt it is one, but would there be any benefit to doing this mutation only once, just before the commit of the scanned range, rather than doing it on each record scanned?  For example, in the proposed RPC interface to FDB (https://github.com/apple/foundationdb/wiki/FoundationDB-RPC-Layer-Requirements) this operation would, presumably, add a round trip each time.	True
futurewei-cloud/alcor	80	2020-01-07T22:09:02Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3NTY1OA==	minor suggestion, change to below will make it more readable (at least for me): this.dnsAssignment = (dnsAssignment == null ? null : new ArrayList<>(dnsAssignment));	True
geonetwork/core-geonetwork	4633	2020-04-24T11:10:53Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5Mjk5OQ==	Indentation	False
gluonhq/substrate	814	2020-10-21T20:29:02Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY2ODcxNQ==	Codacy found an issue: Possible unsafe assignment to a non-final static field in a constructor.	False
googlecontainertools/jib	2646	2020-07-31T15:31:40Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MDI2MA==	I didn't bother in the last PR as the overall implementation is in the transitioning state from a single image to multiple images, but given the current state, I think we should rename this to baseImagesAndRegistryClient to be consistent.	False
graylog2/graylog2-server	7725	2020-03-20T08:54:29Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMzcwNA==	just a nitpick, but wouldn't it be more readable if the private function comes after the test?	True
halo-dev/halo	835	2020-06-15T16:40:26Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwNjM3MA==	我发现 GithubUtils 中已经包含了 PREFIX，所以这里得 PREFIX 可能有些多余。	False
hhru/nuts-and-bolts	265	2020-10-13T14:20:53Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5MjgzNQ==	константы в хикари нет?	True
hyperledger/besu	296	2020-01-09T02:56:47Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUzOTkwNg==	nit: Could you force the EnclavePublicKey into the list being used to drive the query? Then no need to validate... but then, maybe it's not doing what it says on the tin ... :/	True
infinispan/infinispan	8119	2020-04-23T13:57:54Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzIwOA==	I think this could be better phrased by using a common terminology. I wouldn't know what "signal through the current thread" or "in the same caller" mean unless I already knew what addEvents does, but then I wouldn't need a comment here. The comment did make me curious though, because it says with 10 registered listeners, all of them are notified about a put(K, V) in the same batch (I think!), but it doesn't say what happens when the operation is putAll() and it updates 10 entries with 10 registered listeners.	True
iqss/dataverse	6755	2020-03-27T16:50:38Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNDAzMA==	With the update to add toolName (which is great!), I think this is no longer needed. Is that right?	True
iterable/iterable-android-sdk	284	2020-11-24T02:54:35Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2NzgxMA==	incrementAttempts?	False
jenkinsci/warnings-ng-plugin	497	2020-05-31T10:00:22Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDExNg==	Die Header könnte man noch in einen Enum packen (pro Table)	False
kiegroup/optaplanner	865	2020-09-10T20:57:48Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyOTI2Mw==	Considering that this is not a public API, I think we don't need such a comprehensive Javadoc. Feel free to keep it, but considering that everything important should be said on the public API already, this may be too much to maintain going forward, for little benefit.	False
kitodo/kitodo-production	3965	2020-08-27T07:36:37Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNzQ1NQ==	Suggested change                                                                                                        if (!Objects.nonNull(loggedUser)) {                                                        if (Objects.isNull(loggedUser)) {	False
ldtteam/minecolonies	4847	2020-05-03T10:07:42Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MDEyNw==	maybe == 19 or so? to make sure it doesnt despawn right when you spawn it	False
line/armeria	3220	2020-12-18T09:39:14Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxNDA1Ng==	Shouldn't we fail in this case? 🤔	True
linkedin/rest.li	417	2020-09-22T02:27:53Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzgxNg==	Do you mind removing this unused constant in your PR?	True
marklogic/marklogic-data-hub	4589	2020-09-30T07:23:26Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NDY3Nw==	The test keeps failing in the pipeline even though it passed in my local. I am increasing the sleep time to see of if the test passes. I will then work to see why the query isn't reliable.	True
mercadopago/px-android	2228	2020-07-14T19:05:31Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3OTY3NQ==	Pasar a camel	True
metasfresh/metasfresh	10413	2020-12-15T11:31:21Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2NjAyOQ==	pls use AdMessageKey instead of String	False
minecraftforge/minecraftforge	7176	2020-07-26T21:44:33Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzA4Nw==	There really should be a private final originalState, so there is always a clean reference to the originalState.	True
movingblocks/terasology	4335	2021-01-09T10:58:41Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDM3Mzc1MA==	Should this be Chunks.toRelative or something like that?	False
nationalsecurityagency/datawave	926	2020-12-18T15:52:43Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNDI1Ng==	Maybe 'literal' and 'literal2' to avoid 'l1'?	True
openliberty/open-liberty	14884	2020-11-09T15:03:07Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg4MDAzNA==	Can you try to make the two paths a little closer? e.g. surely you can get the spiExtensionClasses from the extensionArchive? So the code would more more like this; extensionArchive = runtimeExtensionMap.get(serviceID); if (extensionArchive == null) {     //only create a new archive, don't register any classes with the deployment     extensionArchive = newSPIExtensionArchive(sr, extension.getService(), applicationContext);     runtimeExtensionMap.put(serviceID, extensionArchive); } Set<Extension> spiExtensionClasses = extensionArchive.getExtensions(); applicationContext.registerSPIExtensions(spiExtensionClasses);	True
openmrs/openmrs-core	3184	2020-05-14T10:14:09Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyNjQ4MQ==	@dkayiwa / @ibacher what do you think, should this just be getConditionsForEncounter(Encounter) or even getConditions(Encounter)?	True
openmrs/openmrs-module-fhir2	310	2020-12-14T14:42:32Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzNjk3NQ==	I don't love swallowing random exceptions like this; I think I'd rather tend to fail the operation (i.e. just throw the exception) with the possible exception of NonUniqueResultException. That we can do something useful with if we catch it.	False
opennms/opennms	3193	2020-11-19T14:10:33Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNTQxOA==	Lovin' it	False
openrefine/openrefine	2408	2020-03-14T09:29:23Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MTM3Ng==	If value is an instance of Cell, then you should not replace it by a String. This will cause runtime type errors.	False
opentripplanner/opentripplanner	3122	2020-07-31T10:01:39Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUyMTQzNA==	In the current hsldevcom version the default value is 30000	True
osmlab/atlas-checks	411	2020-11-10T16:40:32Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwNjc4Nw==	I think this should be optional. Can we add a parameter to this method to set whether we want to include the fix suggestions? This could also be accompanied by an overloaded version of this method that enables this by default, to keep things backwards compatible. We should then also have a command argument for the upload command to set this.	True
prebid/prebid-server-java	926	2020-09-24T10:36:39Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIxMTI0Mg==	May we pass ExtUser as an argument here instead of whole User object?	False
prestodb/presto	14728	2020-08-19T19:32:39Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI3MDkwMQ==	Probably should check this in the constructor rather than here. Making sure the enum map is valid is the job of enum type constructor. It's fine if you want to have a separate utility function to check that. But for normalizeEnumEntries, it should just assume the input is already a valid enum.	False
questdb/questdb	289	2020-05-18T14:43:01Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY3NzkzMQ==	lets do in-place clear() and break	False
quickfix-j/quickfixj	288	2020-05-19T13:52:08Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxODY1Ng==	Just a nitpick: could we remove the access modifier to enable access from within the package?	False
reactor/reactor-core	2453	2020-10-29T10:53:37Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2ODYyNA==	nitpick: can be assertThat(e).hasCause(err)	False
redhataccess/pantheon	393	2020-12-01T19:46:51Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3NzMwNw==	I think this warrants some further explanation. It's easy to think that the isPresent() call applies to the child, when I think this must apply to the parent. I realized this when I was trying to get to the bottom of why your changes help to make things null-safe. For example, if you have this chain: Child.from(A) .toChild(B) .toChild(C) .toChild(D) .toChild(E) .getAsOptional()  ...and let's say that you get a null on C, then what the heck stops us from getting an NPE on the call to D? I guess the answer must be that there's some code that makes sure that once C becomes a NullChild, then the call to get D must also return a NullChild, and the same for the call down into E. The code that I have attached this comment to must be what does that. But like I said, it's easy to misread at first glance, so if I'm right then I'd like to request something that makes this look less innocuous and more critically important (which I believe it is). Maybe some enhanced javadoc, or some // INLINE COMMENTS IN ALL CAPS or something - whatever you think would be most fitting.	True
rstudio/rstudio	6849	2020-05-13T16:36:33Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NzI1Mg==	Using lambdas you can tidy this up to:             userState_.get().writeState(boolArg ->             {                userPrefs_.get().writeUserPrefs(boolArg1 ->                {                      initializeWorkbench();                });             });          }  You could drop the braces and make it more compact, but I personally find that harder to read especially when there are multiple lambda happening at once (but that's just me):             userState_.get().writeState(boolArg ->                userPrefs_.get().writeUserPrefs(boolArg1 ->                   initializeWorkbench()));	True
sage-bionetworks/synapse-repository-services	4197	2020-09-15T19:03:11Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMDM0NQ==	We might want to add a test where a hierarchy of schemas is setup and the required property overrides the parent?	False
slimefun/slimefun4	2598	2020-12-10T16:02:45Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI4OTY4OQ==	Unnecessary whiteline (unless its a style thing)	False
spinnaker/kork	639	2020-05-07T06:22:35Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2NTM2MQ==	Naming convention Q ... historically we've used OkHttpClient3 to distinguish. Is it more or less confusing not to do that here?	True
splicemachine/spliceengine	4688	2020-11-24T19:33:34Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODcyNg==	LOG.debug(message, error)	True
spongepowered/sponge	2454	2020-02-15T13:59:36Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzMzEzMw==	I don't like that this is an overwrite, to be honest, but I see why you've done it. @Zidane Should we prefer head injection and cancel in this case? I know you've done that in the past. Could also replace with a Redirect followed by a cancellable injection - but that then wanders into LVT land.	True
teamnewpipe/newpipe	3579	2020-05-13T09:47:47Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMxMjQzNA==	Same, don't duplicate, just use Localization.getPreferredLocalization(this).getLocalizationCode(); But remember that it's useless now. See #3089 (comment). So maybe we should gather app language, with Localization.getAppLocale(this).getLanguage();	True
telefonicaid/fiware-cygnus	1851	2020-04-02T10:19:32Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwNTk0NA==	There is no need to overload the costructor in this case, since mongoAuthSource has a not null validation on getDatabase.	True
tensorflow/java	30	2020-03-11T01:33:11Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMDk5OA==	Google Java Style Guide doesn't recommend the usage of wildcard imports (I personally think it is fine for static imports though)	True
townyadvanced/towny	4499	2020-12-03T01:42:17Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYwMzE2Ng==	The trailing ` will have to go.	False
unicode-org/cldr	607	2020-08-04T21:17:17Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNTY0Ng==	Set instead of List	False
vespa-engine/vespa	14120	2020-08-21T06:50:35Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ0MjE0OA==	Not where I'd necessarily expect to find a Clock, but I guess there may be reasons it's here.	False
virtualsatellite/virtualsatellite4-core	604	2020-07-06T16:39:33Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0NzA3MQ==	Suggested change                                                                                                  Path csvFilePath = Paths.get(inputPath.toString() + File.separator + JSON_FILE_NAME);                                                  Path csvFilePath = Paths.get(inputPath.toString(), JSON_FILE_NAME);	False
wildfly/wildfly	13277	2020-05-13T17:39:59Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNjI4Ng==	Since serviceBuilder is a CapabilityServiceBuilder, use: serviceBuilder.addCapabilityRequirement(Capabilities.REF_HTTP_LISTENER_REGISTRY, ListenerRegistry.class, ((HttpListenerService) service).getHttpListenerRegistry());	True
wso2-extensions/identity-inbound-auth-oauth	1468	2020-10-12T10:24:11Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE5NTgyMw==	Let's add a method comment	True
wso2/carbon-identity-framework	2938	2020-05-17T12:42:33Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI1NzA4Mw==	Shall we remove the extra line?	False
wso2/product-microgateway	1262	2020-06-02T12:07:00Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgyNTQyMw==	should be queryParam	False
zowe/api-layer	588	2020-04-17T08:00:23Z	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA1NzExNA==	Are these endpoints stable? Can't be changed in future?	True
